#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1957;
float _4338;
float _4339;
float _4340;
float _4341;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _239 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _240 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _241 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _247 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _248 = _247 * _239;
    float _249 = _247 * _240;
    float _250 = _247 * _241;
    float _260 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _261 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _262 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _266 = inversesqrt(dot(vec3(_260, _261, _262), vec3(_260, _261, _262)));
    float _267 = _266 * _260;
    float _268 = _266 * _261;
    float _269 = _266 * _262;
    float _273 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _274 = _273 * NORMAL.x;
    float _275 = _273 * NORMAL.y;
    float _276 = _273 * NORMAL.z;
    float _280 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _281 = _280 * TANGENT.x;
    float _282 = _280 * TANGENT.y;
    float _283 = _280 * TANGENT.z;
    float _287 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _288 = _287 * TANGENT_2.x;
    float _289 = _287 * TANGENT_2.y;
    float _290 = _287 * TANGENT_2.z;
    float _295;
    float _296;
    float _297;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _295 = (-0.0) - _274;
        _296 = (-0.0) - _275;
        _297 = (-0.0) - _276;
    }
    else
    {
        _295 = _274;
        _296 = _275;
        _297 = _276;
    }
    vec4 _323 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _335 = 1.0 - ((1.0 - _323.z) * 1.39999997615814208984375);
    float _4350 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
    float _336 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
    float _338 = 1.0 - ((1.0 - _323.x) * 1.39999997615814208984375);
    float _4361 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _339 = isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0));
    float _341 = 1.0 - ((1.0 - _323.y) * 1.39999997615814208984375);
    float _4372 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _342 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
    float _344 = (_339 + _336) + _342;
    float _351 = (_344 * (1.0 - cbMtdParam._m0[20u].x)) + cbMtdParam._m0[20u].x;
    float _352 = (_344 * (1.0 - cbMtdParam._m0[20u].y)) + cbMtdParam._m0[20u].y;
    float _353 = (_344 * (1.0 - cbMtdParam._m0[20u].z)) + cbMtdParam._m0[20u].z;
    vec4 _378 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _387 = 1.0 - ((1.0 - _378.x) * 1.39999997615814208984375);
    float _4383 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
    float _398 = (_388 * ((cbMtdParam._m0[9u].x - _351) + ((1.0 - cbMtdParam._m0[9u].x) * _344))) + _351;
    float _399 = (_388 * ((cbMtdParam._m0[9u].y - _352) + ((1.0 - cbMtdParam._m0[9u].y) * _344))) + _352;
    float _400 = (_388 * ((cbMtdParam._m0[9u].z - _353) + ((1.0 - cbMtdParam._m0[9u].z) * _344))) + _353;
    float _414 = 1.0 - ((1.0 - _378.y) * 1.39999997615814208984375);
    float _4394 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _415 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
    float _425 = (((cbMtdParam._m0[18u].x - _398) + ((1.0 - cbMtdParam._m0[18u].x) * _344)) * _415) + _398;
    float _426 = (((cbMtdParam._m0[18u].y - _399) + ((1.0 - cbMtdParam._m0[18u].y) * _344)) * _415) + _399;
    float _427 = (((cbMtdParam._m0[18u].z - _400) + ((1.0 - cbMtdParam._m0[18u].z) * _344)) * _415) + _400;
    float _441 = 1.0 - ((1.0 - _378.z) * 1.39999997615814208984375);
    float _4405 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _442 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
    vec4 _470 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w));
    float _472 = _470.x;
    float _473 = _472 * cbMtdParam._m0[25u].w;
    float _487 = ((cbMtdParam._m0[22u].z * (-1.39999997615814208984375)) * ((TEXCOORD_5.w - _473) + (cbMtdParam._m0[23u].y * TEXCOORD_5.w))) + 1.0;
    float _4416 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _489 = 1.0 - (isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0)));
    float _497 = ((cbMtdParam._m0[22u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5.z - _473) + (cbMtdParam._m0[23u].z * TEXCOORD_5.z))) + 1.0;
    float _4427 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _499 = 1.0 - (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0)));
    vec4 _517 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _519 = _517.x;
    float _520 = _517.y;
    float _521 = _517.z;
    float _522 = cbMtdParam._m0[10u].x * _499;
    float _524 = cbMtdParam._m0[10u].y * _499;
    float _526 = cbMtdParam._m0[10u].z * _499;
    float _542 = ((_519 * (cbMtdParam._m0[17u].x - _522)) * _489) + (_522 * _519);
    float _543 = ((_520 * (cbMtdParam._m0[17u].y - _524)) * _489) + (_524 * _520);
    float _544 = ((_521 * (cbMtdParam._m0[17u].z - _526)) * _489) + (_526 * _521);
    float _564 = cbMtdParam._m0[23u].x * (-1.39999997615814208984375);
    float _568 = (_564 * ((TEXCOORD_9.x - _473) + (cbMtdParam._m0[22u].x * TEXCOORD_9.x))) + 1.0;
    float _569 = (_564 * ((TEXCOORD_9.y - _473) + (cbMtdParam._m0[22u].x * TEXCOORD_9.y))) + 1.0;
    float _570 = (_564 * ((TEXCOORD_9.z - _473) + (cbMtdParam._m0[22u].x * TEXCOORD_9.z))) + 1.0;
    float _4438 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _4449 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _4460 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _582 = (1.0 - cbMtdParam._m0[24u].y) + _339;
    float _585 = _582 * (1.0 - (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0))));
    float _586 = _582 * (1.0 - (isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0))));
    float _587 = ((_339 + 1.0) - cbMtdParam._m0[24u].y) * (1.0 - (isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0))));
    float _597 = _499 + _489;
    float _598 = _597 + _585;
    float _599 = _597 + _586;
    float _600 = _597 + _587;
    float _601 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _602 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _603 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _604 = isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0));
    float _605 = isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0));
    float _606 = isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0));
    vec4 _624 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _629 = _624.w;
    float _630 = _624.x * cbMtdParam._m0[13u].x;
    float _631 = _624.y * cbMtdParam._m0[13u].y;
    float _632 = _624.z * cbMtdParam._m0[13u].z;
    vec4 _650 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _664 = (((_650.x * cbMtdParam._m0[14u].x) - _630) * _339) + _630;
    float _665 = (((_650.y * cbMtdParam._m0[14u].y) - _631) * _339) + _631;
    float _666 = (((_650.z * cbMtdParam._m0[14u].z) - _632) * _339) + _632;
    vec4 _684 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _698 = (((_684.x * cbMtdParam._m0[15u].x) - _664) * _342) + _664;
    float _699 = (((_684.y * cbMtdParam._m0[15u].y) - _665) * _342) + _665;
    float _700 = (((_684.z * cbMtdParam._m0[15u].z) - _666) * _342) + _666;
    vec4 _718 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _732 = (((_718.x * cbMtdParam._m0[16u].x) - _698) * _336) + _698;
    float _733 = (((_718.y * cbMtdParam._m0[16u].y) - _699) * _336) + _699;
    float _734 = (((_718.z * cbMtdParam._m0[16u].z) - _700) * _336) + _700;
    float _754 = ((_732 - (_732 * _604)) + (((_604 * 4.55000019073486328125) * ((_585 * ((cbMtdParam._m0[11u].x * _519) - _542)) + _542)) * _732)) * ((((cbMtdParam._m0[19u].x - _425) + ((1.0 - cbMtdParam._m0[19u].x) * _344)) * _442) + _425);
    float _755 = ((_733 - (_733 * _605)) + (((_605 * 4.55000019073486328125) * ((_586 * ((cbMtdParam._m0[11u].y * _520) - _543)) + _543)) * _733)) * ((((cbMtdParam._m0[19u].y - _426) + ((1.0 - cbMtdParam._m0[19u].y) * _344)) * _442) + _426);
    float _756 = ((_734 - (_606 * _734)) + (((_606 * 4.55000019073486328125) * ((_587 * ((cbMtdParam._m0[11u].z * _521) - _544)) + _544)) * _734)) * ((((cbMtdParam._m0[19u].z - _427) + ((1.0 - cbMtdParam._m0[19u].z) * _344)) * _442) + _427);
    float _762 = (((1.0 - TEXCOORD_5.y) * (-2.7999999523162841796875)) * cbMtdParam._m0[25u].y) + 1.0;
    float _4501 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _774 = ((((_472 + (-1.0)) + ((1.0 - TEXCOORD_5.x) * 2.0)) * (-1.39999997615814208984375)) * cbMtdParam._m0[25u].x) + 1.0;
    float _4512 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    vec4 _789 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _795 = (_789.x * 2.0) + (-1.0);
    float _796 = (_789.y * 2.0) + (-1.0);
    float _797 = dot(vec2(_795, _796), vec2(_795, _796));
    float _4523 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _802 = sqrt(1.0 - (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))));
    float _805 = fma(_802, _295, fma(_796, _281, _795 * _248));
    float _808 = fma(_802, _296, fma(_796, _282, _795 * _249));
    float _811 = fma(_802, _297, fma(_796, _283, _795 * _250));
    float _820 = exp2(log2(inversesqrt(dot(vec3(_805, _808, _811), vec3(_805, _808, _811))) * _808) * cbMtdParam._m0[24u].w) * cbMtdParam._m0[24u].z;
    float _4534 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _823 = ((isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) + (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0)))) * (1.0 - (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0))));
    float _4545 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _824 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
    float _826 = 3.0 - (_824 * 2.0);
    float _831 = _824 * _824;
    float _838 = ((_831 * (cbMtdParam._m0[12u].x - _754)) * _826) + _754;
    float _839 = ((_831 * (cbMtdParam._m0[12u].y - _755)) * _826) + _755;
    float _840 = ((_831 * (cbMtdParam._m0[12u].z - _756)) * _826) + _756;
    float _853 = ((cbMtdParam._m0[21u].w - cbMtdParam._m0[26u].x) * _604) + cbMtdParam._m0[26u].x;
    float _856 = ((cbMtdParam._m0[21u].x - _853) * _339) + _853;
    float _859 = ((cbMtdParam._m0[21u].y - _856) * _342) + _856;
    float _862 = ((cbMtdParam._m0[21u].z - _859) * _336) + _859;
    vec4 _874 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _878 = _874.z;
    float _881 = (_874.x * 2.0) + (-1.0);
    float _882 = (_874.y * 2.0) + (-1.0);
    float _883 = dot(vec2(_881, _882), vec2(_881, _882));
    float _4556 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _888 = sqrt(1.0 - (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))));
    float _891 = fma(_888, _295, fma(_882, _288, _881 * _267));
    float _894 = fma(_888, _296, fma(_882, _289, _881 * _268));
    float _897 = fma(_888, _297, fma(_882, _290, _881 * _269));
    float _901 = inversesqrt(dot(vec3(_891, _894, _897), vec3(_891, _894, _897)));
    float _902 = _901 * _891;
    float _903 = _901 * _894;
    float _904 = _901 * _897;
    vec4 _917 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_18, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _924 = (_917.x * 2.0) + (-1.0);
    float _925 = (_917.y * 2.0) + (-1.0);
    float _926 = dot(vec2(_924, _925), vec2(_924, _925));
    float _4567 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _934 = ((_917.z - _878) * _823) + _878;
    vec4 _947 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _953 = (_947.x * 2.0) + (-1.0);
    float _954 = (_947.y * 2.0) + (-1.0);
    float _955 = dot(vec2(_953, _954), vec2(_953, _954));
    float _4578 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _960 = sqrt(1.0 - (isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))));
    float _963 = fma(_960, _295, fma(_954, _288, _953 * _267));
    float _966 = fma(_960, _296, fma(_954, _289, _953 * _268));
    float _969 = fma(_960, _297, fma(_954, _290, _953 * _269));
    float _973 = inversesqrt(dot(vec3(_963, _966, _969), vec3(_963, _966, _969)));
    float _974 = _973 * _963;
    float _975 = _973 * _966;
    float _976 = _973 * _969;
    float _979 = fma(_976, _250, fma(_975, _249, _974 * _248));
    float _982 = fma(_976, _283, fma(_975, _282, _974 * _281));
    float _985 = fma(_976, _297, fma(_975, _296, _974 * _295));
    float _989 = inversesqrt(dot(vec3(_979, _982, _985), vec3(_979, _982, _985)));
    vec4 _1002 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _1008 = (_1002.x * 2.0) + (-1.0);
    float _1009 = (_1002.y * 2.0) + (-1.0);
    float _1010 = dot(vec2(_1008, _1009), vec2(_1008, _1009));
    float _4589 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1015 = sqrt(1.0 - (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0))));
    float _1018 = fma(_1015, _295, fma(_1009, _288, _1008 * _267));
    float _1021 = fma(_1015, _296, fma(_1009, _289, _1008 * _268));
    float _1024 = fma(_1015, _297, fma(_1009, _290, _1008 * _269));
    float _1028 = inversesqrt(dot(vec3(_1018, _1021, _1024), vec3(_1018, _1021, _1024)));
    float _1029 = _1028 * _1018;
    float _1030 = _1028 * _1021;
    float _1031 = _1028 * _1024;
    float _1034 = fma(_1031, _250, fma(_1030, _249, _1029 * _248));
    float _1037 = fma(_1031, _283, fma(_1030, _282, _1029 * _281));
    float _1040 = fma(_1031, _297, fma(_1030, _296, _1029 * _295));
    float _1044 = inversesqrt(dot(vec3(_1034, _1037, _1040), vec3(_1034, _1037, _1040)));
    vec4 _1059 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1065 = (_1059.x * 2.0) + (-1.0);
    float _1066 = (_1059.y * 2.0) + (-1.0);
    float _1067 = dot(vec2(_1065, _1066), vec2(_1065, _1066));
    float _4600 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1072 = sqrt(1.0 - (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))));
    float _1075 = fma(_1072, _295, fma(_1066, _288, _1065 * _267));
    float _1078 = fma(_1072, _296, fma(_1066, _289, _1065 * _268));
    float _1081 = fma(_1072, _297, fma(_1066, _290, _1065 * _269));
    float _1085 = inversesqrt(dot(vec3(_1075, _1078, _1081), vec3(_1075, _1078, _1081)));
    float _1086 = _1085 * _1075;
    float _1087 = _1085 * _1078;
    float _1088 = _1085 * _1081;
    float _1091 = fma(_1088, _250, fma(_1087, _249, _1086 * _248));
    float _1094 = fma(_1088, _283, fma(_1087, _282, _1086 * _281));
    float _1097 = fma(_1088, _297, fma(_1087, _296, _1086 * _295));
    float _1101 = inversesqrt(dot(vec3(_1091, _1094, _1097), vec3(_1091, _1094, _1097)));
    float _1107 = fma(_904, _250, fma(_903, _249, _902 * _248));
    float _1110 = fma(_904, _283, fma(_903, _282, _902 * _281));
    float _1113 = fma(_904, _297, fma(_903, _296, _902 * _295));
    float _1117 = inversesqrt(dot(vec3(_1107, _1110, _1113), vec3(_1107, _1110, _1113)));
    float _1118 = _1117 * _1107;
    float _1119 = _1117 * _1110;
    float _1120 = _1117 * _1113;
    float _1127 = (((_1101 * _1091) - _1118) * _339) + _1118;
    float _1128 = (((_1101 * _1094) - _1119) * _339) + _1119;
    float _1129 = (((_1101 * _1097) - _1120) * _339) + _1120;
    vec4 _1142 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _1148 = (_1142.x * 2.0) + (-1.0);
    float _1149 = (_1142.y * 2.0) + (-1.0);
    float _1150 = dot(vec2(_1148, _1149), vec2(_1148, _1149));
    float _4611 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _1155 = sqrt(1.0 - (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))));
    float _1158 = fma(_1155, _295, fma(_1149, _288, _1148 * _267));
    float _1161 = fma(_1155, _296, fma(_1149, _289, _1148 * _268));
    float _1164 = fma(_1155, _297, fma(_1149, _290, _1148 * _269));
    float _1168 = inversesqrt(dot(vec3(_1158, _1161, _1164), vec3(_1158, _1161, _1164)));
    float _1169 = _1168 * _1158;
    float _1170 = _1168 * _1161;
    float _1171 = _1168 * _1164;
    float _1174 = fma(_1171, _250, fma(_1170, _249, _1169 * _248));
    float _1177 = fma(_1171, _283, fma(_1170, _282, _1169 * _281));
    float _1180 = fma(_1171, _297, fma(_1170, _296, _1169 * _295));
    float _1184 = inversesqrt(dot(vec3(_1174, _1177, _1180), vec3(_1174, _1177, _1180)));
    float _1194 = (((_1184 * _1174) - _1127) * _342) + _1127;
    float _1195 = (((_1184 * _1177) - _1128) * _342) + _1128;
    float _1196 = (((_1184 * _1180) - _1129) * _342) + _1129;
    vec4 _1209 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1215 = (_1209.x * 2.0) + (-1.0);
    float _1216 = (_1209.y * 2.0) + (-1.0);
    float _1217 = dot(vec2(_1215, _1216), vec2(_1215, _1216));
    float _4622 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
    float _1222 = sqrt(1.0 - (isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))));
    float _1225 = fma(_1222, _295, fma(_1216, _288, _1215 * _267));
    float _1228 = fma(_1222, _296, fma(_1216, _289, _1215 * _268));
    float _1231 = fma(_1222, _297, fma(_1216, _290, _1215 * _269));
    float _1235 = inversesqrt(dot(vec3(_1225, _1228, _1231), vec3(_1225, _1228, _1231)));
    float _1236 = _1235 * _1225;
    float _1237 = _1235 * _1228;
    float _1238 = _1235 * _1231;
    float _1241 = fma(_1238, _250, fma(_1237, _249, _1236 * _248));
    float _1244 = fma(_1238, _283, fma(_1237, _282, _1236 * _281));
    float _1247 = fma(_1238, _297, fma(_1237, _296, _1236 * _295));
    float _1251 = inversesqrt(dot(vec3(_1241, _1244, _1247), vec3(_1241, _1244, _1247)));
    float _1261 = (((_1251 * _1247) - _1196) * _336) + _1196;
    vec4 _1273 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1279 = (_1273.x * 2.0) + (-1.0);
    float _1280 = (_1273.y * 2.0) + (-1.0);
    float _1281 = dot(vec2(_1279, _1280), vec2(_1279, _1280));
    float _4633 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
    float _1286 = sqrt(1.0 - (isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0))));
    float _1289 = fma(_1286, _295, fma(_1280, _288, _1279 * _267));
    float _1292 = fma(_1286, _296, fma(_1280, _289, _1279 * _268));
    float _1295 = fma(_1286, _297, fma(_1280, _290, _1279 * _269));
    float _1299 = inversesqrt(dot(vec3(_1289, _1292, _1295), vec3(_1289, _1292, _1295)));
    float _1300 = _1299 * _1289;
    float _1301 = _1299 * _1292;
    float _1302 = _1299 * _1295;
    float _1305 = fma(_1302, _250, fma(_1301, _249, _1300 * _248));
    float _1308 = fma(_1302, _283, fma(_1301, _282, _1300 * _281));
    float _1311 = fma(_1302, _297, fma(_1301, _296, _1300 * _295));
    float _1315 = inversesqrt(dot(vec3(_1305, _1308, _1311), vec3(_1305, _1308, _1311)));
    float _1348 = (((((((_1034 * _489) * _1044) * cbMtdParam._m0[23u].w) + ((((_598 * _582) * _979) * _989) * cbMtdParam._m0[24u].x)) + _1194) + (((_1251 * _1241) - _1194) * _336)) + (((_1305 * _499) * _1315) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _795);
    float _1353 = (((((((_1037 * _489) * _1044) * cbMtdParam._m0[23u].w) + ((((_599 * _582) * _982) * _989) * cbMtdParam._m0[24u].x)) + _1195) + (((_1251 * _1244) - _1195) * _336)) + (((_1308 * _499) * _1315) * cbMtdParam._m0[22u].w)) + (cbMtdParam._m0[25u].z * _796);
    float _1360 = ((_924 - _1348) * _823) + _1348;
    float _1361 = (_823 * (_925 - _1353)) + _1353;
    float _1362 = (_823 * (sqrt(1.0 - (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0)))) - _1261)) + _1261;
    float _1365 = fma(_1362, _295, fma(_1361, _281, _1360 * _248));
    float _1368 = fma(_1362, _296, fma(_1361, _282, _1360 * _249));
    float _1371 = fma(_1362, _297, fma(_1361, _283, _1360 * _250));
    float _1375 = inversesqrt(dot(vec3(_1365, _1368, _1371), vec3(_1365, _1368, _1371)));
    float _1376 = _1375 * _1365;
    float _1377 = _1375 * _1368;
    float _1378 = _1375 * _1371;
    float _4644 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _1379 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
    float _4655 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _1380 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
    float _4666 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _4677 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _4688 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _4699 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _1384 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
    float _1400 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1440 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1450 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1440);
    float _1451 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1440);
    float _1452 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1440);
    float _1456 = inversesqrt(dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452)));
    float _1457 = _1450 * _1456;
    float _1458 = _1451 * _1456;
    float _1459 = _1452 * _1456;
    vec4 _1464 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1466 = _1464.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1637 = sqrt(((_1450 * _1450) + (_1451 * _1451)) + (_1452 * _1452));
        float _1643 = (cbMatDynParam._m0[5u].x * _1637) + cbMatDynParam._m0[5u].y;
        float _4710 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1644 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
        float _1648 = (cbMatDynParam._m0[5u].z * _1637) + cbMatDynParam._m0[5u].w;
        float _4721 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0))) - _1644)) + _1644) < ((_1466 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1477 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1478 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1496 = fma(_1378, cbSceneParam._m0[5u].z, fma(_1377, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1376));
    float _1499 = fma(_1378, cbSceneParam._m0[6u].z, fma(_1377, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1376));
    float _1502 = fma(_1378, cbSceneParam._m0[7u].z, fma(_1377, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1376));
    uint _1515 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1516 = _1515 + 9u;
    uint _1517 = _1516 + uint(cbMatDynParam._m0[0u].w);
    float _1523 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0)))) * cbInstanceData._m0[_1517].x;
    float _1524 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0)))) * cbInstanceData._m0[_1517].y;
    float _1525 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0)))) * cbInstanceData._m0[_1517].z;
    float _4732 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    float _1526 = isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0));
    float _4743 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
    float _1527 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
    float _4754 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
    float _1528 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
    float _1529 = 1.0 - _1384;
    float _1530 = _1526 * _1529;
    float _1531 = _1527 * _1529;
    float _1532 = _1528 * _1529;
    float _1537 = (_1526 + (-0.039999999105930328369140625)) * _1384;
    float _1538 = (_1527 + (-0.039999999105930328369140625)) * _1384;
    float _1539 = (_1528 + (-0.039999999105930328369140625)) * _1384;
    float _1540 = _1537 + 0.039999999105930328369140625;
    float _1542 = _1538 + 0.039999999105930328369140625;
    float _1543 = _1539 + 0.039999999105930328369140625;
    vec4 _1552 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1477, cbSceneParam._m0[86u].y * _1478));
    float _1555 = _1552.x * TEXCOORD_9.w;
    float _1556 = dot(vec3(_1376, _1377, _1378), vec3(_1457, _1458, _1459));
    float _1559 = _1556 * 2.0;
    float _1563 = (_1559 * _1376) - _1457;
    float _1564 = (_1559 * _1377) - _1458;
    float _1565 = (_1559 * _1378) - _1459;
    float _1569 = abs(dot(vec3(_1457, _1458, _1459), vec3(_1376, _1377, _1378)));
    float _4765 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
    float _1571 = sqrt(_1380);
    float _1583 = exp2((_1571 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1571 * 3.0));
    float _1589 = (1.0 - _1583) * ((_1571 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1590 = _1583 * _1571;
    float _1618 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1622 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1626 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1956;
    float _1958;
    float _1959;
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1681 = fma(_1626, cbModelParam._m0[26u].z, fma(_1622, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1618));
        float _1685 = fma(_1626, cbModelParam._m0[27u].z, fma(_1622, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1618));
        float _1689 = fma(_1626, cbModelParam._m0[28u].z, fma(_1622, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1618));
        float _1714 = _1618 + _1376;
        float _1715 = _1622 + _1377;
        float _1716 = _1626 + _1378;
        float _1726 = fma(_1716, cbModelParam._m0[26u].z, fma(_1715, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1714)) - _1681;
        float _1727 = fma(_1716, cbModelParam._m0[27u].z, fma(_1715, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1714)) - _1685;
        float _1728 = fma(_1716, cbModelParam._m0[28u].z, fma(_1715, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1714)) - _1689;
        float _1732 = inversesqrt(dot(vec3(_1726, _1727, _1728), vec3(_1726, _1727, _1728)));
        float _1745 = ((_1732 * _1726) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1681 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1746 = ((_1732 * _1727) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1685 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1747 = ((_1732 * _1728) / cbModelParam._m0[34u].z) + ((((((_1689 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1750 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1745, _1746, _1747), 0.0);
        vec4 _1757 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1745, _1746, _1747), 0.0);
        vec4 _1764 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1745, _1746, _1747), 0.0);
        vec4 _1771 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1745, _1746, _1747), 0.0);
        float _1784 = exp2((_1750.w + (-0.5)) * 20.0) * 2.0;
        float _1785 = _1784 * (_1750.x + (-0.5));
        float _1786 = _1784 * (_1750.y + (-0.5));
        float _1787 = _1784 * (_1750.z + (-0.5));
        float _1794 = exp2((_1757.w + (-0.5)) * 20.0) * 2.0;
        float _1795 = _1794 * (_1757.x + (-0.5));
        float _1796 = _1794 * (_1757.y + (-0.5));
        float _1797 = _1794 * (_1757.z + (-0.5));
        float _1804 = exp2((_1764.w + (-0.5)) * 20.0) * 2.0;
        float _1805 = _1804 * (_1764.x + (-0.5));
        float _1806 = _1804 * (_1764.y + (-0.5));
        float _1807 = _1804 * (_1764.z + (-0.5));
        float _1814 = exp2((_1771.w + (-0.5)) * 20.0) * 2.0;
        float _1815 = _1814 * (_1771.x + (-0.5));
        float _1816 = _1814 * (_1771.y + (-0.5));
        float _1817 = _1814 * (_1771.z + (-0.5));
        float _1818 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1819 = isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0));
        float _1820 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1821 = _1785 * 0.5;
        float _1822 = _1795 * 0.5;
        float _1823 = _1805 * 0.5;
        float _1824 = dot(vec3(_1821, _1822, _1823), vec3(_1821, _1822, _1823));
        float _1829 = (_1824 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1824);
        float _1838 = (dot(vec3(_1376, _1377, _1378), vec3(_1829 * _1821, _1829 * _1822, _1829 * _1823)) + 1.0) * 0.5;
        float _4791 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
        float _1848 = sqrt(((_1822 * _1822) + (_1821 * _1821)) + (_1823 * _1823)) / (_1818 + 9.9999997473787516355514526367188e-06);
        float _4802 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
        float _1849 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
        float _1850 = _1849 * 2.0;
        float _1854 = (1.0 - _1849) / (_1849 + 1.0);
        float _4813 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
        float _1855 = isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0));
        float _1864 = ((((1.0 - _1855) * (_1850 + 2.0)) * exp2(log2(isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * (_1850 + 1.0))) + _1855) * _1818;
        float _1865 = _1786 * 0.5;
        float _1866 = _1796 * 0.5;
        float _1867 = _1806 * 0.5;
        float _1868 = dot(vec3(_1865, _1866, _1867), vec3(_1865, _1866, _1867));
        float _1873 = (_1868 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1868);
        float _1881 = (dot(vec3(_1376, _1377, _1378), vec3(_1873 * _1865, _1873 * _1866, _1873 * _1867)) + 1.0) * 0.5;
        float _4824 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
        float _1890 = sqrt(((_1866 * _1866) + (_1865 * _1865)) + (_1867 * _1867)) / (_1819 + 9.9999997473787516355514526367188e-06);
        float _4835 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1891 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _1892 = _1891 * 2.0;
        float _1896 = (1.0 - _1891) / (_1891 + 1.0);
        float _4846 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
        float _1897 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
        float _1906 = ((((1.0 - _1897) * (_1892 + 2.0)) * exp2(log2(isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0))) * (_1892 + 1.0))) + _1897) * _1819;
        float _1907 = _1787 * 0.5;
        float _1908 = _1797 * 0.5;
        float _1909 = _1807 * 0.5;
        float _1910 = dot(vec3(_1907, _1908, _1909), vec3(_1907, _1908, _1909));
        float _1915 = (_1910 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1910);
        float _1923 = (dot(vec3(_1376, _1377, _1378), vec3(_1915 * _1907, _1915 * _1908, _1915 * _1909)) + 1.0) * 0.5;
        float _4857 = isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0));
        float _1932 = sqrt(((_1908 * _1908) + (_1907 * _1907)) + (_1909 * _1909)) / (_1820 + 9.9999997473787516355514526367188e-06);
        float _4868 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
        float _1933 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
        float _1934 = _1933 * 2.0;
        float _1938 = (1.0 - _1933) / (_1933 + 1.0);
        float _4879 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _1939 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
        float _1948 = ((((1.0 - _1939) * (_1934 + 2.0)) * exp2(log2(isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_1934 + 1.0))) + _1939) * _1820;
        _1956 = _1787;
        _1958 = _1786;
        _1959 = _1785;
        _1960 = _1797;
        _1961 = _1796;
        _1962 = _1795;
        _1963 = _1807;
        _1964 = _1806;
        _1965 = _1805;
        _1966 = _1820;
        _1967 = _1819;
        _1968 = _1818;
        _1969 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0)));
        _1970 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0)));
        _1971 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0)));
    }
    else
    {
        _1956 = _1957;
        _1958 = _1957;
        _1959 = _1957;
        _1960 = _1957;
        _1961 = _1957;
        _1962 = _1957;
        _1963 = _1957;
        _1964 = _1957;
        _1965 = _1957;
        _1966 = _1957;
        _1967 = _1957;
        _1968 = _1957;
        _1969 = 0.0;
        _1970 = 0.0;
        _1971 = 0.0;
    }
    float _2269;
    float _2270;
    float _2271;
    float _2272;
    float _2273;
    float _2274;
    float _2275;
    float _2276;
    float _2277;
    float _2278;
    float _2279;
    float _2280;
    float _2281;
    float _2282;
    float _2283;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _2000 = fma(_1626, cbModelParam._m0[30u].z, fma(_1622, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1618));
        float _2004 = fma(_1626, cbModelParam._m0[31u].z, fma(_1622, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1618));
        float _2008 = fma(_1626, cbModelParam._m0[32u].z, fma(_1622, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1618));
        float _2031 = _1618 + _1376;
        float _2032 = _1622 + _1377;
        float _2033 = _1626 + _1378;
        float _2043 = fma(_2033, cbModelParam._m0[30u].z, fma(_2032, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _2031)) - _2000;
        float _2044 = fma(_2033, cbModelParam._m0[31u].z, fma(_2032, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _2031)) - _2004;
        float _2045 = fma(_2033, cbModelParam._m0[32u].z, fma(_2032, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _2031)) - _2008;
        float _2049 = inversesqrt(dot(vec3(_2043, _2044, _2045), vec3(_2043, _2044, _2045)));
        float _2062 = ((_2049 * _2043) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_2000 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2063 = ((_2049 * _2044) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_2004 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2064 = ((_2049 * _2045) / cbModelParam._m0[35u].z) + ((((((_2008 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2066 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2062, _2063, _2064), 0.0);
        vec4 _2073 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2062, _2063, _2064), 0.0);
        vec4 _2080 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2062, _2063, _2064), 0.0);
        vec4 _2087 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2062, _2063, _2064), 0.0);
        float _2099 = exp2((_2066.w + (-0.5)) * 20.0) * 2.0;
        float _2100 = _2099 * (_2066.x + (-0.5));
        float _2101 = _2099 * (_2066.y + (-0.5));
        float _2102 = _2099 * (_2066.z + (-0.5));
        float _2109 = exp2((_2073.w + (-0.5)) * 20.0) * 2.0;
        float _2110 = _2109 * (_2073.x + (-0.5));
        float _2111 = _2109 * (_2073.y + (-0.5));
        float _2112 = _2109 * (_2073.z + (-0.5));
        float _2119 = exp2((_2080.w + (-0.5)) * 20.0) * 2.0;
        float _2120 = _2119 * (_2080.x + (-0.5));
        float _2121 = _2119 * (_2080.y + (-0.5));
        float _2122 = _2119 * (_2080.z + (-0.5));
        float _2129 = exp2((_2087.w + (-0.5)) * 20.0) * 2.0;
        float _2130 = _2129 * (_2087.x + (-0.5));
        float _2131 = _2129 * (_2087.y + (-0.5));
        float _2132 = _2129 * (_2087.z + (-0.5));
        float _2133 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
        float _2134 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2135 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
        float _2136 = _2100 * 0.5;
        float _2137 = _2110 * 0.5;
        float _2138 = _2120 * 0.5;
        float _2139 = dot(vec3(_2136, _2137, _2138), vec3(_2136, _2137, _2138));
        float _2144 = (_2139 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2139);
        float _2152 = (dot(vec3(_1376, _1377, _1378), vec3(_2144 * _2136, _2144 * _2137, _2144 * _2138)) + 1.0) * 0.5;
        float _4920 = isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0));
        float _2161 = sqrt(((_2137 * _2137) + (_2136 * _2136)) + (_2138 * _2138)) / (_2133 + 9.9999997473787516355514526367188e-06);
        float _4931 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
        float _2162 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
        float _2163 = _2162 * 2.0;
        float _2167 = (1.0 - _2162) / (_2162 + 1.0);
        float _4942 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
        float _2168 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
        float _2177 = ((((1.0 - _2168) * (_2163 + 2.0)) * exp2(log2(isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0))) * (_2163 + 1.0))) + _2168) * _2133;
        float _2178 = _2101 * 0.5;
        float _2179 = _2111 * 0.5;
        float _2180 = _2121 * 0.5;
        float _2181 = dot(vec3(_2178, _2179, _2180), vec3(_2178, _2179, _2180));
        float _2186 = (_2181 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2181);
        float _2194 = (dot(vec3(_1376, _1377, _1378), vec3(_2186 * _2178, _2186 * _2179, _2186 * _2180)) + 1.0) * 0.5;
        float _4953 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
        float _2203 = sqrt(((_2179 * _2179) + (_2178 * _2178)) + (_2180 * _2180)) / (_2134 + 9.9999997473787516355514526367188e-06);
        float _4964 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
        float _2204 = isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0));
        float _2205 = _2204 * 2.0;
        float _2209 = (1.0 - _2204) / (_2204 + 1.0);
        float _4975 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
        float _2210 = isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0));
        float _2219 = ((((1.0 - _2210) * (_2205 + 2.0)) * exp2(log2(isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0))) * (_2205 + 1.0))) + _2210) * _2134;
        float _2220 = _2102 * 0.5;
        float _2221 = _2112 * 0.5;
        float _2222 = _2122 * 0.5;
        float _2223 = dot(vec3(_2220, _2221, _2222), vec3(_2220, _2221, _2222));
        float _2228 = (_2223 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2223);
        float _2236 = (dot(vec3(_1376, _1377, _1378), vec3(_2228 * _2220, _2228 * _2221, _2228 * _2222)) + 1.0) * 0.5;
        float _4986 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
        float _2245 = sqrt(((_2221 * _2221) + (_2220 * _2220)) + (_2222 * _2222)) / (_2135 + 9.9999997473787516355514526367188e-06);
        float _4997 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
        float _2246 = isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0));
        float _2247 = _2246 * 2.0;
        float _2251 = (1.0 - _2246) / (_2246 + 1.0);
        float _5008 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2252 = isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0));
        float _2261 = ((((1.0 - _2252) * (_2247 + 2.0)) * exp2(log2(isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0))) * (_2247 + 1.0))) + _2252) * _2135;
        _2269 = _2102;
        _2270 = _2101;
        _2271 = _2100;
        _2272 = _2112;
        _2273 = _2111;
        _2274 = _2110;
        _2275 = _2122;
        _2276 = _2121;
        _2277 = _2120;
        _2278 = _2135;
        _2279 = _2134;
        _2280 = _2133;
        _2281 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2177 : (isnan(_2177) ? 0.0 : max(_2177, 0.0)));
        _2282 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0)));
        _2283 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0)));
    }
    else
    {
        _2269 = _1957;
        _2270 = _1957;
        _2271 = _1957;
        _2272 = _1957;
        _2273 = _1957;
        _2274 = _1957;
        _2275 = _1957;
        _2276 = _1957;
        _2277 = _1957;
        _2278 = _1957;
        _2279 = _1957;
        _2280 = _1957;
        _2281 = 0.0;
        _2282 = 0.0;
        _2283 = 0.0;
    }
    float _2293 = (cbModelParam._m0[1u].x * (_2281 - _1969)) + _1969;
    float _2294 = (cbModelParam._m0[1u].x * (_2282 - _1970)) + _1970;
    float _2295 = (cbModelParam._m0[1u].x * (_2283 - _1971)) + _1971;
    float _2316 = fma(_2295, cbSceneParam._m0[89u].z, fma(_2294, cbSceneParam._m0[89u].y, _2293 * cbSceneParam._m0[89u].x));
    float _2319 = fma(_2295, cbSceneParam._m0[90u].z, fma(_2294, cbSceneParam._m0[90u].y, _2293 * cbSceneParam._m0[90u].x));
    float _2322 = fma(_2295, cbSceneParam._m0[91u].z, fma(_2294, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2293));
    float _2337 = _1563 * 0.5;
    float _2338 = _1564 * 0.5;
    float _2339 = _1565 * 0.5;
    float _2340 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_2271, _2274, _2277, _2280));
    float _2343 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_2270, _2273, _2276, _2279));
    float _2346 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_2269, _2272, _2275, _2278));
    float _2380;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2353 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_1956, _1960, _1963, _1966));
        float _2357 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_1958, _1961, _1964, _1967));
        float _2361 = dot(vec4(_2337, _2338, _2339, 1.0), vec4(_1959, _1962, _1965, _1968));
        float _2368 = dot(vec4(cbModelParam._m0[39u]), vec4(_2337, _2338, _2339, 1.0));
        _2380 = dot(vec3(isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0)), isnan(0.0) ? _2357 : (isnan(_2357) ? 0.0 : max(_2357, 0.0)), isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2368) ? 0.0 : (isnan(0.0) ? _2368 : max(0.0, _2368))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2380 = 1.0;
    }
    float _2391;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2382 = dot(vec4(cbModelParam._m0[40u]), vec4(_2337, _2338, _2339, 1.0));
        _2391 = dot(vec3(isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0)), isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0)), isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2382) ? 0.0 : (isnan(0.0) ? _2382 : max(0.0, _2382))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2391 = 1.0;
    }
    float _2395 = (_2391 * cbModelParam._m0[1u].x) + (_2380 * (1.0 - cbModelParam._m0[1u].x));
    float _2405 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1380);
    float _2406 = isnan(_2405) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2405 : min(cbModelParam._m0[25u].z, _2405));
    float _2486;
    float _2488;
    float _2490;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2453 = fma(_1626, cbModelParam._m0[13u].z, fma(_1622, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1618)) + cbModelParam._m0[13u].w;
        float _2457 = fma(_1626, cbModelParam._m0[14u].z, fma(_1622, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1618)) + cbModelParam._m0[14u].w;
        float _2461 = fma(_1626, cbModelParam._m0[15u].z, fma(_1622, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1618)) + cbModelParam._m0[15u].w;
        float _2464 = fma(_1565, cbModelParam._m0[13u].z, fma(_1564, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1563));
        float _2467 = fma(_1565, cbModelParam._m0[14u].z, fma(_1564, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1563));
        float _2470 = fma(_1565, cbModelParam._m0[15u].z, fma(_1564, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1563));
        float _2498;
        if (_2464 > 0.0)
        {
            _2498 = abs((1.0 - _2453) / _2464);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2464 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2453 + 1.0) / _2464);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2498 = frontier_phi_19_17_ladder;
        }
        float _2700;
        if (_2467 > 0.0)
        {
            _2700 = abs((1.0 - _2457) / _2467);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2467 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2457 + 1.0) / _2467);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2700 = frontier_phi_28_24_ladder;
        }
        float _2954;
        if (_2470 > 0.0)
        {
            _2954 = abs((1.0 - _2461) / _2470);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2470 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2461 + 1.0) / _2470);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2954 = frontier_phi_40_35_ladder;
        }
        float _2956 = isnan(_2700) ? _2498 : (isnan(_2498) ? _2700 : min(_2498, _2700));
        float _2957 = isnan(_2954) ? _2956 : (isnan(_2956) ? _2954 : min(_2956, _2954));
        float _2961 = (_2957 * _2464) + _2453;
        float _2962 = (_2957 * _2467) + _2457;
        float _2963 = (_2957 * _2470) + _2461;
        float _2964 = _2957 * 9.9999997473787516355514526367188e-05;
        float _2966 = (-1.0) - _2964;
        float _2968 = _2964 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2963 > _2968) || ((_2963 < _2966) || ((_2962 > _2968) || ((_2962 < _2966) || ((_2961 < _2966) || (_2961 > _2968))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3091 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2963, cbModelParam._m0[9u].z, fma(_2962, cbModelParam._m0[9u].y, _2961 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2963, cbModelParam._m0[10u].z, fma(_2962, cbModelParam._m0[10u].y, _2961 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2963, cbModelParam._m0[11u].z, fma(_2962, cbModelParam._m0[11u].y, _2961 * cbModelParam._m0[11u].x))), _2406);
            frontier_phi_18_40_ladder = _3091.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _3091.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _3091.x * cbModelParam._m0[1u].y;
        }
        _2486 = frontier_phi_18_40_ladder_2;
        _2488 = frontier_phi_18_40_ladder_1;
        _2490 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2474 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1563, _1564, _1565), _2406);
        _2486 = _2474.x * cbModelParam._m0[1u].y;
        _2488 = _2474.y * cbModelParam._m0[1u].y;
        _2490 = _2474.z * cbModelParam._m0[1u].y;
    }
    float _2494 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1380);
    float _2495 = isnan(_2494) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2494 : min(cbModelParam._m0[25u].w, _2494));
    float _2584;
    float _2586;
    float _2588;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2548 = fma(_1626, cbModelParam._m0[21u].z, fma(_1622, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1618)) + cbModelParam._m0[21u].w;
        float _2552 = fma(_1626, cbModelParam._m0[22u].z, fma(_1622, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1618)) + cbModelParam._m0[22u].w;
        float _2556 = fma(_1626, cbModelParam._m0[23u].z, fma(_1622, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1618)) + cbModelParam._m0[23u].w;
        float _2559 = fma(_1565, cbModelParam._m0[21u].z, fma(_1564, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1563));
        float _2562 = fma(_1565, cbModelParam._m0[22u].z, fma(_1564, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1563));
        float _2565 = fma(_1565, cbModelParam._m0[23u].z, fma(_1564, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1563));
        float _2705;
        if (_2559 > 0.0)
        {
            _2705 = abs((1.0 - _2548) / _2559);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2559 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2548 + 1.0) / _2559);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2705 = frontier_phi_30_26_ladder;
        }
        float _2981;
        if (_2562 > 0.0)
        {
            _2981 = abs((1.0 - _2552) / _2562);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2562 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2552 + 1.0) / _2562);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2981 = frontier_phi_42_37_ladder;
        }
        float _3194;
        if (_2565 > 0.0)
        {
            _3194 = abs((1.0 - _2556) / _2565);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_2565 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_2556 + 1.0) / _2565);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _3194 = frontier_phi_51_48_ladder;
        }
        float _3196 = isnan(_2981) ? _2705 : (isnan(_2705) ? _2981 : min(_2705, _2981));
        float _3197 = isnan(_3194) ? _3196 : (isnan(_3196) ? _3194 : min(_3196, _3194));
        float _3201 = (_3197 * _2559) + _2548;
        float _3202 = (_3197 * _2562) + _2552;
        float _3203 = (_3197 * _2565) + _2556;
        float _3204 = _3197 * 9.9999997473787516355514526367188e-05;
        float _3205 = (-1.0) - _3204;
        float _3207 = _3204 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_3203 > _3207) || ((_3203 < _3205) || ((_3202 > _3207) || ((_3202 < _3205) || ((_3201 < _3205) || (_3201 > _3207))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3403 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3203, cbModelParam._m0[17u].z, fma(_3202, cbModelParam._m0[17u].y, _3201 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3203, cbModelParam._m0[18u].z, fma(_3202, cbModelParam._m0[18u].y, _3201 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3203, cbModelParam._m0[19u].z, fma(_3202, cbModelParam._m0[19u].y, _3201 * cbModelParam._m0[19u].x))), _2495);
            frontier_phi_27_51_ladder = _3403.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _3403.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _3403.x * cbModelParam._m0[1u].z;
        }
        _2584 = frontier_phi_27_51_ladder_2;
        _2586 = frontier_phi_27_51_ladder_1;
        _2588 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _2568 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1563, _1564, _1565), _2495);
        _2584 = _2568.x * cbModelParam._m0[1u].z;
        _2586 = _2568.y * cbModelParam._m0[1u].z;
        _2588 = _2568.z * cbModelParam._m0[1u].z;
    }
    float _2601 = (((_1589 * _1540) + _1590) * _1555) * ((cbModelParam._m0[1u].w * (_2584 - _2486)) + _2486);
    float _2603 = (((_1589 * _1542) + _1590) * _1555) * ((cbModelParam._m0[1u].w * (_2586 - _2488)) + _2488);
    float _2605 = (((_1589 * _1543) + _1590) * _1555) * ((cbModelParam._m0[1u].w * (_2588 - _2490)) + _2490);
    float _2608 = fma(_2605, cbSceneParam._m0[89u].z, fma(_2603, cbSceneParam._m0[89u].y, _2601 * cbSceneParam._m0[89u].x));
    float _2611 = fma(_2605, cbSceneParam._m0[90u].z, fma(_2603, cbSceneParam._m0[90u].y, _2601 * cbSceneParam._m0[90u].x));
    float _2614 = fma(_2605, cbSceneParam._m0[91u].z, fma(_2603, cbSceneParam._m0[91u].y, _2601 * cbSceneParam._m0[91u].x));
    uvec4 _2624 = floatBitsToUint(cbInstanceData._m0[_1515 + 5u]);
    uint _2626 = _2624.x * 14u;
    uint _2627 = _2626 + 13u;
    float _2634 = _1555 + (-1.0);
    float _2639 = (cbLight._m0[_2627].x * _2634) + 1.0;
    float _2640 = (cbLight._m0[_2627].y * _2634) + 1.0;
    float _2641 = (cbLight._m0[_2627].z * _2634) + 1.0;
    float _2642 = (cbLight._m0[_2627].w * _2634) + 1.0;
    uint _2643 = _2626 + 5u;
    float _2649 = isnan(1.0) ? _2640 : (isnan(_2640) ? 1.0 : min(_2640, 1.0));
    uint _2653 = _2626 + 4u;
    float _2659 = isnan(1.0) ? _2639 : (isnan(_2639) ? 1.0 : min(_2639, 1.0));
    uint _2663 = _2626 | 1u;
    float _2674 = dot(vec3(cbLight._m0[_2626].xyz), vec3(_1376, _1377, _1378));
    float _2677 = dot(vec3(cbLight._m0[_2663].xyz), vec3(_1376, _1377, _1378));
    float _5144 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
    float _5155 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2682 = (isnan(1.0) ? _5144 : (isnan(_5144) ? 1.0 : min(_5144, 1.0))) * 0.3183098733425140380859375;
    float _2684 = (isnan(1.0) ? _5155 : (isnan(_5155) ? 1.0 : min(_5155, 1.0))) * 0.3183098733425140380859375;
    float _2691 = ((cbLight._m0[_2643].x * _2649) * _2684) + ((cbLight._m0[_2653].x * _2659) * _2682);
    float _2692 = ((_2649 * cbLight._m0[_2643].y) * _2684) + ((_2659 * cbLight._m0[_2653].y) * _2682);
    float _2693 = ((_2649 * cbLight._m0[_2643].z) * _2684) + ((_2659 * cbLight._m0[_2653].z) * _2682);
    uvec4 _2697 = floatBitsToUint(cbLight._m0[_2626 + 12u]);
    bool _2699 = _2697.x == 0u;
    float _2710;
    float _2712;
    float _2714;
    if (_2699)
    {
        _2710 = _2691;
        _2712 = _2692;
        _2714 = _2693;
    }
    else
    {
        uint _2718 = _2626 + 6u;
        float _2734 = (dot(vec3(cbLight._m0[_2626 + 2u].xyz), vec3(_1376, _1377, _1378)) * 0.5) + 0.5;
        float _2735 = _2734 * _2734;
        float _5166 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
        float _2736 = isnan(1.0) ? _5166 : (isnan(_5166) ? 1.0 : min(_5166, 1.0));
        float _2737 = isnan(1.0) ? _2641 : (isnan(_2641) ? 1.0 : min(_2641, 1.0));
        _2710 = (((cbLight._m0[_2718].x * 0.3183098733425140380859375) * _2736) * _2737) + _2691;
        _2712 = (((cbLight._m0[_2718].y * 0.3183098733425140380859375) * _2736) * _2737) + _2692;
        _2714 = (((cbLight._m0[_2718].z * 0.3183098733425140380859375) * _2736) * _2737) + _2693;
    }
    bool _2717 = _2697.y == 0u;
    float _2755;
    float _2757;
    float _2759;
    if (_2717)
    {
        _2755 = _2710;
        _2757 = _2712;
        _2759 = _2714;
    }
    else
    {
        uint _2925 = _2626 + 7u;
        float _2941 = (dot(vec3(cbLight._m0[_2626 + 3u].xyz), vec3(_1376, _1377, _1378)) * 0.5) + 0.5;
        float _2942 = _2941 * _2941;
        float _5182 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
        float _2943 = isnan(1.0) ? _5182 : (isnan(_5182) ? 1.0 : min(_5182, 1.0));
        float _2944 = isnan(1.0) ? _2642 : (isnan(_2642) ? 1.0 : min(_2642, 1.0));
        _2755 = (((cbLight._m0[_2925].x * 0.3183098733425140380859375) * _2943) * _2944) + _2710;
        _2757 = (((cbLight._m0[_2925].y * 0.3183098733425140380859375) * _2943) * _2944) + _2712;
        _2759 = (((cbLight._m0[_2925].z * 0.3183098733425140380859375) * _2943) * _2944) + _2714;
    }
    uint _2762 = _2626 + 8u;
    float _2775 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2626].w)) * _1380) * 0.949999988079071044921875);
    float _2776 = _2775 * _2775;
    float _2777 = cbLight._m0[_2626].x + _1457;
    float _2778 = cbLight._m0[_2626].y + _1458;
    float _2779 = cbLight._m0[_2626].z + _1459;
    float _2783 = inversesqrt(dot(vec3(_2777, _2778, _2779), vec3(_2777, _2778, _2779)));
    float _2784 = _2783 * _2777;
    float _2785 = _2783 * _2778;
    float _2786 = _2783 * _2779;
    float _2787 = dot(vec3(_1376, _1377, _1378), vec3(cbLight._m0[_2626].xyz));
    float _5198 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
    float _2790 = isnan(1.0) ? _5198 : (isnan(_5198) ? 1.0 : min(_5198, 1.0));
    float _5209 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
    float _2791 = isnan(1.0) ? _5209 : (isnan(_5209) ? 1.0 : min(_5209, 1.0));
    float _2792 = dot(vec3(_1376, _1377, _1378), vec3(_2784, _2785, _2786));
    float _5220 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
    float _2795 = isnan(1.0) ? _5220 : (isnan(_5220) ? 1.0 : min(_5220, 1.0));
    float _2796 = dot(vec3(cbLight._m0[_2626].xyz), vec3(_2784, _2785, _2786));
    float _5231 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
    float _2800 = _2776 * _2776;
    float _2804 = ((_2795 * _2795) * (_2800 + (-1.0))) + 1.0;
    float _2812 = exp2(log2(1.0 - (isnan(1.0) ? _5231 : (isnan(_5231) ? 1.0 : min(_5231, 1.0)))) * 5.0);
    float _2813 = 0.959999978542327880859375 - _1537;
    float _2815 = 0.959999978542327880859375 - _1538;
    float _2816 = 0.959999978542327880859375 - _1539;
    float _2823 = 1.0 - _2776;
    float _2834 = (0.5 / (((_2791 * ((_2790 * _2823) + _2776)) + 9.9999999392252902907785028219223e-09) + (((_2791 * _2823) + _2776) * _2790))) * _2790;
    float _5242 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
    float _2836 = (isnan(1.0) ? _5242 : (isnan(_5242) ? 1.0 : min(_5242, 1.0))) * (_2800 / ((_2804 * _2804) * 3.141590118408203125));
    uint _2847 = _2626 + 9u;
    float _2858 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2663].w)) * _1380) * 0.949999988079071044921875);
    float _2859 = _2858 * _2858;
    float _2860 = cbLight._m0[_2663].x + _1457;
    float _2861 = cbLight._m0[_2663].y + _1458;
    float _2862 = cbLight._m0[_2663].z + _1459;
    float _2866 = inversesqrt(dot(vec3(_2860, _2861, _2862), vec3(_2860, _2861, _2862)));
    float _2867 = _2866 * _2860;
    float _2868 = _2866 * _2861;
    float _2869 = _2866 * _2862;
    float _2870 = dot(vec3(_1376, _1377, _1378), vec3(cbLight._m0[_2663].xyz));
    float _5253 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
    float _2873 = isnan(1.0) ? _5253 : (isnan(_5253) ? 1.0 : min(_5253, 1.0));
    float _2874 = dot(vec3(_1376, _1377, _1378), vec3(_2867, _2868, _2869));
    float _5264 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
    float _2877 = isnan(1.0) ? _5264 : (isnan(_5264) ? 1.0 : min(_5264, 1.0));
    float _2878 = dot(vec3(cbLight._m0[_2663].xyz), vec3(_2867, _2868, _2869));
    float _5275 = isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0));
    float _2882 = _2859 * _2859;
    float _2886 = ((_2877 * _2877) * (_2882 + (-1.0))) + 1.0;
    float _2893 = exp2(log2(1.0 - (isnan(1.0) ? _5275 : (isnan(_5275) ? 1.0 : min(_5275, 1.0)))) * 5.0);
    float _2900 = 1.0 - _2859;
    float _2910 = (0.5 / (((_2791 * ((_2873 * _2900) + _2859)) + 9.9999999392252902907785028219223e-09) + (((_2791 * _2900) + _2859) * _2873))) * _2873;
    float _5286 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
    float _2912 = (isnan(1.0) ? _5286 : (isnan(_5286) ? 1.0 : min(_5286, 1.0))) * (_2882 / ((_2886 * _2886) * 3.141590118408203125));
    float _2922 = (((((_2893 * _2813) + _1540) * cbLight._m0[_2847].x) * _2912) * _2649) + (((((_2812 * _2813) + _1540) * cbLight._m0[_2762].x) * _2836) * _2659);
    float _2923 = (((((_2893 * _2815) + _1542) * cbLight._m0[_2847].y) * _2912) * _2649) + (((((_2812 * _2815) + _1542) * cbLight._m0[_2762].y) * _2836) * _2659);
    float _2924 = (((((_2893 * _2816) + _1543) * cbLight._m0[_2847].z) * _2912) * _2649) + (((((_2812 * _2816) + _1543) * cbLight._m0[_2762].z) * _2836) * _2659);
    float _2986;
    float _2988;
    float _2990;
    if (_2699)
    {
        _2986 = _2922;
        _2988 = _2923;
        _2990 = _2924;
    }
    else
    {
        uint _2992 = _2626 + 2u;
        uint _2996 = _2626 + 10u;
        float _3010 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2992].w)) * _1380) * 0.949999988079071044921875);
        float _3011 = _3010 * _3010;
        float _3012 = cbLight._m0[_2992].x + _1457;
        float _3013 = cbLight._m0[_2992].y + _1458;
        float _3014 = cbLight._m0[_2992].z + _1459;
        float _3018 = inversesqrt(dot(vec3(_3012, _3013, _3014), vec3(_3012, _3013, _3014)));
        float _3019 = _3018 * _3012;
        float _3020 = _3018 * _3013;
        float _3021 = _3018 * _3014;
        float _3022 = dot(vec3(_1376, _1377, _1378), vec3(cbLight._m0[_2992].xyz));
        float _5297 = isnan(0.0) ? _3022 : (isnan(_3022) ? 0.0 : max(_3022, 0.0));
        float _3025 = isnan(1.0) ? _5297 : (isnan(_5297) ? 1.0 : min(_5297, 1.0));
        float _3026 = dot(vec3(_1376, _1377, _1378), vec3(_3019, _3020, _3021));
        float _5308 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0));
        float _3029 = isnan(1.0) ? _5308 : (isnan(_5308) ? 1.0 : min(_5308, 1.0));
        float _3030 = dot(vec3(cbLight._m0[_2992].xyz), vec3(_3019, _3020, _3021));
        float _5319 = isnan(0.0) ? _3030 : (isnan(_3030) ? 0.0 : max(_3030, 0.0));
        float _3034 = _3011 * _3011;
        float _3038 = ((_3029 * _3029) * (_3034 + (-1.0))) + 1.0;
        float _3045 = exp2(log2(1.0 - (isnan(1.0) ? _5319 : (isnan(_5319) ? 1.0 : min(_5319, 1.0)))) * 5.0);
        float _3052 = 1.0 - _3011;
        float _3062 = (0.5 / (((_2791 * ((_3025 * _3052) + _3011)) + 9.9999999392252902907785028219223e-09) + (((_2791 * _3052) + _3011) * _3025))) * _3025;
        float _5330 = isnan(0.0) ? _3062 : (isnan(_3062) ? 0.0 : max(_3062, 0.0));
        float _3064 = (isnan(1.0) ? _5330 : (isnan(_5330) ? 1.0 : min(_5330, 1.0))) * (_3034 / ((_3038 * _3038) * 3.141590118408203125));
        float _3065 = isnan(1.0) ? _2641 : (isnan(_2641) ? 1.0 : min(_2641, 1.0));
        _2986 = (((((_3045 * _2813) + _1540) * cbLight._m0[_2996].x) * _3064) * _3065) + _2922;
        _2988 = (((((_3045 * _2815) + _1542) * cbLight._m0[_2996].y) * _3064) * _3065) + _2923;
        _2990 = (((((_3045 * _2816) + _1543) * cbLight._m0[_2996].z) * _3064) * _3065) + _2924;
    }
    float _3100;
    float _3102;
    float _3104;
    if (_2717)
    {
        _3100 = _2986;
        _3102 = _2988;
        _3104 = _2990;
    }
    else
    {
        uint _3111 = _2626 + 3u;
        uint _3115 = _2626 + 11u;
        float _3129 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3111].w)) * _1380) * 0.949999988079071044921875);
        float _3130 = _3129 * _3129;
        float _3131 = cbLight._m0[_3111].x + _1457;
        float _3132 = cbLight._m0[_3111].y + _1458;
        float _3133 = cbLight._m0[_3111].z + _1459;
        float _3137 = inversesqrt(dot(vec3(_3131, _3132, _3133), vec3(_3131, _3132, _3133)));
        float _3138 = _3137 * _3131;
        float _3139 = _3137 * _3132;
        float _3140 = _3137 * _3133;
        float _3141 = dot(vec3(_1376, _1377, _1378), vec3(cbLight._m0[_3111].xyz));
        float _5346 = isnan(0.0) ? _3141 : (isnan(_3141) ? 0.0 : max(_3141, 0.0));
        float _3144 = isnan(1.0) ? _5346 : (isnan(_5346) ? 1.0 : min(_5346, 1.0));
        float _3145 = dot(vec3(_1376, _1377, _1378), vec3(_3138, _3139, _3140));
        float _5357 = isnan(0.0) ? _3145 : (isnan(_3145) ? 0.0 : max(_3145, 0.0));
        float _3148 = isnan(1.0) ? _5357 : (isnan(_5357) ? 1.0 : min(_5357, 1.0));
        float _3149 = dot(vec3(cbLight._m0[_3111].xyz), vec3(_3138, _3139, _3140));
        float _5368 = isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : max(_3149, 0.0));
        float _3153 = _3130 * _3130;
        float _3157 = ((_3148 * _3148) * (_3153 + (-1.0))) + 1.0;
        float _3164 = exp2(log2(1.0 - (isnan(1.0) ? _5368 : (isnan(_5368) ? 1.0 : min(_5368, 1.0)))) * 5.0);
        float _3171 = 1.0 - _3130;
        float _3181 = (0.5 / (((_2791 * ((_3144 * _3171) + _3130)) + 9.9999999392252902907785028219223e-09) + (((_2791 * _3171) + _3130) * _3144))) * _3144;
        float _5379 = isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0));
        float _3183 = (isnan(1.0) ? _5379 : (isnan(_5379) ? 1.0 : min(_5379, 1.0))) * (_3153 / ((_3157 * _3157) * 3.141590118408203125));
        float _3184 = isnan(1.0) ? _2642 : (isnan(_2642) ? 1.0 : min(_2642, 1.0));
        _3100 = (((((_3164 * _2813) + _1540) * cbLight._m0[_3115].x) * _3183) * _3184) + _2986;
        _3102 = (((((_3164 * _2815) + _1542) * cbLight._m0[_3115].y) * _3183) * _3184) + _2988;
        _3104 = (((((_3164 * _2816) + _1543) * cbLight._m0[_3115].z) * _3183) * _3184) + _2990;
    }
    float _3318;
    float _3320;
    float _3322;
    float _3324;
    float _3326;
    float _3328;
    if (_2624.y == 0u)
    {
        float _3259 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3260 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3259;
        float _3261 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3259;
        float _3262 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3259;
        uvec4 _3274 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3275 = _3274.x;
        uint _3286 = uint((float(_3274.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1478) / _3275))) + floor(float(uint(cbSceneParam._m0[85u].x * _1477) / _3275)));
        float _3296 = (log2(_3262 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3297 = isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0));
        uint _3300 = uint(isnan(14.0) ? _3297 : (isnan(_3297) ? 14.0 : min(_3297, 14.0)));
        uvec4 _3305 = texelFetch(g_lightClusterGridBuffer, int(((_3300 << 2u) + (_3286 << 6u)) >> 2u));
        uint _3306 = _3305.x;
        uint _3307 = _3274.z;
        float _3408;
        float _3410;
        float _3412;
        float _3414;
        float _3416;
        float _3418;
        if (((((1u << ((_3307 >> 4u) & 15u)) + 4294967295u) & _3306) == 0u) || ((_3307 & 240u) == 0u))
        {
            _3408 = 0.0;
            _3410 = 0.0;
            _3412 = 0.0;
            _3414 = 0.0;
            _3416 = 0.0;
            _3418 = 0.0;
        }
        else
        {
            float _3409;
            float _3411;
            float _3413;
            float _3415;
            float _3417;
            float _3419;
            float _3560 = 0.0;
            float _3561 = 0.0;
            float _3562 = 0.0;
            float _3563 = 0.0;
            float _3564 = 0.0;
            float _3565 = 0.0;
            uint _3566 = 0u;
            uint _3575;
            bool _3576;
            for (;;)
            {
                _3575 = texelFetch(g_lightClassification, int((((_3300 << 5u) + (_3286 << 9u)) + (_3566 << 2u)) >> 2u)).x;
                _3576 = _3575 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3576)
                {
                    frontier_phi_68_pred = _3562;
                    frontier_phi_68_pred_1 = _3565;
                    frontier_phi_68_pred_2 = _3564;
                    frontier_phi_68_pred_3 = _3563;
                    frontier_phi_68_pred_4 = _3561;
                    frontier_phi_68_pred_5 = _3560;
                }
                else
                {
                    float _3705;
                    float _3706;
                    float _3707;
                    float _3708;
                    float _3709;
                    float _3710;
                    uint _3711;
                    _3705 = _3560;
                    _3706 = _3561;
                    _3707 = _3562;
                    _3708 = _3563;
                    _3709 = _3564;
                    _3710 = _3565;
                    _3711 = _3575;
                    float _3632;
                    float _3633;
                    float _3634;
                    float _3635;
                    float _3636;
                    float _3637;
                    for (;;)
                    {
                        uint _3715 = uint(findLSB(_3711)) + (_3566 << 5u);
                        uint _3712 = (_3711 + 4294967295u) & _3711;
                        uint _3717 = _3715 * 48u;
                        vec4 _3731 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3717)).x, texelFetch(g_PointLightRenderingBuffer, int(_3717 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3717 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3717 + 3u)).x));
                        uint _3737 = (_3715 * 48u) + 4u;
                        vec4 _3750 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3737)).x, texelFetch(g_PointLightRenderingBuffer, int(_3737 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3737 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3737 + 3u)).x));
                        uint _3756 = (_3715 * 48u) + 8u;
                        vec3 _3767 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3756)).x, texelFetch(g_PointLightRenderingBuffer, int(_3756 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3756 + 2u)).x));
                        float _3771 = _3731.x - _3260;
                        float _3772 = _3731.y - _3261;
                        float _3773 = _3731.z - _3262;
                        float _3774 = dot(vec3(_3771, _3772, _3773), vec3(_3771, _3772, _3773));
                        float _3777 = inversesqrt(_3774);
                        float _3778 = _3777 * _3771;
                        float _3779 = _3777 * _3772;
                        float _3780 = _3777 * _3773;
                        float _3781 = dot(vec3(_1496, _1499, _1502), vec3(_3778, _3779, _3780));
                        float _3786 = 1.0 - (_3774 * _3731.w);
                        float _5405 = isnan(0.0) ? _3786 : (isnan(_3786) ? 0.0 : max(_3786, 0.0));
                        float _3787 = isnan(1.0) ? _5405 : (isnan(_5405) ? 1.0 : min(_5405, 1.0));
                        float _3788 = sqrt(_3774) * _3750.w;
                        float _3790 = 1.39999997615814208984375 / (_3788 + 1.39999997615814208984375);
                        float _3791 = _3790 * _3790;
                        float _3794 = ((1.0 - _3791) * _3781) + _3791;
                        float _3797 = _3788 * _3788;
                        float _3801 = ((isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0))) * _3787) / ((_3797 * 0.699999988079071044921875) + 1.0);
                        float _3805 = (-0.0) - _3260;
                        float _3806 = (-0.0) - _3261;
                        float _3807 = (-0.0) - _3262;
                        float _3811 = inversesqrt(dot(vec3(_3805, _3806, _3807), vec3(_3805, _3806, _3807)));
                        float _3812 = _3811 * _3805;
                        float _3813 = _3811 * _3806;
                        float _3814 = _3811 * _3807;
                        float _3822 = exp2(log2(1.0 / ((_3797 * 3.5) + 5.0)) * 0.25);
                        float _3823 = 1.0 - _1571;
                        float _3830 = sqrt(1.0 - ((1.0 - (_3823 * _3823)) * (1.0 - (_3822 * _3822))));
                        float _3831 = _3830 * _3830;
                        float _3832 = _3831 * _3831;
                        float _3833 = _3812 + _3778;
                        float _3834 = _3813 + _3779;
                        float _3835 = _3814 + _3780;
                        float _3839 = inversesqrt(dot(vec3(_3833, _3834, _3835), vec3(_3833, _3834, _3835)));
                        float _3843 = dot(vec3(_1496, _1499, _1502), vec3(_3812, _3813, _3814));
                        float _5421 = isnan(0.0) ? _3843 : (isnan(_3843) ? 0.0 : max(_3843, 0.0));
                        float _3846 = isnan(1.0) ? _5421 : (isnan(_5421) ? 1.0 : min(_5421, 1.0));
                        float _3847 = dot(vec3(_1496, _1499, _1502), vec3(_3839 * _3833, _3839 * _3834, _3839 * _3835));
                        float _5432 = isnan(0.0) ? _3847 : (isnan(_3847) ? 0.0 : max(_3847, 0.0));
                        float _3850 = isnan(1.0) ? _5432 : (isnan(_5432) ? 1.0 : min(_5432, 1.0));
                        float _3854 = ((_3850 * _3850) * (_3832 + (-1.0))) + 1.0;
                        float _3855 = _3790 * _3831;
                        float _3856 = _3855 * _3855;
                        float _3859 = ((1.0 - _3856) * _3781) + _3856;
                        float _5443 = isnan(0.0) ? _3859 : (isnan(_3859) ? 0.0 : max(_3859, 0.0));
                        float _3860 = isnan(1.0) ? _5443 : (isnan(_5443) ? 1.0 : min(_5443, 1.0));
                        float _3861 = 1.0 - _3831;
                        float _3871 = (0.5 / (((_3860 * ((_3846 * _3861) + _3831)) + 9.9999999392252902907785028219223e-09) + (((_3860 * _3861) + _3831) * _3846))) * _3860;
                        float _5454 = isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0));
                        float _3882 = (((_3832 * 3.1415927410125732421875) * (isnan(1.0) ? _5454 : (isnan(_5454) ? 1.0 : min(_5454, 1.0)))) / ((_3854 * _3854) * ((_3797 * 2.1991131305694580078125) + 3.141590118408203125))) * _3787;
                        _3635 = (_3801 * _3750.x) + _3708;
                        _3636 = (_3801 * _3750.y) + _3709;
                        _3637 = (_3801 * _3750.z) + _3710;
                        _3632 = (_3882 * _3767.x) + _3705;
                        _3633 = (_3882 * _3767.y) + _3706;
                        _3634 = (_3882 * _3767.z) + _3707;
                        if (_3712 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3705 = _3632;
                            _3706 = _3633;
                            _3707 = _3634;
                            _3708 = _3635;
                            _3709 = _3636;
                            _3710 = _3637;
                            _3711 = _3712;
                        }
                    }
                    frontier_phi_68_pred = _3634;
                    frontier_phi_68_pred_1 = _3637;
                    frontier_phi_68_pred_2 = _3636;
                    frontier_phi_68_pred_3 = _3635;
                    frontier_phi_68_pred_4 = _3633;
                    frontier_phi_68_pred_5 = _3632;
                }
                _3413 = frontier_phi_68_pred;
                _3419 = frontier_phi_68_pred_1;
                _3417 = frontier_phi_68_pred_2;
                _3415 = frontier_phi_68_pred_3;
                _3411 = frontier_phi_68_pred_4;
                _3409 = frontier_phi_68_pred_5;
                uint _3567 = _3566 + 1u;
                if (_3567 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3560 = _3409;
                    _3561 = _3411;
                    _3562 = _3413;
                    _3563 = _3415;
                    _3564 = _3417;
                    _3565 = _3419;
                    _3566 = _3567;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3408 = _3409;
            _3410 = _3411;
            _3412 = _3413;
            _3414 = _3415;
            _3416 = _3417;
            _3418 = _3419;
        }
        uvec4 _3422 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3423 = _3422.z;
        uint _3425 = (_3423 >> 8u) & 15u;
        float _3528;
        float _3530;
        float _3532;
        float _3534;
        float _3536;
        float _3538;
        if (((4294967295u << _3425) & _3306) == 0u)
        {
            _3528 = _3408;
            _3530 = _3410;
            _3532 = _3412;
            _3534 = _3414;
            _3536 = _3416;
            _3538 = _3418;
        }
        else
        {
            float _3553 = inversesqrt(dot(vec3(_3260, _3261, _3262), vec3(_3260, _3261, _3262)));
            float _3554 = _3553 * _3260;
            float _3555 = _3553 * _3261;
            float _3556 = _3553 * _3262;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3425 < ((_3423 >> 12u) & 15u))
            {
                float _3529;
                float _3531;
                float _3533;
                float _3535;
                float _3537;
                float _3539;
                float _3688 = _3408;
                float _3689 = _3410;
                float _3690 = _3412;
                float _3691 = _3414;
                float _3692 = _3416;
                float _3693 = _3418;
                uint _3694 = _3425;
                uint _3703;
                bool _3704;
                for (;;)
                {
                    _3703 = texelFetch(g_lightClassification, int((((_3300 << 5u) + (_3286 << 9u)) + (_3694 << 2u)) >> 2u)).x;
                    _3704 = _3703 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3704)
                    {
                        frontier_phi_79_pred = _3693;
                        frontier_phi_79_pred_1 = _3692;
                        frontier_phi_79_pred_2 = _3691;
                        frontier_phi_79_pred_3 = _3690;
                        frontier_phi_79_pred_4 = _3689;
                        frontier_phi_79_pred_5 = _3688;
                    }
                    else
                    {
                        float _3896;
                        float _3897;
                        float _3898;
                        float _3899;
                        float _3900;
                        float _3901;
                        float _4189;
                        float _4190;
                        float _4191;
                        float _4192;
                        float _4193;
                        float _4194;
                        float _3909 = _3688;
                        float _3910 = _3689;
                        float _3911 = _3690;
                        float _3912 = _3691;
                        float _3913 = _3692;
                        float _3914 = _3693;
                        uint _3915 = _3703;
                        uint _3916;
                        vec4 _3941;
                        float _3942;
                        vec4 _3957;
                        vec3 _3969;
                        vec4 _3984;
                        vec4 _3999;
                        float _4045;
                        bool _4046;
                        for (;;)
                        {
                            uint _3926 = ((_3694 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3915));
                            _3916 = (_3915 + 4294967295u) & _3915;
                            uint _3928 = _3926 * 40u;
                            _3941 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3928)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 3u)).x));
                            _3942 = _3941.w;
                            uint _3944 = (_3926 * 40u) + 4u;
                            _3957 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3944)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3944 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3944 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3944 + 3u)).x));
                            uint _3959 = (_3926 * 40u) + 8u;
                            _3969 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3959)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3959 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3959 + 2u)).x));
                            uint _3971 = (_3926 * 40u) + 16u;
                            _3984 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3971)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3971 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3971 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3971 + 3u)).x));
                            uint _3986 = (_3926 * 40u) + 20u;
                            _3999 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3986)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3986 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3986 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3986 + 3u)).x));
                            uint _4001 = (_3926 * 40u) + 24u;
                            vec4 _4014 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4001)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4001 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4001 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4001 + 3u)).x));
                            uint _4020 = (_3926 * 40u) + 28u;
                            vec4 _4033 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4020)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 3u)).x));
                            _4045 = fma(_3262, _4033.z, fma(_3261, _4033.y, _4033.x * _3260)) + _4033.w;
                            _4046 = !((fma(_3262, _4014.z, fma(_3261, _4014.y, _4014.x * _3260)) + _4014.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_4046)
                            {
                                float _4073 = _3941.x - _3260;
                                float _4074 = _3941.y - _3261;
                                float _4075 = _3941.z - _3262;
                                float _4076 = dot(vec3(_4073, _4074, _4075), vec3(_4073, _4074, _4075));
                                float _4079 = inversesqrt(_4076);
                                float _4080 = _4079 * _4073;
                                float _4081 = _4079 * _4074;
                                float _4082 = _4079 * _4075;
                                float _4086 = 1.0 - (_4076 / (_3942 * _3942));
                                float _5465 = isnan(0.0) ? _4086 : (isnan(_4086) ? 0.0 : max(_4086, 0.0));
                                float _4087 = isnan(1.0) ? _5465 : (isnan(_5465) ? 1.0 : min(_5465, 1.0));
                                float _4091 = sqrt(_4076) * _3957.w;
                                float _4093 = 1.39999997615814208984375 / (_4091 + 1.39999997615814208984375);
                                float _4094 = _4093 * _4093;
                                float _4097 = ((1.0 - _4094) * dot(vec3(_4080, _4081, _4082), vec3(_1496, _1499, _1502))) + _4094;
                                float _4100 = _4091 * _4091;
                                float _4104 = (fma(_3262, _3984.z, fma(_3261, _3984.y, _3984.x * _3260)) + _3984.w) / _4045;
                                float _4105 = (fma(_3262, _3999.z, fma(_3261, _3999.y, _3999.x * _3260)) + _3999.w) / _4045;
                                float _4109 = 1.0 - dot(vec2(_4104, _4105), vec2(_4104, _4105));
                                float _5481 = isnan(0.0) ? _4109 : (isnan(_4109) ? 0.0 : max(_4109, 0.0));
                                float _4110 = isnan(1.0) ? _5481 : (isnan(_5481) ? 1.0 : min(_5481, 1.0));
                                float _4111 = _4110 * (((isnan(0.0) ? _4097 : (isnan(_4097) ? 0.0 : max(_4097, 0.0))) * _4087) / ((_4100 * 0.699999988079071044921875) + 1.0));
                                float _4123 = exp2(log2(1.0 / ((_4100 * 3.5) + 5.0)) * 0.25);
                                float _4124 = 1.0 - _1571;
                                float _4131 = sqrt(1.0 - ((1.0 - (_4124 * _4124)) * (1.0 - (_4123 * _4123))));
                                float _4132 = _4131 * _4131;
                                float _4133 = _4132 * _4132;
                                float _4134 = _4080 - _3554;
                                float _4135 = _4081 - _3555;
                                float _4136 = _4082 - _3556;
                                float _4140 = inversesqrt(dot(vec3(_4134, _4135, _4136), vec3(_4134, _4135, _4136)));
                                float _4144 = dot(vec3(_1496, _1499, _1502), vec3((-0.0) - _3554, (-0.0) - _3555, (-0.0) - _3556));
                                float _5492 = isnan(0.0) ? _4144 : (isnan(_4144) ? 0.0 : max(_4144, 0.0));
                                float _4147 = isnan(1.0) ? _5492 : (isnan(_5492) ? 1.0 : min(_5492, 1.0));
                                float _4148 = dot(vec3(_1496, _1499, _1502), vec3(_4140 * _4134, _4140 * _4135, _4140 * _4136));
                                float _5503 = isnan(0.0) ? _4148 : (isnan(_4148) ? 0.0 : max(_4148, 0.0));
                                float _4151 = isnan(1.0) ? _5503 : (isnan(_5503) ? 1.0 : min(_5503, 1.0));
                                float _4155 = ((_4151 * _4151) * (_4133 + (-1.0))) + 1.0;
                                float _4156 = _4093 * _4132;
                                float _4157 = _4156 * _4156;
                                float _4163 = ((1.0 - _4157) * dot(vec3(_1496, _1499, _1502), vec3(_4080, _4081, _4082))) + _4157;
                                float _5514 = isnan(0.0) ? _4163 : (isnan(_4163) ? 0.0 : max(_4163, 0.0));
                                float _4164 = isnan(1.0) ? _5514 : (isnan(_5514) ? 1.0 : min(_5514, 1.0));
                                float _4165 = 1.0 - _4132;
                                float _4175 = (0.5 / (((_4164 * ((_4147 * _4165) + _4132)) + 9.9999999392252902907785028219223e-09) + (((_4164 * _4165) + _4132) * _4147))) * _4164;
                                float _5525 = isnan(0.0) ? _4175 : (isnan(_4175) ? 0.0 : max(_4175, 0.0));
                                float _4185 = (_4110 * _4087) * (((_4133 * 3.1415927410125732421875) * (isnan(1.0) ? _5525 : (isnan(_5525) ? 1.0 : min(_5525, 1.0)))) / ((_4155 * _4155) * ((_4100 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _4111 * _3957.z;
                                frontier_phi_85_pred_1 = _4111 * _3957.y;
                                frontier_phi_85_pred_2 = _4111 * _3957.x;
                                frontier_phi_85_pred_3 = _4185 * _3969.z;
                                frontier_phi_85_pred_4 = _4185 * _3969.y;
                                frontier_phi_85_pred_5 = _4185 * _3969.x;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _4194 = frontier_phi_85_pred;
                            _4193 = frontier_phi_85_pred_1;
                            _4192 = frontier_phi_85_pred_2;
                            _4191 = frontier_phi_85_pred_3;
                            _4190 = frontier_phi_85_pred_4;
                            _4189 = frontier_phi_85_pred_5;
                            _3899 = _4192 + _3912;
                            _3900 = _4193 + _3913;
                            _3901 = _4194 + _3914;
                            _3896 = _4189 + _3909;
                            _3897 = _4190 + _3910;
                            _3898 = _4191 + _3911;
                            if (_3916 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3909 = _3896;
                                _3910 = _3897;
                                _3911 = _3898;
                                _3912 = _3899;
                                _3913 = _3900;
                                _3914 = _3901;
                                _3915 = _3916;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3901;
                        frontier_phi_79_pred_1 = _3900;
                        frontier_phi_79_pred_2 = _3899;
                        frontier_phi_79_pred_3 = _3898;
                        frontier_phi_79_pred_4 = _3897;
                        frontier_phi_79_pred_5 = _3896;
                    }
                    _3539 = frontier_phi_79_pred;
                    _3537 = frontier_phi_79_pred_1;
                    _3535 = frontier_phi_79_pred_2;
                    _3533 = frontier_phi_79_pred_3;
                    _3531 = frontier_phi_79_pred_4;
                    _3529 = frontier_phi_79_pred_5;
                    uint _3695 = _3694 + 1u;
                    if (_3695 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3688 = _3529;
                        _3689 = _3531;
                        _3690 = _3533;
                        _3691 = _3535;
                        _3692 = _3537;
                        _3693 = _3539;
                        _3694 = _3695;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3535;
                frontier_phi_60_61_ladder_1 = _3539;
                frontier_phi_60_61_ladder_2 = _3537;
                frontier_phi_60_61_ladder_3 = _3533;
                frontier_phi_60_61_ladder_4 = _3531;
                frontier_phi_60_61_ladder_5 = _3529;
            }
            else
            {
                frontier_phi_60_61_ladder = _3414;
                frontier_phi_60_61_ladder_1 = _3418;
                frontier_phi_60_61_ladder_2 = _3416;
                frontier_phi_60_61_ladder_3 = _3412;
                frontier_phi_60_61_ladder_4 = _3410;
                frontier_phi_60_61_ladder_5 = _3408;
            }
            _3528 = frontier_phi_60_61_ladder_5;
            _3530 = frontier_phi_60_61_ladder_4;
            _3532 = frontier_phi_60_61_ladder_3;
            _3534 = frontier_phi_60_61_ladder;
            _3536 = frontier_phi_60_61_ladder_2;
            _3538 = frontier_phi_60_61_ladder_1;
        }
        float _3543 = isnan(1.0) ? _1555 : (isnan(_1555) ? 1.0 : min(_1555, 1.0));
        _3318 = (_3543 * _3534) + _2755;
        _3320 = (_3543 * _3536) + _2757;
        _3322 = (_3543 * _3538) + _2759;
        _3324 = ((_3528 * _1540) * _3543) + _3100;
        _3326 = ((_3530 * _1542) * _3543) + _3102;
        _3328 = ((_3532 * _1543) * _3543) + _3104;
    }
    else
    {
        _3318 = _2755;
        _3320 = _2757;
        _3322 = _2759;
        _3324 = _3100;
        _3326 = _3102;
        _3328 = _3104;
    }
    float _5541 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    float _5552 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
    float _5563 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
    float _5574 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
    float _3346 = ((isnan(1.0) ? _5541 : (isnan(_5541) ? 1.0 : min(_5541, 1.0))) * (_3318 + ((isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0))) * _1555))) + ((_3324 + ((isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0))) * _2395)) * cbPerFrame._m0[3u].x);
    float _3347 = ((isnan(1.0) ? _5552 : (isnan(_5552) ? 1.0 : min(_5552, 1.0))) * (_3320 + ((isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0))) * _1555))) + ((_3326 + ((isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0))) * _2395)) * cbPerFrame._m0[3u].x);
    float _3348 = ((isnan(1.0) ? _5563 : (isnan(_5563) ? 1.0 : min(_5563, 1.0))) * (_3322 + ((isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0))) * _1555))) + ((_3328 + ((isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0))) * _2395)) * cbPerFrame._m0[3u].x);
    float _3353 = cbInstanceData._m0[_1515 + 6u].w * (isnan(1.0) ? _5574 : (isnan(_5574) ? 1.0 : min(_5574, 1.0)));
    float _3358 = _1477 / cbSceneParam._m0[86u].x;
    float _3359 = _1478 / cbSceneParam._m0[86u].y;
    vec4 _3373 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3358, _3359, (log2((isnan(cbSceneParam._m0[77u].w) ? _1400 : (isnan(_1400) ? cbSceneParam._m0[77u].w : min(_1400, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3375 = _3373.x;
    float _3376 = _3373.y;
    float _3377 = _3373.z;
    float _3378 = _3373.w;
    float _3470;
    float _3472;
    float _3474;
    float _3476;
    if (_1400 > cbSceneParam._m0[78u].w)
    {
        float _3433 = isnan(_1400) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1400 : min(cbSceneParam._m0[80u].w, _1400));
        float _3434 = _3433 / _1400;
        float _3445 = _3434 * _1450;
        float _3446 = _1451 * _3434;
        float _3447 = (-0.0) - _3446;
        float _3448 = _3434 * _1452;
        float _3450 = (cbSceneParam._m0[77u].w * _3447) / _3433;
        float _3451 = _3450 + cbSceneParam._m0[79u].w;
        float _3452 = cbSceneParam._m0[79u].w - _3446;
        float _3458 = sqrt(((_3445 * _3445) + (_3446 * _3446)) + (_3448 * _3448));
        float _3461 = (1.0 - (cbSceneParam._m0[77u].w / _3433)) * _3458;
        float _3466 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3468 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3645;
        if (abs((_3447 - _3450) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3645 = ((((_3451 > 0.0) ? exp2(_3466 * _3451) : (2.0 - exp2(_3468 * _3451))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3461;
        }
        else
        {
            float _3589 = 1.0 / cbSceneParam._m0[80u].x;
            float _3590 = isnan(_3452) ? _3451 : (isnan(_3451) ? _3452 : max(_3451, _3452));
            float _3591 = isnan(_3452) ? _3451 : (isnan(_3451) ? _3452 : min(_3451, _3452));
            float _3600 = isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : min(_3590, 0.0));
            float _3601 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : min(_3591, 0.0));
            _3645 = ((abs(_3458 / _3447) * cbSceneParam._m0[80u].y) * ((((_3600 - _3601) * 2.0) - ((exp2(_3466 * (isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0)))) - exp2(_3466 * (isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0))))) * _3589)) - ((exp2(_3468 * _3600) - exp2(_3468 * _3601)) * _3589))) + (_3461 * cbSceneParam._m0[80u].z);
        }
        vec4 _3647 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3358, _3359, 1.0), 0.0);
        float _3656 = exp2((_3645 * (-1.44269502162933349609375)) * (1.0 - _3647.w));
        float _3657 = log2(_3656);
        float _3673 = log2(_3378);
        _3470 = (exp2(_3673 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3657 * cbSceneParam._m0[78u].x)) * _3647.x) / cbSceneParam._m0[78u].x)) + _3375;
        _3472 = (exp2(_3673 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3657 * cbSceneParam._m0[78u].y)) * _3647.y) / cbSceneParam._m0[78u].y)) + _3376;
        _3474 = (exp2(_3673 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3657 * cbSceneParam._m0[78u].z)) * _3647.z) / cbSceneParam._m0[78u].z)) + _3377;
        _3476 = _3656 * _3378;
    }
    else
    {
        _3470 = _3375;
        _3472 = _3376;
        _3474 = _3377;
        _3476 = _3378;
    }
    bool _3683;
    vec4 _3486;
    vec4 _3508;
    float _3510;
    float _3514;
    float _3515;
    float _3516;
    float _3517;
    bool _3527;
    for (;;)
    {
        _3486 = cbMatDynParam._m0[0u];
        float _3488 = roundEven(_3486.y);
        bool _3489 = _3488 == 3.0;
        float _3490 = log2(_3476);
        float _3497 = exp2(_3490 * cbSceneParam._m0[78u].x) * _3346;
        float _3498 = exp2(_3490 * cbSceneParam._m0[78u].y) * _3347;
        float _3499 = exp2(_3490 * cbSceneParam._m0[78u].z) * _3348;
        float _3506 = _1466 + (-0.5);
        _3508 = cbMtdParam._m0[1u];
        _3510 = _3508.y * _3506;
        float _3513 = (_3488 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3514 = _3513 * (_3489 ? _3497 : (_3497 + (cbSceneParam._m0[72u].w * _3470)));
        _3515 = _3513 * (_3489 ? _3498 : (_3498 + (cbSceneParam._m0[72u].w * _3472)));
        _3516 = _3513 * (_3489 ? _3499 : (_3499 + (cbSceneParam._m0[72u].w * _3474)));
        _3517 = _3506 * 0.999000012874603271484375;
        _3527 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3527)
        {
            if ((cbInstanceData._m0[_1515 + 7u].x + _3517) < 0.5)
            {
                _3683 = true;
                break;
            }
        }
        uint _3624 = _1516 + uint(_3486.w);
        if ((cbInstanceData._m0[_3624].w < 1.0) && ((cbInstanceData._m0[_3624].w + _3517) < 0.5))
        {
            _3683 = true;
            break;
        }
        if ((_3510 + _629) < _3508.x)
        {
            _3683 = true;
            break;
        }
        _3683 = false;
        break;
    }
    float _3887;
    if (_3683)
    {
        discard_state = true;
        _3887 = 0.0;
    }
    else
    {
        _3887 = _3353;
    }
    SV_Target.x = _3514;
    SV_Target.y = _3515;
    SV_Target.z = _3516;
    SV_Target.w = _3887;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3353;
    discard_exit();
}


