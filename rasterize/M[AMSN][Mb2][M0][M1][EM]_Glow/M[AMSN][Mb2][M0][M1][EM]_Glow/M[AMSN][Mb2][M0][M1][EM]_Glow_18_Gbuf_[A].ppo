#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb2_M0_M1_EM_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb2_M0_M1_EM_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_3;
layout(location = 4) in vec4 TEXCOORD_6;
layout(location = 5) in vec4 TEXCOORD_9;
layout(location = 6) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _129 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _130 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _131 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _137 = inversesqrt(dot(vec3(_129, _130, _131), vec3(_129, _130, _131)));
    float _144 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _151 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _174 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[1u].w));
    float _180 = _174.x * cbMtdParam._m0[9u].x;
    float _181 = _174.y * cbMtdParam._m0[9u].y;
    float _182 = _174.z * cbMtdParam._m0[9u].z;
    vec4 _194 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_Glow_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _198 = _194.z;
    float _202 = (_194.x * 2.0) + (-1.0);
    float _204 = (_194.y * 2.0) + (-1.0);
    float _205 = dot(vec2(_202, _204), vec2(_202, _204));
    float _413 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _211 = sqrt(1.0 - (isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0))));
    float _214 = fma(_211, _144 * NORMAL.x, fma(_204, _151 * TANGENT.x, (_137 * _129) * _202));
    float _217 = fma(_211, _144 * NORMAL.y, fma(_204, _151 * TANGENT.y, (_137 * _130) * _202));
    float _220 = fma(_211, _144 * NORMAL.z, fma(_204, _151 * TANGENT.z, (_137 * _131) * _202));
    float _224 = inversesqrt(dot(vec3(_214, _217, _220), vec3(_214, _217, _220)));
    float _424 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _435 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _226 = isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0));
    float _446 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _227 = isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0));
    float _457 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _228 = isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0));
    uint _230 = uint(roundEven(NORMAL.w));
    vec4 _235 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _237 = _235.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _303 = (cbMatDynParam._m0[5u].x * TEXCOORD_17) + cbMatDynParam._m0[5u].y;
        float _468 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
        float _304 = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
        float _308 = (cbMatDynParam._m0[5u].z * TEXCOORD_17) + cbMatDynParam._m0[5u].w;
        float _479 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : min(_479, 1.0))) - _304)) + _304) < ((_237 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _337;
    uint _257;
    vec4 _262;
    float _269;
    float _270;
    float _271;
    float _274;
    float _278;
    vec4 _282;
    float _284;
    float _285;
    bool _296;
    for (;;)
    {
        _257 = _230 * 13u;
        _262 = cbInstanceData._m0[(_257 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _266 = (cbMtdParam._m0[0u].x * _226) * _262.x;
        float _267 = (cbMtdParam._m0[0u].y * _227) * _262.y;
        float _268 = (cbMtdParam._m0[0u].z * _228) * _262.z;
        float _490 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        _269 = isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0));
        float _501 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        _270 = isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0));
        float _512 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
        _271 = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
        _274 = cbMtdParam._m0[2u].w;
        _278 = cbInstanceData._m0[_257 + 6u].w;
        float _279 = _237 + (-0.5);
        _282 = cbMtdParam._m0[1u];
        _284 = _282.y * _279;
        _285 = _279 * 0.999000012874603271484375;
        _296 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_296)
        {
            if ((cbInstanceData._m0[_257 + 7u].x + _285) < 0.5)
            {
                _337 = true;
                break;
            }
        }
        if ((_262.w < 1.0) && ((_262.w + _285) < 0.5))
        {
            _337 = true;
            break;
        }
        if ((_284 + 1.0) < _282.x)
        {
            _337 = true;
            break;
        }
        _337 = false;
        break;
    }
    if (_337)
    {
        discard_state = true;
    }
    float _364;
    float _365;
    float _366;
    float _367;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _364 = _278;
        _365 = _278;
        _366 = _278;
        _367 = _278;
    }
    else
    {
        _364 = _274;
        _365 = 0.0;
        _366 = float(floatBitsToUint(cbInstanceData._m0[_257 + 5u]).x) * 0.0039215688593685626983642578125;
        _367 = TEXCOORD_3.w;
    }
    SV_Target.x = ((_214 * 0.5) * _224) + 0.500488758087158203125;
    SV_Target.y = ((_217 * 0.5) * _224) + 0.500488758087158203125;
    SV_Target.z = ((_220 * 0.5) * _224) + 0.500488758087158203125;
    SV_Target.w = _365;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _367;
    SV_Target_2.x = _269;
    SV_Target_2.y = _270;
    SV_Target_2.z = _271;
    SV_Target_2.w = _366;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _365;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _364;
    discard_exit();
}


