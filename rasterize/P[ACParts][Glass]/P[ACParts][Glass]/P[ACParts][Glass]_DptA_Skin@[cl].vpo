#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_2;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 3, component = 2) out vec2 TEXCOORD_7;
layout(location = 5) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_11 = 0.0;
    float _168 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _192 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _194 = texelFetch(g_InstanceIndexBuffer, int(_192));
    uint _195 = _194.x;
    precise float _196 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _201 = isnan(_196) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _196 : max(0.001000000047497451305389404296875, _196));
    precise float _203 = BLENDWEIGHT.x / _201;
    precise float _204 = BLENDWEIGHT.y / _201;
    precise float _205 = BLENDWEIGHT.z / _201;
    precise float _206 = BLENDWEIGHT.w / _201;
    uvec4 _213 = floatBitsToUint(cbInstanceData._m0[(_195 * 13u) + 4u]);
    uint _214 = _213.x;
    uint _216 = (_214 + uint(float(BLENDINDICES.x))) * 3u;
    uint _223 = _216 + 1u;
    uint _230 = _216 + 2u;
    precise float _237 = _203 * cbObjMatrix._m0[_216].x;
    precise float _238 = _203 * cbObjMatrix._m0[_223].x;
    precise float _239 = _203 * cbObjMatrix._m0[_230].x;
    precise float _240 = _203 * cbObjMatrix._m0[_216].y;
    precise float _241 = _203 * cbObjMatrix._m0[_223].y;
    precise float _242 = _203 * cbObjMatrix._m0[_230].y;
    precise float _243 = _203 * cbObjMatrix._m0[_216].z;
    precise float _244 = _203 * cbObjMatrix._m0[_223].z;
    precise float _245 = _203 * cbObjMatrix._m0[_230].z;
    precise float _246 = _203 * cbObjMatrix._m0[_216].w;
    precise float _247 = _203 * cbObjMatrix._m0[_223].w;
    precise float _248 = _203 * cbObjMatrix._m0[_230].w;
    uint _251 = (_214 + uint(float(BLENDINDICES.y))) * 3u;
    uint _258 = _251 + 1u;
    uint _265 = _251 + 2u;
    precise float _272 = _204 * cbObjMatrix._m0[_251].x;
    precise float _273 = _204 * cbObjMatrix._m0[_258].x;
    precise float _274 = _204 * cbObjMatrix._m0[_265].x;
    precise float _275 = _204 * cbObjMatrix._m0[_251].y;
    precise float _276 = _204 * cbObjMatrix._m0[_258].y;
    precise float _277 = _204 * cbObjMatrix._m0[_265].y;
    precise float _278 = _204 * cbObjMatrix._m0[_251].z;
    precise float _279 = _204 * cbObjMatrix._m0[_258].z;
    precise float _280 = _204 * cbObjMatrix._m0[_265].z;
    precise float _281 = _204 * cbObjMatrix._m0[_251].w;
    precise float _282 = _204 * cbObjMatrix._m0[_258].w;
    precise float _283 = _204 * cbObjMatrix._m0[_265].w;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    uint _298 = (_214 + uint(float(BLENDINDICES.z))) * 3u;
    uint _305 = _298 + 1u;
    uint _312 = _298 + 2u;
    precise float _319 = _205 * cbObjMatrix._m0[_298].x;
    precise float _320 = _205 * cbObjMatrix._m0[_305].x;
    precise float _321 = _205 * cbObjMatrix._m0[_312].x;
    precise float _322 = _205 * cbObjMatrix._m0[_298].y;
    precise float _323 = _205 * cbObjMatrix._m0[_305].y;
    precise float _324 = _205 * cbObjMatrix._m0[_312].y;
    precise float _325 = _205 * cbObjMatrix._m0[_298].z;
    precise float _326 = _205 * cbObjMatrix._m0[_305].z;
    precise float _327 = _205 * cbObjMatrix._m0[_312].z;
    precise float _328 = _205 * cbObjMatrix._m0[_298].w;
    precise float _329 = _205 * cbObjMatrix._m0[_305].w;
    precise float _330 = _205 * cbObjMatrix._m0[_312].w;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    uint _345 = (_214 + uint(float(BLENDINDICES.w))) * 3u;
    uint _352 = _345 + 1u;
    uint _359 = _345 + 2u;
    precise float _366 = _206 * cbObjMatrix._m0[_345].x;
    precise float _367 = _206 * cbObjMatrix._m0[_352].x;
    precise float _368 = _206 * cbObjMatrix._m0[_359].x;
    precise float _369 = _206 * cbObjMatrix._m0[_345].y;
    precise float _370 = _206 * cbObjMatrix._m0[_352].y;
    precise float _371 = _206 * cbObjMatrix._m0[_359].y;
    precise float _372 = _206 * cbObjMatrix._m0[_345].z;
    precise float _373 = _206 * cbObjMatrix._m0[_352].z;
    precise float _374 = _206 * cbObjMatrix._m0[_359].z;
    precise float _375 = _206 * cbObjMatrix._m0[_345].w;
    precise float _376 = _206 * cbObjMatrix._m0[_352].w;
    precise float _377 = _206 * cbObjMatrix._m0[_359].w;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = POSITION.x * _378;
    precise float _391 = POSITION.y * _381;
    precise float _392 = _391 + _390;
    precise float _393 = POSITION.z * _384;
    precise float _394 = _393 + _392;
    precise float _395 = 1.0 * _387;
    precise float _396 = _395 + _394;
    precise float _397 = POSITION.x * _379;
    precise float _398 = POSITION.y * _382;
    precise float _399 = _398 + _397;
    precise float _400 = POSITION.z * _385;
    precise float _401 = _400 + _399;
    precise float _402 = 1.0 * _388;
    precise float _403 = _402 + _401;
    precise float _404 = POSITION.x * _380;
    precise float _405 = POSITION.y * _383;
    precise float _406 = _405 + _404;
    precise float _407 = POSITION.z * _386;
    precise float _408 = _407 + _406;
    precise float _409 = 1.0 * _389;
    precise float _410 = _409 + _408;
    float _416 = cbSceneParam._m0[3u].x - _396;
    float _417 = cbSceneParam._m0[3u].y - _403;
    float _418 = cbSceneParam._m0[3u].z - _410;
    precise float _444 = _396 - cbSceneParam._m0[3u].x;
    precise float _445 = _403 - cbSceneParam._m0[3u].y;
    precise float _446 = _410 - cbSceneParam._m0[3u].z;
    precise float _474 = _444 * cbSceneParam._m0[24u].x;
    precise float _475 = _445 * cbSceneParam._m0[24u].y;
    precise float _476 = _475 + _474;
    precise float _477 = _446 * cbSceneParam._m0[24u].z;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _480 = _479 + _478;
    precise float _481 = _444 * cbSceneParam._m0[25u].x;
    precise float _482 = _445 * cbSceneParam._m0[25u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _446 * cbSceneParam._m0[25u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _444 * cbSceneParam._m0[26u].x;
    precise float _489 = _445 * cbSceneParam._m0[26u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _446 * cbSceneParam._m0[26u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _494 = _493 + _492;
    precise float _495 = _444 * cbSceneParam._m0[27u].x;
    precise float _496 = _445 * cbSceneParam._m0[27u].y;
    precise float _497 = _496 + _495;
    precise float _498 = _446 * cbSceneParam._m0[27u].z;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _501 = _500 + _499;
    gl_Position.x = _480;
    gl_Position.y = _487;
    gl_Position.z = _494;
    gl_Position.w = _501;
    NORMAL_1.x = fma(_171, _384, fma(_170, _381, _378 * _168));
    NORMAL_1.y = fma(_171, _385, fma(_170, _382, _379 * _168));
    NORMAL_1.z = fma(_171, _386, fma(_170, _383, _380 * _168));
    NORMAL_1.w = float(_195);
    TANGENT_1.x = fma(_182, _384, fma(_181, _381, _378 * _180));
    TANGENT_1.y = fma(_182, _385, fma(_181, _382, _379 * _180));
    TANGENT_1.z = fma(_182, _386, fma(_181, _383, _380 * _180));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_7.x = _494;
    TEXCOORD_7.y = _501;
    TEXCOORD_11 = sqrt(((_416 * _416) + (_417 * _417)) + (_418 * _418));
}


