#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 64) uniform texture2D g_CloudShadowTexture0;
layout(set = 0, binding = 65) uniform texture2D g_CloudShadowTexture1;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Glass_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_Glass_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _855;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _186 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _193 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _200 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _223 = ((cbMtdParam._m0[10u].z * TEXCOORD_3.x) * (cbMtdParam._m0[11u].x - cbMtdParam._m0[11u].w)) + cbMtdParam._m0[11u].w;
    vec4 _241 = texture(sampler2D(P_ACParts_Glass_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _250 = (_241.x * 2.0) + (-1.0);
    float _252 = (_241.y * 2.0) + (-1.0);
    float _253 = dot(vec2(_250, _252), vec2(_250, _252));
    float _2975 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _259 = sqrt(1.0 - (isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0))));
    float _264 = ((cbMtdParam._m0[11u].z + _241.z) * 0.5) + cbMtdParam._m0[10u].x;
    float _269 = exp2(log2(cbMtdParam._m0[10u].z) * cbMtdParam._m0[10u].w);
    vec4 _281 = texture(sampler2D(P_ACParts_Glass_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _295 = (((cbMtdParam._m0[10u].y * TEXCOORD_3.x) * _269) * ((_281.x * 2.0) + (-1.0))) + _250;
    float _296 = (((cbMtdParam._m0[10u].y * TEXCOORD_3.y) * _269) * ((_281.y * 2.0) + (-1.0))) + _252;
    float _299 = fma(_259, _193 * NORMAL.x, fma(_296, _200 * TANGENT.x, (_186 * _178) * _295));
    float _302 = fma(_259, _193 * NORMAL.y, fma(_296, _200 * TANGENT.y, (_186 * _179) * _295));
    float _305 = fma(_259, _193 * NORMAL.z, fma(_296, _200 * TANGENT.z, (_186 * _180) * _295));
    float _309 = inversesqrt(dot(vec3(_299, _302, _305), vec3(_299, _302, _305)));
    float _310 = _309 * _299;
    float _311 = _309 * _302;
    float _312 = _309 * _305;
    float _2986 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _313 = isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0));
    float _2997 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _314 = isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0));
    float _3008 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _3019 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _3030 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _3041 = isnan(0.0) ? cbMtdParam._m0[12u].x : (isnan(cbMtdParam._m0[12u].x) ? 0.0 : max(cbMtdParam._m0[12u].x, 0.0));
    float _318 = isnan(1.0) ? _3041 : (isnan(_3041) ? 1.0 : min(_3041, 1.0));
    float _334 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _375 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _385 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _375);
    float _386 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _375);
    float _387 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _375);
    float _391 = inversesqrt(dot(vec3(_385, _386, _387), vec3(_385, _386, _387)));
    float _392 = _385 * _391;
    float _393 = _386 * _391;
    float _394 = _387 * _391;
    float _400 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _401 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _422 = fma(_312, cbSceneParam._m0[5u].z, fma(_311, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _310));
    float _425 = fma(_312, cbSceneParam._m0[6u].z, fma(_311, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _310));
    float _428 = fma(_312, cbSceneParam._m0[7u].z, fma(_311, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _310));
    uint _441 = uint(roundEven(NORMAL.w)) * 13u;
    uint _443 = (_441 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _449 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0)))) * cbInstanceData._m0[_443].x;
    float _450 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3019 : (isnan(_3019) ? 1.0 : min(_3019, 1.0)))) * cbInstanceData._m0[_443].y;
    float _451 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3030 : (isnan(_3030) ? 1.0 : min(_3030, 1.0)))) * cbInstanceData._m0[_443].z;
    float _3052 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _452 = isnan(1.0) ? _3052 : (isnan(_3052) ? 1.0 : min(_3052, 1.0));
    float _3063 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _453 = isnan(1.0) ? _3063 : (isnan(_3063) ? 1.0 : min(_3063, 1.0));
    float _3074 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _454 = isnan(1.0) ? _3074 : (isnan(_3074) ? 1.0 : min(_3074, 1.0));
    float _455 = 1.0 - _318;
    float _456 = _452 * _455;
    float _457 = _453 * _455;
    float _458 = _454 * _455;
    float _463 = (_452 + (-0.039999999105930328369140625)) * _318;
    float _464 = (_453 + (-0.039999999105930328369140625)) * _318;
    float _465 = (_454 + (-0.039999999105930328369140625)) * _318;
    float _466 = _463 + 0.039999999105930328369140625;
    float _468 = _464 + 0.039999999105930328369140625;
    float _469 = _465 + 0.039999999105930328369140625;
    vec4 _478 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _400, cbSceneParam._m0[86u].y * _401));
    float _481 = _478.x * TEXCOORD_3.w;
    float _482 = dot(vec3(_310, _311, _312), vec3(_392, _393, _394));
    float _485 = _482 * 2.0;
    float _489 = (_485 * _310) - _392;
    float _490 = (_485 * _311) - _393;
    float _491 = (_485 * _312) - _394;
    float _495 = abs(dot(vec3(_392, _393, _394), vec3(_310, _311, _312)));
    float _3085 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _497 = sqrt(_314);
    float _510 = exp2((_497 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3085 : (isnan(_3085) ? 1.0 : min(_3085, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_497 * 3.0));
    float _516 = (1.0 - _510) * ((_497 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _517 = _510 * _497;
    float _545 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _549 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _553 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _854;
    float _856;
    float _857;
    float _858;
    float _859;
    float _860;
    float _861;
    float _862;
    float _863;
    float _864;
    float _865;
    float _866;
    float _867;
    float _868;
    float _869;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _580 = fma(_553, cbModelParam._m0[26u].z, fma(_549, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _545));
        float _584 = fma(_553, cbModelParam._m0[27u].z, fma(_549, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _545));
        float _588 = fma(_553, cbModelParam._m0[28u].z, fma(_549, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _545));
        float _612 = _545 + _310;
        float _613 = _549 + _311;
        float _614 = _553 + _312;
        float _624 = fma(_614, cbModelParam._m0[26u].z, fma(_613, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _612)) - _580;
        float _625 = fma(_614, cbModelParam._m0[27u].z, fma(_613, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _612)) - _584;
        float _626 = fma(_614, cbModelParam._m0[28u].z, fma(_613, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _612)) - _588;
        float _630 = inversesqrt(dot(vec3(_624, _625, _626), vec3(_624, _625, _626)));
        float _643 = ((_630 * _624) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_580 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _644 = ((_630 * _625) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_584 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _645 = ((_630 * _626) / cbModelParam._m0[34u].z) + ((((((_588 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _648 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_643, _644, _645), 0.0);
        vec4 _655 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_643, _644, _645), 0.0);
        vec4 _662 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_643, _644, _645), 0.0);
        vec4 _669 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_643, _644, _645), 0.0);
        float _682 = exp2((_648.w + (-0.5)) * 20.0) * 2.0;
        float _683 = _682 * (_648.x + (-0.5));
        float _684 = _682 * (_648.y + (-0.5));
        float _685 = _682 * (_648.z + (-0.5));
        float _692 = exp2((_655.w + (-0.5)) * 20.0) * 2.0;
        float _693 = _692 * (_655.x + (-0.5));
        float _694 = _692 * (_655.y + (-0.5));
        float _695 = _692 * (_655.z + (-0.5));
        float _702 = exp2((_662.w + (-0.5)) * 20.0) * 2.0;
        float _703 = _702 * (_662.x + (-0.5));
        float _704 = _702 * (_662.y + (-0.5));
        float _705 = _702 * (_662.z + (-0.5));
        float _712 = exp2((_669.w + (-0.5)) * 20.0) * 2.0;
        float _713 = _712 * (_669.x + (-0.5));
        float _714 = _712 * (_669.y + (-0.5));
        float _715 = _712 * (_669.z + (-0.5));
        float _716 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
        float _717 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        float _718 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
        float _719 = _683 * 0.5;
        float _720 = _693 * 0.5;
        float _721 = _703 * 0.5;
        float _722 = dot(vec3(_719, _720, _721), vec3(_719, _720, _721));
        float _727 = (_722 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_722);
        float _736 = (dot(vec3(_310, _311, _312), vec3(_727 * _719, _727 * _720, _727 * _721)) + 1.0) * 0.5;
        float _3111 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
        float _746 = sqrt(((_720 * _720) + (_719 * _719)) + (_721 * _721)) / (_716 + 9.9999997473787516355514526367188e-06);
        float _3122 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        float _747 = isnan(1.0) ? _3122 : (isnan(_3122) ? 1.0 : min(_3122, 1.0));
        float _748 = _747 * 2.0;
        float _752 = (1.0 - _747) / (_747 + 1.0);
        float _3133 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
        float _753 = isnan(1.0) ? _3133 : (isnan(_3133) ? 1.0 : min(_3133, 1.0));
        float _762 = ((((1.0 - _753) * (_748 + 2.0)) * exp2(log2(isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0))) * (_748 + 1.0))) + _753) * _716;
        float _763 = _684 * 0.5;
        float _764 = _694 * 0.5;
        float _765 = _704 * 0.5;
        float _766 = dot(vec3(_763, _764, _765), vec3(_763, _764, _765));
        float _771 = (_766 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_766);
        float _779 = (dot(vec3(_310, _311, _312), vec3(_771 * _763, _771 * _764, _771 * _765)) + 1.0) * 0.5;
        float _3144 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
        float _788 = sqrt(((_764 * _764) + (_763 * _763)) + (_765 * _765)) / (_717 + 9.9999997473787516355514526367188e-06);
        float _3155 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
        float _789 = isnan(1.0) ? _3155 : (isnan(_3155) ? 1.0 : min(_3155, 1.0));
        float _790 = _789 * 2.0;
        float _794 = (1.0 - _789) / (_789 + 1.0);
        float _3166 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
        float _795 = isnan(1.0) ? _3166 : (isnan(_3166) ? 1.0 : min(_3166, 1.0));
        float _804 = ((((1.0 - _795) * (_790 + 2.0)) * exp2(log2(isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0))) * (_790 + 1.0))) + _795) * _717;
        float _805 = _685 * 0.5;
        float _806 = _695 * 0.5;
        float _807 = _705 * 0.5;
        float _808 = dot(vec3(_805, _806, _807), vec3(_805, _806, _807));
        float _813 = (_808 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_808);
        float _821 = (dot(vec3(_310, _311, _312), vec3(_813 * _805, _813 * _806, _813 * _807)) + 1.0) * 0.5;
        float _3177 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
        float _830 = sqrt(((_806 * _806) + (_805 * _805)) + (_807 * _807)) / (_718 + 9.9999997473787516355514526367188e-06);
        float _3188 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
        float _831 = isnan(1.0) ? _3188 : (isnan(_3188) ? 1.0 : min(_3188, 1.0));
        float _832 = _831 * 2.0;
        float _836 = (1.0 - _831) / (_831 + 1.0);
        float _3199 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _837 = isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0));
        float _846 = ((((1.0 - _837) * (_832 + 2.0)) * exp2(log2(isnan(1.0) ? _3177 : (isnan(_3177) ? 1.0 : min(_3177, 1.0))) * (_832 + 1.0))) + _837) * _718;
        _854 = _685;
        _856 = _684;
        _857 = _683;
        _858 = _695;
        _859 = _694;
        _860 = _693;
        _861 = _705;
        _862 = _704;
        _863 = _703;
        _864 = _718;
        _865 = _717;
        _866 = _716;
        _867 = cbModelParam._m0[36u].z * (isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0)));
        _868 = cbModelParam._m0[36u].z * (isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0)));
        _869 = cbModelParam._m0[36u].z * (isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0)));
    }
    else
    {
        _854 = _855;
        _856 = _855;
        _857 = _855;
        _858 = _855;
        _859 = _855;
        _860 = _855;
        _861 = _855;
        _862 = _855;
        _863 = _855;
        _864 = _855;
        _865 = _855;
        _866 = _855;
        _867 = 0.0;
        _868 = 0.0;
        _869 = 0.0;
    }
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _895 = fma(_553, cbModelParam._m0[30u].z, fma(_549, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _545));
        float _899 = fma(_553, cbModelParam._m0[31u].z, fma(_549, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _545));
        float _903 = fma(_553, cbModelParam._m0[32u].z, fma(_549, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _545));
        float _926 = _545 + _310;
        float _927 = _549 + _311;
        float _928 = _553 + _312;
        float _938 = fma(_928, cbModelParam._m0[30u].z, fma(_927, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _926)) - _895;
        float _939 = fma(_928, cbModelParam._m0[31u].z, fma(_927, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _926)) - _899;
        float _940 = fma(_928, cbModelParam._m0[32u].z, fma(_927, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _926)) - _903;
        float _944 = inversesqrt(dot(vec3(_938, _939, _940), vec3(_938, _939, _940)));
        float _957 = ((_944 * _938) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_895 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _958 = ((_944 * _939) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_899 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _959 = ((_944 * _940) / cbModelParam._m0[35u].z) + ((((((_903 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _961 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_957, _958, _959), 0.0);
        vec4 _968 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_957, _958, _959), 0.0);
        vec4 _975 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_957, _958, _959), 0.0);
        vec4 _982 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_957, _958, _959), 0.0);
        float _994 = exp2((_961.w + (-0.5)) * 20.0) * 2.0;
        float _995 = _994 * (_961.x + (-0.5));
        float _996 = _994 * (_961.y + (-0.5));
        float _997 = _994 * (_961.z + (-0.5));
        float _1004 = exp2((_968.w + (-0.5)) * 20.0) * 2.0;
        float _1005 = _1004 * (_968.x + (-0.5));
        float _1006 = _1004 * (_968.y + (-0.5));
        float _1007 = _1004 * (_968.z + (-0.5));
        float _1014 = exp2((_975.w + (-0.5)) * 20.0) * 2.0;
        float _1015 = _1014 * (_975.x + (-0.5));
        float _1016 = _1014 * (_975.y + (-0.5));
        float _1017 = _1014 * (_975.z + (-0.5));
        float _1024 = exp2((_982.w + (-0.5)) * 20.0) * 2.0;
        float _1025 = _1024 * (_982.x + (-0.5));
        float _1026 = _1024 * (_982.y + (-0.5));
        float _1027 = _1024 * (_982.z + (-0.5));
        float _1028 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1029 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1030 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1031 = _995 * 0.5;
        float _1032 = _1005 * 0.5;
        float _1033 = _1015 * 0.5;
        float _1034 = dot(vec3(_1031, _1032, _1033), vec3(_1031, _1032, _1033));
        float _1039 = (_1034 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1034);
        float _1047 = (dot(vec3(_310, _311, _312), vec3(_1039 * _1031, _1039 * _1032, _1039 * _1033)) + 1.0) * 0.5;
        float _3240 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
        float _1056 = sqrt(((_1032 * _1032) + (_1031 * _1031)) + (_1033 * _1033)) / (_1028 + 9.9999997473787516355514526367188e-06);
        float _3251 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1057 = isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0));
        float _1058 = _1057 * 2.0;
        float _1062 = (1.0 - _1057) / (_1057 + 1.0);
        float _3262 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1063 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
        float _1072 = ((((1.0 - _1063) * (_1058 + 2.0)) * exp2(log2(isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0))) * (_1058 + 1.0))) + _1063) * _1028;
        float _1073 = _996 * 0.5;
        float _1074 = _1006 * 0.5;
        float _1075 = _1016 * 0.5;
        float _1076 = dot(vec3(_1073, _1074, _1075), vec3(_1073, _1074, _1075));
        float _1081 = (_1076 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1076);
        float _1089 = (dot(vec3(_310, _311, _312), vec3(_1081 * _1073, _1081 * _1074, _1081 * _1075)) + 1.0) * 0.5;
        float _3273 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1098 = sqrt(((_1074 * _1074) + (_1073 * _1073)) + (_1075 * _1075)) / (_1029 + 9.9999997473787516355514526367188e-06);
        float _3284 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1099 = isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0));
        float _1100 = _1099 * 2.0;
        float _1104 = (1.0 - _1099) / (_1099 + 1.0);
        float _3295 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1105 = isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0));
        float _1114 = ((((1.0 - _1105) * (_1100 + 2.0)) * exp2(log2(isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0))) * (_1100 + 1.0))) + _1105) * _1029;
        float _1115 = _997 * 0.5;
        float _1116 = _1007 * 0.5;
        float _1117 = _1017 * 0.5;
        float _1118 = dot(vec3(_1115, _1116, _1117), vec3(_1115, _1116, _1117));
        float _1123 = (_1118 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1118);
        float _1131 = (dot(vec3(_310, _311, _312), vec3(_1123 * _1115, _1123 * _1116, _1123 * _1117)) + 1.0) * 0.5;
        float _3306 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1140 = sqrt(((_1116 * _1116) + (_1115 * _1115)) + (_1117 * _1117)) / (_1030 + 9.9999997473787516355514526367188e-06);
        float _3317 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0));
        float _1142 = _1141 * 2.0;
        float _1146 = (1.0 - _1141) / (_1141 + 1.0);
        float _3328 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0));
        float _1156 = ((((1.0 - _1147) * (_1142 + 2.0)) * exp2(log2(isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0))) * (_1142 + 1.0))) + _1147) * _1030;
        _1164 = _997;
        _1165 = _996;
        _1166 = _995;
        _1167 = _1007;
        _1168 = _1006;
        _1169 = _1005;
        _1170 = _1017;
        _1171 = _1016;
        _1172 = _1015;
        _1173 = _1030;
        _1174 = _1029;
        _1175 = _1028;
        _1176 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0)));
        _1177 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0)));
        _1178 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0)));
    }
    else
    {
        _1164 = _855;
        _1165 = _855;
        _1166 = _855;
        _1167 = _855;
        _1168 = _855;
        _1169 = _855;
        _1170 = _855;
        _1171 = _855;
        _1172 = _855;
        _1173 = _855;
        _1174 = _855;
        _1175 = _855;
        _1176 = 0.0;
        _1177 = 0.0;
        _1178 = 0.0;
    }
    float _1188 = (cbModelParam._m0[1u].x * (_1176 - _867)) + _867;
    float _1189 = (cbModelParam._m0[1u].x * (_1177 - _868)) + _868;
    float _1190 = (cbModelParam._m0[1u].x * (_1178 - _869)) + _869;
    float _1211 = fma(_1190, cbSceneParam._m0[89u].z, fma(_1189, cbSceneParam._m0[89u].y, _1188 * cbSceneParam._m0[89u].x));
    float _1214 = fma(_1190, cbSceneParam._m0[90u].z, fma(_1189, cbSceneParam._m0[90u].y, _1188 * cbSceneParam._m0[90u].x));
    float _1217 = fma(_1190, cbSceneParam._m0[91u].z, fma(_1189, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1188));
    float _1232 = _489 * 0.5;
    float _1233 = _490 * 0.5;
    float _1234 = _491 * 0.5;
    float _1235 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_1166, _1169, _1172, _1175));
    float _1238 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_1165, _1168, _1171, _1174));
    float _1241 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_1164, _1167, _1170, _1173));
    float _1275;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1248 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_854, _858, _861, _864));
        float _1252 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_856, _859, _862, _865));
        float _1256 = dot(vec4(_1232, _1233, _1234, 1.0), vec4(_857, _860, _863, _866));
        float _1263 = dot(vec4(cbModelParam._m0[39u]), vec4(_1232, _1233, _1234, 1.0));
        _1275 = dot(vec3(isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0)), isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0)), isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1263) ? 0.0 : (isnan(0.0) ? _1263 : max(0.0, _1263))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1275 = 1.0;
    }
    float _1286;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1277 = dot(vec4(cbModelParam._m0[40u]), vec4(_1232, _1233, _1234, 1.0));
        _1286 = dot(vec3(isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0)), isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0)), isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1277) ? 0.0 : (isnan(0.0) ? _1277 : max(0.0, _1277))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1286 = 1.0;
    }
    float _1290 = (_1286 * cbModelParam._m0[1u].x) + (_1275 * (1.0 - cbModelParam._m0[1u].x));
    float _1300 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _314);
    float _1301 = isnan(_1300) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1300 : min(cbModelParam._m0[25u].z, _1300));
    float _1383;
    float _1385;
    float _1387;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1350 = fma(_553, cbModelParam._m0[13u].z, fma(_549, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _545)) + cbModelParam._m0[13u].w;
        float _1354 = fma(_553, cbModelParam._m0[14u].z, fma(_549, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _545)) + cbModelParam._m0[14u].w;
        float _1358 = fma(_553, cbModelParam._m0[15u].z, fma(_549, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _545)) + cbModelParam._m0[15u].w;
        float _1361 = fma(_491, cbModelParam._m0[13u].z, fma(_490, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _489));
        float _1364 = fma(_491, cbModelParam._m0[14u].z, fma(_490, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _489));
        float _1367 = fma(_491, cbModelParam._m0[15u].z, fma(_490, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _489));
        float _1395;
        if (_1361 > 0.0)
        {
            _1395 = abs((1.0 - _1350) / _1361);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1361 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1350 + 1.0) / _1361);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1395 = frontier_phi_14_12_ladder;
        }
        float _1811;
        if (_1364 > 0.0)
        {
            _1811 = abs((1.0 - _1354) / _1364);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1364 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1354 + 1.0) / _1364);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1811 = frontier_phi_23_19_ladder;
        }
        float _2111;
        if (_1367 > 0.0)
        {
            _2111 = abs((1.0 - _1358) / _1367);
        }
        else
        {
            float frontier_phi_37_30_ladder;
            if (_1367 < 0.0)
            {
                frontier_phi_37_30_ladder = abs((_1358 + 1.0) / _1367);
            }
            else
            {
                frontier_phi_37_30_ladder = 5000.0;
            }
            _2111 = frontier_phi_37_30_ladder;
        }
        float _2113 = isnan(_1811) ? _1395 : (isnan(_1395) ? _1811 : min(_1395, _1811));
        float _2114 = isnan(_2111) ? _2113 : (isnan(_2113) ? _2111 : min(_2113, _2111));
        float _2118 = (_2114 * _1361) + _1350;
        float _2119 = (_2114 * _1364) + _1354;
        float _2120 = (_2114 * _1367) + _1358;
        float _2121 = _2114 * 9.9999997473787516355514526367188e-05;
        float _2122 = (-1.0) - _2121;
        float _2124 = _2121 + 1.0;
        float frontier_phi_13_37_ladder;
        float frontier_phi_13_37_ladder_1;
        float frontier_phi_13_37_ladder_2;
        if ((_2120 > _2124) || ((_2120 < _2122) || ((_2119 > _2124) || ((_2119 < _2122) || ((_2118 < _2122) || (_2118 > _2124))))))
        {
            frontier_phi_13_37_ladder = 0.0;
            frontier_phi_13_37_ladder_1 = 0.0;
            frontier_phi_13_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2246 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2120, cbModelParam._m0[9u].z, fma(_2119, cbModelParam._m0[9u].y, _2118 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2120, cbModelParam._m0[10u].z, fma(_2119, cbModelParam._m0[10u].y, _2118 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2120, cbModelParam._m0[11u].z, fma(_2119, cbModelParam._m0[11u].y, _2118 * cbModelParam._m0[11u].x))), _1301);
            frontier_phi_13_37_ladder = _2246.z * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_1 = _2246.y * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_2 = _2246.x * cbModelParam._m0[1u].y;
        }
        _1383 = frontier_phi_13_37_ladder_2;
        _1385 = frontier_phi_13_37_ladder_1;
        _1387 = frontier_phi_13_37_ladder;
    }
    else
    {
        vec4 _1371 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_489, _490, _491), _1301);
        _1383 = _1371.x * cbModelParam._m0[1u].y;
        _1385 = _1371.y * cbModelParam._m0[1u].y;
        _1387 = _1371.z * cbModelParam._m0[1u].y;
    }
    float _1391 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _314);
    float _1392 = isnan(_1391) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1391 : min(cbModelParam._m0[25u].w, _1391));
    float _1485;
    float _1487;
    float _1489;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1449 = fma(_553, cbModelParam._m0[21u].z, fma(_549, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _545)) + cbModelParam._m0[21u].w;
        float _1453 = fma(_553, cbModelParam._m0[22u].z, fma(_549, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _545)) + cbModelParam._m0[22u].w;
        float _1457 = fma(_553, cbModelParam._m0[23u].z, fma(_549, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _545)) + cbModelParam._m0[23u].w;
        float _1460 = fma(_491, cbModelParam._m0[21u].z, fma(_490, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _489));
        float _1463 = fma(_491, cbModelParam._m0[22u].z, fma(_490, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _489));
        float _1466 = fma(_491, cbModelParam._m0[23u].z, fma(_490, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _489));
        float _1816;
        if (_1460 > 0.0)
        {
            _1816 = abs((1.0 - _1449) / _1460);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1460 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1449 + 1.0) / _1460);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1816 = frontier_phi_25_21_ladder;
        }
        float _2137;
        if (_1463 > 0.0)
        {
            _2137 = abs((1.0 - _1453) / _1463);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1463 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1453 + 1.0) / _1463);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _2137 = frontier_phi_39_32_ladder;
        }
        float _2306;
        if (_1466 > 0.0)
        {
            _2306 = abs((1.0 - _1457) / _1466);
        }
        else
        {
            float frontier_phi_53_48_ladder;
            if (_1466 < 0.0)
            {
                frontier_phi_53_48_ladder = abs((_1457 + 1.0) / _1466);
            }
            else
            {
                frontier_phi_53_48_ladder = 5000.0;
            }
            _2306 = frontier_phi_53_48_ladder;
        }
        float _2308 = isnan(_2137) ? _1816 : (isnan(_1816) ? _2137 : min(_1816, _2137));
        float _2309 = isnan(_2306) ? _2308 : (isnan(_2308) ? _2306 : min(_2308, _2306));
        float _2313 = (_2309 * _1460) + _1449;
        float _2314 = (_2309 * _1463) + _1453;
        float _2315 = (_2309 * _1466) + _1457;
        float _2316 = _2309 * 9.9999997473787516355514526367188e-05;
        float _2317 = (-1.0) - _2316;
        float _2319 = _2316 + 1.0;
        float frontier_phi_22_53_ladder;
        float frontier_phi_22_53_ladder_1;
        float frontier_phi_22_53_ladder_2;
        if ((_2315 > _2319) || ((_2315 < _2317) || ((_2314 > _2319) || ((_2314 < _2317) || ((_2313 < _2317) || (_2313 > _2319))))))
        {
            frontier_phi_22_53_ladder = 0.0;
            frontier_phi_22_53_ladder_1 = 0.0;
            frontier_phi_22_53_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2548 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2315, cbModelParam._m0[17u].z, fma(_2314, cbModelParam._m0[17u].y, _2313 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2315, cbModelParam._m0[18u].z, fma(_2314, cbModelParam._m0[18u].y, _2313 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2315, cbModelParam._m0[19u].z, fma(_2314, cbModelParam._m0[19u].y, _2313 * cbModelParam._m0[19u].x))), _1392);
            frontier_phi_22_53_ladder = _2548.y * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_1 = _2548.z * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_2 = _2548.x * cbModelParam._m0[1u].z;
        }
        _1485 = frontier_phi_22_53_ladder_2;
        _1487 = frontier_phi_22_53_ladder;
        _1489 = frontier_phi_22_53_ladder_1;
    }
    else
    {
        vec4 _1469 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_489, _490, _491), _1392);
        _1485 = _1469.x * cbModelParam._m0[1u].z;
        _1487 = _1469.y * cbModelParam._m0[1u].z;
        _1489 = _1469.z * cbModelParam._m0[1u].z;
    }
    float _1502 = (((_516 * _466) + _517) * _481) * ((cbModelParam._m0[1u].w * (_1485 - _1383)) + _1383);
    float _1504 = (((_516 * _468) + _517) * _481) * ((cbModelParam._m0[1u].w * (_1487 - _1385)) + _1385);
    float _1506 = (((_516 * _469) + _517) * _481) * ((cbModelParam._m0[1u].w * (_1489 - _1387)) + _1387);
    float _1509 = fma(_1506, cbSceneParam._m0[89u].z, fma(_1504, cbSceneParam._m0[89u].y, _1502 * cbSceneParam._m0[89u].x));
    float _1512 = fma(_1506, cbSceneParam._m0[90u].z, fma(_1504, cbSceneParam._m0[90u].y, _1502 * cbSceneParam._m0[90u].x));
    float _1515 = fma(_1506, cbSceneParam._m0[91u].z, fma(_1504, cbSceneParam._m0[91u].y, _1502 * cbSceneParam._m0[91u].x));
    float _1560 = 1.0 - (cbSceneParam._m0[69u].x * (1.0 - texture(sampler2D(g_CloudShadowTexture0, SS_WrapLinear), vec2(cbSceneParam._m0[67u].x + (cbSceneParam._m0[67u].z * _545), cbSceneParam._m0[67u].y - (cbSceneParam._m0[67u].w * _553))).x));
    float _3454 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
    float _1565 = 1.0 - (cbSceneParam._m0[69u].y * (1.0 - texture(sampler2D(g_CloudShadowTexture1, SS_WrapLinear), vec2(cbSceneParam._m0[68u].x + (cbSceneParam._m0[68u].z * _545), cbSceneParam._m0[68u].y - (cbSceneParam._m0[68u].w * _553))).x));
    float _3465 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    float _1567 = (isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0))) * (isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0)));
    uvec4 _1571 = floatBitsToUint(cbInstanceData._m0[_441 + 5u]);
    uint _1573 = _1571.x * 14u;
    uint _1574 = _1573 + 13u;
    float _1579 = _481 + (-1.0);
    float _1582 = (cbLight._m0[_1574].x * _1579) + 1.0;
    float _1583 = (cbLight._m0[_1574].y * _1579) + 1.0;
    uint _1584 = _1573 + 5u;
    float _1590 = isnan(1.0) ? _1583 : (isnan(_1583) ? 1.0 : min(_1583, 1.0));
    uint _1594 = _1573 + 4u;
    float _1604 = isnan(1.0) ? _1582 : (isnan(_1582) ? 1.0 : min(_1582, 1.0));
    uint _1608 = _1573 | 1u;
    float _1619 = dot(vec3(cbLight._m0[_1573].xyz), vec3(_310, _311, _312));
    float _1622 = dot(vec3(cbLight._m0[_1608].xyz), vec3(_310, _311, _312));
    float _3486 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
    float _3497 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
    float _1627 = (isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0))) * 0.3183098733425140380859375;
    float _1629 = (isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * 0.3183098733425140380859375;
    float _1636 = ((cbLight._m0[_1584].x * _1590) * _1629) + (((cbLight._m0[_1594].x * _1567) * _1604) * _1627);
    float _1637 = ((_1590 * cbLight._m0[_1584].y) * _1629) + (((cbLight._m0[_1594].y * _1567) * _1604) * _1627);
    float _1638 = ((_1590 * cbLight._m0[_1584].z) * _1629) + (((cbLight._m0[_1594].z * _1567) * _1604) * _1627);
    uint _1640 = _1573 + 8u;
    float _1653 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1573].w)) * _314) * 0.949999988079071044921875);
    float _1654 = _1653 * _1653;
    float _1655 = cbLight._m0[_1573].x + _392;
    float _1656 = cbLight._m0[_1573].y + _393;
    float _1657 = cbLight._m0[_1573].z + _394;
    float _1661 = inversesqrt(dot(vec3(_1655, _1656, _1657), vec3(_1655, _1656, _1657)));
    float _1662 = _1661 * _1655;
    float _1663 = _1661 * _1656;
    float _1664 = _1661 * _1657;
    float _1665 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1573].xyz));
    float _3508 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
    float _1668 = isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0));
    float _3519 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _1669 = isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0));
    float _1670 = dot(vec3(_310, _311, _312), vec3(_1662, _1663, _1664));
    float _3530 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
    float _1673 = isnan(1.0) ? _3530 : (isnan(_3530) ? 1.0 : min(_3530, 1.0));
    float _1674 = dot(vec3(cbLight._m0[_1573].xyz), vec3(_1662, _1663, _1664));
    float _3541 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
    float _1678 = _1654 * _1654;
    float _1682 = ((_1673 * _1673) * (_1678 + (-1.0))) + 1.0;
    float _1690 = exp2(log2(1.0 - (isnan(1.0) ? _3541 : (isnan(_3541) ? 1.0 : min(_3541, 1.0)))) * 5.0);
    float _1691 = 0.959999978542327880859375 - _463;
    float _1693 = 0.959999978542327880859375 - _464;
    float _1694 = 0.959999978542327880859375 - _465;
    float _1701 = 1.0 - _1654;
    float _1712 = (0.5 / (((_1669 * ((_1668 * _1701) + _1654)) + 9.9999999392252902907785028219223e-09) + (((_1669 * _1701) + _1654) * _1668))) * _1668;
    float _3552 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
    float _1714 = (isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0))) * (_1678 / ((_1682 * _1682) * 3.141590118408203125));
    uint _1728 = _1573 + 9u;
    float _1739 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1608].w)) * _314) * 0.949999988079071044921875);
    float _1740 = _1739 * _1739;
    float _1741 = cbLight._m0[_1608].x + _392;
    float _1742 = cbLight._m0[_1608].y + _393;
    float _1743 = cbLight._m0[_1608].z + _394;
    float _1747 = inversesqrt(dot(vec3(_1741, _1742, _1743), vec3(_1741, _1742, _1743)));
    float _1748 = _1747 * _1741;
    float _1749 = _1747 * _1742;
    float _1750 = _1747 * _1743;
    float _1751 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1608].xyz));
    float _3563 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
    float _1754 = isnan(1.0) ? _3563 : (isnan(_3563) ? 1.0 : min(_3563, 1.0));
    float _1755 = dot(vec3(_310, _311, _312), vec3(_1748, _1749, _1750));
    float _3574 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
    float _1758 = isnan(1.0) ? _3574 : (isnan(_3574) ? 1.0 : min(_3574, 1.0));
    float _1759 = dot(vec3(cbLight._m0[_1608].xyz), vec3(_1748, _1749, _1750));
    float _3585 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
    float _1763 = _1740 * _1740;
    float _1767 = ((_1758 * _1758) * (_1763 + (-1.0))) + 1.0;
    float _1774 = exp2(log2(1.0 - (isnan(1.0) ? _3585 : (isnan(_3585) ? 1.0 : min(_3585, 1.0)))) * 5.0);
    float _1781 = 1.0 - _1740;
    float _1791 = (0.5 / (((_1669 * ((_1754 * _1781) + _1740)) + 9.9999999392252902907785028219223e-09) + (((_1669 * _1781) + _1740) * _1754))) * _1754;
    float _3596 = isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0));
    float _1793 = (isnan(1.0) ? _3596 : (isnan(_3596) ? 1.0 : min(_3596, 1.0))) * (_1763 / ((_1767 * _1767) * 3.141590118408203125));
    float _1803 = (((((_1774 * _1691) + _466) * cbLight._m0[_1728].x) * _1793) * _1590) + ((((cbLight._m0[_1640].x * _1567) * ((_1690 * _1691) + _466)) * _1714) * _1604);
    float _1804 = (((((_1774 * _1693) + _468) * cbLight._m0[_1728].y) * _1793) * _1590) + ((((cbLight._m0[_1640].y * _1567) * ((_1690 * _1693) + _468)) * _1714) * _1604);
    float _1805 = (((((_1774 * _1694) + _469) * cbLight._m0[_1728].z) * _1793) * _1590) + ((((cbLight._m0[_1640].z * _1567) * ((_1690 * _1694) + _469)) * _1714) * _1604);
    float _1920;
    float _1922;
    float _1924;
    float _1926;
    float _1928;
    float _1930;
    if (_1571.y == 0u)
    {
        float _1860 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1861 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1860;
        float _1862 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1860;
        float _1863 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1860;
        uvec4 _1875 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1876 = _1875.x;
        uint _1887 = uint((float(_1875.y) * floor(float(uint(cbSceneParam._m0[85u].y * _401) / _1876))) + floor(float(uint(cbSceneParam._m0[85u].x * _400) / _1876)));
        float _1897 = (log2(_1863 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1898 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        uint _1901 = uint(isnan(14.0) ? _1898 : (isnan(_1898) ? 14.0 : min(_1898, 14.0)));
        uvec4 _1906 = texelFetch(g_lightClusterGridBuffer, int(((_1901 << 2u) + (_1887 << 6u)) >> 2u));
        uint _1907 = _1906.x;
        uint _1908 = _1875.z;
        float _1997;
        float _1999;
        float _2001;
        float _2003;
        float _2005;
        float _2007;
        if (((((1u << ((_1908 >> 4u) & 15u)) + 4294967295u) & _1907) == 0u) || ((_1908 & 240u) == 0u))
        {
            _1997 = 0.0;
            _1999 = 0.0;
            _2001 = 0.0;
            _2003 = 0.0;
            _2005 = 0.0;
            _2007 = 0.0;
        }
        else
        {
            float _1998;
            float _2000;
            float _2002;
            float _2004;
            float _2006;
            float _2008;
            float _2174 = 0.0;
            float _2175 = 0.0;
            float _2176 = 0.0;
            float _2177 = 0.0;
            float _2178 = 0.0;
            float _2179 = 0.0;
            uint _2180 = 0u;
            uint _2189;
            bool _2190;
            for (;;)
            {
                _2189 = texelFetch(g_lightClassification, int((((_1901 << 5u) + (_1887 << 9u)) + (_2180 << 2u)) >> 2u)).x;
                _2190 = _2189 == 0u;
                float frontier_phi_50_pred;
                float frontier_phi_50_pred_1;
                float frontier_phi_50_pred_2;
                float frontier_phi_50_pred_3;
                float frontier_phi_50_pred_4;
                float frontier_phi_50_pred_5;
                if (_2190)
                {
                    frontier_phi_50_pred = _2177;
                    frontier_phi_50_pred_1 = _2179;
                    frontier_phi_50_pred_2 = _2178;
                    frontier_phi_50_pred_3 = _2176;
                    frontier_phi_50_pred_4 = _2175;
                    frontier_phi_50_pred_5 = _2174;
                }
                else
                {
                    float _2349;
                    float _2350;
                    float _2351;
                    float _2352;
                    float _2353;
                    float _2354;
                    uint _2355;
                    _2349 = _2174;
                    _2350 = _2175;
                    _2351 = _2176;
                    _2352 = _2177;
                    _2353 = _2178;
                    _2354 = _2179;
                    _2355 = _2189;
                    float _2255;
                    float _2256;
                    float _2257;
                    float _2258;
                    float _2259;
                    float _2260;
                    for (;;)
                    {
                        uint _2359 = uint(findLSB(_2355)) + (_2180 << 5u);
                        uint _2356 = (_2355 + 4294967295u) & _2355;
                        uint _2361 = _2359 * 48u;
                        vec4 _2375 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2361)).x, texelFetch(g_PointLightRenderingBuffer, int(_2361 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2361 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2361 + 3u)).x));
                        uint _2381 = (_2359 * 48u) + 4u;
                        vec4 _2394 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2381)).x, texelFetch(g_PointLightRenderingBuffer, int(_2381 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2381 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2381 + 3u)).x));
                        uint _2400 = (_2359 * 48u) + 8u;
                        vec3 _2411 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2400)).x, texelFetch(g_PointLightRenderingBuffer, int(_2400 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2400 + 2u)).x));
                        float _2415 = _2375.x - _1861;
                        float _2416 = _2375.y - _1862;
                        float _2417 = _2375.z - _1863;
                        float _2418 = dot(vec3(_2415, _2416, _2417), vec3(_2415, _2416, _2417));
                        float _2421 = inversesqrt(_2418);
                        float _2422 = _2421 * _2415;
                        float _2423 = _2421 * _2416;
                        float _2424 = _2421 * _2417;
                        float _2425 = dot(vec3(_422, _425, _428), vec3(_2422, _2423, _2424));
                        float _2430 = 1.0 - (_2418 * _2375.w);
                        float _3617 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
                        float _2431 = isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0));
                        float _2432 = sqrt(_2418) * _2394.w;
                        float _2435 = 1.39999997615814208984375 / (_2432 + 1.39999997615814208984375);
                        float _2436 = _2435 * _2435;
                        float _2439 = ((1.0 - _2436) * _2425) + _2436;
                        float _2442 = _2432 * _2432;
                        float _2446 = ((isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0))) * _2431) / ((_2442 * 0.699999988079071044921875) + 1.0);
                        float _2450 = (-0.0) - _1861;
                        float _2451 = (-0.0) - _1862;
                        float _2452 = (-0.0) - _1863;
                        float _2456 = inversesqrt(dot(vec3(_2450, _2451, _2452), vec3(_2450, _2451, _2452)));
                        float _2457 = _2456 * _2450;
                        float _2458 = _2456 * _2451;
                        float _2459 = _2456 * _2452;
                        float _2467 = exp2(log2(1.0 / ((_2442 * 3.5) + 5.0)) * 0.25);
                        float _2468 = 1.0 - _497;
                        float _2475 = sqrt(1.0 - ((1.0 - (_2468 * _2468)) * (1.0 - (_2467 * _2467))));
                        float _2476 = _2475 * _2475;
                        float _2477 = _2476 * _2476;
                        float _2478 = _2457 + _2422;
                        float _2479 = _2458 + _2423;
                        float _2480 = _2459 + _2424;
                        float _2484 = inversesqrt(dot(vec3(_2478, _2479, _2480), vec3(_2478, _2479, _2480)));
                        float _2488 = dot(vec3(_422, _425, _428), vec3(_2457, _2458, _2459));
                        float _3633 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
                        float _2491 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
                        float _2492 = dot(vec3(_422, _425, _428), vec3(_2484 * _2478, _2484 * _2479, _2484 * _2480));
                        float _3644 = isnan(0.0) ? _2492 : (isnan(_2492) ? 0.0 : max(_2492, 0.0));
                        float _2495 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
                        float _2499 = ((_2495 * _2495) * (_2477 + (-1.0))) + 1.0;
                        float _2500 = _2435 * _2476;
                        float _2501 = _2500 * _2500;
                        float _2504 = ((1.0 - _2501) * _2425) + _2501;
                        float _3655 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
                        float _2505 = isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0));
                        float _2506 = 1.0 - _2476;
                        float _2516 = (0.5 / (((_2505 * ((_2491 * _2506) + _2476)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2506) + _2476) * _2491))) * _2505;
                        float _3666 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
                        float _2527 = (((_2477 * 3.1415927410125732421875) * (isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0)))) / ((_2499 * _2499) * ((_2442 * 2.1991131305694580078125) + 3.141590118408203125))) * _2431;
                        _2258 = (_2446 * _2394.x) + _2352;
                        _2259 = (_2446 * _2394.y) + _2353;
                        _2260 = (_2446 * _2394.z) + _2354;
                        _2255 = (_2527 * _2411.x) + _2349;
                        _2256 = (_2527 * _2411.y) + _2350;
                        _2257 = (_2527 * _2411.z) + _2351;
                        if (_2356 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2349 = _2255;
                            _2350 = _2256;
                            _2351 = _2257;
                            _2352 = _2258;
                            _2353 = _2259;
                            _2354 = _2260;
                            _2355 = _2356;
                        }
                    }
                    frontier_phi_50_pred = _2258;
                    frontier_phi_50_pred_1 = _2260;
                    frontier_phi_50_pred_2 = _2259;
                    frontier_phi_50_pred_3 = _2257;
                    frontier_phi_50_pred_4 = _2256;
                    frontier_phi_50_pred_5 = _2255;
                }
                _2004 = frontier_phi_50_pred;
                _2008 = frontier_phi_50_pred_1;
                _2006 = frontier_phi_50_pred_2;
                _2002 = frontier_phi_50_pred_3;
                _2000 = frontier_phi_50_pred_4;
                _1998 = frontier_phi_50_pred_5;
                uint _2181 = _2180 + 1u;
                if (_2181 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2174 = _1998;
                    _2175 = _2000;
                    _2176 = _2002;
                    _2177 = _2004;
                    _2178 = _2006;
                    _2179 = _2008;
                    _2180 = _2181;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1997 = _1998;
            _1999 = _2000;
            _2001 = _2002;
            _2003 = _2004;
            _2005 = _2006;
            _2007 = _2008;
        }
        uvec4 _2011 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2012 = _2011.z;
        uint _2014 = (_2012 >> 8u) & 15u;
        float _2142;
        float _2144;
        float _2146;
        float _2148;
        float _2150;
        float _2152;
        if (((4294967295u << _2014) & _1907) == 0u)
        {
            _2142 = _1997;
            _2144 = _1999;
            _2146 = _2001;
            _2148 = _2003;
            _2150 = _2005;
            _2152 = _2007;
        }
        else
        {
            float _2167 = inversesqrt(dot(vec3(_1861, _1862, _1863), vec3(_1861, _1862, _1863)));
            float _2168 = _2167 * _1861;
            float _2169 = _2167 * _1862;
            float _2170 = _2167 * _1863;
            float frontier_phi_41_42_ladder;
            float frontier_phi_41_42_ladder_1;
            float frontier_phi_41_42_ladder_2;
            float frontier_phi_41_42_ladder_3;
            float frontier_phi_41_42_ladder_4;
            float frontier_phi_41_42_ladder_5;
            if (_2014 < ((_2012 >> 12u) & 15u))
            {
                float _2143;
                float _2145;
                float _2147;
                float _2149;
                float _2151;
                float _2153;
                float _2332 = _1997;
                float _2333 = _1999;
                float _2334 = _2001;
                float _2335 = _2003;
                float _2336 = _2005;
                float _2337 = _2007;
                uint _2338 = _2014;
                uint _2347;
                bool _2348;
                for (;;)
                {
                    _2347 = texelFetch(g_lightClassification, int((((_1901 << 5u) + (_1887 << 9u)) + (_2338 << 2u)) >> 2u)).x;
                    _2348 = _2347 == 0u;
                    float frontier_phi_59_pred;
                    float frontier_phi_59_pred_1;
                    float frontier_phi_59_pred_2;
                    float frontier_phi_59_pred_3;
                    float frontier_phi_59_pred_4;
                    float frontier_phi_59_pred_5;
                    if (_2348)
                    {
                        frontier_phi_59_pred = _2337;
                        frontier_phi_59_pred_1 = _2336;
                        frontier_phi_59_pred_2 = _2335;
                        frontier_phi_59_pred_3 = _2334;
                        frontier_phi_59_pred_4 = _2333;
                        frontier_phi_59_pred_5 = _2332;
                    }
                    else
                    {
                        float _2553;
                        float _2554;
                        float _2555;
                        float _2556;
                        float _2557;
                        float _2558;
                        float _2849;
                        float _2850;
                        float _2851;
                        float _2852;
                        float _2853;
                        float _2854;
                        float _2566 = _2332;
                        float _2567 = _2333;
                        float _2568 = _2334;
                        float _2569 = _2335;
                        float _2570 = _2336;
                        float _2571 = _2337;
                        uint _2572 = _2347;
                        uint _2573;
                        vec4 _2598;
                        float _2599;
                        vec4 _2614;
                        vec3 _2626;
                        vec4 _2642;
                        vec4 _2658;
                        float _2705;
                        bool _2706;
                        for (;;)
                        {
                            uint _2583 = ((_2338 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2572));
                            _2573 = (_2572 + 4294967295u) & _2572;
                            uint _2585 = _2583 * 40u;
                            _2598 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2585)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2585 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2585 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2585 + 3u)).x));
                            _2599 = _2598.w;
                            uint _2601 = (_2583 * 40u) + 4u;
                            _2614 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2601)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2601 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2601 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2601 + 3u)).x));
                            uint _2616 = (_2583 * 40u) + 8u;
                            _2626 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2616)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2616 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2616 + 2u)).x));
                            uint _2629 = (_2583 * 40u) + 16u;
                            _2642 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2629)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2629 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2629 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2629 + 3u)).x));
                            uint _2645 = (_2583 * 40u) + 20u;
                            _2658 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2645)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2645 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2645 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2645 + 3u)).x));
                            uint _2661 = (_2583 * 40u) + 24u;
                            vec4 _2674 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2661)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2661 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2661 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2661 + 3u)).x));
                            uint _2680 = (_2583 * 40u) + 28u;
                            vec4 _2693 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2680)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2680 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2680 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2680 + 3u)).x));
                            _2705 = fma(_1863, _2693.z, fma(_1862, _2693.y, _2693.x * _1861)) + _2693.w;
                            _2706 = !((fma(_1863, _2674.z, fma(_1862, _2674.y, _2674.x * _1861)) + _2674.w) <= 0.0);
                            float frontier_phi_65_pred;
                            float frontier_phi_65_pred_1;
                            float frontier_phi_65_pred_2;
                            float frontier_phi_65_pred_3;
                            float frontier_phi_65_pred_4;
                            float frontier_phi_65_pred_5;
                            if (_2706)
                            {
                                float _2733 = _2598.x - _1861;
                                float _2734 = _2598.y - _1862;
                                float _2735 = _2598.z - _1863;
                                float _2736 = dot(vec3(_2733, _2734, _2735), vec3(_2733, _2734, _2735));
                                float _2739 = inversesqrt(_2736);
                                float _2740 = _2739 * _2733;
                                float _2741 = _2739 * _2734;
                                float _2742 = _2739 * _2735;
                                float _2746 = 1.0 - (_2736 / (_2599 * _2599));
                                float _3677 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
                                float _2747 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
                                float _2751 = sqrt(_2736) * _2614.w;
                                float _2753 = 1.39999997615814208984375 / (_2751 + 1.39999997615814208984375);
                                float _2754 = _2753 * _2753;
                                float _2757 = ((1.0 - _2754) * dot(vec3(_2740, _2741, _2742), vec3(_422, _425, _428))) + _2754;
                                float _2760 = _2751 * _2751;
                                float _2764 = (fma(_1863, _2642.z, fma(_1862, _2642.y, _2642.x * _1861)) + _2642.w) / _2705;
                                float _2765 = (fma(_1863, _2658.z, fma(_1862, _2658.y, _2658.x * _1861)) + _2658.w) / _2705;
                                float _2769 = 1.0 - dot(vec2(_2764, _2765), vec2(_2764, _2765));
                                float _3693 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
                                float _2770 = isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0));
                                float _2771 = _2770 * (((isnan(0.0) ? _2757 : (isnan(_2757) ? 0.0 : max(_2757, 0.0))) * _2747) / ((_2760 * 0.699999988079071044921875) + 1.0));
                                float _2783 = exp2(log2(1.0 / ((_2760 * 3.5) + 5.0)) * 0.25);
                                float _2784 = 1.0 - _497;
                                float _2791 = sqrt(1.0 - ((1.0 - (_2784 * _2784)) * (1.0 - (_2783 * _2783))));
                                float _2792 = _2791 * _2791;
                                float _2793 = _2792 * _2792;
                                float _2794 = _2740 - _2168;
                                float _2795 = _2741 - _2169;
                                float _2796 = _2742 - _2170;
                                float _2800 = inversesqrt(dot(vec3(_2794, _2795, _2796), vec3(_2794, _2795, _2796)));
                                float _2804 = dot(vec3(_422, _425, _428), vec3((-0.0) - _2168, (-0.0) - _2169, (-0.0) - _2170));
                                float _3704 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
                                float _2807 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
                                float _2808 = dot(vec3(_422, _425, _428), vec3(_2800 * _2794, _2800 * _2795, _2800 * _2796));
                                float _3715 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
                                float _2811 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
                                float _2815 = ((_2811 * _2811) * (_2793 + (-1.0))) + 1.0;
                                float _2816 = _2753 * _2792;
                                float _2817 = _2816 * _2816;
                                float _2823 = ((1.0 - _2817) * dot(vec3(_422, _425, _428), vec3(_2740, _2741, _2742))) + _2817;
                                float _3726 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
                                float _2824 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
                                float _2825 = 1.0 - _2792;
                                float _2835 = (0.5 / (((_2824 * ((_2807 * _2825) + _2792)) + 9.9999999392252902907785028219223e-09) + (((_2824 * _2825) + _2792) * _2807))) * _2824;
                                float _3737 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
                                float _2845 = (_2770 * _2747) * (((_2793 * 3.1415927410125732421875) * (isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0)))) / ((_2815 * _2815) * ((_2760 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_65_pred = _2771 * _2614.z;
                                frontier_phi_65_pred_1 = _2771 * _2614.y;
                                frontier_phi_65_pred_2 = _2771 * _2614.x;
                                frontier_phi_65_pred_3 = _2845 * _2626.z;
                                frontier_phi_65_pred_4 = _2845 * _2626.y;
                                frontier_phi_65_pred_5 = _2845 * _2626.x;
                            }
                            else
                            {
                                frontier_phi_65_pred = 0.0;
                                frontier_phi_65_pred_1 = 0.0;
                                frontier_phi_65_pred_2 = 0.0;
                                frontier_phi_65_pred_3 = 0.0;
                                frontier_phi_65_pred_4 = 0.0;
                                frontier_phi_65_pred_5 = 0.0;
                            }
                            _2854 = frontier_phi_65_pred;
                            _2853 = frontier_phi_65_pred_1;
                            _2852 = frontier_phi_65_pred_2;
                            _2851 = frontier_phi_65_pred_3;
                            _2850 = frontier_phi_65_pred_4;
                            _2849 = frontier_phi_65_pred_5;
                            _2556 = _2852 + _2569;
                            _2557 = _2853 + _2570;
                            _2558 = _2854 + _2571;
                            _2553 = _2849 + _2566;
                            _2554 = _2850 + _2567;
                            _2555 = _2851 + _2568;
                            if (_2573 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2566 = _2553;
                                _2567 = _2554;
                                _2568 = _2555;
                                _2569 = _2556;
                                _2570 = _2557;
                                _2571 = _2558;
                                _2572 = _2573;
                                continue;
                            }
                        }
                        frontier_phi_59_pred = _2558;
                        frontier_phi_59_pred_1 = _2557;
                        frontier_phi_59_pred_2 = _2556;
                        frontier_phi_59_pred_3 = _2555;
                        frontier_phi_59_pred_4 = _2554;
                        frontier_phi_59_pred_5 = _2553;
                    }
                    _2153 = frontier_phi_59_pred;
                    _2151 = frontier_phi_59_pred_1;
                    _2149 = frontier_phi_59_pred_2;
                    _2147 = frontier_phi_59_pred_3;
                    _2145 = frontier_phi_59_pred_4;
                    _2143 = frontier_phi_59_pred_5;
                    uint _2339 = _2338 + 1u;
                    if (_2339 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2332 = _2143;
                        _2333 = _2145;
                        _2334 = _2147;
                        _2335 = _2149;
                        _2336 = _2151;
                        _2337 = _2153;
                        _2338 = _2339;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_41_42_ladder = _2149;
                frontier_phi_41_42_ladder_1 = _2153;
                frontier_phi_41_42_ladder_2 = _2151;
                frontier_phi_41_42_ladder_3 = _2147;
                frontier_phi_41_42_ladder_4 = _2145;
                frontier_phi_41_42_ladder_5 = _2143;
            }
            else
            {
                frontier_phi_41_42_ladder = _2003;
                frontier_phi_41_42_ladder_1 = _2007;
                frontier_phi_41_42_ladder_2 = _2005;
                frontier_phi_41_42_ladder_3 = _2001;
                frontier_phi_41_42_ladder_4 = _1999;
                frontier_phi_41_42_ladder_5 = _1997;
            }
            _2142 = frontier_phi_41_42_ladder_5;
            _2144 = frontier_phi_41_42_ladder_4;
            _2146 = frontier_phi_41_42_ladder_3;
            _2148 = frontier_phi_41_42_ladder;
            _2150 = frontier_phi_41_42_ladder_2;
            _2152 = frontier_phi_41_42_ladder_1;
        }
        float _2157 = isnan(1.0) ? _481 : (isnan(_481) ? 1.0 : min(_481, 1.0));
        _1920 = (_2157 * _2148) + _1636;
        _1922 = (_2157 * _2150) + _1637;
        _1924 = (_2157 * _2152) + _1638;
        _1926 = ((_2142 * _466) * _2157) + _1803;
        _1928 = ((_2144 * _468) * _2157) + _1804;
        _1930 = ((_2146 * _469) * _2157) + _1805;
    }
    else
    {
        _1920 = _1636;
        _1922 = _1637;
        _1924 = _1638;
        _1926 = _1803;
        _1928 = _1804;
        _1930 = _1805;
    }
    float _3753 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _3764 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _3775 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _3786 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _1955 = cbInstanceData._m0[_441 + 6u].w * (isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0)));
    float _1960 = _400 / cbSceneParam._m0[86u].x;
    float _1961 = _401 / cbSceneParam._m0[86u].y;
    vec4 _1975 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1960, _1961, (log2((isnan(cbSceneParam._m0[77u].w) ? _334 : (isnan(_334) ? cbSceneParam._m0[77u].w : min(_334, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1977 = _1975.x;
    float _1978 = _1975.y;
    float _1979 = _1975.z;
    float _1980 = _1975.w;
    float _2061;
    float _2063;
    float _2065;
    float _2067;
    if (_334 > cbSceneParam._m0[78u].w)
    {
        float _2022 = isnan(_334) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _334 : min(cbSceneParam._m0[80u].w, _334));
        float _2023 = _2022 / _334;
        float _2034 = _2023 * _385;
        float _2035 = _386 * _2023;
        float _2036 = (-0.0) - _2035;
        float _2038 = _2023 * _387;
        float _2040 = (cbSceneParam._m0[77u].w * _2036) / _2022;
        float _2041 = _2040 + cbSceneParam._m0[79u].w;
        float _2042 = cbSceneParam._m0[79u].w - _2035;
        float _2048 = sqrt(((_2034 * _2034) + (_2035 * _2035)) + (_2038 * _2038));
        float _2051 = (1.0 - (cbSceneParam._m0[77u].w / _2022)) * _2048;
        float _2057 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2059 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2268;
        if (abs((_2036 - _2040) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2268 = ((((_2041 > 0.0) ? exp2(_2057 * _2041) : (2.0 - exp2(_2059 * _2041))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2051;
        }
        else
        {
            float _2203 = 1.0 / cbSceneParam._m0[80u].x;
            float _2204 = isnan(_2042) ? _2041 : (isnan(_2041) ? _2042 : max(_2041, _2042));
            float _2205 = isnan(_2042) ? _2041 : (isnan(_2041) ? _2042 : min(_2041, _2042));
            float _2214 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : min(_2204, 0.0));
            float _2215 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : min(_2205, 0.0));
            _2268 = ((abs(_2048 / _2036) * cbSceneParam._m0[80u].y) * ((((_2214 - _2215) * 2.0) - ((exp2(_2057 * (isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0)))) - exp2(_2057 * (isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0))))) * _2203)) - ((exp2(_2059 * _2214) - exp2(_2059 * _2215)) * _2203))) + (_2051 * cbSceneParam._m0[80u].z);
        }
        vec4 _2270 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1960, _1961, 1.0), 0.0);
        float _2279 = exp2((_2268 * (-1.44269502162933349609375)) * (1.0 - _2270.w));
        float _2280 = log2(_2279);
        float _2296 = log2(_1980);
        _2061 = (exp2(_2296 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2280 * cbSceneParam._m0[78u].x)) * _2270.x) / cbSceneParam._m0[78u].x)) + _1977;
        _2063 = (exp2(_2296 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2280 * cbSceneParam._m0[78u].y)) * _2270.y) / cbSceneParam._m0[78u].y)) + _1978;
        _2065 = (exp2(_2296 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2280 * cbSceneParam._m0[78u].z)) * _2270.z) / cbSceneParam._m0[78u].z)) + _1979;
        _2067 = _2279 * _1980;
    }
    else
    {
        _2061 = _1977;
        _2063 = _1978;
        _2065 = _1979;
        _2067 = _1980;
    }
    float _2079 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2080 = _2079 == 3.0;
    float _2081 = log2(_2067);
    float _2088 = exp2(_2081 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0))) * (_1920 + ((isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0))) * _481))) + ((_1926 + ((isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0))) * _1290)) * cbPerFrame._m0[3u].x));
    float _2089 = exp2(_2081 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0))) * (_1922 + ((isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0))) * _481))) + ((_1928 + ((isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0))) * _1290)) * cbPerFrame._m0[3u].x));
    float _2090 = exp2(_2081 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))) * (_1924 + ((isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0))) * _481))) + ((_1930 + ((isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0))) * _1290)) * cbPerFrame._m0[3u].x));
    float _2099 = (_2079 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2099 * (_2080 ? _2088 : (_2088 + (cbSceneParam._m0[72u].w * _2061)));
    SV_Target.y = _2099 * (_2080 ? _2089 : (_2089 + (cbSceneParam._m0[72u].w * _2063)));
    SV_Target.z = _2099 * (_2080 ? _2090 : (_2090 + (cbSceneParam._m0[72u].w * _2065)));
    SV_Target.w = _1955;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1955;
}


