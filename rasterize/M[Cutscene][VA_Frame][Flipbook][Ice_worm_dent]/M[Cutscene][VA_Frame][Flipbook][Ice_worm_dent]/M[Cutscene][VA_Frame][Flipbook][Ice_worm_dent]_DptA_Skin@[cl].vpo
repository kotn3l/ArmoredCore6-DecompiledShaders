#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_6;
layout(location = 9) in vec4 TEXCOORD_7;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 11) in vec4 TEXCOORD_3;
layout(location = 12) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec3 TEXCOORD_6_1;
layout(location = 7) out vec2 TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6_1.x = 0.0;
    TEXCOORD_6_1.y = 0.0;
    TEXCOORD_6_1.z = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    float _236 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _249 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _649 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _257 = (isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0))) * _249;
    precise float _258 = TEXCOORD_4.x * 255.0;
    precise float _260 = TEXCOORD_4.y * 255.0;
    precise float _261 = _260 * 256.0;
    precise float _263 = _258 + _261;
    precise float _264 = _263 + 0.5;
    float _266 = floor(_257);
    uint _267 = uint(int(_264));
    uint _268 = uint(int(_266));
    vec4 _269 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_267, _268)), int(0u));
    float _271 = _269.x;
    float _272 = _269.y;
    float _273 = _269.z;
    precise float _281 = _266 + 1.0;
    uint _283 = uint(int(isnan(_249) ? _281 : (isnan(_281) ? _249 : min(_281, _249))));
    vec4 _284 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_267, _283)), int(0u));
    float _289 = fract(_257);
    vec4 _302 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_267, _268)), int(0u));
    float _304 = _302.x;
    float _305 = _302.y;
    float _306 = _302.z;
    vec4 _307 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_267, _283)), int(0u));
    precise float _312 = _307.x - _304;
    precise float _313 = _307.y - _305;
    precise float _314 = _307.z - _306;
    precise float _315 = _289 * _312;
    precise float _316 = _289 * _313;
    precise float _317 = _289 * _314;
    precise float _318 = _304 + _315;
    precise float _319 = _305 + _316;
    precise float _320 = _306 + _317;
    uint _325 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _327 = texelFetch(g_InstanceIndexBuffer, int(_325));
    uint _328 = _327.x;
    precise float _329 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _332 = isnan(_329) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _329 : max(0.001000000047497451305389404296875, _329));
    precise float _334 = BLENDWEIGHT.x / _332;
    precise float _335 = BLENDWEIGHT.y / _332;
    precise float _336 = BLENDWEIGHT.z / _332;
    precise float _337 = BLENDWEIGHT.w / _332;
    uvec4 _344 = floatBitsToUint(cbInstanceData._m0[(_328 * 13u) + 4u]);
    uint _345 = _344.x;
    uint _347 = (_345 + uint(float(BLENDINDICES.x))) * 3u;
    uint _354 = _347 + 1u;
    uint _361 = _347 + 2u;
    precise float _368 = _334 * cbObjMatrix._m0[_347].x;
    precise float _369 = _334 * cbObjMatrix._m0[_354].x;
    precise float _370 = _334 * cbObjMatrix._m0[_361].x;
    precise float _371 = _334 * cbObjMatrix._m0[_347].y;
    precise float _372 = _334 * cbObjMatrix._m0[_354].y;
    precise float _373 = _334 * cbObjMatrix._m0[_361].y;
    precise float _374 = _334 * cbObjMatrix._m0[_347].z;
    precise float _375 = _334 * cbObjMatrix._m0[_354].z;
    precise float _376 = _334 * cbObjMatrix._m0[_361].z;
    precise float _377 = _334 * cbObjMatrix._m0[_347].w;
    precise float _378 = _334 * cbObjMatrix._m0[_354].w;
    precise float _379 = _334 * cbObjMatrix._m0[_361].w;
    uint _382 = (_345 + uint(float(BLENDINDICES.y))) * 3u;
    uint _389 = _382 + 1u;
    uint _396 = _382 + 2u;
    precise float _403 = _335 * cbObjMatrix._m0[_382].x;
    precise float _404 = _335 * cbObjMatrix._m0[_389].x;
    precise float _405 = _335 * cbObjMatrix._m0[_396].x;
    precise float _406 = _335 * cbObjMatrix._m0[_382].y;
    precise float _407 = _335 * cbObjMatrix._m0[_389].y;
    precise float _408 = _335 * cbObjMatrix._m0[_396].y;
    precise float _409 = _335 * cbObjMatrix._m0[_382].z;
    precise float _410 = _335 * cbObjMatrix._m0[_389].z;
    precise float _411 = _335 * cbObjMatrix._m0[_396].z;
    precise float _412 = _335 * cbObjMatrix._m0[_382].w;
    precise float _413 = _335 * cbObjMatrix._m0[_389].w;
    precise float _414 = _335 * cbObjMatrix._m0[_396].w;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    uint _429 = (_345 + uint(float(BLENDINDICES.z))) * 3u;
    uint _436 = _429 + 1u;
    uint _443 = _429 + 2u;
    precise float _450 = _336 * cbObjMatrix._m0[_429].x;
    precise float _451 = _336 * cbObjMatrix._m0[_436].x;
    precise float _452 = _336 * cbObjMatrix._m0[_443].x;
    precise float _453 = _336 * cbObjMatrix._m0[_429].y;
    precise float _454 = _336 * cbObjMatrix._m0[_436].y;
    precise float _455 = _336 * cbObjMatrix._m0[_443].y;
    precise float _456 = _336 * cbObjMatrix._m0[_429].z;
    precise float _457 = _336 * cbObjMatrix._m0[_436].z;
    precise float _458 = _336 * cbObjMatrix._m0[_443].z;
    precise float _459 = _336 * cbObjMatrix._m0[_429].w;
    precise float _460 = _336 * cbObjMatrix._m0[_436].w;
    precise float _461 = _336 * cbObjMatrix._m0[_443].w;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    uint _476 = (_345 + uint(float(BLENDINDICES.w))) * 3u;
    uint _483 = _476 + 1u;
    uint _490 = _476 + 2u;
    precise float _497 = _337 * cbObjMatrix._m0[_476].x;
    precise float _498 = _337 * cbObjMatrix._m0[_483].x;
    precise float _499 = _337 * cbObjMatrix._m0[_490].x;
    precise float _500 = _337 * cbObjMatrix._m0[_476].y;
    precise float _501 = _337 * cbObjMatrix._m0[_483].y;
    precise float _502 = _337 * cbObjMatrix._m0[_490].y;
    precise float _503 = _337 * cbObjMatrix._m0[_476].z;
    precise float _504 = _337 * cbObjMatrix._m0[_483].z;
    precise float _505 = _337 * cbObjMatrix._m0[_490].z;
    precise float _506 = _337 * cbObjMatrix._m0[_476].w;
    precise float _507 = _337 * cbObjMatrix._m0[_483].w;
    precise float _508 = _337 * cbObjMatrix._m0[_490].w;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = POSITION.x * _509;
    precise float _522 = POSITION.y * _512;
    precise float _523 = _522 + _521;
    precise float _524 = POSITION.z * _515;
    precise float _525 = _524 + _523;
    precise float _526 = 1.0 * _518;
    precise float _527 = _526 + _525;
    precise float _528 = POSITION.x * _510;
    precise float _529 = POSITION.y * _513;
    precise float _530 = _529 + _528;
    precise float _531 = POSITION.z * _516;
    precise float _532 = _531 + _530;
    precise float _533 = 1.0 * _519;
    precise float _534 = _533 + _532;
    precise float _535 = POSITION.x * _511;
    precise float _536 = POSITION.y * _514;
    precise float _537 = _536 + _535;
    precise float _538 = POSITION.z * _517;
    precise float _539 = _538 + _537;
    precise float _540 = 1.0 * _520;
    precise float _541 = _540 + _539;
    precise float _542 = _318 + _527;
    precise float _543 = _319 + _534;
    precise float _544 = _320 + _541;
    precise float _560 = _542 - cbSceneParam._m0[3u].x;
    precise float _561 = _543 - cbSceneParam._m0[3u].y;
    precise float _562 = _544 - cbSceneParam._m0[3u].z;
    precise float _590 = _560 * cbSceneParam._m0[24u].x;
    precise float _591 = _561 * cbSceneParam._m0[24u].y;
    precise float _592 = _591 + _590;
    precise float _593 = _562 * cbSceneParam._m0[24u].z;
    precise float _594 = _593 + _592;
    precise float _595 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _596 = _595 + _594;
    precise float _597 = _560 * cbSceneParam._m0[25u].x;
    precise float _598 = _561 * cbSceneParam._m0[25u].y;
    precise float _599 = _598 + _597;
    precise float _600 = _562 * cbSceneParam._m0[25u].z;
    precise float _601 = _600 + _599;
    precise float _602 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _603 = _602 + _601;
    precise float _604 = _560 * cbSceneParam._m0[26u].x;
    precise float _605 = _561 * cbSceneParam._m0[26u].y;
    precise float _606 = _605 + _604;
    precise float _607 = _562 * cbSceneParam._m0[26u].z;
    precise float _608 = _607 + _606;
    precise float _609 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _610 = _609 + _608;
    precise float _611 = _560 * cbSceneParam._m0[27u].x;
    precise float _612 = _561 * cbSceneParam._m0[27u].y;
    precise float _613 = _612 + _611;
    precise float _614 = _562 * cbSceneParam._m0[27u].z;
    precise float _615 = _614 + _613;
    precise float _616 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _617 = _616 + _615;
    gl_Position.x = _596;
    gl_Position.y = _603;
    gl_Position.z = _610;
    gl_Position.w = _617;
    POSITION_1.x = _596;
    POSITION_1.y = _603;
    POSITION_1.z = _610;
    POSITION_1.w = _617;
    NORMAL_1.x = (((_284.x - _271) * 2.0) * _289) + ((_271 * 2.0) + (-1.0));
    NORMAL_1.y = (((_284.y - _272) * 2.0) * _289) + ((_272 * 2.0) + (-1.0));
    NORMAL_1.z = (_289 * ((_284.z - _273) * 2.0)) + ((_273 * 2.0) + (-1.0));
    NORMAL_1.w = float(_328);
    TANGENT_1.x = fma(_239, _515, fma(_238, _512, _509 * _236));
    TANGENT_1.y = fma(_239, _516, fma(_238, _513, _510 * _236));
    TANGENT_1.z = fma(_239, _517, fma(_238, _514, _511 * _236));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_4.x;
    TEXCOORD_4_1.w = TEXCOORD_4.y;
    TEXCOORD_6_1.x = COLOR_1.x;
    TEXCOORD_6_1.y = TEXCOORD_2.x;
    TEXCOORD_6_1.z = TEXCOORD_3.x;
    TEXCOORD_12.x = _610;
    TEXCOORD_12.y = _617;
}


