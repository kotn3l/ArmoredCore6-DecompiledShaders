#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_6;
layout(location = 9) in vec4 TEXCOORD_7;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 11) in vec4 TEXCOORD_3;
layout(location = 12) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    precise float _122 = float(int(uint(TEXCOORD_1.x))) * 0.00048828125;
    precise float _124 = float(int(uint(TEXCOORD_1.y))) * 0.00048828125;
    precise float _125 = _122 + 0.0;
    precise float _126 = _124 + 0.0;
    precise float _135 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _433 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _144 = (isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0))) * _135;
    precise float _145 = TEXCOORD_4.x * 255.0;
    precise float _147 = TEXCOORD_4.y * 255.0;
    precise float _148 = _147 * 256.0;
    precise float _150 = _145 + _148;
    precise float _151 = _150 + 0.5;
    float _153 = floor(_144);
    precise float _154 = _153 + 1.0;
    float _156 = fract(_144);
    uint _157 = uint(int(_151));
    vec4 _159 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_157, uint(int(_153)))), int(0u));
    float _161 = _159.x;
    float _162 = _159.y;
    float _163 = _159.z;
    vec4 _165 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_157, uint(int(isnan(_135) ? _154 : (isnan(_154) ? _135 : min(_154, _135)))))), int(0u));
    precise float _170 = _165.x - _161;
    precise float _171 = _165.y - _162;
    precise float _172 = _165.z - _163;
    precise float _173 = _156 * _170;
    precise float _174 = _156 * _171;
    precise float _175 = _156 * _172;
    precise float _176 = _161 + _173;
    precise float _177 = _162 + _174;
    precise float _178 = _163 + _175;
    uint _183 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _187 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _190 = isnan(_187) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _187 : max(0.001000000047497451305389404296875, _187));
    precise float _192 = BLENDWEIGHT.x / _190;
    precise float _193 = BLENDWEIGHT.y / _190;
    precise float _194 = BLENDWEIGHT.z / _190;
    precise float _195 = BLENDWEIGHT.w / _190;
    uvec4 _203 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_183)).x * 13u) + 4u]);
    uint _204 = _203.x;
    uint _206 = (_204 + uint(float(BLENDINDICES.x))) * 3u;
    uint _213 = _206 + 1u;
    uint _220 = _206 + 2u;
    precise float _227 = _192 * cbObjMatrix._m0[_206].x;
    precise float _228 = _192 * cbObjMatrix._m0[_213].x;
    precise float _229 = _192 * cbObjMatrix._m0[_220].x;
    precise float _230 = _192 * cbObjMatrix._m0[_206].y;
    precise float _231 = _192 * cbObjMatrix._m0[_213].y;
    precise float _232 = _192 * cbObjMatrix._m0[_220].y;
    precise float _233 = _192 * cbObjMatrix._m0[_206].z;
    precise float _234 = _192 * cbObjMatrix._m0[_213].z;
    precise float _235 = _192 * cbObjMatrix._m0[_220].z;
    precise float _236 = _192 * cbObjMatrix._m0[_206].w;
    precise float _237 = _192 * cbObjMatrix._m0[_213].w;
    precise float _238 = _192 * cbObjMatrix._m0[_220].w;
    uint _241 = (_204 + uint(float(BLENDINDICES.y))) * 3u;
    uint _248 = _241 + 1u;
    uint _255 = _241 + 2u;
    precise float _262 = _193 * cbObjMatrix._m0[_241].x;
    precise float _263 = _193 * cbObjMatrix._m0[_248].x;
    precise float _264 = _193 * cbObjMatrix._m0[_255].x;
    precise float _265 = _193 * cbObjMatrix._m0[_241].y;
    precise float _266 = _193 * cbObjMatrix._m0[_248].y;
    precise float _267 = _193 * cbObjMatrix._m0[_255].y;
    precise float _268 = _193 * cbObjMatrix._m0[_241].z;
    precise float _269 = _193 * cbObjMatrix._m0[_248].z;
    precise float _270 = _193 * cbObjMatrix._m0[_255].z;
    precise float _271 = _193 * cbObjMatrix._m0[_241].w;
    precise float _272 = _193 * cbObjMatrix._m0[_248].w;
    precise float _273 = _193 * cbObjMatrix._m0[_255].w;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    uint _288 = (_204 + uint(float(BLENDINDICES.z))) * 3u;
    uint _295 = _288 + 1u;
    uint _302 = _288 + 2u;
    precise float _309 = _194 * cbObjMatrix._m0[_288].x;
    precise float _310 = _194 * cbObjMatrix._m0[_295].x;
    precise float _311 = _194 * cbObjMatrix._m0[_302].x;
    precise float _312 = _194 * cbObjMatrix._m0[_288].y;
    precise float _313 = _194 * cbObjMatrix._m0[_295].y;
    precise float _314 = _194 * cbObjMatrix._m0[_302].y;
    precise float _315 = _194 * cbObjMatrix._m0[_288].z;
    precise float _316 = _194 * cbObjMatrix._m0[_295].z;
    precise float _317 = _194 * cbObjMatrix._m0[_302].z;
    precise float _318 = _194 * cbObjMatrix._m0[_288].w;
    precise float _319 = _194 * cbObjMatrix._m0[_295].w;
    precise float _320 = _194 * cbObjMatrix._m0[_302].w;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    uint _335 = (_204 + uint(float(BLENDINDICES.w))) * 3u;
    uint _342 = _335 + 1u;
    uint _349 = _335 + 2u;
    precise float _356 = _195 * cbObjMatrix._m0[_335].x;
    precise float _357 = _195 * cbObjMatrix._m0[_342].x;
    precise float _358 = _195 * cbObjMatrix._m0[_349].x;
    precise float _359 = _195 * cbObjMatrix._m0[_335].y;
    precise float _360 = _195 * cbObjMatrix._m0[_342].y;
    precise float _361 = _195 * cbObjMatrix._m0[_349].y;
    precise float _362 = _195 * cbObjMatrix._m0[_335].z;
    precise float _363 = _195 * cbObjMatrix._m0[_342].z;
    precise float _364 = _195 * cbObjMatrix._m0[_349].z;
    precise float _365 = _195 * cbObjMatrix._m0[_335].w;
    precise float _366 = _195 * cbObjMatrix._m0[_342].w;
    precise float _367 = _195 * cbObjMatrix._m0[_349].w;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = POSITION.x * _368;
    precise float _381 = POSITION.y * _371;
    precise float _382 = _381 + _380;
    precise float _383 = POSITION.z * _374;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * _377;
    precise float _386 = _385 + _384;
    precise float _387 = POSITION.x * _369;
    precise float _388 = POSITION.y * _372;
    precise float _389 = _388 + _387;
    precise float _390 = POSITION.z * _375;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * _378;
    precise float _393 = _392 + _391;
    precise float _394 = POSITION.x * _370;
    precise float _395 = POSITION.y * _373;
    precise float _396 = _395 + _394;
    precise float _397 = POSITION.z * _376;
    precise float _398 = _397 + _396;
    precise float _399 = 1.0 * _379;
    precise float _400 = _399 + _398;
    precise float _401 = _176 + _386;
    precise float _402 = _177 + _393;
    precise float _403 = _178 + _400;
    precise float _404 = _125 * 2.0;
    precise float _406 = _126 * 2.0;
    precise float _407 = _404 + (-1.0);
    precise float _408 = 1.0 - _406;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    gl_Position.x = _407;
    gl_Position.y = _408;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_5.x = _401;
    TEXCOORD_5.y = _402;
    TEXCOORD_5.z = _403;
}


