#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec3 TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1454;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _232 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _239 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _262 = cbMtdParam._m0[18u].z + TEXCOORD.x;
    float _263 = cbMtdParam._m0[18u].w + TEXCOORD.y;
    vec4 _276 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _262) + cbTextureTilingScale._m0[0u].z, (_263 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _282 = _276.x * cbMtdParam._m0[10u].y;
    float _283 = _276.y * cbMtdParam._m0[10u].z;
    float _284 = _276.z * cbMtdParam._m0[10u].w;
    float _296 = cbMtdParam._m0[21u].x + TEXCOORD.x;
    float _297 = cbMtdParam._m0[21u].y + TEXCOORD.y;
    vec4 _310 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _296) + cbTextureTilingScale._m0[4u].z, (_297 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    uvec4 _322 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _348 = exp2(log2(cbMtdParam._m0[15u].z * texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) * cbMtdParam._m0[15u].w);
    float _4100 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _376 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x * TEXCOORD_6.y) + TEXCOORD_6.y) * cbMtdParam._m0[15u].y) * cbMtdParam._m0[14u].z);
    float _4111 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _378 = (_322.w != 0u) ? (isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0))) : (isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0)));
    float _385 = (_378 * ((_310.x * cbMtdParam._m0[13u].y) - _282)) + _282;
    float _386 = (_378 * ((_310.y * cbMtdParam._m0[13u].z) - _283)) + _283;
    float _387 = (_378 * ((_310.z * cbMtdParam._m0[13u].w) - _284)) + _284;
    float _399 = cbMtdParam._m0[20u].z + TEXCOORD.x;
    float _400 = cbMtdParam._m0[20u].w + TEXCOORD.y;
    vec4 _413 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _399) + cbTextureTilingScale._m0[11u].z, (_400 * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _451 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x * TEXCOORD_6.z) + TEXCOORD_6.z) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[16u].y);
    float _4122 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    vec4 _469 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _471 = _469.x;
    float _480 = exp2(log2(((_322.z != 0u) ? (1.0 - _471) : _471) * cbMtdParam._m0[17u].w) * cbMtdParam._m0[18u].x);
    float _4133 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _488 = cbMtdParam._m0[19u].y * cbMtdParam._m0[19u].x;
    float _491 = (_488 + (-1.0)) * cbMtdParam._m0[17u].x;
    bool _493 = _322.y != 0u;
    float _505 = (cbMtdParam._m0[20u].x + cbMtdParam._m0[17u].y) + ((TEXCOORD.z - cbMtdParam._m0[20u].x) * cbMtdParam._m0[19u].z);
    float _507 = (cbMtdParam._m0[20u].y + cbMtdParam._m0[16u].w) + ((TEXCOORD.w - cbMtdParam._m0[20u].y) * cbMtdParam._m0[19u].w);
    float _4144 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _4155 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    uint _513 = uint(int(floor(_491)));
    uint _515 = _513 + 1u;
    uint _516 = uint(int(_488));
    uint _517 = _516 * 3u;
    uint _518 = _513 - _517 * (_513 / _517);
    uint _519 = _515 - _517 * (_515 / _517);
    float _522 = float(int(_518 - _516 * (_518 / _516)));
    float _526 = float(int(_519 - _516 * (_519 / _516)));
    float _530 = 1.0 / cbMtdParam._m0[19u].x;
    float _531 = 1.0 / cbMtdParam._m0[19u].y;
    float _532 = fract(_493 ? _505 : (isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0))));
    float _533 = fract(_493 ? _507 : (isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0))));
    vec4 _560 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_532 + (_522 - cbMtdParam._m0[19u].x * trunc(_522 / cbMtdParam._m0[19u].x))) * _530) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_533 + floor(_522 / cbMtdParam._m0[19u].x)) * _531) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w));
    float _562 = _560.x;
    float _565 = ((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_532 + (_526 - cbMtdParam._m0[19u].x * trunc(_526 / cbMtdParam._m0[19u].x))) * _530) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_533 + floor(_526 / cbMtdParam._m0[19u].x)) * _531) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w)).x - _562) * fract(_491)) + _562;
    float _571 = exp2(log2(((_565 * (isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0)))) + _565) * cbMtdParam._m0[14u].w) * cbMtdParam._m0[15u].x);
    float _4166 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _573 = (floatBitsToUint(cbMtdParam._m0[10u]).x != 0u) ? (isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0))) : (isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0)));
    float _580 = (_573 * ((_413.x * cbMtdParam._m0[12u].y) - _385)) + _385;
    float _581 = (_573 * ((_413.y * cbMtdParam._m0[12u].z) - _386)) + _386;
    float _582 = (_573 * ((_413.z * cbMtdParam._m0[12u].w) - _387)) + _387;
    vec4 _592 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _594 = _592.x;
    bool _600 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _617 = ((_600 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _594)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _594))) - POSITION_1.w) / cbMtdParam._m0[16u].z;
    float _4177 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _618 = isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0));
    float _4188 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _619 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
    float _638 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _262) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _263) + cbTextureTilingScale._m0[8u].w)).x + cbMtdParam._m0[14u].y;
    float _659 = (((cbMtdParam._m0[18u].y - _638) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _296) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _297) + cbTextureTilingScale._m0[2u].w)).x) * _378) + _638;
    float _680 = (((cbMtdParam._m0[17u].z - _659) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * _399) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _400) + cbTextureTilingScale._m0[12u].w)).x) * _573) + _659;
    vec4 _692 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _262) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _263) + cbTextureTilingScale._m0[1u].w));
    float _694 = _692.x;
    float _695 = _692.y;
    float _696 = _692.z;
    vec4 _708 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _296) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _297) + cbTextureTilingScale._m0[3u].w));
    float _719 = ((_708.x - _694) * _378) + _694;
    float _720 = ((_708.y - _695) * _378) + _695;
    float _721 = ((_708.z - _696) * _378) + _696;
    vec4 _733 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _399) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _400) + cbTextureTilingScale._m0[13u].w));
    float _746 = ((_733.z - _721) * _573) + _721;
    float _750 = ((((_733.x - _719) * _573) + _719) * 2.0) + (-1.0);
    float _751 = ((((_733.y - _720) * _573) + _720) * 2.0) + (-1.0);
    float _752 = dot(vec2(_750, _751), vec2(_750, _751));
    float _4199 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _757 = sqrt(1.0 - (isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0))));
    bool _762 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _781 = fma(_757, _239 * NORMAL.x, fma(_751, _246 * TANGENT.x, (_232 * _225) * _750));
    float _784 = fma(_757, _239 * NORMAL.y, fma(_751, _246 * TANGENT.y, (_232 * _226) * _750));
    float _787 = fma(_757, _239 * NORMAL.z, fma(_751, _246 * TANGENT.z, (_232 * _227) * _750));
    float _791 = inversesqrt(dot(vec3(_781, _784, _787), vec3(_781, _784, _787)));
    float _792 = _791 * _781;
    float _793 = _791 * _784;
    float _794 = _791 * _787;
    float _4210 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _795 = isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0));
    float _4221 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _796 = isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0));
    float _4232 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _797 = isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0));
    float _4243 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _798 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
    float _4254 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _799 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
    float _4265 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _800 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
    float _805 = _600 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _845 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _855 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _845);
    float _856 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _845);
    float _857 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _845);
    float _861 = inversesqrt(dot(vec3(_855, _856, _857), vec3(_855, _856, _857)));
    float _862 = _855 * _861;
    float _863 = _856 * _861;
    float _864 = _857 * _861;
    float _869 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _870 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _872 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _874 = _872.w;
    float _892 = fma(_794, cbSceneParam._m0[5u].z, fma(_793, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _792));
    float _895 = fma(_794, cbSceneParam._m0[6u].z, fma(_793, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _792));
    float _898 = fma(_794, cbSceneParam._m0[7u].z, fma(_793, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _792));
    vec4 _900 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _902 = _900.x;
    float _914 = (((_900.y - _796) + (_900.w * _796)) * cbMtdParam._m0[3u].x) + _796;
    vec4 _915 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _931 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_902 * _902)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _915.z;
    float _939 = (((cbMatDynParam._m0[15u].x - _800) * cbMatDynParam._m0[15u].w) * _931) + _800;
    float _947 = ((_931 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _914)) + _914;
    uint _971 = uint(roundEven(NORMAL.w)) * 13u;
    uint _972 = _971 + 9u;
    uint _973 = _972 + uint(cbMatDynParam._m0[0u].w);
    float _979 = (cbMtdParam._m0[0u].x * _797) * cbInstanceData._m0[_973].x;
    float _980 = (cbMtdParam._m0[0u].y * _798) * cbInstanceData._m0[_973].y;
    float _981 = (cbMtdParam._m0[0u].z * _799) * cbInstanceData._m0[_973].z;
    float _4276 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _983 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _4298 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _984 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    vec4 _985 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    vec4 _990 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _1001 = (((_990.x - _939) + (_990.w * _939)) * cbMtdParam._m0[3u].x) + _939;
    float _1014 = (cbMtdParam._m0[3u].x * (((_982 * _874) - _982) + _985.x)) + _982;
    float _1015 = (cbMtdParam._m0[3u].x * (((_983 * _874) - _983) + _985.y)) + _983;
    float _1016 = (cbMtdParam._m0[3u].x * (((_984 * _874) - _984) + _985.z)) + _984;
    float _1030 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_939 * (_797 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_939 * (_798 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_939 * (_799 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y)).z;
    float _1034 = _1030 * cbMatDynParam._m0[13u].w;
    float _1044 = (_1034 * (cbMatDynParam._m0[13u].x - _1014)) + _1014;
    float _1045 = (_1034 * (cbMatDynParam._m0[13u].y - _1015)) + _1015;
    float _1046 = (_1034 * (cbMatDynParam._m0[13u].z - _1016)) + _1016;
    float _1054 = ((_1030 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _1001)) + _1001;
    float _1055 = 1.0 - _1054;
    float _1056 = _1055 * _1044;
    float _1057 = _1055 * _1045;
    float _1058 = _1055 * _1046;
    float _1062 = (_1044 + (-0.039999999105930328369140625)) * _1054;
    float _1063 = (_1045 + (-0.039999999105930328369140625)) * _1054;
    float _1064 = (_1046 + (-0.039999999105930328369140625)) * _1054;
    float _1065 = _1062 + 0.039999999105930328369140625;
    float _1066 = _1063 + 0.039999999105930328369140625;
    float _1067 = _1064 + 0.039999999105930328369140625;
    vec4 _1076 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _869, cbSceneParam._m0[86u].y * _870));
    float _1079 = _1076.x * TEXCOORD_6.x;
    float _1080 = dot(vec3(_792, _793, _794), vec3(_862, _863, _864));
    float _1083 = _1080 * 2.0;
    float _1087 = (_1083 * _792) - _862;
    float _1088 = (_1083 * _793) - _863;
    float _1089 = (_1083 * _794) - _864;
    float _1093 = abs(dot(vec3(_862, _863, _864), vec3(_792, _793, _794)));
    float _4309 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
    float _1095 = sqrt(_947);
    float _1108 = exp2((_1095 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1095 * 3.0));
    float _1114 = (1.0 - _1108) * ((_1095 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1115 = _1108 * _1095;
    float _1143 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1147 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1151 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1453;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1178 = fma(_1151, cbModelParam._m0[26u].z, fma(_1147, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1143));
        float _1182 = fma(_1151, cbModelParam._m0[27u].z, fma(_1147, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1143));
        float _1186 = fma(_1151, cbModelParam._m0[28u].z, fma(_1147, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1143));
        float _1211 = _1143 + _792;
        float _1212 = _1147 + _793;
        float _1213 = _1151 + _794;
        float _1223 = fma(_1213, cbModelParam._m0[26u].z, fma(_1212, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1211)) - _1178;
        float _1224 = fma(_1213, cbModelParam._m0[27u].z, fma(_1212, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1211)) - _1182;
        float _1225 = fma(_1213, cbModelParam._m0[28u].z, fma(_1212, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1211)) - _1186;
        float _1229 = inversesqrt(dot(vec3(_1223, _1224, _1225), vec3(_1223, _1224, _1225)));
        float _1242 = ((_1229 * _1223) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1178 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1243 = ((_1229 * _1224) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1182 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1244 = ((_1229 * _1225) / cbModelParam._m0[34u].z) + ((((((_1186 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1247 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1242, _1243, _1244), 0.0);
        vec4 _1254 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1242, _1243, _1244), 0.0);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1242, _1243, _1244), 0.0);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1242, _1243, _1244), 0.0);
        float _1281 = exp2((_1247.w + (-0.5)) * 20.0) * 2.0;
        float _1282 = _1281 * (_1247.x + (-0.5));
        float _1283 = _1281 * (_1247.y + (-0.5));
        float _1284 = _1281 * (_1247.z + (-0.5));
        float _1291 = exp2((_1254.w + (-0.5)) * 20.0) * 2.0;
        float _1292 = _1291 * (_1254.x + (-0.5));
        float _1293 = _1291 * (_1254.y + (-0.5));
        float _1294 = _1291 * (_1254.z + (-0.5));
        float _1301 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1302 = _1301 * (_1261.x + (-0.5));
        float _1303 = _1301 * (_1261.y + (-0.5));
        float _1304 = _1301 * (_1261.z + (-0.5));
        float _1311 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1312 = _1311 * (_1268.x + (-0.5));
        float _1313 = _1311 * (_1268.y + (-0.5));
        float _1314 = _1311 * (_1268.z + (-0.5));
        float _1315 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1316 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1317 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = _1282 * 0.5;
        float _1319 = _1292 * 0.5;
        float _1320 = _1302 * 0.5;
        float _1321 = dot(vec3(_1318, _1319, _1320), vec3(_1318, _1319, _1320));
        float _1326 = (_1321 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1321);
        float _1335 = (dot(vec3(_792, _793, _794), vec3(_1326 * _1318, _1326 * _1319, _1326 * _1320)) + 1.0) * 0.5;
        float _4335 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
        float _1345 = sqrt(((_1319 * _1319) + (_1318 * _1318)) + (_1320 * _1320)) / (_1315 + 9.9999997473787516355514526367188e-06);
        float _4346 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1347 = _1346 * 2.0;
        float _1351 = (1.0 - _1346) / (_1346 + 1.0);
        float _4357 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
        float _1361 = ((((1.0 - _1352) * (_1347 + 2.0)) * exp2(log2(isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_1347 + 1.0))) + _1352) * _1315;
        float _1362 = _1283 * 0.5;
        float _1363 = _1293 * 0.5;
        float _1364 = _1303 * 0.5;
        float _1365 = dot(vec3(_1362, _1363, _1364), vec3(_1362, _1363, _1364));
        float _1370 = (_1365 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1365);
        float _1378 = (dot(vec3(_792, _793, _794), vec3(_1370 * _1362, _1370 * _1363, _1370 * _1364)) + 1.0) * 0.5;
        float _4368 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1387 = sqrt(((_1363 * _1363) + (_1362 * _1362)) + (_1364 * _1364)) / (_1316 + 9.9999997473787516355514526367188e-06);
        float _4379 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1388 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1389 = _1388 * 2.0;
        float _1393 = (1.0 - _1388) / (_1388 + 1.0);
        float _4390 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1394 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
        float _1403 = ((((1.0 - _1394) * (_1389 + 2.0)) * exp2(log2(isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0))) * (_1389 + 1.0))) + _1394) * _1316;
        float _1404 = _1284 * 0.5;
        float _1405 = _1294 * 0.5;
        float _1406 = _1304 * 0.5;
        float _1407 = dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406));
        float _1412 = (_1407 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1407);
        float _1420 = (dot(vec3(_792, _793, _794), vec3(_1412 * _1404, _1412 * _1405, _1412 * _1406)) + 1.0) * 0.5;
        float _4401 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1429 = sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406)) / (_1317 + 9.9999997473787516355514526367188e-06);
        float _4412 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1431 = _1430 * 2.0;
        float _1435 = (1.0 - _1430) / (_1430 + 1.0);
        float _4423 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0));
        float _1445 = ((((1.0 - _1436) * (_1431 + 2.0)) * exp2(log2(isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (_1431 + 1.0))) + _1436) * _1317;
        _1453 = _1284;
        _1455 = _1283;
        _1456 = _1282;
        _1457 = _1294;
        _1458 = _1293;
        _1459 = _1292;
        _1460 = _1304;
        _1461 = _1303;
        _1462 = _1302;
        _1463 = _1317;
        _1464 = _1316;
        _1465 = _1315;
        _1466 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0)));
        _1467 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0)));
        _1468 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0)));
    }
    else
    {
        _1453 = _1454;
        _1455 = _1454;
        _1456 = _1454;
        _1457 = _1454;
        _1458 = _1454;
        _1459 = _1454;
        _1460 = _1454;
        _1461 = _1454;
        _1462 = _1454;
        _1463 = _1454;
        _1464 = _1454;
        _1465 = _1454;
        _1466 = 0.0;
        _1467 = 0.0;
        _1468 = 0.0;
    }
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1494 = fma(_1151, cbModelParam._m0[30u].z, fma(_1147, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1143));
        float _1498 = fma(_1151, cbModelParam._m0[31u].z, fma(_1147, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1143));
        float _1502 = fma(_1151, cbModelParam._m0[32u].z, fma(_1147, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1143));
        float _1525 = _1143 + _792;
        float _1526 = _1147 + _793;
        float _1527 = _1151 + _794;
        float _1537 = fma(_1527, cbModelParam._m0[30u].z, fma(_1526, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1525)) - _1494;
        float _1538 = fma(_1527, cbModelParam._m0[31u].z, fma(_1526, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1525)) - _1498;
        float _1539 = fma(_1527, cbModelParam._m0[32u].z, fma(_1526, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1525)) - _1502;
        float _1543 = inversesqrt(dot(vec3(_1537, _1538, _1539), vec3(_1537, _1538, _1539)));
        float _1556 = ((_1543 * _1537) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1494 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1557 = ((_1543 * _1538) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1498 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1558 = ((_1543 * _1539) / cbModelParam._m0[35u].z) + ((((((_1502 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1560 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1567 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1574 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        vec4 _1581 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1556, _1557, _1558), 0.0);
        float _1593 = exp2((_1560.w + (-0.5)) * 20.0) * 2.0;
        float _1594 = _1593 * (_1560.x + (-0.5));
        float _1595 = _1593 * (_1560.y + (-0.5));
        float _1596 = _1593 * (_1560.z + (-0.5));
        float _1603 = exp2((_1567.w + (-0.5)) * 20.0) * 2.0;
        float _1604 = _1603 * (_1567.x + (-0.5));
        float _1605 = _1603 * (_1567.y + (-0.5));
        float _1606 = _1603 * (_1567.z + (-0.5));
        float _1613 = exp2((_1574.w + (-0.5)) * 20.0) * 2.0;
        float _1614 = _1613 * (_1574.x + (-0.5));
        float _1615 = _1613 * (_1574.y + (-0.5));
        float _1616 = _1613 * (_1574.z + (-0.5));
        float _1623 = exp2((_1581.w + (-0.5)) * 20.0) * 2.0;
        float _1624 = _1623 * (_1581.x + (-0.5));
        float _1625 = _1623 * (_1581.y + (-0.5));
        float _1626 = _1623 * (_1581.z + (-0.5));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = _1594 * 0.5;
        float _1631 = _1604 * 0.5;
        float _1632 = _1614 * 0.5;
        float _1633 = dot(vec3(_1630, _1631, _1632), vec3(_1630, _1631, _1632));
        float _1638 = (_1633 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1633);
        float _1646 = (dot(vec3(_792, _793, _794), vec3(_1638 * _1630, _1638 * _1631, _1638 * _1632)) + 1.0) * 0.5;
        float _4464 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1655 = sqrt(((_1631 * _1631) + (_1630 * _1630)) + (_1632 * _1632)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4475 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1657 = _1656 * 2.0;
        float _1661 = (1.0 - _1656) / (_1656 + 1.0);
        float _4486 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1662 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
        float _1671 = ((((1.0 - _1662) * (_1657 + 2.0)) * exp2(log2(isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0))) * (_1657 + 1.0))) + _1662) * _1627;
        float _1672 = _1595 * 0.5;
        float _1673 = _1605 * 0.5;
        float _1674 = _1615 * 0.5;
        float _1675 = dot(vec3(_1672, _1673, _1674), vec3(_1672, _1673, _1674));
        float _1680 = (_1675 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1675);
        float _1688 = (dot(vec3(_792, _793, _794), vec3(_1680 * _1672, _1680 * _1673, _1680 * _1674)) + 1.0) * 0.5;
        float _4497 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1697 = sqrt(((_1673 * _1673) + (_1672 * _1672)) + (_1674 * _1674)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4508 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1699 = _1698 * 2.0;
        float _1703 = (1.0 - _1698) / (_1698 + 1.0);
        float _4519 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1704 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
        float _1713 = ((((1.0 - _1704) * (_1699 + 2.0)) * exp2(log2(isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0))) * (_1699 + 1.0))) + _1704) * _1628;
        float _1714 = _1596 * 0.5;
        float _1715 = _1606 * 0.5;
        float _1716 = _1616 * 0.5;
        float _1717 = dot(vec3(_1714, _1715, _1716), vec3(_1714, _1715, _1716));
        float _1722 = (_1717 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1717);
        float _1730 = (dot(vec3(_792, _793, _794), vec3(_1722 * _1714, _1722 * _1715, _1722 * _1716)) + 1.0) * 0.5;
        float _4530 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1739 = sqrt(((_1715 * _1715) + (_1714 * _1714)) + (_1716 * _1716)) / (_1629 + 9.9999997473787516355514526367188e-06);
        float _4541 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1741 = _1740 * 2.0;
        float _1745 = (1.0 - _1740) / (_1740 + 1.0);
        float _4552 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1746 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
        float _1755 = ((((1.0 - _1746) * (_1741 + 2.0)) * exp2(log2(isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (_1741 + 1.0))) + _1746) * _1629;
        _1763 = _1596;
        _1764 = _1595;
        _1765 = _1594;
        _1766 = _1606;
        _1767 = _1605;
        _1768 = _1604;
        _1769 = _1616;
        _1770 = _1615;
        _1771 = _1614;
        _1772 = _1629;
        _1773 = _1628;
        _1774 = _1627;
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)));
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0)));
        _1777 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)));
    }
    else
    {
        _1763 = _1454;
        _1764 = _1454;
        _1765 = _1454;
        _1766 = _1454;
        _1767 = _1454;
        _1768 = _1454;
        _1769 = _1454;
        _1770 = _1454;
        _1771 = _1454;
        _1772 = _1454;
        _1773 = _1454;
        _1774 = _1454;
        _1775 = 0.0;
        _1776 = 0.0;
        _1777 = 0.0;
    }
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1466)) + _1466;
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1467)) + _1467;
    float _1789 = (cbModelParam._m0[1u].x * (_1777 - _1468)) + _1468;
    float _1810 = fma(_1789, cbSceneParam._m0[89u].z, fma(_1788, cbSceneParam._m0[89u].y, _1787 * cbSceneParam._m0[89u].x));
    float _1813 = fma(_1789, cbSceneParam._m0[90u].z, fma(_1788, cbSceneParam._m0[90u].y, _1787 * cbSceneParam._m0[90u].x));
    float _1816 = fma(_1789, cbSceneParam._m0[91u].z, fma(_1788, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1787));
    float _1831 = _1087 * 0.5;
    float _1832 = _1088 * 0.5;
    float _1833 = _1089 * 0.5;
    float _1834 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1765, _1768, _1771, _1774));
    float _1837 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1840 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1871;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1847 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1453, _1457, _1460, _1463));
        float _1851 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1455, _1458, _1461, _1464));
        float _1855 = dot(vec4(_1831, _1832, _1833, 1.0), vec4(_1456, _1459, _1462, _1465));
        float _1862 = dot(vec4(cbModelParam._m0[39u]), vec4(_1831, _1832, _1833, 1.0));
        _1871 = dot(vec3(isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0)), isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1862) ? 0.0 : (isnan(0.0) ? _1862 : max(0.0, _1862))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1871 = 1.0;
    }
    float _1882;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1873 = dot(vec4(cbModelParam._m0[40u]), vec4(_1831, _1832, _1833, 1.0));
        _1882 = dot(vec3(isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0)), isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)), isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1873) ? 0.0 : (isnan(0.0) ? _1873 : max(0.0, _1873))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1882 = 1.0;
    }
    float _1886 = (_1882 * cbModelParam._m0[1u].x) + (_1871 * (1.0 - cbModelParam._m0[1u].x));
    float _1896 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _947);
    float _1897 = isnan(_1896) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1896 : min(cbModelParam._m0[25u].z, _1896));
    float _1977;
    float _1979;
    float _1981;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1944 = fma(_1151, cbModelParam._m0[13u].z, fma(_1147, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1143)) + cbModelParam._m0[13u].w;
        float _1948 = fma(_1151, cbModelParam._m0[14u].z, fma(_1147, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1143)) + cbModelParam._m0[14u].w;
        float _1952 = fma(_1151, cbModelParam._m0[15u].z, fma(_1147, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1143)) + cbModelParam._m0[15u].w;
        float _1955 = fma(_1089, cbModelParam._m0[13u].z, fma(_1088, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1087));
        float _1958 = fma(_1089, cbModelParam._m0[14u].z, fma(_1088, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1087));
        float _1961 = fma(_1089, cbModelParam._m0[15u].z, fma(_1088, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1087));
        float _1989;
        if (_1955 > 0.0)
        {
            _1989 = abs((1.0 - _1944) / _1955);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1955 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1944 + 1.0) / _1955);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1989 = frontier_phi_14_12_ladder;
        }
        float _2160;
        if (_1958 > 0.0)
        {
            _2160 = abs((1.0 - _1948) / _1958);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1948 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2160 = frontier_phi_23_19_ladder;
        }
        float _2455;
        if (_1961 > 0.0)
        {
            _2455 = abs((1.0 - _1952) / _1961);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1961 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1952 + 1.0) / _1961);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2455 = frontier_phi_35_30_ladder;
        }
        float _2457 = isnan(_2160) ? _1989 : (isnan(_1989) ? _2160 : min(_1989, _2160));
        float _2458 = isnan(_2455) ? _2457 : (isnan(_2457) ? _2455 : min(_2457, _2455));
        float _2462 = (_2458 * _1955) + _1944;
        float _2463 = (_2458 * _1958) + _1948;
        float _2464 = (_2458 * _1961) + _1952;
        float _2465 = _2458 * 9.9999997473787516355514526367188e-05;
        float _2467 = (-1.0) - _2465;
        float _2469 = _2465 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2464 > _2469) || ((_2464 < _2467) || ((_2463 > _2469) || ((_2463 < _2467) || ((_2462 < _2467) || (_2462 > _2469))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2609 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2464, cbModelParam._m0[9u].z, fma(_2463, cbModelParam._m0[9u].y, _2462 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2464, cbModelParam._m0[10u].z, fma(_2463, cbModelParam._m0[10u].y, _2462 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2464, cbModelParam._m0[11u].z, fma(_2463, cbModelParam._m0[11u].y, _2462 * cbModelParam._m0[11u].x))), _1897);
            frontier_phi_13_35_ladder = _2609.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2609.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2609.x * cbModelParam._m0[1u].y;
        }
        _1977 = frontier_phi_13_35_ladder_2;
        _1979 = frontier_phi_13_35_ladder_1;
        _1981 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1965 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1087, _1088, _1089), _1897);
        _1977 = _1965.x * cbModelParam._m0[1u].y;
        _1979 = _1965.y * cbModelParam._m0[1u].y;
        _1981 = _1965.z * cbModelParam._m0[1u].y;
    }
    float _1985 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _947);
    float _1986 = isnan(_1985) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1985 : min(cbModelParam._m0[25u].w, _1985));
    float _2075;
    float _2077;
    float _2079;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2039 = fma(_1151, cbModelParam._m0[21u].z, fma(_1147, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1143)) + cbModelParam._m0[21u].w;
        float _2043 = fma(_1151, cbModelParam._m0[22u].z, fma(_1147, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1143)) + cbModelParam._m0[22u].w;
        float _2047 = fma(_1151, cbModelParam._m0[23u].z, fma(_1147, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1143)) + cbModelParam._m0[23u].w;
        float _2050 = fma(_1089, cbModelParam._m0[21u].z, fma(_1088, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1087));
        float _2053 = fma(_1089, cbModelParam._m0[22u].z, fma(_1088, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1087));
        float _2056 = fma(_1089, cbModelParam._m0[23u].z, fma(_1088, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1087));
        float _2165;
        if (_2050 > 0.0)
        {
            _2165 = abs((1.0 - _2039) / _2050);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2050 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2039 + 1.0) / _2050);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2165 = frontier_phi_25_21_ladder;
        }
        float _2482;
        if (_2053 > 0.0)
        {
            _2482 = abs((1.0 - _2043) / _2053);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2053 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2043 + 1.0) / _2053);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2482 = frontier_phi_37_32_ladder;
        }
        float _2820;
        if (_2056 > 0.0)
        {
            _2820 = abs((1.0 - _2047) / _2056);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2056 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2047 + 1.0) / _2056);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2820 = frontier_phi_47_44_ladder;
        }
        float _2822 = isnan(_2482) ? _2165 : (isnan(_2165) ? _2482 : min(_2165, _2482));
        float _2823 = isnan(_2820) ? _2822 : (isnan(_2822) ? _2820 : min(_2822, _2820));
        float _2827 = (_2823 * _2050) + _2039;
        float _2828 = (_2823 * _2053) + _2043;
        float _2829 = (_2823 * _2056) + _2047;
        float _2830 = _2823 * 9.9999997473787516355514526367188e-05;
        float _2831 = (-1.0) - _2830;
        float _2833 = _2830 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2829 > _2833) || ((_2829 < _2831) || ((_2828 > _2833) || ((_2828 < _2831) || ((_2827 < _2831) || (_2827 > _2833))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2951 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2829, cbModelParam._m0[17u].z, fma(_2828, cbModelParam._m0[17u].y, _2827 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2829, cbModelParam._m0[18u].z, fma(_2828, cbModelParam._m0[18u].y, _2827 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2829, cbModelParam._m0[19u].z, fma(_2828, cbModelParam._m0[19u].y, _2827 * cbModelParam._m0[19u].x))), _1986);
            frontier_phi_22_47_ladder = _2951.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2951.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2951.x * cbModelParam._m0[1u].z;
        }
        _2075 = frontier_phi_22_47_ladder_2;
        _2077 = frontier_phi_22_47_ladder_1;
        _2079 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2059 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1087, _1088, _1089), _1986);
        _2075 = _2059.x * cbModelParam._m0[1u].z;
        _2077 = _2059.y * cbModelParam._m0[1u].z;
        _2079 = _2059.z * cbModelParam._m0[1u].z;
    }
    float _2092 = (((_1114 * _1065) + _1115) * _1079) * ((cbModelParam._m0[1u].w * (_2075 - _1977)) + _1977);
    float _2094 = (((_1114 * _1066) + _1115) * _1079) * ((cbModelParam._m0[1u].w * (_2077 - _1979)) + _1979);
    float _2096 = (((_1114 * _1067) + _1115) * _1079) * ((cbModelParam._m0[1u].w * (_2079 - _1981)) + _1981);
    float _2099 = fma(_2096, cbSceneParam._m0[89u].z, fma(_2094, cbSceneParam._m0[89u].y, _2092 * cbSceneParam._m0[89u].x));
    float _2102 = fma(_2096, cbSceneParam._m0[90u].z, fma(_2094, cbSceneParam._m0[90u].y, _2092 * cbSceneParam._m0[90u].x));
    float _2105 = fma(_2096, cbSceneParam._m0[91u].z, fma(_2094, cbSceneParam._m0[91u].y, _2092 * cbSceneParam._m0[91u].x));
    float _2139 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2143 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2147 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2152 = _2139 / _2151;
    float _2153 = _2143 / _2151;
    float _2154 = _2147 / _2151;
    float _2301;
    float _2302;
    float _2303;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2181 = ((uint(_2154 > cbSceneParam._m0[59u].y) + uint(_2154 > cbSceneParam._m0[59u].x)) + uint(_2154 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2182 = _2181 + 43u;
        uint _2190 = _2181 + 44u;
        uint _2198 = _2181 + 45u;
        uint _2206 = _2181 + 46u;
        float _2217 = fma(_2151, cbSceneParam._m0[_2182].w, fma(_2147, cbSceneParam._m0[_2182].z, fma(_2143, cbSceneParam._m0[_2182].y, _2139 * cbSceneParam._m0[_2182].x)));
        float _2221 = fma(_2151, cbSceneParam._m0[_2190].w, fma(_2147, cbSceneParam._m0[_2190].z, fma(_2143, cbSceneParam._m0[_2190].y, _2139 * cbSceneParam._m0[_2190].x)));
        float _2229 = fma(_2151, cbSceneParam._m0[_2206].w, fma(_2147, cbSceneParam._m0[_2206].z, fma(_2143, cbSceneParam._m0[_2206].y, _2139 * cbSceneParam._m0[_2206].x)));
        float _2234 = cbSceneParam._m0[33u].z * _2229;
        float _2236 = cbSceneParam._m0[33u].w * _2229;
        float _2239 = fma(_2151, cbSceneParam._m0[_2198].w, fma(_2147, cbSceneParam._m0[_2198].z, fma(_2143, cbSceneParam._m0[_2198].y, _2139 * cbSceneParam._m0[_2198].x))) / _2229;
        float _2287 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
        float _4678 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
        float _2294 = (isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 + _2217) / _2229, (_2236 + _2221) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2236 + _2217) / _2229, (_2221 - _2234) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2234) / _2229, (_2221 - _2236) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2236) / _2229, (_2234 + _2221) / _2229), _2239), 0.0)).x), vec4(0.25)));
        _2301 = 1.0 - (_2294 * cbSceneParam._m0[34u].x);
        _2302 = 1.0 - (_2294 * cbSceneParam._m0[34u].y);
        _2303 = 1.0 - (_2294 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2301 = 1.0;
        _2302 = 1.0;
        _2303 = 1.0;
    }
    float _2367;
    float _2369;
    float _2371;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2355 = fma(_2151, cbSceneParam._m0[63u].w, fma(_2147, cbSceneParam._m0[63u].z, fma(_2143, cbSceneParam._m0[63u].y, _2139 * cbSceneParam._m0[63u].x)));
        float _2356 = fma(_2151, cbSceneParam._m0[60u].w, fma(_2147, cbSceneParam._m0[60u].z, fma(_2143, cbSceneParam._m0[60u].y, _2139 * cbSceneParam._m0[60u].x))) / _2355;
        float _2357 = fma(_2151, cbSceneParam._m0[61u].w, fma(_2147, cbSceneParam._m0[61u].z, fma(_2143, cbSceneParam._m0[61u].y, _2139 * cbSceneParam._m0[61u].x))) / _2355;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2356 >= cbSceneParam._m0[64u].x) && (_2357 >= cbSceneParam._m0[64u].y)) && (_2356 <= cbSceneParam._m0[64u].z)) && (_2357 <= cbSceneParam._m0[64u].w))
        {
            float _2495 = fma(_2151, cbSceneParam._m0[62u].w, fma(_2147, cbSceneParam._m0[62u].z, fma(_2143, cbSceneParam._m0[62u].y, _2139 * cbSceneParam._m0[62u].x))) / _2355;
            float _2499 = isnan(cbSceneParam._m0[41u].w) ? _2495 : (isnan(_2495) ? cbSceneParam._m0[41u].w : max(_2495, cbSceneParam._m0[41u].w));
            float _2542 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
            float _4694 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
            float _2549 = (isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2356, cbSceneParam._m0[33u].w + _2357), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2356, _2357 - cbSceneParam._m0[33u].z), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].z, _2357 - cbSceneParam._m0[33u].w), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2357), _2499), 0.0)).x), vec4(0.25)));
            float _2553 = 1.0 - (_2549 * cbSceneParam._m0[34u].x);
            float _2554 = 1.0 - (_2549 * cbSceneParam._m0[34u].y);
            float _2555 = 1.0 - (_2549 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2555) ? _2303 : (isnan(_2303) ? _2555 : min(_2303, _2555));
            frontier_phi_34_33_ladder_1 = isnan(_2554) ? _2302 : (isnan(_2302) ? _2554 : min(_2302, _2554));
            frontier_phi_34_33_ladder_2 = isnan(_2553) ? _2301 : (isnan(_2301) ? _2553 : min(_2301, _2553));
        }
        else
        {
            frontier_phi_34_33_ladder = _2303;
            frontier_phi_34_33_ladder_1 = _2302;
            frontier_phi_34_33_ladder_2 = _2301;
        }
        _2367 = frontier_phi_34_33_ladder_2;
        _2369 = frontier_phi_34_33_ladder_1;
        _2371 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2367 = _2301;
        _2369 = _2302;
        _2371 = _2303;
    }
    uvec4 _2376 = floatBitsToUint(cbInstanceData._m0[_971 + 5u]);
    uint _2378 = _2376.x * 14u;
    uint _2379 = _2378 + 13u;
    float _2386 = _1079 + (-1.0);
    float _2391 = (cbLight._m0[_2379].x * _2386) + 1.0;
    float _2392 = (cbLight._m0[_2379].y * _2386) + 1.0;
    float _2393 = (cbLight._m0[_2379].z * _2386) + 1.0;
    float _2394 = (cbLight._m0[_2379].w * _2386) + 1.0;
    uint _2395 = _2378 + 5u;
    float _2401 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
    uint _2405 = _2378 + 4u;
    float _2414 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
    uint _2418 = _2378 | 1u;
    float _2429 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_792, _793, _794));
    float _2432 = dot(vec3(cbLight._m0[_2418].xyz), vec3(_792, _793, _794));
    float _4730 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _4741 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
    float _2437 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * 0.3183098733425140380859375;
    float _2439 = (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0))) * 0.3183098733425140380859375;
    float _2446 = ((cbLight._m0[_2395].x * _2401) * _2439) + (((cbLight._m0[_2405].x * _2367) * _2414) * _2437);
    float _2447 = ((_2401 * cbLight._m0[_2395].y) * _2439) + (((cbLight._m0[_2405].y * _2369) * _2414) * _2437);
    float _2448 = ((_2401 * cbLight._m0[_2395].z) * _2439) + (((cbLight._m0[_2405].z * _2371) * _2414) * _2437);
    uvec4 _2452 = floatBitsToUint(cbLight._m0[_2378 + 12u]);
    bool _2454 = _2452.x == 0u;
    float _2556;
    float _2558;
    float _2560;
    if (_2454)
    {
        _2556 = _2446;
        _2558 = _2447;
        _2560 = _2448;
    }
    else
    {
        uint _2564 = _2378 + 6u;
        float _2580 = (dot(vec3(cbLight._m0[_2378 + 2u].xyz), vec3(_792, _793, _794)) * 0.5) + 0.5;
        float _2581 = _2580 * _2580;
        float _4752 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
        float _2582 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
        float _2583 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2556 = (((cbLight._m0[_2564].x * 0.3183098733425140380859375) * _2582) * _2583) + _2446;
        _2558 = (((cbLight._m0[_2564].y * 0.3183098733425140380859375) * _2582) * _2583) + _2447;
        _2560 = (((cbLight._m0[_2564].z * 0.3183098733425140380859375) * _2582) * _2583) + _2448;
    }
    bool _2563 = _2452.y == 0u;
    float _2618;
    float _2620;
    float _2622;
    if (_2563)
    {
        _2618 = _2556;
        _2620 = _2558;
        _2622 = _2560;
    }
    else
    {
        uint _2791 = _2378 + 7u;
        float _2807 = (dot(vec3(cbLight._m0[_2378 + 3u].xyz), vec3(_792, _793, _794)) * 0.5) + 0.5;
        float _2808 = _2807 * _2807;
        float _4768 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2809 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
        float _2810 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2618 = (((cbLight._m0[_2791].x * 0.3183098733425140380859375) * _2809) * _2810) + _2556;
        _2620 = (((cbLight._m0[_2791].y * 0.3183098733425140380859375) * _2809) * _2810) + _2558;
        _2622 = (((cbLight._m0[_2791].z * 0.3183098733425140380859375) * _2809) * _2810) + _2560;
    }
    uint _2625 = _2378 + 8u;
    float _2638 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2378].w)) * _947) * 0.949999988079071044921875);
    float _2639 = _2638 * _2638;
    float _2640 = cbLight._m0[_2378].x + _862;
    float _2641 = cbLight._m0[_2378].y + _863;
    float _2642 = cbLight._m0[_2378].z + _864;
    float _2646 = inversesqrt(dot(vec3(_2640, _2641, _2642), vec3(_2640, _2641, _2642)));
    float _2647 = _2646 * _2640;
    float _2648 = _2646 * _2641;
    float _2649 = _2646 * _2642;
    float _2650 = dot(vec3(_792, _793, _794), vec3(cbLight._m0[_2378].xyz));
    float _4784 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
    float _2653 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _4795 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _2654 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _2655 = dot(vec3(_792, _793, _794), vec3(_2647, _2648, _2649));
    float _4806 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2658 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
    float _2659 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_2647, _2648, _2649));
    float _4817 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2663 = _2639 * _2639;
    float _2667 = ((_2658 * _2658) * (_2663 + (-1.0))) + 1.0;
    float _2675 = exp2(log2(1.0 - (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0)))) * 5.0);
    float _2676 = 0.959999978542327880859375 - _1062;
    float _2678 = 0.959999978542327880859375 - _1063;
    float _2679 = 0.959999978542327880859375 - _1064;
    float _2686 = 1.0 - _2639;
    float _2697 = (0.5 / (((_2654 * ((_2653 * _2686) + _2639)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2686) + _2639) * _2653))) * _2653;
    float _4828 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
    float _2699 = (isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0))) * (_2663 / ((_2667 * _2667) * 3.141590118408203125));
    uint _2713 = _2378 + 9u;
    float _2724 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2418].w)) * _947) * 0.949999988079071044921875);
    float _2725 = _2724 * _2724;
    float _2726 = cbLight._m0[_2418].x + _862;
    float _2727 = cbLight._m0[_2418].y + _863;
    float _2728 = cbLight._m0[_2418].z + _864;
    float _2732 = inversesqrt(dot(vec3(_2726, _2727, _2728), vec3(_2726, _2727, _2728)));
    float _2733 = _2732 * _2726;
    float _2734 = _2732 * _2727;
    float _2735 = _2732 * _2728;
    float _2736 = dot(vec3(_792, _793, _794), vec3(cbLight._m0[_2418].xyz));
    float _4839 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
    float _2739 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    float _2740 = dot(vec3(_792, _793, _794), vec3(_2733, _2734, _2735));
    float _4850 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2743 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
    float _2744 = dot(vec3(cbLight._m0[_2418].xyz), vec3(_2733, _2734, _2735));
    float _4861 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
    float _2748 = _2725 * _2725;
    float _2752 = ((_2743 * _2743) * (_2748 + (-1.0))) + 1.0;
    float _2759 = exp2(log2(1.0 - (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0)))) * 5.0);
    float _2766 = 1.0 - _2725;
    float _2776 = (0.5 / (((_2654 * ((_2739 * _2766) + _2725)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2766) + _2725) * _2739))) * _2739;
    float _4872 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
    float _2778 = (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0))) * (_2748 / ((_2752 * _2752) * 3.141590118408203125));
    float _2788 = (((((_2759 * _2676) + _1065) * cbLight._m0[_2713].x) * _2778) * _2401) + ((((cbLight._m0[_2625].x * _2367) * ((_2675 * _2676) + _1065)) * _2699) * _2414);
    float _2789 = (((((_2759 * _2678) + _1066) * cbLight._m0[_2713].y) * _2778) * _2401) + ((((cbLight._m0[_2625].y * _2369) * ((_2675 * _2678) + _1066)) * _2699) * _2414);
    float _2790 = (((((_2759 * _2679) + _1067) * cbLight._m0[_2713].z) * _2778) * _2401) + ((((cbLight._m0[_2625].z * _2371) * ((_2675 * _2679) + _1067)) * _2699) * _2414);
    float _2846;
    float _2848;
    float _2850;
    if (_2454)
    {
        _2846 = _2788;
        _2848 = _2789;
        _2850 = _2790;
    }
    else
    {
        uint _2852 = _2378 + 2u;
        uint _2856 = _2378 + 10u;
        float _2870 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2852].w)) * _947) * 0.949999988079071044921875);
        float _2871 = _2870 * _2870;
        float _2872 = cbLight._m0[_2852].x + _862;
        float _2873 = cbLight._m0[_2852].y + _863;
        float _2874 = cbLight._m0[_2852].z + _864;
        float _2878 = inversesqrt(dot(vec3(_2872, _2873, _2874), vec3(_2872, _2873, _2874)));
        float _2879 = _2878 * _2872;
        float _2880 = _2878 * _2873;
        float _2881 = _2878 * _2874;
        float _2882 = dot(vec3(_792, _793, _794), vec3(cbLight._m0[_2852].xyz));
        float _4883 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        float _2885 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2886 = dot(vec3(_792, _793, _794), vec3(_2879, _2880, _2881));
        float _4894 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        float _2889 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
        float _2890 = dot(vec3(cbLight._m0[_2852].xyz), vec3(_2879, _2880, _2881));
        float _4905 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2894 = _2871 * _2871;
        float _2898 = ((_2889 * _2889) * (_2894 + (-1.0))) + 1.0;
        float _2905 = exp2(log2(1.0 - (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0)))) * 5.0);
        float _2912 = 1.0 - _2871;
        float _2922 = (0.5 / (((_2654 * ((_2885 * _2912) + _2871)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2912) + _2871) * _2885))) * _2885;
        float _4916 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
        float _2924 = (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0))) * (_2894 / ((_2898 * _2898) * 3.141590118408203125));
        float _2925 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2846 = (((((_2905 * _2676) + _1065) * cbLight._m0[_2856].x) * _2924) * _2925) + _2788;
        _2848 = (((((_2905 * _2678) + _1066) * cbLight._m0[_2856].y) * _2924) * _2925) + _2789;
        _2850 = (((((_2905 * _2679) + _1067) * cbLight._m0[_2856].z) * _2924) * _2925) + _2790;
    }
    float _2956;
    float _2958;
    float _2960;
    if (_2563)
    {
        _2956 = _2846;
        _2958 = _2848;
        _2960 = _2850;
    }
    else
    {
        uint _2967 = _2378 + 3u;
        uint _2971 = _2378 + 11u;
        float _2985 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2967].w)) * _947) * 0.949999988079071044921875);
        float _2986 = _2985 * _2985;
        float _2987 = cbLight._m0[_2967].x + _862;
        float _2988 = cbLight._m0[_2967].y + _863;
        float _2989 = cbLight._m0[_2967].z + _864;
        float _2993 = inversesqrt(dot(vec3(_2987, _2988, _2989), vec3(_2987, _2988, _2989)));
        float _2994 = _2993 * _2987;
        float _2995 = _2993 * _2988;
        float _2996 = _2993 * _2989;
        float _2997 = dot(vec3(_792, _793, _794), vec3(cbLight._m0[_2967].xyz));
        float _4932 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
        float _3000 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _3001 = dot(vec3(_792, _793, _794), vec3(_2994, _2995, _2996));
        float _4943 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
        float _3004 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
        float _3005 = dot(vec3(cbLight._m0[_2967].xyz), vec3(_2994, _2995, _2996));
        float _4954 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        float _3009 = _2986 * _2986;
        float _3013 = ((_3004 * _3004) * (_3009 + (-1.0))) + 1.0;
        float _3020 = exp2(log2(1.0 - (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0)))) * 5.0);
        float _3027 = 1.0 - _2986;
        float _3037 = (0.5 / (((_2654 * ((_3000 * _3027) + _2986)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _3027) + _2986) * _3000))) * _3000;
        float _4965 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0));
        float _3039 = (isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0))) * (_3009 / ((_3013 * _3013) * 3.141590118408203125));
        float _3040 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2956 = (((((_3020 * _2676) + _1065) * cbLight._m0[_2971].x) * _3039) * _3040) + _2846;
        _2958 = (((((_3020 * _2678) + _1066) * cbLight._m0[_2971].y) * _3039) * _3040) + _2848;
        _2960 = (((((_3020 * _2679) + _1067) * cbLight._m0[_2971].z) * _3039) * _3040) + _2850;
    }
    float _3106;
    float _3108;
    float _3110;
    float _3112;
    float _3114;
    float _3116;
    if (_2376.y == 0u)
    {
        uvec4 _3061 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3062 = _3061.x;
        uint _3073 = uint((float(_3061.y) * floor(float(uint(cbSceneParam._m0[85u].y * _870) / _3062))) + floor(float(uint(cbSceneParam._m0[85u].x * _869) / _3062)));
        float _3083 = (log2(_2154 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3084 = isnan(0.0) ? _3083 : (isnan(_3083) ? 0.0 : max(_3083, 0.0));
        uint _3087 = uint(isnan(14.0) ? _3084 : (isnan(_3084) ? 14.0 : min(_3084, 14.0)));
        uvec4 _3092 = texelFetch(g_lightClusterGridBuffer, int(((_3087 << 2u) + (_3073 << 6u)) >> 2u));
        uint _3093 = _3092.x;
        uint _3094 = _3061.z;
        float _3204;
        float _3206;
        float _3208;
        float _3210;
        float _3212;
        float _3214;
        if (((((1u << ((_3094 >> 4u) & 15u)) + 4294967295u) & _3093) == 0u) || ((_3094 & 240u) == 0u))
        {
            _3204 = 0.0;
            _3206 = 0.0;
            _3208 = 0.0;
            _3210 = 0.0;
            _3212 = 0.0;
            _3214 = 0.0;
        }
        else
        {
            float _3205;
            float _3207;
            float _3209;
            float _3211;
            float _3213;
            float _3215;
            float _3357 = 0.0;
            float _3358 = 0.0;
            float _3359 = 0.0;
            float _3360 = 0.0;
            float _3361 = 0.0;
            float _3362 = 0.0;
            uint _3363 = 0u;
            uint _3372;
            bool _3373;
            for (;;)
            {
                _3372 = texelFetch(g_lightClassification, int((((_3087 << 5u) + (_3073 << 9u)) + (_3363 << 2u)) >> 2u)).x;
                _3373 = _3372 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3373)
                {
                    frontier_phi_66_pred = _3362;
                    frontier_phi_66_pred_1 = _3361;
                    frontier_phi_66_pred_2 = _3360;
                    frontier_phi_66_pred_3 = _3359;
                    frontier_phi_66_pred_4 = _3358;
                    frontier_phi_66_pred_5 = _3357;
                }
                else
                {
                    float _3481;
                    float _3482;
                    float _3483;
                    float _3484;
                    float _3485;
                    float _3486;
                    uint _3487;
                    _3481 = _3357;
                    _3482 = _3358;
                    _3483 = _3359;
                    _3484 = _3360;
                    _3485 = _3361;
                    _3486 = _3362;
                    _3487 = _3372;
                    float _3413;
                    float _3414;
                    float _3415;
                    float _3416;
                    float _3417;
                    float _3418;
                    for (;;)
                    {
                        uint _3491 = uint(findLSB(_3487)) + (_3363 << 5u);
                        uint _3488 = (_3487 + 4294967295u) & _3487;
                        uint _3493 = _3491 * 48u;
                        vec4 _3507 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3493)).x, texelFetch(g_PointLightRenderingBuffer, int(_3493 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3493 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3493 + 3u)).x));
                        uint _3513 = (_3491 * 48u) + 4u;
                        vec4 _3526 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3513)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 3u)).x));
                        uint _3532 = (_3491 * 48u) + 8u;
                        vec3 _3543 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3532)).x, texelFetch(g_PointLightRenderingBuffer, int(_3532 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3532 + 2u)).x));
                        float _3547 = _3507.x - _2152;
                        float _3548 = _3507.y - _2153;
                        float _3549 = _3507.z - _2154;
                        float _3550 = dot(vec3(_3547, _3548, _3549), vec3(_3547, _3548, _3549));
                        float _3553 = inversesqrt(_3550);
                        float _3554 = _3553 * _3547;
                        float _3555 = _3553 * _3548;
                        float _3556 = _3553 * _3549;
                        float _3557 = dot(vec3(_892, _895, _898), vec3(_3554, _3555, _3556));
                        float _3562 = 1.0 - (_3550 * _3507.w);
                        float _4991 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                        float _3563 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                        float _3564 = sqrt(_3550) * _3526.w;
                        float _3567 = 1.39999997615814208984375 / (_3564 + 1.39999997615814208984375);
                        float _3568 = _3567 * _3567;
                        float _3571 = ((1.0 - _3568) * _3557) + _3568;
                        float _3574 = _3564 * _3564;
                        float _3578 = ((isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0))) * _3563) / ((_3574 * 0.699999988079071044921875) + 1.0);
                        float _3582 = (-0.0) - _2152;
                        float _3583 = (-0.0) - _2153;
                        float _3584 = (-0.0) - _2154;
                        float _3588 = inversesqrt(dot(vec3(_3582, _3583, _3584), vec3(_3582, _3583, _3584)));
                        float _3589 = _3588 * _3582;
                        float _3590 = _3588 * _3583;
                        float _3591 = _3588 * _3584;
                        float _3598 = exp2(log2(1.0 / ((_3574 * 3.5) + 5.0)) * 0.25);
                        float _3599 = 1.0 - _1095;
                        float _3606 = sqrt(1.0 - ((1.0 - (_3599 * _3599)) * (1.0 - (_3598 * _3598))));
                        float _3607 = _3606 * _3606;
                        float _3608 = _3607 * _3607;
                        float _3609 = _3589 + _3554;
                        float _3610 = _3590 + _3555;
                        float _3611 = _3591 + _3556;
                        float _3615 = inversesqrt(dot(vec3(_3609, _3610, _3611), vec3(_3609, _3610, _3611)));
                        float _3619 = dot(vec3(_892, _895, _898), vec3(_3589, _3590, _3591));
                        float _5007 = isnan(0.0) ? _3619 : (isnan(_3619) ? 0.0 : max(_3619, 0.0));
                        float _3622 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                        float _3623 = dot(vec3(_892, _895, _898), vec3(_3615 * _3609, _3615 * _3610, _3615 * _3611));
                        float _5018 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                        float _3626 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                        float _3630 = ((_3626 * _3626) * (_3608 + (-1.0))) + 1.0;
                        float _3631 = _3567 * _3607;
                        float _3632 = _3631 * _3631;
                        float _3635 = ((1.0 - _3632) * _3557) + _3632;
                        float _5029 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                        float _3636 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                        float _3637 = 1.0 - _3607;
                        float _3647 = (0.5 / (((_3636 * ((_3622 * _3637) + _3607)) + 9.9999999392252902907785028219223e-09) + (((_3636 * _3637) + _3607) * _3622))) * _3636;
                        float _5040 = isnan(0.0) ? _3647 : (isnan(_3647) ? 0.0 : max(_3647, 0.0));
                        float _3658 = (((_3608 * 3.1415927410125732421875) * (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0)))) / ((_3630 * _3630) * ((_3574 * 2.1991131305694580078125) + 3.141590118408203125))) * _3563;
                        _3416 = (_3578 * _3526.x) + _3484;
                        _3417 = (_3578 * _3526.y) + _3485;
                        _3418 = (_3578 * _3526.z) + _3486;
                        _3413 = (_3658 * _3543.x) + _3481;
                        _3414 = (_3658 * _3543.y) + _3482;
                        _3415 = (_3658 * _3543.z) + _3483;
                        if (_3488 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3481 = _3413;
                            _3482 = _3414;
                            _3483 = _3415;
                            _3484 = _3416;
                            _3485 = _3417;
                            _3486 = _3418;
                            _3487 = _3488;
                        }
                    }
                    frontier_phi_66_pred = _3418;
                    frontier_phi_66_pred_1 = _3417;
                    frontier_phi_66_pred_2 = _3416;
                    frontier_phi_66_pred_3 = _3415;
                    frontier_phi_66_pred_4 = _3414;
                    frontier_phi_66_pred_5 = _3413;
                }
                _3215 = frontier_phi_66_pred;
                _3213 = frontier_phi_66_pred_1;
                _3211 = frontier_phi_66_pred_2;
                _3209 = frontier_phi_66_pred_3;
                _3207 = frontier_phi_66_pred_4;
                _3205 = frontier_phi_66_pred_5;
                uint _3364 = _3363 + 1u;
                if (_3364 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3357 = _3205;
                    _3358 = _3207;
                    _3359 = _3209;
                    _3360 = _3211;
                    _3361 = _3213;
                    _3362 = _3215;
                    _3363 = _3364;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3204 = _3205;
            _3206 = _3207;
            _3208 = _3209;
            _3210 = _3211;
            _3212 = _3213;
            _3214 = _3215;
        }
        uvec4 _3218 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3219 = _3218.z;
        uint _3221 = (_3219 >> 8u) & 15u;
        float _3325;
        float _3327;
        float _3329;
        float _3331;
        float _3333;
        float _3335;
        if (((4294967295u << _3221) & _3093) == 0u)
        {
            _3325 = _3204;
            _3327 = _3206;
            _3329 = _3208;
            _3331 = _3210;
            _3333 = _3212;
            _3335 = _3214;
        }
        else
        {
            float _3350 = inversesqrt(dot(vec3(_2152, _2153, _2154), vec3(_2152, _2153, _2154)));
            float _3351 = _3350 * _2152;
            float _3352 = _3350 * _2153;
            float _3353 = _3350 * _2154;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3221 < ((_3219 >> 12u) & 15u))
            {
                float _3326;
                float _3328;
                float _3330;
                float _3332;
                float _3334;
                float _3336;
                float _3464 = _3204;
                float _3465 = _3206;
                float _3466 = _3208;
                float _3467 = _3210;
                float _3468 = _3212;
                float _3469 = _3214;
                uint _3470 = _3221;
                uint _3479;
                bool _3480;
                for (;;)
                {
                    _3479 = texelFetch(g_lightClassification, int((((_3087 << 5u) + (_3073 << 9u)) + (_3470 << 2u)) >> 2u)).x;
                    _3480 = _3479 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3480)
                    {
                        frontier_phi_72_pred = _3469;
                        frontier_phi_72_pred_1 = _3468;
                        frontier_phi_72_pred_2 = _3467;
                        frontier_phi_72_pred_3 = _3466;
                        frontier_phi_72_pred_4 = _3465;
                        frontier_phi_72_pred_5 = _3464;
                    }
                    else
                    {
                        float _3663;
                        float _3664;
                        float _3665;
                        float _3666;
                        float _3667;
                        float _3668;
                        float _3957;
                        float _3958;
                        float _3959;
                        float _3960;
                        float _3961;
                        float _3962;
                        float _3676 = _3464;
                        float _3677 = _3465;
                        float _3678 = _3466;
                        float _3679 = _3467;
                        float _3680 = _3468;
                        float _3681 = _3469;
                        uint _3682 = _3479;
                        uint _3683;
                        vec4 _3708;
                        float _3709;
                        vec4 _3724;
                        vec3 _3736;
                        vec4 _3751;
                        vec4 _3766;
                        float _3813;
                        bool _3814;
                        for (;;)
                        {
                            uint _3693 = ((_3470 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3682));
                            _3683 = (_3682 + 4294967295u) & _3682;
                            uint _3695 = _3693 * 40u;
                            _3708 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3695)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 3u)).x));
                            _3709 = _3708.w;
                            uint _3711 = (_3693 * 40u) + 4u;
                            _3724 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3711)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 3u)).x));
                            uint _3726 = (_3693 * 40u) + 8u;
                            _3736 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3726)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 2u)).x));
                            uint _3738 = (_3693 * 40u) + 16u;
                            _3751 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3738)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 3u)).x));
                            uint _3753 = (_3693 * 40u) + 20u;
                            _3766 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3753)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 3u)).x));
                            uint _3769 = (_3693 * 40u) + 24u;
                            vec4 _3782 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3769)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 3u)).x));
                            uint _3788 = (_3693 * 40u) + 28u;
                            vec4 _3801 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3788)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 3u)).x));
                            _3813 = fma(_2154, _3801.z, fma(_2153, _3801.y, _3801.x * _2152)) + _3801.w;
                            _3814 = !((fma(_2154, _3782.z, fma(_2153, _3782.y, _3782.x * _2152)) + _3782.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3814)
                            {
                                float _3841 = _3708.x - _2152;
                                float _3842 = _3708.y - _2153;
                                float _3843 = _3708.z - _2154;
                                float _3844 = dot(vec3(_3841, _3842, _3843), vec3(_3841, _3842, _3843));
                                float _3847 = inversesqrt(_3844);
                                float _3848 = _3847 * _3841;
                                float _3849 = _3847 * _3842;
                                float _3850 = _3847 * _3843;
                                float _3854 = 1.0 - (_3844 / (_3709 * _3709));
                                float _5051 = isnan(0.0) ? _3854 : (isnan(_3854) ? 0.0 : max(_3854, 0.0));
                                float _3855 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
                                float _3859 = sqrt(_3844) * _3724.w;
                                float _3861 = 1.39999997615814208984375 / (_3859 + 1.39999997615814208984375);
                                float _3862 = _3861 * _3861;
                                float _3865 = ((1.0 - _3862) * dot(vec3(_3848, _3849, _3850), vec3(_892, _895, _898))) + _3862;
                                float _3868 = _3859 * _3859;
                                float _3872 = (fma(_2154, _3751.z, fma(_2153, _3751.y, _3751.x * _2152)) + _3751.w) / _3813;
                                float _3873 = (fma(_2154, _3766.z, fma(_2153, _3766.y, _3766.x * _2152)) + _3766.w) / _3813;
                                float _3877 = 1.0 - dot(vec2(_3872, _3873), vec2(_3872, _3873));
                                float _5067 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                                float _3878 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                                float _3879 = _3878 * (((isnan(0.0) ? _3865 : (isnan(_3865) ? 0.0 : max(_3865, 0.0))) * _3855) / ((_3868 * 0.699999988079071044921875) + 1.0));
                                float _3891 = exp2(log2(1.0 / ((_3868 * 3.5) + 5.0)) * 0.25);
                                float _3892 = 1.0 - _1095;
                                float _3899 = sqrt(1.0 - ((1.0 - (_3892 * _3892)) * (1.0 - (_3891 * _3891))));
                                float _3900 = _3899 * _3899;
                                float _3901 = _3900 * _3900;
                                float _3902 = _3848 - _3351;
                                float _3903 = _3849 - _3352;
                                float _3904 = _3850 - _3353;
                                float _3908 = inversesqrt(dot(vec3(_3902, _3903, _3904), vec3(_3902, _3903, _3904)));
                                float _3912 = dot(vec3(_892, _895, _898), vec3((-0.0) - _3351, (-0.0) - _3352, (-0.0) - _3353));
                                float _5078 = isnan(0.0) ? _3912 : (isnan(_3912) ? 0.0 : max(_3912, 0.0));
                                float _3915 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                                float _3916 = dot(vec3(_892, _895, _898), vec3(_3908 * _3902, _3908 * _3903, _3908 * _3904));
                                float _5089 = isnan(0.0) ? _3916 : (isnan(_3916) ? 0.0 : max(_3916, 0.0));
                                float _3919 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                                float _3923 = ((_3919 * _3919) * (_3901 + (-1.0))) + 1.0;
                                float _3924 = _3861 * _3900;
                                float _3925 = _3924 * _3924;
                                float _3931 = ((1.0 - _3925) * dot(vec3(_892, _895, _898), vec3(_3848, _3849, _3850))) + _3925;
                                float _5100 = isnan(0.0) ? _3931 : (isnan(_3931) ? 0.0 : max(_3931, 0.0));
                                float _3932 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
                                float _3933 = 1.0 - _3900;
                                float _3943 = (0.5 / (((_3932 * ((_3915 * _3933) + _3900)) + 9.9999999392252902907785028219223e-09) + (((_3932 * _3933) + _3900) * _3915))) * _3932;
                                float _5111 = isnan(0.0) ? _3943 : (isnan(_3943) ? 0.0 : max(_3943, 0.0));
                                float _3953 = (_3878 * _3855) * (((_3901 * 3.1415927410125732421875) * (isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0)))) / ((_3923 * _3923) * ((_3868 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3879 * _3724.y;
                                frontier_phi_78_pred_1 = _3879 * _3724.x;
                                frontier_phi_78_pred_2 = _3953 * _3736.z;
                                frontier_phi_78_pred_3 = _3953 * _3736.y;
                                frontier_phi_78_pred_4 = _3953 * _3736.x;
                                frontier_phi_78_pred_5 = _3879 * _3724.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3961 = frontier_phi_78_pred;
                            _3960 = frontier_phi_78_pred_1;
                            _3959 = frontier_phi_78_pred_2;
                            _3958 = frontier_phi_78_pred_3;
                            _3957 = frontier_phi_78_pred_4;
                            _3962 = frontier_phi_78_pred_5;
                            _3666 = _3960 + _3679;
                            _3667 = _3961 + _3680;
                            _3668 = _3962 + _3681;
                            _3663 = _3957 + _3676;
                            _3664 = _3958 + _3677;
                            _3665 = _3959 + _3678;
                            if (_3683 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3676 = _3663;
                                _3677 = _3664;
                                _3678 = _3665;
                                _3679 = _3666;
                                _3680 = _3667;
                                _3681 = _3668;
                                _3682 = _3683;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3668;
                        frontier_phi_72_pred_1 = _3667;
                        frontier_phi_72_pred_2 = _3666;
                        frontier_phi_72_pred_3 = _3665;
                        frontier_phi_72_pred_4 = _3664;
                        frontier_phi_72_pred_5 = _3663;
                    }
                    _3336 = frontier_phi_72_pred;
                    _3334 = frontier_phi_72_pred_1;
                    _3332 = frontier_phi_72_pred_2;
                    _3330 = frontier_phi_72_pred_3;
                    _3328 = frontier_phi_72_pred_4;
                    _3326 = frontier_phi_72_pred_5;
                    uint _3471 = _3470 + 1u;
                    if (_3471 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3464 = _3326;
                        _3465 = _3328;
                        _3466 = _3330;
                        _3467 = _3332;
                        _3468 = _3334;
                        _3469 = _3336;
                        _3470 = _3471;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3336;
                frontier_phi_60_61_ladder_1 = _3334;
                frontier_phi_60_61_ladder_2 = _3330;
                frontier_phi_60_61_ladder_3 = _3328;
                frontier_phi_60_61_ladder_4 = _3326;
                frontier_phi_60_61_ladder_5 = _3332;
            }
            else
            {
                frontier_phi_60_61_ladder = _3214;
                frontier_phi_60_61_ladder_1 = _3212;
                frontier_phi_60_61_ladder_2 = _3208;
                frontier_phi_60_61_ladder_3 = _3206;
                frontier_phi_60_61_ladder_4 = _3204;
                frontier_phi_60_61_ladder_5 = _3210;
            }
            _3325 = frontier_phi_60_61_ladder_4;
            _3327 = frontier_phi_60_61_ladder_3;
            _3329 = frontier_phi_60_61_ladder_2;
            _3331 = frontier_phi_60_61_ladder_5;
            _3333 = frontier_phi_60_61_ladder_1;
            _3335 = frontier_phi_60_61_ladder;
        }
        float _3340 = isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0));
        _3106 = (_3340 * _3331) + _2618;
        _3108 = (_3340 * _3333) + _2620;
        _3110 = (_3340 * _3335) + _2622;
        _3112 = ((_3325 * _1065) * _3340) + _2956;
        _3114 = ((_3327 * _1066) * _3340) + _2958;
        _3116 = ((_3329 * _1067) * _3340) + _2960;
    }
    else
    {
        _3106 = _2618;
        _3108 = _2620;
        _3110 = _2622;
        _3112 = _2956;
        _3114 = _2958;
        _3116 = _2960;
    }
    uint _3122 = _972 + uint(cbMatDynParam._m0[0u].w);
    float _3128 = cbInstanceData._m0[_3122].x * (_762 ? cbMtdParam._m0[21u].z : cbMtdParam._m0[11u].y);
    float _3129 = cbInstanceData._m0[_3122].y * (_762 ? cbMtdParam._m0[21u].w : cbMtdParam._m0[11u].z);
    float _3130 = cbInstanceData._m0[_3122].z * (_762 ? cbMtdParam._m0[22u].x : cbMtdParam._m0[11u].w);
    float _5127 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _5138 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _5149 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _5160 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _3148 = (((isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_3106 + ((isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))) * _1079))) + ((_3112 + ((isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + _3128;
    float _3150 = (_3129 + ((_3114 + ((isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0))) * (_3108 + ((isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0))) * _1079)));
    float _3152 = (_3130 + ((_3116 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1886)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5149 : (isnan(_5149) ? 1.0 : min(_5149, 1.0))) * (_3110 + ((isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0))) * _1079)));
    float _5186 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3165 = isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0));
    float _3170 = cbInstanceData._m0[_971 + 6u].w * (isnan(1.0) ? _5160 : (isnan(_5160) ? 1.0 : min(_5160, 1.0)));
    float _3175 = _869 / cbSceneParam._m0[86u].x;
    float _3176 = _870 / cbSceneParam._m0[86u].y;
    vec4 _3190 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3175, _3176, (log2((isnan(cbSceneParam._m0[77u].w) ? _805 : (isnan(_805) ? cbSceneParam._m0[77u].w : min(_805, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3192 = _3190.x;
    float _3193 = _3190.y;
    float _3194 = _3190.z;
    float _3195 = _3190.w;
    float _3266;
    float _3268;
    float _3270;
    float _3272;
    if (_805 > cbSceneParam._m0[78u].w)
    {
        float _3229 = isnan(_805) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _805 : min(cbSceneParam._m0[80u].w, _805));
        float _3230 = _3229 / _805;
        float _3241 = _3230 * _855;
        float _3242 = _856 * _3230;
        float _3243 = (-0.0) - _3242;
        float _3244 = _3230 * _857;
        float _3246 = (cbSceneParam._m0[77u].w * _3243) / _3229;
        float _3247 = _3246 + cbSceneParam._m0[79u].w;
        float _3248 = cbSceneParam._m0[79u].w - _3242;
        float _3254 = sqrt(((_3241 * _3241) + (_3242 * _3242)) + (_3244 * _3244));
        float _3257 = (1.0 - (cbSceneParam._m0[77u].w / _3229)) * _3254;
        float _3262 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3264 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3426;
        if (abs((_3243 - _3246) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3426 = ((((_3247 > 0.0) ? exp2(_3262 * _3247) : (2.0 - exp2(_3264 * _3247))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3257;
        }
        else
        {
            float _3386 = 1.0 / cbSceneParam._m0[80u].x;
            float _3387 = isnan(_3248) ? _3247 : (isnan(_3247) ? _3248 : max(_3247, _3248));
            float _3388 = isnan(_3248) ? _3247 : (isnan(_3247) ? _3248 : min(_3247, _3248));
            float _3397 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : min(_3387, 0.0));
            float _3398 = isnan(0.0) ? _3388 : (isnan(_3388) ? 0.0 : min(_3388, 0.0));
            _3426 = ((abs(_3254 / _3243) * cbSceneParam._m0[80u].y) * ((((_3397 - _3398) * 2.0) - ((exp2(_3262 * (isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0)))) - exp2(_3262 * (isnan(0.0) ? _3388 : (isnan(_3388) ? 0.0 : max(_3388, 0.0))))) * _3386)) - ((exp2(_3264 * _3397) - exp2(_3264 * _3398)) * _3386))) + (_3257 * cbSceneParam._m0[80u].z);
        }
        vec4 _3428 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3175, _3176, 1.0), 0.0);
        float _3437 = exp2((_3426 * (-1.44269502162933349609375)) * (1.0 - _3428.w));
        float _3438 = log2(_3437);
        float _3454 = log2(_3195);
        _3266 = (exp2(_3454 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].x)) * _3428.x) / cbSceneParam._m0[78u].x)) + _3192;
        _3268 = (exp2(_3454 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].y)) * _3428.y) / cbSceneParam._m0[78u].y)) + _3193;
        _3270 = (exp2(_3454 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].z)) * _3428.z) / cbSceneParam._m0[78u].z)) + _3194;
        _3272 = _3437 * _3195;
    }
    else
    {
        _3266 = _3192;
        _3268 = _3193;
        _3270 = _3194;
        _3272 = _3195;
    }
    float _3284 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3285 = _3284 == 3.0;
    float _3286 = log2(_3272);
    float _3290 = exp2(_3286 * cbSceneParam._m0[78u].x);
    float _3291 = exp2(_3286 * cbSceneParam._m0[78u].y);
    float _3292 = exp2(_3286 * cbSceneParam._m0[78u].z);
    float _3293 = _3290 * (isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0)));
    float _3294 = _3291 * (isnan(0.0) ? _3150 : (isnan(_3150) ? 0.0 : max(_3150, 0.0)));
    float _3295 = _3292 * (isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0)));
    float _3304 = (_3284 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3304 * (_3285 ? _3293 : (_3293 + (cbSceneParam._m0[72u].w * _3266)));
    SV_Target.y = _3304 * (_3285 ? _3294 : (_3294 + (cbSceneParam._m0[72u].w * _3268)));
    SV_Target.z = _3304 * (_3285 ? _3295 : (_3295 + (cbSceneParam._m0[72u].w * _3270)));
    SV_Target.w = _3170;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3128) * _3165) * _3290) * _3304;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3129) * _3165) * _3291) * _3304;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3130) * _3165) * _3292) * _3304;
    SV_Target_1.w = _3170;
}


