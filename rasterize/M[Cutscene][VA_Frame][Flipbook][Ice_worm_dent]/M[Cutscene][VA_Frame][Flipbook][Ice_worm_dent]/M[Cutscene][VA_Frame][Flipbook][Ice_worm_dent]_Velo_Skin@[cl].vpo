#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_6;
layout(location = 9) in vec4 TEXCOORD_7;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 11) in vec4 TEXCOORD_3;
layout(location = 12) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec3 TEXCOORD_6_1;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_14;
layout(location = 9) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6_1.x = 0.0;
    TEXCOORD_6_1.y = 0.0;
    TEXCOORD_6_1.z = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    float _249 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _262 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _928 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _270 = (isnan(1.0) ? _928 : (isnan(_928) ? 1.0 : min(_928, 1.0))) * _262;
    precise float _271 = TEXCOORD_4.x * 255.0;
    precise float _273 = TEXCOORD_4.y * 255.0;
    precise float _274 = _273 * 256.0;
    precise float _276 = _271 + _274;
    precise float _277 = _276 + 0.5;
    float _279 = floor(_270);
    uint _280 = uint(int(_277));
    uint _281 = uint(int(_279));
    vec4 _282 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_280, _281)), int(0u));
    float _284 = _282.x;
    float _285 = _282.y;
    float _286 = _282.z;
    precise float _294 = _279 + 1.0;
    uint _296 = uint(int(isnan(_262) ? _294 : (isnan(_294) ? _262 : min(_294, _262))));
    vec4 _297 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_280, _296)), int(0u));
    float _302 = fract(_270);
    float _312 = (((_297.x - _284) * 2.0) * _302) + ((_284 * 2.0) + (-1.0));
    float _313 = (((_297.y - _285) * 2.0) * _302) + ((_285 * 2.0) + (-1.0));
    float _314 = (_302 * ((_297.z - _286) * 2.0)) + ((_286 * 2.0) + (-1.0));
    vec4 _315 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_280, _281)), int(0u));
    float _317 = _315.x;
    float _318 = _315.y;
    float _319 = _315.z;
    vec4 _320 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_280, _296)), int(0u));
    precise float _325 = _320.x - _317;
    precise float _326 = _320.y - _318;
    precise float _327 = _320.z - _319;
    precise float _328 = _302 * _325;
    precise float _329 = _302 * _326;
    precise float _330 = _302 * _327;
    precise float _331 = _317 + _328;
    precise float _332 = _318 + _329;
    precise float _333 = _319 + _330;
    uint _338 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _340 = texelFetch(g_InstanceIndexBuffer, int(_338));
    uint _341 = _340.x;
    precise float _342 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _345 = isnan(_342) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _342 : max(0.001000000047497451305389404296875, _342));
    precise float _347 = BLENDWEIGHT.x / _345;
    precise float _348 = BLENDWEIGHT.y / _345;
    precise float _349 = BLENDWEIGHT.z / _345;
    precise float _350 = BLENDWEIGHT.w / _345;
    uvec4 _357 = floatBitsToUint(cbInstanceData._m0[(_341 * 13u) + 4u]);
    uint _358 = _357.x;
    uint _360 = (_358 + uint(float(BLENDINDICES.x))) * 3u;
    uint _367 = _360 + 1u;
    uint _374 = _360 + 2u;
    precise float _381 = _347 * cbObjMatrix._m0[_360].x;
    precise float _382 = _347 * cbObjMatrix._m0[_367].x;
    precise float _383 = _347 * cbObjMatrix._m0[_374].x;
    precise float _384 = _347 * cbObjMatrix._m0[_360].y;
    precise float _385 = _347 * cbObjMatrix._m0[_367].y;
    precise float _386 = _347 * cbObjMatrix._m0[_374].y;
    precise float _387 = _347 * cbObjMatrix._m0[_360].z;
    precise float _388 = _347 * cbObjMatrix._m0[_367].z;
    precise float _389 = _347 * cbObjMatrix._m0[_374].z;
    precise float _390 = _347 * cbObjMatrix._m0[_360].w;
    precise float _391 = _347 * cbObjMatrix._m0[_367].w;
    precise float _392 = _347 * cbObjMatrix._m0[_374].w;
    uint _395 = (_358 + uint(float(BLENDINDICES.y))) * 3u;
    uint _402 = _395 + 1u;
    uint _409 = _395 + 2u;
    precise float _416 = _348 * cbObjMatrix._m0[_395].x;
    precise float _417 = _348 * cbObjMatrix._m0[_402].x;
    precise float _418 = _348 * cbObjMatrix._m0[_409].x;
    precise float _419 = _348 * cbObjMatrix._m0[_395].y;
    precise float _420 = _348 * cbObjMatrix._m0[_402].y;
    precise float _421 = _348 * cbObjMatrix._m0[_409].y;
    precise float _422 = _348 * cbObjMatrix._m0[_395].z;
    precise float _423 = _348 * cbObjMatrix._m0[_402].z;
    precise float _424 = _348 * cbObjMatrix._m0[_409].z;
    precise float _425 = _348 * cbObjMatrix._m0[_395].w;
    precise float _426 = _348 * cbObjMatrix._m0[_402].w;
    precise float _427 = _348 * cbObjMatrix._m0[_409].w;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    uint _442 = (_358 + uint(float(BLENDINDICES.z))) * 3u;
    uint _449 = _442 + 1u;
    uint _456 = _442 + 2u;
    precise float _463 = _349 * cbObjMatrix._m0[_442].x;
    precise float _464 = _349 * cbObjMatrix._m0[_449].x;
    precise float _465 = _349 * cbObjMatrix._m0[_456].x;
    precise float _466 = _349 * cbObjMatrix._m0[_442].y;
    precise float _467 = _349 * cbObjMatrix._m0[_449].y;
    precise float _468 = _349 * cbObjMatrix._m0[_456].y;
    precise float _469 = _349 * cbObjMatrix._m0[_442].z;
    precise float _470 = _349 * cbObjMatrix._m0[_449].z;
    precise float _471 = _349 * cbObjMatrix._m0[_456].z;
    precise float _472 = _349 * cbObjMatrix._m0[_442].w;
    precise float _473 = _349 * cbObjMatrix._m0[_449].w;
    precise float _474 = _349 * cbObjMatrix._m0[_456].w;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    uint _489 = (_358 + uint(float(BLENDINDICES.w))) * 3u;
    uint _496 = _489 + 1u;
    uint _503 = _489 + 2u;
    precise float _510 = _350 * cbObjMatrix._m0[_489].x;
    precise float _511 = _350 * cbObjMatrix._m0[_496].x;
    precise float _512 = _350 * cbObjMatrix._m0[_503].x;
    precise float _513 = _350 * cbObjMatrix._m0[_489].y;
    precise float _514 = _350 * cbObjMatrix._m0[_496].y;
    precise float _515 = _350 * cbObjMatrix._m0[_503].y;
    precise float _516 = _350 * cbObjMatrix._m0[_489].z;
    precise float _517 = _350 * cbObjMatrix._m0[_496].z;
    precise float _518 = _350 * cbObjMatrix._m0[_503].z;
    precise float _519 = _350 * cbObjMatrix._m0[_489].w;
    precise float _520 = _350 * cbObjMatrix._m0[_496].w;
    precise float _521 = _350 * cbObjMatrix._m0[_503].w;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _477 + _512;
    precise float _525 = _478 + _513;
    precise float _526 = _479 + _514;
    precise float _527 = _480 + _515;
    precise float _528 = _481 + _516;
    precise float _529 = _482 + _517;
    precise float _530 = _483 + _518;
    precise float _531 = _484 + _519;
    precise float _532 = _485 + _520;
    precise float _533 = _486 + _521;
    precise float _534 = POSITION.x * _522;
    precise float _535 = POSITION.y * _525;
    precise float _536 = _535 + _534;
    precise float _537 = POSITION.z * _528;
    precise float _538 = _537 + _536;
    precise float _539 = 1.0 * _531;
    precise float _540 = _539 + _538;
    precise float _541 = POSITION.x * _523;
    precise float _542 = POSITION.y * _526;
    precise float _543 = _542 + _541;
    precise float _544 = POSITION.z * _529;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * _532;
    precise float _547 = _546 + _545;
    precise float _548 = POSITION.x * _524;
    precise float _549 = POSITION.y * _527;
    precise float _550 = _549 + _548;
    precise float _551 = POSITION.z * _530;
    precise float _552 = _551 + _550;
    precise float _553 = 1.0 * _533;
    precise float _554 = _553 + _552;
    precise float _555 = _331 + _540;
    precise float _556 = _332 + _547;
    precise float _557 = _333 + _554;
    float _949 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _716 = _262 * (isnan(1.0) ? _949 : (isnan(_949) ? 1.0 : min(_949, 1.0)));
    float _721 = floor(_716);
    float _722 = _721 + 1.0;
    float _724 = fract(_716);
    uint _725 = uint(int((_271 + 0.5) + (TEXCOORD_4.y * 65280.0)));
    vec4 _727 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_725, uint(int(_721)))), int(0u));
    float _729 = _727.x;
    float _730 = _727.y;
    float _731 = _727.z;
    vec4 _733 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_725, uint(int(isnan(_262) ? _722 : (isnan(_722) ? _262 : min(_722, _262)))))), int(0u));
    float _754 = (((((cbPrevObjMatrix._m0[_395].w * _348) + (cbPrevObjMatrix._m0[_360].w * _347)) + (cbPrevObjMatrix._m0[_442].w * _349)) + (cbPrevObjMatrix._m0[_489].w * _350)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_395].z * _348) + (cbPrevObjMatrix._m0[_360].z * _347)) + (cbPrevObjMatrix._m0[_442].z * _349)) + (cbPrevObjMatrix._m0[_489].z * _350), fma(POSITION.y, (((cbPrevObjMatrix._m0[_395].y * _348) + (cbPrevObjMatrix._m0[_360].y * _347)) + (cbPrevObjMatrix._m0[_442].y * _349)) + (cbPrevObjMatrix._m0[_489].y * _350), ((((cbPrevObjMatrix._m0[_395].x * _348) + (cbPrevObjMatrix._m0[_360].x * _347)) + (cbPrevObjMatrix._m0[_442].x * _349)) + (cbPrevObjMatrix._m0[_489].x * _350)) * POSITION.x))) + _729;
    float _756 = (_754 - cbSceneParam._m0[28u].x) + ((_733.x - _729) * _724);
    float _761 = (((((cbPrevObjMatrix._m0[_402].w * _348) + (cbPrevObjMatrix._m0[_367].w * _347)) + (cbPrevObjMatrix._m0[_449].w * _349)) + (cbPrevObjMatrix._m0[_496].w * _350)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_402].z * _348) + (cbPrevObjMatrix._m0[_367].z * _347)) + (cbPrevObjMatrix._m0[_449].z * _349)) + (cbPrevObjMatrix._m0[_496].z * _350), fma(POSITION.y, (((cbPrevObjMatrix._m0[_402].y * _348) + (cbPrevObjMatrix._m0[_367].y * _347)) + (cbPrevObjMatrix._m0[_449].y * _349)) + (cbPrevObjMatrix._m0[_496].y * _350), ((((cbPrevObjMatrix._m0[_402].x * _348) + (cbPrevObjMatrix._m0[_367].x * _347)) + (cbPrevObjMatrix._m0[_449].x * _349)) + (cbPrevObjMatrix._m0[_496].x * _350)) * POSITION.x))) + _730;
    float _763 = (_761 - cbSceneParam._m0[28u].y) + ((_733.y - _730) * _724);
    float _768 = (((((cbPrevObjMatrix._m0[_409].w * _348) + (cbPrevObjMatrix._m0[_374].w * _347)) + (cbPrevObjMatrix._m0[_456].w * _349)) + (cbPrevObjMatrix._m0[_503].w * _350)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_409].z * _348) + (cbPrevObjMatrix._m0[_374].z * _347)) + (cbPrevObjMatrix._m0[_456].z * _349)) + (cbPrevObjMatrix._m0[_503].z * _350), fma(POSITION.y, (((cbPrevObjMatrix._m0[_409].y * _348) + (cbPrevObjMatrix._m0[_374].y * _347)) + (cbPrevObjMatrix._m0[_456].y * _349)) + (cbPrevObjMatrix._m0[_503].y * _350), ((((cbPrevObjMatrix._m0[_409].x * _348) + (cbPrevObjMatrix._m0[_374].x * _347)) + (cbPrevObjMatrix._m0[_456].x * _349)) + (cbPrevObjMatrix._m0[_503].x * _350)) * POSITION.x))) + _731;
    float _770 = (_768 - cbSceneParam._m0[28u].z) + ((_733.z - _731) * _724);
    precise float _830 = _555 - cbSceneParam._m0[3u].x;
    precise float _831 = _556 - cbSceneParam._m0[3u].y;
    precise float _832 = _557 - cbSceneParam._m0[3u].z;
    precise float _860 = _830 * cbSceneParam._m0[24u].x;
    precise float _861 = _831 * cbSceneParam._m0[24u].y;
    precise float _862 = _861 + _860;
    precise float _863 = _832 * cbSceneParam._m0[24u].z;
    precise float _864 = _863 + _862;
    precise float _865 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _866 = _865 + _864;
    precise float _867 = _830 * cbSceneParam._m0[25u].x;
    precise float _868 = _831 * cbSceneParam._m0[25u].y;
    precise float _869 = _868 + _867;
    precise float _870 = _832 * cbSceneParam._m0[25u].z;
    precise float _871 = _870 + _869;
    precise float _872 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _873 = _872 + _871;
    precise float _874 = _830 * cbSceneParam._m0[26u].x;
    precise float _875 = _831 * cbSceneParam._m0[26u].y;
    precise float _876 = _875 + _874;
    precise float _877 = _832 * cbSceneParam._m0[26u].z;
    precise float _878 = _877 + _876;
    precise float _879 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _880 = _879 + _878;
    precise float _881 = _830 * cbSceneParam._m0[27u].x;
    precise float _882 = _831 * cbSceneParam._m0[27u].y;
    precise float _883 = _882 + _881;
    precise float _884 = _832 * cbSceneParam._m0[27u].z;
    precise float _885 = _884 + _883;
    precise float _886 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _887 = _886 + _885;
    gl_Position.x = _866;
    gl_Position.y = _873;
    gl_Position.z = _880;
    gl_Position.w = _887;
    POSITION_1.x = _866;
    POSITION_1.y = _873;
    POSITION_1.z = _880;
    POSITION_1.w = _887;
    NORMAL_1.x = _312;
    NORMAL_1.y = _313;
    NORMAL_1.z = _314;
    NORMAL_1.w = float(_341);
    TANGENT_1.x = fma(_252, _528, fma(_251, _525, _522 * _249));
    TANGENT_1.y = fma(_252, _529, fma(_251, _526, _523 * _249));
    TANGENT_1.z = fma(_252, _530, fma(_251, _527, _524 * _249));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_4.x;
    TEXCOORD_4_1.w = TEXCOORD_4.y;
    TEXCOORD_6_1.x = COLOR_1.x;
    TEXCOORD_6_1.y = TEXCOORD_2.x;
    TEXCOORD_6_1.z = TEXCOORD_3.x;
    TEXCOORD_13.x = _866;
    TEXCOORD_13.y = _873;
    TEXCOORD_13.z = _880;
    TEXCOORD_13.w = _887;
    TEXCOORD_14.x = fma(_770, cbSceneParam._m0[29u].z, fma(_763, cbSceneParam._m0[29u].y, _756 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_770, cbSceneParam._m0[30u].z, fma(_763, cbSceneParam._m0[30u].y, _756 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_770, cbSceneParam._m0[31u].z, fma(_763, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _756)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_770, cbSceneParam._m0[32u].z, fma(_763, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _756)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _312;
    TEXCOORD_15.y = _313;
    TEXCOORD_15.z = _314;
}


