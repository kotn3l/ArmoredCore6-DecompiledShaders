#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec3 TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1452;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _260 = cbMtdParam._m0[18u].z + TEXCOORD.x;
    float _261 = cbMtdParam._m0[18u].w + TEXCOORD.y;
    vec4 _274 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _260) + cbTextureTilingScale._m0[0u].z, (_261 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _280 = _274.x * cbMtdParam._m0[10u].y;
    float _281 = _274.y * cbMtdParam._m0[10u].z;
    float _282 = _274.z * cbMtdParam._m0[10u].w;
    float _294 = cbMtdParam._m0[21u].x + TEXCOORD.x;
    float _295 = cbMtdParam._m0[21u].y + TEXCOORD.y;
    vec4 _308 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _294) + cbTextureTilingScale._m0[4u].z, (_295 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    uvec4 _320 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _346 = exp2(log2(cbMtdParam._m0[15u].z * texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) * cbMtdParam._m0[15u].w);
    float _3839 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _374 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x * TEXCOORD_6.y) + TEXCOORD_6.y) * cbMtdParam._m0[15u].y) * cbMtdParam._m0[14u].z);
    float _3850 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _376 = (_320.w != 0u) ? (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0))) : (isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0)));
    float _383 = (_376 * ((_308.x * cbMtdParam._m0[13u].y) - _280)) + _280;
    float _384 = (_376 * ((_308.y * cbMtdParam._m0[13u].z) - _281)) + _281;
    float _385 = (_376 * ((_308.z * cbMtdParam._m0[13u].w) - _282)) + _282;
    float _397 = cbMtdParam._m0[20u].z + TEXCOORD.x;
    float _398 = cbMtdParam._m0[20u].w + TEXCOORD.y;
    vec4 _411 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _397) + cbTextureTilingScale._m0[11u].z, (_398 * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _449 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x * TEXCOORD_6.z) + TEXCOORD_6.z) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[16u].y);
    float _3861 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    vec4 _467 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _469 = _467.x;
    float _478 = exp2(log2(((_320.z != 0u) ? (1.0 - _469) : _469) * cbMtdParam._m0[17u].w) * cbMtdParam._m0[18u].x);
    float _3872 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _486 = cbMtdParam._m0[19u].y * cbMtdParam._m0[19u].x;
    float _489 = (_486 + (-1.0)) * cbMtdParam._m0[17u].x;
    bool _491 = _320.y != 0u;
    float _503 = (cbMtdParam._m0[20u].x + cbMtdParam._m0[17u].y) + ((TEXCOORD.z - cbMtdParam._m0[20u].x) * cbMtdParam._m0[19u].z);
    float _505 = (cbMtdParam._m0[20u].y + cbMtdParam._m0[16u].w) + ((TEXCOORD.w - cbMtdParam._m0[20u].y) * cbMtdParam._m0[19u].w);
    float _3883 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _3894 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    uint _511 = uint(int(floor(_489)));
    uint _513 = _511 + 1u;
    uint _514 = uint(int(_486));
    uint _515 = _514 * 3u;
    uint _516 = _511 - _515 * (_511 / _515);
    uint _517 = _513 - _515 * (_513 / _515);
    float _520 = float(int(_516 - _514 * (_516 / _514)));
    float _524 = float(int(_517 - _514 * (_517 / _514)));
    float _528 = 1.0 / cbMtdParam._m0[19u].x;
    float _529 = 1.0 / cbMtdParam._m0[19u].y;
    float _530 = fract(_491 ? _503 : (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))));
    float _531 = fract(_491 ? _505 : (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0))));
    vec4 _558 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_530 + (_520 - cbMtdParam._m0[19u].x * trunc(_520 / cbMtdParam._m0[19u].x))) * _528) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_531 + floor(_520 / cbMtdParam._m0[19u].x)) * _529) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w));
    float _560 = _558.x;
    float _563 = ((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_530 + (_524 - cbMtdParam._m0[19u].x * trunc(_524 / cbMtdParam._m0[19u].x))) * _528) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_531 + floor(_524 / cbMtdParam._m0[19u].x)) * _529) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w)).x - _560) * fract(_489)) + _560;
    float _569 = exp2(log2(((_563 * (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0)))) + _563) * cbMtdParam._m0[14u].w) * cbMtdParam._m0[15u].x);
    float _3905 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _571 = (floatBitsToUint(cbMtdParam._m0[10u]).x != 0u) ? (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0))) : (isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0)));
    float _578 = (_571 * ((_411.x * cbMtdParam._m0[12u].y) - _383)) + _383;
    float _579 = (_571 * ((_411.y * cbMtdParam._m0[12u].z) - _384)) + _384;
    float _580 = (_571 * ((_411.z * cbMtdParam._m0[12u].w) - _385)) + _385;
    vec4 _590 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _592 = _590.x;
    bool _598 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _615 = ((_598 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _592)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _592))) - POSITION_1.w) / cbMtdParam._m0[16u].z;
    float _3916 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _616 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _3927 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _617 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _636 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _260) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _261) + cbTextureTilingScale._m0[8u].w)).x + cbMtdParam._m0[14u].y;
    float _657 = (((cbMtdParam._m0[18u].y - _636) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _294) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _295) + cbTextureTilingScale._m0[2u].w)).x) * _376) + _636;
    float _678 = (((cbMtdParam._m0[17u].z - _657) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * _397) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _398) + cbTextureTilingScale._m0[12u].w)).x) * _571) + _657;
    vec4 _690 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _260) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _261) + cbTextureTilingScale._m0[1u].w));
    float _692 = _690.x;
    float _693 = _690.y;
    float _694 = _690.z;
    vec4 _706 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _294) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _295) + cbTextureTilingScale._m0[3u].w));
    float _717 = ((_706.x - _692) * _376) + _692;
    float _718 = ((_706.y - _693) * _376) + _693;
    float _719 = ((_706.z - _694) * _376) + _694;
    vec4 _731 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _397) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _398) + cbTextureTilingScale._m0[13u].w));
    float _744 = ((_731.z - _719) * _571) + _719;
    float _748 = ((((_731.x - _717) * _571) + _717) * 2.0) + (-1.0);
    float _749 = ((((_731.y - _718) * _571) + _718) * 2.0) + (-1.0);
    float _750 = dot(vec2(_748, _749), vec2(_748, _749));
    float _3938 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _755 = sqrt(1.0 - (isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0))));
    bool _760 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _779 = fma(_755, _237 * NORMAL.x, fma(_749, _244 * TANGENT.x, (_230 * _223) * _748));
    float _782 = fma(_755, _237 * NORMAL.y, fma(_749, _244 * TANGENT.y, (_230 * _224) * _748));
    float _785 = fma(_755, _237 * NORMAL.z, fma(_749, _244 * TANGENT.z, (_230 * _225) * _748));
    float _789 = inversesqrt(dot(vec3(_779, _782, _785), vec3(_779, _782, _785)));
    float _790 = _789 * _779;
    float _791 = _789 * _782;
    float _792 = _789 * _785;
    float _3949 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _793 = isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0));
    float _3960 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _794 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _3971 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _795 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
    float _3982 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _796 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    float _3993 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _797 = isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0));
    float _4004 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _798 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
    float _803 = _598 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _843 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _853 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _843);
    float _854 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _843);
    float _855 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _843);
    float _859 = inversesqrt(dot(vec3(_853, _854, _855), vec3(_853, _854, _855)));
    float _860 = _853 * _859;
    float _861 = _854 * _859;
    float _862 = _855 * _859;
    float _867 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _868 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _870 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _872 = _870.w;
    float _890 = fma(_792, cbSceneParam._m0[5u].z, fma(_791, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _790));
    float _893 = fma(_792, cbSceneParam._m0[6u].z, fma(_791, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _790));
    float _896 = fma(_792, cbSceneParam._m0[7u].z, fma(_791, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _790));
    vec4 _898 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _900 = _898.x;
    float _912 = (((_898.y - _794) + (_898.w * _794)) * cbMtdParam._m0[3u].x) + _794;
    vec4 _913 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _929 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_900 * _900)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _913.z;
    float _937 = (((cbMatDynParam._m0[15u].x - _798) * cbMatDynParam._m0[15u].w) * _929) + _798;
    float _945 = ((_929 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _912)) + _912;
    uint _969 = uint(roundEven(NORMAL.w)) * 13u;
    uint _970 = _969 + 9u;
    uint _971 = _970 + uint(cbMatDynParam._m0[0u].w);
    float _977 = (cbMtdParam._m0[0u].x * _795) * cbInstanceData._m0[_971].x;
    float _978 = (cbMtdParam._m0[0u].y * _796) * cbInstanceData._m0[_971].y;
    float _979 = (cbMtdParam._m0[0u].z * _797) * cbInstanceData._m0[_971].z;
    float _4015 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _980 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
    float _4026 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _981 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    vec4 _983 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    vec4 _988 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _999 = (((_988.x - _937) + (_988.w * _937)) * cbMtdParam._m0[3u].x) + _937;
    float _1012 = (cbMtdParam._m0[3u].x * (((_980 * _872) - _980) + _983.x)) + _980;
    float _1013 = (cbMtdParam._m0[3u].x * (((_981 * _872) - _981) + _983.y)) + _981;
    float _1014 = (cbMtdParam._m0[3u].x * (((_982 * _872) - _982) + _983.z)) + _982;
    float _1028 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_937 * (_795 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_937 * (_796 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_937 * (_797 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y)).z;
    float _1032 = _1028 * cbMatDynParam._m0[13u].w;
    float _1042 = (_1032 * (cbMatDynParam._m0[13u].x - _1012)) + _1012;
    float _1043 = (_1032 * (cbMatDynParam._m0[13u].y - _1013)) + _1013;
    float _1044 = (_1032 * (cbMatDynParam._m0[13u].z - _1014)) + _1014;
    float _1052 = ((_1028 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _999)) + _999;
    float _1053 = 1.0 - _1052;
    float _1054 = _1053 * _1042;
    float _1055 = _1053 * _1043;
    float _1056 = _1053 * _1044;
    float _1060 = (_1042 + (-0.039999999105930328369140625)) * _1052;
    float _1061 = (_1043 + (-0.039999999105930328369140625)) * _1052;
    float _1062 = (_1044 + (-0.039999999105930328369140625)) * _1052;
    float _1063 = _1060 + 0.039999999105930328369140625;
    float _1064 = _1061 + 0.039999999105930328369140625;
    float _1065 = _1062 + 0.039999999105930328369140625;
    vec4 _1074 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _867, cbSceneParam._m0[86u].y * _868));
    float _1077 = _1074.x * TEXCOORD_6.x;
    float _1078 = dot(vec3(_790, _791, _792), vec3(_860, _861, _862));
    float _1081 = _1078 * 2.0;
    float _1085 = (_1081 * _790) - _860;
    float _1086 = (_1081 * _791) - _861;
    float _1087 = (_1081 * _792) - _862;
    float _1091 = abs(dot(vec3(_860, _861, _862), vec3(_790, _791, _792)));
    float _4048 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _1093 = sqrt(_945);
    float _1106 = exp2((_1093 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1093 * 3.0));
    float _1112 = (1.0 - _1106) * ((_1093 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1113 = _1106 * _1093;
    float _1141 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1145 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1451;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1176 = fma(_1149, cbModelParam._m0[26u].z, fma(_1145, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1141));
        float _1180 = fma(_1149, cbModelParam._m0[27u].z, fma(_1145, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1141));
        float _1184 = fma(_1149, cbModelParam._m0[28u].z, fma(_1145, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1141));
        float _1209 = _1141 + _790;
        float _1210 = _1145 + _791;
        float _1211 = _1149 + _792;
        float _1221 = fma(_1211, cbModelParam._m0[26u].z, fma(_1210, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1209)) - _1176;
        float _1222 = fma(_1211, cbModelParam._m0[27u].z, fma(_1210, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1209)) - _1180;
        float _1223 = fma(_1211, cbModelParam._m0[28u].z, fma(_1210, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1209)) - _1184;
        float _1227 = inversesqrt(dot(vec3(_1221, _1222, _1223), vec3(_1221, _1222, _1223)));
        float _1240 = ((_1227 * _1221) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1176 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1241 = ((_1227 * _1222) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1180 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1242 = ((_1227 * _1223) / cbModelParam._m0[34u].z) + ((((((_1184 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1245 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1240, _1241, _1242), 0.0);
        vec4 _1252 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1240, _1241, _1242), 0.0);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1240, _1241, _1242), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1240, _1241, _1242), 0.0);
        float _1279 = exp2((_1245.w + (-0.5)) * 20.0) * 2.0;
        float _1280 = _1279 * (_1245.x + (-0.5));
        float _1281 = _1279 * (_1245.y + (-0.5));
        float _1282 = _1279 * (_1245.z + (-0.5));
        float _1289 = exp2((_1252.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1252.x + (-0.5));
        float _1291 = _1289 * (_1252.y + (-0.5));
        float _1292 = _1289 * (_1252.z + (-0.5));
        float _1299 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1259.x + (-0.5));
        float _1301 = _1299 * (_1259.y + (-0.5));
        float _1302 = _1299 * (_1259.z + (-0.5));
        float _1309 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1266.x + (-0.5));
        float _1311 = _1309 * (_1266.y + (-0.5));
        float _1312 = _1309 * (_1266.z + (-0.5));
        float _1313 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1314 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1315 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1316 = _1280 * 0.5;
        float _1317 = _1290 * 0.5;
        float _1318 = _1300 * 0.5;
        float _1319 = dot(vec3(_1316, _1317, _1318), vec3(_1316, _1317, _1318));
        float _1324 = (_1319 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1319);
        float _1333 = (dot(vec3(_790, _791, _792), vec3(_1324 * _1316, _1324 * _1317, _1324 * _1318)) + 1.0) * 0.5;
        float _4074 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1343 = sqrt(((_1317 * _1317) + (_1316 * _1316)) + (_1318 * _1318)) / (_1313 + 9.9999997473787516355514526367188e-06);
        float _4085 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1344 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
        float _1345 = _1344 * 2.0;
        float _1349 = (1.0 - _1344) / (_1344 + 1.0);
        float _4096 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1350 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1359 = ((((1.0 - _1350) * (_1345 + 2.0)) * exp2(log2(isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0))) * (_1345 + 1.0))) + _1350) * _1313;
        float _1360 = _1281 * 0.5;
        float _1361 = _1291 * 0.5;
        float _1362 = _1301 * 0.5;
        float _1363 = dot(vec3(_1360, _1361, _1362), vec3(_1360, _1361, _1362));
        float _1368 = (_1363 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1363);
        float _1376 = (dot(vec3(_790, _791, _792), vec3(_1368 * _1360, _1368 * _1361, _1368 * _1362)) + 1.0) * 0.5;
        float _4107 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1385 = sqrt(((_1361 * _1361) + (_1360 * _1360)) + (_1362 * _1362)) / (_1314 + 9.9999997473787516355514526367188e-06);
        float _4118 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1386 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
        float _1387 = _1386 * 2.0;
        float _1391 = (1.0 - _1386) / (_1386 + 1.0);
        float _4129 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1392 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _1401 = ((((1.0 - _1392) * (_1387 + 2.0)) * exp2(log2(isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))) * (_1387 + 1.0))) + _1392) * _1314;
        float _1402 = _1282 * 0.5;
        float _1403 = _1292 * 0.5;
        float _1404 = _1302 * 0.5;
        float _1405 = dot(vec3(_1402, _1403, _1404), vec3(_1402, _1403, _1404));
        float _1410 = (_1405 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1405);
        float _1418 = (dot(vec3(_790, _791, _792), vec3(_1410 * _1402, _1410 * _1403, _1410 * _1404)) + 1.0) * 0.5;
        float _4140 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1427 = sqrt(((_1403 * _1403) + (_1402 * _1402)) + (_1404 * _1404)) / (_1315 + 9.9999997473787516355514526367188e-06);
        float _4151 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1428 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
        float _1429 = _1428 * 2.0;
        float _1433 = (1.0 - _1428) / (_1428 + 1.0);
        float _4162 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1443 = ((((1.0 - _1434) * (_1429 + 2.0)) * exp2(log2(isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))) * (_1429 + 1.0))) + _1434) * _1315;
        _1451 = _1282;
        _1453 = _1281;
        _1454 = _1280;
        _1455 = _1292;
        _1456 = _1291;
        _1457 = _1290;
        _1458 = _1302;
        _1459 = _1301;
        _1460 = _1300;
        _1461 = _1315;
        _1462 = _1314;
        _1463 = _1313;
        _1464 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0)));
        _1465 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0)));
        _1466 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0)));
    }
    else
    {
        _1451 = _1452;
        _1453 = _1452;
        _1454 = _1452;
        _1455 = _1452;
        _1456 = _1452;
        _1457 = _1452;
        _1458 = _1452;
        _1459 = _1452;
        _1460 = _1452;
        _1461 = _1452;
        _1462 = _1452;
        _1463 = _1452;
        _1464 = 0.0;
        _1465 = 0.0;
        _1466 = 0.0;
    }
    float _1761;
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1492 = fma(_1149, cbModelParam._m0[30u].z, fma(_1145, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1141));
        float _1496 = fma(_1149, cbModelParam._m0[31u].z, fma(_1145, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1141));
        float _1500 = fma(_1149, cbModelParam._m0[32u].z, fma(_1145, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1141));
        float _1523 = _1141 + _790;
        float _1524 = _1145 + _791;
        float _1525 = _1149 + _792;
        float _1535 = fma(_1525, cbModelParam._m0[30u].z, fma(_1524, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1523)) - _1492;
        float _1536 = fma(_1525, cbModelParam._m0[31u].z, fma(_1524, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1523)) - _1496;
        float _1537 = fma(_1525, cbModelParam._m0[32u].z, fma(_1524, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1523)) - _1500;
        float _1541 = inversesqrt(dot(vec3(_1535, _1536, _1537), vec3(_1535, _1536, _1537)));
        float _1554 = ((_1541 * _1535) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1492 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1555 = ((_1541 * _1536) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1496 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1556 = ((_1541 * _1537) / cbModelParam._m0[35u].z) + ((((((_1500 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1558 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1565 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        float _1591 = exp2((_1558.w + (-0.5)) * 20.0) * 2.0;
        float _1592 = _1591 * (_1558.x + (-0.5));
        float _1593 = _1591 * (_1558.y + (-0.5));
        float _1594 = _1591 * (_1558.z + (-0.5));
        float _1601 = exp2((_1565.w + (-0.5)) * 20.0) * 2.0;
        float _1602 = _1601 * (_1565.x + (-0.5));
        float _1603 = _1601 * (_1565.y + (-0.5));
        float _1604 = _1601 * (_1565.z + (-0.5));
        float _1611 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1612 = _1611 * (_1572.x + (-0.5));
        float _1613 = _1611 * (_1572.y + (-0.5));
        float _1614 = _1611 * (_1572.z + (-0.5));
        float _1621 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1622 = _1621 * (_1579.x + (-0.5));
        float _1623 = _1621 * (_1579.y + (-0.5));
        float _1624 = _1621 * (_1579.z + (-0.5));
        float _1625 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1626 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = _1592 * 0.5;
        float _1629 = _1602 * 0.5;
        float _1630 = _1612 * 0.5;
        float _1631 = dot(vec3(_1628, _1629, _1630), vec3(_1628, _1629, _1630));
        float _1636 = (_1631 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1631);
        float _1644 = (dot(vec3(_790, _791, _792), vec3(_1636 * _1628, _1636 * _1629, _1636 * _1630)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1653 = sqrt(((_1629 * _1629) + (_1628 * _1628)) + (_1630 * _1630)) / (_1625 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1654 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1655 = _1654 * 2.0;
        float _1659 = (1.0 - _1654) / (_1654 + 1.0);
        float _4225 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1669 = ((((1.0 - _1660) * (_1655 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1655 + 1.0))) + _1660) * _1625;
        float _1670 = _1593 * 0.5;
        float _1671 = _1603 * 0.5;
        float _1672 = _1613 * 0.5;
        float _1673 = dot(vec3(_1670, _1671, _1672), vec3(_1670, _1671, _1672));
        float _1678 = (_1673 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1673);
        float _1686 = (dot(vec3(_790, _791, _792), vec3(_1678 * _1670, _1678 * _1671, _1678 * _1672)) + 1.0) * 0.5;
        float _4236 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1695 = sqrt(((_1671 * _1671) + (_1670 * _1670)) + (_1672 * _1672)) / (_1626 + 9.9999997473787516355514526367188e-06);
        float _4247 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1696 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1697 = _1696 * 2.0;
        float _1701 = (1.0 - _1696) / (_1696 + 1.0);
        float _4258 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1702 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1711 = ((((1.0 - _1702) * (_1697 + 2.0)) * exp2(log2(isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_1697 + 1.0))) + _1702) * _1626;
        float _1712 = _1594 * 0.5;
        float _1713 = _1604 * 0.5;
        float _1714 = _1614 * 0.5;
        float _1715 = dot(vec3(_1712, _1713, _1714), vec3(_1712, _1713, _1714));
        float _1720 = (_1715 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1715);
        float _1728 = (dot(vec3(_790, _791, _792), vec3(_1720 * _1712, _1720 * _1713, _1720 * _1714)) + 1.0) * 0.5;
        float _4269 = isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0));
        float _1737 = sqrt(((_1713 * _1713) + (_1712 * _1712)) + (_1714 * _1714)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4280 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
        float _1739 = _1738 * 2.0;
        float _1743 = (1.0 - _1738) / (_1738 + 1.0);
        float _4291 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
        float _1753 = ((((1.0 - _1744) * (_1739 + 2.0)) * exp2(log2(isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0))) * (_1739 + 1.0))) + _1744) * _1627;
        _1761 = _1594;
        _1762 = _1593;
        _1763 = _1592;
        _1764 = _1604;
        _1765 = _1603;
        _1766 = _1602;
        _1767 = _1614;
        _1768 = _1613;
        _1769 = _1612;
        _1770 = _1627;
        _1771 = _1626;
        _1772 = _1625;
        _1773 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)));
        _1774 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0)));
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0)));
    }
    else
    {
        _1761 = _1452;
        _1762 = _1452;
        _1763 = _1452;
        _1764 = _1452;
        _1765 = _1452;
        _1766 = _1452;
        _1767 = _1452;
        _1768 = _1452;
        _1769 = _1452;
        _1770 = _1452;
        _1771 = _1452;
        _1772 = _1452;
        _1773 = 0.0;
        _1774 = 0.0;
        _1775 = 0.0;
    }
    float _1785 = (cbModelParam._m0[1u].x * (_1773 - _1464)) + _1464;
    float _1786 = (cbModelParam._m0[1u].x * (_1774 - _1465)) + _1465;
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1466)) + _1466;
    float _1808 = fma(_1787, cbSceneParam._m0[89u].z, fma(_1786, cbSceneParam._m0[89u].y, _1785 * cbSceneParam._m0[89u].x));
    float _1811 = fma(_1787, cbSceneParam._m0[90u].z, fma(_1786, cbSceneParam._m0[90u].y, _1785 * cbSceneParam._m0[90u].x));
    float _1814 = fma(_1787, cbSceneParam._m0[91u].z, fma(_1786, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1785));
    float _1829 = _1085 * 0.5;
    float _1830 = _1086 * 0.5;
    float _1831 = _1087 * 0.5;
    float _1832 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1835 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1762, _1765, _1768, _1771));
    float _1838 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1761, _1764, _1767, _1770));
    float _1869;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1845 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1451, _1455, _1458, _1461));
        float _1849 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1453, _1456, _1459, _1462));
        float _1853 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1454, _1457, _1460, _1463));
        float _1860 = dot(vec4(cbModelParam._m0[39u]), vec4(_1829, _1830, _1831, 1.0));
        _1869 = dot(vec3(isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1860) ? 0.0 : (isnan(0.0) ? _1860 : max(0.0, _1860))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1869 = 1.0;
    }
    float _1880;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1871 = dot(vec4(cbModelParam._m0[40u]), vec4(_1829, _1830, _1831, 1.0));
        _1880 = dot(vec3(isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0)), isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0)), isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1871) ? 0.0 : (isnan(0.0) ? _1871 : max(0.0, _1871))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1880 = 1.0;
    }
    float _1884 = (_1880 * cbModelParam._m0[1u].x) + (_1869 * (1.0 - cbModelParam._m0[1u].x));
    float _1894 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _945);
    float _1895 = isnan(_1894) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1894 : min(cbModelParam._m0[25u].z, _1894));
    float _1975;
    float _1977;
    float _1979;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1942 = fma(_1149, cbModelParam._m0[13u].z, fma(_1145, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1141)) + cbModelParam._m0[13u].w;
        float _1946 = fma(_1149, cbModelParam._m0[14u].z, fma(_1145, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1141)) + cbModelParam._m0[14u].w;
        float _1950 = fma(_1149, cbModelParam._m0[15u].z, fma(_1145, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1141)) + cbModelParam._m0[15u].w;
        float _1953 = fma(_1087, cbModelParam._m0[13u].z, fma(_1086, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1085));
        float _1956 = fma(_1087, cbModelParam._m0[14u].z, fma(_1086, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1085));
        float _1959 = fma(_1087, cbModelParam._m0[15u].z, fma(_1086, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1085));
        float _1987;
        if (_1953 > 0.0)
        {
            _1987 = abs((1.0 - _1942) / _1953);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1953 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1942 + 1.0) / _1953);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1987 = frontier_phi_14_12_ladder;
        }
        float _2210;
        if (_1956 > 0.0)
        {
            _2210 = abs((1.0 - _1946) / _1956);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1956 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1946 + 1.0) / _1956);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2210 = frontier_phi_23_19_ladder;
        }
        float _2467;
        if (_1959 > 0.0)
        {
            _2467 = abs((1.0 - _1950) / _1959);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1959 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1950 + 1.0) / _1959);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2467 = frontier_phi_35_30_ladder;
        }
        float _2469 = isnan(_2210) ? _1987 : (isnan(_1987) ? _2210 : min(_1987, _2210));
        float _2470 = isnan(_2467) ? _2469 : (isnan(_2469) ? _2467 : min(_2469, _2467));
        float _2474 = (_2470 * _1953) + _1942;
        float _2475 = (_2470 * _1956) + _1946;
        float _2476 = (_2470 * _1959) + _1950;
        float _2477 = _2470 * 9.9999997473787516355514526367188e-05;
        float _2479 = (-1.0) - _2477;
        float _2481 = _2477 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2476 > _2481) || ((_2476 < _2479) || ((_2475 > _2481) || ((_2475 < _2479) || ((_2474 < _2479) || (_2474 > _2481))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2604 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2476, cbModelParam._m0[9u].z, fma(_2475, cbModelParam._m0[9u].y, _2474 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2476, cbModelParam._m0[10u].z, fma(_2475, cbModelParam._m0[10u].y, _2474 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2476, cbModelParam._m0[11u].z, fma(_2475, cbModelParam._m0[11u].y, _2474 * cbModelParam._m0[11u].x))), _1895);
            frontier_phi_13_35_ladder = _2604.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2604.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2604.x * cbModelParam._m0[1u].y;
        }
        _1975 = frontier_phi_13_35_ladder_2;
        _1977 = frontier_phi_13_35_ladder_1;
        _1979 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1963 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1085, _1086, _1087), _1895);
        _1975 = _1963.x * cbModelParam._m0[1u].y;
        _1977 = _1963.y * cbModelParam._m0[1u].y;
        _1979 = _1963.z * cbModelParam._m0[1u].y;
    }
    float _1983 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _945);
    float _1984 = isnan(_1983) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1983 : min(cbModelParam._m0[25u].w, _1983));
    float _2073;
    float _2075;
    float _2077;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2037 = fma(_1149, cbModelParam._m0[21u].z, fma(_1145, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1141)) + cbModelParam._m0[21u].w;
        float _2041 = fma(_1149, cbModelParam._m0[22u].z, fma(_1145, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1141)) + cbModelParam._m0[22u].w;
        float _2045 = fma(_1149, cbModelParam._m0[23u].z, fma(_1145, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1141)) + cbModelParam._m0[23u].w;
        float _2048 = fma(_1087, cbModelParam._m0[21u].z, fma(_1086, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1085));
        float _2051 = fma(_1087, cbModelParam._m0[22u].z, fma(_1086, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1085));
        float _2054 = fma(_1087, cbModelParam._m0[23u].z, fma(_1086, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1085));
        float _2215;
        if (_2048 > 0.0)
        {
            _2215 = abs((1.0 - _2037) / _2048);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2048 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2037 + 1.0) / _2048);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2215 = frontier_phi_25_21_ladder;
        }
        float _2494;
        if (_2051 > 0.0)
        {
            _2494 = abs((1.0 - _2041) / _2051);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2051 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2041 + 1.0) / _2051);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2494 = frontier_phi_37_32_ladder;
        }
        float _2707;
        if (_2054 > 0.0)
        {
            _2707 = abs((1.0 - _2045) / _2054);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2045 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2707 = frontier_phi_46_43_ladder;
        }
        float _2709 = isnan(_2494) ? _2215 : (isnan(_2215) ? _2494 : min(_2215, _2494));
        float _2710 = isnan(_2707) ? _2709 : (isnan(_2709) ? _2707 : min(_2709, _2707));
        float _2714 = (_2710 * _2048) + _2037;
        float _2715 = (_2710 * _2051) + _2041;
        float _2716 = (_2710 * _2054) + _2045;
        float _2717 = _2710 * 9.9999997473787516355514526367188e-05;
        float _2718 = (-1.0) - _2717;
        float _2720 = _2717 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2716 > _2720) || ((_2716 < _2718) || ((_2715 > _2720) || ((_2715 < _2718) || ((_2714 < _2718) || (_2714 > _2720))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2946 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2716, cbModelParam._m0[17u].z, fma(_2715, cbModelParam._m0[17u].y, _2714 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2716, cbModelParam._m0[18u].z, fma(_2715, cbModelParam._m0[18u].y, _2714 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2716, cbModelParam._m0[19u].z, fma(_2715, cbModelParam._m0[19u].y, _2714 * cbModelParam._m0[19u].x))), _1984);
            frontier_phi_22_46_ladder = _2946.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2946.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2946.x * cbModelParam._m0[1u].z;
        }
        _2073 = frontier_phi_22_46_ladder_2;
        _2075 = frontier_phi_22_46_ladder_1;
        _2077 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2057 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1085, _1086, _1087), _1984);
        _2073 = _2057.x * cbModelParam._m0[1u].z;
        _2075 = _2057.y * cbModelParam._m0[1u].z;
        _2077 = _2057.z * cbModelParam._m0[1u].z;
    }
    float _2090 = (((_1112 * _1063) + _1113) * _1077) * ((cbModelParam._m0[1u].w * (_2073 - _1975)) + _1975);
    float _2092 = (((_1112 * _1064) + _1113) * _1077) * ((cbModelParam._m0[1u].w * (_2075 - _1977)) + _1977);
    float _2094 = (((_1112 * _1065) + _1113) * _1077) * ((cbModelParam._m0[1u].w * (_2077 - _1979)) + _1979);
    float _2097 = fma(_2094, cbSceneParam._m0[89u].z, fma(_2092, cbSceneParam._m0[89u].y, _2090 * cbSceneParam._m0[89u].x));
    float _2100 = fma(_2094, cbSceneParam._m0[90u].z, fma(_2092, cbSceneParam._m0[90u].y, _2090 * cbSceneParam._m0[90u].x));
    float _2103 = fma(_2094, cbSceneParam._m0[91u].z, fma(_2092, cbSceneParam._m0[91u].y, _2090 * cbSceneParam._m0[91u].x));
    vec4 _2111 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_867, _868));
    float _2113 = _2111.w;
    float _2125 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2113);
    float _2126 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2113);
    float _2127 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2113);
    uvec4 _2131 = floatBitsToUint(cbInstanceData._m0[_969 + 5u]);
    uint _2133 = _2131.x * 14u;
    uint _2134 = _2133 + 13u;
    float _2141 = _1077 + (-1.0);
    float _2146 = (cbLight._m0[_2134].x * _2141) + 1.0;
    float _2147 = (cbLight._m0[_2134].y * _2141) + 1.0;
    float _2148 = (cbLight._m0[_2134].z * _2141) + 1.0;
    float _2149 = (cbLight._m0[_2134].w * _2141) + 1.0;
    uint _2150 = _2133 + 5u;
    float _2156 = isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0));
    uint _2160 = _2133 + 4u;
    float _2169 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
    uint _2173 = _2133 | 1u;
    float _2184 = dot(vec3(cbLight._m0[_2133].xyz), vec3(_790, _791, _792));
    float _2187 = dot(vec3(cbLight._m0[_2173].xyz), vec3(_790, _791, _792));
    float _4427 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
    float _4438 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
    float _2192 = (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * 0.3183098733425140380859375;
    float _2194 = (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0))) * 0.3183098733425140380859375;
    float _2201 = ((cbLight._m0[_2150].x * _2156) * _2194) + (((cbLight._m0[_2160].x * _2125) * _2169) * _2192);
    float _2202 = ((_2156 * cbLight._m0[_2150].y) * _2194) + (((cbLight._m0[_2160].y * _2126) * _2169) * _2192);
    float _2203 = ((_2156 * cbLight._m0[_2150].z) * _2194) + (((cbLight._m0[_2160].z * _2127) * _2169) * _2192);
    uvec4 _2207 = floatBitsToUint(cbLight._m0[_2133 + 12u]);
    bool _2209 = _2207.x == 0u;
    float _2220;
    float _2222;
    float _2224;
    if (_2209)
    {
        _2220 = _2201;
        _2222 = _2202;
        _2224 = _2203;
    }
    else
    {
        uint _2228 = _2133 + 6u;
        float _2244 = (dot(vec3(cbLight._m0[_2133 + 2u].xyz), vec3(_790, _791, _792)) * 0.5) + 0.5;
        float _2245 = _2244 * _2244;
        float _4449 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
        float _2246 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
        float _2247 = isnan(1.0) ? _2148 : (isnan(_2148) ? 1.0 : min(_2148, 1.0));
        _2220 = (((cbLight._m0[_2228].x * 0.3183098733425140380859375) * _2246) * _2247) + _2201;
        _2222 = (((cbLight._m0[_2228].y * 0.3183098733425140380859375) * _2246) * _2247) + _2202;
        _2224 = (((cbLight._m0[_2228].z * 0.3183098733425140380859375) * _2246) * _2247) + _2203;
    }
    bool _2227 = _2207.y == 0u;
    float _2265;
    float _2267;
    float _2269;
    if (_2227)
    {
        _2265 = _2220;
        _2267 = _2222;
        _2269 = _2224;
    }
    else
    {
        uint _2438 = _2133 + 7u;
        float _2454 = (dot(vec3(cbLight._m0[_2133 + 3u].xyz), vec3(_790, _791, _792)) * 0.5) + 0.5;
        float _2455 = _2454 * _2454;
        float _4465 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
        float _2456 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _2457 = isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0));
        _2265 = (((cbLight._m0[_2438].x * 0.3183098733425140380859375) * _2456) * _2457) + _2220;
        _2267 = (((cbLight._m0[_2438].y * 0.3183098733425140380859375) * _2456) * _2457) + _2222;
        _2269 = (((cbLight._m0[_2438].z * 0.3183098733425140380859375) * _2456) * _2457) + _2224;
    }
    uint _2272 = _2133 + 8u;
    float _2285 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2133].w)) * _945) * 0.949999988079071044921875);
    float _2286 = _2285 * _2285;
    float _2287 = cbLight._m0[_2133].x + _860;
    float _2288 = cbLight._m0[_2133].y + _861;
    float _2289 = cbLight._m0[_2133].z + _862;
    float _2293 = inversesqrt(dot(vec3(_2287, _2288, _2289), vec3(_2287, _2288, _2289)));
    float _2294 = _2293 * _2287;
    float _2295 = _2293 * _2288;
    float _2296 = _2293 * _2289;
    float _2297 = dot(vec3(_790, _791, _792), vec3(cbLight._m0[_2133].xyz));
    float _4481 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2300 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
    float _4492 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _2301 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
    float _2302 = dot(vec3(_790, _791, _792), vec3(_2294, _2295, _2296));
    float _4503 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0));
    float _2305 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
    float _2306 = dot(vec3(cbLight._m0[_2133].xyz), vec3(_2294, _2295, _2296));
    float _4514 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
    float _2310 = _2286 * _2286;
    float _2314 = ((_2305 * _2305) * (_2310 + (-1.0))) + 1.0;
    float _2322 = exp2(log2(1.0 - (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0)))) * 5.0);
    float _2323 = 0.959999978542327880859375 - _1060;
    float _2325 = 0.959999978542327880859375 - _1061;
    float _2326 = 0.959999978542327880859375 - _1062;
    float _2333 = 1.0 - _2286;
    float _2344 = (0.5 / (((_2301 * ((_2300 * _2333) + _2286)) + 9.9999999392252902907785028219223e-09) + (((_2301 * _2333) + _2286) * _2300))) * _2300;
    float _4525 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
    float _2346 = (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0))) * (_2310 / ((_2314 * _2314) * 3.141590118408203125));
    uint _2360 = _2133 + 9u;
    float _2371 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2173].w)) * _945) * 0.949999988079071044921875);
    float _2372 = _2371 * _2371;
    float _2373 = cbLight._m0[_2173].x + _860;
    float _2374 = cbLight._m0[_2173].y + _861;
    float _2375 = cbLight._m0[_2173].z + _862;
    float _2379 = inversesqrt(dot(vec3(_2373, _2374, _2375), vec3(_2373, _2374, _2375)));
    float _2380 = _2379 * _2373;
    float _2381 = _2379 * _2374;
    float _2382 = _2379 * _2375;
    float _2383 = dot(vec3(_790, _791, _792), vec3(cbLight._m0[_2173].xyz));
    float _4536 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
    float _2386 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
    float _2387 = dot(vec3(_790, _791, _792), vec3(_2380, _2381, _2382));
    float _4547 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    float _2390 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
    float _2391 = dot(vec3(cbLight._m0[_2173].xyz), vec3(_2380, _2381, _2382));
    float _4558 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
    float _2395 = _2372 * _2372;
    float _2399 = ((_2390 * _2390) * (_2395 + (-1.0))) + 1.0;
    float _2406 = exp2(log2(1.0 - (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0)))) * 5.0);
    float _2413 = 1.0 - _2372;
    float _2423 = (0.5 / (((_2301 * ((_2386 * _2413) + _2372)) + 9.9999999392252902907785028219223e-09) + (((_2301 * _2413) + _2372) * _2386))) * _2386;
    float _4569 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2425 = (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (_2395 / ((_2399 * _2399) * 3.141590118408203125));
    float _2435 = (((((_2406 * _2323) + _1063) * cbLight._m0[_2360].x) * _2425) * _2156) + ((((cbLight._m0[_2272].x * _2125) * ((_2322 * _2323) + _1063)) * _2346) * _2169);
    float _2436 = (((((_2406 * _2325) + _1064) * cbLight._m0[_2360].y) * _2425) * _2156) + ((((cbLight._m0[_2272].y * _2126) * ((_2322 * _2325) + _1064)) * _2346) * _2169);
    float _2437 = (((((_2406 * _2326) + _1065) * cbLight._m0[_2360].z) * _2425) * _2156) + ((((cbLight._m0[_2272].z * _2127) * ((_2322 * _2326) + _1065)) * _2346) * _2169);
    float _2499;
    float _2501;
    float _2503;
    if (_2209)
    {
        _2499 = _2435;
        _2501 = _2436;
        _2503 = _2437;
    }
    else
    {
        uint _2505 = _2133 + 2u;
        uint _2509 = _2133 + 10u;
        float _2523 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2505].w)) * _945) * 0.949999988079071044921875);
        float _2524 = _2523 * _2523;
        float _2525 = cbLight._m0[_2505].x + _860;
        float _2526 = cbLight._m0[_2505].y + _861;
        float _2527 = cbLight._m0[_2505].z + _862;
        float _2531 = inversesqrt(dot(vec3(_2525, _2526, _2527), vec3(_2525, _2526, _2527)));
        float _2532 = _2531 * _2525;
        float _2533 = _2531 * _2526;
        float _2534 = _2531 * _2527;
        float _2535 = dot(vec3(_790, _791, _792), vec3(cbLight._m0[_2505].xyz));
        float _4580 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
        float _2538 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
        float _2539 = dot(vec3(_790, _791, _792), vec3(_2532, _2533, _2534));
        float _4591 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
        float _2542 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
        float _2543 = dot(vec3(cbLight._m0[_2505].xyz), vec3(_2532, _2533, _2534));
        float _4602 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
        float _2547 = _2524 * _2524;
        float _2551 = ((_2542 * _2542) * (_2547 + (-1.0))) + 1.0;
        float _2558 = exp2(log2(1.0 - (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0)))) * 5.0);
        float _2565 = 1.0 - _2524;
        float _2575 = (0.5 / (((_2301 * ((_2538 * _2565) + _2524)) + 9.9999999392252902907785028219223e-09) + (((_2301 * _2565) + _2524) * _2538))) * _2538;
        float _4613 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
        float _2577 = (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0))) * (_2547 / ((_2551 * _2551) * 3.141590118408203125));
        float _2578 = isnan(1.0) ? _2148 : (isnan(_2148) ? 1.0 : min(_2148, 1.0));
        _2499 = (((((_2558 * _2323) + _1063) * cbLight._m0[_2509].x) * _2577) * _2578) + _2435;
        _2501 = (((((_2558 * _2325) + _1064) * cbLight._m0[_2509].y) * _2577) * _2578) + _2436;
        _2503 = (((((_2558 * _2326) + _1065) * cbLight._m0[_2509].z) * _2577) * _2578) + _2437;
    }
    float _2613;
    float _2615;
    float _2617;
    if (_2227)
    {
        _2613 = _2499;
        _2615 = _2501;
        _2617 = _2503;
    }
    else
    {
        uint _2624 = _2133 + 3u;
        uint _2628 = _2133 + 11u;
        float _2642 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2624].w)) * _945) * 0.949999988079071044921875);
        float _2643 = _2642 * _2642;
        float _2644 = cbLight._m0[_2624].x + _860;
        float _2645 = cbLight._m0[_2624].y + _861;
        float _2646 = cbLight._m0[_2624].z + _862;
        float _2650 = inversesqrt(dot(vec3(_2644, _2645, _2646), vec3(_2644, _2645, _2646)));
        float _2651 = _2650 * _2644;
        float _2652 = _2650 * _2645;
        float _2653 = _2650 * _2646;
        float _2654 = dot(vec3(_790, _791, _792), vec3(cbLight._m0[_2624].xyz));
        float _4629 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2657 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
        float _2658 = dot(vec3(_790, _791, _792), vec3(_2651, _2652, _2653));
        float _4640 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
        float _2661 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
        float _2662 = dot(vec3(cbLight._m0[_2624].xyz), vec3(_2651, _2652, _2653));
        float _4651 = isnan(0.0) ? _2662 : (isnan(_2662) ? 0.0 : max(_2662, 0.0));
        float _2666 = _2643 * _2643;
        float _2670 = ((_2661 * _2661) * (_2666 + (-1.0))) + 1.0;
        float _2677 = exp2(log2(1.0 - (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0)))) * 5.0);
        float _2684 = 1.0 - _2643;
        float _2694 = (0.5 / (((_2301 * ((_2657 * _2684) + _2643)) + 9.9999999392252902907785028219223e-09) + (((_2301 * _2684) + _2643) * _2657))) * _2657;
        float _4662 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
        float _2696 = (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0))) * (_2666 / ((_2670 * _2670) * 3.141590118408203125));
        float _2697 = isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0));
        _2613 = (((((_2677 * _2323) + _1063) * cbLight._m0[_2628].x) * _2696) * _2697) + _2499;
        _2615 = (((((_2677 * _2325) + _1064) * cbLight._m0[_2628].y) * _2696) * _2697) + _2501;
        _2617 = (((((_2677 * _2326) + _1065) * cbLight._m0[_2628].z) * _2696) * _2697) + _2503;
    }
    float _2832;
    float _2834;
    float _2836;
    float _2838;
    float _2840;
    float _2842;
    if (_2131.y == 0u)
    {
        float _2772 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2773 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2772;
        float _2774 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2772;
        float _2775 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2772;
        uvec4 _2787 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2788 = _2787.x;
        uint _2799 = uint((float(_2787.y) * floor(float(uint(cbSceneParam._m0[85u].y * _868) / _2788))) + floor(float(uint(cbSceneParam._m0[85u].x * _867) / _2788)));
        float _2809 = (log2(_2775 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2810 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        uint _2813 = uint(isnan(14.0) ? _2810 : (isnan(_2810) ? 14.0 : min(_2810, 14.0)));
        uvec4 _2818 = texelFetch(g_lightClusterGridBuffer, int(((_2813 << 2u) + (_2799 << 6u)) >> 2u));
        uint _2819 = _2818.x;
        uint _2820 = _2787.z;
        float _2951;
        float _2953;
        float _2955;
        float _2957;
        float _2959;
        float _2961;
        if (((((1u << ((_2820 >> 4u) & 15u)) + 4294967295u) & _2819) == 0u) || ((_2820 & 240u) == 0u))
        {
            _2951 = 0.0;
            _2953 = 0.0;
            _2955 = 0.0;
            _2957 = 0.0;
            _2959 = 0.0;
            _2961 = 0.0;
        }
        else
        {
            float _2952;
            float _2954;
            float _2956;
            float _2958;
            float _2960;
            float _2962;
            float _3104 = 0.0;
            float _3105 = 0.0;
            float _3106 = 0.0;
            float _3107 = 0.0;
            float _3108 = 0.0;
            float _3109 = 0.0;
            uint _3110 = 0u;
            uint _3119;
            bool _3120;
            for (;;)
            {
                _3119 = texelFetch(g_lightClassification, int((((_2813 << 5u) + (_2799 << 9u)) + (_3110 << 2u)) >> 2u)).x;
                _3120 = _3119 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3120)
                {
                    frontier_phi_61_pred = _3104;
                    frontier_phi_61_pred_1 = _3109;
                    frontier_phi_61_pred_2 = _3108;
                    frontier_phi_61_pred_3 = _3107;
                    frontier_phi_61_pred_4 = _3106;
                    frontier_phi_61_pred_5 = _3105;
                }
                else
                {
                    float _3228;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    uint _3234;
                    _3228 = _3104;
                    _3229 = _3105;
                    _3230 = _3106;
                    _3231 = _3107;
                    _3232 = _3108;
                    _3233 = _3109;
                    _3234 = _3119;
                    float _3160;
                    float _3161;
                    float _3162;
                    float _3163;
                    float _3164;
                    float _3165;
                    for (;;)
                    {
                        uint _3238 = uint(findLSB(_3234)) + (_3110 << 5u);
                        uint _3235 = (_3234 + 4294967295u) & _3234;
                        uint _3240 = _3238 * 48u;
                        vec4 _3254 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3240)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 3u)).x));
                        uint _3260 = (_3238 * 48u) + 4u;
                        vec4 _3273 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3260)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 3u)).x));
                        uint _3279 = (_3238 * 48u) + 8u;
                        vec3 _3290 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x));
                        float _3294 = _3254.x - _2773;
                        float _3295 = _3254.y - _2774;
                        float _3296 = _3254.z - _2775;
                        float _3297 = dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296));
                        float _3300 = inversesqrt(_3297);
                        float _3301 = _3300 * _3294;
                        float _3302 = _3300 * _3295;
                        float _3303 = _3300 * _3296;
                        float _3304 = dot(vec3(_890, _893, _896), vec3(_3301, _3302, _3303));
                        float _3309 = 1.0 - (_3297 * _3254.w);
                        float _4688 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                        float _3310 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
                        float _3311 = sqrt(_3297) * _3273.w;
                        float _3314 = 1.39999997615814208984375 / (_3311 + 1.39999997615814208984375);
                        float _3315 = _3314 * _3314;
                        float _3318 = ((1.0 - _3315) * _3304) + _3315;
                        float _3321 = _3311 * _3311;
                        float _3325 = ((isnan(0.0) ? _3318 : (isnan(_3318) ? 0.0 : max(_3318, 0.0))) * _3310) / ((_3321 * 0.699999988079071044921875) + 1.0);
                        float _3329 = (-0.0) - _2773;
                        float _3330 = (-0.0) - _2774;
                        float _3331 = (-0.0) - _2775;
                        float _3335 = inversesqrt(dot(vec3(_3329, _3330, _3331), vec3(_3329, _3330, _3331)));
                        float _3336 = _3335 * _3329;
                        float _3337 = _3335 * _3330;
                        float _3338 = _3335 * _3331;
                        float _3346 = exp2(log2(1.0 / ((_3321 * 3.5) + 5.0)) * 0.25);
                        float _3347 = 1.0 - _1093;
                        float _3354 = sqrt(1.0 - ((1.0 - (_3347 * _3347)) * (1.0 - (_3346 * _3346))));
                        float _3355 = _3354 * _3354;
                        float _3356 = _3355 * _3355;
                        float _3357 = _3336 + _3301;
                        float _3358 = _3337 + _3302;
                        float _3359 = _3338 + _3303;
                        float _3363 = inversesqrt(dot(vec3(_3357, _3358, _3359), vec3(_3357, _3358, _3359)));
                        float _3367 = dot(vec3(_890, _893, _896), vec3(_3336, _3337, _3338));
                        float _4704 = isnan(0.0) ? _3367 : (isnan(_3367) ? 0.0 : max(_3367, 0.0));
                        float _3370 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
                        float _3371 = dot(vec3(_890, _893, _896), vec3(_3363 * _3357, _3363 * _3358, _3363 * _3359));
                        float _4715 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0));
                        float _3374 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
                        float _3378 = ((_3374 * _3374) * (_3356 + (-1.0))) + 1.0;
                        float _3379 = _3314 * _3355;
                        float _3380 = _3379 * _3379;
                        float _3383 = ((1.0 - _3380) * _3304) + _3380;
                        float _4726 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                        float _3384 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
                        float _3385 = 1.0 - _3355;
                        float _3395 = (0.5 / (((_3384 * ((_3370 * _3385) + _3355)) + 9.9999999392252902907785028219223e-09) + (((_3384 * _3385) + _3355) * _3370))) * _3384;
                        float _4737 = isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0));
                        float _3406 = (((_3356 * 3.1415927410125732421875) * (isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0)))) / ((_3378 * _3378) * ((_3321 * 2.1991131305694580078125) + 3.141590118408203125))) * _3310;
                        _3163 = (_3325 * _3273.x) + _3231;
                        _3164 = (_3325 * _3273.y) + _3232;
                        _3165 = (_3325 * _3273.z) + _3233;
                        _3160 = (_3406 * _3290.x) + _3228;
                        _3161 = (_3406 * _3290.y) + _3229;
                        _3162 = (_3406 * _3290.z) + _3230;
                        if (_3235 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3228 = _3160;
                            _3229 = _3161;
                            _3230 = _3162;
                            _3231 = _3163;
                            _3232 = _3164;
                            _3233 = _3165;
                            _3234 = _3235;
                        }
                    }
                    frontier_phi_61_pred = _3160;
                    frontier_phi_61_pred_1 = _3165;
                    frontier_phi_61_pred_2 = _3164;
                    frontier_phi_61_pred_3 = _3163;
                    frontier_phi_61_pred_4 = _3162;
                    frontier_phi_61_pred_5 = _3161;
                }
                _2952 = frontier_phi_61_pred;
                _2962 = frontier_phi_61_pred_1;
                _2960 = frontier_phi_61_pred_2;
                _2958 = frontier_phi_61_pred_3;
                _2956 = frontier_phi_61_pred_4;
                _2954 = frontier_phi_61_pred_5;
                uint _3111 = _3110 + 1u;
                if (_3111 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3104 = _2952;
                    _3105 = _2954;
                    _3106 = _2956;
                    _3107 = _2958;
                    _3108 = _2960;
                    _3109 = _2962;
                    _3110 = _3111;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2951 = _2952;
            _2953 = _2954;
            _2955 = _2956;
            _2957 = _2958;
            _2959 = _2960;
            _2961 = _2962;
        }
        uvec4 _2965 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2966 = _2965.z;
        uint _2968 = (_2966 >> 8u) & 15u;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        if (((4294967295u << _2968) & _2819) == 0u)
        {
            _3072 = _2951;
            _3074 = _2953;
            _3076 = _2955;
            _3078 = _2957;
            _3080 = _2959;
            _3082 = _2961;
        }
        else
        {
            float _3097 = inversesqrt(dot(vec3(_2773, _2774, _2775), vec3(_2773, _2774, _2775)));
            float _3098 = _3097 * _2773;
            float _3099 = _3097 * _2774;
            float _3100 = _3097 * _2775;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2968 < ((_2966 >> 12u) & 15u))
            {
                float _3073;
                float _3075;
                float _3077;
                float _3079;
                float _3081;
                float _3083;
                float _3211 = _2951;
                float _3212 = _2953;
                float _3213 = _2955;
                float _3214 = _2957;
                float _3215 = _2959;
                float _3216 = _2961;
                uint _3217 = _2968;
                uint _3226;
                bool _3227;
                for (;;)
                {
                    _3226 = texelFetch(g_lightClassification, int((((_2813 << 5u) + (_2799 << 9u)) + (_3217 << 2u)) >> 2u)).x;
                    _3227 = _3226 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3227)
                    {
                        frontier_phi_67_pred = _3214;
                        frontier_phi_67_pred_1 = _3215;
                        frontier_phi_67_pred_2 = _3216;
                        frontier_phi_67_pred_3 = _3213;
                        frontier_phi_67_pred_4 = _3212;
                        frontier_phi_67_pred_5 = _3211;
                    }
                    else
                    {
                        float _3411;
                        float _3412;
                        float _3413;
                        float _3414;
                        float _3415;
                        float _3416;
                        float _3705;
                        float _3706;
                        float _3707;
                        float _3708;
                        float _3709;
                        float _3710;
                        float _3424 = _3211;
                        float _3425 = _3212;
                        float _3426 = _3213;
                        float _3427 = _3214;
                        float _3428 = _3215;
                        float _3429 = _3216;
                        uint _3430 = _3226;
                        uint _3431;
                        vec4 _3456;
                        float _3457;
                        vec4 _3472;
                        vec3 _3484;
                        vec4 _3499;
                        vec4 _3514;
                        float _3561;
                        bool _3562;
                        for (;;)
                        {
                            uint _3441 = ((_3217 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3430));
                            _3431 = (_3430 + 4294967295u) & _3430;
                            uint _3443 = _3441 * 40u;
                            _3456 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3443)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 3u)).x));
                            _3457 = _3456.w;
                            uint _3459 = (_3441 * 40u) + 4u;
                            _3472 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3459)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 3u)).x));
                            uint _3474 = (_3441 * 40u) + 8u;
                            _3484 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3474)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3474 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3474 + 2u)).x));
                            uint _3486 = (_3441 * 40u) + 16u;
                            _3499 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 3u)).x));
                            uint _3501 = (_3441 * 40u) + 20u;
                            _3514 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3501)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 3u)).x));
                            uint _3517 = (_3441 * 40u) + 24u;
                            vec4 _3530 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 3u)).x));
                            uint _3536 = (_3441 * 40u) + 28u;
                            vec4 _3549 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3536)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3536 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3536 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3536 + 3u)).x));
                            _3561 = fma(_2775, _3549.z, fma(_2774, _3549.y, _3549.x * _2773)) + _3549.w;
                            _3562 = !((fma(_2775, _3530.z, fma(_2774, _3530.y, _3530.x * _2773)) + _3530.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3562)
                            {
                                float _3589 = _3456.x - _2773;
                                float _3590 = _3456.y - _2774;
                                float _3591 = _3456.z - _2775;
                                float _3592 = dot(vec3(_3589, _3590, _3591), vec3(_3589, _3590, _3591));
                                float _3595 = inversesqrt(_3592);
                                float _3596 = _3595 * _3589;
                                float _3597 = _3595 * _3590;
                                float _3598 = _3595 * _3591;
                                float _3602 = 1.0 - (_3592 / (_3457 * _3457));
                                float _4748 = isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0));
                                float _3603 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
                                float _3607 = sqrt(_3592) * _3472.w;
                                float _3609 = 1.39999997615814208984375 / (_3607 + 1.39999997615814208984375);
                                float _3610 = _3609 * _3609;
                                float _3613 = ((1.0 - _3610) * dot(vec3(_3596, _3597, _3598), vec3(_890, _893, _896))) + _3610;
                                float _3616 = _3607 * _3607;
                                float _3620 = (fma(_2775, _3499.z, fma(_2774, _3499.y, _3499.x * _2773)) + _3499.w) / _3561;
                                float _3621 = (fma(_2775, _3514.z, fma(_2774, _3514.y, _3514.x * _2773)) + _3514.w) / _3561;
                                float _3625 = 1.0 - dot(vec2(_3620, _3621), vec2(_3620, _3621));
                                float _4764 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                                float _3626 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
                                float _3627 = _3626 * (((isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0))) * _3603) / ((_3616 * 0.699999988079071044921875) + 1.0));
                                float _3639 = exp2(log2(1.0 / ((_3616 * 3.5) + 5.0)) * 0.25);
                                float _3640 = 1.0 - _1093;
                                float _3647 = sqrt(1.0 - ((1.0 - (_3640 * _3640)) * (1.0 - (_3639 * _3639))));
                                float _3648 = _3647 * _3647;
                                float _3649 = _3648 * _3648;
                                float _3650 = _3596 - _3098;
                                float _3651 = _3597 - _3099;
                                float _3652 = _3598 - _3100;
                                float _3656 = inversesqrt(dot(vec3(_3650, _3651, _3652), vec3(_3650, _3651, _3652)));
                                float _3660 = dot(vec3(_890, _893, _896), vec3((-0.0) - _3098, (-0.0) - _3099, (-0.0) - _3100));
                                float _4775 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3663 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
                                float _3664 = dot(vec3(_890, _893, _896), vec3(_3656 * _3650, _3656 * _3651, _3656 * _3652));
                                float _4786 = isnan(0.0) ? _3664 : (isnan(_3664) ? 0.0 : max(_3664, 0.0));
                                float _3667 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                                float _3671 = ((_3667 * _3667) * (_3649 + (-1.0))) + 1.0;
                                float _3672 = _3609 * _3648;
                                float _3673 = _3672 * _3672;
                                float _3679 = ((1.0 - _3673) * dot(vec3(_890, _893, _896), vec3(_3596, _3597, _3598))) + _3673;
                                float _4797 = isnan(0.0) ? _3679 : (isnan(_3679) ? 0.0 : max(_3679, 0.0));
                                float _3680 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                                float _3681 = 1.0 - _3648;
                                float _3691 = (0.5 / (((_3680 * ((_3663 * _3681) + _3648)) + 9.9999999392252902907785028219223e-09) + (((_3680 * _3681) + _3648) * _3663))) * _3680;
                                float _4808 = isnan(0.0) ? _3691 : (isnan(_3691) ? 0.0 : max(_3691, 0.0));
                                float _3701 = (_3626 * _3603) * (((_3649 * 3.1415927410125732421875) * (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0)))) / ((_3671 * _3671) * ((_3616 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3701 * _3484.x;
                                frontier_phi_73_pred_1 = _3701 * _3484.y;
                                frontier_phi_73_pred_2 = _3627 * _3472.z;
                                frontier_phi_73_pred_3 = _3627 * _3472.y;
                                frontier_phi_73_pred_4 = _3627 * _3472.x;
                                frontier_phi_73_pred_5 = _3701 * _3484.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3705 = frontier_phi_73_pred;
                            _3706 = frontier_phi_73_pred_1;
                            _3710 = frontier_phi_73_pred_2;
                            _3709 = frontier_phi_73_pred_3;
                            _3708 = frontier_phi_73_pred_4;
                            _3707 = frontier_phi_73_pred_5;
                            _3414 = _3708 + _3427;
                            _3415 = _3709 + _3428;
                            _3416 = _3710 + _3429;
                            _3411 = _3705 + _3424;
                            _3412 = _3706 + _3425;
                            _3413 = _3707 + _3426;
                            if (_3431 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3424 = _3411;
                                _3425 = _3412;
                                _3426 = _3413;
                                _3427 = _3414;
                                _3428 = _3415;
                                _3429 = _3416;
                                _3430 = _3431;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3414;
                        frontier_phi_67_pred_1 = _3415;
                        frontier_phi_67_pred_2 = _3416;
                        frontier_phi_67_pred_3 = _3413;
                        frontier_phi_67_pred_4 = _3412;
                        frontier_phi_67_pred_5 = _3411;
                    }
                    _3079 = frontier_phi_67_pred;
                    _3081 = frontier_phi_67_pred_1;
                    _3083 = frontier_phi_67_pred_2;
                    _3077 = frontier_phi_67_pred_3;
                    _3075 = frontier_phi_67_pred_4;
                    _3073 = frontier_phi_67_pred_5;
                    uint _3218 = _3217 + 1u;
                    if (_3218 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3211 = _3073;
                        _3212 = _3075;
                        _3213 = _3077;
                        _3214 = _3079;
                        _3215 = _3081;
                        _3216 = _3083;
                        _3217 = _3218;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3081;
                frontier_phi_55_56_ladder_1 = _3083;
                frontier_phi_55_56_ladder_2 = _3079;
                frontier_phi_55_56_ladder_3 = _3077;
                frontier_phi_55_56_ladder_4 = _3075;
                frontier_phi_55_56_ladder_5 = _3073;
            }
            else
            {
                frontier_phi_55_56_ladder = _2959;
                frontier_phi_55_56_ladder_1 = _2961;
                frontier_phi_55_56_ladder_2 = _2957;
                frontier_phi_55_56_ladder_3 = _2955;
                frontier_phi_55_56_ladder_4 = _2953;
                frontier_phi_55_56_ladder_5 = _2951;
            }
            _3072 = frontier_phi_55_56_ladder_5;
            _3074 = frontier_phi_55_56_ladder_4;
            _3076 = frontier_phi_55_56_ladder_3;
            _3078 = frontier_phi_55_56_ladder_2;
            _3080 = frontier_phi_55_56_ladder;
            _3082 = frontier_phi_55_56_ladder_1;
        }
        float _3087 = isnan(1.0) ? _1077 : (isnan(_1077) ? 1.0 : min(_1077, 1.0));
        _2832 = (_3087 * _3078) + _2265;
        _2834 = (_3087 * _3080) + _2267;
        _2836 = (_3087 * _3082) + _2269;
        _2838 = ((_3072 * _1063) * _3087) + _2613;
        _2840 = ((_3074 * _1064) * _3087) + _2615;
        _2842 = ((_3076 * _1065) * _3087) + _2617;
    }
    else
    {
        _2832 = _2265;
        _2834 = _2267;
        _2836 = _2269;
        _2838 = _2613;
        _2840 = _2615;
        _2842 = _2617;
    }
    uint _2848 = _970 + uint(cbMatDynParam._m0[0u].w);
    float _2854 = cbInstanceData._m0[_2848].x * (_760 ? cbMtdParam._m0[21u].z : cbMtdParam._m0[11u].y);
    float _2855 = cbInstanceData._m0[_2848].y * (_760 ? cbMtdParam._m0[21u].w : cbMtdParam._m0[11u].z);
    float _2856 = cbInstanceData._m0[_2848].z * (_760 ? cbMtdParam._m0[22u].x : cbMtdParam._m0[11u].w);
    float _4824 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
    float _4835 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
    float _4846 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _4857 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _2874 = (((isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0))) * (_2832 + ((isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))) * _1077))) + ((_2838 + ((isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0))) * _1884)) * cbPerFrame._m0[3u].x)) + _2854;
    float _2876 = (_2855 + ((_2840 + ((isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0))) * _1884)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0))) * (_2834 + ((isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) * _1077)));
    float _2878 = (_2856 + ((_2842 + ((isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0))) * _1884)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_2836 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1077)));
    float _4883 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2891 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
    float _2896 = cbInstanceData._m0[_969 + 6u].w * (isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0)));
    float _2901 = _867 / cbSceneParam._m0[86u].x;
    float _2902 = _868 / cbSceneParam._m0[86u].y;
    vec4 _2916 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2901, _2902, (log2((isnan(cbSceneParam._m0[77u].w) ? _803 : (isnan(_803) ? cbSceneParam._m0[77u].w : min(_803, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2918 = _2916.x;
    float _2919 = _2916.y;
    float _2920 = _2916.z;
    float _2921 = _2916.w;
    float _3013;
    float _3015;
    float _3017;
    float _3019;
    if (_803 > cbSceneParam._m0[78u].w)
    {
        float _2976 = isnan(_803) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _803 : min(cbSceneParam._m0[80u].w, _803));
        float _2977 = _2976 / _803;
        float _2988 = _2977 * _853;
        float _2989 = _854 * _2977;
        float _2990 = (-0.0) - _2989;
        float _2991 = _2977 * _855;
        float _2993 = (cbSceneParam._m0[77u].w * _2990) / _2976;
        float _2994 = _2993 + cbSceneParam._m0[79u].w;
        float _2995 = cbSceneParam._m0[79u].w - _2989;
        float _3001 = sqrt(((_2988 * _2988) + (_2989 * _2989)) + (_2991 * _2991));
        float _3004 = (1.0 - (cbSceneParam._m0[77u].w / _2976)) * _3001;
        float _3009 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3011 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3173;
        if (abs((_2990 - _2993) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3173 = ((((_2994 > 0.0) ? exp2(_3009 * _2994) : (2.0 - exp2(_3011 * _2994))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3004;
        }
        else
        {
            float _3133 = 1.0 / cbSceneParam._m0[80u].x;
            float _3134 = isnan(_2995) ? _2994 : (isnan(_2994) ? _2995 : max(_2994, _2995));
            float _3135 = isnan(_2995) ? _2994 : (isnan(_2994) ? _2995 : min(_2994, _2995));
            float _3144 = isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : min(_3134, 0.0));
            float _3145 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : min(_3135, 0.0));
            _3173 = ((abs(_3001 / _2990) * cbSceneParam._m0[80u].y) * ((((_3144 - _3145) * 2.0) - ((exp2(_3009 * (isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : max(_3134, 0.0)))) - exp2(_3009 * (isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0))))) * _3133)) - ((exp2(_3011 * _3144) - exp2(_3011 * _3145)) * _3133))) + (_3004 * cbSceneParam._m0[80u].z);
        }
        vec4 _3175 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2901, _2902, 1.0), 0.0);
        float _3184 = exp2((_3173 * (-1.44269502162933349609375)) * (1.0 - _3175.w));
        float _3185 = log2(_3184);
        float _3201 = log2(_2921);
        _3013 = (exp2(_3201 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].x)) * _3175.x) / cbSceneParam._m0[78u].x)) + _2918;
        _3015 = (exp2(_3201 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].y)) * _3175.y) / cbSceneParam._m0[78u].y)) + _2919;
        _3017 = (exp2(_3201 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].z)) * _3175.z) / cbSceneParam._m0[78u].z)) + _2920;
        _3019 = _3184 * _2921;
    }
    else
    {
        _3013 = _2918;
        _3015 = _2919;
        _3017 = _2920;
        _3019 = _2921;
    }
    float _3031 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3032 = _3031 == 3.0;
    float _3033 = log2(_3019);
    float _3037 = exp2(_3033 * cbSceneParam._m0[78u].x);
    float _3038 = exp2(_3033 * cbSceneParam._m0[78u].y);
    float _3039 = exp2(_3033 * cbSceneParam._m0[78u].z);
    float _3040 = _3037 * (isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0)));
    float _3041 = _3038 * (isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0)));
    float _3042 = _3039 * (isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0)));
    float _3051 = (_3031 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3051 * (_3032 ? _3040 : (_3040 + (cbSceneParam._m0[72u].w * _3013)));
    SV_Target.y = _3051 * (_3032 ? _3041 : (_3041 + (cbSceneParam._m0[72u].w * _3015)));
    SV_Target.z = _3051 * (_3032 ? _3042 : (_3042 + (cbSceneParam._m0[72u].w * _3017)));
    SV_Target.w = _2896;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2854) * _2891) * _3037) * _3051;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2855) * _2891) * _3038) * _3051;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2856) * _2891) * _3039) * _3051;
    SV_Target_1.w = _2896;
}


