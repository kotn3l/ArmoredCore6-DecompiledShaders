#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_6;
layout(location = 9) in vec4 TEXCOORD_7;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 11) in vec4 TEXCOORD_3;
layout(location = 12) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec3 TEXCOORD_6_1;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_14;
layout(location = 9) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6_1.x = 0.0;
    TEXCOORD_6_1.y = 0.0;
    TEXCOORD_6_1.z = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _254 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _267 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _954 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _275 = (isnan(1.0) ? _954 : (isnan(_954) ? 1.0 : min(_954, 1.0))) * _267;
    precise float _276 = TEXCOORD_4.x * 255.0;
    precise float _278 = TEXCOORD_4.y * 255.0;
    precise float _279 = _278 * 256.0;
    precise float _281 = _276 + _279;
    precise float _282 = _281 + 0.5;
    float _284 = floor(_275);
    uint _285 = uint(int(_282));
    uint _286 = uint(int(_284));
    vec4 _287 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_285, _286)), int(0u));
    float _289 = _287.x;
    float _290 = _287.y;
    float _291 = _287.z;
    precise float _299 = _284 + 1.0;
    uint _301 = uint(int(isnan(_267) ? _299 : (isnan(_299) ? _267 : min(_299, _267))));
    vec4 _302 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_285, _301)), int(0u));
    float _307 = fract(_275);
    float _317 = (((_302.x - _289) * 2.0) * _307) + ((_289 * 2.0) + (-1.0));
    float _318 = (((_302.y - _290) * 2.0) * _307) + ((_290 * 2.0) + (-1.0));
    float _319 = (_307 * ((_302.z - _291) * 2.0)) + ((_291 * 2.0) + (-1.0));
    vec4 _320 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_285, _286)), int(0u));
    float _322 = _320.x;
    float _323 = _320.y;
    float _324 = _320.z;
    vec4 _325 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_285, _301)), int(0u));
    precise float _330 = _325.x - _322;
    precise float _331 = _325.y - _323;
    precise float _332 = _325.z - _324;
    precise float _333 = _307 * _330;
    precise float _334 = _307 * _331;
    precise float _335 = _307 * _332;
    precise float _336 = _322 + _333;
    precise float _337 = _323 + _334;
    precise float _338 = _324 + _335;
    uint _343 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _345 = texelFetch(g_InstanceIndexBuffer, int(_343));
    uint _346 = _345.x;
    precise float _347 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _350 = isnan(_347) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _347 : max(0.001000000047497451305389404296875, _347));
    precise float _352 = BLENDWEIGHT.x / _350;
    precise float _353 = BLENDWEIGHT.y / _350;
    precise float _354 = BLENDWEIGHT.z / _350;
    precise float _355 = BLENDWEIGHT.w / _350;
    uint _357 = _346 * 13u;
    uvec4 _362 = floatBitsToUint(cbInstanceData._m0[_357 + 4u]);
    uint _363 = _362.x;
    uint _365 = (_363 + uint(float(BLENDINDICES.x))) * 3u;
    uint _372 = _365 + 1u;
    uint _379 = _365 + 2u;
    precise float _386 = _352 * cbObjMatrix._m0[_365].x;
    precise float _387 = _352 * cbObjMatrix._m0[_372].x;
    precise float _388 = _352 * cbObjMatrix._m0[_379].x;
    precise float _389 = _352 * cbObjMatrix._m0[_365].y;
    precise float _390 = _352 * cbObjMatrix._m0[_372].y;
    precise float _391 = _352 * cbObjMatrix._m0[_379].y;
    precise float _392 = _352 * cbObjMatrix._m0[_365].z;
    precise float _393 = _352 * cbObjMatrix._m0[_372].z;
    precise float _394 = _352 * cbObjMatrix._m0[_379].z;
    precise float _395 = _352 * cbObjMatrix._m0[_365].w;
    precise float _396 = _352 * cbObjMatrix._m0[_372].w;
    precise float _397 = _352 * cbObjMatrix._m0[_379].w;
    uint _400 = (_363 + uint(float(BLENDINDICES.y))) * 3u;
    uint _407 = _400 + 1u;
    uint _414 = _400 + 2u;
    precise float _421 = _353 * cbObjMatrix._m0[_400].x;
    precise float _422 = _353 * cbObjMatrix._m0[_407].x;
    precise float _423 = _353 * cbObjMatrix._m0[_414].x;
    precise float _424 = _353 * cbObjMatrix._m0[_400].y;
    precise float _425 = _353 * cbObjMatrix._m0[_407].y;
    precise float _426 = _353 * cbObjMatrix._m0[_414].y;
    precise float _427 = _353 * cbObjMatrix._m0[_400].z;
    precise float _428 = _353 * cbObjMatrix._m0[_407].z;
    precise float _429 = _353 * cbObjMatrix._m0[_414].z;
    precise float _430 = _353 * cbObjMatrix._m0[_400].w;
    precise float _431 = _353 * cbObjMatrix._m0[_407].w;
    precise float _432 = _353 * cbObjMatrix._m0[_414].w;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    uint _447 = (_363 + uint(float(BLENDINDICES.z))) * 3u;
    uint _454 = _447 + 1u;
    uint _461 = _447 + 2u;
    precise float _468 = _354 * cbObjMatrix._m0[_447].x;
    precise float _469 = _354 * cbObjMatrix._m0[_454].x;
    precise float _470 = _354 * cbObjMatrix._m0[_461].x;
    precise float _471 = _354 * cbObjMatrix._m0[_447].y;
    precise float _472 = _354 * cbObjMatrix._m0[_454].y;
    precise float _473 = _354 * cbObjMatrix._m0[_461].y;
    precise float _474 = _354 * cbObjMatrix._m0[_447].z;
    precise float _475 = _354 * cbObjMatrix._m0[_454].z;
    precise float _476 = _354 * cbObjMatrix._m0[_461].z;
    precise float _477 = _354 * cbObjMatrix._m0[_447].w;
    precise float _478 = _354 * cbObjMatrix._m0[_454].w;
    precise float _479 = _354 * cbObjMatrix._m0[_461].w;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    uint _494 = (_363 + uint(float(BLENDINDICES.w))) * 3u;
    uint _501 = _494 + 1u;
    uint _508 = _494 + 2u;
    precise float _515 = _355 * cbObjMatrix._m0[_494].x;
    precise float _516 = _355 * cbObjMatrix._m0[_501].x;
    precise float _517 = _355 * cbObjMatrix._m0[_508].x;
    precise float _518 = _355 * cbObjMatrix._m0[_494].y;
    precise float _519 = _355 * cbObjMatrix._m0[_501].y;
    precise float _520 = _355 * cbObjMatrix._m0[_508].y;
    precise float _521 = _355 * cbObjMatrix._m0[_494].z;
    precise float _522 = _355 * cbObjMatrix._m0[_501].z;
    precise float _523 = _355 * cbObjMatrix._m0[_508].z;
    precise float _524 = _355 * cbObjMatrix._m0[_494].w;
    precise float _525 = _355 * cbObjMatrix._m0[_501].w;
    precise float _526 = _355 * cbObjMatrix._m0[_508].w;
    precise float _527 = _480 + _515;
    precise float _528 = _481 + _516;
    precise float _529 = _482 + _517;
    precise float _530 = _483 + _518;
    precise float _531 = _484 + _519;
    precise float _532 = _485 + _520;
    precise float _533 = _486 + _521;
    precise float _534 = _487 + _522;
    precise float _535 = _488 + _523;
    precise float _536 = _489 + _524;
    precise float _537 = _490 + _525;
    precise float _538 = _491 + _526;
    precise float _539 = POSITION.x * _527;
    precise float _540 = POSITION.y * _530;
    precise float _541 = _540 + _539;
    precise float _542 = POSITION.z * _533;
    precise float _543 = _542 + _541;
    precise float _544 = 1.0 * _536;
    precise float _545 = _544 + _543;
    precise float _546 = POSITION.x * _528;
    precise float _547 = POSITION.y * _531;
    precise float _548 = _547 + _546;
    precise float _549 = POSITION.z * _534;
    precise float _550 = _549 + _548;
    precise float _551 = 1.0 * _537;
    precise float _552 = _551 + _550;
    precise float _553 = POSITION.x * _529;
    precise float _554 = POSITION.y * _532;
    precise float _555 = _554 + _553;
    precise float _556 = POSITION.z * _535;
    precise float _557 = _556 + _555;
    precise float _558 = 1.0 * _538;
    precise float _559 = _558 + _557;
    precise float _560 = _336 + _545;
    precise float _561 = _337 + _552;
    precise float _562 = _338 + _559;
    float _975 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _721 = _267 * (isnan(1.0) ? _975 : (isnan(_975) ? 1.0 : min(_975, 1.0)));
    float _726 = floor(_721);
    float _727 = _726 + 1.0;
    float _729 = fract(_721);
    uint _730 = uint(int((_276 + 0.5) + (TEXCOORD_4.y * 65280.0)));
    vec4 _732 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_730, uint(int(_726)))), int(0u));
    float _734 = _732.x;
    float _735 = _732.y;
    float _736 = _732.z;
    vec4 _738 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_730, uint(int(isnan(_267) ? _727 : (isnan(_727) ? _267 : min(_727, _267)))))), int(0u));
    float _759 = (((((cbPrevObjMatrix._m0[_400].w * _353) + (cbPrevObjMatrix._m0[_365].w * _352)) + (cbPrevObjMatrix._m0[_447].w * _354)) + (cbPrevObjMatrix._m0[_494].w * _355)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_400].z * _353) + (cbPrevObjMatrix._m0[_365].z * _352)) + (cbPrevObjMatrix._m0[_447].z * _354)) + (cbPrevObjMatrix._m0[_494].z * _355), fma(POSITION.y, (((cbPrevObjMatrix._m0[_400].y * _353) + (cbPrevObjMatrix._m0[_365].y * _352)) + (cbPrevObjMatrix._m0[_447].y * _354)) + (cbPrevObjMatrix._m0[_494].y * _355), ((((cbPrevObjMatrix._m0[_400].x * _353) + (cbPrevObjMatrix._m0[_365].x * _352)) + (cbPrevObjMatrix._m0[_447].x * _354)) + (cbPrevObjMatrix._m0[_494].x * _355)) * POSITION.x))) + _734;
    float _761 = (_759 - cbSceneParam._m0[28u].x) + ((_738.x - _734) * _729);
    float _766 = (((((cbPrevObjMatrix._m0[_407].w * _353) + (cbPrevObjMatrix._m0[_372].w * _352)) + (cbPrevObjMatrix._m0[_454].w * _354)) + (cbPrevObjMatrix._m0[_501].w * _355)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_407].z * _353) + (cbPrevObjMatrix._m0[_372].z * _352)) + (cbPrevObjMatrix._m0[_454].z * _354)) + (cbPrevObjMatrix._m0[_501].z * _355), fma(POSITION.y, (((cbPrevObjMatrix._m0[_407].y * _353) + (cbPrevObjMatrix._m0[_372].y * _352)) + (cbPrevObjMatrix._m0[_454].y * _354)) + (cbPrevObjMatrix._m0[_501].y * _355), ((((cbPrevObjMatrix._m0[_407].x * _353) + (cbPrevObjMatrix._m0[_372].x * _352)) + (cbPrevObjMatrix._m0[_454].x * _354)) + (cbPrevObjMatrix._m0[_501].x * _355)) * POSITION.x))) + _735;
    float _768 = (_766 - cbSceneParam._m0[28u].y) + ((_738.y - _735) * _729);
    float _773 = (((((cbPrevObjMatrix._m0[_414].w * _353) + (cbPrevObjMatrix._m0[_379].w * _352)) + (cbPrevObjMatrix._m0[_461].w * _354)) + (cbPrevObjMatrix._m0[_508].w * _355)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_414].z * _353) + (cbPrevObjMatrix._m0[_379].z * _352)) + (cbPrevObjMatrix._m0[_461].z * _354)) + (cbPrevObjMatrix._m0[_508].z * _355), fma(POSITION.y, (((cbPrevObjMatrix._m0[_414].y * _353) + (cbPrevObjMatrix._m0[_379].y * _352)) + (cbPrevObjMatrix._m0[_461].y * _354)) + (cbPrevObjMatrix._m0[_508].y * _355), ((((cbPrevObjMatrix._m0[_414].x * _353) + (cbPrevObjMatrix._m0[_379].x * _352)) + (cbPrevObjMatrix._m0[_461].x * _354)) + (cbPrevObjMatrix._m0[_508].x * _355)) * POSITION.x))) + _736;
    float _775 = (_773 - cbSceneParam._m0[28u].z) + ((_738.z - _736) * _729);
    precise float _835 = _560 - cbSceneParam._m0[3u].x;
    precise float _836 = _561 - cbSceneParam._m0[3u].y;
    precise float _837 = _562 - cbSceneParam._m0[3u].z;
    precise float _865 = _835 * cbSceneParam._m0[24u].x;
    precise float _866 = _836 * cbSceneParam._m0[24u].y;
    precise float _867 = _866 + _865;
    precise float _868 = _837 * cbSceneParam._m0[24u].z;
    precise float _869 = _868 + _867;
    precise float _870 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _871 = _870 + _869;
    precise float _872 = _835 * cbSceneParam._m0[25u].x;
    precise float _873 = _836 * cbSceneParam._m0[25u].y;
    precise float _874 = _873 + _872;
    precise float _875 = _837 * cbSceneParam._m0[25u].z;
    precise float _876 = _875 + _874;
    precise float _877 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _878 = _877 + _876;
    precise float _879 = _835 * cbSceneParam._m0[26u].x;
    precise float _880 = _836 * cbSceneParam._m0[26u].y;
    precise float _881 = _880 + _879;
    precise float _882 = _837 * cbSceneParam._m0[26u].z;
    precise float _883 = _882 + _881;
    precise float _884 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _885 = _884 + _883;
    precise float _886 = _835 * cbSceneParam._m0[27u].x;
    precise float _887 = _836 * cbSceneParam._m0[27u].y;
    precise float _888 = _887 + _886;
    precise float _889 = _837 * cbSceneParam._m0[27u].z;
    precise float _890 = _889 + _888;
    precise float _891 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _892 = _891 + _890;
    gl_Position.x = _871;
    gl_Position.y = _878;
    gl_Position.z = _885;
    gl_Position.w = _892;
    POSITION_1.x = _871;
    POSITION_1.y = _878;
    POSITION_1.z = _885;
    POSITION_1.w = _892;
    NORMAL_1.x = _317;
    NORMAL_1.y = _318;
    NORMAL_1.z = _319;
    NORMAL_1.w = float(_346);
    TANGENT_1.x = fma(_257, _533, fma(_256, _530, _527 * _254));
    TANGENT_1.y = fma(_257, _534, fma(_256, _531, _528 * _254));
    TANGENT_1.z = fma(_257, _535, fma(_256, _532, _529 * _254));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_4.x;
    TEXCOORD_4_1.w = TEXCOORD_4.y;
    TEXCOORD_6_1.x = COLOR_1.x;
    TEXCOORD_6_1.y = TEXCOORD_2.x;
    TEXCOORD_6_1.z = TEXCOORD_3.x;
    TEXCOORD_13.x = _871;
    TEXCOORD_13.y = _878;
    TEXCOORD_13.z = _885;
    TEXCOORD_13.w = _892;
    TEXCOORD_14.x = fma(_775, cbSceneParam._m0[29u].z, fma(_768, cbSceneParam._m0[29u].y, _761 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_775, cbSceneParam._m0[30u].z, fma(_768, cbSceneParam._m0[30u].y, _761 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_775, cbSceneParam._m0[31u].z, fma(_768, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _761)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_775, cbSceneParam._m0[32u].z, fma(_768, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _761)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _317;
    TEXCOORD_15.y = _318;
    TEXCOORD_15.z = _319;
    gl_ClipDistance[0u] = dot(vec4(_871, _878, _885, _892), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_871, _878, _885, _892), vec4(cbInstanceData._m0[_357 + 3u]));
}


