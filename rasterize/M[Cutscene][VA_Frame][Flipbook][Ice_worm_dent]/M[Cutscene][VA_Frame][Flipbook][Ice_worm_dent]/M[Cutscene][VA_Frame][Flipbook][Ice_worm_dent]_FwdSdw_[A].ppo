#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec3 TEXCOORD_6;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1499;
float _4199;
float _4200;
float _4201;
float _4202;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = cbMtdParam._m0[18u].z + TEXCOORD.x;
    float _267 = cbMtdParam._m0[18u].w + TEXCOORD.y;
    vec4 _280 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _266) + cbTextureTilingScale._m0[0u].z, (_267 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _286 = _280.x * cbMtdParam._m0[10u].y;
    float _287 = _280.y * cbMtdParam._m0[10u].z;
    float _288 = _280.z * cbMtdParam._m0[10u].w;
    float _300 = cbMtdParam._m0[21u].x + TEXCOORD.x;
    float _301 = cbMtdParam._m0[21u].y + TEXCOORD.y;
    vec4 _314 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_12, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (_301 * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    uvec4 _326 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _352 = exp2(log2(cbMtdParam._m0[15u].z * texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x) * cbMtdParam._m0[15u].w);
    float _4211 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _380 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x * TEXCOORD_6.y) + TEXCOORD_6.y) * cbMtdParam._m0[15u].y) * cbMtdParam._m0[14u].z);
    float _4222 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _382 = (_326.w != 0u) ? (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) : (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0)));
    float _389 = (_382 * ((_314.x * cbMtdParam._m0[13u].y) - _286)) + _286;
    float _390 = (_382 * ((_314.y * cbMtdParam._m0[13u].z) - _287)) + _287;
    float _391 = (_382 * ((_314.z * cbMtdParam._m0[13u].w) - _288)) + _288;
    float _403 = cbMtdParam._m0[20u].z + TEXCOORD.x;
    float _404 = cbMtdParam._m0[20u].w + TEXCOORD.y;
    vec4 _417 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * _403) + cbTextureTilingScale._m0[11u].z, (_404 * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _455 = exp2(log2(((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x * TEXCOORD_6.z) + TEXCOORD_6.z) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[16u].y);
    float _4233 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    vec4 _473 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _475 = _473.x;
    float _484 = exp2(log2(((_326.z != 0u) ? (1.0 - _475) : _475) * cbMtdParam._m0[17u].w) * cbMtdParam._m0[18u].x);
    float _4244 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _492 = cbMtdParam._m0[19u].y * cbMtdParam._m0[19u].x;
    float _495 = (_492 + (-1.0)) * cbMtdParam._m0[17u].x;
    bool _497 = _326.y != 0u;
    float _509 = (cbMtdParam._m0[20u].x + cbMtdParam._m0[17u].y) + ((TEXCOORD.z - cbMtdParam._m0[20u].x) * cbMtdParam._m0[19u].z);
    float _511 = (cbMtdParam._m0[20u].y + cbMtdParam._m0[16u].w) + ((TEXCOORD.w - cbMtdParam._m0[20u].y) * cbMtdParam._m0[19u].w);
    float _4255 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _4266 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    uint _517 = uint(int(floor(_495)));
    uint _519 = _517 + 1u;
    uint _520 = uint(int(_492));
    uint _521 = _520 * 3u;
    uint _522 = _517 - _521 * (_517 / _521);
    uint _523 = _519 - _521 * (_519 / _521);
    float _526 = float(int(_522 - _520 * (_522 / _520)));
    float _530 = float(int(_523 - _520 * (_523 / _520)));
    float _534 = 1.0 / cbMtdParam._m0[19u].x;
    float _535 = 1.0 / cbMtdParam._m0[19u].y;
    float _536 = fract(_497 ? _509 : (isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0))));
    float _537 = fract(_497 ? _511 : (isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0))));
    vec4 _564 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_536 + (_526 - cbMtdParam._m0[19u].x * trunc(_526 / cbMtdParam._m0[19u].x))) * _534) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_537 + floor(_526 / cbMtdParam._m0[19u].x)) * _535) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w));
    float _566 = _564.x;
    float _569 = ((texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_8, SS_WrapLinear), vec2((((_536 + (_530 - cbMtdParam._m0[19u].x * trunc(_530 / cbMtdParam._m0[19u].x))) * _534) * cbTextureTilingScale._m0[14u].x) + cbTextureTilingScale._m0[14u].z, (((_537 + floor(_530 / cbMtdParam._m0[19u].x)) * _535) * cbTextureTilingScale._m0[14u].y) + cbTextureTilingScale._m0[14u].w)).x - _566) * fract(_495)) + _566;
    float _575 = exp2(log2(((_569 * (isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0)))) + _569) * cbMtdParam._m0[14u].w) * cbMtdParam._m0[15u].x);
    float _4277 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _577 = (floatBitsToUint(cbMtdParam._m0[10u]).x != 0u) ? (isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0))) : (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0)));
    float _584 = (_577 * ((_417.x * cbMtdParam._m0[12u].y) - _389)) + _389;
    float _585 = (_577 * ((_417.y * cbMtdParam._m0[12u].z) - _390)) + _390;
    float _586 = (_577 * ((_417.z * cbMtdParam._m0[12u].w) - _391)) + _391;
    vec4 _596 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _598 = _596.x;
    bool _604 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _621 = ((_604 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _598)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _598))) - POSITION_1.w) / cbMtdParam._m0[16u].z;
    float _4288 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _622 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
    float _4299 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0));
    float _642 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * _266) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _267) + cbTextureTilingScale._m0[8u].w)).x + cbMtdParam._m0[14u].y;
    float _663 = (((cbMtdParam._m0[18u].y - _642) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _300) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _301) + cbTextureTilingScale._m0[2u].w)).x) * _382) + _642;
    float _684 = (((cbMtdParam._m0[17u].z - _663) + texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * _403) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _404) + cbTextureTilingScale._m0[12u].w)).x) * _577) + _663;
    vec4 _696 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _266) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _267) + cbTextureTilingScale._m0[1u].w));
    float _698 = _696.x;
    float _699 = _696.y;
    float _700 = _696.z;
    vec4 _712 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _300) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _301) + cbTextureTilingScale._m0[3u].w));
    float _723 = ((_712.x - _698) * _382) + _698;
    float _724 = ((_712.y - _699) * _382) + _699;
    float _725 = ((_712.z - _700) * _382) + _700;
    vec4 _737 = texture(sampler2D(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * _403) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _404) + cbTextureTilingScale._m0[13u].w));
    float _750 = ((_737.z - _725) * _577) + _725;
    float _754 = ((((_737.x - _723) * _577) + _723) * 2.0) + (-1.0);
    float _755 = ((((_737.y - _724) * _577) + _724) * 2.0) + (-1.0);
    float _756 = dot(vec2(_754, _755), vec2(_754, _755));
    float _4310 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _761 = sqrt(1.0 - (isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0))));
    bool _766 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _785 = fma(_761, _243 * NORMAL.x, fma(_755, _250 * TANGENT.x, (_236 * _229) * _754));
    float _788 = fma(_761, _243 * NORMAL.y, fma(_755, _250 * TANGENT.y, (_236 * _230) * _754));
    float _791 = fma(_761, _243 * NORMAL.z, fma(_755, _250 * TANGENT.z, (_236 * _231) * _754));
    float _795 = inversesqrt(dot(vec3(_785, _788, _791), vec3(_785, _788, _791)));
    float _796 = _795 * _785;
    float _797 = _795 * _788;
    float _798 = _795 * _791;
    float _4321 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _799 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
    float _4332 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _800 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
    float _4343 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _801 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
    float _4354 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _802 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
    float _4365 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _803 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
    float _4376 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _804 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
    float _809 = _604 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _849 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _859 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _849);
    float _860 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _849);
    float _861 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _849);
    float _865 = inversesqrt(dot(vec3(_859, _860, _861), vec3(_859, _860, _861)));
    float _866 = _859 * _865;
    float _867 = _860 * _865;
    float _868 = _861 * _865;
    vec4 _873 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _875 = _873.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1178 = sqrt(((_859 * _859) + (_860 * _860)) + (_861 * _861));
        float _1184 = (cbMatDynParam._m0[5u].x * _1178) + cbMatDynParam._m0[5u].y;
        float _4387 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1185 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1189 = (cbMatDynParam._m0[5u].z * _1178) + cbMatDynParam._m0[5u].w;
        float _4398 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0))) - _1185)) + _1185) < ((_875 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _885 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _886 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _888 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _890 = _888.w;
    float _908 = fma(_798, cbSceneParam._m0[5u].z, fma(_797, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _796));
    float _911 = fma(_798, cbSceneParam._m0[6u].z, fma(_797, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _796));
    float _914 = fma(_798, cbSceneParam._m0[7u].z, fma(_797, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _796));
    vec4 _916 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _918 = _916.x;
    float _930 = (((_916.y - _800) + (_916.w * _800)) * cbMtdParam._m0[3u].x) + _800;
    vec4 _931 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _947 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_918 * _918)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _931.z;
    float _955 = (((cbMatDynParam._m0[15u].x - _804) * cbMatDynParam._m0[15u].w) * _947) + _804;
    float _963 = ((_947 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _930)) + _930;
    uint _987 = uint(roundEven(NORMAL.w)) * 13u;
    uint _988 = _987 + 9u;
    uint _989 = _988 + uint(cbMatDynParam._m0[0u].w);
    float _995 = (cbMtdParam._m0[0u].x * _801) * cbInstanceData._m0[_989].x;
    float _996 = (cbMtdParam._m0[0u].y * _802) * cbInstanceData._m0[_989].y;
    float _997 = (cbMtdParam._m0[0u].z * _803) * cbInstanceData._m0[_989].z;
    float _4409 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _998 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
    float _4420 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
    float _999 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
    float _4431 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1000 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
    vec4 _1001 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    vec4 _1006 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y));
    float _1017 = (((_1006.x - _955) + (_1006.w * _955)) * cbMtdParam._m0[3u].x) + _955;
    float _1030 = (cbMtdParam._m0[3u].x * (((_998 * _890) - _998) + _1001.x)) + _998;
    float _1031 = (cbMtdParam._m0[3u].x * (((_999 * _890) - _999) + _1001.y)) + _999;
    float _1032 = (cbMtdParam._m0[3u].x * (((_1000 * _890) - _1000) + _1001.z)) + _1000;
    float _1046 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_955 * (_801 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_955 * (_802 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_955 * (_803 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.x, TEXCOORD_4.y)).z;
    float _1050 = _1046 * cbMatDynParam._m0[13u].w;
    float _1060 = (_1050 * (cbMatDynParam._m0[13u].x - _1030)) + _1030;
    float _1061 = (_1050 * (cbMatDynParam._m0[13u].y - _1031)) + _1031;
    float _1062 = (_1050 * (cbMatDynParam._m0[13u].z - _1032)) + _1032;
    float _1070 = ((_1046 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _1017)) + _1017;
    float _1071 = 1.0 - _1070;
    float _1072 = _1071 * _1060;
    float _1073 = _1071 * _1061;
    float _1074 = _1071 * _1062;
    float _1078 = (_1060 + (-0.039999999105930328369140625)) * _1070;
    float _1079 = (_1061 + (-0.039999999105930328369140625)) * _1070;
    float _1080 = (_1062 + (-0.039999999105930328369140625)) * _1070;
    float _1081 = _1078 + 0.039999999105930328369140625;
    float _1082 = _1079 + 0.039999999105930328369140625;
    float _1083 = _1080 + 0.039999999105930328369140625;
    vec4 _1092 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _885, cbSceneParam._m0[86u].y * _886));
    float _1095 = _1092.x * TEXCOORD_6.x;
    float _1096 = dot(vec3(_796, _797, _798), vec3(_866, _867, _868));
    float _1099 = _1096 * 2.0;
    float _1103 = (_1099 * _796) - _866;
    float _1104 = (_1099 * _797) - _867;
    float _1105 = (_1099 * _798) - _868;
    float _1109 = abs(dot(vec3(_866, _867, _868), vec3(_796, _797, _798)));
    float _4442 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _1111 = sqrt(_963);
    float _1124 = exp2((_1111 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1111 * 3.0));
    float _1130 = (1.0 - _1124) * ((_1111 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1131 = _1124 * _1111;
    float _1159 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1167 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1498;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1223 = fma(_1167, cbModelParam._m0[26u].z, fma(_1163, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1159));
        float _1227 = fma(_1167, cbModelParam._m0[27u].z, fma(_1163, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1159));
        float _1231 = fma(_1167, cbModelParam._m0[28u].z, fma(_1163, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1159));
        float _1256 = _1159 + _796;
        float _1257 = _1163 + _797;
        float _1258 = _1167 + _798;
        float _1268 = fma(_1258, cbModelParam._m0[26u].z, fma(_1257, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1256)) - _1223;
        float _1269 = fma(_1258, cbModelParam._m0[27u].z, fma(_1257, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1256)) - _1227;
        float _1270 = fma(_1258, cbModelParam._m0[28u].z, fma(_1257, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1256)) - _1231;
        float _1274 = inversesqrt(dot(vec3(_1268, _1269, _1270), vec3(_1268, _1269, _1270)));
        float _1287 = ((_1274 * _1268) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1223 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1288 = ((_1274 * _1269) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1227 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1289 = ((_1274 * _1270) / cbModelParam._m0[34u].z) + ((((((_1231 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1292 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1299 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1306 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1313 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        float _1326 = exp2((_1292.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1292.x + (-0.5));
        float _1328 = _1326 * (_1292.y + (-0.5));
        float _1329 = _1326 * (_1292.z + (-0.5));
        float _1336 = exp2((_1299.w + (-0.5)) * 20.0) * 2.0;
        float _1337 = _1336 * (_1299.x + (-0.5));
        float _1338 = _1336 * (_1299.y + (-0.5));
        float _1339 = _1336 * (_1299.z + (-0.5));
        float _1346 = exp2((_1306.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1306.x + (-0.5));
        float _1348 = _1346 * (_1306.y + (-0.5));
        float _1349 = _1346 * (_1306.z + (-0.5));
        float _1356 = exp2((_1313.w + (-0.5)) * 20.0) * 2.0;
        float _1357 = _1356 * (_1313.x + (-0.5));
        float _1358 = _1356 * (_1313.y + (-0.5));
        float _1359 = _1356 * (_1313.z + (-0.5));
        float _1360 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1361 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1362 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1363 = _1327 * 0.5;
        float _1364 = _1337 * 0.5;
        float _1365 = _1347 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1380 = (dot(vec3(_796, _797, _798), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4468 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1390 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1360 + 9.9999997473787516355514526367188e-06);
        float _4479 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1392 = _1391 * 2.0;
        float _1396 = (1.0 - _1391) / (_1391 + 1.0);
        float _4490 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
        float _1406 = ((((1.0 - _1397) * (_1392 + 2.0)) * exp2(log2(isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * (_1392 + 1.0))) + _1397) * _1360;
        float _1407 = _1328 * 0.5;
        float _1408 = _1338 * 0.5;
        float _1409 = _1348 * 0.5;
        float _1410 = dot(vec3(_1407, _1408, _1409), vec3(_1407, _1408, _1409));
        float _1415 = (_1410 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1410);
        float _1423 = (dot(vec3(_796, _797, _798), vec3(_1415 * _1407, _1415 * _1408, _1415 * _1409)) + 1.0) * 0.5;
        float _4501 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1432 = sqrt(((_1408 * _1408) + (_1407 * _1407)) + (_1409 * _1409)) / (_1361 + 9.9999997473787516355514526367188e-06);
        float _4512 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1434 = _1433 * 2.0;
        float _1438 = (1.0 - _1433) / (_1433 + 1.0);
        float _4523 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1439 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
        float _1448 = ((((1.0 - _1439) * (_1434 + 2.0)) * exp2(log2(isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0))) * (_1434 + 1.0))) + _1439) * _1361;
        float _1449 = _1329 * 0.5;
        float _1450 = _1339 * 0.5;
        float _1451 = _1349 * 0.5;
        float _1452 = dot(vec3(_1449, _1450, _1451), vec3(_1449, _1450, _1451));
        float _1457 = (_1452 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1452);
        float _1465 = (dot(vec3(_796, _797, _798), vec3(_1457 * _1449, _1457 * _1450, _1457 * _1451)) + 1.0) * 0.5;
        float _4534 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1474 = sqrt(((_1450 * _1450) + (_1449 * _1449)) + (_1451 * _1451)) / (_1362 + 9.9999997473787516355514526367188e-06);
        float _4545 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _1476 = _1475 * 2.0;
        float _1480 = (1.0 - _1475) / (_1475 + 1.0);
        float _4556 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _1490 = ((((1.0 - _1481) * (_1476 + 2.0)) * exp2(log2(isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * (_1476 + 1.0))) + _1481) * _1362;
        _1498 = _1329;
        _1500 = _1328;
        _1501 = _1327;
        _1502 = _1339;
        _1503 = _1338;
        _1504 = _1337;
        _1505 = _1349;
        _1506 = _1348;
        _1507 = _1347;
        _1508 = _1362;
        _1509 = _1361;
        _1510 = _1360;
        _1511 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0)));
        _1512 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0)));
        _1513 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0)));
    }
    else
    {
        _1498 = _1499;
        _1500 = _1499;
        _1501 = _1499;
        _1502 = _1499;
        _1503 = _1499;
        _1504 = _1499;
        _1505 = _1499;
        _1506 = _1499;
        _1507 = _1499;
        _1508 = _1499;
        _1509 = _1499;
        _1510 = _1499;
        _1511 = 0.0;
        _1512 = 0.0;
        _1513 = 0.0;
    }
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    float _1816;
    float _1817;
    float _1818;
    float _1819;
    float _1820;
    float _1821;
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1542 = fma(_1167, cbModelParam._m0[30u].z, fma(_1163, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1159));
        float _1546 = fma(_1167, cbModelParam._m0[31u].z, fma(_1163, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1159));
        float _1550 = fma(_1167, cbModelParam._m0[32u].z, fma(_1163, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1159));
        float _1573 = _1159 + _796;
        float _1574 = _1163 + _797;
        float _1575 = _1167 + _798;
        float _1585 = fma(_1575, cbModelParam._m0[30u].z, fma(_1574, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1573)) - _1542;
        float _1586 = fma(_1575, cbModelParam._m0[31u].z, fma(_1574, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1573)) - _1546;
        float _1587 = fma(_1575, cbModelParam._m0[32u].z, fma(_1574, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1573)) - _1550;
        float _1591 = inversesqrt(dot(vec3(_1585, _1586, _1587), vec3(_1585, _1586, _1587)));
        float _1604 = ((_1591 * _1585) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1542 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1605 = ((_1591 * _1586) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1546 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1606 = ((_1591 * _1587) / cbModelParam._m0[35u].z) + ((((((_1550 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1608 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1604, _1605, _1606), 0.0);
        vec4 _1615 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1604, _1605, _1606), 0.0);
        vec4 _1622 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1604, _1605, _1606), 0.0);
        vec4 _1629 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1604, _1605, _1606), 0.0);
        float _1641 = exp2((_1608.w + (-0.5)) * 20.0) * 2.0;
        float _1642 = _1641 * (_1608.x + (-0.5));
        float _1643 = _1641 * (_1608.y + (-0.5));
        float _1644 = _1641 * (_1608.z + (-0.5));
        float _1651 = exp2((_1615.w + (-0.5)) * 20.0) * 2.0;
        float _1652 = _1651 * (_1615.x + (-0.5));
        float _1653 = _1651 * (_1615.y + (-0.5));
        float _1654 = _1651 * (_1615.z + (-0.5));
        float _1661 = exp2((_1622.w + (-0.5)) * 20.0) * 2.0;
        float _1662 = _1661 * (_1622.x + (-0.5));
        float _1663 = _1661 * (_1622.y + (-0.5));
        float _1664 = _1661 * (_1622.z + (-0.5));
        float _1671 = exp2((_1629.w + (-0.5)) * 20.0) * 2.0;
        float _1672 = _1671 * (_1629.x + (-0.5));
        float _1673 = _1671 * (_1629.y + (-0.5));
        float _1674 = _1671 * (_1629.z + (-0.5));
        float _1675 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1676 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1677 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1678 = _1642 * 0.5;
        float _1679 = _1652 * 0.5;
        float _1680 = _1662 * 0.5;
        float _1681 = dot(vec3(_1678, _1679, _1680), vec3(_1678, _1679, _1680));
        float _1686 = (_1681 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1681);
        float _1694 = (dot(vec3(_796, _797, _798), vec3(_1686 * _1678, _1686 * _1679, _1686 * _1680)) + 1.0) * 0.5;
        float _4597 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
        float _1703 = sqrt(((_1679 * _1679) + (_1678 * _1678)) + (_1680 * _1680)) / (_1675 + 9.9999997473787516355514526367188e-06);
        float _4608 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1704 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _1705 = _1704 * 2.0;
        float _1709 = (1.0 - _1704) / (_1704 + 1.0);
        float _4619 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _1719 = ((((1.0 - _1710) * (_1705 + 2.0)) * exp2(log2(isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0))) * (_1705 + 1.0))) + _1710) * _1675;
        float _1720 = _1643 * 0.5;
        float _1721 = _1653 * 0.5;
        float _1722 = _1663 * 0.5;
        float _1723 = dot(vec3(_1720, _1721, _1722), vec3(_1720, _1721, _1722));
        float _1728 = (_1723 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1723);
        float _1736 = (dot(vec3(_796, _797, _798), vec3(_1728 * _1720, _1728 * _1721, _1728 * _1722)) + 1.0) * 0.5;
        float _4630 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1745 = sqrt(((_1721 * _1721) + (_1720 * _1720)) + (_1722 * _1722)) / (_1676 + 9.9999997473787516355514526367188e-06);
        float _4641 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1746 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _1747 = _1746 * 2.0;
        float _1751 = (1.0 - _1746) / (_1746 + 1.0);
        float _4652 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1752 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _1761 = ((((1.0 - _1752) * (_1747 + 2.0)) * exp2(log2(isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_1747 + 1.0))) + _1752) * _1676;
        float _1762 = _1644 * 0.5;
        float _1763 = _1654 * 0.5;
        float _1764 = _1664 * 0.5;
        float _1765 = dot(vec3(_1762, _1763, _1764), vec3(_1762, _1763, _1764));
        float _1770 = (_1765 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1765);
        float _1778 = (dot(vec3(_796, _797, _798), vec3(_1770 * _1762, _1770 * _1763, _1770 * _1764)) + 1.0) * 0.5;
        float _4663 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1787 = sqrt(((_1763 * _1763) + (_1762 * _1762)) + (_1764 * _1764)) / (_1677 + 9.9999997473787516355514526367188e-06);
        float _4674 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1788 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
        float _1789 = _1788 * 2.0;
        float _1793 = (1.0 - _1788) / (_1788 + 1.0);
        float _4685 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
        float _1794 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
        float _1803 = ((((1.0 - _1794) * (_1789 + 2.0)) * exp2(log2(isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_1789 + 1.0))) + _1794) * _1677;
        _1811 = _1644;
        _1812 = _1643;
        _1813 = _1642;
        _1814 = _1654;
        _1815 = _1653;
        _1816 = _1652;
        _1817 = _1664;
        _1818 = _1663;
        _1819 = _1662;
        _1820 = _1677;
        _1821 = _1676;
        _1822 = _1675;
        _1823 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0)));
        _1824 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0)));
        _1825 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0)));
    }
    else
    {
        _1811 = _1499;
        _1812 = _1499;
        _1813 = _1499;
        _1814 = _1499;
        _1815 = _1499;
        _1816 = _1499;
        _1817 = _1499;
        _1818 = _1499;
        _1819 = _1499;
        _1820 = _1499;
        _1821 = _1499;
        _1822 = _1499;
        _1823 = 0.0;
        _1824 = 0.0;
        _1825 = 0.0;
    }
    float _1835 = (cbModelParam._m0[1u].x * (_1823 - _1511)) + _1511;
    float _1836 = (cbModelParam._m0[1u].x * (_1824 - _1512)) + _1512;
    float _1837 = (cbModelParam._m0[1u].x * (_1825 - _1513)) + _1513;
    float _1858 = fma(_1837, cbSceneParam._m0[89u].z, fma(_1836, cbSceneParam._m0[89u].y, _1835 * cbSceneParam._m0[89u].x));
    float _1861 = fma(_1837, cbSceneParam._m0[90u].z, fma(_1836, cbSceneParam._m0[90u].y, _1835 * cbSceneParam._m0[90u].x));
    float _1864 = fma(_1837, cbSceneParam._m0[91u].z, fma(_1836, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1835));
    float _1879 = _1103 * 0.5;
    float _1880 = _1104 * 0.5;
    float _1881 = _1105 * 0.5;
    float _1882 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1813, _1816, _1819, _1822));
    float _1885 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1812, _1815, _1818, _1821));
    float _1888 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1811, _1814, _1817, _1820));
    float _1919;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1895 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1498, _1502, _1505, _1508));
        float _1899 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1500, _1503, _1506, _1509));
        float _1903 = dot(vec4(_1879, _1880, _1881, 1.0), vec4(_1501, _1504, _1507, _1510));
        float _1910 = dot(vec4(cbModelParam._m0[39u]), vec4(_1879, _1880, _1881, 1.0));
        _1919 = dot(vec3(isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0)), isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0)), isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1910) ? 0.0 : (isnan(0.0) ? _1910 : max(0.0, _1910))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1919 = 1.0;
    }
    float _1930;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1921 = dot(vec4(cbModelParam._m0[40u]), vec4(_1879, _1880, _1881, 1.0));
        _1930 = dot(vec3(isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0)), isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0)), isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1921) ? 0.0 : (isnan(0.0) ? _1921 : max(0.0, _1921))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1930 = 1.0;
    }
    float _1934 = (_1930 * cbModelParam._m0[1u].x) + (_1919 * (1.0 - cbModelParam._m0[1u].x));
    float _1944 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _963);
    float _1945 = isnan(_1944) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1944 : min(cbModelParam._m0[25u].z, _1944));
    float _2025;
    float _2027;
    float _2029;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1992 = fma(_1167, cbModelParam._m0[13u].z, fma(_1163, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1159)) + cbModelParam._m0[13u].w;
        float _1996 = fma(_1167, cbModelParam._m0[14u].z, fma(_1163, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1159)) + cbModelParam._m0[14u].w;
        float _2000 = fma(_1167, cbModelParam._m0[15u].z, fma(_1163, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1159)) + cbModelParam._m0[15u].w;
        float _2003 = fma(_1105, cbModelParam._m0[13u].z, fma(_1104, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1103));
        float _2006 = fma(_1105, cbModelParam._m0[14u].z, fma(_1104, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1103));
        float _2009 = fma(_1105, cbModelParam._m0[15u].z, fma(_1104, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1103));
        float _2037;
        if (_2003 > 0.0)
        {
            _2037 = abs((1.0 - _1992) / _2003);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2003 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1992 + 1.0) / _2003);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2037 = frontier_phi_17_15_ladder;
        }
        float _2208;
        if (_2006 > 0.0)
        {
            _2208 = abs((1.0 - _1996) / _2006);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2006 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1996 + 1.0) / _2006);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2208 = frontier_phi_26_22_ladder;
        }
        float _2503;
        if (_2009 > 0.0)
        {
            _2503 = abs((1.0 - _2000) / _2009);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2009 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2000 + 1.0) / _2009);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2503 = frontier_phi_38_33_ladder;
        }
        float _2505 = isnan(_2208) ? _2037 : (isnan(_2037) ? _2208 : min(_2037, _2208));
        float _2506 = isnan(_2503) ? _2505 : (isnan(_2505) ? _2503 : min(_2505, _2503));
        float _2510 = (_2506 * _2003) + _1992;
        float _2511 = (_2506 * _2006) + _1996;
        float _2512 = (_2506 * _2009) + _2000;
        float _2513 = _2506 * 9.9999997473787516355514526367188e-05;
        float _2515 = (-1.0) - _2513;
        float _2517 = _2513 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2512 > _2517) || ((_2512 < _2515) || ((_2511 > _2517) || ((_2511 < _2515) || ((_2510 < _2515) || (_2510 > _2517))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2657 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2512, cbModelParam._m0[9u].z, fma(_2511, cbModelParam._m0[9u].y, _2510 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2512, cbModelParam._m0[10u].z, fma(_2511, cbModelParam._m0[10u].y, _2510 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2512, cbModelParam._m0[11u].z, fma(_2511, cbModelParam._m0[11u].y, _2510 * cbModelParam._m0[11u].x))), _1945);
            frontier_phi_16_38_ladder = _2657.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2657.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2657.x * cbModelParam._m0[1u].y;
        }
        _2025 = frontier_phi_16_38_ladder_2;
        _2027 = frontier_phi_16_38_ladder_1;
        _2029 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2013 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1103, _1104, _1105), _1945);
        _2025 = _2013.x * cbModelParam._m0[1u].y;
        _2027 = _2013.y * cbModelParam._m0[1u].y;
        _2029 = _2013.z * cbModelParam._m0[1u].y;
    }
    float _2033 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _963);
    float _2034 = isnan(_2033) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2033 : min(cbModelParam._m0[25u].w, _2033));
    float _2123;
    float _2125;
    float _2127;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2087 = fma(_1167, cbModelParam._m0[21u].z, fma(_1163, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1159)) + cbModelParam._m0[21u].w;
        float _2091 = fma(_1167, cbModelParam._m0[22u].z, fma(_1163, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1159)) + cbModelParam._m0[22u].w;
        float _2095 = fma(_1167, cbModelParam._m0[23u].z, fma(_1163, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1159)) + cbModelParam._m0[23u].w;
        float _2098 = fma(_1105, cbModelParam._m0[21u].z, fma(_1104, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1103));
        float _2101 = fma(_1105, cbModelParam._m0[22u].z, fma(_1104, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1103));
        float _2104 = fma(_1105, cbModelParam._m0[23u].z, fma(_1104, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1103));
        float _2213;
        if (_2098 > 0.0)
        {
            _2213 = abs((1.0 - _2087) / _2098);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2098 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2087 + 1.0) / _2098);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2213 = frontier_phi_28_24_ladder;
        }
        float _2530;
        if (_2101 > 0.0)
        {
            _2530 = abs((1.0 - _2091) / _2101);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2101 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2091 + 1.0) / _2101);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2530 = frontier_phi_40_35_ladder;
        }
        float _2868;
        if (_2104 > 0.0)
        {
            _2868 = abs((1.0 - _2095) / _2104);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2104 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2095 + 1.0) / _2104);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2868 = frontier_phi_50_47_ladder;
        }
        float _2870 = isnan(_2530) ? _2213 : (isnan(_2213) ? _2530 : min(_2213, _2530));
        float _2871 = isnan(_2868) ? _2870 : (isnan(_2870) ? _2868 : min(_2870, _2868));
        float _2875 = (_2871 * _2098) + _2087;
        float _2876 = (_2871 * _2101) + _2091;
        float _2877 = (_2871 * _2104) + _2095;
        float _2878 = _2871 * 9.9999997473787516355514526367188e-05;
        float _2879 = (-1.0) - _2878;
        float _2881 = _2878 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2877 > _2881) || ((_2877 < _2879) || ((_2876 > _2881) || ((_2876 < _2879) || ((_2875 < _2879) || (_2875 > _2881))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2999 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2877, cbModelParam._m0[17u].z, fma(_2876, cbModelParam._m0[17u].y, _2875 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2877, cbModelParam._m0[18u].z, fma(_2876, cbModelParam._m0[18u].y, _2875 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2877, cbModelParam._m0[19u].z, fma(_2876, cbModelParam._m0[19u].y, _2875 * cbModelParam._m0[19u].x))), _2034);
            frontier_phi_25_50_ladder = _2999.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2999.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2999.x * cbModelParam._m0[1u].z;
        }
        _2123 = frontier_phi_25_50_ladder_2;
        _2125 = frontier_phi_25_50_ladder_1;
        _2127 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2107 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1103, _1104, _1105), _2034);
        _2123 = _2107.x * cbModelParam._m0[1u].z;
        _2125 = _2107.y * cbModelParam._m0[1u].z;
        _2127 = _2107.z * cbModelParam._m0[1u].z;
    }
    float _2140 = (((_1130 * _1081) + _1131) * _1095) * ((cbModelParam._m0[1u].w * (_2123 - _2025)) + _2025);
    float _2142 = (((_1130 * _1082) + _1131) * _1095) * ((cbModelParam._m0[1u].w * (_2125 - _2027)) + _2027);
    float _2144 = (((_1130 * _1083) + _1131) * _1095) * ((cbModelParam._m0[1u].w * (_2127 - _2029)) + _2029);
    float _2147 = fma(_2144, cbSceneParam._m0[89u].z, fma(_2142, cbSceneParam._m0[89u].y, _2140 * cbSceneParam._m0[89u].x));
    float _2150 = fma(_2144, cbSceneParam._m0[90u].z, fma(_2142, cbSceneParam._m0[90u].y, _2140 * cbSceneParam._m0[90u].x));
    float _2153 = fma(_2144, cbSceneParam._m0[91u].z, fma(_2142, cbSceneParam._m0[91u].y, _2140 * cbSceneParam._m0[91u].x));
    float _2187 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2191 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2195 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2199 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2200 = _2187 / _2199;
    float _2201 = _2191 / _2199;
    float _2202 = _2195 / _2199;
    float _2349;
    float _2350;
    float _2351;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2229 = ((uint(_2202 > cbSceneParam._m0[59u].y) + uint(_2202 > cbSceneParam._m0[59u].x)) + uint(_2202 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2230 = _2229 + 43u;
        uint _2238 = _2229 + 44u;
        uint _2246 = _2229 + 45u;
        uint _2254 = _2229 + 46u;
        float _2265 = fma(_2199, cbSceneParam._m0[_2230].w, fma(_2195, cbSceneParam._m0[_2230].z, fma(_2191, cbSceneParam._m0[_2230].y, _2187 * cbSceneParam._m0[_2230].x)));
        float _2269 = fma(_2199, cbSceneParam._m0[_2238].w, fma(_2195, cbSceneParam._m0[_2238].z, fma(_2191, cbSceneParam._m0[_2238].y, _2187 * cbSceneParam._m0[_2238].x)));
        float _2277 = fma(_2199, cbSceneParam._m0[_2254].w, fma(_2195, cbSceneParam._m0[_2254].z, fma(_2191, cbSceneParam._m0[_2254].y, _2187 * cbSceneParam._m0[_2254].x)));
        float _2282 = cbSceneParam._m0[33u].z * _2277;
        float _2284 = cbSceneParam._m0[33u].w * _2277;
        float _2287 = fma(_2199, cbSceneParam._m0[_2246].w, fma(_2195, cbSceneParam._m0[_2246].z, fma(_2191, cbSceneParam._m0[_2246].y, _2187 * cbSceneParam._m0[_2246].x))) / _2277;
        float _2335 = (cbSceneParam._m0[33u].x - sqrt(((_2201 * _2201) + (_2200 * _2200)) + (_2202 * _2202))) * cbSceneParam._m0[33u].y;
        float _4811 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
        float _2342 = (isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2282 + _2265) / _2277, (_2284 + _2269) / _2277), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2284 + _2265) / _2277, (_2269 - _2282) / _2277), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2265 - _2282) / _2277, (_2269 - _2284) / _2277), _2287), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2265 - _2284) / _2277, (_2282 + _2269) / _2277), _2287), 0.0)).x), vec4(0.25)));
        _2349 = 1.0 - (_2342 * cbSceneParam._m0[34u].x);
        _2350 = 1.0 - (_2342 * cbSceneParam._m0[34u].y);
        _2351 = 1.0 - (_2342 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2349 = 1.0;
        _2350 = 1.0;
        _2351 = 1.0;
    }
    float _2415;
    float _2417;
    float _2419;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2403 = fma(_2199, cbSceneParam._m0[63u].w, fma(_2195, cbSceneParam._m0[63u].z, fma(_2191, cbSceneParam._m0[63u].y, _2187 * cbSceneParam._m0[63u].x)));
        float _2404 = fma(_2199, cbSceneParam._m0[60u].w, fma(_2195, cbSceneParam._m0[60u].z, fma(_2191, cbSceneParam._m0[60u].y, _2187 * cbSceneParam._m0[60u].x))) / _2403;
        float _2405 = fma(_2199, cbSceneParam._m0[61u].w, fma(_2195, cbSceneParam._m0[61u].z, fma(_2191, cbSceneParam._m0[61u].y, _2187 * cbSceneParam._m0[61u].x))) / _2403;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2404 >= cbSceneParam._m0[64u].x) && (_2405 >= cbSceneParam._m0[64u].y)) && (_2404 <= cbSceneParam._m0[64u].z)) && (_2405 <= cbSceneParam._m0[64u].w))
        {
            float _2543 = fma(_2199, cbSceneParam._m0[62u].w, fma(_2195, cbSceneParam._m0[62u].z, fma(_2191, cbSceneParam._m0[62u].y, _2187 * cbSceneParam._m0[62u].x))) / _2403;
            float _2547 = isnan(cbSceneParam._m0[41u].w) ? _2543 : (isnan(_2543) ? cbSceneParam._m0[41u].w : max(_2543, cbSceneParam._m0[41u].w));
            float _2590 = (cbSceneParam._m0[33u].x - sqrt(((_2201 * _2201) + (_2200 * _2200)) + (_2202 * _2202))) * cbSceneParam._m0[33u].y;
            float _4827 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
            float _2597 = (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2404, cbSceneParam._m0[33u].w + _2405), _2547), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2404, _2405 - cbSceneParam._m0[33u].z), _2547), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2404 - cbSceneParam._m0[33u].z, _2405 - cbSceneParam._m0[33u].w), _2547), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2404 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2405), _2547), 0.0)).x), vec4(0.25)));
            float _2601 = 1.0 - (_2597 * cbSceneParam._m0[34u].x);
            float _2602 = 1.0 - (_2597 * cbSceneParam._m0[34u].y);
            float _2603 = 1.0 - (_2597 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2603) ? _2351 : (isnan(_2351) ? _2603 : min(_2351, _2603));
            frontier_phi_37_36_ladder_1 = isnan(_2602) ? _2350 : (isnan(_2350) ? _2602 : min(_2350, _2602));
            frontier_phi_37_36_ladder_2 = isnan(_2601) ? _2349 : (isnan(_2349) ? _2601 : min(_2349, _2601));
        }
        else
        {
            frontier_phi_37_36_ladder = _2351;
            frontier_phi_37_36_ladder_1 = _2350;
            frontier_phi_37_36_ladder_2 = _2349;
        }
        _2415 = frontier_phi_37_36_ladder_2;
        _2417 = frontier_phi_37_36_ladder_1;
        _2419 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2415 = _2349;
        _2417 = _2350;
        _2419 = _2351;
    }
    uvec4 _2424 = floatBitsToUint(cbInstanceData._m0[_987 + 5u]);
    uint _2426 = _2424.x * 14u;
    uint _2427 = _2426 + 13u;
    float _2434 = _1095 + (-1.0);
    float _2439 = (cbLight._m0[_2427].x * _2434) + 1.0;
    float _2440 = (cbLight._m0[_2427].y * _2434) + 1.0;
    float _2441 = (cbLight._m0[_2427].z * _2434) + 1.0;
    float _2442 = (cbLight._m0[_2427].w * _2434) + 1.0;
    uint _2443 = _2426 + 5u;
    float _2449 = isnan(1.0) ? _2440 : (isnan(_2440) ? 1.0 : min(_2440, 1.0));
    uint _2453 = _2426 + 4u;
    float _2462 = isnan(1.0) ? _2439 : (isnan(_2439) ? 1.0 : min(_2439, 1.0));
    uint _2466 = _2426 | 1u;
    float _2477 = dot(vec3(cbLight._m0[_2426].xyz), vec3(_796, _797, _798));
    float _2480 = dot(vec3(cbLight._m0[_2466].xyz), vec3(_796, _797, _798));
    float _4863 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _4874 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
    float _2485 = (isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0))) * 0.3183098733425140380859375;
    float _2487 = (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0))) * 0.3183098733425140380859375;
    float _2494 = ((cbLight._m0[_2443].x * _2449) * _2487) + (((cbLight._m0[_2453].x * _2415) * _2462) * _2485);
    float _2495 = ((_2449 * cbLight._m0[_2443].y) * _2487) + (((cbLight._m0[_2453].y * _2417) * _2462) * _2485);
    float _2496 = ((_2449 * cbLight._m0[_2443].z) * _2487) + (((cbLight._m0[_2453].z * _2419) * _2462) * _2485);
    uvec4 _2500 = floatBitsToUint(cbLight._m0[_2426 + 12u]);
    bool _2502 = _2500.x == 0u;
    float _2604;
    float _2606;
    float _2608;
    if (_2502)
    {
        _2604 = _2494;
        _2606 = _2495;
        _2608 = _2496;
    }
    else
    {
        uint _2612 = _2426 + 6u;
        float _2628 = (dot(vec3(cbLight._m0[_2426 + 2u].xyz), vec3(_796, _797, _798)) * 0.5) + 0.5;
        float _2629 = _2628 * _2628;
        float _4885 = isnan(0.0) ? _2629 : (isnan(_2629) ? 0.0 : max(_2629, 0.0));
        float _2630 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
        float _2631 = isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0));
        _2604 = (((cbLight._m0[_2612].x * 0.3183098733425140380859375) * _2630) * _2631) + _2494;
        _2606 = (((cbLight._m0[_2612].y * 0.3183098733425140380859375) * _2630) * _2631) + _2495;
        _2608 = (((cbLight._m0[_2612].z * 0.3183098733425140380859375) * _2630) * _2631) + _2496;
    }
    bool _2611 = _2500.y == 0u;
    float _2666;
    float _2668;
    float _2670;
    if (_2611)
    {
        _2666 = _2604;
        _2668 = _2606;
        _2670 = _2608;
    }
    else
    {
        uint _2839 = _2426 + 7u;
        float _2855 = (dot(vec3(cbLight._m0[_2426 + 3u].xyz), vec3(_796, _797, _798)) * 0.5) + 0.5;
        float _2856 = _2855 * _2855;
        float _4901 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2857 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
        float _2858 = isnan(1.0) ? _2442 : (isnan(_2442) ? 1.0 : min(_2442, 1.0));
        _2666 = (((cbLight._m0[_2839].x * 0.3183098733425140380859375) * _2857) * _2858) + _2604;
        _2668 = (((cbLight._m0[_2839].y * 0.3183098733425140380859375) * _2857) * _2858) + _2606;
        _2670 = (((cbLight._m0[_2839].z * 0.3183098733425140380859375) * _2857) * _2858) + _2608;
    }
    uint _2673 = _2426 + 8u;
    float _2686 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2426].w)) * _963) * 0.949999988079071044921875);
    float _2687 = _2686 * _2686;
    float _2688 = cbLight._m0[_2426].x + _866;
    float _2689 = cbLight._m0[_2426].y + _867;
    float _2690 = cbLight._m0[_2426].z + _868;
    float _2694 = inversesqrt(dot(vec3(_2688, _2689, _2690), vec3(_2688, _2689, _2690)));
    float _2695 = _2694 * _2688;
    float _2696 = _2694 * _2689;
    float _2697 = _2694 * _2690;
    float _2698 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2426].xyz));
    float _4917 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2701 = isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0));
    float _4928 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    float _2702 = isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0));
    float _2703 = dot(vec3(_796, _797, _798), vec3(_2695, _2696, _2697));
    float _4939 = isnan(0.0) ? _2703 : (isnan(_2703) ? 0.0 : max(_2703, 0.0));
    float _2706 = isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0));
    float _2707 = dot(vec3(cbLight._m0[_2426].xyz), vec3(_2695, _2696, _2697));
    float _4950 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
    float _2711 = _2687 * _2687;
    float _2715 = ((_2706 * _2706) * (_2711 + (-1.0))) + 1.0;
    float _2723 = exp2(log2(1.0 - (isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0)))) * 5.0);
    float _2724 = 0.959999978542327880859375 - _1078;
    float _2726 = 0.959999978542327880859375 - _1079;
    float _2727 = 0.959999978542327880859375 - _1080;
    float _2734 = 1.0 - _2687;
    float _2745 = (0.5 / (((_2702 * ((_2701 * _2734) + _2687)) + 9.9999999392252902907785028219223e-09) + (((_2702 * _2734) + _2687) * _2701))) * _2701;
    float _4961 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
    float _2747 = (isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0))) * (_2711 / ((_2715 * _2715) * 3.141590118408203125));
    uint _2761 = _2426 + 9u;
    float _2772 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2466].w)) * _963) * 0.949999988079071044921875);
    float _2773 = _2772 * _2772;
    float _2774 = cbLight._m0[_2466].x + _866;
    float _2775 = cbLight._m0[_2466].y + _867;
    float _2776 = cbLight._m0[_2466].z + _868;
    float _2780 = inversesqrt(dot(vec3(_2774, _2775, _2776), vec3(_2774, _2775, _2776)));
    float _2781 = _2780 * _2774;
    float _2782 = _2780 * _2775;
    float _2783 = _2780 * _2776;
    float _2784 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2466].xyz));
    float _4972 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
    float _2787 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
    float _2788 = dot(vec3(_796, _797, _798), vec3(_2781, _2782, _2783));
    float _4983 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
    float _2791 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
    float _2792 = dot(vec3(cbLight._m0[_2466].xyz), vec3(_2781, _2782, _2783));
    float _4994 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
    float _2796 = _2773 * _2773;
    float _2800 = ((_2791 * _2791) * (_2796 + (-1.0))) + 1.0;
    float _2807 = exp2(log2(1.0 - (isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0)))) * 5.0);
    float _2814 = 1.0 - _2773;
    float _2824 = (0.5 / (((_2702 * ((_2787 * _2814) + _2773)) + 9.9999999392252902907785028219223e-09) + (((_2702 * _2814) + _2773) * _2787))) * _2787;
    float _5005 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
    float _2826 = (isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0))) * (_2796 / ((_2800 * _2800) * 3.141590118408203125));
    float _2836 = (((((_2807 * _2724) + _1081) * cbLight._m0[_2761].x) * _2826) * _2449) + ((((cbLight._m0[_2673].x * _2415) * ((_2723 * _2724) + _1081)) * _2747) * _2462);
    float _2837 = (((((_2807 * _2726) + _1082) * cbLight._m0[_2761].y) * _2826) * _2449) + ((((cbLight._m0[_2673].y * _2417) * ((_2723 * _2726) + _1082)) * _2747) * _2462);
    float _2838 = (((((_2807 * _2727) + _1083) * cbLight._m0[_2761].z) * _2826) * _2449) + ((((cbLight._m0[_2673].z * _2419) * ((_2723 * _2727) + _1083)) * _2747) * _2462);
    float _2894;
    float _2896;
    float _2898;
    if (_2502)
    {
        _2894 = _2836;
        _2896 = _2837;
        _2898 = _2838;
    }
    else
    {
        uint _2900 = _2426 + 2u;
        uint _2904 = _2426 + 10u;
        float _2918 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2900].w)) * _963) * 0.949999988079071044921875);
        float _2919 = _2918 * _2918;
        float _2920 = cbLight._m0[_2900].x + _866;
        float _2921 = cbLight._m0[_2900].y + _867;
        float _2922 = cbLight._m0[_2900].z + _868;
        float _2926 = inversesqrt(dot(vec3(_2920, _2921, _2922), vec3(_2920, _2921, _2922)));
        float _2927 = _2926 * _2920;
        float _2928 = _2926 * _2921;
        float _2929 = _2926 * _2922;
        float _2930 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2900].xyz));
        float _5016 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
        float _2933 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
        float _2934 = dot(vec3(_796, _797, _798), vec3(_2927, _2928, _2929));
        float _5027 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
        float _2937 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
        float _2938 = dot(vec3(cbLight._m0[_2900].xyz), vec3(_2927, _2928, _2929));
        float _5038 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
        float _2942 = _2919 * _2919;
        float _2946 = ((_2937 * _2937) * (_2942 + (-1.0))) + 1.0;
        float _2953 = exp2(log2(1.0 - (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0)))) * 5.0);
        float _2960 = 1.0 - _2919;
        float _2970 = (0.5 / (((_2702 * ((_2933 * _2960) + _2919)) + 9.9999999392252902907785028219223e-09) + (((_2702 * _2960) + _2919) * _2933))) * _2933;
        float _5049 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
        float _2972 = (isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0))) * (_2942 / ((_2946 * _2946) * 3.141590118408203125));
        float _2973 = isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0));
        _2894 = (((((_2953 * _2724) + _1081) * cbLight._m0[_2904].x) * _2972) * _2973) + _2836;
        _2896 = (((((_2953 * _2726) + _1082) * cbLight._m0[_2904].y) * _2972) * _2973) + _2837;
        _2898 = (((((_2953 * _2727) + _1083) * cbLight._m0[_2904].z) * _2972) * _2973) + _2838;
    }
    float _3004;
    float _3006;
    float _3008;
    if (_2611)
    {
        _3004 = _2894;
        _3006 = _2896;
        _3008 = _2898;
    }
    else
    {
        uint _3015 = _2426 + 3u;
        uint _3019 = _2426 + 11u;
        float _3033 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3015].w)) * _963) * 0.949999988079071044921875);
        float _3034 = _3033 * _3033;
        float _3035 = cbLight._m0[_3015].x + _866;
        float _3036 = cbLight._m0[_3015].y + _867;
        float _3037 = cbLight._m0[_3015].z + _868;
        float _3041 = inversesqrt(dot(vec3(_3035, _3036, _3037), vec3(_3035, _3036, _3037)));
        float _3042 = _3041 * _3035;
        float _3043 = _3041 * _3036;
        float _3044 = _3041 * _3037;
        float _3045 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_3015].xyz));
        float _5065 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
        float _3048 = isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0));
        float _3049 = dot(vec3(_796, _797, _798), vec3(_3042, _3043, _3044));
        float _5076 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
        float _3052 = isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0));
        float _3053 = dot(vec3(cbLight._m0[_3015].xyz), vec3(_3042, _3043, _3044));
        float _5087 = isnan(0.0) ? _3053 : (isnan(_3053) ? 0.0 : max(_3053, 0.0));
        float _3057 = _3034 * _3034;
        float _3061 = ((_3052 * _3052) * (_3057 + (-1.0))) + 1.0;
        float _3068 = exp2(log2(1.0 - (isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0)))) * 5.0);
        float _3075 = 1.0 - _3034;
        float _3085 = (0.5 / (((_2702 * ((_3048 * _3075) + _3034)) + 9.9999999392252902907785028219223e-09) + (((_2702 * _3075) + _3034) * _3048))) * _3048;
        float _5098 = isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : max(_3085, 0.0));
        float _3087 = (isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0))) * (_3057 / ((_3061 * _3061) * 3.141590118408203125));
        float _3088 = isnan(1.0) ? _2442 : (isnan(_2442) ? 1.0 : min(_2442, 1.0));
        _3004 = (((((_3068 * _2724) + _1081) * cbLight._m0[_3019].x) * _3087) * _3088) + _2894;
        _3006 = (((((_3068 * _2726) + _1082) * cbLight._m0[_3019].y) * _3087) * _3088) + _2896;
        _3008 = (((((_3068 * _2727) + _1083) * cbLight._m0[_3019].z) * _3087) * _3088) + _2898;
    }
    float _3154;
    float _3156;
    float _3158;
    float _3160;
    float _3162;
    float _3164;
    if (_2424.y == 0u)
    {
        uvec4 _3109 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3110 = _3109.x;
        uint _3121 = uint((float(_3109.y) * floor(float(uint(cbSceneParam._m0[85u].y * _886) / _3110))) + floor(float(uint(cbSceneParam._m0[85u].x * _885) / _3110)));
        float _3131 = (log2(_2202 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3132 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0));
        uint _3135 = uint(isnan(14.0) ? _3132 : (isnan(_3132) ? 14.0 : min(_3132, 14.0)));
        uvec4 _3140 = texelFetch(g_lightClusterGridBuffer, int(((_3135 << 2u) + (_3121 << 6u)) >> 2u));
        uint _3141 = _3140.x;
        uint _3142 = _3109.z;
        float _3252;
        float _3254;
        float _3256;
        float _3258;
        float _3260;
        float _3262;
        if (((((1u << ((_3142 >> 4u) & 15u)) + 4294967295u) & _3141) == 0u) || ((_3142 & 240u) == 0u))
        {
            _3252 = 0.0;
            _3254 = 0.0;
            _3256 = 0.0;
            _3258 = 0.0;
            _3260 = 0.0;
            _3262 = 0.0;
        }
        else
        {
            float _3253;
            float _3255;
            float _3257;
            float _3259;
            float _3261;
            float _3263;
            float _3413 = 0.0;
            float _3414 = 0.0;
            float _3415 = 0.0;
            float _3416 = 0.0;
            float _3417 = 0.0;
            float _3418 = 0.0;
            uint _3419 = 0u;
            uint _3428;
            bool _3429;
            for (;;)
            {
                _3428 = texelFetch(g_lightClassification, int((((_3135 << 5u) + (_3121 << 9u)) + (_3419 << 2u)) >> 2u)).x;
                _3429 = _3428 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3429)
                {
                    frontier_phi_71_pred = _3418;
                    frontier_phi_71_pred_1 = _3417;
                    frontier_phi_71_pred_2 = _3416;
                    frontier_phi_71_pred_3 = _3415;
                    frontier_phi_71_pred_4 = _3414;
                    frontier_phi_71_pred_5 = _3413;
                }
                else
                {
                    float _3558;
                    float _3559;
                    float _3560;
                    float _3561;
                    float _3562;
                    float _3563;
                    uint _3564;
                    _3558 = _3413;
                    _3559 = _3414;
                    _3560 = _3415;
                    _3561 = _3416;
                    _3562 = _3417;
                    _3563 = _3418;
                    _3564 = _3428;
                    float _3485;
                    float _3486;
                    float _3487;
                    float _3488;
                    float _3489;
                    float _3490;
                    for (;;)
                    {
                        uint _3568 = uint(findLSB(_3564)) + (_3419 << 5u);
                        uint _3565 = (_3564 + 4294967295u) & _3564;
                        uint _3570 = _3568 * 48u;
                        vec4 _3584 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3570)).x, texelFetch(g_PointLightRenderingBuffer, int(_3570 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3570 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3570 + 3u)).x));
                        uint _3590 = (_3568 * 48u) + 4u;
                        vec4 _3603 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3590)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 3u)).x));
                        uint _3609 = (_3568 * 48u) + 8u;
                        vec3 _3620 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3609)).x, texelFetch(g_PointLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3609 + 2u)).x));
                        float _3624 = _3584.x - _2200;
                        float _3625 = _3584.y - _2201;
                        float _3626 = _3584.z - _2202;
                        float _3627 = dot(vec3(_3624, _3625, _3626), vec3(_3624, _3625, _3626));
                        float _3630 = inversesqrt(_3627);
                        float _3631 = _3630 * _3624;
                        float _3632 = _3630 * _3625;
                        float _3633 = _3630 * _3626;
                        float _3634 = dot(vec3(_908, _911, _914), vec3(_3631, _3632, _3633));
                        float _3639 = 1.0 - (_3627 * _3584.w);
                        float _5124 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                        float _3640 = isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0));
                        float _3641 = sqrt(_3627) * _3603.w;
                        float _3644 = 1.39999997615814208984375 / (_3641 + 1.39999997615814208984375);
                        float _3645 = _3644 * _3644;
                        float _3648 = ((1.0 - _3645) * _3634) + _3645;
                        float _3651 = _3641 * _3641;
                        float _3655 = ((isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0))) * _3640) / ((_3651 * 0.699999988079071044921875) + 1.0);
                        float _3659 = (-0.0) - _2200;
                        float _3660 = (-0.0) - _2201;
                        float _3661 = (-0.0) - _2202;
                        float _3665 = inversesqrt(dot(vec3(_3659, _3660, _3661), vec3(_3659, _3660, _3661)));
                        float _3666 = _3665 * _3659;
                        float _3667 = _3665 * _3660;
                        float _3668 = _3665 * _3661;
                        float _3675 = exp2(log2(1.0 / ((_3651 * 3.5) + 5.0)) * 0.25);
                        float _3676 = 1.0 - _1111;
                        float _3683 = sqrt(1.0 - ((1.0 - (_3676 * _3676)) * (1.0 - (_3675 * _3675))));
                        float _3684 = _3683 * _3683;
                        float _3685 = _3684 * _3684;
                        float _3686 = _3666 + _3631;
                        float _3687 = _3667 + _3632;
                        float _3688 = _3668 + _3633;
                        float _3692 = inversesqrt(dot(vec3(_3686, _3687, _3688), vec3(_3686, _3687, _3688)));
                        float _3696 = dot(vec3(_908, _911, _914), vec3(_3666, _3667, _3668));
                        float _5140 = isnan(0.0) ? _3696 : (isnan(_3696) ? 0.0 : max(_3696, 0.0));
                        float _3699 = isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0));
                        float _3700 = dot(vec3(_908, _911, _914), vec3(_3692 * _3686, _3692 * _3687, _3692 * _3688));
                        float _5151 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                        float _3703 = isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0));
                        float _3707 = ((_3703 * _3703) * (_3685 + (-1.0))) + 1.0;
                        float _3708 = _3644 * _3684;
                        float _3709 = _3708 * _3708;
                        float _3712 = ((1.0 - _3709) * _3634) + _3709;
                        float _5162 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                        float _3713 = isnan(1.0) ? _5162 : (isnan(_5162) ? 1.0 : min(_5162, 1.0));
                        float _3714 = 1.0 - _3684;
                        float _3724 = (0.5 / (((_3713 * ((_3699 * _3714) + _3684)) + 9.9999999392252902907785028219223e-09) + (((_3713 * _3714) + _3684) * _3699))) * _3713;
                        float _5173 = isnan(0.0) ? _3724 : (isnan(_3724) ? 0.0 : max(_3724, 0.0));
                        float _3735 = (((_3685 * 3.1415927410125732421875) * (isnan(1.0) ? _5173 : (isnan(_5173) ? 1.0 : min(_5173, 1.0)))) / ((_3707 * _3707) * ((_3651 * 2.1991131305694580078125) + 3.141590118408203125))) * _3640;
                        _3488 = (_3655 * _3603.x) + _3561;
                        _3489 = (_3655 * _3603.y) + _3562;
                        _3490 = (_3655 * _3603.z) + _3563;
                        _3485 = (_3735 * _3620.x) + _3558;
                        _3486 = (_3735 * _3620.y) + _3559;
                        _3487 = (_3735 * _3620.z) + _3560;
                        if (_3565 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3558 = _3485;
                            _3559 = _3486;
                            _3560 = _3487;
                            _3561 = _3488;
                            _3562 = _3489;
                            _3563 = _3490;
                            _3564 = _3565;
                        }
                    }
                    frontier_phi_71_pred = _3490;
                    frontier_phi_71_pred_1 = _3489;
                    frontier_phi_71_pred_2 = _3488;
                    frontier_phi_71_pred_3 = _3487;
                    frontier_phi_71_pred_4 = _3486;
                    frontier_phi_71_pred_5 = _3485;
                }
                _3263 = frontier_phi_71_pred;
                _3261 = frontier_phi_71_pred_1;
                _3259 = frontier_phi_71_pred_2;
                _3257 = frontier_phi_71_pred_3;
                _3255 = frontier_phi_71_pred_4;
                _3253 = frontier_phi_71_pred_5;
                uint _3420 = _3419 + 1u;
                if (_3420 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3413 = _3253;
                    _3414 = _3255;
                    _3415 = _3257;
                    _3416 = _3259;
                    _3417 = _3261;
                    _3418 = _3263;
                    _3419 = _3420;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3252 = _3253;
            _3254 = _3255;
            _3256 = _3257;
            _3258 = _3259;
            _3260 = _3261;
            _3262 = _3263;
        }
        uvec4 _3266 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3267 = _3266.z;
        uint _3269 = (_3267 >> 8u) & 15u;
        float _3381;
        float _3383;
        float _3385;
        float _3387;
        float _3389;
        float _3391;
        if (((4294967295u << _3269) & _3141) == 0u)
        {
            _3381 = _3252;
            _3383 = _3254;
            _3385 = _3256;
            _3387 = _3258;
            _3389 = _3260;
            _3391 = _3262;
        }
        else
        {
            float _3406 = inversesqrt(dot(vec3(_2200, _2201, _2202), vec3(_2200, _2201, _2202)));
            float _3407 = _3406 * _2200;
            float _3408 = _3406 * _2201;
            float _3409 = _3406 * _2202;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3269 < ((_3267 >> 12u) & 15u))
            {
                float _3382;
                float _3384;
                float _3386;
                float _3388;
                float _3390;
                float _3392;
                float _3541 = _3252;
                float _3542 = _3254;
                float _3543 = _3256;
                float _3544 = _3258;
                float _3545 = _3260;
                float _3546 = _3262;
                uint _3547 = _3269;
                uint _3556;
                bool _3557;
                for (;;)
                {
                    _3556 = texelFetch(g_lightClassification, int((((_3135 << 5u) + (_3121 << 9u)) + (_3547 << 2u)) >> 2u)).x;
                    _3557 = _3556 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3557)
                    {
                        frontier_phi_82_pred = _3546;
                        frontier_phi_82_pred_1 = _3545;
                        frontier_phi_82_pred_2 = _3544;
                        frontier_phi_82_pred_3 = _3543;
                        frontier_phi_82_pred_4 = _3542;
                        frontier_phi_82_pred_5 = _3541;
                    }
                    else
                    {
                        float _3749;
                        float _3750;
                        float _3751;
                        float _3752;
                        float _3753;
                        float _3754;
                        float _4043;
                        float _4044;
                        float _4045;
                        float _4046;
                        float _4047;
                        float _4048;
                        float _3762 = _3541;
                        float _3763 = _3542;
                        float _3764 = _3543;
                        float _3765 = _3544;
                        float _3766 = _3545;
                        float _3767 = _3546;
                        uint _3768 = _3556;
                        uint _3769;
                        vec4 _3794;
                        float _3795;
                        vec4 _3810;
                        vec3 _3822;
                        vec4 _3837;
                        vec4 _3852;
                        float _3899;
                        bool _3900;
                        for (;;)
                        {
                            uint _3779 = ((_3547 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3768));
                            _3769 = (_3768 + 4294967295u) & _3768;
                            uint _3781 = _3779 * 40u;
                            _3794 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3781)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3781 + 3u)).x));
                            _3795 = _3794.w;
                            uint _3797 = (_3779 * 40u) + 4u;
                            _3810 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3797)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3797 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3797 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3797 + 3u)).x));
                            uint _3812 = (_3779 * 40u) + 8u;
                            _3822 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3812)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3812 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3812 + 2u)).x));
                            uint _3824 = (_3779 * 40u) + 16u;
                            _3837 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3824)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 3u)).x));
                            uint _3839 = (_3779 * 40u) + 20u;
                            _3852 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3839)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 3u)).x));
                            uint _3855 = (_3779 * 40u) + 24u;
                            vec4 _3868 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3855)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 3u)).x));
                            uint _3874 = (_3779 * 40u) + 28u;
                            vec4 _3887 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3874)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 3u)).x));
                            _3899 = fma(_2202, _3887.z, fma(_2201, _3887.y, _3887.x * _2200)) + _3887.w;
                            _3900 = !((fma(_2202, _3868.z, fma(_2201, _3868.y, _3868.x * _2200)) + _3868.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3900)
                            {
                                float _3927 = _3794.x - _2200;
                                float _3928 = _3794.y - _2201;
                                float _3929 = _3794.z - _2202;
                                float _3930 = dot(vec3(_3927, _3928, _3929), vec3(_3927, _3928, _3929));
                                float _3933 = inversesqrt(_3930);
                                float _3934 = _3933 * _3927;
                                float _3935 = _3933 * _3928;
                                float _3936 = _3933 * _3929;
                                float _3940 = 1.0 - (_3930 / (_3795 * _3795));
                                float _5184 = isnan(0.0) ? _3940 : (isnan(_3940) ? 0.0 : max(_3940, 0.0));
                                float _3941 = isnan(1.0) ? _5184 : (isnan(_5184) ? 1.0 : min(_5184, 1.0));
                                float _3945 = sqrt(_3930) * _3810.w;
                                float _3947 = 1.39999997615814208984375 / (_3945 + 1.39999997615814208984375);
                                float _3948 = _3947 * _3947;
                                float _3951 = ((1.0 - _3948) * dot(vec3(_3934, _3935, _3936), vec3(_908, _911, _914))) + _3948;
                                float _3954 = _3945 * _3945;
                                float _3958 = (fma(_2202, _3837.z, fma(_2201, _3837.y, _3837.x * _2200)) + _3837.w) / _3899;
                                float _3959 = (fma(_2202, _3852.z, fma(_2201, _3852.y, _3852.x * _2200)) + _3852.w) / _3899;
                                float _3963 = 1.0 - dot(vec2(_3958, _3959), vec2(_3958, _3959));
                                float _5200 = isnan(0.0) ? _3963 : (isnan(_3963) ? 0.0 : max(_3963, 0.0));
                                float _3964 = isnan(1.0) ? _5200 : (isnan(_5200) ? 1.0 : min(_5200, 1.0));
                                float _3965 = _3964 * (((isnan(0.0) ? _3951 : (isnan(_3951) ? 0.0 : max(_3951, 0.0))) * _3941) / ((_3954 * 0.699999988079071044921875) + 1.0));
                                float _3977 = exp2(log2(1.0 / ((_3954 * 3.5) + 5.0)) * 0.25);
                                float _3978 = 1.0 - _1111;
                                float _3985 = sqrt(1.0 - ((1.0 - (_3978 * _3978)) * (1.0 - (_3977 * _3977))));
                                float _3986 = _3985 * _3985;
                                float _3987 = _3986 * _3986;
                                float _3988 = _3934 - _3407;
                                float _3989 = _3935 - _3408;
                                float _3990 = _3936 - _3409;
                                float _3994 = inversesqrt(dot(vec3(_3988, _3989, _3990), vec3(_3988, _3989, _3990)));
                                float _3998 = dot(vec3(_908, _911, _914), vec3((-0.0) - _3407, (-0.0) - _3408, (-0.0) - _3409));
                                float _5211 = isnan(0.0) ? _3998 : (isnan(_3998) ? 0.0 : max(_3998, 0.0));
                                float _4001 = isnan(1.0) ? _5211 : (isnan(_5211) ? 1.0 : min(_5211, 1.0));
                                float _4002 = dot(vec3(_908, _911, _914), vec3(_3994 * _3988, _3994 * _3989, _3994 * _3990));
                                float _5222 = isnan(0.0) ? _4002 : (isnan(_4002) ? 0.0 : max(_4002, 0.0));
                                float _4005 = isnan(1.0) ? _5222 : (isnan(_5222) ? 1.0 : min(_5222, 1.0));
                                float _4009 = ((_4005 * _4005) * (_3987 + (-1.0))) + 1.0;
                                float _4010 = _3947 * _3986;
                                float _4011 = _4010 * _4010;
                                float _4017 = ((1.0 - _4011) * dot(vec3(_908, _911, _914), vec3(_3934, _3935, _3936))) + _4011;
                                float _5233 = isnan(0.0) ? _4017 : (isnan(_4017) ? 0.0 : max(_4017, 0.0));
                                float _4018 = isnan(1.0) ? _5233 : (isnan(_5233) ? 1.0 : min(_5233, 1.0));
                                float _4019 = 1.0 - _3986;
                                float _4029 = (0.5 / (((_4018 * ((_4001 * _4019) + _3986)) + 9.9999999392252902907785028219223e-09) + (((_4018 * _4019) + _3986) * _4001))) * _4018;
                                float _5244 = isnan(0.0) ? _4029 : (isnan(_4029) ? 0.0 : max(_4029, 0.0));
                                float _4039 = (_3964 * _3941) * (((_3987 * 3.1415927410125732421875) * (isnan(1.0) ? _5244 : (isnan(_5244) ? 1.0 : min(_5244, 1.0)))) / ((_4009 * _4009) * ((_3954 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3965 * _3810.z;
                                frontier_phi_88_pred_1 = _3965 * _3810.y;
                                frontier_phi_88_pred_2 = _3965 * _3810.x;
                                frontier_phi_88_pred_3 = _4039 * _3822.z;
                                frontier_phi_88_pred_4 = _4039 * _3822.y;
                                frontier_phi_88_pred_5 = _4039 * _3822.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4048 = frontier_phi_88_pred;
                            _4047 = frontier_phi_88_pred_1;
                            _4046 = frontier_phi_88_pred_2;
                            _4045 = frontier_phi_88_pred_3;
                            _4044 = frontier_phi_88_pred_4;
                            _4043 = frontier_phi_88_pred_5;
                            _3752 = _4046 + _3765;
                            _3753 = _4047 + _3766;
                            _3754 = _4048 + _3767;
                            _3749 = _4043 + _3762;
                            _3750 = _4044 + _3763;
                            _3751 = _4045 + _3764;
                            if (_3769 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3762 = _3749;
                                _3763 = _3750;
                                _3764 = _3751;
                                _3765 = _3752;
                                _3766 = _3753;
                                _3767 = _3754;
                                _3768 = _3769;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3754;
                        frontier_phi_82_pred_1 = _3753;
                        frontier_phi_82_pred_2 = _3752;
                        frontier_phi_82_pred_3 = _3751;
                        frontier_phi_82_pred_4 = _3750;
                        frontier_phi_82_pred_5 = _3749;
                    }
                    _3392 = frontier_phi_82_pred;
                    _3390 = frontier_phi_82_pred_1;
                    _3388 = frontier_phi_82_pred_2;
                    _3386 = frontier_phi_82_pred_3;
                    _3384 = frontier_phi_82_pred_4;
                    _3382 = frontier_phi_82_pred_5;
                    uint _3548 = _3547 + 1u;
                    if (_3548 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3541 = _3382;
                        _3542 = _3384;
                        _3543 = _3386;
                        _3544 = _3388;
                        _3545 = _3390;
                        _3546 = _3392;
                        _3547 = _3548;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3388;
                frontier_phi_63_64_ladder_1 = _3392;
                frontier_phi_63_64_ladder_2 = _3390;
                frontier_phi_63_64_ladder_3 = _3386;
                frontier_phi_63_64_ladder_4 = _3384;
                frontier_phi_63_64_ladder_5 = _3382;
            }
            else
            {
                frontier_phi_63_64_ladder = _3258;
                frontier_phi_63_64_ladder_1 = _3262;
                frontier_phi_63_64_ladder_2 = _3260;
                frontier_phi_63_64_ladder_3 = _3256;
                frontier_phi_63_64_ladder_4 = _3254;
                frontier_phi_63_64_ladder_5 = _3252;
            }
            _3381 = frontier_phi_63_64_ladder_5;
            _3383 = frontier_phi_63_64_ladder_4;
            _3385 = frontier_phi_63_64_ladder_3;
            _3387 = frontier_phi_63_64_ladder;
            _3389 = frontier_phi_63_64_ladder_2;
            _3391 = frontier_phi_63_64_ladder_1;
        }
        float _3396 = isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0));
        _3154 = (_3396 * _3387) + _2666;
        _3156 = (_3396 * _3389) + _2668;
        _3158 = (_3396 * _3391) + _2670;
        _3160 = ((_3381 * _1081) * _3396) + _3004;
        _3162 = ((_3383 * _1082) * _3396) + _3006;
        _3164 = ((_3385 * _1083) * _3396) + _3008;
    }
    else
    {
        _3154 = _2666;
        _3156 = _2668;
        _3158 = _2670;
        _3160 = _3004;
        _3162 = _3006;
        _3164 = _3008;
    }
    uint _3170 = _988 + uint(cbMatDynParam._m0[0u].w);
    float _3176 = cbInstanceData._m0[_3170].x * (_766 ? cbMtdParam._m0[21u].z : cbMtdParam._m0[11u].y);
    float _3177 = cbInstanceData._m0[_3170].y * (_766 ? cbMtdParam._m0[21u].w : cbMtdParam._m0[11u].z);
    float _3178 = cbInstanceData._m0[_3170].z * (_766 ? cbMtdParam._m0[22u].x : cbMtdParam._m0[11u].w);
    float _5260 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    float _5271 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    float _5282 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    float _5293 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _3196 = (((isnan(1.0) ? _5260 : (isnan(_5260) ? 1.0 : min(_5260, 1.0))) * (_3154 + ((isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0))) * _1095))) + ((_3160 + ((isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0))) * _1934)) * cbPerFrame._m0[3u].x)) + _3176;
    float _3198 = (_3177 + ((_3162 + ((isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0))) * _1934)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5271 : (isnan(_5271) ? 1.0 : min(_5271, 1.0))) * (_3156 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1095)));
    float _3200 = (_3178 + ((_3164 + ((isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0))) * _1934)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5282 : (isnan(_5282) ? 1.0 : min(_5282, 1.0))) * (_3158 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1095)));
    float _3201 = isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0));
    float _3202 = isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0));
    float _3203 = isnan(0.0) ? _3200 : (isnan(_3200) ? 0.0 : max(_3200, 0.0));
    float _3209 = cbMtdParam._m0[2u].x * _3176;
    float _3210 = cbMtdParam._m0[2u].y * _3177;
    float _3211 = cbMtdParam._m0[2u].z * _3178;
    float _5319 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3213 = isnan(1.0) ? _5319 : (isnan(_5319) ? 1.0 : min(_5319, 1.0));
    float _3218 = cbInstanceData._m0[_987 + 6u].w * (isnan(1.0) ? _5293 : (isnan(_5293) ? 1.0 : min(_5293, 1.0)));
    float _3223 = _885 / cbSceneParam._m0[86u].x;
    float _3224 = _886 / cbSceneParam._m0[86u].y;
    vec4 _3238 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3223, _3224, (log2((isnan(cbSceneParam._m0[77u].w) ? _809 : (isnan(_809) ? cbSceneParam._m0[77u].w : min(_809, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3240 = _3238.x;
    float _3241 = _3238.y;
    float _3242 = _3238.z;
    float _3243 = _3238.w;
    float _3314;
    float _3316;
    float _3318;
    float _3320;
    if (_809 > cbSceneParam._m0[78u].w)
    {
        float _3277 = isnan(_809) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _809 : min(cbSceneParam._m0[80u].w, _809));
        float _3278 = _3277 / _809;
        float _3289 = _3278 * _859;
        float _3290 = _860 * _3278;
        float _3291 = (-0.0) - _3290;
        float _3292 = _3278 * _861;
        float _3294 = (cbSceneParam._m0[77u].w * _3291) / _3277;
        float _3295 = _3294 + cbSceneParam._m0[79u].w;
        float _3296 = cbSceneParam._m0[79u].w - _3290;
        float _3302 = sqrt(((_3289 * _3289) + (_3290 * _3290)) + (_3292 * _3292));
        float _3305 = (1.0 - (cbSceneParam._m0[77u].w / _3277)) * _3302;
        float _3310 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3312 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3498;
        if (abs((_3291 - _3294) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3498 = ((((_3295 > 0.0) ? exp2(_3310 * _3295) : (2.0 - exp2(_3312 * _3295))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3305;
        }
        else
        {
            float _3442 = 1.0 / cbSceneParam._m0[80u].x;
            float _3443 = isnan(_3296) ? _3295 : (isnan(_3295) ? _3296 : max(_3295, _3296));
            float _3444 = isnan(_3296) ? _3295 : (isnan(_3295) ? _3296 : min(_3295, _3296));
            float _3453 = isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : min(_3443, 0.0));
            float _3454 = isnan(0.0) ? _3444 : (isnan(_3444) ? 0.0 : min(_3444, 0.0));
            _3498 = ((abs(_3302 / _3291) * cbSceneParam._m0[80u].y) * ((((_3453 - _3454) * 2.0) - ((exp2(_3310 * (isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : max(_3443, 0.0)))) - exp2(_3310 * (isnan(0.0) ? _3444 : (isnan(_3444) ? 0.0 : max(_3444, 0.0))))) * _3442)) - ((exp2(_3312 * _3453) - exp2(_3312 * _3454)) * _3442))) + (_3305 * cbSceneParam._m0[80u].z);
        }
        vec4 _3500 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3223, _3224, 1.0), 0.0);
        float _3509 = exp2((_3498 * (-1.44269502162933349609375)) * (1.0 - _3500.w));
        float _3510 = log2(_3509);
        float _3526 = log2(_3243);
        _3314 = (exp2(_3526 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3510 * cbSceneParam._m0[78u].x)) * _3500.x) / cbSceneParam._m0[78u].x)) + _3240;
        _3316 = (exp2(_3526 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3510 * cbSceneParam._m0[78u].y)) * _3500.y) / cbSceneParam._m0[78u].y)) + _3241;
        _3318 = (exp2(_3526 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3510 * cbSceneParam._m0[78u].z)) * _3500.z) / cbSceneParam._m0[78u].z)) + _3242;
        _3320 = _3509 * _3243;
    }
    else
    {
        _3314 = _3240;
        _3316 = _3241;
        _3318 = _3242;
        _3320 = _3243;
    }
    bool _3536;
    vec4 _3330;
    vec4 _3352;
    float _3354;
    float _3358;
    float _3359;
    float _3360;
    float _3363;
    float _3366;
    float _3369;
    float _3370;
    bool _3380;
    for (;;)
    {
        _3330 = cbMatDynParam._m0[0u];
        float _3332 = roundEven(_3330.y);
        bool _3333 = _3332 == 3.0;
        float _3334 = log2(_3320);
        float _3338 = exp2(_3334 * cbSceneParam._m0[78u].x);
        float _3339 = exp2(_3334 * cbSceneParam._m0[78u].y);
        float _3340 = exp2(_3334 * cbSceneParam._m0[78u].z);
        float _3341 = _3338 * _3201;
        float _3342 = _3339 * _3202;
        float _3343 = _3340 * _3203;
        float _3350 = _875 + (-0.5);
        _3352 = cbMtdParam._m0[1u];
        _3354 = _3352.y * _3350;
        float _3357 = (_3332 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3358 = _3357 * (_3333 ? _3341 : (_3341 + (cbSceneParam._m0[72u].w * _3314)));
        _3359 = _3357 * (_3333 ? _3342 : (_3342 + (cbSceneParam._m0[72u].w * _3316)));
        _3360 = _3357 * (_3333 ? _3343 : (_3343 + (cbSceneParam._m0[72u].w * _3318)));
        _3363 = ((_3209 * _3213) * _3338) * _3357;
        _3366 = ((_3210 * _3213) * _3339) * _3357;
        _3369 = ((_3211 * _3213) * _3340) * _3357;
        _3370 = _3350 * 0.999000012874603271484375;
        _3380 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3380)
        {
            if ((cbInstanceData._m0[_987 + 7u].x + _3370) < 0.5)
            {
                _3536 = true;
                break;
            }
        }
        uint _3477 = _988 + uint(_3330.w);
        if ((cbInstanceData._m0[_3477].w < 1.0) && ((cbInstanceData._m0[_3477].w + _3370) < 0.5))
        {
            _3536 = true;
            break;
        }
        if ((_3354 + 1.0) < _3352.x)
        {
            _3536 = true;
            break;
        }
        _3536 = false;
        break;
    }
    float _3740;
    if (_3536)
    {
        discard_state = true;
        _3740 = 0.0;
    }
    else
    {
        _3740 = _3218;
    }
    SV_Target.x = _3358;
    SV_Target.y = _3359;
    SV_Target.z = _3360;
    SV_Target.w = _3740;
    SV_Target_1.x = _3363;
    SV_Target_1.y = _3366;
    SV_Target_1.z = _3369;
    SV_Target_1.w = _3218;
    discard_exit();
}


