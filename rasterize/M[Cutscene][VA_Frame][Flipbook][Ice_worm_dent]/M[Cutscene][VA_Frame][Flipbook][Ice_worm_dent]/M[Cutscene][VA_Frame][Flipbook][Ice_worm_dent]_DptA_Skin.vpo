#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_6;
layout(location = 9) in vec4 TEXCOORD_7;
layout(location = 10) in vec4 TEXCOORD_2;
layout(location = 11) in vec4 TEXCOORD_3;
layout(location = 12) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec3 TEXCOORD_6_1;
layout(location = 7) out vec2 TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_6_1.x = 0.0;
    TEXCOORD_6_1.y = 0.0;
    TEXCOORD_6_1.z = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _241 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _254 = float(int(uvec2(textureSize(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _675 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _262 = (isnan(1.0) ? _675 : (isnan(_675) ? 1.0 : min(_675, 1.0))) * _254;
    precise float _263 = TEXCOORD_4.x * 255.0;
    precise float _265 = TEXCOORD_4.y * 255.0;
    precise float _266 = _265 * 256.0;
    precise float _268 = _263 + _266;
    precise float _269 = _268 + 0.5;
    float _271 = floor(_262);
    uint _272 = uint(int(_269));
    uint _273 = uint(int(_271));
    vec4 _274 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_272, _273)), int(0u));
    float _276 = _274.x;
    float _277 = _274.y;
    float _278 = _274.z;
    precise float _286 = _271 + 1.0;
    uint _288 = uint(int(isnan(_254) ? _286 : (isnan(_286) ? _254 : min(_286, _254))));
    vec4 _289 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_3, ivec2(uvec2(_272, _288)), int(0u));
    float _294 = fract(_262);
    vec4 _307 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_272, _273)), int(0u));
    float _309 = _307.x;
    float _310 = _307.y;
    float _311 = _307.z;
    vec4 _312 = texelFetch(M_Cutscene_VA_Frame_Flipbook_Ice_worm_dent_snp_0_Texture2D_4, ivec2(uvec2(_272, _288)), int(0u));
    precise float _317 = _312.x - _309;
    precise float _318 = _312.y - _310;
    precise float _319 = _312.z - _311;
    precise float _320 = _294 * _317;
    precise float _321 = _294 * _318;
    precise float _322 = _294 * _319;
    precise float _323 = _309 + _320;
    precise float _324 = _310 + _321;
    precise float _325 = _311 + _322;
    uint _330 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _332 = texelFetch(g_InstanceIndexBuffer, int(_330));
    uint _333 = _332.x;
    precise float _334 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _337 = isnan(_334) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _334 : max(0.001000000047497451305389404296875, _334));
    precise float _339 = BLENDWEIGHT.x / _337;
    precise float _340 = BLENDWEIGHT.y / _337;
    precise float _341 = BLENDWEIGHT.z / _337;
    precise float _342 = BLENDWEIGHT.w / _337;
    uint _344 = _333 * 13u;
    uvec4 _349 = floatBitsToUint(cbInstanceData._m0[_344 + 4u]);
    uint _350 = _349.x;
    uint _352 = (_350 + uint(float(BLENDINDICES.x))) * 3u;
    uint _359 = _352 + 1u;
    uint _366 = _352 + 2u;
    precise float _373 = _339 * cbObjMatrix._m0[_352].x;
    precise float _374 = _339 * cbObjMatrix._m0[_359].x;
    precise float _375 = _339 * cbObjMatrix._m0[_366].x;
    precise float _376 = _339 * cbObjMatrix._m0[_352].y;
    precise float _377 = _339 * cbObjMatrix._m0[_359].y;
    precise float _378 = _339 * cbObjMatrix._m0[_366].y;
    precise float _379 = _339 * cbObjMatrix._m0[_352].z;
    precise float _380 = _339 * cbObjMatrix._m0[_359].z;
    precise float _381 = _339 * cbObjMatrix._m0[_366].z;
    precise float _382 = _339 * cbObjMatrix._m0[_352].w;
    precise float _383 = _339 * cbObjMatrix._m0[_359].w;
    precise float _384 = _339 * cbObjMatrix._m0[_366].w;
    uint _387 = (_350 + uint(float(BLENDINDICES.y))) * 3u;
    uint _394 = _387 + 1u;
    uint _401 = _387 + 2u;
    precise float _408 = _340 * cbObjMatrix._m0[_387].x;
    precise float _409 = _340 * cbObjMatrix._m0[_394].x;
    precise float _410 = _340 * cbObjMatrix._m0[_401].x;
    precise float _411 = _340 * cbObjMatrix._m0[_387].y;
    precise float _412 = _340 * cbObjMatrix._m0[_394].y;
    precise float _413 = _340 * cbObjMatrix._m0[_401].y;
    precise float _414 = _340 * cbObjMatrix._m0[_387].z;
    precise float _415 = _340 * cbObjMatrix._m0[_394].z;
    precise float _416 = _340 * cbObjMatrix._m0[_401].z;
    precise float _417 = _340 * cbObjMatrix._m0[_387].w;
    precise float _418 = _340 * cbObjMatrix._m0[_394].w;
    precise float _419 = _340 * cbObjMatrix._m0[_401].w;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    uint _434 = (_350 + uint(float(BLENDINDICES.z))) * 3u;
    uint _441 = _434 + 1u;
    uint _448 = _434 + 2u;
    precise float _455 = _341 * cbObjMatrix._m0[_434].x;
    precise float _456 = _341 * cbObjMatrix._m0[_441].x;
    precise float _457 = _341 * cbObjMatrix._m0[_448].x;
    precise float _458 = _341 * cbObjMatrix._m0[_434].y;
    precise float _459 = _341 * cbObjMatrix._m0[_441].y;
    precise float _460 = _341 * cbObjMatrix._m0[_448].y;
    precise float _461 = _341 * cbObjMatrix._m0[_434].z;
    precise float _462 = _341 * cbObjMatrix._m0[_441].z;
    precise float _463 = _341 * cbObjMatrix._m0[_448].z;
    precise float _464 = _341 * cbObjMatrix._m0[_434].w;
    precise float _465 = _341 * cbObjMatrix._m0[_441].w;
    precise float _466 = _341 * cbObjMatrix._m0[_448].w;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    uint _481 = (_350 + uint(float(BLENDINDICES.w))) * 3u;
    uint _488 = _481 + 1u;
    uint _495 = _481 + 2u;
    precise float _502 = _342 * cbObjMatrix._m0[_481].x;
    precise float _503 = _342 * cbObjMatrix._m0[_488].x;
    precise float _504 = _342 * cbObjMatrix._m0[_495].x;
    precise float _505 = _342 * cbObjMatrix._m0[_481].y;
    precise float _506 = _342 * cbObjMatrix._m0[_488].y;
    precise float _507 = _342 * cbObjMatrix._m0[_495].y;
    precise float _508 = _342 * cbObjMatrix._m0[_481].z;
    precise float _509 = _342 * cbObjMatrix._m0[_488].z;
    precise float _510 = _342 * cbObjMatrix._m0[_495].z;
    precise float _511 = _342 * cbObjMatrix._m0[_481].w;
    precise float _512 = _342 * cbObjMatrix._m0[_488].w;
    precise float _513 = _342 * cbObjMatrix._m0[_495].w;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _475 + _510;
    precise float _523 = _476 + _511;
    precise float _524 = _477 + _512;
    precise float _525 = _478 + _513;
    precise float _526 = POSITION.x * _514;
    precise float _527 = POSITION.y * _517;
    precise float _528 = _527 + _526;
    precise float _529 = POSITION.z * _520;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * _523;
    precise float _532 = _531 + _530;
    precise float _533 = POSITION.x * _515;
    precise float _534 = POSITION.y * _518;
    precise float _535 = _534 + _533;
    precise float _536 = POSITION.z * _521;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * _524;
    precise float _539 = _538 + _537;
    precise float _540 = POSITION.x * _516;
    precise float _541 = POSITION.y * _519;
    precise float _542 = _541 + _540;
    precise float _543 = POSITION.z * _522;
    precise float _544 = _543 + _542;
    precise float _545 = 1.0 * _525;
    precise float _546 = _545 + _544;
    precise float _547 = _323 + _532;
    precise float _548 = _324 + _539;
    precise float _549 = _325 + _546;
    precise float _565 = _547 - cbSceneParam._m0[3u].x;
    precise float _566 = _548 - cbSceneParam._m0[3u].y;
    precise float _567 = _549 - cbSceneParam._m0[3u].z;
    precise float _595 = _565 * cbSceneParam._m0[24u].x;
    precise float _596 = _566 * cbSceneParam._m0[24u].y;
    precise float _597 = _596 + _595;
    precise float _598 = _567 * cbSceneParam._m0[24u].z;
    precise float _599 = _598 + _597;
    precise float _600 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _601 = _600 + _599;
    precise float _602 = _565 * cbSceneParam._m0[25u].x;
    precise float _603 = _566 * cbSceneParam._m0[25u].y;
    precise float _604 = _603 + _602;
    precise float _605 = _567 * cbSceneParam._m0[25u].z;
    precise float _606 = _605 + _604;
    precise float _607 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _608 = _607 + _606;
    precise float _609 = _565 * cbSceneParam._m0[26u].x;
    precise float _610 = _566 * cbSceneParam._m0[26u].y;
    precise float _611 = _610 + _609;
    precise float _612 = _567 * cbSceneParam._m0[26u].z;
    precise float _613 = _612 + _611;
    precise float _614 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _615 = _614 + _613;
    precise float _616 = _565 * cbSceneParam._m0[27u].x;
    precise float _617 = _566 * cbSceneParam._m0[27u].y;
    precise float _618 = _617 + _616;
    precise float _619 = _567 * cbSceneParam._m0[27u].z;
    precise float _620 = _619 + _618;
    precise float _621 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _622 = _621 + _620;
    gl_Position.x = _601;
    gl_Position.y = _608;
    gl_Position.z = _615;
    gl_Position.w = _622;
    POSITION_1.x = _601;
    POSITION_1.y = _608;
    POSITION_1.z = _615;
    POSITION_1.w = _622;
    NORMAL_1.x = (((_289.x - _276) * 2.0) * _294) + ((_276 * 2.0) + (-1.0));
    NORMAL_1.y = (((_289.y - _277) * 2.0) * _294) + ((_277 * 2.0) + (-1.0));
    NORMAL_1.z = (_294 * ((_289.z - _278) * 2.0)) + ((_278 * 2.0) + (-1.0));
    NORMAL_1.w = float(_333);
    TANGENT_1.x = fma(_244, _520, fma(_243, _517, _514 * _241));
    TANGENT_1.y = fma(_244, _521, fma(_243, _518, _515 * _241));
    TANGENT_1.z = fma(_244, _522, fma(_243, _519, _516 * _241));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4_1.z = TEXCOORD_4.x;
    TEXCOORD_4_1.w = TEXCOORD_4.y;
    TEXCOORD_6_1.x = COLOR_1.x;
    TEXCOORD_6_1.y = TEXCOORD_2.x;
    TEXCOORD_6_1.z = TEXCOORD_3.x;
    TEXCOORD_12.x = _615;
    TEXCOORD_12.y = _622;
    gl_ClipDistance[0u] = dot(vec4(_601, _608, _615, _622), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_601, _608, _615, _622), vec4(cbInstanceData._m0[_344 + 3u]));
}


