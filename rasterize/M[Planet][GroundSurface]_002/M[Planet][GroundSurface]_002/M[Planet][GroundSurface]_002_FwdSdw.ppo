#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_002_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1313;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _215 = _214 * NORMAL.x;
    float _216 = _214 * NORMAL.y;
    float _217 = _214 * NORMAL.z;
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229;
    float _230;
    float _231;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _229 = (-0.0) - _215;
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
    }
    else
    {
        _229 = _215;
        _230 = _216;
        _231 = _217;
    }
    float _266 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _270 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _274 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _278 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _288 = cbSceneParam._m0[71u].x - (_266 / _278);
    float _289 = cbSceneParam._m0[71u].y - (_270 / _278);
    float _290 = cbSceneParam._m0[71u].z - (_274 / _278);
    uvec4 _294 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _296 = _294.z != 0u;
    vec4 _315 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _318 = _315.x;
    float _319 = _315.y;
    float _320 = _315.z;
    bool _341 = _294.x != 0u;
    vec4 _358 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _360 = _358.x;
    float _361 = _358.y;
    float _362 = _358.z;
    float _378 = _341 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].x - _360)) + _360) : (_360 * cbMtdParam._m0[10u].x);
    float _379 = _341 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].y - _361)) + _361) : (_361 * cbMtdParam._m0[10u].y);
    float _380 = _341 ? ((cbMtdParam._m0[17u].y * (cbMtdParam._m0[10u].z - _362)) + _362) : (_362 * cbMtdParam._m0[10u].z);
    bool _382 = _294.y != 0u;
    vec4 _400 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _402 = _400.x;
    float _403 = _400.y;
    float _404 = _400.z;
    vec4 _432 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _434 = _432.x;
    float _435 = _432.y;
    float _446 = ((cbMtdParam._m0[16u].w * (-1.39999997615814208984375)) * (1.0 - _434)) + 1.0;
    float _3929 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _451 = (cbMtdParam._m0[16u].y * ((isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))) - _434)) + _434;
    float _458 = (_451 * ((_382 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].x - _402)) + _402) : (_402 * cbMtdParam._m0[11u].x)) - _378)) + _378;
    float _459 = (_451 * ((_382 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].y - _403)) + _403) : (_403 * cbMtdParam._m0[11u].y)) - _379)) + _379;
    float _460 = (_451 * ((_382 ? ((cbMtdParam._m0[14u].y * (cbMtdParam._m0[11u].z - _404)) + _404) : (_404 * cbMtdParam._m0[11u].z)) - _380)) + _380;
    float _464 = (((1.0 - _435) * (-1.39999997615814208984375)) * cbMtdParam._m0[16u].z) + 1.0;
    float _3940 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _469 = (cbMtdParam._m0[14u].x * ((isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0))) - _435)) + _435;
    float _476 = (_469 * ((_296 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].x - _318)) + _318) : (_318 * cbMtdParam._m0[12u].x)) - _458)) + _458;
    float _477 = (_469 * ((_296 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].y - _319)) + _319) : (_319 * cbMtdParam._m0[12u].y)) - _459)) + _459;
    float _478 = (_469 * ((_296 ? ((cbMtdParam._m0[14u].z * (cbMtdParam._m0[12u].z - _320)) + _320) : (_320 * cbMtdParam._m0[12u].z)) - _460)) + _460;
    vec4 _490 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _507 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _514 = cbMtdParam._m0[15u].y * _507.x;
    float _521 = (_514 * (_490.x - _476)) + _476;
    float _522 = (_514 * (_490.y - _477)) + _477;
    float _523 = (_514 * (_490.z - _478)) + _478;
    float _537 = inversesqrt(dot(vec3(_288, _289, _290), vec3(_288, _289, _290)));
    float _544 = dot(vec4(_537 * _288, _537 * _289, _537 * _290, 0.0), vec4(_229, _230, _231, 0.0)) - cbMtdParam._m0[15u].x;
    float _3951 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _554 = (exp2(log2(1.0 - (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].w : (isnan(cbMtdParam._m0[14u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].w, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[15u].w - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z;
    float _564 = (((_554 * cbMtdParam._m0[13u].x) - _521) * _554) + _521;
    float _565 = (((_554 * cbMtdParam._m0[13u].y) - _522) * _554) + _522;
    float _566 = (((_554 * cbMtdParam._m0[13u].z) - _523) * _554) + _523;
    vec4 _578 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    vec4 _595 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _597 = _595.x;
    float _598 = _595.y;
    float _599 = _595.z;
    float _606 = ((_578.x - _597) * _451) + _597;
    float _607 = ((_578.y - _598) * _451) + _598;
    float _608 = ((_578.z - _599) * _451) + _599;
    vec4 _620 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _646 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _658 = (((_620.x - _606) * _469) + _606) + ((_646.x + (-0.5)) * cbMtdParam._m0[17u].x);
    float _659 = (((_620.y - _607) * _469) + _607) + ((_646.y + (-0.5)) * cbMtdParam._m0[17u].x);
    float _660 = (((_620.z - _608) * _469) + _608) + ((_646.z + (-0.5)) * cbMtdParam._m0[17u].x);
    vec4 _673 = texture(sampler2D(M_Planet_GroundSurface_002_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _684 = ((_673.x - _658) * _514) + _658;
    float _685 = ((_673.y - _659) * _514) + _659;
    float _686 = ((_673.z - _660) * _514) + _660;
    float _696 = ((1.0 - _686) * _554) + _686;
    float _700 = ((((0.502016007900238037109375 - _684) * _554) + _684) * 2.0) + (-1.0);
    float _702 = ((((0.502016007900238037109375 - _685) * _554) + _685) * 2.0) + (-1.0);
    float _703 = dot(vec2(_700, _702), vec2(_700, _702));
    float _3967 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _708 = sqrt(1.0 - (isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0))));
    float _713 = inversesqrt(dot(vec3(_266, _270, _274), vec3(_266, _270, _274)));
    bool _718 = _294.w != 0u;
    float _728 = inversesqrt(dot(vec3(cbMtdParam._m0[17u].zw, cbMtdParam._m0[18u].x), vec3(cbMtdParam._m0[17u].zw, cbMtdParam._m0[18u].x)));
    uint _732 = uint(roundEven(NORMAL.w)) * 13u;
    uint _733 = _732 + 5u;
    uint _738 = floatBitsToUint(cbInstanceData._m0[_733]).x * 14u;
    float _744 = _718 ? cbLight._m0[_738].x : (_728 * cbMtdParam._m0[17u].z);
    float _745 = _718 ? cbLight._m0[_738].y : (_728 * cbMtdParam._m0[17u].w);
    float _746 = _718 ? cbLight._m0[_738].z : (_728 * cbMtdParam._m0[18u].x);
    float _750 = inversesqrt(dot(vec3(_744, _745, _746), vec3(_744, _745, _746)));
    float _751 = _744 * _750;
    float _752 = _745 * _750;
    float _753 = _746 * _750;
    float _757 = inversesqrt(dot(vec3(_751, _752, _753), vec3(_751, _752, _753)));
    float _773 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_713 * _266, _713 * _270, _713 * _274, 0.0), vec4(_757 * _751, _757 * _752, _757 * _753, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _3978 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _775 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    float _781 = exp2(log2(_775 * 6.5) * 7.0);
    float _3989 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _783 = (isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0))) + _775;
    float _4000 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _784 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _787 = fma(_708, _229, fma(_702, _221 * TANGENT.x, (_207 * _200) * _700));
    float _790 = fma(_708, _230, fma(_702, _221 * TANGENT.y, (_207 * _201) * _700));
    float _793 = fma(_708, _231, fma(_702, _221 * TANGENT.z, (_207 * _202) * _700));
    float _797 = inversesqrt(dot(vec3(_787, _790, _793), vec3(_787, _790, _793)));
    float _798 = _797 * _787;
    float _799 = _797 * _790;
    float _800 = _797 * _793;
    float _4011 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _801 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
    float _4022 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _4033 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _4044 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _817 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _857 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _866 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _857);
    float _867 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _857);
    float _868 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _857);
    float _872 = inversesqrt(dot(vec3(_866, _867, _868), vec3(_866, _867, _868)));
    float _873 = _866 * _872;
    float _874 = _867 * _872;
    float _875 = _868 * _872;
    float _881 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _882 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _900 = fma(_800, cbSceneParam._m0[5u].z, fma(_799, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _798));
    float _903 = fma(_800, cbSceneParam._m0[6u].z, fma(_799, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _798));
    float _906 = fma(_800, cbSceneParam._m0[7u].z, fma(_799, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _798));
    uint _919 = _732 + 9u;
    uint _920 = _919 + uint(cbMatDynParam._m0[0u].w);
    float _926 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0)))) * cbInstanceData._m0[_920].x;
    float _927 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0)))) * cbInstanceData._m0[_920].y;
    float _928 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0)))) * cbInstanceData._m0[_920].z;
    float _4055 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _929 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    float _4066 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _930 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _4077 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _931 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    vec4 _940 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _881, cbSceneParam._m0[86u].y * _882));
    float _943 = _940.x * TEXCOORD.z;
    float _944 = dot(vec3(_798, _799, _800), vec3(_873, _874, _875));
    float _947 = _944 * 2.0;
    float _951 = (_947 * _798) - _873;
    float _952 = (_947 * _799) - _874;
    float _953 = (_947 * _800) - _875;
    float _957 = abs(dot(vec3(_873, _874, _875), vec3(_798, _799, _800)));
    float _4088 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _959 = sqrt(_801);
    float _972 = exp2((_959 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_959 * 3.0));
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1008 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1012 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1312;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1039 = fma(_1012, cbModelParam._m0[26u].z, fma(_1008, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1004));
        float _1043 = fma(_1012, cbModelParam._m0[27u].z, fma(_1008, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1004));
        float _1047 = fma(_1012, cbModelParam._m0[28u].z, fma(_1008, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1004));
        float _1070 = _1004 + _798;
        float _1071 = _1008 + _799;
        float _1072 = _1012 + _800;
        float _1082 = fma(_1072, cbModelParam._m0[26u].z, fma(_1071, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1070)) - _1039;
        float _1083 = fma(_1072, cbModelParam._m0[27u].z, fma(_1071, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1070)) - _1043;
        float _1084 = fma(_1072, cbModelParam._m0[28u].z, fma(_1071, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1070)) - _1047;
        float _1088 = inversesqrt(dot(vec3(_1082, _1083, _1084), vec3(_1082, _1083, _1084)));
        float _1101 = ((_1088 * _1082) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1039 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1102 = ((_1088 * _1083) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1043 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1103 = ((_1088 * _1084) / cbModelParam._m0[34u].z) + ((((((_1047 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        vec4 _1127 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1101, _1102, _1103), 0.0);
        float _1140 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1141 = _1140 * (_1106.x + (-0.5));
        float _1142 = _1140 * (_1106.y + (-0.5));
        float _1143 = _1140 * (_1106.z + (-0.5));
        float _1150 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1151 = _1150 * (_1113.x + (-0.5));
        float _1152 = _1150 * (_1113.y + (-0.5));
        float _1153 = _1150 * (_1113.z + (-0.5));
        float _1160 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1161 = _1160 * (_1120.x + (-0.5));
        float _1162 = _1160 * (_1120.y + (-0.5));
        float _1163 = _1160 * (_1120.z + (-0.5));
        float _1170 = exp2((_1127.w + (-0.5)) * 20.0) * 2.0;
        float _1171 = _1170 * (_1127.x + (-0.5));
        float _1172 = _1170 * (_1127.y + (-0.5));
        float _1173 = _1170 * (_1127.z + (-0.5));
        float _1174 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1175 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1176 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1177 = _1141 * 0.5;
        float _1178 = _1151 * 0.5;
        float _1179 = _1161 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1194 = (dot(vec3(_798, _799, _800), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _4114 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1204 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1174 + 9.9999997473787516355514526367188e-06);
        float _4125 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1206 = _1205 * 2.0;
        float _1210 = (1.0 - _1205) / (_1205 + 1.0);
        float _4136 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1220 = ((((1.0 - _1211) * (_1206 + 2.0)) * exp2(log2(isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_1206 + 1.0))) + _1211) * _1174;
        float _1221 = _1142 * 0.5;
        float _1222 = _1152 * 0.5;
        float _1223 = _1162 * 0.5;
        float _1224 = dot(vec3(_1221, _1222, _1223), vec3(_1221, _1222, _1223));
        float _1229 = (_1224 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1224);
        float _1237 = (dot(vec3(_798, _799, _800), vec3(_1229 * _1221, _1229 * _1222, _1229 * _1223)) + 1.0) * 0.5;
        float _4147 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1246 = sqrt(((_1222 * _1222) + (_1221 * _1221)) + (_1223 * _1223)) / (_1175 + 9.9999997473787516355514526367188e-06);
        float _4158 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1247 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1248 = _1247 * 2.0;
        float _1252 = (1.0 - _1247) / (_1247 + 1.0);
        float _4169 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1253 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1262 = ((((1.0 - _1253) * (_1248 + 2.0)) * exp2(log2(isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (_1248 + 1.0))) + _1253) * _1175;
        float _1263 = _1143 * 0.5;
        float _1264 = _1153 * 0.5;
        float _1265 = _1163 * 0.5;
        float _1266 = dot(vec3(_1263, _1264, _1265), vec3(_1263, _1264, _1265));
        float _1271 = (_1266 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1266);
        float _1279 = (dot(vec3(_798, _799, _800), vec3(_1271 * _1263, _1271 * _1264, _1271 * _1265)) + 1.0) * 0.5;
        float _4180 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1288 = sqrt(((_1264 * _1264) + (_1263 * _1263)) + (_1265 * _1265)) / (_1176 + 9.9999997473787516355514526367188e-06);
        float _4191 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1289 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1290 = _1289 * 2.0;
        float _1294 = (1.0 - _1289) / (_1289 + 1.0);
        float _4202 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1295 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1304 = ((((1.0 - _1295) * (_1290 + 2.0)) * exp2(log2(isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * (_1290 + 1.0))) + _1295) * _1176;
        _1312 = _1143;
        _1314 = _1142;
        _1315 = _1141;
        _1316 = _1153;
        _1317 = _1152;
        _1318 = _1151;
        _1319 = _1163;
        _1320 = _1162;
        _1321 = _1161;
        _1322 = _1176;
        _1323 = _1175;
        _1324 = _1174;
        _1325 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)));
        _1326 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0)));
        _1327 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0)));
    }
    else
    {
        _1312 = _1313;
        _1314 = _1313;
        _1315 = _1313;
        _1316 = _1313;
        _1317 = _1313;
        _1318 = _1313;
        _1319 = _1313;
        _1320 = _1313;
        _1321 = _1313;
        _1322 = _1313;
        _1323 = _1313;
        _1324 = _1313;
        _1325 = 0.0;
        _1326 = 0.0;
        _1327 = 0.0;
    }
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1353 = fma(_1012, cbModelParam._m0[30u].z, fma(_1008, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1004));
        float _1357 = fma(_1012, cbModelParam._m0[31u].z, fma(_1008, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1004));
        float _1361 = fma(_1012, cbModelParam._m0[32u].z, fma(_1008, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1004));
        float _1384 = _1004 + _798;
        float _1385 = _1008 + _799;
        float _1386 = _1012 + _800;
        float _1396 = fma(_1386, cbModelParam._m0[30u].z, fma(_1385, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1384)) - _1353;
        float _1397 = fma(_1386, cbModelParam._m0[31u].z, fma(_1385, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1384)) - _1357;
        float _1398 = fma(_1386, cbModelParam._m0[32u].z, fma(_1385, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1384)) - _1361;
        float _1402 = inversesqrt(dot(vec3(_1396, _1397, _1398), vec3(_1396, _1397, _1398)));
        float _1415 = ((_1402 * _1396) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1353 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1416 = ((_1402 * _1397) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1357 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1417 = ((_1402 * _1398) / cbModelParam._m0[35u].z) + ((((((_1361 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1415, _1416, _1417), 0.0);
        float _1452 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1453 = _1452 * (_1419.x + (-0.5));
        float _1454 = _1452 * (_1419.y + (-0.5));
        float _1455 = _1452 * (_1419.z + (-0.5));
        float _1462 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1463 = _1462 * (_1426.x + (-0.5));
        float _1464 = _1462 * (_1426.y + (-0.5));
        float _1465 = _1462 * (_1426.z + (-0.5));
        float _1472 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1473 = _1472 * (_1433.x + (-0.5));
        float _1474 = _1472 * (_1433.y + (-0.5));
        float _1475 = _1472 * (_1433.z + (-0.5));
        float _1482 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1483 = _1482 * (_1440.x + (-0.5));
        float _1484 = _1482 * (_1440.y + (-0.5));
        float _1485 = _1482 * (_1440.z + (-0.5));
        float _1486 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = _1453 * 0.5;
        float _1490 = _1463 * 0.5;
        float _1491 = _1473 * 0.5;
        float _1492 = dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491));
        float _1497 = (_1492 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1492);
        float _1505 = (dot(vec3(_798, _799, _800), vec3(_1497 * _1489, _1497 * _1490, _1497 * _1491)) + 1.0) * 0.5;
        float _4243 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1514 = sqrt(((_1490 * _1490) + (_1489 * _1489)) + (_1491 * _1491)) / (_1486 + 9.9999997473787516355514526367188e-06);
        float _4254 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1516 = _1515 * 2.0;
        float _1520 = (1.0 - _1515) / (_1515 + 1.0);
        float _4265 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1530 = ((((1.0 - _1521) * (_1516 + 2.0)) * exp2(log2(isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (_1516 + 1.0))) + _1521) * _1486;
        float _1531 = _1454 * 0.5;
        float _1532 = _1464 * 0.5;
        float _1533 = _1474 * 0.5;
        float _1534 = dot(vec3(_1531, _1532, _1533), vec3(_1531, _1532, _1533));
        float _1539 = (_1534 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1534);
        float _1547 = (dot(vec3(_798, _799, _800), vec3(_1539 * _1531, _1539 * _1532, _1539 * _1533)) + 1.0) * 0.5;
        float _4276 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1556 = sqrt(((_1532 * _1532) + (_1531 * _1531)) + (_1533 * _1533)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4287 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1557 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
        float _1558 = _1557 * 2.0;
        float _1562 = (1.0 - _1557) / (_1557 + 1.0);
        float _4298 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1563 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1572 = ((((1.0 - _1563) * (_1558 + 2.0)) * exp2(log2(isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0))) * (_1558 + 1.0))) + _1563) * _1487;
        float _1573 = _1455 * 0.5;
        float _1574 = _1465 * 0.5;
        float _1575 = _1475 * 0.5;
        float _1576 = dot(vec3(_1573, _1574, _1575), vec3(_1573, _1574, _1575));
        float _1581 = (_1576 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1576);
        float _1589 = (dot(vec3(_798, _799, _800), vec3(_1581 * _1573, _1581 * _1574, _1581 * _1575)) + 1.0) * 0.5;
        float _4309 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1598 = sqrt(((_1574 * _1574) + (_1573 * _1573)) + (_1575 * _1575)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4320 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1599 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1600 = _1599 * 2.0;
        float _1604 = (1.0 - _1599) / (_1599 + 1.0);
        float _4331 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1605 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1614 = ((((1.0 - _1605) * (_1600 + 2.0)) * exp2(log2(isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * (_1600 + 1.0))) + _1605) * _1488;
        _1622 = _1455;
        _1623 = _1454;
        _1624 = _1453;
        _1625 = _1465;
        _1626 = _1464;
        _1627 = _1463;
        _1628 = _1475;
        _1629 = _1474;
        _1630 = _1473;
        _1631 = _1488;
        _1632 = _1487;
        _1633 = _1486;
        _1634 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0)));
        _1635 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0)));
        _1636 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)));
    }
    else
    {
        _1622 = _1313;
        _1623 = _1313;
        _1624 = _1313;
        _1625 = _1313;
        _1626 = _1313;
        _1627 = _1313;
        _1628 = _1313;
        _1629 = _1313;
        _1630 = _1313;
        _1631 = _1313;
        _1632 = _1313;
        _1633 = _1313;
        _1634 = 0.0;
        _1635 = 0.0;
        _1636 = 0.0;
    }
    float _1646 = (cbModelParam._m0[1u].x * (_1634 - _1325)) + _1325;
    float _1647 = (cbModelParam._m0[1u].x * (_1635 - _1326)) + _1326;
    float _1648 = (cbModelParam._m0[1u].x * (_1636 - _1327)) + _1327;
    float _1669 = fma(_1648, cbSceneParam._m0[89u].z, fma(_1647, cbSceneParam._m0[89u].y, _1646 * cbSceneParam._m0[89u].x));
    float _1672 = fma(_1648, cbSceneParam._m0[90u].z, fma(_1647, cbSceneParam._m0[90u].y, _1646 * cbSceneParam._m0[90u].x));
    float _1675 = fma(_1648, cbSceneParam._m0[91u].z, fma(_1647, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1646));
    float _1690 = _951 * 0.5;
    float _1691 = _952 * 0.5;
    float _1692 = _953 * 0.5;
    float _1693 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1624, _1627, _1630, _1633));
    float _1696 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1623, _1626, _1629, _1632));
    float _1699 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1622, _1625, _1628, _1631));
    float _1733;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1706 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1312, _1316, _1319, _1322));
        float _1710 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1314, _1317, _1320, _1323));
        float _1714 = dot(vec4(_1690, _1691, _1692, 1.0), vec4(_1315, _1318, _1321, _1324));
        float _1721 = dot(vec4(cbModelParam._m0[39u]), vec4(_1690, _1691, _1692, 1.0));
        _1733 = dot(vec3(isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)), isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)), isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1721) ? 0.0 : (isnan(0.0) ? _1721 : max(0.0, _1721))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1733 = 1.0;
    }
    float _1744;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1735 = dot(vec4(cbModelParam._m0[40u]), vec4(_1690, _1691, _1692, 1.0));
        _1744 = dot(vec3(isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)), isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)), isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1735) ? 0.0 : (isnan(0.0) ? _1735 : max(0.0, _1735))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1744 = 1.0;
    }
    float _1748 = (_1744 * cbModelParam._m0[1u].x) + (_1733 * (1.0 - cbModelParam._m0[1u].x));
    float _1758 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _801);
    float _1759 = isnan(_1758) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1758 : min(cbModelParam._m0[25u].z, _1758));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1806 = fma(_1012, cbModelParam._m0[13u].z, fma(_1008, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1004)) + cbModelParam._m0[13u].w;
        float _1810 = fma(_1012, cbModelParam._m0[14u].z, fma(_1008, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1004)) + cbModelParam._m0[14u].w;
        float _1814 = fma(_1012, cbModelParam._m0[15u].z, fma(_1008, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1004)) + cbModelParam._m0[15u].w;
        float _1817 = fma(_953, cbModelParam._m0[13u].z, fma(_952, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _951));
        float _1820 = fma(_953, cbModelParam._m0[14u].z, fma(_952, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _951));
        float _1823 = fma(_953, cbModelParam._m0[15u].z, fma(_952, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _951));
        float _1851;
        if (_1817 > 0.0)
        {
            _1851 = abs((1.0 - _1806) / _1817);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1806 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1851 = frontier_phi_16_14_ladder;
        }
        float _2022;
        if (_1820 > 0.0)
        {
            _2022 = abs((1.0 - _1810) / _1820);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1810 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2022 = frontier_phi_25_21_ladder;
        }
        float _2316;
        if (_1823 > 0.0)
        {
            _2316 = abs((1.0 - _1814) / _1823);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1823 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1814 + 1.0) / _1823);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2316 = frontier_phi_37_32_ladder;
        }
        float _2318 = isnan(_2022) ? _1851 : (isnan(_1851) ? _2022 : min(_1851, _2022));
        float _2319 = isnan(_2316) ? _2318 : (isnan(_2318) ? _2316 : min(_2318, _2316));
        float _2323 = (_2319 * _1817) + _1806;
        float _2324 = (_2319 * _1820) + _1810;
        float _2325 = (_2319 * _1823) + _1814;
        float _2326 = _2319 * 9.9999997473787516355514526367188e-05;
        float _2328 = (-1.0) - _2326;
        float _2330 = _2326 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2325 > _2330) || ((_2325 < _2328) || ((_2324 > _2330) || ((_2324 < _2328) || ((_2323 < _2328) || (_2323 > _2330))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2470 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2325, cbModelParam._m0[9u].z, fma(_2324, cbModelParam._m0[9u].y, _2323 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2325, cbModelParam._m0[10u].z, fma(_2324, cbModelParam._m0[10u].y, _2323 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2325, cbModelParam._m0[11u].z, fma(_2324, cbModelParam._m0[11u].y, _2323 * cbModelParam._m0[11u].x))), _1759);
            frontier_phi_15_37_ladder = _2470.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2470.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2470.z * cbModelParam._m0[1u].y;
        }
        _1839 = frontier_phi_15_37_ladder_1;
        _1841 = frontier_phi_15_37_ladder;
        _1843 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1827 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_951, _952, _953), _1759);
        _1839 = _1827.x * cbModelParam._m0[1u].y;
        _1841 = _1827.y * cbModelParam._m0[1u].y;
        _1843 = _1827.z * cbModelParam._m0[1u].y;
    }
    float _1847 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _801);
    float _1848 = isnan(_1847) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1847 : min(cbModelParam._m0[25u].w, _1847));
    float _1939;
    float _1941;
    float _1943;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1903 = fma(_1012, cbModelParam._m0[21u].z, fma(_1008, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1004)) + cbModelParam._m0[21u].w;
        float _1907 = fma(_1012, cbModelParam._m0[22u].z, fma(_1008, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1004)) + cbModelParam._m0[22u].w;
        float _1911 = fma(_1012, cbModelParam._m0[23u].z, fma(_1008, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1004)) + cbModelParam._m0[23u].w;
        float _1914 = fma(_953, cbModelParam._m0[21u].z, fma(_952, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _951));
        float _1917 = fma(_953, cbModelParam._m0[22u].z, fma(_952, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _951));
        float _1920 = fma(_953, cbModelParam._m0[23u].z, fma(_952, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _951));
        float _2027;
        if (_1914 > 0.0)
        {
            _2027 = abs((1.0 - _1903) / _1914);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1914 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1903 + 1.0) / _1914);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2027 = frontier_phi_27_23_ladder;
        }
        float _2343;
        if (_1917 > 0.0)
        {
            _2343 = abs((1.0 - _1907) / _1917);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1917 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1907 + 1.0) / _1917);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2343 = frontier_phi_39_34_ladder;
        }
        float _2670;
        if (_1920 > 0.0)
        {
            _2670 = abs((1.0 - _1911) / _1920);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1920 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1911 + 1.0) / _1920);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2670 = frontier_phi_49_46_ladder;
        }
        float _2672 = isnan(_2343) ? _2027 : (isnan(_2027) ? _2343 : min(_2027, _2343));
        float _2673 = isnan(_2670) ? _2672 : (isnan(_2672) ? _2670 : min(_2672, _2670));
        float _2677 = (_2673 * _1914) + _1903;
        float _2678 = (_2673 * _1917) + _1907;
        float _2679 = (_2673 * _1920) + _1911;
        float _2680 = _2673 * 9.9999997473787516355514526367188e-05;
        float _2681 = (-1.0) - _2680;
        float _2683 = _2680 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2679 > _2683) || ((_2679 < _2681) || ((_2678 > _2683) || ((_2678 < _2681) || ((_2677 < _2681) || (_2677 > _2683))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2797 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2679, cbModelParam._m0[17u].z, fma(_2678, cbModelParam._m0[17u].y, _2677 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2679, cbModelParam._m0[18u].z, fma(_2678, cbModelParam._m0[18u].y, _2677 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2679, cbModelParam._m0[19u].z, fma(_2678, cbModelParam._m0[19u].y, _2677 * cbModelParam._m0[19u].x))), _1848);
            frontier_phi_24_49_ladder = _2797.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2797.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2797.x * cbModelParam._m0[1u].z;
        }
        _1939 = frontier_phi_24_49_ladder_2;
        _1941 = frontier_phi_24_49_ladder_1;
        _1943 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1923 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_951, _952, _953), _1848);
        _1939 = _1923.x * cbModelParam._m0[1u].z;
        _1941 = _1923.y * cbModelParam._m0[1u].z;
        _1943 = _1923.z * cbModelParam._m0[1u].z;
    }
    float _1955 = ((((1.0 - _972) * ((_959 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_972 * _959)) * _943;
    float _1956 = _1955 * ((cbModelParam._m0[1u].w * (_1939 - _1839)) + _1839);
    float _1957 = _1955 * ((cbModelParam._m0[1u].w * (_1941 - _1841)) + _1841);
    float _1958 = _1955 * ((cbModelParam._m0[1u].w * (_1943 - _1843)) + _1843);
    float _1961 = fma(_1958, cbSceneParam._m0[89u].z, fma(_1957, cbSceneParam._m0[89u].y, _1956 * cbSceneParam._m0[89u].x));
    float _1964 = fma(_1958, cbSceneParam._m0[90u].z, fma(_1957, cbSceneParam._m0[90u].y, _1956 * cbSceneParam._m0[90u].x));
    float _1967 = fma(_1958, cbSceneParam._m0[91u].z, fma(_1957, cbSceneParam._m0[91u].y, _1956 * cbSceneParam._m0[91u].x));
    float _2001 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2005 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2009 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2013 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2014 = _2001 / _2013;
    float _2015 = _2005 / _2013;
    float _2016 = _2009 / _2013;
    float _2163;
    float _2164;
    float _2165;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2043 = ((uint(_2016 > cbSceneParam._m0[59u].y) + uint(_2016 > cbSceneParam._m0[59u].x)) + uint(_2016 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2044 = _2043 + 43u;
        uint _2052 = _2043 + 44u;
        uint _2060 = _2043 + 45u;
        uint _2068 = _2043 + 46u;
        float _2079 = fma(_2013, cbSceneParam._m0[_2044].w, fma(_2009, cbSceneParam._m0[_2044].z, fma(_2005, cbSceneParam._m0[_2044].y, _2001 * cbSceneParam._m0[_2044].x)));
        float _2083 = fma(_2013, cbSceneParam._m0[_2052].w, fma(_2009, cbSceneParam._m0[_2052].z, fma(_2005, cbSceneParam._m0[_2052].y, _2001 * cbSceneParam._m0[_2052].x)));
        float _2091 = fma(_2013, cbSceneParam._m0[_2068].w, fma(_2009, cbSceneParam._m0[_2068].z, fma(_2005, cbSceneParam._m0[_2068].y, _2001 * cbSceneParam._m0[_2068].x)));
        float _2096 = cbSceneParam._m0[33u].z * _2091;
        float _2098 = cbSceneParam._m0[33u].w * _2091;
        float _2101 = fma(_2013, cbSceneParam._m0[_2060].w, fma(_2009, cbSceneParam._m0[_2060].z, fma(_2005, cbSceneParam._m0[_2060].y, _2001 * cbSceneParam._m0[_2060].x))) / _2091;
        float _2149 = (cbSceneParam._m0[33u].x - sqrt(((_2015 * _2015) + (_2014 * _2014)) + (_2016 * _2016))) * cbSceneParam._m0[33u].y;
        float _4457 = isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0));
        float _2156 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2096 + _2079) / _2091, (_2098 + _2083) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2098 + _2079) / _2091, (_2083 - _2096) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2079 - _2096) / _2091, (_2083 - _2098) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2079 - _2098) / _2091, (_2096 + _2083) / _2091), _2101), 0.0)).x), vec4(0.25)));
        _2163 = 1.0 - (_2156 * cbSceneParam._m0[34u].x);
        _2164 = 1.0 - (_2156 * cbSceneParam._m0[34u].y);
        _2165 = 1.0 - (_2156 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2163 = 1.0;
        _2164 = 1.0;
        _2165 = 1.0;
    }
    float _2229;
    float _2231;
    float _2233;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2217 = fma(_2013, cbSceneParam._m0[63u].w, fma(_2009, cbSceneParam._m0[63u].z, fma(_2005, cbSceneParam._m0[63u].y, _2001 * cbSceneParam._m0[63u].x)));
        float _2218 = fma(_2013, cbSceneParam._m0[60u].w, fma(_2009, cbSceneParam._m0[60u].z, fma(_2005, cbSceneParam._m0[60u].y, _2001 * cbSceneParam._m0[60u].x))) / _2217;
        float _2219 = fma(_2013, cbSceneParam._m0[61u].w, fma(_2009, cbSceneParam._m0[61u].z, fma(_2005, cbSceneParam._m0[61u].y, _2001 * cbSceneParam._m0[61u].x))) / _2217;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2218 >= cbSceneParam._m0[64u].x) && (_2219 >= cbSceneParam._m0[64u].y)) && (_2218 <= cbSceneParam._m0[64u].z)) && (_2219 <= cbSceneParam._m0[64u].w))
        {
            float _2356 = fma(_2013, cbSceneParam._m0[62u].w, fma(_2009, cbSceneParam._m0[62u].z, fma(_2005, cbSceneParam._m0[62u].y, _2001 * cbSceneParam._m0[62u].x))) / _2217;
            float _2360 = isnan(cbSceneParam._m0[41u].w) ? _2356 : (isnan(_2356) ? cbSceneParam._m0[41u].w : max(_2356, cbSceneParam._m0[41u].w));
            float _2403 = (cbSceneParam._m0[33u].x - sqrt(((_2015 * _2015) + (_2014 * _2014)) + (_2016 * _2016))) * cbSceneParam._m0[33u].y;
            float _4473 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
            float _2410 = (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2218, cbSceneParam._m0[33u].w + _2219), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2218, _2219 - cbSceneParam._m0[33u].z), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2218 - cbSceneParam._m0[33u].z, _2219 - cbSceneParam._m0[33u].w), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2218 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2219), _2360), 0.0)).x), vec4(0.25)));
            float _2414 = 1.0 - (_2410 * cbSceneParam._m0[34u].x);
            float _2415 = 1.0 - (_2410 * cbSceneParam._m0[34u].y);
            float _2416 = 1.0 - (_2410 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2415) ? _2164 : (isnan(_2164) ? _2415 : min(_2164, _2415));
            frontier_phi_36_35_ladder_1 = isnan(_2416) ? _2165 : (isnan(_2165) ? _2416 : min(_2165, _2416));
            frontier_phi_36_35_ladder_2 = isnan(_2414) ? _2163 : (isnan(_2163) ? _2414 : min(_2163, _2414));
        }
        else
        {
            frontier_phi_36_35_ladder = _2164;
            frontier_phi_36_35_ladder_1 = _2165;
            frontier_phi_36_35_ladder_2 = _2163;
        }
        _2229 = frontier_phi_36_35_ladder_2;
        _2231 = frontier_phi_36_35_ladder;
        _2233 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2229 = _2163;
        _2231 = _2164;
        _2233 = _2165;
    }
    uvec4 _2237 = floatBitsToUint(cbInstanceData._m0[_733]);
    uint _2239 = _2237.x * 14u;
    uint _2240 = _2239 + 13u;
    float _2247 = _943 + (-1.0);
    float _2252 = (cbLight._m0[_2240].x * _2247) + 1.0;
    float _2253 = (cbLight._m0[_2240].y * _2247) + 1.0;
    float _2254 = (cbLight._m0[_2240].z * _2247) + 1.0;
    float _2255 = (cbLight._m0[_2240].w * _2247) + 1.0;
    uint _2256 = _2239 + 5u;
    float _2262 = isnan(1.0) ? _2253 : (isnan(_2253) ? 1.0 : min(_2253, 1.0));
    uint _2266 = _2239 + 4u;
    float _2275 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
    uint _2279 = _2239 | 1u;
    float _2290 = dot(vec3(cbLight._m0[_2239].xyz), vec3(_798, _799, _800));
    float _2293 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_798, _799, _800));
    float _4509 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _4520 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
    float _2298 = (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * 0.3183098733425140380859375;
    float _2300 = (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * 0.3183098733425140380859375;
    float _2307 = ((cbLight._m0[_2256].x * _2262) * _2300) + (((cbLight._m0[_2266].x * _2229) * _2275) * _2298);
    float _2308 = ((_2262 * cbLight._m0[_2256].y) * _2300) + (((cbLight._m0[_2266].y * _2231) * _2275) * _2298);
    float _2309 = ((_2262 * cbLight._m0[_2256].z) * _2300) + (((cbLight._m0[_2266].z * _2233) * _2275) * _2298);
    uvec4 _2313 = floatBitsToUint(cbLight._m0[_2239 + 12u]);
    bool _2315 = _2313.x == 0u;
    float _2417;
    float _2419;
    float _2421;
    if (_2315)
    {
        _2417 = _2307;
        _2419 = _2308;
        _2421 = _2309;
    }
    else
    {
        uint _2425 = _2239 + 6u;
        float _2441 = (dot(vec3(cbLight._m0[_2239 + 2u].xyz), vec3(_798, _799, _800)) * 0.5) + 0.5;
        float _2442 = _2441 * _2441;
        float _4531 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
        float _2443 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _2444 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
        _2417 = (((cbLight._m0[_2425].x * 0.3183098733425140380859375) * _2443) * _2444) + _2307;
        _2419 = (((cbLight._m0[_2425].y * 0.3183098733425140380859375) * _2443) * _2444) + _2308;
        _2421 = (((cbLight._m0[_2425].z * 0.3183098733425140380859375) * _2443) * _2444) + _2309;
    }
    bool _2424 = _2313.y == 0u;
    float _2479;
    float _2481;
    float _2483;
    if (_2424)
    {
        _2479 = _2417;
        _2481 = _2419;
        _2483 = _2421;
    }
    else
    {
        uint _2641 = _2239 + 7u;
        float _2657 = (dot(vec3(cbLight._m0[_2239 + 3u].xyz), vec3(_798, _799, _800)) * 0.5) + 0.5;
        float _2658 = _2657 * _2657;
        float _4547 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
        float _2659 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
        float _2660 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
        _2479 = (((cbLight._m0[_2641].x * 0.3183098733425140380859375) * _2659) * _2660) + _2417;
        _2481 = (((cbLight._m0[_2641].y * 0.3183098733425140380859375) * _2659) * _2660) + _2419;
        _2483 = (((cbLight._m0[_2641].z * 0.3183098733425140380859375) * _2659) * _2660) + _2421;
    }
    uint _2486 = _2239 + 8u;
    float _2499 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2239].w)) * _801) * 0.949999988079071044921875);
    float _2500 = _2499 * _2499;
    float _2501 = cbLight._m0[_2239].x + _873;
    float _2502 = cbLight._m0[_2239].y + _874;
    float _2503 = cbLight._m0[_2239].z + _875;
    float _2507 = inversesqrt(dot(vec3(_2501, _2502, _2503), vec3(_2501, _2502, _2503)));
    float _2508 = _2507 * _2501;
    float _2509 = _2507 * _2502;
    float _2510 = _2507 * _2503;
    float _2511 = dot(vec3(_798, _799, _800), vec3(cbLight._m0[_2239].xyz));
    float _4563 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
    float _2514 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
    float _4574 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
    float _2515 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
    float _2516 = dot(vec3(_798, _799, _800), vec3(_2508, _2509, _2510));
    float _4585 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2519 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
    float _2520 = dot(vec3(cbLight._m0[_2239].xyz), vec3(_2508, _2509, _2510));
    float _4596 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2524 = _2500 * _2500;
    float _2528 = ((_2519 * _2519) * (_2524 + (-1.0))) + 1.0;
    float _2539 = (exp2(log2(1.0 - (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2540 = 1.0 - _2500;
    float _2551 = (0.5 / (((_2515 * ((_2514 * _2540) + _2500)) + 9.9999999392252902907785028219223e-09) + (((_2515 * _2540) + _2500) * _2514))) * _2514;
    float _4607 = isnan(0.0) ? _2551 : (isnan(_2551) ? 0.0 : max(_2551, 0.0));
    float _2553 = (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0))) * (_2524 / ((_2528 * _2528) * 3.141590118408203125));
    uint _2567 = _2239 + 9u;
    float _2578 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2279].w)) * _801) * 0.949999988079071044921875);
    float _2579 = _2578 * _2578;
    float _2580 = cbLight._m0[_2279].x + _873;
    float _2581 = cbLight._m0[_2279].y + _874;
    float _2582 = cbLight._m0[_2279].z + _875;
    float _2586 = inversesqrt(dot(vec3(_2580, _2581, _2582), vec3(_2580, _2581, _2582)));
    float _2587 = _2586 * _2580;
    float _2588 = _2586 * _2581;
    float _2589 = _2586 * _2582;
    float _2590 = dot(vec3(_798, _799, _800), vec3(cbLight._m0[_2279].xyz));
    float _4618 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
    float _2593 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
    float _2594 = dot(vec3(_798, _799, _800), vec3(_2587, _2588, _2589));
    float _4629 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
    float _2597 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
    float _2598 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_2587, _2588, _2589));
    float _4640 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2602 = _2579 * _2579;
    float _2606 = ((_2597 * _2597) * (_2602 + (-1.0))) + 1.0;
    float _2615 = (exp2(log2(1.0 - (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2616 = 1.0 - _2579;
    float _2626 = (0.5 / (((_2515 * ((_2593 * _2616) + _2579)) + 9.9999999392252902907785028219223e-09) + (((_2515 * _2616) + _2579) * _2593))) * _2593;
    float _4651 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2628 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (_2602 / ((_2606 * _2606) * 3.141590118408203125));
    float _2638 = (((_2615 * cbLight._m0[_2567].x) * _2628) * _2262) + ((((cbLight._m0[_2486].x * _2229) * _2539) * _2553) * _2275);
    float _2639 = (((_2615 * cbLight._m0[_2567].y) * _2628) * _2262) + ((((cbLight._m0[_2486].y * _2231) * _2539) * _2553) * _2275);
    float _2640 = (((_2615 * cbLight._m0[_2567].z) * _2628) * _2262) + ((((cbLight._m0[_2486].z * _2233) * _2539) * _2553) * _2275);
    float _2696;
    float _2698;
    float _2700;
    if (_2315)
    {
        _2696 = _2638;
        _2698 = _2639;
        _2700 = _2640;
    }
    else
    {
        uint _2702 = _2239 + 2u;
        uint _2706 = _2239 + 10u;
        float _2720 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2702].w)) * _801) * 0.949999988079071044921875);
        float _2721 = _2720 * _2720;
        float _2722 = cbLight._m0[_2702].x + _873;
        float _2723 = cbLight._m0[_2702].y + _874;
        float _2724 = cbLight._m0[_2702].z + _875;
        float _2728 = inversesqrt(dot(vec3(_2722, _2723, _2724), vec3(_2722, _2723, _2724)));
        float _2729 = _2728 * _2722;
        float _2730 = _2728 * _2723;
        float _2731 = _2728 * _2724;
        float _2732 = dot(vec3(_798, _799, _800), vec3(cbLight._m0[_2702].xyz));
        float _4662 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
        float _2735 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
        float _2736 = dot(vec3(_798, _799, _800), vec3(_2729, _2730, _2731));
        float _4673 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
        float _2739 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2740 = dot(vec3(cbLight._m0[_2702].xyz), vec3(_2729, _2730, _2731));
        float _4684 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2744 = _2721 * _2721;
        float _2748 = ((_2739 * _2739) * (_2744 + (-1.0))) + 1.0;
        float _2757 = (exp2(log2(1.0 - (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2758 = 1.0 - _2721;
        float _2768 = (0.5 / (((_2515 * ((_2735 * _2758) + _2721)) + 9.9999999392252902907785028219223e-09) + (((_2515 * _2758) + _2721) * _2735))) * _2735;
        float _4695 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
        float _2770 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (_2744 / ((_2748 * _2748) * 3.141590118408203125));
        float _2771 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
        _2696 = (((_2757 * cbLight._m0[_2706].x) * _2770) * _2771) + _2638;
        _2698 = (((_2757 * cbLight._m0[_2706].y) * _2770) * _2771) + _2639;
        _2700 = (((_2757 * cbLight._m0[_2706].z) * _2770) * _2771) + _2640;
    }
    float _2802;
    float _2804;
    float _2806;
    if (_2424)
    {
        _2802 = _2696;
        _2804 = _2698;
        _2806 = _2700;
    }
    else
    {
        uint _2813 = _2239 + 3u;
        uint _2817 = _2239 + 11u;
        float _2831 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2813].w)) * _801) * 0.949999988079071044921875);
        float _2832 = _2831 * _2831;
        float _2833 = cbLight._m0[_2813].x + _873;
        float _2834 = cbLight._m0[_2813].y + _874;
        float _2835 = cbLight._m0[_2813].z + _875;
        float _2839 = inversesqrt(dot(vec3(_2833, _2834, _2835), vec3(_2833, _2834, _2835)));
        float _2840 = _2839 * _2833;
        float _2841 = _2839 * _2834;
        float _2842 = _2839 * _2835;
        float _2843 = dot(vec3(_798, _799, _800), vec3(cbLight._m0[_2813].xyz));
        float _4711 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
        float _2846 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
        float _2847 = dot(vec3(_798, _799, _800), vec3(_2840, _2841, _2842));
        float _4722 = isnan(0.0) ? _2847 : (isnan(_2847) ? 0.0 : max(_2847, 0.0));
        float _2850 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2851 = dot(vec3(cbLight._m0[_2813].xyz), vec3(_2840, _2841, _2842));
        float _4733 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
        float _2855 = _2832 * _2832;
        float _2859 = ((_2850 * _2850) * (_2855 + (-1.0))) + 1.0;
        float _2868 = (exp2(log2(1.0 - (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2869 = 1.0 - _2832;
        float _2879 = (0.5 / (((_2515 * ((_2846 * _2869) + _2832)) + 9.9999999392252902907785028219223e-09) + (((_2515 * _2869) + _2832) * _2846))) * _2846;
        float _4744 = isnan(0.0) ? _2879 : (isnan(_2879) ? 0.0 : max(_2879, 0.0));
        float _2881 = (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0))) * (_2855 / ((_2859 * _2859) * 3.141590118408203125));
        float _2882 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
        _2802 = (((_2868 * cbLight._m0[_2817].x) * _2881) * _2882) + _2696;
        _2804 = (((_2868 * cbLight._m0[_2817].y) * _2881) * _2882) + _2698;
        _2806 = (((_2868 * cbLight._m0[_2817].z) * _2881) * _2882) + _2700;
    }
    float _2947;
    float _2949;
    float _2951;
    float _2953;
    float _2955;
    float _2957;
    if (_2237.y == 0u)
    {
        uvec4 _2903 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2904 = _2903.x;
        uint _2915 = uint((float(_2903.y) * floor(float(uint(cbSceneParam._m0[85u].y * _882) / _2904))) + floor(float(uint(cbSceneParam._m0[85u].x * _881) / _2904)));
        float _2925 = (log2(_2016 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2926 = isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0));
        uint _2929 = uint(isnan(14.0) ? _2926 : (isnan(_2926) ? 14.0 : min(_2926, 14.0)));
        uvec4 _2934 = texelFetch(g_lightClusterGridBuffer, int(((_2929 << 2u) + (_2915 << 6u)) >> 2u));
        uint _2935 = _2934.x;
        uint _2936 = _2903.z;
        float _3039;
        float _3041;
        float _3043;
        float _3045;
        float _3047;
        float _3049;
        if (((((1u << ((_2936 >> 4u) & 15u)) + 4294967295u) & _2935) == 0u) || ((_2936 & 240u) == 0u))
        {
            _3039 = 0.0;
            _3041 = 0.0;
            _3043 = 0.0;
            _3045 = 0.0;
            _3047 = 0.0;
            _3049 = 0.0;
        }
        else
        {
            float _3040;
            float _3042;
            float _3044;
            float _3046;
            float _3048;
            float _3050;
            float _3183 = 0.0;
            float _3184 = 0.0;
            float _3185 = 0.0;
            float _3186 = 0.0;
            float _3187 = 0.0;
            float _3188 = 0.0;
            uint _3189 = 0u;
            uint _3198;
            bool _3199;
            for (;;)
            {
                _3198 = texelFetch(g_lightClassification, int((((_2929 << 5u) + (_2915 << 9u)) + (_3189 << 2u)) >> 2u)).x;
                _3199 = _3198 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3199)
                {
                    frontier_phi_68_pred = _3188;
                    frontier_phi_68_pred_1 = _3187;
                    frontier_phi_68_pred_2 = _3186;
                    frontier_phi_68_pred_3 = _3184;
                    frontier_phi_68_pred_4 = _3183;
                    frontier_phi_68_pred_5 = _3185;
                }
                else
                {
                    float _3307;
                    float _3308;
                    float _3309;
                    float _3310;
                    float _3311;
                    float _3312;
                    uint _3313;
                    _3307 = _3183;
                    _3308 = _3184;
                    _3309 = _3185;
                    _3310 = _3186;
                    _3311 = _3187;
                    _3312 = _3188;
                    _3313 = _3198;
                    float _3239;
                    float _3240;
                    float _3241;
                    float _3242;
                    float _3243;
                    float _3244;
                    for (;;)
                    {
                        uint _3317 = uint(findLSB(_3313)) + (_3189 << 5u);
                        uint _3314 = (_3313 + 4294967295u) & _3313;
                        uint _3319 = _3317 * 48u;
                        vec4 _3333 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3319)).x, texelFetch(g_PointLightRenderingBuffer, int(_3319 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3319 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3319 + 3u)).x));
                        uint _3339 = (_3317 * 48u) + 4u;
                        vec4 _3352 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3339)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 3u)).x));
                        uint _3358 = (_3317 * 48u) + 8u;
                        vec3 _3369 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3358)).x, texelFetch(g_PointLightRenderingBuffer, int(_3358 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3358 + 2u)).x));
                        float _3373 = _3333.x - _2014;
                        float _3374 = _3333.y - _2015;
                        float _3375 = _3333.z - _2016;
                        float _3376 = dot(vec3(_3373, _3374, _3375), vec3(_3373, _3374, _3375));
                        float _3379 = inversesqrt(_3376);
                        float _3380 = _3379 * _3373;
                        float _3381 = _3379 * _3374;
                        float _3382 = _3379 * _3375;
                        float _3383 = dot(vec3(_900, _903, _906), vec3(_3380, _3381, _3382));
                        float _3388 = 1.0 - (_3376 * _3333.w);
                        float _4770 = isnan(0.0) ? _3388 : (isnan(_3388) ? 0.0 : max(_3388, 0.0));
                        float _3389 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                        float _3390 = sqrt(_3376) * _3352.w;
                        float _3393 = 1.39999997615814208984375 / (_3390 + 1.39999997615814208984375);
                        float _3394 = _3393 * _3393;
                        float _3397 = ((1.0 - _3394) * _3383) + _3394;
                        float _3400 = _3390 * _3390;
                        float _3404 = ((isnan(0.0) ? _3397 : (isnan(_3397) ? 0.0 : max(_3397, 0.0))) * _3389) / ((_3400 * 0.699999988079071044921875) + 1.0);
                        float _3408 = (-0.0) - _2014;
                        float _3409 = (-0.0) - _2015;
                        float _3410 = (-0.0) - _2016;
                        float _3414 = inversesqrt(dot(vec3(_3408, _3409, _3410), vec3(_3408, _3409, _3410)));
                        float _3415 = _3414 * _3408;
                        float _3416 = _3414 * _3409;
                        float _3417 = _3414 * _3410;
                        float _3424 = exp2(log2(1.0 / ((_3400 * 3.5) + 5.0)) * 0.25);
                        float _3425 = 1.0 - _959;
                        float _3432 = sqrt(1.0 - ((1.0 - (_3425 * _3425)) * (1.0 - (_3424 * _3424))));
                        float _3433 = _3432 * _3432;
                        float _3434 = _3433 * _3433;
                        float _3435 = _3415 + _3380;
                        float _3436 = _3416 + _3381;
                        float _3437 = _3417 + _3382;
                        float _3441 = inversesqrt(dot(vec3(_3435, _3436, _3437), vec3(_3435, _3436, _3437)));
                        float _3445 = dot(vec3(_900, _903, _906), vec3(_3415, _3416, _3417));
                        float _4786 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0));
                        float _3448 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                        float _3449 = dot(vec3(_900, _903, _906), vec3(_3441 * _3435, _3441 * _3436, _3441 * _3437));
                        float _4797 = isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : max(_3449, 0.0));
                        float _3452 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                        float _3456 = ((_3452 * _3452) * (_3434 + (-1.0))) + 1.0;
                        float _3457 = _3393 * _3433;
                        float _3458 = _3457 * _3457;
                        float _3461 = ((1.0 - _3458) * _3383) + _3458;
                        float _4808 = isnan(0.0) ? _3461 : (isnan(_3461) ? 0.0 : max(_3461, 0.0));
                        float _3462 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                        float _3463 = 1.0 - _3433;
                        float _3473 = (0.5 / (((_3462 * ((_3448 * _3463) + _3433)) + 9.9999999392252902907785028219223e-09) + (((_3462 * _3463) + _3433) * _3448))) * _3462;
                        float _4819 = isnan(0.0) ? _3473 : (isnan(_3473) ? 0.0 : max(_3473, 0.0));
                        float _3484 = (((_3434 * 3.1415927410125732421875) * (isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0)))) / ((_3456 * _3456) * ((_3400 * 2.1991131305694580078125) + 3.141590118408203125))) * _3389;
                        _3242 = (_3404 * _3352.x) + _3310;
                        _3243 = (_3404 * _3352.y) + _3311;
                        _3244 = (_3404 * _3352.z) + _3312;
                        _3239 = (_3484 * _3369.x) + _3307;
                        _3240 = (_3484 * _3369.y) + _3308;
                        _3241 = (_3484 * _3369.z) + _3309;
                        if (_3314 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3307 = _3239;
                            _3308 = _3240;
                            _3309 = _3241;
                            _3310 = _3242;
                            _3311 = _3243;
                            _3312 = _3244;
                            _3313 = _3314;
                        }
                    }
                    frontier_phi_68_pred = _3244;
                    frontier_phi_68_pred_1 = _3243;
                    frontier_phi_68_pred_2 = _3242;
                    frontier_phi_68_pred_3 = _3240;
                    frontier_phi_68_pred_4 = _3239;
                    frontier_phi_68_pred_5 = _3241;
                }
                _3050 = frontier_phi_68_pred;
                _3048 = frontier_phi_68_pred_1;
                _3046 = frontier_phi_68_pred_2;
                _3042 = frontier_phi_68_pred_3;
                _3040 = frontier_phi_68_pred_4;
                _3044 = frontier_phi_68_pred_5;
                uint _3190 = _3189 + 1u;
                if (_3190 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3183 = _3040;
                    _3184 = _3042;
                    _3185 = _3044;
                    _3186 = _3046;
                    _3187 = _3048;
                    _3188 = _3050;
                    _3189 = _3190;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3039 = _3040;
            _3041 = _3042;
            _3043 = _3044;
            _3045 = _3046;
            _3047 = _3048;
            _3049 = _3050;
        }
        uvec4 _3053 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3054 = _3053.z;
        uint _3056 = (_3054 >> 8u) & 15u;
        float _3151;
        float _3153;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        if (((4294967295u << _3056) & _2935) == 0u)
        {
            _3151 = _3039;
            _3153 = _3041;
            _3155 = _3043;
            _3157 = _3045;
            _3159 = _3047;
            _3161 = _3049;
        }
        else
        {
            float _3176 = inversesqrt(dot(vec3(_2014, _2015, _2016), vec3(_2014, _2015, _2016)));
            float _3177 = _3176 * _2014;
            float _3178 = _3176 * _2015;
            float _3179 = _3176 * _2016;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3056 < ((_3054 >> 12u) & 15u))
            {
                float _3152;
                float _3154;
                float _3156;
                float _3158;
                float _3160;
                float _3162;
                float _3290 = _3039;
                float _3291 = _3041;
                float _3292 = _3043;
                float _3293 = _3045;
                float _3294 = _3047;
                float _3295 = _3049;
                uint _3296 = _3056;
                uint _3305;
                bool _3306;
                for (;;)
                {
                    _3305 = texelFetch(g_lightClassification, int((((_2929 << 5u) + (_2915 << 9u)) + (_3296 << 2u)) >> 2u)).x;
                    _3306 = _3305 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3306)
                    {
                        frontier_phi_74_pred = _3292;
                        frontier_phi_74_pred_1 = _3291;
                        frontier_phi_74_pred_2 = _3290;
                        frontier_phi_74_pred_3 = _3295;
                        frontier_phi_74_pred_4 = _3294;
                        frontier_phi_74_pred_5 = _3293;
                    }
                    else
                    {
                        float _3489;
                        float _3490;
                        float _3491;
                        float _3492;
                        float _3493;
                        float _3494;
                        float _3784;
                        float _3785;
                        float _3786;
                        float _3787;
                        float _3788;
                        float _3789;
                        float _3502 = _3290;
                        float _3503 = _3291;
                        float _3504 = _3292;
                        float _3505 = _3293;
                        float _3506 = _3294;
                        float _3507 = _3295;
                        uint _3508 = _3305;
                        uint _3509;
                        vec4 _3534;
                        float _3535;
                        vec4 _3550;
                        vec3 _3562;
                        vec4 _3577;
                        vec4 _3593;
                        float _3640;
                        bool _3641;
                        for (;;)
                        {
                            uint _3519 = ((_3296 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3508));
                            _3509 = (_3508 + 4294967295u) & _3508;
                            uint _3521 = _3519 * 40u;
                            _3534 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3521)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 3u)).x));
                            _3535 = _3534.w;
                            uint _3537 = (_3519 * 40u) + 4u;
                            _3550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 3u)).x));
                            uint _3552 = (_3519 * 40u) + 8u;
                            _3562 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3552)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 2u)).x));
                            uint _3564 = (_3519 * 40u) + 16u;
                            _3577 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3564)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3564 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3564 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3564 + 3u)).x));
                            uint _3580 = (_3519 * 40u) + 20u;
                            _3593 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3580)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 3u)).x));
                            uint _3596 = (_3519 * 40u) + 24u;
                            vec4 _3609 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3596)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 3u)).x));
                            uint _3615 = (_3519 * 40u) + 28u;
                            vec4 _3628 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3615)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 3u)).x));
                            _3640 = fma(_2016, _3628.z, fma(_2015, _3628.y, _3628.x * _2014)) + _3628.w;
                            _3641 = !((fma(_2016, _3609.z, fma(_2015, _3609.y, _3609.x * _2014)) + _3609.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3641)
                            {
                                float _3668 = _3534.x - _2014;
                                float _3669 = _3534.y - _2015;
                                float _3670 = _3534.z - _2016;
                                float _3671 = dot(vec3(_3668, _3669, _3670), vec3(_3668, _3669, _3670));
                                float _3674 = inversesqrt(_3671);
                                float _3675 = _3674 * _3668;
                                float _3676 = _3674 * _3669;
                                float _3677 = _3674 * _3670;
                                float _3681 = 1.0 - (_3671 / (_3535 * _3535));
                                float _4830 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                                float _3682 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                                float _3686 = sqrt(_3671) * _3550.w;
                                float _3688 = 1.39999997615814208984375 / (_3686 + 1.39999997615814208984375);
                                float _3689 = _3688 * _3688;
                                float _3692 = ((1.0 - _3689) * dot(vec3(_3675, _3676, _3677), vec3(_900, _903, _906))) + _3689;
                                float _3695 = _3686 * _3686;
                                float _3699 = (fma(_2016, _3577.z, fma(_2015, _3577.y, _3577.x * _2014)) + _3577.w) / _3640;
                                float _3700 = (fma(_2016, _3593.z, fma(_2015, _3593.y, _3593.x * _2014)) + _3593.w) / _3640;
                                float _3704 = 1.0 - dot(vec2(_3699, _3700), vec2(_3699, _3700));
                                float _4846 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3705 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                                float _3706 = _3705 * (((isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0))) * _3682) / ((_3695 * 0.699999988079071044921875) + 1.0));
                                float _3718 = exp2(log2(1.0 / ((_3695 * 3.5) + 5.0)) * 0.25);
                                float _3719 = 1.0 - _959;
                                float _3726 = sqrt(1.0 - ((1.0 - (_3719 * _3719)) * (1.0 - (_3718 * _3718))));
                                float _3727 = _3726 * _3726;
                                float _3728 = _3727 * _3727;
                                float _3729 = _3675 - _3177;
                                float _3730 = _3676 - _3178;
                                float _3731 = _3677 - _3179;
                                float _3735 = inversesqrt(dot(vec3(_3729, _3730, _3731), vec3(_3729, _3730, _3731)));
                                float _3739 = dot(vec3(_900, _903, _906), vec3((-0.0) - _3177, (-0.0) - _3178, (-0.0) - _3179));
                                float _4857 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3742 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
                                float _3743 = dot(vec3(_900, _903, _906), vec3(_3735 * _3729, _3735 * _3730, _3735 * _3731));
                                float _4868 = isnan(0.0) ? _3743 : (isnan(_3743) ? 0.0 : max(_3743, 0.0));
                                float _3746 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
                                float _3750 = ((_3746 * _3746) * (_3728 + (-1.0))) + 1.0;
                                float _3751 = _3688 * _3727;
                                float _3752 = _3751 * _3751;
                                float _3758 = ((1.0 - _3752) * dot(vec3(_900, _903, _906), vec3(_3675, _3676, _3677))) + _3752;
                                float _4879 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3759 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
                                float _3760 = 1.0 - _3727;
                                float _3770 = (0.5 / (((_3759 * ((_3742 * _3760) + _3727)) + 9.9999999392252902907785028219223e-09) + (((_3759 * _3760) + _3727) * _3742))) * _3759;
                                float _4890 = isnan(0.0) ? _3770 : (isnan(_3770) ? 0.0 : max(_3770, 0.0));
                                float _3780 = (_3705 * _3682) * (((_3728 * 3.1415927410125732421875) * (isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0)))) / ((_3750 * _3750) * ((_3695 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3780 * _3562.z;
                                frontier_phi_80_pred_1 = _3780 * _3562.y;
                                frontier_phi_80_pred_2 = _3780 * _3562.x;
                                frontier_phi_80_pred_3 = _3706 * _3550.z;
                                frontier_phi_80_pred_4 = _3706 * _3550.y;
                                frontier_phi_80_pred_5 = _3706 * _3550.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3786 = frontier_phi_80_pred;
                            _3785 = frontier_phi_80_pred_1;
                            _3784 = frontier_phi_80_pred_2;
                            _3789 = frontier_phi_80_pred_3;
                            _3788 = frontier_phi_80_pred_4;
                            _3787 = frontier_phi_80_pred_5;
                            _3492 = _3787 + _3505;
                            _3493 = _3788 + _3506;
                            _3494 = _3789 + _3507;
                            _3489 = _3784 + _3502;
                            _3490 = _3785 + _3503;
                            _3491 = _3786 + _3504;
                            if (_3509 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3502 = _3489;
                                _3503 = _3490;
                                _3504 = _3491;
                                _3505 = _3492;
                                _3506 = _3493;
                                _3507 = _3494;
                                _3508 = _3509;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3491;
                        frontier_phi_74_pred_1 = _3490;
                        frontier_phi_74_pred_2 = _3489;
                        frontier_phi_74_pred_3 = _3494;
                        frontier_phi_74_pred_4 = _3493;
                        frontier_phi_74_pred_5 = _3492;
                    }
                    _3156 = frontier_phi_74_pred;
                    _3154 = frontier_phi_74_pred_1;
                    _3152 = frontier_phi_74_pred_2;
                    _3162 = frontier_phi_74_pred_3;
                    _3160 = frontier_phi_74_pred_4;
                    _3158 = frontier_phi_74_pred_5;
                    uint _3297 = _3296 + 1u;
                    if (_3297 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3290 = _3152;
                        _3291 = _3154;
                        _3292 = _3156;
                        _3293 = _3158;
                        _3294 = _3160;
                        _3295 = _3162;
                        _3296 = _3297;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3160;
                frontier_phi_62_63_ladder_1 = _3158;
                frontier_phi_62_63_ladder_2 = _3156;
                frontier_phi_62_63_ladder_3 = _3162;
                frontier_phi_62_63_ladder_4 = _3154;
                frontier_phi_62_63_ladder_5 = _3152;
            }
            else
            {
                frontier_phi_62_63_ladder = _3047;
                frontier_phi_62_63_ladder_1 = _3045;
                frontier_phi_62_63_ladder_2 = _3043;
                frontier_phi_62_63_ladder_3 = _3049;
                frontier_phi_62_63_ladder_4 = _3041;
                frontier_phi_62_63_ladder_5 = _3039;
            }
            _3151 = frontier_phi_62_63_ladder_5;
            _3153 = frontier_phi_62_63_ladder_4;
            _3155 = frontier_phi_62_63_ladder_2;
            _3157 = frontier_phi_62_63_ladder_1;
            _3159 = frontier_phi_62_63_ladder;
            _3161 = frontier_phi_62_63_ladder_3;
        }
        float _3166 = isnan(1.0) ? _943 : (isnan(_943) ? 1.0 : min(_943, 1.0));
        _2947 = (_3166 * _3157) + _2479;
        _2949 = (_3166 * _3159) + _2481;
        _2951 = (_3166 * _3161) + _2483;
        _2953 = ((_3151 * 0.039999999105930328369140625) * _3166) + _2802;
        _2955 = ((_3153 * 0.039999999105930328369140625) * _3166) + _2804;
        _2957 = ((_3155 * 0.039999999105930328369140625) * _3166) + _2806;
    }
    else
    {
        _2947 = _2479;
        _2949 = _2481;
        _2951 = _2483;
        _2953 = _2802;
        _2955 = _2804;
        _2957 = _2806;
    }
    uint _2963 = _919 + uint(cbMatDynParam._m0[0u].w);
    float _4906 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _4917 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _4928 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    float _2994 = (((isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0))) * (_2947 + ((isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0))) * _943))) + ((_2953 + ((isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + (((cbMtdParam._m0[16u].x * _564) * _784) * cbInstanceData._m0[_2963].x);
    float _2996 = ((((cbMtdParam._m0[16u].x * _565) * _784) * cbInstanceData._m0[_2963].y) + ((_2955 + ((isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0))) * (_2949 + ((isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0))) * _943)));
    float _2998 = ((((cbMtdParam._m0[16u].x * _566) * _784) * cbInstanceData._m0[_2963].z) + ((_2957 + ((isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) * _1748)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0))) * (_2951 + ((isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))) * _943)));
    uint _3002 = _732 + 6u;
    float _3010 = _881 / cbSceneParam._m0[86u].x;
    float _3011 = _882 / cbSceneParam._m0[86u].y;
    vec4 _3025 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3010, _3011, (log2((isnan(cbSceneParam._m0[77u].w) ? _817 : (isnan(_817) ? cbSceneParam._m0[77u].w : min(_817, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3027 = _3025.x;
    float _3028 = _3025.y;
    float _3029 = _3025.z;
    float _3030 = _3025.w;
    float _3101;
    float _3103;
    float _3105;
    float _3107;
    if (_817 > cbSceneParam._m0[78u].w)
    {
        float _3064 = isnan(_817) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _817 : min(cbSceneParam._m0[80u].w, _817));
        float _3065 = _3064 / _817;
        float _3076 = _3065 * _866;
        float _3077 = _867 * _3065;
        float _3078 = (-0.0) - _3077;
        float _3079 = _3065 * _868;
        float _3081 = (cbSceneParam._m0[77u].w * _3078) / _3064;
        float _3082 = _3081 + cbSceneParam._m0[79u].w;
        float _3083 = cbSceneParam._m0[79u].w - _3077;
        float _3089 = sqrt(((_3076 * _3076) + (_3077 * _3077)) + (_3079 * _3079));
        float _3092 = (1.0 - (cbSceneParam._m0[77u].w / _3064)) * _3089;
        float _3097 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3099 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3252;
        if (abs((_3078 - _3081) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3252 = ((((_3082 > 0.0) ? exp2(_3097 * _3082) : (2.0 - exp2(_3099 * _3082))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3092;
        }
        else
        {
            float _3212 = 1.0 / cbSceneParam._m0[80u].x;
            float _3213 = isnan(_3083) ? _3082 : (isnan(_3082) ? _3083 : max(_3082, _3083));
            float _3214 = isnan(_3083) ? _3082 : (isnan(_3082) ? _3083 : min(_3082, _3083));
            float _3223 = isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : min(_3213, 0.0));
            float _3224 = isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : min(_3214, 0.0));
            _3252 = ((abs(_3089 / _3078) * cbSceneParam._m0[80u].y) * ((((_3223 - _3224) * 2.0) - ((exp2(_3097 * (isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : max(_3213, 0.0)))) - exp2(_3097 * (isnan(0.0) ? _3214 : (isnan(_3214) ? 0.0 : max(_3214, 0.0))))) * _3212)) - ((exp2(_3099 * _3223) - exp2(_3099 * _3224)) * _3212))) + (_3092 * cbSceneParam._m0[80u].z);
        }
        vec4 _3254 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3010, _3011, 1.0), 0.0);
        float _3263 = exp2((_3252 * (-1.44269502162933349609375)) * (1.0 - _3254.w));
        float _3264 = log2(_3263);
        float _3280 = log2(_3030);
        _3101 = (exp2(_3280 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3264 * cbSceneParam._m0[78u].x)) * _3254.x) / cbSceneParam._m0[78u].x)) + _3027;
        _3103 = (exp2(_3280 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3264 * cbSceneParam._m0[78u].y)) * _3254.y) / cbSceneParam._m0[78u].y)) + _3028;
        _3105 = (exp2(_3280 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3264 * cbSceneParam._m0[78u].z)) * _3254.z) / cbSceneParam._m0[78u].z)) + _3029;
        _3107 = _3263 * _3030;
    }
    else
    {
        _3101 = _3027;
        _3103 = _3028;
        _3105 = _3029;
        _3107 = _3030;
    }
    float _3119 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3120 = _3119 == 3.0;
    float _3121 = log2(_3107);
    float _3128 = exp2(_3121 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2994 : (isnan(_2994) ? 0.0 : max(_2994, 0.0)));
    float _3129 = exp2(_3121 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0)));
    float _3130 = exp2(_3121 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0)));
    float _3139 = (_3119 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3139 * (_3120 ? _3128 : (_3128 + (cbSceneParam._m0[72u].w * _3101)));
    SV_Target.y = _3139 * (_3120 ? _3129 : (_3129 + (cbSceneParam._m0[72u].w * _3103)));
    SV_Target.z = _3139 * (_3120 ? _3130 : (_3130 + (cbSceneParam._m0[72u].w * _3105)));
    SV_Target.w = cbInstanceData._m0[_3002].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3002].w;
}


