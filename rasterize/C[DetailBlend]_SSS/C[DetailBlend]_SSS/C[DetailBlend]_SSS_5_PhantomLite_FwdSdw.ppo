#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1312;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    float _281 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _291 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _281);
    float _292 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _281);
    float _293 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _281);
    vec4 _306 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _311 = _306.z;
    float _318 = exp2(log2(_311 * 22.0) * 260.0);
    float _319 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
    float _320 = isnan(1.0) ? _319 : (isnan(_319) ? 1.0 : min(_319, 1.0));
    vec4 _334 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _344 = cbMtdParam._m0[10u].x * _334.x;
    float _345 = cbMtdParam._m0[10u].y * _334.y;
    float _346 = cbMtdParam._m0[10u].z * _334.z;
    vec4 _358 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _373 = exp2(log2(1.0 - _306.w) * 8.0);
    vec4 _385 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _410 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _432 = (((((_358.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _410.x) - _344) * _320) + _344;
    float _433 = (((((_358.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _410.y) - _345) * _320) + _345;
    float _434 = (((((_358.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _410.z) - _346) * _320) + _346;
    float _441 = (((cbMtdParam._m0[12u].x * _385.x) - _432) * _373) + _432;
    float _442 = (((cbMtdParam._m0[12u].y * _385.y) - _433) * _373) + _433;
    float _443 = (((cbMtdParam._m0[12u].z * _385.z) - _434) * _373) + _434;
    float _444 = _410.w * _358.w;
    float _472 = (((texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x - cbMtdParam._m0[15u].y) + cbMtdParam._m0[14u].z) * _320) + cbMtdParam._m0[15u].y;
    float _475 = ((cbMtdParam._m0[14u].y - _472) * _373) + _472;
    vec4 _487 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _489 = _487.x;
    float _490 = _487.y;
    float _496 = cbMtdParam._m0[13u].y + _487.z;
    vec4 _508 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _527 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _538 = ((((_311 * 2.0) * (cbMtdParam._m0[13u].x + _508.z)) - _496) * _320) + _496;
    float _542 = (((_527.z - _538) + cbMtdParam._m0[14u].x) * _373) + _538;
    float _546 = (_306.x * 2.0) + (-1.0);
    float _548 = (_306.y * 2.0) + (-1.0);
    float _549 = dot(vec2(_546, _548), vec2(_546, _548));
    float _3968 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _554 = sqrt(1.0 - (isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0))));
    float _559 = ((_508.x - _489) * _320) + _489;
    float _560 = ((_508.y - _490) * _320) + _490;
    float _573 = ((((((_527.x - _559) * _373) + _559) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _546;
    float _574 = ((((((_527.y - _560) * _373) + _560) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _548;
    float _577 = fma(_554, _234, fma(_574, _226 * TANGENT.x, (_212 * _204) * _573));
    float _580 = fma(_554, _235, fma(_574, _226 * TANGENT.y, (_212 * _205) * _573));
    float _583 = fma(_554, _236, fma(_574, _226 * TANGENT.z, (_212 * _206) * _573));
    float _587 = inversesqrt(dot(vec3(_577, _580, _583), vec3(_577, _580, _583)));
    float _588 = _587 * _577;
    float _589 = _587 * _580;
    float _590 = _587 * _583;
    float _3979 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _591 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _3990 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _592 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
    float _4001 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _593 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
    float _4012 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _594 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _4023 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _595 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
    float _4034 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _596 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
    float _604 = cbMatDynParam._m0[9u].x * _593;
    float _605 = cbMatDynParam._m0[9u].y * _594;
    float _606 = cbMatDynParam._m0[9u].z * _595;
    float _613 = inversesqrt(dot(vec3(_291, _292, _293), vec3(_291, _292, _293)));
    float _614 = _613 * _291;
    float _615 = _613 * _292;
    float _616 = _613 * _293;
    float _617 = dot(vec3(_588, _589, _590), vec3(_614, _615, _616));
    float _623 = abs(exp2(log2(_617) * cbMatDynParam._m0[12u].x));
    float _624 = isnan(0.100000001490116119384765625) ? _623 : (isnan(_623) ? 0.100000001490116119384765625 : max(_623, 0.100000001490116119384765625));
    float _630 = ((isnan(0.699999988079071044921875) ? _624 : (isnan(_624) ? 0.699999988079071044921875 : min(_624, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _653 = 1.0 - cbMatDynParam._m0[8u].w;
    float _4055 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _656 = 1.0 - cbMatDynParam._m0[7u].w;
    float _4066 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _657 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _661 = dot(vec3(_588, _589, _590), vec3(0.0, -1.0, 0.0));
    float _4077 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _664 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    float _671 = (_664 * _593) * cbMatDynParam._m0[11u].x;
    float _673 = (_664 * _594) * cbMatDynParam._m0[11u].y;
    float _675 = (_664 * _595) * cbMatDynParam._m0[11u].z;
    float _682 = dot(vec3(_614, _615, _616), vec3(_588, _589, _590));
    float _685 = _682 * 2.0;
    float _695 = dot(vec3((-0.0) - (_614 - (_685 * _588)), (-0.0) - (_615 - (_685 * _589)), (-0.0) - (_616 - (_685 * _590))), vec3(0.0, -1.0, 0.0));
    float _4088 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _702 = exp2(log2(isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * 4.0);
    float _728 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _734 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _735 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _737 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _739 = _737.w;
    float _757 = fma(_590, cbSceneParam._m0[5u].z, fma(_589, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _588));
    float _760 = fma(_590, cbSceneParam._m0[6u].z, fma(_589, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _588));
    float _763 = fma(_590, cbSceneParam._m0[7u].z, fma(_589, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _588));
    vec4 _765 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _767 = _765.x;
    float _779 = (((_765.y - _592) + (_765.w * _592)) * cbMtdParam._m0[3u].x) + _592;
    vec4 _780 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _796 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_767 * _767)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _780.z;
    float _804 = (((cbMatDynParam._m0[15u].x - _596) * cbMatDynParam._m0[15u].w) * _796) + _596;
    float _812 = ((_796 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _779)) + _779;
    uint _836 = uint(roundEven(NORMAL.w)) * 13u;
    uint _837 = _836 + 9u;
    uint _838 = _837 + uint(cbMatDynParam._m0[0u].w);
    float _844 = (cbMtdParam._m0[0u].x * _604) * cbInstanceData._m0[_838].x;
    float _845 = (cbMtdParam._m0[0u].y * _605) * cbInstanceData._m0[_838].y;
    float _846 = (cbMtdParam._m0[0u].z * _606) * cbInstanceData._m0[_838].z;
    float _4099 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
    float _4110 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
    float _4121 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
    vec4 _850 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _855 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _866 = (((_855.x - _804) + (_855.w * _804)) * cbMtdParam._m0[3u].x) + _804;
    float _879 = (cbMtdParam._m0[3u].x * (((_847 * _739) - _847) + _850.x)) + _847;
    float _880 = (cbMtdParam._m0[3u].x * (((_848 * _739) - _848) + _850.y)) + _848;
    float _881 = (cbMtdParam._m0[3u].x * (((_849 * _739) - _849) + _850.z)) + _849;
    vec4 _882 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _895 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_804 * (_604 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_804 * (_605 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_804 * (_606 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _882.z;
    float _899 = _895 * cbMatDynParam._m0[13u].w;
    float _909 = (_899 * (cbMatDynParam._m0[13u].x - _879)) + _879;
    float _910 = (_899 * (cbMatDynParam._m0[13u].y - _880)) + _880;
    float _911 = (_899 * (cbMatDynParam._m0[13u].z - _881)) + _881;
    float _919 = ((_895 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _866)) + _866;
    float _920 = 1.0 - _919;
    float _921 = _920 * _909;
    float _922 = _920 * _910;
    float _923 = _920 * _911;
    float _927 = (_909 + (-0.039999999105930328369140625)) * _919;
    float _928 = (_910 + (-0.039999999105930328369140625)) * _919;
    float _929 = (_911 + (-0.039999999105930328369140625)) * _919;
    float _930 = _927 + 0.039999999105930328369140625;
    float _931 = _928 + 0.039999999105930328369140625;
    float _932 = _929 + 0.039999999105930328369140625;
    vec4 _941 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _734, cbSceneParam._m0[86u].y * _735));
    float _944 = _941.x * TEXCOORD_4;
    float _945 = _617 * 2.0;
    float _949 = (_945 * _588) - _614;
    float _950 = (_945 * _589) - _615;
    float _951 = (_945 * _590) - _616;
    float _952 = abs(_682);
    float _4132 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _954 = sqrt(_812);
    float _966 = exp2((_954 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_954 * 3.0));
    float _972 = (1.0 - _966) * ((_954 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _973 = _966 * _954;
    float _1001 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1005 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1009 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1311;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    float _1325;
    float _1326;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1036 = fma(_1009, cbModelParam._m0[26u].z, fma(_1005, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1001));
        float _1040 = fma(_1009, cbModelParam._m0[27u].z, fma(_1005, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1001));
        float _1044 = fma(_1009, cbModelParam._m0[28u].z, fma(_1005, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1001));
        float _1069 = _1001 + _588;
        float _1070 = _1005 + _589;
        float _1071 = _1009 + _590;
        float _1081 = fma(_1071, cbModelParam._m0[26u].z, fma(_1070, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1069)) - _1036;
        float _1082 = fma(_1071, cbModelParam._m0[27u].z, fma(_1070, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1069)) - _1040;
        float _1083 = fma(_1071, cbModelParam._m0[28u].z, fma(_1070, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1069)) - _1044;
        float _1087 = inversesqrt(dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083)));
        float _1100 = ((_1087 * _1081) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1036 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1101 = ((_1087 * _1082) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1040 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1102 = ((_1087 * _1083) / cbModelParam._m0[34u].z) + ((((((_1044 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1105 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1100, _1101, _1102), 0.0);
        vec4 _1112 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1100, _1101, _1102), 0.0);
        vec4 _1119 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1100, _1101, _1102), 0.0);
        vec4 _1126 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1100, _1101, _1102), 0.0);
        float _1139 = exp2((_1105.w + (-0.5)) * 20.0) * 2.0;
        float _1140 = _1139 * (_1105.x + (-0.5));
        float _1141 = _1139 * (_1105.y + (-0.5));
        float _1142 = _1139 * (_1105.z + (-0.5));
        float _1149 = exp2((_1112.w + (-0.5)) * 20.0) * 2.0;
        float _1150 = _1149 * (_1112.x + (-0.5));
        float _1151 = _1149 * (_1112.y + (-0.5));
        float _1152 = _1149 * (_1112.z + (-0.5));
        float _1159 = exp2((_1119.w + (-0.5)) * 20.0) * 2.0;
        float _1160 = _1159 * (_1119.x + (-0.5));
        float _1161 = _1159 * (_1119.y + (-0.5));
        float _1162 = _1159 * (_1119.z + (-0.5));
        float _1169 = exp2((_1126.w + (-0.5)) * 20.0) * 2.0;
        float _1170 = _1169 * (_1126.x + (-0.5));
        float _1171 = _1169 * (_1126.y + (-0.5));
        float _1172 = _1169 * (_1126.z + (-0.5));
        float _1173 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1174 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1175 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1176 = _1140 * 0.5;
        float _1177 = _1150 * 0.5;
        float _1178 = _1160 * 0.5;
        float _1179 = dot(vec3(_1176, _1177, _1178), vec3(_1176, _1177, _1178));
        float _1184 = (_1179 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1179);
        float _1193 = (dot(vec3(_588, _589, _590), vec3(_1184 * _1176, _1184 * _1177, _1184 * _1178)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1203 = sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178)) / (_1173 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1205 = _1204 * 2.0;
        float _1209 = (1.0 - _1204) / (_1204 + 1.0);
        float _4180 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1210 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1219 = ((((1.0 - _1210) * (_1205 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1205 + 1.0))) + _1210) * _1173;
        float _1220 = _1141 * 0.5;
        float _1221 = _1151 * 0.5;
        float _1222 = _1161 * 0.5;
        float _1223 = dot(vec3(_1220, _1221, _1222), vec3(_1220, _1221, _1222));
        float _1228 = (_1223 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1223);
        float _1236 = (dot(vec3(_588, _589, _590), vec3(_1228 * _1220, _1228 * _1221, _1228 * _1222)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1245 = sqrt(((_1221 * _1221) + (_1220 * _1220)) + (_1222 * _1222)) / (_1174 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1246 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1247 = _1246 * 2.0;
        float _1251 = (1.0 - _1246) / (_1246 + 1.0);
        float _4213 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1252 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1261 = ((((1.0 - _1252) * (_1247 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1247 + 1.0))) + _1252) * _1174;
        float _1262 = _1142 * 0.5;
        float _1263 = _1152 * 0.5;
        float _1264 = _1162 * 0.5;
        float _1265 = dot(vec3(_1262, _1263, _1264), vec3(_1262, _1263, _1264));
        float _1270 = (_1265 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1265);
        float _1278 = (dot(vec3(_588, _589, _590), vec3(_1270 * _1262, _1270 * _1263, _1270 * _1264)) + 1.0) * 0.5;
        float _4224 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1287 = sqrt(((_1263 * _1263) + (_1262 * _1262)) + (_1264 * _1264)) / (_1175 + 9.9999997473787516355514526367188e-06);
        float _4235 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1288 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1289 = _1288 * 2.0;
        float _1293 = (1.0 - _1288) / (_1288 + 1.0);
        float _4246 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
        float _1294 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
        float _1303 = ((((1.0 - _1294) * (_1289 + 2.0)) * exp2(log2(isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * (_1289 + 1.0))) + _1294) * _1175;
        _1311 = _1142;
        _1313 = _1141;
        _1314 = _1140;
        _1315 = _1152;
        _1316 = _1151;
        _1317 = _1150;
        _1318 = _1162;
        _1319 = _1161;
        _1320 = _1160;
        _1321 = _1175;
        _1322 = _1174;
        _1323 = _1173;
        _1324 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0)));
        _1325 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0)));
        _1326 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0)));
    }
    else
    {
        _1311 = _1312;
        _1313 = _1312;
        _1314 = _1312;
        _1315 = _1312;
        _1316 = _1312;
        _1317 = _1312;
        _1318 = _1312;
        _1319 = _1312;
        _1320 = _1312;
        _1321 = _1312;
        _1322 = _1312;
        _1323 = _1312;
        _1324 = 0.0;
        _1325 = 0.0;
        _1326 = 0.0;
    }
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1352 = fma(_1009, cbModelParam._m0[30u].z, fma(_1005, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1001));
        float _1356 = fma(_1009, cbModelParam._m0[31u].z, fma(_1005, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1001));
        float _1360 = fma(_1009, cbModelParam._m0[32u].z, fma(_1005, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1001));
        float _1383 = _1001 + _588;
        float _1384 = _1005 + _589;
        float _1385 = _1009 + _590;
        float _1395 = fma(_1385, cbModelParam._m0[30u].z, fma(_1384, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1383)) - _1352;
        float _1396 = fma(_1385, cbModelParam._m0[31u].z, fma(_1384, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1383)) - _1356;
        float _1397 = fma(_1385, cbModelParam._m0[32u].z, fma(_1384, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1383)) - _1360;
        float _1401 = inversesqrt(dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397)));
        float _1414 = ((_1401 * _1395) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1352 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1415 = ((_1401 * _1396) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1356 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1416 = ((_1401 * _1397) / cbModelParam._m0[35u].z) + ((((((_1360 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1432 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1439 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        float _1451 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1452 = _1451 * (_1418.x + (-0.5));
        float _1453 = _1451 * (_1418.y + (-0.5));
        float _1454 = _1451 * (_1418.z + (-0.5));
        float _1461 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1462 = _1461 * (_1425.x + (-0.5));
        float _1463 = _1461 * (_1425.y + (-0.5));
        float _1464 = _1461 * (_1425.z + (-0.5));
        float _1471 = exp2((_1432.w + (-0.5)) * 20.0) * 2.0;
        float _1472 = _1471 * (_1432.x + (-0.5));
        float _1473 = _1471 * (_1432.y + (-0.5));
        float _1474 = _1471 * (_1432.z + (-0.5));
        float _1481 = exp2((_1439.w + (-0.5)) * 20.0) * 2.0;
        float _1482 = _1481 * (_1439.x + (-0.5));
        float _1483 = _1481 * (_1439.y + (-0.5));
        float _1484 = _1481 * (_1439.z + (-0.5));
        float _1485 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1486 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = _1452 * 0.5;
        float _1489 = _1462 * 0.5;
        float _1490 = _1472 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_588, _589, _590), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _4287 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1485 + 9.9999997473787516355514526367188e-06);
        float _4298 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _4309 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0))) * (_1515 + 1.0))) + _1520) * _1485;
        float _1530 = _1453 * 0.5;
        float _1531 = _1463 * 0.5;
        float _1532 = _1473 * 0.5;
        float _1533 = dot(vec3(_1530, _1531, _1532), vec3(_1530, _1531, _1532));
        float _1538 = (_1533 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1533);
        float _1546 = (dot(vec3(_588, _589, _590), vec3(_1538 * _1530, _1538 * _1531, _1538 * _1532)) + 1.0) * 0.5;
        float _4320 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1555 = sqrt(((_1531 * _1531) + (_1530 * _1530)) + (_1532 * _1532)) / (_1486 + 9.9999997473787516355514526367188e-06);
        float _4331 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1556 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1557 = _1556 * 2.0;
        float _1561 = (1.0 - _1556) / (_1556 + 1.0);
        float _4342 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1562 = isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0));
        float _1571 = ((((1.0 - _1562) * (_1557 + 2.0)) * exp2(log2(isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0))) * (_1557 + 1.0))) + _1562) * _1486;
        float _1572 = _1454 * 0.5;
        float _1573 = _1464 * 0.5;
        float _1574 = _1474 * 0.5;
        float _1575 = dot(vec3(_1572, _1573, _1574), vec3(_1572, _1573, _1574));
        float _1580 = (_1575 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1575);
        float _1588 = (dot(vec3(_588, _589, _590), vec3(_1580 * _1572, _1580 * _1573, _1580 * _1574)) + 1.0) * 0.5;
        float _4353 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1597 = sqrt(((_1573 * _1573) + (_1572 * _1572)) + (_1574 * _1574)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4364 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
        float _1598 = isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0));
        float _1599 = _1598 * 2.0;
        float _1603 = (1.0 - _1598) / (_1598 + 1.0);
        float _4375 = isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0));
        float _1604 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
        float _1613 = ((((1.0 - _1604) * (_1599 + 2.0)) * exp2(log2(isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0))) * (_1599 + 1.0))) + _1604) * _1487;
        _1621 = _1454;
        _1622 = _1453;
        _1623 = _1452;
        _1624 = _1464;
        _1625 = _1463;
        _1626 = _1462;
        _1627 = _1474;
        _1628 = _1473;
        _1629 = _1472;
        _1630 = _1487;
        _1631 = _1486;
        _1632 = _1485;
        _1633 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
        _1634 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)));
        _1635 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)));
    }
    else
    {
        _1621 = _1312;
        _1622 = _1312;
        _1623 = _1312;
        _1624 = _1312;
        _1625 = _1312;
        _1626 = _1312;
        _1627 = _1312;
        _1628 = _1312;
        _1629 = _1312;
        _1630 = _1312;
        _1631 = _1312;
        _1632 = _1312;
        _1633 = 0.0;
        _1634 = 0.0;
        _1635 = 0.0;
    }
    float _1645 = (cbModelParam._m0[1u].x * (_1633 - _1324)) + _1324;
    float _1646 = (cbModelParam._m0[1u].x * (_1634 - _1325)) + _1325;
    float _1647 = (cbModelParam._m0[1u].x * (_1635 - _1326)) + _1326;
    float _1668 = fma(_1647, cbSceneParam._m0[89u].z, fma(_1646, cbSceneParam._m0[89u].y, _1645 * cbSceneParam._m0[89u].x));
    float _1671 = fma(_1647, cbSceneParam._m0[90u].z, fma(_1646, cbSceneParam._m0[90u].y, _1645 * cbSceneParam._m0[90u].x));
    float _1674 = fma(_1647, cbSceneParam._m0[91u].z, fma(_1646, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1645));
    float _1689 = _949 * 0.5;
    float _1690 = _950 * 0.5;
    float _1691 = _951 * 0.5;
    float _1692 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1623, _1626, _1629, _1632));
    float _1695 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1622, _1625, _1628, _1631));
    float _1698 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1621, _1624, _1627, _1630));
    float _1729;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1705 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1311, _1315, _1318, _1321));
        float _1709 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1313, _1316, _1319, _1322));
        float _1713 = dot(vec4(_1689, _1690, _1691, 1.0), vec4(_1314, _1317, _1320, _1323));
        float _1720 = dot(vec4(cbModelParam._m0[39u]), vec4(_1689, _1690, _1691, 1.0));
        _1729 = dot(vec3(isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0)), isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)), isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1720) ? 0.0 : (isnan(0.0) ? _1720 : max(0.0, _1720))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1729 = 1.0;
    }
    float _1740;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1731 = dot(vec4(cbModelParam._m0[40u]), vec4(_1689, _1690, _1691, 1.0));
        _1740 = dot(vec3(isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0)), isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)), isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1731) ? 0.0 : (isnan(0.0) ? _1731 : max(0.0, _1731))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1740 = 1.0;
    }
    float _1744 = (_1740 * cbModelParam._m0[1u].x) + (_1729 * (1.0 - cbModelParam._m0[1u].x));
    float _1754 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _812);
    float _1755 = isnan(_1754) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1754 : min(cbModelParam._m0[25u].z, _1754));
    float _1835;
    float _1837;
    float _1839;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1802 = fma(_1009, cbModelParam._m0[13u].z, fma(_1005, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1001)) + cbModelParam._m0[13u].w;
        float _1806 = fma(_1009, cbModelParam._m0[14u].z, fma(_1005, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1001)) + cbModelParam._m0[14u].w;
        float _1810 = fma(_1009, cbModelParam._m0[15u].z, fma(_1005, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1001)) + cbModelParam._m0[15u].w;
        float _1813 = fma(_951, cbModelParam._m0[13u].z, fma(_950, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _949));
        float _1816 = fma(_951, cbModelParam._m0[14u].z, fma(_950, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _949));
        float _1819 = fma(_951, cbModelParam._m0[15u].z, fma(_950, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _949));
        float _1847;
        if (_1813 > 0.0)
        {
            _1847 = abs((1.0 - _1802) / _1813);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1802 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1847 = frontier_phi_16_14_ladder;
        }
        float _2022;
        if (_1816 > 0.0)
        {
            _2022 = abs((1.0 - _1806) / _1816);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1816 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1806 + 1.0) / _1816);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2022 = frontier_phi_25_21_ladder;
        }
        float _2317;
        if (_1819 > 0.0)
        {
            _2317 = abs((1.0 - _1810) / _1819);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1819 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1810 + 1.0) / _1819);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2317 = frontier_phi_37_32_ladder;
        }
        float _2319 = isnan(_2022) ? _1847 : (isnan(_1847) ? _2022 : min(_1847, _2022));
        float _2320 = isnan(_2317) ? _2319 : (isnan(_2319) ? _2317 : min(_2319, _2317));
        float _2324 = (_2320 * _1813) + _1802;
        float _2325 = (_2320 * _1816) + _1806;
        float _2326 = (_2320 * _1819) + _1810;
        float _2327 = _2320 * 9.9999997473787516355514526367188e-05;
        float _2329 = (-1.0) - _2327;
        float _2331 = _2327 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2326 > _2331) || ((_2326 < _2329) || ((_2325 > _2331) || ((_2325 < _2329) || ((_2324 < _2329) || (_2324 > _2331))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2471 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2326, cbModelParam._m0[9u].z, fma(_2325, cbModelParam._m0[9u].y, _2324 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2326, cbModelParam._m0[10u].z, fma(_2325, cbModelParam._m0[10u].y, _2324 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2326, cbModelParam._m0[11u].z, fma(_2325, cbModelParam._m0[11u].y, _2324 * cbModelParam._m0[11u].x))), _1755);
            frontier_phi_15_37_ladder = _2471.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2471.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2471.z * cbModelParam._m0[1u].y;
        }
        _1835 = frontier_phi_15_37_ladder_1;
        _1837 = frontier_phi_15_37_ladder;
        _1839 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_949, _950, _951), _1755);
        _1835 = _1823.x * cbModelParam._m0[1u].y;
        _1837 = _1823.y * cbModelParam._m0[1u].y;
        _1839 = _1823.z * cbModelParam._m0[1u].y;
    }
    float _1843 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _812);
    float _1844 = isnan(_1843) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1843 : min(cbModelParam._m0[25u].w, _1843));
    float _1937;
    float _1939;
    float _1941;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1901 = fma(_1009, cbModelParam._m0[21u].z, fma(_1005, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1001)) + cbModelParam._m0[21u].w;
        float _1905 = fma(_1009, cbModelParam._m0[22u].z, fma(_1005, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1001)) + cbModelParam._m0[22u].w;
        float _1909 = fma(_1009, cbModelParam._m0[23u].z, fma(_1005, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1001)) + cbModelParam._m0[23u].w;
        float _1912 = fma(_951, cbModelParam._m0[21u].z, fma(_950, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _949));
        float _1915 = fma(_951, cbModelParam._m0[22u].z, fma(_950, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _949));
        float _1918 = fma(_951, cbModelParam._m0[23u].z, fma(_950, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _949));
        float _2027;
        if (_1912 > 0.0)
        {
            _2027 = abs((1.0 - _1901) / _1912);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1912 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1901 + 1.0) / _1912);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2027 = frontier_phi_27_23_ladder;
        }
        float _2344;
        if (_1915 > 0.0)
        {
            _2344 = abs((1.0 - _1905) / _1915);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1915 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1905 + 1.0) / _1915);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2344 = frontier_phi_39_34_ladder;
        }
        float _2682;
        if (_1918 > 0.0)
        {
            _2682 = abs((1.0 - _1909) / _1918);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1918 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1909 + 1.0) / _1918);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2682 = frontier_phi_49_46_ladder;
        }
        float _2684 = isnan(_2344) ? _2027 : (isnan(_2027) ? _2344 : min(_2027, _2344));
        float _2685 = isnan(_2682) ? _2684 : (isnan(_2684) ? _2682 : min(_2684, _2682));
        float _2689 = (_2685 * _1912) + _1901;
        float _2690 = (_2685 * _1915) + _1905;
        float _2691 = (_2685 * _1918) + _1909;
        float _2692 = _2685 * 9.9999997473787516355514526367188e-05;
        float _2693 = (-1.0) - _2692;
        float _2695 = _2692 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2691 > _2695) || ((_2691 < _2693) || ((_2690 > _2695) || ((_2690 < _2693) || ((_2689 < _2693) || (_2689 > _2695))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2813 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2691, cbModelParam._m0[17u].z, fma(_2690, cbModelParam._m0[17u].y, _2689 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2691, cbModelParam._m0[18u].z, fma(_2690, cbModelParam._m0[18u].y, _2689 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2691, cbModelParam._m0[19u].z, fma(_2690, cbModelParam._m0[19u].y, _2689 * cbModelParam._m0[19u].x))), _1844);
            frontier_phi_24_49_ladder = _2813.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2813.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2813.x * cbModelParam._m0[1u].z;
        }
        _1937 = frontier_phi_24_49_ladder_2;
        _1939 = frontier_phi_24_49_ladder_1;
        _1941 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1921 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_949, _950, _951), _1844);
        _1937 = _1921.x * cbModelParam._m0[1u].z;
        _1939 = _1921.y * cbModelParam._m0[1u].z;
        _1941 = _1921.z * cbModelParam._m0[1u].z;
    }
    float _1954 = (((_972 * _930) + _973) * _944) * ((cbModelParam._m0[1u].w * (_1937 - _1835)) + _1835);
    float _1956 = (((_972 * _931) + _973) * _944) * ((cbModelParam._m0[1u].w * (_1939 - _1837)) + _1837);
    float _1958 = (((_972 * _932) + _973) * _944) * ((cbModelParam._m0[1u].w * (_1941 - _1839)) + _1839);
    float _1961 = fma(_1958, cbSceneParam._m0[89u].z, fma(_1956, cbSceneParam._m0[89u].y, _1954 * cbSceneParam._m0[89u].x));
    float _1964 = fma(_1958, cbSceneParam._m0[90u].z, fma(_1956, cbSceneParam._m0[90u].y, _1954 * cbSceneParam._m0[90u].x));
    float _1967 = fma(_1958, cbSceneParam._m0[91u].z, fma(_1956, cbSceneParam._m0[91u].y, _1954 * cbSceneParam._m0[91u].x));
    float _2001 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2005 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2009 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2013 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2014 = _2001 / _2013;
    float _2015 = _2005 / _2013;
    float _2016 = _2009 / _2013;
    float _2163;
    float _2164;
    float _2165;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2043 = ((uint(_2016 > cbSceneParam._m0[59u].y) + uint(_2016 > cbSceneParam._m0[59u].x)) + uint(_2016 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2044 = _2043 + 43u;
        uint _2052 = _2043 + 44u;
        uint _2060 = _2043 + 45u;
        uint _2068 = _2043 + 46u;
        float _2079 = fma(_2013, cbSceneParam._m0[_2044].w, fma(_2009, cbSceneParam._m0[_2044].z, fma(_2005, cbSceneParam._m0[_2044].y, _2001 * cbSceneParam._m0[_2044].x)));
        float _2083 = fma(_2013, cbSceneParam._m0[_2052].w, fma(_2009, cbSceneParam._m0[_2052].z, fma(_2005, cbSceneParam._m0[_2052].y, _2001 * cbSceneParam._m0[_2052].x)));
        float _2091 = fma(_2013, cbSceneParam._m0[_2068].w, fma(_2009, cbSceneParam._m0[_2068].z, fma(_2005, cbSceneParam._m0[_2068].y, _2001 * cbSceneParam._m0[_2068].x)));
        float _2096 = cbSceneParam._m0[33u].z * _2091;
        float _2098 = cbSceneParam._m0[33u].w * _2091;
        float _2101 = fma(_2013, cbSceneParam._m0[_2060].w, fma(_2009, cbSceneParam._m0[_2060].z, fma(_2005, cbSceneParam._m0[_2060].y, _2001 * cbSceneParam._m0[_2060].x))) / _2091;
        float _2149 = (cbSceneParam._m0[33u].x - sqrt(((_2015 * _2015) + (_2014 * _2014)) + (_2016 * _2016))) * cbSceneParam._m0[33u].y;
        float _4501 = isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0));
        float _2156 = (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2096 + _2079) / _2091, (_2098 + _2083) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2098 + _2079) / _2091, (_2083 - _2096) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2079 - _2096) / _2091, (_2083 - _2098) / _2091), _2101), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2079 - _2098) / _2091, (_2096 + _2083) / _2091), _2101), 0.0)).x), vec4(0.25)));
        _2163 = 1.0 - (_2156 * cbSceneParam._m0[34u].x);
        _2164 = 1.0 - (_2156 * cbSceneParam._m0[34u].y);
        _2165 = 1.0 - (_2156 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2163 = 1.0;
        _2164 = 1.0;
        _2165 = 1.0;
    }
    float _2229;
    float _2231;
    float _2233;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2217 = fma(_2013, cbSceneParam._m0[63u].w, fma(_2009, cbSceneParam._m0[63u].z, fma(_2005, cbSceneParam._m0[63u].y, _2001 * cbSceneParam._m0[63u].x)));
        float _2218 = fma(_2013, cbSceneParam._m0[60u].w, fma(_2009, cbSceneParam._m0[60u].z, fma(_2005, cbSceneParam._m0[60u].y, _2001 * cbSceneParam._m0[60u].x))) / _2217;
        float _2219 = fma(_2013, cbSceneParam._m0[61u].w, fma(_2009, cbSceneParam._m0[61u].z, fma(_2005, cbSceneParam._m0[61u].y, _2001 * cbSceneParam._m0[61u].x))) / _2217;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2218 >= cbSceneParam._m0[64u].x) && (_2219 >= cbSceneParam._m0[64u].y)) && (_2218 <= cbSceneParam._m0[64u].z)) && (_2219 <= cbSceneParam._m0[64u].w))
        {
            float _2357 = fma(_2013, cbSceneParam._m0[62u].w, fma(_2009, cbSceneParam._m0[62u].z, fma(_2005, cbSceneParam._m0[62u].y, _2001 * cbSceneParam._m0[62u].x))) / _2217;
            float _2361 = isnan(cbSceneParam._m0[41u].w) ? _2357 : (isnan(_2357) ? cbSceneParam._m0[41u].w : max(_2357, cbSceneParam._m0[41u].w));
            float _2404 = (cbSceneParam._m0[33u].x - sqrt(((_2015 * _2015) + (_2014 * _2014)) + (_2016 * _2016))) * cbSceneParam._m0[33u].y;
            float _4517 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
            float _2411 = (isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2218, cbSceneParam._m0[33u].w + _2219), _2361), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2218, _2219 - cbSceneParam._m0[33u].z), _2361), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2218 - cbSceneParam._m0[33u].z, _2219 - cbSceneParam._m0[33u].w), _2361), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2218 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2219), _2361), 0.0)).x), vec4(0.25)));
            float _2415 = 1.0 - (_2411 * cbSceneParam._m0[34u].x);
            float _2416 = 1.0 - (_2411 * cbSceneParam._m0[34u].y);
            float _2417 = 1.0 - (_2411 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2416) ? _2164 : (isnan(_2164) ? _2416 : min(_2164, _2416));
            frontier_phi_36_35_ladder_1 = isnan(_2417) ? _2165 : (isnan(_2165) ? _2417 : min(_2165, _2417));
            frontier_phi_36_35_ladder_2 = isnan(_2415) ? _2163 : (isnan(_2163) ? _2415 : min(_2163, _2415));
        }
        else
        {
            frontier_phi_36_35_ladder = _2164;
            frontier_phi_36_35_ladder_1 = _2165;
            frontier_phi_36_35_ladder_2 = _2163;
        }
        _2229 = frontier_phi_36_35_ladder_2;
        _2231 = frontier_phi_36_35_ladder;
        _2233 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2229 = _2163;
        _2231 = _2164;
        _2233 = _2165;
    }
    uvec4 _2238 = floatBitsToUint(cbInstanceData._m0[_836 + 5u]);
    uint _2240 = _2238.x * 14u;
    uint _2241 = _2240 + 13u;
    float _2248 = _944 + (-1.0);
    float _2253 = (cbLight._m0[_2241].x * _2248) + 1.0;
    float _2254 = (cbLight._m0[_2241].y * _2248) + 1.0;
    float _2255 = (cbLight._m0[_2241].z * _2248) + 1.0;
    float _2256 = (cbLight._m0[_2241].w * _2248) + 1.0;
    uint _2257 = _2240 + 5u;
    float _2263 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
    uint _2267 = _2240 + 4u;
    float _2276 = isnan(1.0) ? _2253 : (isnan(_2253) ? 1.0 : min(_2253, 1.0));
    uint _2280 = _2240 | 1u;
    float _2291 = dot(vec3(cbLight._m0[_2240].xyz), vec3(_588, _589, _590));
    float _2294 = dot(vec3(cbLight._m0[_2280].xyz), vec3(_588, _589, _590));
    float _4553 = isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0));
    float _4564 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
    float _2299 = (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0))) * 0.3183098733425140380859375;
    float _2301 = (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * 0.3183098733425140380859375;
    float _2308 = ((cbLight._m0[_2257].x * _2263) * _2301) + (((cbLight._m0[_2267].x * _2229) * _2276) * _2299);
    float _2309 = ((_2263 * cbLight._m0[_2257].y) * _2301) + (((cbLight._m0[_2267].y * _2231) * _2276) * _2299);
    float _2310 = ((_2263 * cbLight._m0[_2257].z) * _2301) + (((cbLight._m0[_2267].z * _2233) * _2276) * _2299);
    uvec4 _2314 = floatBitsToUint(cbLight._m0[_2240 + 12u]);
    bool _2316 = _2314.x == 0u;
    float _2418;
    float _2420;
    float _2422;
    if (_2316)
    {
        _2418 = _2308;
        _2420 = _2309;
        _2422 = _2310;
    }
    else
    {
        uint _2426 = _2240 + 6u;
        float _2442 = (dot(vec3(cbLight._m0[_2240 + 2u].xyz), vec3(_588, _589, _590)) * 0.5) + 0.5;
        float _2443 = _2442 * _2442;
        float _4575 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
        float _2444 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _2445 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
        _2418 = (((cbLight._m0[_2426].x * 0.3183098733425140380859375) * _2444) * _2445) + _2308;
        _2420 = (((cbLight._m0[_2426].y * 0.3183098733425140380859375) * _2444) * _2445) + _2309;
        _2422 = (((cbLight._m0[_2426].z * 0.3183098733425140380859375) * _2444) * _2445) + _2310;
    }
    bool _2425 = _2314.y == 0u;
    float _2480;
    float _2482;
    float _2484;
    if (_2425)
    {
        _2480 = _2418;
        _2482 = _2420;
        _2484 = _2422;
    }
    else
    {
        uint _2653 = _2240 + 7u;
        float _2669 = (dot(vec3(cbLight._m0[_2240 + 3u].xyz), vec3(_588, _589, _590)) * 0.5) + 0.5;
        float _2670 = _2669 * _2669;
        float _4591 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        float _2671 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
        float _2672 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
        _2480 = (((cbLight._m0[_2653].x * 0.3183098733425140380859375) * _2671) * _2672) + _2418;
        _2482 = (((cbLight._m0[_2653].y * 0.3183098733425140380859375) * _2671) * _2672) + _2420;
        _2484 = (((cbLight._m0[_2653].z * 0.3183098733425140380859375) * _2671) * _2672) + _2422;
    }
    uint _2487 = _2240 + 8u;
    float _2500 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2240].w)) * _812) * 0.949999988079071044921875);
    float _2501 = _2500 * _2500;
    float _2502 = cbLight._m0[_2240].x + _614;
    float _2503 = cbLight._m0[_2240].y + _615;
    float _2504 = cbLight._m0[_2240].z + _616;
    float _2508 = inversesqrt(dot(vec3(_2502, _2503, _2504), vec3(_2502, _2503, _2504)));
    float _2509 = _2508 * _2502;
    float _2510 = _2508 * _2503;
    float _2511 = _2508 * _2504;
    float _2512 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2240].xyz));
    float _4607 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2515 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
    float _4618 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _2516 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
    float _2517 = dot(vec3(_588, _589, _590), vec3(_2509, _2510, _2511));
    float _4629 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
    float _2520 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
    float _2521 = dot(vec3(cbLight._m0[_2240].xyz), vec3(_2509, _2510, _2511));
    float _4640 = isnan(0.0) ? _2521 : (isnan(_2521) ? 0.0 : max(_2521, 0.0));
    float _2525 = _2501 * _2501;
    float _2529 = ((_2520 * _2520) * (_2525 + (-1.0))) + 1.0;
    float _2537 = exp2(log2(1.0 - (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0)))) * 5.0);
    float _2538 = 0.959999978542327880859375 - _927;
    float _2540 = 0.959999978542327880859375 - _928;
    float _2541 = 0.959999978542327880859375 - _929;
    float _2548 = 1.0 - _2501;
    float _2559 = (0.5 / (((_2516 * ((_2515 * _2548) + _2501)) + 9.9999999392252902907785028219223e-09) + (((_2516 * _2548) + _2501) * _2515))) * _2515;
    float _4651 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
    float _2561 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (_2525 / ((_2529 * _2529) * 3.141590118408203125));
    uint _2575 = _2240 + 9u;
    float _2586 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2280].w)) * _812) * 0.949999988079071044921875);
    float _2587 = _2586 * _2586;
    float _2588 = cbLight._m0[_2280].x + _614;
    float _2589 = cbLight._m0[_2280].y + _615;
    float _2590 = cbLight._m0[_2280].z + _616;
    float _2594 = inversesqrt(dot(vec3(_2588, _2589, _2590), vec3(_2588, _2589, _2590)));
    float _2595 = _2594 * _2588;
    float _2596 = _2594 * _2589;
    float _2597 = _2594 * _2590;
    float _2598 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2280].xyz));
    float _4662 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2601 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
    float _2602 = dot(vec3(_588, _589, _590), vec3(_2595, _2596, _2597));
    float _4673 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
    float _2605 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
    float _2606 = dot(vec3(cbLight._m0[_2280].xyz), vec3(_2595, _2596, _2597));
    float _4684 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
    float _2610 = _2587 * _2587;
    float _2614 = ((_2605 * _2605) * (_2610 + (-1.0))) + 1.0;
    float _2621 = exp2(log2(1.0 - (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0)))) * 5.0);
    float _2628 = 1.0 - _2587;
    float _2638 = (0.5 / (((_2516 * ((_2601 * _2628) + _2587)) + 9.9999999392252902907785028219223e-09) + (((_2516 * _2628) + _2587) * _2601))) * _2601;
    float _4695 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2640 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (_2610 / ((_2614 * _2614) * 3.141590118408203125));
    float _2650 = (((((_2621 * _2538) + _930) * cbLight._m0[_2575].x) * _2640) * _2263) + ((((cbLight._m0[_2487].x * _2229) * ((_2537 * _2538) + _930)) * _2561) * _2276);
    float _2651 = (((((_2621 * _2540) + _931) * cbLight._m0[_2575].y) * _2640) * _2263) + ((((cbLight._m0[_2487].y * _2231) * ((_2537 * _2540) + _931)) * _2561) * _2276);
    float _2652 = (((((_2621 * _2541) + _932) * cbLight._m0[_2575].z) * _2640) * _2263) + ((((cbLight._m0[_2487].z * _2233) * ((_2537 * _2541) + _932)) * _2561) * _2276);
    float _2708;
    float _2710;
    float _2712;
    if (_2316)
    {
        _2708 = _2650;
        _2710 = _2651;
        _2712 = _2652;
    }
    else
    {
        uint _2714 = _2240 + 2u;
        uint _2718 = _2240 + 10u;
        float _2732 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2714].w)) * _812) * 0.949999988079071044921875);
        float _2733 = _2732 * _2732;
        float _2734 = cbLight._m0[_2714].x + _614;
        float _2735 = cbLight._m0[_2714].y + _615;
        float _2736 = cbLight._m0[_2714].z + _616;
        float _2740 = inversesqrt(dot(vec3(_2734, _2735, _2736), vec3(_2734, _2735, _2736)));
        float _2741 = _2740 * _2734;
        float _2742 = _2740 * _2735;
        float _2743 = _2740 * _2736;
        float _2744 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2714].xyz));
        float _4706 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
        float _2747 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _2748 = dot(vec3(_588, _589, _590), vec3(_2741, _2742, _2743));
        float _4717 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2751 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
        float _2752 = dot(vec3(cbLight._m0[_2714].xyz), vec3(_2741, _2742, _2743));
        float _4728 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2756 = _2733 * _2733;
        float _2760 = ((_2751 * _2751) * (_2756 + (-1.0))) + 1.0;
        float _2767 = exp2(log2(1.0 - (isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0)))) * 5.0);
        float _2774 = 1.0 - _2733;
        float _2784 = (0.5 / (((_2516 * ((_2747 * _2774) + _2733)) + 9.9999999392252902907785028219223e-09) + (((_2516 * _2774) + _2733) * _2747))) * _2747;
        float _4739 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
        float _2786 = (isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0))) * (_2756 / ((_2760 * _2760) * 3.141590118408203125));
        float _2787 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
        _2708 = (((((_2767 * _2538) + _930) * cbLight._m0[_2718].x) * _2786) * _2787) + _2650;
        _2710 = (((((_2767 * _2540) + _931) * cbLight._m0[_2718].y) * _2786) * _2787) + _2651;
        _2712 = (((((_2767 * _2541) + _932) * cbLight._m0[_2718].z) * _2786) * _2787) + _2652;
    }
    float _2818;
    float _2820;
    float _2822;
    if (_2425)
    {
        _2818 = _2708;
        _2820 = _2710;
        _2822 = _2712;
    }
    else
    {
        uint _2829 = _2240 + 3u;
        uint _2833 = _2240 + 11u;
        float _2847 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2829].w)) * _812) * 0.949999988079071044921875);
        float _2848 = _2847 * _2847;
        float _2849 = cbLight._m0[_2829].x + _614;
        float _2850 = cbLight._m0[_2829].y + _615;
        float _2851 = cbLight._m0[_2829].z + _616;
        float _2855 = inversesqrt(dot(vec3(_2849, _2850, _2851), vec3(_2849, _2850, _2851)));
        float _2856 = _2855 * _2849;
        float _2857 = _2855 * _2850;
        float _2858 = _2855 * _2851;
        float _2859 = dot(vec3(_588, _589, _590), vec3(cbLight._m0[_2829].xyz));
        float _4755 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2862 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
        float _2863 = dot(vec3(_588, _589, _590), vec3(_2856, _2857, _2858));
        float _4766 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2866 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _2867 = dot(vec3(cbLight._m0[_2829].xyz), vec3(_2856, _2857, _2858));
        float _4777 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
        float _2871 = _2848 * _2848;
        float _2875 = ((_2866 * _2866) * (_2871 + (-1.0))) + 1.0;
        float _2882 = exp2(log2(1.0 - (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0)))) * 5.0);
        float _2889 = 1.0 - _2848;
        float _2899 = (0.5 / (((_2516 * ((_2862 * _2889) + _2848)) + 9.9999999392252902907785028219223e-09) + (((_2516 * _2889) + _2848) * _2862))) * _2862;
        float _4788 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
        float _2901 = (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0))) * (_2871 / ((_2875 * _2875) * 3.141590118408203125));
        float _2902 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
        _2818 = (((((_2882 * _2538) + _930) * cbLight._m0[_2833].x) * _2901) * _2902) + _2708;
        _2820 = (((((_2882 * _2540) + _931) * cbLight._m0[_2833].y) * _2901) * _2902) + _2710;
        _2822 = (((((_2882 * _2541) + _932) * cbLight._m0[_2833].z) * _2901) * _2902) + _2712;
    }
    float _2967;
    float _2969;
    float _2971;
    float _2973;
    float _2975;
    float _2977;
    if (_2238.y == 0u)
    {
        uvec4 _2923 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2924 = _2923.x;
        uint _2935 = uint((float(_2923.y) * floor(float(uint(cbSceneParam._m0[85u].y * _735) / _2924))) + floor(float(uint(cbSceneParam._m0[85u].x * _734) / _2924)));
        float _2945 = (log2(_2016 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2946 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
        uint _2949 = uint(isnan(14.0) ? _2946 : (isnan(_2946) ? 14.0 : min(_2946, 14.0)));
        uvec4 _2954 = texelFetch(g_lightClusterGridBuffer, int(((_2949 << 2u) + (_2935 << 6u)) >> 2u));
        uint _2955 = _2954.x;
        uint _2956 = _2923.z;
        float _3060;
        float _3062;
        float _3064;
        float _3066;
        float _3068;
        float _3070;
        if (((((1u << ((_2956 >> 4u) & 15u)) + 4294967295u) & _2955) == 0u) || ((_2956 & 240u) == 0u))
        {
            _3060 = 0.0;
            _3062 = 0.0;
            _3064 = 0.0;
            _3066 = 0.0;
            _3068 = 0.0;
            _3070 = 0.0;
        }
        else
        {
            float _3061;
            float _3063;
            float _3065;
            float _3067;
            float _3069;
            float _3071;
            float _3213 = 0.0;
            float _3214 = 0.0;
            float _3215 = 0.0;
            float _3216 = 0.0;
            float _3217 = 0.0;
            float _3218 = 0.0;
            uint _3219 = 0u;
            uint _3228;
            bool _3229;
            for (;;)
            {
                _3228 = texelFetch(g_lightClassification, int((((_2949 << 5u) + (_2935 << 9u)) + (_3219 << 2u)) >> 2u)).x;
                _3229 = _3228 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3229)
                {
                    frontier_phi_68_pred = _3218;
                    frontier_phi_68_pred_1 = _3217;
                    frontier_phi_68_pred_2 = _3216;
                    frontier_phi_68_pred_3 = _3214;
                    frontier_phi_68_pred_4 = _3213;
                    frontier_phi_68_pred_5 = _3215;
                }
                else
                {
                    float _3337;
                    float _3338;
                    float _3339;
                    float _3340;
                    float _3341;
                    float _3342;
                    uint _3343;
                    _3337 = _3213;
                    _3338 = _3214;
                    _3339 = _3215;
                    _3340 = _3216;
                    _3341 = _3217;
                    _3342 = _3218;
                    _3343 = _3228;
                    float _3269;
                    float _3270;
                    float _3271;
                    float _3272;
                    float _3273;
                    float _3274;
                    for (;;)
                    {
                        uint _3347 = uint(findLSB(_3343)) + (_3219 << 5u);
                        uint _3344 = (_3343 + 4294967295u) & _3343;
                        uint _3349 = _3347 * 48u;
                        vec4 _3363 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3349)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 3u)).x));
                        uint _3369 = (_3347 * 48u) + 4u;
                        vec4 _3382 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3369)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 3u)).x));
                        uint _3388 = (_3347 * 48u) + 8u;
                        vec3 _3399 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3388)).x, texelFetch(g_PointLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3388 + 2u)).x));
                        float _3403 = _3363.x - _2014;
                        float _3404 = _3363.y - _2015;
                        float _3405 = _3363.z - _2016;
                        float _3406 = dot(vec3(_3403, _3404, _3405), vec3(_3403, _3404, _3405));
                        float _3409 = inversesqrt(_3406);
                        float _3410 = _3409 * _3403;
                        float _3411 = _3409 * _3404;
                        float _3412 = _3409 * _3405;
                        float _3413 = dot(vec3(_757, _760, _763), vec3(_3410, _3411, _3412));
                        float _3418 = 1.0 - (_3406 * _3363.w);
                        float _4814 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0));
                        float _3419 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
                        float _3420 = sqrt(_3406) * _3382.w;
                        float _3423 = 1.39999997615814208984375 / (_3420 + 1.39999997615814208984375);
                        float _3424 = _3423 * _3423;
                        float _3427 = ((1.0 - _3424) * _3413) + _3424;
                        float _3430 = _3420 * _3420;
                        float _3433 = ((isnan(0.0) ? _3427 : (isnan(_3427) ? 0.0 : max(_3427, 0.0))) * _3419) / ((_3430 * 0.699999988079071044921875) + 1.0);
                        float _3437 = (-0.0) - _2014;
                        float _3438 = (-0.0) - _2015;
                        float _3439 = (-0.0) - _2016;
                        float _3443 = inversesqrt(dot(vec3(_3437, _3438, _3439), vec3(_3437, _3438, _3439)));
                        float _3444 = _3443 * _3437;
                        float _3445 = _3443 * _3438;
                        float _3446 = _3443 * _3439;
                        float _3453 = exp2(log2(1.0 / ((_3430 * 3.5) + 5.0)) * 0.25);
                        float _3454 = 1.0 - _954;
                        float _3461 = sqrt(1.0 - ((1.0 - (_3454 * _3454)) * (1.0 - (_3453 * _3453))));
                        float _3462 = _3461 * _3461;
                        float _3463 = _3462 * _3462;
                        float _3464 = _3444 + _3410;
                        float _3465 = _3445 + _3411;
                        float _3466 = _3446 + _3412;
                        float _3470 = inversesqrt(dot(vec3(_3464, _3465, _3466), vec3(_3464, _3465, _3466)));
                        float _3474 = dot(vec3(_757, _760, _763), vec3(_3444, _3445, _3446));
                        float _4830 = isnan(0.0) ? _3474 : (isnan(_3474) ? 0.0 : max(_3474, 0.0));
                        float _3477 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                        float _3478 = dot(vec3(_757, _760, _763), vec3(_3470 * _3464, _3470 * _3465, _3470 * _3466));
                        float _4841 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3481 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
                        float _3485 = ((_3481 * _3481) * (_3463 + (-1.0))) + 1.0;
                        float _3486 = _3423 * _3462;
                        float _3487 = _3486 * _3486;
                        float _3490 = ((1.0 - _3487) * _3413) + _3487;
                        float _4852 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                        float _3491 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
                        float _3492 = 1.0 - _3462;
                        float _3502 = (0.5 / (((_3491 * ((_3477 * _3492) + _3462)) + 9.9999999392252902907785028219223e-09) + (((_3491 * _3492) + _3462) * _3477))) * _3491;
                        float _4863 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0));
                        float _3513 = (((_3463 * 3.1415927410125732421875) * (isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0)))) / ((_3485 * _3485) * ((_3430 * 2.1991131305694580078125) + 3.141590118408203125))) * _3419;
                        _3272 = (_3433 * _3382.x) + _3340;
                        _3273 = (_3433 * _3382.y) + _3341;
                        _3274 = (_3433 * _3382.z) + _3342;
                        _3269 = (_3513 * _3399.x) + _3337;
                        _3270 = (_3513 * _3399.y) + _3338;
                        _3271 = (_3513 * _3399.z) + _3339;
                        if (_3344 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3337 = _3269;
                            _3338 = _3270;
                            _3339 = _3271;
                            _3340 = _3272;
                            _3341 = _3273;
                            _3342 = _3274;
                            _3343 = _3344;
                        }
                    }
                    frontier_phi_68_pred = _3274;
                    frontier_phi_68_pred_1 = _3273;
                    frontier_phi_68_pred_2 = _3272;
                    frontier_phi_68_pred_3 = _3270;
                    frontier_phi_68_pred_4 = _3269;
                    frontier_phi_68_pred_5 = _3271;
                }
                _3071 = frontier_phi_68_pred;
                _3069 = frontier_phi_68_pred_1;
                _3067 = frontier_phi_68_pred_2;
                _3063 = frontier_phi_68_pred_3;
                _3061 = frontier_phi_68_pred_4;
                _3065 = frontier_phi_68_pred_5;
                uint _3220 = _3219 + 1u;
                if (_3220 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3213 = _3061;
                    _3214 = _3063;
                    _3215 = _3065;
                    _3216 = _3067;
                    _3217 = _3069;
                    _3218 = _3071;
                    _3219 = _3220;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3060 = _3061;
            _3062 = _3063;
            _3064 = _3065;
            _3066 = _3067;
            _3068 = _3069;
            _3070 = _3071;
        }
        uvec4 _3074 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3075 = _3074.z;
        uint _3077 = (_3075 >> 8u) & 15u;
        float _3181;
        float _3183;
        float _3185;
        float _3187;
        float _3189;
        float _3191;
        if (((4294967295u << _3077) & _2955) == 0u)
        {
            _3181 = _3060;
            _3183 = _3062;
            _3185 = _3064;
            _3187 = _3066;
            _3189 = _3068;
            _3191 = _3070;
        }
        else
        {
            float _3206 = inversesqrt(dot(vec3(_2014, _2015, _2016), vec3(_2014, _2015, _2016)));
            float _3207 = _3206 * _2014;
            float _3208 = _3206 * _2015;
            float _3209 = _3206 * _2016;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3077 < ((_3075 >> 12u) & 15u))
            {
                float _3182;
                float _3184;
                float _3186;
                float _3188;
                float _3190;
                float _3192;
                float _3320 = _3060;
                float _3321 = _3062;
                float _3322 = _3064;
                float _3323 = _3066;
                float _3324 = _3068;
                float _3325 = _3070;
                uint _3326 = _3077;
                uint _3335;
                bool _3336;
                for (;;)
                {
                    _3335 = texelFetch(g_lightClassification, int((((_2949 << 5u) + (_2935 << 9u)) + (_3326 << 2u)) >> 2u)).x;
                    _3336 = _3335 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3336)
                    {
                        frontier_phi_74_pred = _3322;
                        frontier_phi_74_pred_1 = _3321;
                        frontier_phi_74_pred_2 = _3320;
                        frontier_phi_74_pred_3 = _3325;
                        frontier_phi_74_pred_4 = _3324;
                        frontier_phi_74_pred_5 = _3323;
                    }
                    else
                    {
                        float _3518;
                        float _3519;
                        float _3520;
                        float _3521;
                        float _3522;
                        float _3523;
                        float _3813;
                        float _3814;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _3818;
                        float _3531 = _3320;
                        float _3532 = _3321;
                        float _3533 = _3322;
                        float _3534 = _3323;
                        float _3535 = _3324;
                        float _3536 = _3325;
                        uint _3537 = _3335;
                        uint _3538;
                        vec4 _3563;
                        float _3564;
                        vec4 _3579;
                        vec3 _3591;
                        vec4 _3606;
                        vec4 _3622;
                        float _3669;
                        bool _3670;
                        for (;;)
                        {
                            uint _3548 = ((_3326 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3537));
                            _3538 = (_3537 + 4294967295u) & _3537;
                            uint _3550 = _3548 * 40u;
                            _3563 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3550)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 3u)).x));
                            _3564 = _3563.w;
                            uint _3566 = (_3548 * 40u) + 4u;
                            _3579 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3566)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 3u)).x));
                            uint _3581 = (_3548 * 40u) + 8u;
                            _3591 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3581)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 2u)).x));
                            uint _3593 = (_3548 * 40u) + 16u;
                            _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            uint _3609 = (_3548 * 40u) + 20u;
                            _3622 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3609)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 3u)).x));
                            uint _3625 = (_3548 * 40u) + 24u;
                            vec4 _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            uint _3644 = (_3548 * 40u) + 28u;
                            vec4 _3657 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3644)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 3u)).x));
                            _3669 = fma(_2016, _3657.z, fma(_2015, _3657.y, _3657.x * _2014)) + _3657.w;
                            _3670 = !((fma(_2016, _3638.z, fma(_2015, _3638.y, _3638.x * _2014)) + _3638.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3670)
                            {
                                float _3697 = _3563.x - _2014;
                                float _3698 = _3563.y - _2015;
                                float _3699 = _3563.z - _2016;
                                float _3700 = dot(vec3(_3697, _3698, _3699), vec3(_3697, _3698, _3699));
                                float _3703 = inversesqrt(_3700);
                                float _3704 = _3703 * _3697;
                                float _3705 = _3703 * _3698;
                                float _3706 = _3703 * _3699;
                                float _3710 = 1.0 - (_3700 / (_3564 * _3564));
                                float _4874 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                                float _3711 = isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0));
                                float _3715 = sqrt(_3700) * _3579.w;
                                float _3717 = 1.39999997615814208984375 / (_3715 + 1.39999997615814208984375);
                                float _3718 = _3717 * _3717;
                                float _3721 = ((1.0 - _3718) * dot(vec3(_3704, _3705, _3706), vec3(_757, _760, _763))) + _3718;
                                float _3724 = _3715 * _3715;
                                float _3728 = (fma(_2016, _3606.z, fma(_2015, _3606.y, _3606.x * _2014)) + _3606.w) / _3669;
                                float _3729 = (fma(_2016, _3622.z, fma(_2015, _3622.y, _3622.x * _2014)) + _3622.w) / _3669;
                                float _3733 = 1.0 - dot(vec2(_3728, _3729), vec2(_3728, _3729));
                                float _4890 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
                                float _3735 = _3734 * (((isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0))) * _3711) / ((_3724 * 0.699999988079071044921875) + 1.0));
                                float _3747 = exp2(log2(1.0 / ((_3724 * 3.5) + 5.0)) * 0.25);
                                float _3748 = 1.0 - _954;
                                float _3755 = sqrt(1.0 - ((1.0 - (_3748 * _3748)) * (1.0 - (_3747 * _3747))));
                                float _3756 = _3755 * _3755;
                                float _3757 = _3756 * _3756;
                                float _3758 = _3704 - _3207;
                                float _3759 = _3705 - _3208;
                                float _3760 = _3706 - _3209;
                                float _3764 = inversesqrt(dot(vec3(_3758, _3759, _3760), vec3(_3758, _3759, _3760)));
                                float _3768 = dot(vec3(_757, _760, _763), vec3((-0.0) - _3207, (-0.0) - _3208, (-0.0) - _3209));
                                float _4901 = isnan(0.0) ? _3768 : (isnan(_3768) ? 0.0 : max(_3768, 0.0));
                                float _3771 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
                                float _3772 = dot(vec3(_757, _760, _763), vec3(_3764 * _3758, _3764 * _3759, _3764 * _3760));
                                float _4912 = isnan(0.0) ? _3772 : (isnan(_3772) ? 0.0 : max(_3772, 0.0));
                                float _3775 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                                float _3779 = ((_3775 * _3775) * (_3757 + (-1.0))) + 1.0;
                                float _3780 = _3717 * _3756;
                                float _3781 = _3780 * _3780;
                                float _3787 = ((1.0 - _3781) * dot(vec3(_757, _760, _763), vec3(_3704, _3705, _3706))) + _3781;
                                float _4923 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3788 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
                                float _3789 = 1.0 - _3756;
                                float _3799 = (0.5 / (((_3788 * ((_3771 * _3789) + _3756)) + 9.9999999392252902907785028219223e-09) + (((_3788 * _3789) + _3756) * _3771))) * _3788;
                                float _4934 = isnan(0.0) ? _3799 : (isnan(_3799) ? 0.0 : max(_3799, 0.0));
                                float _3809 = (_3734 * _3711) * (((_3757 * 3.1415927410125732421875) * (isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0)))) / ((_3779 * _3779) * ((_3724 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3809 * _3591.z;
                                frontier_phi_80_pred_1 = _3809 * _3591.y;
                                frontier_phi_80_pred_2 = _3809 * _3591.x;
                                frontier_phi_80_pred_3 = _3735 * _3579.z;
                                frontier_phi_80_pred_4 = _3735 * _3579.y;
                                frontier_phi_80_pred_5 = _3735 * _3579.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3815 = frontier_phi_80_pred;
                            _3814 = frontier_phi_80_pred_1;
                            _3813 = frontier_phi_80_pred_2;
                            _3818 = frontier_phi_80_pred_3;
                            _3817 = frontier_phi_80_pred_4;
                            _3816 = frontier_phi_80_pred_5;
                            _3521 = _3816 + _3534;
                            _3522 = _3817 + _3535;
                            _3523 = _3818 + _3536;
                            _3518 = _3813 + _3531;
                            _3519 = _3814 + _3532;
                            _3520 = _3815 + _3533;
                            if (_3538 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3531 = _3518;
                                _3532 = _3519;
                                _3533 = _3520;
                                _3534 = _3521;
                                _3535 = _3522;
                                _3536 = _3523;
                                _3537 = _3538;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3520;
                        frontier_phi_74_pred_1 = _3519;
                        frontier_phi_74_pred_2 = _3518;
                        frontier_phi_74_pred_3 = _3523;
                        frontier_phi_74_pred_4 = _3522;
                        frontier_phi_74_pred_5 = _3521;
                    }
                    _3186 = frontier_phi_74_pred;
                    _3184 = frontier_phi_74_pred_1;
                    _3182 = frontier_phi_74_pred_2;
                    _3192 = frontier_phi_74_pred_3;
                    _3190 = frontier_phi_74_pred_4;
                    _3188 = frontier_phi_74_pred_5;
                    uint _3327 = _3326 + 1u;
                    if (_3327 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3320 = _3182;
                        _3321 = _3184;
                        _3322 = _3186;
                        _3323 = _3188;
                        _3324 = _3190;
                        _3325 = _3192;
                        _3326 = _3327;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3190;
                frontier_phi_62_63_ladder_1 = _3188;
                frontier_phi_62_63_ladder_2 = _3186;
                frontier_phi_62_63_ladder_3 = _3192;
                frontier_phi_62_63_ladder_4 = _3184;
                frontier_phi_62_63_ladder_5 = _3182;
            }
            else
            {
                frontier_phi_62_63_ladder = _3068;
                frontier_phi_62_63_ladder_1 = _3066;
                frontier_phi_62_63_ladder_2 = _3064;
                frontier_phi_62_63_ladder_3 = _3070;
                frontier_phi_62_63_ladder_4 = _3062;
                frontier_phi_62_63_ladder_5 = _3060;
            }
            _3181 = frontier_phi_62_63_ladder_5;
            _3183 = frontier_phi_62_63_ladder_4;
            _3185 = frontier_phi_62_63_ladder_2;
            _3187 = frontier_phi_62_63_ladder_1;
            _3189 = frontier_phi_62_63_ladder;
            _3191 = frontier_phi_62_63_ladder_3;
        }
        float _3196 = isnan(1.0) ? _944 : (isnan(_944) ? 1.0 : min(_944, 1.0));
        _2967 = (_3196 * _3187) + _2480;
        _2969 = (_3196 * _3189) + _2482;
        _2971 = (_3196 * _3191) + _2484;
        _2973 = ((_3181 * _930) * _3196) + _2818;
        _2975 = ((_3183 * _931) * _3196) + _2820;
        _2977 = ((_3185 * _932) * _3196) + _2822;
    }
    else
    {
        _2967 = _2480;
        _2969 = _2482;
        _2971 = _2484;
        _2973 = _2818;
        _2975 = _2820;
        _2977 = _2822;
    }
    uint _2983 = _837 + uint(cbMatDynParam._m0[0u].w);
    float _2989 = cbInstanceData._m0[_2983].x * ((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _630) + cbMatDynParam._m0[7u].x) + (((_671 - (_671 * _596)) + (cbMatDynParam._m0[11u].x * _702)) * cbMatDynParam._m0[9u].x));
    float _2990 = cbInstanceData._m0[_2983].y * ((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _630) + cbMatDynParam._m0[7u].y) + (((_673 - (_673 * _596)) + (cbMatDynParam._m0[11u].y * _702)) * cbMatDynParam._m0[9u].y));
    float _2991 = cbInstanceData._m0[_2983].z * ((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _630) + cbMatDynParam._m0[7u].z) + (((_675 - (_675 * _596)) + (cbMatDynParam._m0[11u].z * _702)) * cbMatDynParam._m0[9u].z));
    float _4950 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    float _4961 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _4972 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _4983 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _3009 = (((isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0))) * (_2967 + ((isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))) * _944))) + ((_2973 + ((isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0))) * _1744)) * cbPerFrame._m0[3u].x)) + _2989;
    float _3011 = (_2990 + ((_2975 + ((isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0))) * _1744)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0))) * (_2969 + ((isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0))) * _944)));
    float _3013 = (_2991 + ((_2977 + ((isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) * _1744)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0))) * (_2971 + ((isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0))) * _944)));
    float _3021 = cbMatDynParam._m0[12u].y - (cbMatDynParam._m0[12u].y * ((((isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) - _657) * _630) + _657));
    float _3026 = cbInstanceData._m0[_836 + 6u].w * (isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0)));
    float _3031 = _734 / cbSceneParam._m0[86u].x;
    float _3032 = _735 / cbSceneParam._m0[86u].y;
    vec4 _3046 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3031, _3032, (log2((isnan(cbSceneParam._m0[77u].w) ? _728 : (isnan(_728) ? cbSceneParam._m0[77u].w : min(_728, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3048 = _3046.x;
    float _3049 = _3046.y;
    float _3050 = _3046.z;
    float _3051 = _3046.w;
    float _3122;
    float _3124;
    float _3126;
    float _3128;
    if (_728 > cbSceneParam._m0[78u].w)
    {
        float _3085 = isnan(_728) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _728 : min(cbSceneParam._m0[80u].w, _728));
        float _3086 = _3085 / _728;
        float _3097 = _3086 * _291;
        float _3098 = _292 * _3086;
        float _3099 = (-0.0) - _3098;
        float _3100 = _3086 * _293;
        float _3102 = (cbSceneParam._m0[77u].w * _3099) / _3085;
        float _3103 = _3102 + cbSceneParam._m0[79u].w;
        float _3104 = cbSceneParam._m0[79u].w - _3098;
        float _3110 = sqrt(((_3097 * _3097) + (_3098 * _3098)) + (_3100 * _3100));
        float _3113 = (1.0 - (cbSceneParam._m0[77u].w / _3085)) * _3110;
        float _3118 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3120 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3282;
        if (abs((_3099 - _3102) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3282 = ((((_3103 > 0.0) ? exp2(_3118 * _3103) : (2.0 - exp2(_3120 * _3103))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3113;
        }
        else
        {
            float _3242 = 1.0 / cbSceneParam._m0[80u].x;
            float _3243 = isnan(_3104) ? _3103 : (isnan(_3103) ? _3104 : max(_3103, _3104));
            float _3244 = isnan(_3104) ? _3103 : (isnan(_3103) ? _3104 : min(_3103, _3104));
            float _3253 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : min(_3243, 0.0));
            float _3254 = isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : min(_3244, 0.0));
            _3282 = ((abs(_3110 / _3099) * cbSceneParam._m0[80u].y) * ((((_3253 - _3254) * 2.0) - ((exp2(_3118 * (isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0)))) - exp2(_3118 * (isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : max(_3244, 0.0))))) * _3242)) - ((exp2(_3120 * _3253) - exp2(_3120 * _3254)) * _3242))) + (_3113 * cbSceneParam._m0[80u].z);
        }
        vec4 _3284 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3031, _3032, 1.0), 0.0);
        float _3293 = exp2((_3282 * (-1.44269502162933349609375)) * (1.0 - _3284.w));
        float _3294 = log2(_3293);
        float _3310 = log2(_3051);
        _3122 = (exp2(_3310 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].x)) * _3284.x) / cbSceneParam._m0[78u].x)) + _3048;
        _3124 = (exp2(_3310 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].y)) * _3284.y) / cbSceneParam._m0[78u].y)) + _3049;
        _3126 = (exp2(_3310 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].z)) * _3284.z) / cbSceneParam._m0[78u].z)) + _3050;
        _3128 = _3293 * _3051;
    }
    else
    {
        _3122 = _3048;
        _3124 = _3049;
        _3126 = _3050;
        _3128 = _3051;
    }
    float _3140 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3141 = _3140 == 3.0;
    float _3142 = log2(_3128);
    float _3146 = exp2(_3142 * cbSceneParam._m0[78u].x);
    float _3147 = exp2(_3142 * cbSceneParam._m0[78u].y);
    float _3148 = exp2(_3142 * cbSceneParam._m0[78u].z);
    float _3149 = _3146 * (isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0)));
    float _3150 = _3147 * (isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0)));
    float _3151 = _3148 * (isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0)));
    float _3160 = (_3140 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3160 * (_3141 ? _3149 : (_3149 + (cbSceneParam._m0[72u].w * _3122)));
    SV_Target.y = _3160 * (_3141 ? _3150 : (_3150 + (cbSceneParam._m0[72u].w * _3124)));
    SV_Target.z = _3160 * (_3141 ? _3151 : (_3151 + (cbSceneParam._m0[72u].w * _3126)));
    SV_Target.w = _3026;
    SV_Target_1.x = ((_3021 * _2989) * _3146) * _3160;
    SV_Target_1.y = ((_3021 * _2990) * _3147) * _3160;
    SV_Target_1.z = ((_3021 * _2991) * _3148) * _3160;
    SV_Target_1.w = _3026;
}


