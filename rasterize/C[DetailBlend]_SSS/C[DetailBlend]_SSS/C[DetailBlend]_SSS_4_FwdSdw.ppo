#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1214;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    vec4 _250 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _255 = _250.z;
    float _262 = exp2(log2(_255 * 22.0) * 260.0);
    float _263 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _264 = isnan(1.0) ? _263 : (isnan(_263) ? 1.0 : min(_263, 1.0));
    vec4 _278 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _289 = cbMtdParam._m0[10u].x * _278.x;
    float _290 = cbMtdParam._m0[10u].y * _278.y;
    float _291 = cbMtdParam._m0[10u].z * _278.z;
    vec4 _303 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _331 = exp2(log2(1.0 - _250.w) * 8.0);
    vec4 _343 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _368 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _376 = (((((cbMtdParam._m0[9u].x * _303.x) - _289) * _264) + _289) * 4.55000019073486328125) * _368.x;
    float _378 = (((((cbMtdParam._m0[9u].y * _303.y) - _290) * _264) + _290) * 4.55000019073486328125) * _368.y;
    float _380 = (((((cbMtdParam._m0[9u].z * _303.z) - _291) * _264) + _291) * 4.55000019073486328125) * _368.z;
    float _387 = (((cbMtdParam._m0[12u].x * _343.x) - _376) * _331) + _376;
    float _388 = (((cbMtdParam._m0[12u].y * _343.y) - _378) * _331) + _378;
    float _389 = (((cbMtdParam._m0[12u].z * _343.z) - _380) * _331) + _380;
    float _390 = _368.w * _303.w;
    float _418 = (((texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x - cbMtdParam._m0[15u].y) + cbMtdParam._m0[14u].z) * _264) + cbMtdParam._m0[15u].y;
    float _421 = ((cbMtdParam._m0[14u].y - _418) * _331) + _418;
    vec4 _434 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _436 = _434.x;
    float _437 = _434.y;
    float _443 = cbMtdParam._m0[13u].y + _434.z;
    vec4 _455 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _477 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _490 = (((_264 * (_255 + (-0.5))) + 0.5) * 2.0) * ((((_455.z - _443) + cbMtdParam._m0[13u].x) * _264) + _443);
    float _494 = (((_477.z - _490) + cbMtdParam._m0[14u].x) * _331) + _490;
    float _498 = (_250.x * 2.0) + (-1.0);
    float _500 = (_250.y * 2.0) + (-1.0);
    float _501 = dot(vec2(_498, _500), vec2(_498, _500));
    float _3841 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _506 = sqrt(1.0 - (isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0))));
    float _511 = ((_455.x - _436) * _264) + _436;
    float _512 = ((_455.y - _437) * _264) + _437;
    float _525 = ((((((_477.x - _511) * _331) + _511) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _498;
    float _526 = ((((((_477.y - _512) * _331) + _512) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _500;
    float _529 = fma(_506, _234, fma(_526, _226 * TANGENT.x, (_212 * _204) * _525));
    float _532 = fma(_506, _235, fma(_526, _226 * TANGENT.y, (_212 * _205) * _525));
    float _535 = fma(_506, _236, fma(_526, _226 * TANGENT.z, (_212 * _206) * _525));
    float _539 = inversesqrt(dot(vec3(_529, _532, _535), vec3(_529, _532, _535)));
    float _540 = _539 * _529;
    float _541 = _539 * _532;
    float _542 = _539 * _535;
    float _3852 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _543 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
    float _3863 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _544 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _3874 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _545 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
    float _3885 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _546 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _3896 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _547 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _3907 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _548 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _564 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _605 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _615 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _605);
    float _616 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _605);
    float _617 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _605);
    float _621 = inversesqrt(dot(vec3(_615, _616, _617), vec3(_615, _616, _617)));
    float _622 = _615 * _621;
    float _623 = _616 * _621;
    float _624 = _617 * _621;
    float _630 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _631 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _633 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _635 = _633.w;
    float _654 = fma(_542, cbSceneParam._m0[5u].z, fma(_541, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _540));
    float _657 = fma(_542, cbSceneParam._m0[6u].z, fma(_541, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _540));
    float _660 = fma(_542, cbSceneParam._m0[7u].z, fma(_541, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _540));
    vec4 _662 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _664 = _662.x;
    float _676 = (((_662.y - _544) + (_662.w * _544)) * cbMtdParam._m0[3u].x) + _544;
    vec4 _677 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _693 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_664 * _664)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _677.z;
    float _701 = (((cbMatDynParam._m0[15u].x - _548) * cbMatDynParam._m0[15u].w) * _693) + _548;
    float _709 = ((_693 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _676)) + _676;
    uint _733 = uint(roundEven(NORMAL.w)) * 13u;
    uint _735 = (_733 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _741 = (cbMtdParam._m0[0u].x * _545) * cbInstanceData._m0[_735].x;
    float _742 = (cbMtdParam._m0[0u].y * _546) * cbInstanceData._m0[_735].y;
    float _743 = (cbMtdParam._m0[0u].z * _547) * cbInstanceData._m0[_735].z;
    float _3918 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _744 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _3929 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _745 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _3940 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _746 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    vec4 _747 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _752 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _763 = (((_752.x - _701) + (_752.w * _701)) * cbMtdParam._m0[3u].x) + _701;
    float _776 = (cbMtdParam._m0[3u].x * (((_744 * _635) - _744) + _747.x)) + _744;
    float _777 = (cbMtdParam._m0[3u].x * (((_745 * _635) - _745) + _747.y)) + _745;
    float _778 = (cbMtdParam._m0[3u].x * (((_746 * _635) - _746) + _747.z)) + _746;
    float _792 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_701 * (_545 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_701 * (_546 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_701 * (_547 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _796 = _792 * cbMatDynParam._m0[13u].w;
    float _806 = (_796 * (cbMatDynParam._m0[13u].x - _776)) + _776;
    float _807 = (_796 * (cbMatDynParam._m0[13u].y - _777)) + _777;
    float _808 = (_796 * (cbMatDynParam._m0[13u].z - _778)) + _778;
    float _816 = ((_792 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _763)) + _763;
    float _817 = 1.0 - _816;
    float _818 = _817 * _806;
    float _819 = _817 * _807;
    float _820 = _817 * _808;
    float _824 = (_806 + (-0.039999999105930328369140625)) * _816;
    float _825 = (_807 + (-0.039999999105930328369140625)) * _816;
    float _826 = (_808 + (-0.039999999105930328369140625)) * _816;
    float _827 = _824 + 0.039999999105930328369140625;
    float _828 = _825 + 0.039999999105930328369140625;
    float _829 = _826 + 0.039999999105930328369140625;
    vec4 _838 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _630, cbSceneParam._m0[86u].y * _631));
    float _841 = _838.x * TEXCOORD_4;
    float _842 = dot(vec3(_540, _541, _542), vec3(_622, _623, _624));
    float _845 = _842 * 2.0;
    float _849 = (_845 * _540) - _622;
    float _850 = (_845 * _541) - _623;
    float _851 = (_845 * _542) - _624;
    float _855 = abs(dot(vec3(_622, _623, _624), vec3(_540, _541, _542)));
    float _3951 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _857 = sqrt(_709);
    float _870 = exp2((_857 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_857 * 3.0));
    float _876 = (1.0 - _870) * ((_857 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _877 = _870 * _857;
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _909 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _913 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1213;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _940 = fma(_913, cbModelParam._m0[26u].z, fma(_909, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _905));
        float _944 = fma(_913, cbModelParam._m0[27u].z, fma(_909, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _905));
        float _948 = fma(_913, cbModelParam._m0[28u].z, fma(_909, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _905));
        float _971 = _905 + _540;
        float _972 = _909 + _541;
        float _973 = _913 + _542;
        float _983 = fma(_973, cbModelParam._m0[26u].z, fma(_972, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _971)) - _940;
        float _984 = fma(_973, cbModelParam._m0[27u].z, fma(_972, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _971)) - _944;
        float _985 = fma(_973, cbModelParam._m0[28u].z, fma(_972, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _971)) - _948;
        float _989 = inversesqrt(dot(vec3(_983, _984, _985), vec3(_983, _984, _985)));
        float _1002 = ((_989 * _983) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_940 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1003 = ((_989 * _984) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_944 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1004 = ((_989 * _985) / cbModelParam._m0[34u].z) + ((((((_948 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1007 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1002, _1003, _1004), 0.0);
        vec4 _1014 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1002, _1003, _1004), 0.0);
        vec4 _1021 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1002, _1003, _1004), 0.0);
        vec4 _1028 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1002, _1003, _1004), 0.0);
        float _1041 = exp2((_1007.w + (-0.5)) * 20.0) * 2.0;
        float _1042 = _1041 * (_1007.x + (-0.5));
        float _1043 = _1041 * (_1007.y + (-0.5));
        float _1044 = _1041 * (_1007.z + (-0.5));
        float _1051 = exp2((_1014.w + (-0.5)) * 20.0) * 2.0;
        float _1052 = _1051 * (_1014.x + (-0.5));
        float _1053 = _1051 * (_1014.y + (-0.5));
        float _1054 = _1051 * (_1014.z + (-0.5));
        float _1061 = exp2((_1021.w + (-0.5)) * 20.0) * 2.0;
        float _1062 = _1061 * (_1021.x + (-0.5));
        float _1063 = _1061 * (_1021.y + (-0.5));
        float _1064 = _1061 * (_1021.z + (-0.5));
        float _1071 = exp2((_1028.w + (-0.5)) * 20.0) * 2.0;
        float _1072 = _1071 * (_1028.x + (-0.5));
        float _1073 = _1071 * (_1028.y + (-0.5));
        float _1074 = _1071 * (_1028.z + (-0.5));
        float _1075 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1076 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1077 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1078 = _1042 * 0.5;
        float _1079 = _1052 * 0.5;
        float _1080 = _1062 * 0.5;
        float _1081 = dot(vec3(_1078, _1079, _1080), vec3(_1078, _1079, _1080));
        float _1086 = (_1081 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1081);
        float _1095 = (dot(vec3(_540, _541, _542), vec3(_1086 * _1078, _1086 * _1079, _1086 * _1080)) + 1.0) * 0.5;
        float _3977 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1105 = sqrt(((_1079 * _1079) + (_1078 * _1078)) + (_1080 * _1080)) / (_1075 + 9.9999997473787516355514526367188e-06);
        float _3988 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1106 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
        float _1107 = _1106 * 2.0;
        float _1111 = (1.0 - _1106) / (_1106 + 1.0);
        float _3999 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
        float _1121 = ((((1.0 - _1112) * (_1107 + 2.0)) * exp2(log2(isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))) * (_1107 + 1.0))) + _1112) * _1075;
        float _1122 = _1043 * 0.5;
        float _1123 = _1053 * 0.5;
        float _1124 = _1063 * 0.5;
        float _1125 = dot(vec3(_1122, _1123, _1124), vec3(_1122, _1123, _1124));
        float _1130 = (_1125 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1125);
        float _1138 = (dot(vec3(_540, _541, _542), vec3(_1130 * _1122, _1130 * _1123, _1130 * _1124)) + 1.0) * 0.5;
        float _4010 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1147 = sqrt(((_1123 * _1123) + (_1122 * _1122)) + (_1124 * _1124)) / (_1076 + 9.9999997473787516355514526367188e-06);
        float _4021 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1148 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
        float _1149 = _1148 * 2.0;
        float _1153 = (1.0 - _1148) / (_1148 + 1.0);
        float _4032 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1163 = ((((1.0 - _1154) * (_1149 + 2.0)) * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * (_1149 + 1.0))) + _1154) * _1076;
        float _1164 = _1044 * 0.5;
        float _1165 = _1054 * 0.5;
        float _1166 = _1064 * 0.5;
        float _1167 = dot(vec3(_1164, _1165, _1166), vec3(_1164, _1165, _1166));
        float _1172 = (_1167 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1167);
        float _1180 = (dot(vec3(_540, _541, _542), vec3(_1172 * _1164, _1172 * _1165, _1172 * _1166)) + 1.0) * 0.5;
        float _4043 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1189 = sqrt(((_1165 * _1165) + (_1164 * _1164)) + (_1166 * _1166)) / (_1077 + 9.9999997473787516355514526367188e-06);
        float _4054 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1190 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1191 = _1190 * 2.0;
        float _1195 = (1.0 - _1190) / (_1190 + 1.0);
        float _4065 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1205 = ((((1.0 - _1196) * (_1191 + 2.0)) * exp2(log2(isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (_1191 + 1.0))) + _1196) * _1077;
        _1213 = _1044;
        _1215 = _1043;
        _1216 = _1042;
        _1217 = _1054;
        _1218 = _1053;
        _1219 = _1052;
        _1220 = _1064;
        _1221 = _1063;
        _1222 = _1062;
        _1223 = _1077;
        _1224 = _1076;
        _1225 = _1075;
        _1226 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0)));
        _1227 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0)));
        _1228 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0)));
    }
    else
    {
        _1213 = _1214;
        _1215 = _1214;
        _1216 = _1214;
        _1217 = _1214;
        _1218 = _1214;
        _1219 = _1214;
        _1220 = _1214;
        _1221 = _1214;
        _1222 = _1214;
        _1223 = _1214;
        _1224 = _1214;
        _1225 = _1214;
        _1226 = 0.0;
        _1227 = 0.0;
        _1228 = 0.0;
    }
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1254 = fma(_913, cbModelParam._m0[30u].z, fma(_909, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _905));
        float _1258 = fma(_913, cbModelParam._m0[31u].z, fma(_909, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _905));
        float _1262 = fma(_913, cbModelParam._m0[32u].z, fma(_909, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _905));
        float _1285 = _905 + _540;
        float _1286 = _909 + _541;
        float _1287 = _913 + _542;
        float _1297 = fma(_1287, cbModelParam._m0[30u].z, fma(_1286, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1285)) - _1254;
        float _1298 = fma(_1287, cbModelParam._m0[31u].z, fma(_1286, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1285)) - _1258;
        float _1299 = fma(_1287, cbModelParam._m0[32u].z, fma(_1286, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1285)) - _1262;
        float _1303 = inversesqrt(dot(vec3(_1297, _1298, _1299), vec3(_1297, _1298, _1299)));
        float _1316 = ((_1303 * _1297) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1254 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1317 = ((_1303 * _1298) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1258 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1318 = ((_1303 * _1299) / cbModelParam._m0[35u].z) + ((((((_1262 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1320 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1316, _1317, _1318), 0.0);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1316, _1317, _1318), 0.0);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1316, _1317, _1318), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1316, _1317, _1318), 0.0);
        float _1353 = exp2((_1320.w + (-0.5)) * 20.0) * 2.0;
        float _1354 = _1353 * (_1320.x + (-0.5));
        float _1355 = _1353 * (_1320.y + (-0.5));
        float _1356 = _1353 * (_1320.z + (-0.5));
        float _1363 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1364 = _1363 * (_1327.x + (-0.5));
        float _1365 = _1363 * (_1327.y + (-0.5));
        float _1366 = _1363 * (_1327.z + (-0.5));
        float _1373 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1374 = _1373 * (_1334.x + (-0.5));
        float _1375 = _1373 * (_1334.y + (-0.5));
        float _1376 = _1373 * (_1334.z + (-0.5));
        float _1383 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1341.x + (-0.5));
        float _1385 = _1383 * (_1341.y + (-0.5));
        float _1386 = _1383 * (_1341.z + (-0.5));
        float _1387 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1388 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1389 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1390 = _1354 * 0.5;
        float _1391 = _1364 * 0.5;
        float _1392 = _1374 * 0.5;
        float _1393 = dot(vec3(_1390, _1391, _1392), vec3(_1390, _1391, _1392));
        float _1398 = (_1393 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1393);
        float _1406 = (dot(vec3(_540, _541, _542), vec3(_1398 * _1390, _1398 * _1391, _1398 * _1392)) + 1.0) * 0.5;
        float _4106 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1415 = sqrt(((_1391 * _1391) + (_1390 * _1390)) + (_1392 * _1392)) / (_1387 + 9.9999997473787516355514526367188e-06);
        float _4117 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1416 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1417 = _1416 * 2.0;
        float _1421 = (1.0 - _1416) / (_1416 + 1.0);
        float _4128 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1422 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1431 = ((((1.0 - _1422) * (_1417 + 2.0)) * exp2(log2(isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * (_1417 + 1.0))) + _1422) * _1387;
        float _1432 = _1355 * 0.5;
        float _1433 = _1365 * 0.5;
        float _1434 = _1375 * 0.5;
        float _1435 = dot(vec3(_1432, _1433, _1434), vec3(_1432, _1433, _1434));
        float _1440 = (_1435 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1435);
        float _1448 = (dot(vec3(_540, _541, _542), vec3(_1440 * _1432, _1440 * _1433, _1440 * _1434)) + 1.0) * 0.5;
        float _4139 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1457 = sqrt(((_1433 * _1433) + (_1432 * _1432)) + (_1434 * _1434)) / (_1388 + 9.9999997473787516355514526367188e-06);
        float _4150 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1458 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1459 = _1458 * 2.0;
        float _1463 = (1.0 - _1458) / (_1458 + 1.0);
        float _4161 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1464 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1473 = ((((1.0 - _1464) * (_1459 + 2.0)) * exp2(log2(isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0))) * (_1459 + 1.0))) + _1464) * _1388;
        float _1474 = _1356 * 0.5;
        float _1475 = _1366 * 0.5;
        float _1476 = _1376 * 0.5;
        float _1477 = dot(vec3(_1474, _1475, _1476), vec3(_1474, _1475, _1476));
        float _1482 = (_1477 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1477);
        float _1490 = (dot(vec3(_540, _541, _542), vec3(_1482 * _1474, _1482 * _1475, _1482 * _1476)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1499 = sqrt(((_1475 * _1475) + (_1474 * _1474)) + (_1476 * _1476)) / (_1389 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1501 = _1500 * 2.0;
        float _1505 = (1.0 - _1500) / (_1500 + 1.0);
        float _4194 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1515 = ((((1.0 - _1506) * (_1501 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1501 + 1.0))) + _1506) * _1389;
        _1523 = _1356;
        _1524 = _1355;
        _1525 = _1354;
        _1526 = _1366;
        _1527 = _1365;
        _1528 = _1364;
        _1529 = _1376;
        _1530 = _1375;
        _1531 = _1374;
        _1532 = _1389;
        _1533 = _1388;
        _1534 = _1387;
        _1535 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0)));
        _1536 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0)));
        _1537 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0)));
    }
    else
    {
        _1523 = _1214;
        _1524 = _1214;
        _1525 = _1214;
        _1526 = _1214;
        _1527 = _1214;
        _1528 = _1214;
        _1529 = _1214;
        _1530 = _1214;
        _1531 = _1214;
        _1532 = _1214;
        _1533 = _1214;
        _1534 = _1214;
        _1535 = 0.0;
        _1536 = 0.0;
        _1537 = 0.0;
    }
    float _1547 = (cbModelParam._m0[1u].x * (_1535 - _1226)) + _1226;
    float _1548 = (cbModelParam._m0[1u].x * (_1536 - _1227)) + _1227;
    float _1549 = (cbModelParam._m0[1u].x * (_1537 - _1228)) + _1228;
    float _1570 = fma(_1549, cbSceneParam._m0[89u].z, fma(_1548, cbSceneParam._m0[89u].y, _1547 * cbSceneParam._m0[89u].x));
    float _1573 = fma(_1549, cbSceneParam._m0[90u].z, fma(_1548, cbSceneParam._m0[90u].y, _1547 * cbSceneParam._m0[90u].x));
    float _1576 = fma(_1549, cbSceneParam._m0[91u].z, fma(_1548, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1547));
    float _1591 = _849 * 0.5;
    float _1592 = _850 * 0.5;
    float _1593 = _851 * 0.5;
    float _1594 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1525, _1528, _1531, _1534));
    float _1597 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1524, _1527, _1530, _1533));
    float _1600 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1523, _1526, _1529, _1532));
    float _1631;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1607 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1213, _1217, _1220, _1223));
        float _1611 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1215, _1218, _1221, _1224));
        float _1615 = dot(vec4(_1591, _1592, _1593, 1.0), vec4(_1216, _1219, _1222, _1225));
        float _1622 = dot(vec4(cbModelParam._m0[39u]), vec4(_1591, _1592, _1593, 1.0));
        _1631 = dot(vec3(isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1622) ? 0.0 : (isnan(0.0) ? _1622 : max(0.0, _1622))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1631 = 1.0;
    }
    float _1642;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1633 = dot(vec4(cbModelParam._m0[40u]), vec4(_1591, _1592, _1593, 1.0));
        _1642 = dot(vec3(isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0)), isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1642 = 1.0;
    }
    float _1646 = (_1642 * cbModelParam._m0[1u].x) + (_1631 * (1.0 - cbModelParam._m0[1u].x));
    float _1656 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _709);
    float _1657 = isnan(_1656) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1656 : min(cbModelParam._m0[25u].z, _1656));
    float _1737;
    float _1739;
    float _1741;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1704 = fma(_913, cbModelParam._m0[13u].z, fma(_909, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _905)) + cbModelParam._m0[13u].w;
        float _1708 = fma(_913, cbModelParam._m0[14u].z, fma(_909, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _905)) + cbModelParam._m0[14u].w;
        float _1712 = fma(_913, cbModelParam._m0[15u].z, fma(_909, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _905)) + cbModelParam._m0[15u].w;
        float _1715 = fma(_851, cbModelParam._m0[13u].z, fma(_850, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _849));
        float _1718 = fma(_851, cbModelParam._m0[14u].z, fma(_850, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _849));
        float _1721 = fma(_851, cbModelParam._m0[15u].z, fma(_850, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _849));
        float _1749;
        if (_1715 > 0.0)
        {
            _1749 = abs((1.0 - _1704) / _1715);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1715 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1704 + 1.0) / _1715);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1749 = frontier_phi_16_14_ladder;
        }
        float _1924;
        if (_1718 > 0.0)
        {
            _1924 = abs((1.0 - _1708) / _1718);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1708 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1924 = frontier_phi_25_21_ladder;
        }
        float _2219;
        if (_1721 > 0.0)
        {
            _2219 = abs((1.0 - _1712) / _1721);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1721 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1712 + 1.0) / _1721);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2219 = frontier_phi_37_32_ladder;
        }
        float _2221 = isnan(_1924) ? _1749 : (isnan(_1749) ? _1924 : min(_1749, _1924));
        float _2222 = isnan(_2219) ? _2221 : (isnan(_2221) ? _2219 : min(_2221, _2219));
        float _2226 = (_2222 * _1715) + _1704;
        float _2227 = (_2222 * _1718) + _1708;
        float _2228 = (_2222 * _1721) + _1712;
        float _2229 = _2222 * 9.9999997473787516355514526367188e-05;
        float _2231 = (-1.0) - _2229;
        float _2233 = _2229 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2228 > _2233) || ((_2228 < _2231) || ((_2227 > _2233) || ((_2227 < _2231) || ((_2226 < _2231) || (_2226 > _2233))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2373 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2228, cbModelParam._m0[9u].z, fma(_2227, cbModelParam._m0[9u].y, _2226 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2228, cbModelParam._m0[10u].z, fma(_2227, cbModelParam._m0[10u].y, _2226 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2228, cbModelParam._m0[11u].z, fma(_2227, cbModelParam._m0[11u].y, _2226 * cbModelParam._m0[11u].x))), _1657);
            frontier_phi_15_37_ladder = _2373.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2373.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2373.z * cbModelParam._m0[1u].y;
        }
        _1737 = frontier_phi_15_37_ladder_1;
        _1739 = frontier_phi_15_37_ladder;
        _1741 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1725 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_849, _850, _851), _1657);
        _1737 = _1725.x * cbModelParam._m0[1u].y;
        _1739 = _1725.y * cbModelParam._m0[1u].y;
        _1741 = _1725.z * cbModelParam._m0[1u].y;
    }
    float _1745 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _709);
    float _1746 = isnan(_1745) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1745 : min(cbModelParam._m0[25u].w, _1745));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1803 = fma(_913, cbModelParam._m0[21u].z, fma(_909, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _905)) + cbModelParam._m0[21u].w;
        float _1807 = fma(_913, cbModelParam._m0[22u].z, fma(_909, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _905)) + cbModelParam._m0[22u].w;
        float _1811 = fma(_913, cbModelParam._m0[23u].z, fma(_909, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _905)) + cbModelParam._m0[23u].w;
        float _1814 = fma(_851, cbModelParam._m0[21u].z, fma(_850, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _849));
        float _1817 = fma(_851, cbModelParam._m0[22u].z, fma(_850, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _849));
        float _1820 = fma(_851, cbModelParam._m0[23u].z, fma(_850, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _849));
        float _1929;
        if (_1814 > 0.0)
        {
            _1929 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1929 = frontier_phi_27_23_ladder;
        }
        float _2246;
        if (_1817 > 0.0)
        {
            _2246 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2246 = frontier_phi_39_34_ladder;
        }
        float _2584;
        if (_1820 > 0.0)
        {
            _2584 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2584 = frontier_phi_49_46_ladder;
        }
        float _2586 = isnan(_2246) ? _1929 : (isnan(_1929) ? _2246 : min(_1929, _2246));
        float _2587 = isnan(_2584) ? _2586 : (isnan(_2586) ? _2584 : min(_2586, _2584));
        float _2591 = (_2587 * _1814) + _1803;
        float _2592 = (_2587 * _1817) + _1807;
        float _2593 = (_2587 * _1820) + _1811;
        float _2594 = _2587 * 9.9999997473787516355514526367188e-05;
        float _2595 = (-1.0) - _2594;
        float _2597 = _2594 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2593 > _2597) || ((_2593 < _2595) || ((_2592 > _2597) || ((_2592 < _2595) || ((_2591 < _2595) || (_2591 > _2597))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2715 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2593, cbModelParam._m0[17u].z, fma(_2592, cbModelParam._m0[17u].y, _2591 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2593, cbModelParam._m0[18u].z, fma(_2592, cbModelParam._m0[18u].y, _2591 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2593, cbModelParam._m0[19u].z, fma(_2592, cbModelParam._m0[19u].y, _2591 * cbModelParam._m0[19u].x))), _1746);
            frontier_phi_24_49_ladder = _2715.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2715.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2715.x * cbModelParam._m0[1u].z;
        }
        _1839 = frontier_phi_24_49_ladder_2;
        _1841 = frontier_phi_24_49_ladder_1;
        _1843 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_849, _850, _851), _1746);
        _1839 = _1823.x * cbModelParam._m0[1u].z;
        _1841 = _1823.y * cbModelParam._m0[1u].z;
        _1843 = _1823.z * cbModelParam._m0[1u].z;
    }
    float _1856 = (((_876 * _827) + _877) * _841) * ((cbModelParam._m0[1u].w * (_1839 - _1737)) + _1737);
    float _1858 = (((_876 * _828) + _877) * _841) * ((cbModelParam._m0[1u].w * (_1841 - _1739)) + _1739);
    float _1860 = (((_876 * _829) + _877) * _841) * ((cbModelParam._m0[1u].w * (_1843 - _1741)) + _1741);
    float _1863 = fma(_1860, cbSceneParam._m0[89u].z, fma(_1858, cbSceneParam._m0[89u].y, _1856 * cbSceneParam._m0[89u].x));
    float _1866 = fma(_1860, cbSceneParam._m0[90u].z, fma(_1858, cbSceneParam._m0[90u].y, _1856 * cbSceneParam._m0[90u].x));
    float _1869 = fma(_1860, cbSceneParam._m0[91u].z, fma(_1858, cbSceneParam._m0[91u].y, _1856 * cbSceneParam._m0[91u].x));
    float _1903 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1907 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1911 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1915 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1916 = _1903 / _1915;
    float _1917 = _1907 / _1915;
    float _1918 = _1911 / _1915;
    float _2065;
    float _2066;
    float _2067;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1945 = ((uint(_1918 > cbSceneParam._m0[59u].y) + uint(_1918 > cbSceneParam._m0[59u].x)) + uint(_1918 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1946 = _1945 + 43u;
        uint _1954 = _1945 + 44u;
        uint _1962 = _1945 + 45u;
        uint _1970 = _1945 + 46u;
        float _1981 = fma(_1915, cbSceneParam._m0[_1946].w, fma(_1911, cbSceneParam._m0[_1946].z, fma(_1907, cbSceneParam._m0[_1946].y, _1903 * cbSceneParam._m0[_1946].x)));
        float _1985 = fma(_1915, cbSceneParam._m0[_1954].w, fma(_1911, cbSceneParam._m0[_1954].z, fma(_1907, cbSceneParam._m0[_1954].y, _1903 * cbSceneParam._m0[_1954].x)));
        float _1993 = fma(_1915, cbSceneParam._m0[_1970].w, fma(_1911, cbSceneParam._m0[_1970].z, fma(_1907, cbSceneParam._m0[_1970].y, _1903 * cbSceneParam._m0[_1970].x)));
        float _1998 = cbSceneParam._m0[33u].z * _1993;
        float _2000 = cbSceneParam._m0[33u].w * _1993;
        float _2003 = fma(_1915, cbSceneParam._m0[_1962].w, fma(_1911, cbSceneParam._m0[_1962].z, fma(_1907, cbSceneParam._m0[_1962].y, _1903 * cbSceneParam._m0[_1962].x))) / _1993;
        float _2051 = (cbSceneParam._m0[33u].x - sqrt(((_1917 * _1917) + (_1916 * _1916)) + (_1918 * _1918))) * cbSceneParam._m0[33u].y;
        float _4320 = isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0));
        float _2058 = (isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 + _1981) / _1993, (_2000 + _1985) / _1993), _2003), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2000 + _1981) / _1993, (_1985 - _1998) / _1993), _2003), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1981 - _1998) / _1993, (_1985 - _2000) / _1993), _2003), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1981 - _2000) / _1993, (_1998 + _1985) / _1993), _2003), 0.0)).x), vec4(0.25)));
        _2065 = 1.0 - (_2058 * cbSceneParam._m0[34u].x);
        _2066 = 1.0 - (_2058 * cbSceneParam._m0[34u].y);
        _2067 = 1.0 - (_2058 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2065 = 1.0;
        _2066 = 1.0;
        _2067 = 1.0;
    }
    float _2131;
    float _2133;
    float _2135;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2119 = fma(_1915, cbSceneParam._m0[63u].w, fma(_1911, cbSceneParam._m0[63u].z, fma(_1907, cbSceneParam._m0[63u].y, _1903 * cbSceneParam._m0[63u].x)));
        float _2120 = fma(_1915, cbSceneParam._m0[60u].w, fma(_1911, cbSceneParam._m0[60u].z, fma(_1907, cbSceneParam._m0[60u].y, _1903 * cbSceneParam._m0[60u].x))) / _2119;
        float _2121 = fma(_1915, cbSceneParam._m0[61u].w, fma(_1911, cbSceneParam._m0[61u].z, fma(_1907, cbSceneParam._m0[61u].y, _1903 * cbSceneParam._m0[61u].x))) / _2119;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2120 >= cbSceneParam._m0[64u].x) && (_2121 >= cbSceneParam._m0[64u].y)) && (_2120 <= cbSceneParam._m0[64u].z)) && (_2121 <= cbSceneParam._m0[64u].w))
        {
            float _2259 = fma(_1915, cbSceneParam._m0[62u].w, fma(_1911, cbSceneParam._m0[62u].z, fma(_1907, cbSceneParam._m0[62u].y, _1903 * cbSceneParam._m0[62u].x))) / _2119;
            float _2263 = isnan(cbSceneParam._m0[41u].w) ? _2259 : (isnan(_2259) ? cbSceneParam._m0[41u].w : max(_2259, cbSceneParam._m0[41u].w));
            float _2306 = (cbSceneParam._m0[33u].x - sqrt(((_1917 * _1917) + (_1916 * _1916)) + (_1918 * _1918))) * cbSceneParam._m0[33u].y;
            float _4336 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
            float _2313 = (isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2120, cbSceneParam._m0[33u].w + _2121), _2263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2120, _2121 - cbSceneParam._m0[33u].z), _2263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2120 - cbSceneParam._m0[33u].z, _2121 - cbSceneParam._m0[33u].w), _2263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2120 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2121), _2263), 0.0)).x), vec4(0.25)));
            float _2317 = 1.0 - (_2313 * cbSceneParam._m0[34u].x);
            float _2318 = 1.0 - (_2313 * cbSceneParam._m0[34u].y);
            float _2319 = 1.0 - (_2313 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2318) ? _2066 : (isnan(_2066) ? _2318 : min(_2066, _2318));
            frontier_phi_36_35_ladder_1 = isnan(_2319) ? _2067 : (isnan(_2067) ? _2319 : min(_2067, _2319));
            frontier_phi_36_35_ladder_2 = isnan(_2317) ? _2065 : (isnan(_2065) ? _2317 : min(_2065, _2317));
        }
        else
        {
            frontier_phi_36_35_ladder = _2066;
            frontier_phi_36_35_ladder_1 = _2067;
            frontier_phi_36_35_ladder_2 = _2065;
        }
        _2131 = frontier_phi_36_35_ladder_2;
        _2133 = frontier_phi_36_35_ladder;
        _2135 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2131 = _2065;
        _2133 = _2066;
        _2135 = _2067;
    }
    uvec4 _2140 = floatBitsToUint(cbInstanceData._m0[_733 + 5u]);
    uint _2142 = _2140.x * 14u;
    uint _2143 = _2142 + 13u;
    float _2150 = _841 + (-1.0);
    float _2155 = (cbLight._m0[_2143].x * _2150) + 1.0;
    float _2156 = (cbLight._m0[_2143].y * _2150) + 1.0;
    float _2157 = (cbLight._m0[_2143].z * _2150) + 1.0;
    float _2158 = (cbLight._m0[_2143].w * _2150) + 1.0;
    uint _2159 = _2142 + 5u;
    float _2165 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
    uint _2169 = _2142 + 4u;
    float _2178 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
    uint _2182 = _2142 | 1u;
    float _2193 = dot(vec3(cbLight._m0[_2142].xyz), vec3(_540, _541, _542));
    float _2196 = dot(vec3(cbLight._m0[_2182].xyz), vec3(_540, _541, _542));
    float _4372 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
    float _4383 = isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0));
    float _2201 = (isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0))) * 0.3183098733425140380859375;
    float _2203 = (isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0))) * 0.3183098733425140380859375;
    float _2210 = ((cbLight._m0[_2159].x * _2165) * _2203) + (((cbLight._m0[_2169].x * _2131) * _2178) * _2201);
    float _2211 = ((_2165 * cbLight._m0[_2159].y) * _2203) + (((cbLight._m0[_2169].y * _2133) * _2178) * _2201);
    float _2212 = ((_2165 * cbLight._m0[_2159].z) * _2203) + (((cbLight._m0[_2169].z * _2135) * _2178) * _2201);
    uvec4 _2216 = floatBitsToUint(cbLight._m0[_2142 + 12u]);
    bool _2218 = _2216.x == 0u;
    float _2320;
    float _2322;
    float _2324;
    if (_2218)
    {
        _2320 = _2210;
        _2322 = _2211;
        _2324 = _2212;
    }
    else
    {
        uint _2328 = _2142 + 6u;
        float _2344 = (dot(vec3(cbLight._m0[_2142 + 2u].xyz), vec3(_540, _541, _542)) * 0.5) + 0.5;
        float _2345 = _2344 * _2344;
        float _4394 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
        float _2346 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
        float _2347 = isnan(1.0) ? _2157 : (isnan(_2157) ? 1.0 : min(_2157, 1.0));
        _2320 = (((cbLight._m0[_2328].x * 0.3183098733425140380859375) * _2346) * _2347) + _2210;
        _2322 = (((cbLight._m0[_2328].y * 0.3183098733425140380859375) * _2346) * _2347) + _2211;
        _2324 = (((cbLight._m0[_2328].z * 0.3183098733425140380859375) * _2346) * _2347) + _2212;
    }
    bool _2327 = _2216.y == 0u;
    float _2382;
    float _2384;
    float _2386;
    if (_2327)
    {
        _2382 = _2320;
        _2384 = _2322;
        _2386 = _2324;
    }
    else
    {
        uint _2555 = _2142 + 7u;
        float _2571 = (dot(vec3(cbLight._m0[_2142 + 3u].xyz), vec3(_540, _541, _542)) * 0.5) + 0.5;
        float _2572 = _2571 * _2571;
        float _4410 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
        float _2573 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _2574 = isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0));
        _2382 = (((cbLight._m0[_2555].x * 0.3183098733425140380859375) * _2573) * _2574) + _2320;
        _2384 = (((cbLight._m0[_2555].y * 0.3183098733425140380859375) * _2573) * _2574) + _2322;
        _2386 = (((cbLight._m0[_2555].z * 0.3183098733425140380859375) * _2573) * _2574) + _2324;
    }
    uint _2389 = _2142 + 8u;
    float _2402 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2142].w)) * _709) * 0.949999988079071044921875);
    float _2403 = _2402 * _2402;
    float _2404 = cbLight._m0[_2142].x + _622;
    float _2405 = cbLight._m0[_2142].y + _623;
    float _2406 = cbLight._m0[_2142].z + _624;
    float _2410 = inversesqrt(dot(vec3(_2404, _2405, _2406), vec3(_2404, _2405, _2406)));
    float _2411 = _2410 * _2404;
    float _2412 = _2410 * _2405;
    float _2413 = _2410 * _2406;
    float _2414 = dot(vec3(_540, _541, _542), vec3(cbLight._m0[_2142].xyz));
    float _4426 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
    float _2417 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
    float _4437 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _2418 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _2419 = dot(vec3(_540, _541, _542), vec3(_2411, _2412, _2413));
    float _4448 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2422 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _2423 = dot(vec3(cbLight._m0[_2142].xyz), vec3(_2411, _2412, _2413));
    float _4459 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2427 = _2403 * _2403;
    float _2431 = ((_2422 * _2422) * (_2427 + (-1.0))) + 1.0;
    float _2439 = exp2(log2(1.0 - (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)))) * 5.0);
    float _2440 = 0.959999978542327880859375 - _824;
    float _2442 = 0.959999978542327880859375 - _825;
    float _2443 = 0.959999978542327880859375 - _826;
    float _2450 = 1.0 - _2403;
    float _2461 = (0.5 / (((_2418 * ((_2417 * _2450) + _2403)) + 9.9999999392252902907785028219223e-09) + (((_2418 * _2450) + _2403) * _2417))) * _2417;
    float _4470 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
    float _2463 = (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_2427 / ((_2431 * _2431) * 3.141590118408203125));
    uint _2477 = _2142 + 9u;
    float _2488 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2182].w)) * _709) * 0.949999988079071044921875);
    float _2489 = _2488 * _2488;
    float _2490 = cbLight._m0[_2182].x + _622;
    float _2491 = cbLight._m0[_2182].y + _623;
    float _2492 = cbLight._m0[_2182].z + _624;
    float _2496 = inversesqrt(dot(vec3(_2490, _2491, _2492), vec3(_2490, _2491, _2492)));
    float _2497 = _2496 * _2490;
    float _2498 = _2496 * _2491;
    float _2499 = _2496 * _2492;
    float _2500 = dot(vec3(_540, _541, _542), vec3(cbLight._m0[_2182].xyz));
    float _4481 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
    float _2504 = dot(vec3(_540, _541, _542), vec3(_2497, _2498, _2499));
    float _4492 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2507 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
    float _2508 = dot(vec3(cbLight._m0[_2182].xyz), vec3(_2497, _2498, _2499));
    float _4503 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2512 = _2489 * _2489;
    float _2516 = ((_2507 * _2507) * (_2512 + (-1.0))) + 1.0;
    float _2523 = exp2(log2(1.0 - (isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0)))) * 5.0);
    float _2530 = 1.0 - _2489;
    float _2540 = (0.5 / (((_2418 * ((_2503 * _2530) + _2489)) + 9.9999999392252902907785028219223e-09) + (((_2418 * _2530) + _2489) * _2503))) * _2503;
    float _4514 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
    float _2542 = (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))) * (_2512 / ((_2516 * _2516) * 3.141590118408203125));
    float _2552 = (((((_2523 * _2440) + _827) * cbLight._m0[_2477].x) * _2542) * _2165) + ((((cbLight._m0[_2389].x * _2131) * ((_2439 * _2440) + _827)) * _2463) * _2178);
    float _2553 = (((((_2523 * _2442) + _828) * cbLight._m0[_2477].y) * _2542) * _2165) + ((((cbLight._m0[_2389].y * _2133) * ((_2439 * _2442) + _828)) * _2463) * _2178);
    float _2554 = (((((_2523 * _2443) + _829) * cbLight._m0[_2477].z) * _2542) * _2165) + ((((cbLight._m0[_2389].z * _2135) * ((_2439 * _2443) + _829)) * _2463) * _2178);
    float _2610;
    float _2612;
    float _2614;
    if (_2218)
    {
        _2610 = _2552;
        _2612 = _2553;
        _2614 = _2554;
    }
    else
    {
        uint _2616 = _2142 + 2u;
        uint _2620 = _2142 + 10u;
        float _2634 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2616].w)) * _709) * 0.949999988079071044921875);
        float _2635 = _2634 * _2634;
        float _2636 = cbLight._m0[_2616].x + _622;
        float _2637 = cbLight._m0[_2616].y + _623;
        float _2638 = cbLight._m0[_2616].z + _624;
        float _2642 = inversesqrt(dot(vec3(_2636, _2637, _2638), vec3(_2636, _2637, _2638)));
        float _2643 = _2642 * _2636;
        float _2644 = _2642 * _2637;
        float _2645 = _2642 * _2638;
        float _2646 = dot(vec3(_540, _541, _542), vec3(cbLight._m0[_2616].xyz));
        float _4525 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
        float _2649 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _2650 = dot(vec3(_540, _541, _542), vec3(_2643, _2644, _2645));
        float _4536 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        float _2653 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
        float _2654 = dot(vec3(cbLight._m0[_2616].xyz), vec3(_2643, _2644, _2645));
        float _4547 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2658 = _2635 * _2635;
        float _2662 = ((_2653 * _2653) * (_2658 + (-1.0))) + 1.0;
        float _2669 = exp2(log2(1.0 - (isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0)))) * 5.0);
        float _2676 = 1.0 - _2635;
        float _2686 = (0.5 / (((_2418 * ((_2649 * _2676) + _2635)) + 9.9999999392252902907785028219223e-09) + (((_2418 * _2676) + _2635) * _2649))) * _2649;
        float _4558 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2688 = (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0))) * (_2658 / ((_2662 * _2662) * 3.141590118408203125));
        float _2689 = isnan(1.0) ? _2157 : (isnan(_2157) ? 1.0 : min(_2157, 1.0));
        _2610 = (((((_2669 * _2440) + _827) * cbLight._m0[_2620].x) * _2688) * _2689) + _2552;
        _2612 = (((((_2669 * _2442) + _828) * cbLight._m0[_2620].y) * _2688) * _2689) + _2553;
        _2614 = (((((_2669 * _2443) + _829) * cbLight._m0[_2620].z) * _2688) * _2689) + _2554;
    }
    float _2720;
    float _2722;
    float _2724;
    if (_2327)
    {
        _2720 = _2610;
        _2722 = _2612;
        _2724 = _2614;
    }
    else
    {
        uint _2731 = _2142 + 3u;
        uint _2735 = _2142 + 11u;
        float _2749 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2731].w)) * _709) * 0.949999988079071044921875);
        float _2750 = _2749 * _2749;
        float _2751 = cbLight._m0[_2731].x + _622;
        float _2752 = cbLight._m0[_2731].y + _623;
        float _2753 = cbLight._m0[_2731].z + _624;
        float _2757 = inversesqrt(dot(vec3(_2751, _2752, _2753), vec3(_2751, _2752, _2753)));
        float _2758 = _2757 * _2751;
        float _2759 = _2757 * _2752;
        float _2760 = _2757 * _2753;
        float _2761 = dot(vec3(_540, _541, _542), vec3(cbLight._m0[_2731].xyz));
        float _4574 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2764 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
        float _2765 = dot(vec3(_540, _541, _542), vec3(_2758, _2759, _2760));
        float _4585 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2768 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
        float _2769 = dot(vec3(cbLight._m0[_2731].xyz), vec3(_2758, _2759, _2760));
        float _4596 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2773 = _2750 * _2750;
        float _2777 = ((_2768 * _2768) * (_2773 + (-1.0))) + 1.0;
        float _2784 = exp2(log2(1.0 - (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0)))) * 5.0);
        float _2791 = 1.0 - _2750;
        float _2801 = (0.5 / (((_2418 * ((_2764 * _2791) + _2750)) + 9.9999999392252902907785028219223e-09) + (((_2418 * _2791) + _2750) * _2764))) * _2764;
        float _4607 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2803 = (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0))) * (_2773 / ((_2777 * _2777) * 3.141590118408203125));
        float _2804 = isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0));
        _2720 = (((((_2784 * _2440) + _827) * cbLight._m0[_2735].x) * _2803) * _2804) + _2610;
        _2722 = (((((_2784 * _2442) + _828) * cbLight._m0[_2735].y) * _2803) * _2804) + _2612;
        _2724 = (((((_2784 * _2443) + _829) * cbLight._m0[_2735].z) * _2803) * _2804) + _2614;
    }
    float _2869;
    float _2871;
    float _2873;
    float _2875;
    float _2877;
    float _2879;
    if (_2140.y == 0u)
    {
        uvec4 _2825 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2826 = _2825.x;
        uint _2837 = uint((float(_2825.y) * floor(float(uint(cbSceneParam._m0[85u].y * _631) / _2826))) + floor(float(uint(cbSceneParam._m0[85u].x * _630) / _2826)));
        float _2847 = (log2(_1918 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2848 = isnan(0.0) ? _2847 : (isnan(_2847) ? 0.0 : max(_2847, 0.0));
        uint _2851 = uint(isnan(14.0) ? _2848 : (isnan(_2848) ? 14.0 : min(_2848, 14.0)));
        uvec4 _2856 = texelFetch(g_lightClusterGridBuffer, int(((_2851 << 2u) + (_2837 << 6u)) >> 2u));
        uint _2857 = _2856.x;
        uint _2858 = _2825.z;
        float _2941;
        float _2943;
        float _2945;
        float _2947;
        float _2949;
        float _2951;
        if (((((1u << ((_2858 >> 4u) & 15u)) + 4294967295u) & _2857) == 0u) || ((_2858 & 240u) == 0u))
        {
            _2941 = 0.0;
            _2943 = 0.0;
            _2945 = 0.0;
            _2947 = 0.0;
            _2949 = 0.0;
            _2951 = 0.0;
        }
        else
        {
            float _2942;
            float _2944;
            float _2946;
            float _2948;
            float _2950;
            float _2952;
            float _3085 = 0.0;
            float _3086 = 0.0;
            float _3087 = 0.0;
            float _3088 = 0.0;
            float _3089 = 0.0;
            float _3090 = 0.0;
            uint _3091 = 0u;
            uint _3100;
            bool _3101;
            for (;;)
            {
                _3100 = texelFetch(g_lightClassification, int((((_2851 << 5u) + (_2837 << 9u)) + (_3091 << 2u)) >> 2u)).x;
                _3101 = _3100 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3101)
                {
                    frontier_phi_68_pred = _3090;
                    frontier_phi_68_pred_1 = _3089;
                    frontier_phi_68_pred_2 = _3088;
                    frontier_phi_68_pred_3 = _3086;
                    frontier_phi_68_pred_4 = _3085;
                    frontier_phi_68_pred_5 = _3087;
                }
                else
                {
                    float _3209;
                    float _3210;
                    float _3211;
                    float _3212;
                    float _3213;
                    float _3214;
                    uint _3215;
                    _3209 = _3085;
                    _3210 = _3086;
                    _3211 = _3087;
                    _3212 = _3088;
                    _3213 = _3089;
                    _3214 = _3090;
                    _3215 = _3100;
                    float _3141;
                    float _3142;
                    float _3143;
                    float _3144;
                    float _3145;
                    float _3146;
                    for (;;)
                    {
                        uint _3219 = uint(findLSB(_3215)) + (_3091 << 5u);
                        uint _3216 = (_3215 + 4294967295u) & _3215;
                        uint _3221 = _3219 * 48u;
                        vec4 _3235 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3221)).x, texelFetch(g_PointLightRenderingBuffer, int(_3221 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3221 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3221 + 3u)).x));
                        uint _3241 = (_3219 * 48u) + 4u;
                        vec4 _3254 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3241)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 3u)).x));
                        uint _3260 = (_3219 * 48u) + 8u;
                        vec3 _3271 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3260)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 2u)).x));
                        float _3275 = _3235.x - _1916;
                        float _3276 = _3235.y - _1917;
                        float _3277 = _3235.z - _1918;
                        float _3278 = dot(vec3(_3275, _3276, _3277), vec3(_3275, _3276, _3277));
                        float _3281 = inversesqrt(_3278);
                        float _3282 = _3281 * _3275;
                        float _3283 = _3281 * _3276;
                        float _3284 = _3281 * _3277;
                        float _3285 = dot(vec3(_654, _657, _660), vec3(_3282, _3283, _3284));
                        float _3290 = 1.0 - (_3278 * _3235.w);
                        float _4633 = isnan(0.0) ? _3290 : (isnan(_3290) ? 0.0 : max(_3290, 0.0));
                        float _3291 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
                        float _3292 = sqrt(_3278) * _3254.w;
                        float _3295 = 1.39999997615814208984375 / (_3292 + 1.39999997615814208984375);
                        float _3296 = _3295 * _3295;
                        float _3299 = ((1.0 - _3296) * _3285) + _3296;
                        float _3302 = _3292 * _3292;
                        float _3306 = ((isnan(0.0) ? _3299 : (isnan(_3299) ? 0.0 : max(_3299, 0.0))) * _3291) / ((_3302 * 0.699999988079071044921875) + 1.0);
                        float _3310 = (-0.0) - _1916;
                        float _3311 = (-0.0) - _1917;
                        float _3312 = (-0.0) - _1918;
                        float _3316 = inversesqrt(dot(vec3(_3310, _3311, _3312), vec3(_3310, _3311, _3312)));
                        float _3317 = _3316 * _3310;
                        float _3318 = _3316 * _3311;
                        float _3319 = _3316 * _3312;
                        float _3326 = exp2(log2(1.0 / ((_3302 * 3.5) + 5.0)) * 0.25);
                        float _3327 = 1.0 - _857;
                        float _3334 = sqrt(1.0 - ((1.0 - (_3327 * _3327)) * (1.0 - (_3326 * _3326))));
                        float _3335 = _3334 * _3334;
                        float _3336 = _3335 * _3335;
                        float _3337 = _3317 + _3282;
                        float _3338 = _3318 + _3283;
                        float _3339 = _3319 + _3284;
                        float _3343 = inversesqrt(dot(vec3(_3337, _3338, _3339), vec3(_3337, _3338, _3339)));
                        float _3347 = dot(vec3(_654, _657, _660), vec3(_3317, _3318, _3319));
                        float _4649 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0));
                        float _3350 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                        float _3351 = dot(vec3(_654, _657, _660), vec3(_3343 * _3337, _3343 * _3338, _3343 * _3339));
                        float _4660 = isnan(0.0) ? _3351 : (isnan(_3351) ? 0.0 : max(_3351, 0.0));
                        float _3354 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
                        float _3358 = ((_3354 * _3354) * (_3336 + (-1.0))) + 1.0;
                        float _3359 = _3295 * _3335;
                        float _3360 = _3359 * _3359;
                        float _3363 = ((1.0 - _3360) * _3285) + _3360;
                        float _4671 = isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : max(_3363, 0.0));
                        float _3364 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
                        float _3365 = 1.0 - _3335;
                        float _3375 = (0.5 / (((_3364 * ((_3350 * _3365) + _3335)) + 9.9999999392252902907785028219223e-09) + (((_3364 * _3365) + _3335) * _3350))) * _3364;
                        float _4682 = isnan(0.0) ? _3375 : (isnan(_3375) ? 0.0 : max(_3375, 0.0));
                        float _3386 = (((_3336 * 3.1415927410125732421875) * (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) / ((_3358 * _3358) * ((_3302 * 2.1991131305694580078125) + 3.141590118408203125))) * _3291;
                        _3144 = (_3306 * _3254.x) + _3212;
                        _3145 = (_3306 * _3254.y) + _3213;
                        _3146 = (_3306 * _3254.z) + _3214;
                        _3141 = (_3386 * _3271.x) + _3209;
                        _3142 = (_3386 * _3271.y) + _3210;
                        _3143 = (_3386 * _3271.z) + _3211;
                        if (_3216 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3209 = _3141;
                            _3210 = _3142;
                            _3211 = _3143;
                            _3212 = _3144;
                            _3213 = _3145;
                            _3214 = _3146;
                            _3215 = _3216;
                        }
                    }
                    frontier_phi_68_pred = _3146;
                    frontier_phi_68_pred_1 = _3145;
                    frontier_phi_68_pred_2 = _3144;
                    frontier_phi_68_pred_3 = _3142;
                    frontier_phi_68_pred_4 = _3141;
                    frontier_phi_68_pred_5 = _3143;
                }
                _2952 = frontier_phi_68_pred;
                _2950 = frontier_phi_68_pred_1;
                _2948 = frontier_phi_68_pred_2;
                _2944 = frontier_phi_68_pred_3;
                _2942 = frontier_phi_68_pred_4;
                _2946 = frontier_phi_68_pred_5;
                uint _3092 = _3091 + 1u;
                if (_3092 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3085 = _2942;
                    _3086 = _2944;
                    _3087 = _2946;
                    _3088 = _2948;
                    _3089 = _2950;
                    _3090 = _2952;
                    _3091 = _3092;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2941 = _2942;
            _2943 = _2944;
            _2945 = _2946;
            _2947 = _2948;
            _2949 = _2950;
            _2951 = _2952;
        }
        uvec4 _2955 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2956 = _2955.z;
        uint _2958 = (_2956 >> 8u) & 15u;
        float _3053;
        float _3055;
        float _3057;
        float _3059;
        float _3061;
        float _3063;
        if (((4294967295u << _2958) & _2857) == 0u)
        {
            _3053 = _2941;
            _3055 = _2943;
            _3057 = _2945;
            _3059 = _2947;
            _3061 = _2949;
            _3063 = _2951;
        }
        else
        {
            float _3078 = inversesqrt(dot(vec3(_1916, _1917, _1918), vec3(_1916, _1917, _1918)));
            float _3079 = _3078 * _1916;
            float _3080 = _3078 * _1917;
            float _3081 = _3078 * _1918;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2958 < ((_2956 >> 12u) & 15u))
            {
                float _3054;
                float _3056;
                float _3058;
                float _3060;
                float _3062;
                float _3064;
                float _3192 = _2941;
                float _3193 = _2943;
                float _3194 = _2945;
                float _3195 = _2947;
                float _3196 = _2949;
                float _3197 = _2951;
                uint _3198 = _2958;
                uint _3207;
                bool _3208;
                for (;;)
                {
                    _3207 = texelFetch(g_lightClassification, int((((_2851 << 5u) + (_2837 << 9u)) + (_3198 << 2u)) >> 2u)).x;
                    _3208 = _3207 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3208)
                    {
                        frontier_phi_74_pred = _3194;
                        frontier_phi_74_pred_1 = _3193;
                        frontier_phi_74_pred_2 = _3192;
                        frontier_phi_74_pred_3 = _3197;
                        frontier_phi_74_pred_4 = _3196;
                        frontier_phi_74_pred_5 = _3195;
                    }
                    else
                    {
                        float _3391;
                        float _3392;
                        float _3393;
                        float _3394;
                        float _3395;
                        float _3396;
                        float _3686;
                        float _3687;
                        float _3688;
                        float _3689;
                        float _3690;
                        float _3691;
                        float _3404 = _3192;
                        float _3405 = _3193;
                        float _3406 = _3194;
                        float _3407 = _3195;
                        float _3408 = _3196;
                        float _3409 = _3197;
                        uint _3410 = _3207;
                        uint _3411;
                        vec4 _3436;
                        float _3437;
                        vec4 _3452;
                        vec3 _3464;
                        vec4 _3479;
                        vec4 _3495;
                        float _3542;
                        bool _3543;
                        for (;;)
                        {
                            uint _3421 = ((_3198 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3410));
                            _3411 = (_3410 + 4294967295u) & _3410;
                            uint _3423 = _3421 * 40u;
                            _3436 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3423)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3423 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3423 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3423 + 3u)).x));
                            _3437 = _3436.w;
                            uint _3439 = (_3421 * 40u) + 4u;
                            _3452 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3439)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 3u)).x));
                            uint _3454 = (_3421 * 40u) + 8u;
                            _3464 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3454)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 2u)).x));
                            uint _3466 = (_3421 * 40u) + 16u;
                            _3479 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3466)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 3u)).x));
                            uint _3482 = (_3421 * 40u) + 20u;
                            _3495 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3482)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 3u)).x));
                            uint _3498 = (_3421 * 40u) + 24u;
                            vec4 _3511 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 3u)).x));
                            uint _3517 = (_3421 * 40u) + 28u;
                            vec4 _3530 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 3u)).x));
                            _3542 = fma(_1918, _3530.z, fma(_1917, _3530.y, _3530.x * _1916)) + _3530.w;
                            _3543 = !((fma(_1918, _3511.z, fma(_1917, _3511.y, _3511.x * _1916)) + _3511.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3543)
                            {
                                float _3570 = _3436.x - _1916;
                                float _3571 = _3436.y - _1917;
                                float _3572 = _3436.z - _1918;
                                float _3573 = dot(vec3(_3570, _3571, _3572), vec3(_3570, _3571, _3572));
                                float _3576 = inversesqrt(_3573);
                                float _3577 = _3576 * _3570;
                                float _3578 = _3576 * _3571;
                                float _3579 = _3576 * _3572;
                                float _3583 = 1.0 - (_3573 / (_3437 * _3437));
                                float _4693 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                                float _3584 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
                                float _3588 = sqrt(_3573) * _3452.w;
                                float _3590 = 1.39999997615814208984375 / (_3588 + 1.39999997615814208984375);
                                float _3591 = _3590 * _3590;
                                float _3594 = ((1.0 - _3591) * dot(vec3(_3577, _3578, _3579), vec3(_654, _657, _660))) + _3591;
                                float _3597 = _3588 * _3588;
                                float _3601 = (fma(_1918, _3479.z, fma(_1917, _3479.y, _3479.x * _1916)) + _3479.w) / _3542;
                                float _3602 = (fma(_1918, _3495.z, fma(_1917, _3495.y, _3495.x * _1916)) + _3495.w) / _3542;
                                float _3606 = 1.0 - dot(vec2(_3601, _3602), vec2(_3601, _3602));
                                float _4709 = isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0));
                                float _3607 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
                                float _3608 = _3607 * (((isnan(0.0) ? _3594 : (isnan(_3594) ? 0.0 : max(_3594, 0.0))) * _3584) / ((_3597 * 0.699999988079071044921875) + 1.0));
                                float _3620 = exp2(log2(1.0 / ((_3597 * 3.5) + 5.0)) * 0.25);
                                float _3621 = 1.0 - _857;
                                float _3628 = sqrt(1.0 - ((1.0 - (_3621 * _3621)) * (1.0 - (_3620 * _3620))));
                                float _3629 = _3628 * _3628;
                                float _3630 = _3629 * _3629;
                                float _3631 = _3577 - _3079;
                                float _3632 = _3578 - _3080;
                                float _3633 = _3579 - _3081;
                                float _3637 = inversesqrt(dot(vec3(_3631, _3632, _3633), vec3(_3631, _3632, _3633)));
                                float _3641 = dot(vec3(_654, _657, _660), vec3((-0.0) - _3079, (-0.0) - _3080, (-0.0) - _3081));
                                float _4720 = isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0));
                                float _3644 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
                                float _3645 = dot(vec3(_654, _657, _660), vec3(_3637 * _3631, _3637 * _3632, _3637 * _3633));
                                float _4731 = isnan(0.0) ? _3645 : (isnan(_3645) ? 0.0 : max(_3645, 0.0));
                                float _3648 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
                                float _3652 = ((_3648 * _3648) * (_3630 + (-1.0))) + 1.0;
                                float _3653 = _3590 * _3629;
                                float _3654 = _3653 * _3653;
                                float _3660 = ((1.0 - _3654) * dot(vec3(_654, _657, _660), vec3(_3577, _3578, _3579))) + _3654;
                                float _4742 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3661 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
                                float _3662 = 1.0 - _3629;
                                float _3672 = (0.5 / (((_3661 * ((_3644 * _3662) + _3629)) + 9.9999999392252902907785028219223e-09) + (((_3661 * _3662) + _3629) * _3644))) * _3661;
                                float _4753 = isnan(0.0) ? _3672 : (isnan(_3672) ? 0.0 : max(_3672, 0.0));
                                float _3682 = (_3607 * _3584) * (((_3630 * 3.1415927410125732421875) * (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) / ((_3652 * _3652) * ((_3597 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3682 * _3464.z;
                                frontier_phi_80_pred_1 = _3682 * _3464.y;
                                frontier_phi_80_pred_2 = _3682 * _3464.x;
                                frontier_phi_80_pred_3 = _3608 * _3452.z;
                                frontier_phi_80_pred_4 = _3608 * _3452.y;
                                frontier_phi_80_pred_5 = _3608 * _3452.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3688 = frontier_phi_80_pred;
                            _3687 = frontier_phi_80_pred_1;
                            _3686 = frontier_phi_80_pred_2;
                            _3691 = frontier_phi_80_pred_3;
                            _3690 = frontier_phi_80_pred_4;
                            _3689 = frontier_phi_80_pred_5;
                            _3394 = _3689 + _3407;
                            _3395 = _3690 + _3408;
                            _3396 = _3691 + _3409;
                            _3391 = _3686 + _3404;
                            _3392 = _3687 + _3405;
                            _3393 = _3688 + _3406;
                            if (_3411 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3404 = _3391;
                                _3405 = _3392;
                                _3406 = _3393;
                                _3407 = _3394;
                                _3408 = _3395;
                                _3409 = _3396;
                                _3410 = _3411;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3393;
                        frontier_phi_74_pred_1 = _3392;
                        frontier_phi_74_pred_2 = _3391;
                        frontier_phi_74_pred_3 = _3396;
                        frontier_phi_74_pred_4 = _3395;
                        frontier_phi_74_pred_5 = _3394;
                    }
                    _3058 = frontier_phi_74_pred;
                    _3056 = frontier_phi_74_pred_1;
                    _3054 = frontier_phi_74_pred_2;
                    _3064 = frontier_phi_74_pred_3;
                    _3062 = frontier_phi_74_pred_4;
                    _3060 = frontier_phi_74_pred_5;
                    uint _3199 = _3198 + 1u;
                    if (_3199 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3192 = _3054;
                        _3193 = _3056;
                        _3194 = _3058;
                        _3195 = _3060;
                        _3196 = _3062;
                        _3197 = _3064;
                        _3198 = _3199;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3062;
                frontier_phi_62_63_ladder_1 = _3060;
                frontier_phi_62_63_ladder_2 = _3058;
                frontier_phi_62_63_ladder_3 = _3064;
                frontier_phi_62_63_ladder_4 = _3056;
                frontier_phi_62_63_ladder_5 = _3054;
            }
            else
            {
                frontier_phi_62_63_ladder = _2949;
                frontier_phi_62_63_ladder_1 = _2947;
                frontier_phi_62_63_ladder_2 = _2945;
                frontier_phi_62_63_ladder_3 = _2951;
                frontier_phi_62_63_ladder_4 = _2943;
                frontier_phi_62_63_ladder_5 = _2941;
            }
            _3053 = frontier_phi_62_63_ladder_5;
            _3055 = frontier_phi_62_63_ladder_4;
            _3057 = frontier_phi_62_63_ladder_2;
            _3059 = frontier_phi_62_63_ladder_1;
            _3061 = frontier_phi_62_63_ladder;
            _3063 = frontier_phi_62_63_ladder_3;
        }
        float _3068 = isnan(1.0) ? _841 : (isnan(_841) ? 1.0 : min(_841, 1.0));
        _2869 = (_3068 * _3059) + _2382;
        _2871 = (_3068 * _3061) + _2384;
        _2873 = (_3068 * _3063) + _2386;
        _2875 = ((_3053 * _827) * _3068) + _2720;
        _2877 = ((_3055 * _828) * _3068) + _2722;
        _2879 = ((_3057 * _829) * _3068) + _2724;
    }
    else
    {
        _2869 = _2382;
        _2871 = _2384;
        _2873 = _2386;
        _2875 = _2720;
        _2877 = _2722;
        _2879 = _2724;
    }
    float _4769 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _4780 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _4791 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _4802 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _2897 = ((isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0))) * (_2869 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _841))) + ((_2875 + ((isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))) * _1646)) * cbPerFrame._m0[3u].x);
    float _2898 = ((isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * (_2871 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _841))) + ((_2877 + ((isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0))) * _1646)) * cbPerFrame._m0[3u].x);
    float _2899 = ((isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * (_2873 + ((isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0))) * _841))) + ((_2879 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1646)) * cbPerFrame._m0[3u].x);
    float _2907 = cbInstanceData._m0[_733 + 6u].w * (isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0)));
    float _2912 = _630 / cbSceneParam._m0[86u].x;
    float _2913 = _631 / cbSceneParam._m0[86u].y;
    vec4 _2927 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2912, _2913, (log2((isnan(cbSceneParam._m0[77u].w) ? _564 : (isnan(_564) ? cbSceneParam._m0[77u].w : min(_564, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2929 = _2927.x;
    float _2930 = _2927.y;
    float _2931 = _2927.z;
    float _2932 = _2927.w;
    float _3003;
    float _3005;
    float _3007;
    float _3009;
    if (_564 > cbSceneParam._m0[78u].w)
    {
        float _2966 = isnan(_564) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _564 : min(cbSceneParam._m0[80u].w, _564));
        float _2967 = _2966 / _564;
        float _2978 = _2967 * _615;
        float _2979 = _616 * _2967;
        float _2980 = (-0.0) - _2979;
        float _2981 = _2967 * _617;
        float _2983 = (cbSceneParam._m0[77u].w * _2980) / _2966;
        float _2984 = _2983 + cbSceneParam._m0[79u].w;
        float _2985 = cbSceneParam._m0[79u].w - _2979;
        float _2991 = sqrt(((_2978 * _2978) + (_2979 * _2979)) + (_2981 * _2981));
        float _2994 = (1.0 - (cbSceneParam._m0[77u].w / _2966)) * _2991;
        float _2999 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3001 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3154;
        if (abs((_2980 - _2983) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3154 = ((((_2984 > 0.0) ? exp2(_2999 * _2984) : (2.0 - exp2(_3001 * _2984))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2994;
        }
        else
        {
            float _3114 = 1.0 / cbSceneParam._m0[80u].x;
            float _3115 = isnan(_2985) ? _2984 : (isnan(_2984) ? _2985 : max(_2984, _2985));
            float _3116 = isnan(_2985) ? _2984 : (isnan(_2984) ? _2985 : min(_2984, _2985));
            float _3125 = isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : min(_3115, 0.0));
            float _3126 = isnan(0.0) ? _3116 : (isnan(_3116) ? 0.0 : min(_3116, 0.0));
            _3154 = ((abs(_2991 / _2980) * cbSceneParam._m0[80u].y) * ((((_3125 - _3126) * 2.0) - ((exp2(_2999 * (isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : max(_3115, 0.0)))) - exp2(_2999 * (isnan(0.0) ? _3116 : (isnan(_3116) ? 0.0 : max(_3116, 0.0))))) * _3114)) - ((exp2(_3001 * _3125) - exp2(_3001 * _3126)) * _3114))) + (_2994 * cbSceneParam._m0[80u].z);
        }
        vec4 _3156 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2912, _2913, 1.0), 0.0);
        float _3165 = exp2((_3154 * (-1.44269502162933349609375)) * (1.0 - _3156.w));
        float _3166 = log2(_3165);
        float _3182 = log2(_2932);
        _3003 = (exp2(_3182 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].x)) * _3156.x) / cbSceneParam._m0[78u].x)) + _2929;
        _3005 = (exp2(_3182 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].y)) * _3156.y) / cbSceneParam._m0[78u].y)) + _2930;
        _3007 = (exp2(_3182 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].z)) * _3156.z) / cbSceneParam._m0[78u].z)) + _2931;
        _3009 = _3165 * _2932;
    }
    else
    {
        _3003 = _2929;
        _3005 = _2930;
        _3007 = _2931;
        _3009 = _2932;
    }
    float _3021 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3022 = _3021 == 3.0;
    float _3023 = log2(_3009);
    float _3030 = exp2(_3023 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0)));
    float _3031 = exp2(_3023 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0)));
    float _3032 = exp2(_3023 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0)));
    float _3041 = (_3021 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3041 * (_3022 ? _3030 : (_3030 + (cbSceneParam._m0[72u].w * _3003)));
    SV_Target.y = _3041 * (_3022 ? _3031 : (_3031 + (cbSceneParam._m0[72u].w * _3005)));
    SV_Target.z = _3041 * (_3022 ? _3032 : (_3032 + (cbSceneParam._m0[72u].w * _3007)));
    SV_Target.w = _2907;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2907;
}


