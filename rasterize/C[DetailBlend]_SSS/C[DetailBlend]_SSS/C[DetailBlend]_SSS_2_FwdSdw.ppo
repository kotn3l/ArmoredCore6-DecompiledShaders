#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1135;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _208 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _215 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _216 = _215 * NORMAL.x;
    float _217 = _215 * NORMAL.y;
    float _218 = _215 * NORMAL.z;
    float _222 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _230;
    float _231;
    float _232;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
        _232 = (-0.0) - _218;
    }
    else
    {
        _230 = _216;
        _231 = _217;
        _232 = _218;
    }
    vec4 _246 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _251 = _246.z;
    float _257 = exp2(log2(_251 * 22.0) * 260.0);
    float _258 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _259 = isnan(1.0) ? _258 : (isnan(_258) ? 1.0 : min(_258, 1.0));
    vec4 _273 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _284 = cbMtdParam._m0[10u].x * _273.x;
    float _285 = cbMtdParam._m0[10u].y * _273.y;
    float _286 = cbMtdParam._m0[10u].z * _273.z;
    vec4 _298 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _321 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _343 = (((((_298.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _321.x) - _284) * _259) + _284;
    float _344 = (((((_298.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _321.y) - _285) * _259) + _285;
    float _345 = (((((_298.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _321.z) - _286) * _259) + _286;
    float _346 = _321.w * _298.w;
    float _373 = (((texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w)).x - cbMtdParam._m0[15u].y) + cbMtdParam._m0[14u].z) * _259) + cbMtdParam._m0[15u].y;
    vec4 _386 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _388 = _386.x;
    float _389 = _386.y;
    float _395 = cbMtdParam._m0[13u].y + _386.z;
    vec4 _407 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _419 = ((((_251 * 2.0) * (cbMtdParam._m0[13u].x + _407.z)) - _395) * _259) + _395;
    float _423 = (_246.x * 2.0) + (-1.0);
    float _425 = (_246.y * 2.0) + (-1.0);
    float _426 = dot(vec2(_423, _425), vec2(_423, _425));
    float _3764 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _431 = sqrt(1.0 - (isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0))));
    float _444 = ((((((_407.x - _388) * _259) + _388) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _423;
    float _445 = ((((((_407.y - _389) * _259) + _389) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _425;
    float _448 = fma(_431, _230, fma(_445, _222 * TANGENT.x, (_208 * _200) * _444));
    float _451 = fma(_431, _231, fma(_445, _222 * TANGENT.y, (_208 * _201) * _444));
    float _454 = fma(_431, _232, fma(_445, _222 * TANGENT.z, (_208 * _202) * _444));
    float _458 = inversesqrt(dot(vec3(_448, _451, _454), vec3(_448, _451, _454)));
    float _459 = _458 * _448;
    float _460 = _458 * _451;
    float _461 = _458 * _454;
    float _3775 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _462 = isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0));
    float _3786 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _463 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
    float _3797 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _464 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
    float _3808 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _465 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
    float _3819 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _466 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
    float _3830 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _467 = isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0));
    float _483 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _524 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _534 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _524);
    float _535 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _524);
    float _536 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _524);
    float _540 = inversesqrt(dot(vec3(_534, _535, _536), vec3(_534, _535, _536)));
    float _541 = _534 * _540;
    float _542 = _535 * _540;
    float _543 = _536 * _540;
    float _549 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _550 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _552 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _554 = _552.w;
    float _573 = fma(_461, cbSceneParam._m0[5u].z, fma(_460, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _459));
    float _576 = fma(_461, cbSceneParam._m0[6u].z, fma(_460, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _459));
    float _579 = fma(_461, cbSceneParam._m0[7u].z, fma(_460, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _459));
    vec4 _581 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _583 = _581.x;
    float _595 = (((_581.y - _463) + (_581.w * _463)) * cbMtdParam._m0[3u].x) + _463;
    vec4 _596 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _612 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_583 * _583)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _596.z;
    float _620 = (((cbMatDynParam._m0[15u].x - _467) * cbMatDynParam._m0[15u].w) * _612) + _467;
    float _628 = ((_612 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _595)) + _595;
    uint _652 = uint(roundEven(NORMAL.w)) * 13u;
    uint _654 = (_652 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _660 = (cbMtdParam._m0[0u].x * _464) * cbInstanceData._m0[_654].x;
    float _661 = (cbMtdParam._m0[0u].y * _465) * cbInstanceData._m0[_654].y;
    float _662 = (cbMtdParam._m0[0u].z * _466) * cbInstanceData._m0[_654].z;
    float _3841 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _663 = isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0));
    float _3852 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _664 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
    float _3863 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _665 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    vec4 _666 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _671 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _682 = (((_671.x - _620) + (_671.w * _620)) * cbMtdParam._m0[3u].x) + _620;
    float _695 = (cbMtdParam._m0[3u].x * (((_663 * _554) - _663) + _666.x)) + _663;
    float _696 = (cbMtdParam._m0[3u].x * (((_664 * _554) - _664) + _666.y)) + _664;
    float _697 = (cbMtdParam._m0[3u].x * (((_665 * _554) - _665) + _666.z)) + _665;
    vec4 _698 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _711 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_620 * (_464 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_620 * (_465 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_620 * (_466 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _698.z;
    float _715 = _711 * cbMatDynParam._m0[13u].w;
    float _725 = (_715 * (cbMatDynParam._m0[13u].x - _695)) + _695;
    float _726 = (_715 * (cbMatDynParam._m0[13u].y - _696)) + _696;
    float _727 = (_715 * (cbMatDynParam._m0[13u].z - _697)) + _697;
    float _735 = ((_711 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _682)) + _682;
    float _736 = 1.0 - _735;
    float _737 = _736 * _725;
    float _738 = _736 * _726;
    float _739 = _736 * _727;
    float _743 = (_725 + (-0.039999999105930328369140625)) * _735;
    float _744 = (_726 + (-0.039999999105930328369140625)) * _735;
    float _745 = (_727 + (-0.039999999105930328369140625)) * _735;
    float _746 = _743 + 0.039999999105930328369140625;
    float _747 = _744 + 0.039999999105930328369140625;
    float _748 = _745 + 0.039999999105930328369140625;
    vec4 _757 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _549, cbSceneParam._m0[86u].y * _550));
    float _760 = _757.x * TEXCOORD_4;
    float _761 = dot(vec3(_459, _460, _461), vec3(_541, _542, _543));
    float _764 = _761 * 2.0;
    float _768 = (_764 * _459) - _541;
    float _769 = (_764 * _460) - _542;
    float _770 = (_764 * _461) - _543;
    float _774 = abs(dot(vec3(_541, _542, _543), vec3(_459, _460, _461)));
    float _3874 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _776 = sqrt(_628);
    float _789 = exp2((_776 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_776 * 3.0));
    float _795 = (1.0 - _789) * ((_776 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _796 = _789 * _776;
    float _824 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _828 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _832 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1134;
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    float _1142;
    float _1143;
    float _1144;
    float _1145;
    float _1146;
    float _1147;
    float _1148;
    float _1149;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _859 = fma(_832, cbModelParam._m0[26u].z, fma(_828, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _824));
        float _863 = fma(_832, cbModelParam._m0[27u].z, fma(_828, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _824));
        float _867 = fma(_832, cbModelParam._m0[28u].z, fma(_828, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _824));
        float _892 = _824 + _459;
        float _893 = _828 + _460;
        float _894 = _832 + _461;
        float _904 = fma(_894, cbModelParam._m0[26u].z, fma(_893, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _892)) - _859;
        float _905 = fma(_894, cbModelParam._m0[27u].z, fma(_893, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _892)) - _863;
        float _906 = fma(_894, cbModelParam._m0[28u].z, fma(_893, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _892)) - _867;
        float _910 = inversesqrt(dot(vec3(_904, _905, _906), vec3(_904, _905, _906)));
        float _923 = ((_910 * _904) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_859 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _924 = ((_910 * _905) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_863 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _925 = ((_910 * _906) / cbModelParam._m0[34u].z) + ((((((_867 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _928 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_923, _924, _925), 0.0);
        vec4 _935 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_923, _924, _925), 0.0);
        vec4 _942 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_923, _924, _925), 0.0);
        vec4 _949 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_923, _924, _925), 0.0);
        float _962 = exp2((_928.w + (-0.5)) * 20.0) * 2.0;
        float _963 = _962 * (_928.x + (-0.5));
        float _964 = _962 * (_928.y + (-0.5));
        float _965 = _962 * (_928.z + (-0.5));
        float _972 = exp2((_935.w + (-0.5)) * 20.0) * 2.0;
        float _973 = _972 * (_935.x + (-0.5));
        float _974 = _972 * (_935.y + (-0.5));
        float _975 = _972 * (_935.z + (-0.5));
        float _982 = exp2((_942.w + (-0.5)) * 20.0) * 2.0;
        float _983 = _982 * (_942.x + (-0.5));
        float _984 = _982 * (_942.y + (-0.5));
        float _985 = _982 * (_942.z + (-0.5));
        float _992 = exp2((_949.w + (-0.5)) * 20.0) * 2.0;
        float _993 = _992 * (_949.x + (-0.5));
        float _994 = _992 * (_949.y + (-0.5));
        float _995 = _992 * (_949.z + (-0.5));
        float _996 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _997 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _998 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
        float _999 = _963 * 0.5;
        float _1000 = _973 * 0.5;
        float _1001 = _983 * 0.5;
        float _1002 = dot(vec3(_999, _1000, _1001), vec3(_999, _1000, _1001));
        float _1007 = (_1002 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1002);
        float _1016 = (dot(vec3(_459, _460, _461), vec3(_1007 * _999, _1007 * _1000, _1007 * _1001)) + 1.0) * 0.5;
        float _3900 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1026 = sqrt(((_1000 * _1000) + (_999 * _999)) + (_1001 * _1001)) / (_996 + 9.9999997473787516355514526367188e-06);
        float _3911 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1027 = isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0));
        float _1028 = _1027 * 2.0;
        float _1032 = (1.0 - _1027) / (_1027 + 1.0);
        float _3922 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
        float _1033 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
        float _1042 = ((((1.0 - _1033) * (_1028 + 2.0)) * exp2(log2(isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0))) * (_1028 + 1.0))) + _1033) * _996;
        float _1043 = _964 * 0.5;
        float _1044 = _974 * 0.5;
        float _1045 = _984 * 0.5;
        float _1046 = dot(vec3(_1043, _1044, _1045), vec3(_1043, _1044, _1045));
        float _1051 = (_1046 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1046);
        float _1059 = (dot(vec3(_459, _460, _461), vec3(_1051 * _1043, _1051 * _1044, _1051 * _1045)) + 1.0) * 0.5;
        float _3933 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
        float _1068 = sqrt(((_1044 * _1044) + (_1043 * _1043)) + (_1045 * _1045)) / (_997 + 9.9999997473787516355514526367188e-06);
        float _3944 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1069 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
        float _1070 = _1069 * 2.0;
        float _1074 = (1.0 - _1069) / (_1069 + 1.0);
        float _3955 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1075 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
        float _1084 = ((((1.0 - _1075) * (_1070 + 2.0)) * exp2(log2(isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))) * (_1070 + 1.0))) + _1075) * _997;
        float _1085 = _965 * 0.5;
        float _1086 = _975 * 0.5;
        float _1087 = _985 * 0.5;
        float _1088 = dot(vec3(_1085, _1086, _1087), vec3(_1085, _1086, _1087));
        float _1093 = (_1088 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1088);
        float _1101 = (dot(vec3(_459, _460, _461), vec3(_1093 * _1085, _1093 * _1086, _1093 * _1087)) + 1.0) * 0.5;
        float _3966 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1110 = sqrt(((_1086 * _1086) + (_1085 * _1085)) + (_1087 * _1087)) / (_998 + 9.9999997473787516355514526367188e-06);
        float _3977 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1111 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
        float _1112 = _1111 * 2.0;
        float _1116 = (1.0 - _1111) / (_1111 + 1.0);
        float _3988 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
        float _1117 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
        float _1126 = ((((1.0 - _1117) * (_1112 + 2.0)) * exp2(log2(isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0))) * (_1112 + 1.0))) + _1117) * _998;
        _1134 = _965;
        _1136 = _964;
        _1137 = _963;
        _1138 = _975;
        _1139 = _974;
        _1140 = _973;
        _1141 = _985;
        _1142 = _984;
        _1143 = _983;
        _1144 = _998;
        _1145 = _997;
        _1146 = _996;
        _1147 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0)));
        _1148 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0)));
        _1149 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0)));
    }
    else
    {
        _1134 = _1135;
        _1136 = _1135;
        _1137 = _1135;
        _1138 = _1135;
        _1139 = _1135;
        _1140 = _1135;
        _1141 = _1135;
        _1142 = _1135;
        _1143 = _1135;
        _1144 = _1135;
        _1145 = _1135;
        _1146 = _1135;
        _1147 = 0.0;
        _1148 = 0.0;
        _1149 = 0.0;
    }
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1175 = fma(_832, cbModelParam._m0[30u].z, fma(_828, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _824));
        float _1179 = fma(_832, cbModelParam._m0[31u].z, fma(_828, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _824));
        float _1183 = fma(_832, cbModelParam._m0[32u].z, fma(_828, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _824));
        float _1206 = _824 + _459;
        float _1207 = _828 + _460;
        float _1208 = _832 + _461;
        float _1218 = fma(_1208, cbModelParam._m0[30u].z, fma(_1207, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1206)) - _1175;
        float _1219 = fma(_1208, cbModelParam._m0[31u].z, fma(_1207, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1206)) - _1179;
        float _1220 = fma(_1208, cbModelParam._m0[32u].z, fma(_1207, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1206)) - _1183;
        float _1224 = inversesqrt(dot(vec3(_1218, _1219, _1220), vec3(_1218, _1219, _1220)));
        float _1237 = ((_1224 * _1218) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1175 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1238 = ((_1224 * _1219) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1179 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1239 = ((_1224 * _1220) / cbModelParam._m0[35u].z) + ((((((_1183 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1241 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1237, _1238, _1239), 0.0);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1237, _1238, _1239), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1237, _1238, _1239), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1237, _1238, _1239), 0.0);
        float _1274 = exp2((_1241.w + (-0.5)) * 20.0) * 2.0;
        float _1275 = _1274 * (_1241.x + (-0.5));
        float _1276 = _1274 * (_1241.y + (-0.5));
        float _1277 = _1274 * (_1241.z + (-0.5));
        float _1284 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1285 = _1284 * (_1248.x + (-0.5));
        float _1286 = _1284 * (_1248.y + (-0.5));
        float _1287 = _1284 * (_1248.z + (-0.5));
        float _1294 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1295 = _1294 * (_1255.x + (-0.5));
        float _1296 = _1294 * (_1255.y + (-0.5));
        float _1297 = _1294 * (_1255.z + (-0.5));
        float _1304 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1305 = _1304 * (_1262.x + (-0.5));
        float _1306 = _1304 * (_1262.y + (-0.5));
        float _1307 = _1304 * (_1262.z + (-0.5));
        float _1308 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
        float _1309 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1310 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1311 = _1275 * 0.5;
        float _1312 = _1285 * 0.5;
        float _1313 = _1295 * 0.5;
        float _1314 = dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313));
        float _1319 = (_1314 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1314);
        float _1327 = (dot(vec3(_459, _460, _461), vec3(_1319 * _1311, _1319 * _1312, _1319 * _1313)) + 1.0) * 0.5;
        float _4029 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1336 = sqrt(((_1312 * _1312) + (_1311 * _1311)) + (_1313 * _1313)) / (_1308 + 9.9999997473787516355514526367188e-06);
        float _4040 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
        float _1338 = _1337 * 2.0;
        float _1342 = (1.0 - _1337) / (_1337 + 1.0);
        float _4051 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1352 = ((((1.0 - _1343) * (_1338 + 2.0)) * exp2(log2(isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0))) * (_1338 + 1.0))) + _1343) * _1308;
        float _1353 = _1276 * 0.5;
        float _1354 = _1286 * 0.5;
        float _1355 = _1296 * 0.5;
        float _1356 = dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355));
        float _1361 = (_1356 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1356);
        float _1369 = (dot(vec3(_459, _460, _461), vec3(_1361 * _1353, _1361 * _1354, _1361 * _1355)) + 1.0) * 0.5;
        float _4062 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1378 = sqrt(((_1354 * _1354) + (_1353 * _1353)) + (_1355 * _1355)) / (_1309 + 9.9999997473787516355514526367188e-06);
        float _4073 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1380 = _1379 * 2.0;
        float _1384 = (1.0 - _1379) / (_1379 + 1.0);
        float _4084 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1385 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1394 = ((((1.0 - _1385) * (_1380 + 2.0)) * exp2(log2(isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * (_1380 + 1.0))) + _1385) * _1309;
        float _1395 = _1277 * 0.5;
        float _1396 = _1287 * 0.5;
        float _1397 = _1297 * 0.5;
        float _1398 = dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397));
        float _1403 = (_1398 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1398);
        float _1411 = (dot(vec3(_459, _460, _461), vec3(_1403 * _1395, _1403 * _1396, _1403 * _1397)) + 1.0) * 0.5;
        float _4095 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1420 = sqrt(((_1396 * _1396) + (_1395 * _1395)) + (_1397 * _1397)) / (_1310 + 9.9999997473787516355514526367188e-06);
        float _4106 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1422 = _1421 * 2.0;
        float _1426 = (1.0 - _1421) / (_1421 + 1.0);
        float _4117 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1436 = ((((1.0 - _1427) * (_1422 + 2.0)) * exp2(log2(isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * (_1422 + 1.0))) + _1427) * _1310;
        _1444 = _1277;
        _1445 = _1276;
        _1446 = _1275;
        _1447 = _1287;
        _1448 = _1286;
        _1449 = _1285;
        _1450 = _1297;
        _1451 = _1296;
        _1452 = _1295;
        _1453 = _1310;
        _1454 = _1309;
        _1455 = _1308;
        _1456 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0)));
        _1457 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0)));
        _1458 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0)));
    }
    else
    {
        _1444 = _1135;
        _1445 = _1135;
        _1446 = _1135;
        _1447 = _1135;
        _1448 = _1135;
        _1449 = _1135;
        _1450 = _1135;
        _1451 = _1135;
        _1452 = _1135;
        _1453 = _1135;
        _1454 = _1135;
        _1455 = _1135;
        _1456 = 0.0;
        _1457 = 0.0;
        _1458 = 0.0;
    }
    float _1468 = (cbModelParam._m0[1u].x * (_1456 - _1147)) + _1147;
    float _1469 = (cbModelParam._m0[1u].x * (_1457 - _1148)) + _1148;
    float _1470 = (cbModelParam._m0[1u].x * (_1458 - _1149)) + _1149;
    float _1491 = fma(_1470, cbSceneParam._m0[89u].z, fma(_1469, cbSceneParam._m0[89u].y, _1468 * cbSceneParam._m0[89u].x));
    float _1494 = fma(_1470, cbSceneParam._m0[90u].z, fma(_1469, cbSceneParam._m0[90u].y, _1468 * cbSceneParam._m0[90u].x));
    float _1497 = fma(_1470, cbSceneParam._m0[91u].z, fma(_1469, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1468));
    float _1512 = _768 * 0.5;
    float _1513 = _769 * 0.5;
    float _1514 = _770 * 0.5;
    float _1515 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1446, _1449, _1452, _1455));
    float _1518 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1445, _1448, _1451, _1454));
    float _1521 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1444, _1447, _1450, _1453));
    float _1552;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1528 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1134, _1138, _1141, _1144));
        float _1532 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1136, _1139, _1142, _1145));
        float _1536 = dot(vec4(_1512, _1513, _1514, 1.0), vec4(_1137, _1140, _1143, _1146));
        float _1543 = dot(vec4(cbModelParam._m0[39u]), vec4(_1512, _1513, _1514, 1.0));
        _1552 = dot(vec3(isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0)), isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)), isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1543) ? 0.0 : (isnan(0.0) ? _1543 : max(0.0, _1543))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1552 = 1.0;
    }
    float _1563;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1554 = dot(vec4(cbModelParam._m0[40u]), vec4(_1512, _1513, _1514, 1.0));
        _1563 = dot(vec3(isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0)), isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0)), isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1554) ? 0.0 : (isnan(0.0) ? _1554 : max(0.0, _1554))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1563 = 1.0;
    }
    float _1567 = (_1563 * cbModelParam._m0[1u].x) + (_1552 * (1.0 - cbModelParam._m0[1u].x));
    float _1577 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _628);
    float _1578 = isnan(_1577) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1577 : min(cbModelParam._m0[25u].z, _1577));
    float _1658;
    float _1660;
    float _1662;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1625 = fma(_832, cbModelParam._m0[13u].z, fma(_828, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _824)) + cbModelParam._m0[13u].w;
        float _1629 = fma(_832, cbModelParam._m0[14u].z, fma(_828, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _824)) + cbModelParam._m0[14u].w;
        float _1633 = fma(_832, cbModelParam._m0[15u].z, fma(_828, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _824)) + cbModelParam._m0[15u].w;
        float _1636 = fma(_770, cbModelParam._m0[13u].z, fma(_769, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _768));
        float _1639 = fma(_770, cbModelParam._m0[14u].z, fma(_769, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _768));
        float _1642 = fma(_770, cbModelParam._m0[15u].z, fma(_769, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _768));
        float _1670;
        if (_1636 > 0.0)
        {
            _1670 = abs((1.0 - _1625) / _1636);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1636 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1625 + 1.0) / _1636);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1670 = frontier_phi_16_14_ladder;
        }
        float _1846;
        if (_1639 > 0.0)
        {
            _1846 = abs((1.0 - _1629) / _1639);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1639 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1629 + 1.0) / _1639);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1846 = frontier_phi_25_21_ladder;
        }
        float _2142;
        if (_1642 > 0.0)
        {
            _2142 = abs((1.0 - _1633) / _1642);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1642 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1633 + 1.0) / _1642);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2142 = frontier_phi_37_32_ladder;
        }
        float _2144 = isnan(_1846) ? _1670 : (isnan(_1670) ? _1846 : min(_1670, _1846));
        float _2145 = isnan(_2142) ? _2144 : (isnan(_2144) ? _2142 : min(_2144, _2142));
        float _2149 = (_2145 * _1636) + _1625;
        float _2150 = (_2145 * _1639) + _1629;
        float _2151 = (_2145 * _1642) + _1633;
        float _2152 = _2145 * 9.9999997473787516355514526367188e-05;
        float _2154 = (-1.0) - _2152;
        float _2156 = _2152 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2151 > _2156) || ((_2151 < _2154) || ((_2150 > _2156) || ((_2150 < _2154) || ((_2149 < _2154) || (_2149 > _2156))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2296 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2151, cbModelParam._m0[9u].z, fma(_2150, cbModelParam._m0[9u].y, _2149 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2151, cbModelParam._m0[10u].z, fma(_2150, cbModelParam._m0[10u].y, _2149 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2151, cbModelParam._m0[11u].z, fma(_2150, cbModelParam._m0[11u].y, _2149 * cbModelParam._m0[11u].x))), _1578);
            frontier_phi_15_37_ladder = _2296.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2296.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2296.z * cbModelParam._m0[1u].y;
        }
        _1658 = frontier_phi_15_37_ladder_1;
        _1660 = frontier_phi_15_37_ladder;
        _1662 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1646 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_768, _769, _770), _1578);
        _1658 = _1646.x * cbModelParam._m0[1u].y;
        _1660 = _1646.y * cbModelParam._m0[1u].y;
        _1662 = _1646.z * cbModelParam._m0[1u].y;
    }
    float _1666 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _628);
    float _1667 = isnan(_1666) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1666 : min(cbModelParam._m0[25u].w, _1666));
    float _1760;
    float _1762;
    float _1764;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1724 = fma(_832, cbModelParam._m0[21u].z, fma(_828, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _824)) + cbModelParam._m0[21u].w;
        float _1728 = fma(_832, cbModelParam._m0[22u].z, fma(_828, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _824)) + cbModelParam._m0[22u].w;
        float _1732 = fma(_832, cbModelParam._m0[23u].z, fma(_828, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _824)) + cbModelParam._m0[23u].w;
        float _1735 = fma(_770, cbModelParam._m0[21u].z, fma(_769, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _768));
        float _1738 = fma(_770, cbModelParam._m0[22u].z, fma(_769, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _768));
        float _1741 = fma(_770, cbModelParam._m0[23u].z, fma(_769, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _768));
        float _1851;
        if (_1735 > 0.0)
        {
            _1851 = abs((1.0 - _1724) / _1735);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1724 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1851 = frontier_phi_27_23_ladder;
        }
        float _2169;
        if (_1738 > 0.0)
        {
            _2169 = abs((1.0 - _1728) / _1738);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1738 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1728 + 1.0) / _1738);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2169 = frontier_phi_39_34_ladder;
        }
        float _2507;
        if (_1741 > 0.0)
        {
            _2507 = abs((1.0 - _1732) / _1741);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1741 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1732 + 1.0) / _1741);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2507 = frontier_phi_49_46_ladder;
        }
        float _2509 = isnan(_2169) ? _1851 : (isnan(_1851) ? _2169 : min(_1851, _2169));
        float _2510 = isnan(_2507) ? _2509 : (isnan(_2509) ? _2507 : min(_2509, _2507));
        float _2514 = (_2510 * _1735) + _1724;
        float _2515 = (_2510 * _1738) + _1728;
        float _2516 = (_2510 * _1741) + _1732;
        float _2517 = _2510 * 9.9999997473787516355514526367188e-05;
        float _2518 = (-1.0) - _2517;
        float _2520 = _2517 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2516 > _2520) || ((_2516 < _2518) || ((_2515 > _2520) || ((_2515 < _2518) || ((_2514 < _2518) || (_2514 > _2520))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2638 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2516, cbModelParam._m0[17u].z, fma(_2515, cbModelParam._m0[17u].y, _2514 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2516, cbModelParam._m0[18u].z, fma(_2515, cbModelParam._m0[18u].y, _2514 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2516, cbModelParam._m0[19u].z, fma(_2515, cbModelParam._m0[19u].y, _2514 * cbModelParam._m0[19u].x))), _1667);
            frontier_phi_24_49_ladder = _2638.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2638.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2638.x * cbModelParam._m0[1u].z;
        }
        _1760 = frontier_phi_24_49_ladder_2;
        _1762 = frontier_phi_24_49_ladder_1;
        _1764 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1744 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_768, _769, _770), _1667);
        _1760 = _1744.x * cbModelParam._m0[1u].z;
        _1762 = _1744.y * cbModelParam._m0[1u].z;
        _1764 = _1744.z * cbModelParam._m0[1u].z;
    }
    float _1777 = (((_795 * _746) + _796) * _760) * ((cbModelParam._m0[1u].w * (_1760 - _1658)) + _1658);
    float _1779 = (((_795 * _747) + _796) * _760) * ((cbModelParam._m0[1u].w * (_1762 - _1660)) + _1660);
    float _1781 = (((_795 * _748) + _796) * _760) * ((cbModelParam._m0[1u].w * (_1764 - _1662)) + _1662);
    float _1784 = fma(_1781, cbSceneParam._m0[89u].z, fma(_1779, cbSceneParam._m0[89u].y, _1777 * cbSceneParam._m0[89u].x));
    float _1787 = fma(_1781, cbSceneParam._m0[90u].z, fma(_1779, cbSceneParam._m0[90u].y, _1777 * cbSceneParam._m0[90u].x));
    float _1790 = fma(_1781, cbSceneParam._m0[91u].z, fma(_1779, cbSceneParam._m0[91u].y, _1777 * cbSceneParam._m0[91u].x));
    float _1825 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1829 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1833 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1837 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1838 = _1825 / _1837;
    float _1839 = _1829 / _1837;
    float _1840 = _1833 / _1837;
    float _1987;
    float _1988;
    float _1989;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1867 = ((uint(_1840 > cbSceneParam._m0[59u].y) + uint(_1840 > cbSceneParam._m0[59u].x)) + uint(_1840 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1868 = _1867 + 43u;
        uint _1876 = _1867 + 44u;
        uint _1884 = _1867 + 45u;
        uint _1892 = _1867 + 46u;
        float _1903 = fma(_1837, cbSceneParam._m0[_1868].w, fma(_1833, cbSceneParam._m0[_1868].z, fma(_1829, cbSceneParam._m0[_1868].y, _1825 * cbSceneParam._m0[_1868].x)));
        float _1907 = fma(_1837, cbSceneParam._m0[_1876].w, fma(_1833, cbSceneParam._m0[_1876].z, fma(_1829, cbSceneParam._m0[_1876].y, _1825 * cbSceneParam._m0[_1876].x)));
        float _1915 = fma(_1837, cbSceneParam._m0[_1892].w, fma(_1833, cbSceneParam._m0[_1892].z, fma(_1829, cbSceneParam._m0[_1892].y, _1825 * cbSceneParam._m0[_1892].x)));
        float _1920 = cbSceneParam._m0[33u].z * _1915;
        float _1922 = cbSceneParam._m0[33u].w * _1915;
        float _1925 = fma(_1837, cbSceneParam._m0[_1884].w, fma(_1833, cbSceneParam._m0[_1884].z, fma(_1829, cbSceneParam._m0[_1884].y, _1825 * cbSceneParam._m0[_1884].x))) / _1915;
        float _1973 = (cbSceneParam._m0[33u].x - sqrt(((_1839 * _1839) + (_1838 * _1838)) + (_1840 * _1840))) * cbSceneParam._m0[33u].y;
        float _4243 = isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0));
        float _1980 = (isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1920 + _1903) / _1915, (_1922 + _1907) / _1915), _1925), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1922 + _1903) / _1915, (_1907 - _1920) / _1915), _1925), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1903 - _1920) / _1915, (_1907 - _1922) / _1915), _1925), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1903 - _1922) / _1915, (_1920 + _1907) / _1915), _1925), 0.0)).x), vec4(0.25)));
        _1987 = 1.0 - (_1980 * cbSceneParam._m0[34u].x);
        _1988 = 1.0 - (_1980 * cbSceneParam._m0[34u].y);
        _1989 = 1.0 - (_1980 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1987 = 1.0;
        _1988 = 1.0;
        _1989 = 1.0;
    }
    float _2053;
    float _2055;
    float _2057;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2041 = fma(_1837, cbSceneParam._m0[63u].w, fma(_1833, cbSceneParam._m0[63u].z, fma(_1829, cbSceneParam._m0[63u].y, _1825 * cbSceneParam._m0[63u].x)));
        float _2042 = fma(_1837, cbSceneParam._m0[60u].w, fma(_1833, cbSceneParam._m0[60u].z, fma(_1829, cbSceneParam._m0[60u].y, _1825 * cbSceneParam._m0[60u].x))) / _2041;
        float _2043 = fma(_1837, cbSceneParam._m0[61u].w, fma(_1833, cbSceneParam._m0[61u].z, fma(_1829, cbSceneParam._m0[61u].y, _1825 * cbSceneParam._m0[61u].x))) / _2041;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2042 >= cbSceneParam._m0[64u].x) && (_2043 >= cbSceneParam._m0[64u].y)) && (_2042 <= cbSceneParam._m0[64u].z)) && (_2043 <= cbSceneParam._m0[64u].w))
        {
            float _2182 = fma(_1837, cbSceneParam._m0[62u].w, fma(_1833, cbSceneParam._m0[62u].z, fma(_1829, cbSceneParam._m0[62u].y, _1825 * cbSceneParam._m0[62u].x))) / _2041;
            float _2186 = isnan(cbSceneParam._m0[41u].w) ? _2182 : (isnan(_2182) ? cbSceneParam._m0[41u].w : max(_2182, cbSceneParam._m0[41u].w));
            float _2229 = (cbSceneParam._m0[33u].x - sqrt(((_1839 * _1839) + (_1838 * _1838)) + (_1840 * _1840))) * cbSceneParam._m0[33u].y;
            float _4259 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
            float _2236 = (isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2042, cbSceneParam._m0[33u].w + _2043), _2186), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2042, _2043 - cbSceneParam._m0[33u].z), _2186), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2042 - cbSceneParam._m0[33u].z, _2043 - cbSceneParam._m0[33u].w), _2186), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2042 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2043), _2186), 0.0)).x), vec4(0.25)));
            float _2240 = 1.0 - (_2236 * cbSceneParam._m0[34u].x);
            float _2241 = 1.0 - (_2236 * cbSceneParam._m0[34u].y);
            float _2242 = 1.0 - (_2236 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2241) ? _1988 : (isnan(_1988) ? _2241 : min(_1988, _2241));
            frontier_phi_36_35_ladder_1 = isnan(_2242) ? _1989 : (isnan(_1989) ? _2242 : min(_1989, _2242));
            frontier_phi_36_35_ladder_2 = isnan(_2240) ? _1987 : (isnan(_1987) ? _2240 : min(_1987, _2240));
        }
        else
        {
            frontier_phi_36_35_ladder = _1988;
            frontier_phi_36_35_ladder_1 = _1989;
            frontier_phi_36_35_ladder_2 = _1987;
        }
        _2053 = frontier_phi_36_35_ladder_2;
        _2055 = frontier_phi_36_35_ladder;
        _2057 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2053 = _1987;
        _2055 = _1988;
        _2057 = _1989;
    }
    uvec4 _2062 = floatBitsToUint(cbInstanceData._m0[_652 + 5u]);
    uint _2064 = _2062.x * 14u;
    uint _2065 = _2064 + 13u;
    float _2072 = _760 + (-1.0);
    float _2077 = (cbLight._m0[_2065].x * _2072) + 1.0;
    float _2078 = (cbLight._m0[_2065].y * _2072) + 1.0;
    float _2079 = (cbLight._m0[_2065].z * _2072) + 1.0;
    float _2080 = (cbLight._m0[_2065].w * _2072) + 1.0;
    uint _2081 = _2064 + 5u;
    float _2087 = isnan(1.0) ? _2078 : (isnan(_2078) ? 1.0 : min(_2078, 1.0));
    uint _2091 = _2064 + 4u;
    float _2101 = isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0));
    uint _2105 = _2064 | 1u;
    float _2116 = dot(vec3(cbLight._m0[_2064].xyz), vec3(_459, _460, _461));
    float _2119 = dot(vec3(cbLight._m0[_2105].xyz), vec3(_459, _460, _461));
    float _4295 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _4306 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _2124 = (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * 0.3183098733425140380859375;
    float _2126 = (isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0))) * 0.3183098733425140380859375;
    float _2133 = ((cbLight._m0[_2081].x * _2087) * _2126) + (((cbLight._m0[_2091].x * _2053) * _2101) * _2124);
    float _2134 = ((_2087 * cbLight._m0[_2081].y) * _2126) + (((cbLight._m0[_2091].y * _2055) * _2101) * _2124);
    float _2135 = ((_2087 * cbLight._m0[_2081].z) * _2126) + (((cbLight._m0[_2091].z * _2057) * _2101) * _2124);
    uvec4 _2139 = floatBitsToUint(cbLight._m0[_2064 + 12u]);
    bool _2141 = _2139.x == 0u;
    float _2243;
    float _2245;
    float _2247;
    if (_2141)
    {
        _2243 = _2133;
        _2245 = _2134;
        _2247 = _2135;
    }
    else
    {
        uint _2251 = _2064 + 6u;
        float _2267 = (dot(vec3(cbLight._m0[_2064 + 2u].xyz), vec3(_459, _460, _461)) * 0.5) + 0.5;
        float _2268 = _2267 * _2267;
        float _4317 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
        float _2269 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _2270 = isnan(1.0) ? _2079 : (isnan(_2079) ? 1.0 : min(_2079, 1.0));
        _2243 = (((cbLight._m0[_2251].x * 0.3183098733425140380859375) * _2269) * _2270) + _2133;
        _2245 = (((cbLight._m0[_2251].y * 0.3183098733425140380859375) * _2269) * _2270) + _2134;
        _2247 = (((cbLight._m0[_2251].z * 0.3183098733425140380859375) * _2269) * _2270) + _2135;
    }
    bool _2250 = _2139.y == 0u;
    float _2305;
    float _2307;
    float _2309;
    if (_2250)
    {
        _2305 = _2243;
        _2307 = _2245;
        _2309 = _2247;
    }
    else
    {
        uint _2478 = _2064 + 7u;
        float _2494 = (dot(vec3(cbLight._m0[_2064 + 3u].xyz), vec3(_459, _460, _461)) * 0.5) + 0.5;
        float _2495 = _2494 * _2494;
        float _4333 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
        float _2496 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _2497 = isnan(1.0) ? _2080 : (isnan(_2080) ? 1.0 : min(_2080, 1.0));
        _2305 = (((cbLight._m0[_2478].x * 0.3183098733425140380859375) * _2496) * _2497) + _2243;
        _2307 = (((cbLight._m0[_2478].y * 0.3183098733425140380859375) * _2496) * _2497) + _2245;
        _2309 = (((cbLight._m0[_2478].z * 0.3183098733425140380859375) * _2496) * _2497) + _2247;
    }
    uint _2312 = _2064 + 8u;
    float _2325 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2064].w)) * _628) * 0.949999988079071044921875);
    float _2326 = _2325 * _2325;
    float _2327 = cbLight._m0[_2064].x + _541;
    float _2328 = cbLight._m0[_2064].y + _542;
    float _2329 = cbLight._m0[_2064].z + _543;
    float _2333 = inversesqrt(dot(vec3(_2327, _2328, _2329), vec3(_2327, _2328, _2329)));
    float _2334 = _2333 * _2327;
    float _2335 = _2333 * _2328;
    float _2336 = _2333 * _2329;
    float _2337 = dot(vec3(_459, _460, _461), vec3(cbLight._m0[_2064].xyz));
    float _4349 = isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0));
    float _2340 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
    float _4360 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _2341 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
    float _2342 = dot(vec3(_459, _460, _461), vec3(_2334, _2335, _2336));
    float _4371 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
    float _2345 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
    float _2346 = dot(vec3(cbLight._m0[_2064].xyz), vec3(_2334, _2335, _2336));
    float _4382 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
    float _2350 = _2326 * _2326;
    float _2354 = ((_2345 * _2345) * (_2350 + (-1.0))) + 1.0;
    float _2362 = exp2(log2(1.0 - (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0)))) * 5.0);
    float _2363 = 0.959999978542327880859375 - _743;
    float _2365 = 0.959999978542327880859375 - _744;
    float _2366 = 0.959999978542327880859375 - _745;
    float _2373 = 1.0 - _2326;
    float _2384 = (0.5 / (((_2341 * ((_2340 * _2373) + _2326)) + 9.9999999392252902907785028219223e-09) + (((_2341 * _2373) + _2326) * _2340))) * _2340;
    float _4393 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
    float _2386 = (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_2350 / ((_2354 * _2354) * 3.141590118408203125));
    uint _2400 = _2064 + 9u;
    float _2411 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2105].w)) * _628) * 0.949999988079071044921875);
    float _2412 = _2411 * _2411;
    float _2413 = cbLight._m0[_2105].x + _541;
    float _2414 = cbLight._m0[_2105].y + _542;
    float _2415 = cbLight._m0[_2105].z + _543;
    float _2419 = inversesqrt(dot(vec3(_2413, _2414, _2415), vec3(_2413, _2414, _2415)));
    float _2420 = _2419 * _2413;
    float _2421 = _2419 * _2414;
    float _2422 = _2419 * _2415;
    float _2423 = dot(vec3(_459, _460, _461), vec3(cbLight._m0[_2105].xyz));
    float _4404 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2426 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    float _2427 = dot(vec3(_459, _460, _461), vec3(_2420, _2421, _2422));
    float _4415 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
    float _2430 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
    float _2431 = dot(vec3(cbLight._m0[_2105].xyz), vec3(_2420, _2421, _2422));
    float _4426 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
    float _2435 = _2412 * _2412;
    float _2439 = ((_2430 * _2430) * (_2435 + (-1.0))) + 1.0;
    float _2446 = exp2(log2(1.0 - (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0)))) * 5.0);
    float _2453 = 1.0 - _2412;
    float _2463 = (0.5 / (((_2341 * ((_2426 * _2453) + _2412)) + 9.9999999392252902907785028219223e-09) + (((_2341 * _2453) + _2412) * _2426))) * _2426;
    float _4437 = isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0));
    float _2465 = (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_2435 / ((_2439 * _2439) * 3.141590118408203125));
    float _2475 = (((((_2446 * _2363) + _746) * cbLight._m0[_2400].x) * _2465) * _2087) + ((((cbLight._m0[_2312].x * _2053) * ((_2362 * _2363) + _746)) * _2386) * _2101);
    float _2476 = (((((_2446 * _2365) + _747) * cbLight._m0[_2400].y) * _2465) * _2087) + ((((cbLight._m0[_2312].y * _2055) * ((_2362 * _2365) + _747)) * _2386) * _2101);
    float _2477 = (((((_2446 * _2366) + _748) * cbLight._m0[_2400].z) * _2465) * _2087) + ((((cbLight._m0[_2312].z * _2057) * ((_2362 * _2366) + _748)) * _2386) * _2101);
    float _2533;
    float _2535;
    float _2537;
    if (_2141)
    {
        _2533 = _2475;
        _2535 = _2476;
        _2537 = _2477;
    }
    else
    {
        uint _2539 = _2064 + 2u;
        uint _2543 = _2064 + 10u;
        float _2557 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2539].w)) * _628) * 0.949999988079071044921875);
        float _2558 = _2557 * _2557;
        float _2559 = cbLight._m0[_2539].x + _541;
        float _2560 = cbLight._m0[_2539].y + _542;
        float _2561 = cbLight._m0[_2539].z + _543;
        float _2565 = inversesqrt(dot(vec3(_2559, _2560, _2561), vec3(_2559, _2560, _2561)));
        float _2566 = _2565 * _2559;
        float _2567 = _2565 * _2560;
        float _2568 = _2565 * _2561;
        float _2569 = dot(vec3(_459, _460, _461), vec3(cbLight._m0[_2539].xyz));
        float _4448 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2572 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _2573 = dot(vec3(_459, _460, _461), vec3(_2566, _2567, _2568));
        float _4459 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
        float _2576 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _2577 = dot(vec3(cbLight._m0[_2539].xyz), vec3(_2566, _2567, _2568));
        float _4470 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
        float _2581 = _2558 * _2558;
        float _2585 = ((_2576 * _2576) * (_2581 + (-1.0))) + 1.0;
        float _2592 = exp2(log2(1.0 - (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0)))) * 5.0);
        float _2599 = 1.0 - _2558;
        float _2609 = (0.5 / (((_2341 * ((_2572 * _2599) + _2558)) + 9.9999999392252902907785028219223e-09) + (((_2341 * _2599) + _2558) * _2572))) * _2572;
        float _4481 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
        float _2611 = (isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * (_2581 / ((_2585 * _2585) * 3.141590118408203125));
        float _2612 = isnan(1.0) ? _2079 : (isnan(_2079) ? 1.0 : min(_2079, 1.0));
        _2533 = (((((_2592 * _2363) + _746) * cbLight._m0[_2543].x) * _2611) * _2612) + _2475;
        _2535 = (((((_2592 * _2365) + _747) * cbLight._m0[_2543].y) * _2611) * _2612) + _2476;
        _2537 = (((((_2592 * _2366) + _748) * cbLight._m0[_2543].z) * _2611) * _2612) + _2477;
    }
    float _2643;
    float _2645;
    float _2647;
    if (_2250)
    {
        _2643 = _2533;
        _2645 = _2535;
        _2647 = _2537;
    }
    else
    {
        uint _2654 = _2064 + 3u;
        uint _2658 = _2064 + 11u;
        float _2672 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2654].w)) * _628) * 0.949999988079071044921875);
        float _2673 = _2672 * _2672;
        float _2674 = cbLight._m0[_2654].x + _541;
        float _2675 = cbLight._m0[_2654].y + _542;
        float _2676 = cbLight._m0[_2654].z + _543;
        float _2680 = inversesqrt(dot(vec3(_2674, _2675, _2676), vec3(_2674, _2675, _2676)));
        float _2681 = _2680 * _2674;
        float _2682 = _2680 * _2675;
        float _2683 = _2680 * _2676;
        float _2684 = dot(vec3(_459, _460, _461), vec3(cbLight._m0[_2654].xyz));
        float _4497 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2687 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _2688 = dot(vec3(_459, _460, _461), vec3(_2681, _2682, _2683));
        float _4508 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
        float _2691 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _2692 = dot(vec3(cbLight._m0[_2654].xyz), vec3(_2681, _2682, _2683));
        float _4519 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
        float _2696 = _2673 * _2673;
        float _2700 = ((_2691 * _2691) * (_2696 + (-1.0))) + 1.0;
        float _2707 = exp2(log2(1.0 - (isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0)))) * 5.0);
        float _2714 = 1.0 - _2673;
        float _2724 = (0.5 / (((_2341 * ((_2687 * _2714) + _2673)) + 9.9999999392252902907785028219223e-09) + (((_2341 * _2714) + _2673) * _2687))) * _2687;
        float _4530 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
        float _2726 = (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (_2696 / ((_2700 * _2700) * 3.141590118408203125));
        float _2727 = isnan(1.0) ? _2080 : (isnan(_2080) ? 1.0 : min(_2080, 1.0));
        _2643 = (((((_2707 * _2363) + _746) * cbLight._m0[_2658].x) * _2726) * _2727) + _2533;
        _2645 = (((((_2707 * _2365) + _747) * cbLight._m0[_2658].y) * _2726) * _2727) + _2535;
        _2647 = (((((_2707 * _2366) + _748) * cbLight._m0[_2658].z) * _2726) * _2727) + _2537;
    }
    float _2792;
    float _2794;
    float _2796;
    float _2798;
    float _2800;
    float _2802;
    if (_2062.y == 0u)
    {
        uvec4 _2748 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2749 = _2748.x;
        uint _2760 = uint((float(_2748.y) * floor(float(uint(cbSceneParam._m0[85u].y * _550) / _2749))) + floor(float(uint(cbSceneParam._m0[85u].x * _549) / _2749)));
        float _2770 = (log2(_1840 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2771 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0));
        uint _2774 = uint(isnan(14.0) ? _2771 : (isnan(_2771) ? 14.0 : min(_2771, 14.0)));
        uvec4 _2779 = texelFetch(g_lightClusterGridBuffer, int(((_2774 << 2u) + (_2760 << 6u)) >> 2u));
        uint _2780 = _2779.x;
        uint _2781 = _2748.z;
        float _2864;
        float _2866;
        float _2868;
        float _2870;
        float _2872;
        float _2874;
        if (((((1u << ((_2781 >> 4u) & 15u)) + 4294967295u) & _2780) == 0u) || ((_2781 & 240u) == 0u))
        {
            _2864 = 0.0;
            _2866 = 0.0;
            _2868 = 0.0;
            _2870 = 0.0;
            _2872 = 0.0;
            _2874 = 0.0;
        }
        else
        {
            float _2865;
            float _2867;
            float _2869;
            float _2871;
            float _2873;
            float _2875;
            float _3008 = 0.0;
            float _3009 = 0.0;
            float _3010 = 0.0;
            float _3011 = 0.0;
            float _3012 = 0.0;
            float _3013 = 0.0;
            uint _3014 = 0u;
            uint _3023;
            bool _3024;
            for (;;)
            {
                _3023 = texelFetch(g_lightClassification, int((((_2774 << 5u) + (_2760 << 9u)) + (_3014 << 2u)) >> 2u)).x;
                _3024 = _3023 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3024)
                {
                    frontier_phi_68_pred = _3013;
                    frontier_phi_68_pred_1 = _3012;
                    frontier_phi_68_pred_2 = _3011;
                    frontier_phi_68_pred_3 = _3009;
                    frontier_phi_68_pred_4 = _3008;
                    frontier_phi_68_pred_5 = _3010;
                }
                else
                {
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    float _3136;
                    float _3137;
                    uint _3138;
                    _3132 = _3008;
                    _3133 = _3009;
                    _3134 = _3010;
                    _3135 = _3011;
                    _3136 = _3012;
                    _3137 = _3013;
                    _3138 = _3023;
                    float _3064;
                    float _3065;
                    float _3066;
                    float _3067;
                    float _3068;
                    float _3069;
                    for (;;)
                    {
                        uint _3142 = uint(findLSB(_3138)) + (_3014 << 5u);
                        uint _3139 = (_3138 + 4294967295u) & _3138;
                        uint _3144 = _3142 * 48u;
                        vec4 _3158 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3144)).x, texelFetch(g_PointLightRenderingBuffer, int(_3144 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3144 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3144 + 3u)).x));
                        uint _3164 = (_3142 * 48u) + 4u;
                        vec4 _3177 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3164)).x, texelFetch(g_PointLightRenderingBuffer, int(_3164 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3164 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3164 + 3u)).x));
                        uint _3183 = (_3142 * 48u) + 8u;
                        vec3 _3194 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3183)).x, texelFetch(g_PointLightRenderingBuffer, int(_3183 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3183 + 2u)).x));
                        float _3198 = _3158.x - _1838;
                        float _3199 = _3158.y - _1839;
                        float _3200 = _3158.z - _1840;
                        float _3201 = dot(vec3(_3198, _3199, _3200), vec3(_3198, _3199, _3200));
                        float _3204 = inversesqrt(_3201);
                        float _3205 = _3204 * _3198;
                        float _3206 = _3204 * _3199;
                        float _3207 = _3204 * _3200;
                        float _3208 = dot(vec3(_573, _576, _579), vec3(_3205, _3206, _3207));
                        float _3213 = 1.0 - (_3201 * _3158.w);
                        float _4556 = isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : max(_3213, 0.0));
                        float _3214 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
                        float _3215 = sqrt(_3201) * _3177.w;
                        float _3218 = 1.39999997615814208984375 / (_3215 + 1.39999997615814208984375);
                        float _3219 = _3218 * _3218;
                        float _3222 = ((1.0 - _3219) * _3208) + _3219;
                        float _3225 = _3215 * _3215;
                        float _3229 = ((isnan(0.0) ? _3222 : (isnan(_3222) ? 0.0 : max(_3222, 0.0))) * _3214) / ((_3225 * 0.699999988079071044921875) + 1.0);
                        float _3233 = (-0.0) - _1838;
                        float _3234 = (-0.0) - _1839;
                        float _3235 = (-0.0) - _1840;
                        float _3239 = inversesqrt(dot(vec3(_3233, _3234, _3235), vec3(_3233, _3234, _3235)));
                        float _3240 = _3239 * _3233;
                        float _3241 = _3239 * _3234;
                        float _3242 = _3239 * _3235;
                        float _3249 = exp2(log2(1.0 / ((_3225 * 3.5) + 5.0)) * 0.25);
                        float _3250 = 1.0 - _776;
                        float _3257 = sqrt(1.0 - ((1.0 - (_3250 * _3250)) * (1.0 - (_3249 * _3249))));
                        float _3258 = _3257 * _3257;
                        float _3259 = _3258 * _3258;
                        float _3260 = _3240 + _3205;
                        float _3261 = _3241 + _3206;
                        float _3262 = _3242 + _3207;
                        float _3266 = inversesqrt(dot(vec3(_3260, _3261, _3262), vec3(_3260, _3261, _3262)));
                        float _3270 = dot(vec3(_573, _576, _579), vec3(_3240, _3241, _3242));
                        float _4572 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0));
                        float _3273 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
                        float _3274 = dot(vec3(_573, _576, _579), vec3(_3266 * _3260, _3266 * _3261, _3266 * _3262));
                        float _4583 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
                        float _3277 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
                        float _3281 = ((_3277 * _3277) * (_3259 + (-1.0))) + 1.0;
                        float _3282 = _3218 * _3258;
                        float _3283 = _3282 * _3282;
                        float _3286 = ((1.0 - _3283) * _3208) + _3283;
                        float _4594 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
                        float _3287 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
                        float _3288 = 1.0 - _3258;
                        float _3298 = (0.5 / (((_3287 * ((_3273 * _3288) + _3258)) + 9.9999999392252902907785028219223e-09) + (((_3287 * _3288) + _3258) * _3273))) * _3287;
                        float _4605 = isnan(0.0) ? _3298 : (isnan(_3298) ? 0.0 : max(_3298, 0.0));
                        float _3309 = (((_3259 * 3.1415927410125732421875) * (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0)))) / ((_3281 * _3281) * ((_3225 * 2.1991131305694580078125) + 3.141590118408203125))) * _3214;
                        _3067 = (_3229 * _3177.x) + _3135;
                        _3068 = (_3229 * _3177.y) + _3136;
                        _3069 = (_3229 * _3177.z) + _3137;
                        _3064 = (_3309 * _3194.x) + _3132;
                        _3065 = (_3309 * _3194.y) + _3133;
                        _3066 = (_3309 * _3194.z) + _3134;
                        if (_3139 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3132 = _3064;
                            _3133 = _3065;
                            _3134 = _3066;
                            _3135 = _3067;
                            _3136 = _3068;
                            _3137 = _3069;
                            _3138 = _3139;
                        }
                    }
                    frontier_phi_68_pred = _3069;
                    frontier_phi_68_pred_1 = _3068;
                    frontier_phi_68_pred_2 = _3067;
                    frontier_phi_68_pred_3 = _3065;
                    frontier_phi_68_pred_4 = _3064;
                    frontier_phi_68_pred_5 = _3066;
                }
                _2875 = frontier_phi_68_pred;
                _2873 = frontier_phi_68_pred_1;
                _2871 = frontier_phi_68_pred_2;
                _2867 = frontier_phi_68_pred_3;
                _2865 = frontier_phi_68_pred_4;
                _2869 = frontier_phi_68_pred_5;
                uint _3015 = _3014 + 1u;
                if (_3015 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3008 = _2865;
                    _3009 = _2867;
                    _3010 = _2869;
                    _3011 = _2871;
                    _3012 = _2873;
                    _3013 = _2875;
                    _3014 = _3015;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2864 = _2865;
            _2866 = _2867;
            _2868 = _2869;
            _2870 = _2871;
            _2872 = _2873;
            _2874 = _2875;
        }
        uvec4 _2878 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2879 = _2878.z;
        uint _2881 = (_2879 >> 8u) & 15u;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        float _2984;
        float _2986;
        if (((4294967295u << _2881) & _2780) == 0u)
        {
            _2976 = _2864;
            _2978 = _2866;
            _2980 = _2868;
            _2982 = _2870;
            _2984 = _2872;
            _2986 = _2874;
        }
        else
        {
            float _3001 = inversesqrt(dot(vec3(_1838, _1839, _1840), vec3(_1838, _1839, _1840)));
            float _3002 = _3001 * _1838;
            float _3003 = _3001 * _1839;
            float _3004 = _3001 * _1840;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2881 < ((_2879 >> 12u) & 15u))
            {
                float _2977;
                float _2979;
                float _2981;
                float _2983;
                float _2985;
                float _2987;
                float _3115 = _2864;
                float _3116 = _2866;
                float _3117 = _2868;
                float _3118 = _2870;
                float _3119 = _2872;
                float _3120 = _2874;
                uint _3121 = _2881;
                uint _3130;
                bool _3131;
                for (;;)
                {
                    _3130 = texelFetch(g_lightClassification, int((((_2774 << 5u) + (_2760 << 9u)) + (_3121 << 2u)) >> 2u)).x;
                    _3131 = _3130 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3131)
                    {
                        frontier_phi_74_pred = _3117;
                        frontier_phi_74_pred_1 = _3116;
                        frontier_phi_74_pred_2 = _3115;
                        frontier_phi_74_pred_3 = _3120;
                        frontier_phi_74_pred_4 = _3119;
                        frontier_phi_74_pred_5 = _3118;
                    }
                    else
                    {
                        float _3314;
                        float _3315;
                        float _3316;
                        float _3317;
                        float _3318;
                        float _3319;
                        float _3609;
                        float _3610;
                        float _3611;
                        float _3612;
                        float _3613;
                        float _3614;
                        float _3327 = _3115;
                        float _3328 = _3116;
                        float _3329 = _3117;
                        float _3330 = _3118;
                        float _3331 = _3119;
                        float _3332 = _3120;
                        uint _3333 = _3130;
                        uint _3334;
                        vec4 _3359;
                        float _3360;
                        vec4 _3375;
                        vec3 _3387;
                        vec4 _3402;
                        vec4 _3418;
                        float _3465;
                        bool _3466;
                        for (;;)
                        {
                            uint _3344 = ((_3121 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3333));
                            _3334 = (_3333 + 4294967295u) & _3333;
                            uint _3346 = _3344 * 40u;
                            _3359 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3346)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 3u)).x));
                            _3360 = _3359.w;
                            uint _3362 = (_3344 * 40u) + 4u;
                            _3375 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3362)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 3u)).x));
                            uint _3377 = (_3344 * 40u) + 8u;
                            _3387 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3377)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 2u)).x));
                            uint _3389 = (_3344 * 40u) + 16u;
                            _3402 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3389)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 3u)).x));
                            uint _3405 = (_3344 * 40u) + 20u;
                            _3418 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 3u)).x));
                            uint _3421 = (_3344 * 40u) + 24u;
                            vec4 _3434 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3421)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 3u)).x));
                            uint _3440 = (_3344 * 40u) + 28u;
                            vec4 _3453 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3440)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 3u)).x));
                            _3465 = fma(_1840, _3453.z, fma(_1839, _3453.y, _3453.x * _1838)) + _3453.w;
                            _3466 = !((fma(_1840, _3434.z, fma(_1839, _3434.y, _3434.x * _1838)) + _3434.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3466)
                            {
                                float _3493 = _3359.x - _1838;
                                float _3494 = _3359.y - _1839;
                                float _3495 = _3359.z - _1840;
                                float _3496 = dot(vec3(_3493, _3494, _3495), vec3(_3493, _3494, _3495));
                                float _3499 = inversesqrt(_3496);
                                float _3500 = _3499 * _3493;
                                float _3501 = _3499 * _3494;
                                float _3502 = _3499 * _3495;
                                float _3506 = 1.0 - (_3496 / (_3360 * _3360));
                                float _4616 = isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0));
                                float _3507 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
                                float _3511 = sqrt(_3496) * _3375.w;
                                float _3513 = 1.39999997615814208984375 / (_3511 + 1.39999997615814208984375);
                                float _3514 = _3513 * _3513;
                                float _3517 = ((1.0 - _3514) * dot(vec3(_3500, _3501, _3502), vec3(_573, _576, _579))) + _3514;
                                float _3520 = _3511 * _3511;
                                float _3524 = (fma(_1840, _3402.z, fma(_1839, _3402.y, _3402.x * _1838)) + _3402.w) / _3465;
                                float _3525 = (fma(_1840, _3418.z, fma(_1839, _3418.y, _3418.x * _1838)) + _3418.w) / _3465;
                                float _3529 = 1.0 - dot(vec2(_3524, _3525), vec2(_3524, _3525));
                                float _4632 = isnan(0.0) ? _3529 : (isnan(_3529) ? 0.0 : max(_3529, 0.0));
                                float _3530 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
                                float _3531 = _3530 * (((isnan(0.0) ? _3517 : (isnan(_3517) ? 0.0 : max(_3517, 0.0))) * _3507) / ((_3520 * 0.699999988079071044921875) + 1.0));
                                float _3543 = exp2(log2(1.0 / ((_3520 * 3.5) + 5.0)) * 0.25);
                                float _3544 = 1.0 - _776;
                                float _3551 = sqrt(1.0 - ((1.0 - (_3544 * _3544)) * (1.0 - (_3543 * _3543))));
                                float _3552 = _3551 * _3551;
                                float _3553 = _3552 * _3552;
                                float _3554 = _3500 - _3002;
                                float _3555 = _3501 - _3003;
                                float _3556 = _3502 - _3004;
                                float _3560 = inversesqrt(dot(vec3(_3554, _3555, _3556), vec3(_3554, _3555, _3556)));
                                float _3564 = dot(vec3(_573, _576, _579), vec3((-0.0) - _3002, (-0.0) - _3003, (-0.0) - _3004));
                                float _4643 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                                float _3567 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
                                float _3568 = dot(vec3(_573, _576, _579), vec3(_3560 * _3554, _3560 * _3555, _3560 * _3556));
                                float _4654 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                                float _3571 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
                                float _3575 = ((_3571 * _3571) * (_3553 + (-1.0))) + 1.0;
                                float _3576 = _3513 * _3552;
                                float _3577 = _3576 * _3576;
                                float _3583 = ((1.0 - _3577) * dot(vec3(_573, _576, _579), vec3(_3500, _3501, _3502))) + _3577;
                                float _4665 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                                float _3584 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
                                float _3585 = 1.0 - _3552;
                                float _3595 = (0.5 / (((_3584 * ((_3567 * _3585) + _3552)) + 9.9999999392252902907785028219223e-09) + (((_3584 * _3585) + _3552) * _3567))) * _3584;
                                float _4676 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                                float _3605 = (_3530 * _3507) * (((_3553 * 3.1415927410125732421875) * (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0)))) / ((_3575 * _3575) * ((_3520 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3605 * _3387.z;
                                frontier_phi_80_pred_1 = _3605 * _3387.y;
                                frontier_phi_80_pred_2 = _3605 * _3387.x;
                                frontier_phi_80_pred_3 = _3531 * _3375.z;
                                frontier_phi_80_pred_4 = _3531 * _3375.y;
                                frontier_phi_80_pred_5 = _3531 * _3375.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3611 = frontier_phi_80_pred;
                            _3610 = frontier_phi_80_pred_1;
                            _3609 = frontier_phi_80_pred_2;
                            _3614 = frontier_phi_80_pred_3;
                            _3613 = frontier_phi_80_pred_4;
                            _3612 = frontier_phi_80_pred_5;
                            _3317 = _3612 + _3330;
                            _3318 = _3613 + _3331;
                            _3319 = _3614 + _3332;
                            _3314 = _3609 + _3327;
                            _3315 = _3610 + _3328;
                            _3316 = _3611 + _3329;
                            if (_3334 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3316;
                                _3330 = _3317;
                                _3331 = _3318;
                                _3332 = _3319;
                                _3333 = _3334;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3316;
                        frontier_phi_74_pred_1 = _3315;
                        frontier_phi_74_pred_2 = _3314;
                        frontier_phi_74_pred_3 = _3319;
                        frontier_phi_74_pred_4 = _3318;
                        frontier_phi_74_pred_5 = _3317;
                    }
                    _2981 = frontier_phi_74_pred;
                    _2979 = frontier_phi_74_pred_1;
                    _2977 = frontier_phi_74_pred_2;
                    _2987 = frontier_phi_74_pred_3;
                    _2985 = frontier_phi_74_pred_4;
                    _2983 = frontier_phi_74_pred_5;
                    uint _3122 = _3121 + 1u;
                    if (_3122 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3115 = _2977;
                        _3116 = _2979;
                        _3117 = _2981;
                        _3118 = _2983;
                        _3119 = _2985;
                        _3120 = _2987;
                        _3121 = _3122;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2985;
                frontier_phi_62_63_ladder_1 = _2983;
                frontier_phi_62_63_ladder_2 = _2981;
                frontier_phi_62_63_ladder_3 = _2987;
                frontier_phi_62_63_ladder_4 = _2979;
                frontier_phi_62_63_ladder_5 = _2977;
            }
            else
            {
                frontier_phi_62_63_ladder = _2872;
                frontier_phi_62_63_ladder_1 = _2870;
                frontier_phi_62_63_ladder_2 = _2868;
                frontier_phi_62_63_ladder_3 = _2874;
                frontier_phi_62_63_ladder_4 = _2866;
                frontier_phi_62_63_ladder_5 = _2864;
            }
            _2976 = frontier_phi_62_63_ladder_5;
            _2978 = frontier_phi_62_63_ladder_4;
            _2980 = frontier_phi_62_63_ladder_2;
            _2982 = frontier_phi_62_63_ladder_1;
            _2984 = frontier_phi_62_63_ladder;
            _2986 = frontier_phi_62_63_ladder_3;
        }
        float _2991 = isnan(1.0) ? _760 : (isnan(_760) ? 1.0 : min(_760, 1.0));
        _2792 = (_2991 * _2982) + _2305;
        _2794 = (_2991 * _2984) + _2307;
        _2796 = (_2991 * _2986) + _2309;
        _2798 = ((_2976 * _746) * _2991) + _2643;
        _2800 = ((_2978 * _747) * _2991) + _2645;
        _2802 = ((_2980 * _748) * _2991) + _2647;
    }
    else
    {
        _2792 = _2305;
        _2794 = _2307;
        _2796 = _2309;
        _2798 = _2643;
        _2800 = _2645;
        _2802 = _2647;
    }
    float _4692 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _4703 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _4714 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _4725 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _2820 = ((isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (_2792 + ((isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0))) * _760))) + ((_2798 + ((isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0))) * _1567)) * cbPerFrame._m0[3u].x);
    float _2821 = ((isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * (_2794 + ((isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0))) * _760))) + ((_2800 + ((isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0))) * _1567)) * cbPerFrame._m0[3u].x);
    float _2822 = ((isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * (_2796 + ((isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0))) * _760))) + ((_2802 + ((isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0))) * _1567)) * cbPerFrame._m0[3u].x);
    float _2830 = cbInstanceData._m0[_652 + 6u].w * (isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0)));
    float _2835 = _549 / cbSceneParam._m0[86u].x;
    float _2836 = _550 / cbSceneParam._m0[86u].y;
    vec4 _2850 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2835, _2836, (log2((isnan(cbSceneParam._m0[77u].w) ? _483 : (isnan(_483) ? cbSceneParam._m0[77u].w : min(_483, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2852 = _2850.x;
    float _2853 = _2850.y;
    float _2854 = _2850.z;
    float _2855 = _2850.w;
    float _2926;
    float _2928;
    float _2930;
    float _2932;
    if (_483 > cbSceneParam._m0[78u].w)
    {
        float _2889 = isnan(_483) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _483 : min(cbSceneParam._m0[80u].w, _483));
        float _2890 = _2889 / _483;
        float _2901 = _2890 * _534;
        float _2902 = _535 * _2890;
        float _2903 = (-0.0) - _2902;
        float _2904 = _2890 * _536;
        float _2906 = (cbSceneParam._m0[77u].w * _2903) / _2889;
        float _2907 = _2906 + cbSceneParam._m0[79u].w;
        float _2908 = cbSceneParam._m0[79u].w - _2902;
        float _2914 = sqrt(((_2901 * _2901) + (_2902 * _2902)) + (_2904 * _2904));
        float _2917 = (1.0 - (cbSceneParam._m0[77u].w / _2889)) * _2914;
        float _2922 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2924 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3077;
        if (abs((_2903 - _2906) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3077 = ((((_2907 > 0.0) ? exp2(_2922 * _2907) : (2.0 - exp2(_2924 * _2907))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2917;
        }
        else
        {
            float _3037 = 1.0 / cbSceneParam._m0[80u].x;
            float _3038 = isnan(_2908) ? _2907 : (isnan(_2907) ? _2908 : max(_2907, _2908));
            float _3039 = isnan(_2908) ? _2907 : (isnan(_2907) ? _2908 : min(_2907, _2908));
            float _3048 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : min(_3038, 0.0));
            float _3049 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : min(_3039, 0.0));
            _3077 = ((abs(_2914 / _2903) * cbSceneParam._m0[80u].y) * ((((_3048 - _3049) * 2.0) - ((exp2(_2922 * (isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0)))) - exp2(_2922 * (isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0))))) * _3037)) - ((exp2(_2924 * _3048) - exp2(_2924 * _3049)) * _3037))) + (_2917 * cbSceneParam._m0[80u].z);
        }
        vec4 _3079 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2835, _2836, 1.0), 0.0);
        float _3088 = exp2((_3077 * (-1.44269502162933349609375)) * (1.0 - _3079.w));
        float _3089 = log2(_3088);
        float _3105 = log2(_2855);
        _2926 = (exp2(_3105 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3089 * cbSceneParam._m0[78u].x)) * _3079.x) / cbSceneParam._m0[78u].x)) + _2852;
        _2928 = (exp2(_3105 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3089 * cbSceneParam._m0[78u].y)) * _3079.y) / cbSceneParam._m0[78u].y)) + _2853;
        _2930 = (exp2(_3105 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3089 * cbSceneParam._m0[78u].z)) * _3079.z) / cbSceneParam._m0[78u].z)) + _2854;
        _2932 = _3088 * _2855;
    }
    else
    {
        _2926 = _2852;
        _2928 = _2853;
        _2930 = _2854;
        _2932 = _2855;
    }
    float _2944 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2945 = _2944 == 3.0;
    float _2946 = log2(_2932);
    float _2953 = exp2(_2946 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0)));
    float _2954 = exp2(_2946 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2821 : (isnan(_2821) ? 0.0 : max(_2821, 0.0)));
    float _2955 = exp2(_2946 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0)));
    float _2964 = (_2944 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2964 * (_2945 ? _2953 : (_2953 + (cbSceneParam._m0[72u].w * _2926)));
    SV_Target.y = _2964 * (_2945 ? _2954 : (_2954 + (cbSceneParam._m0[72u].w * _2928)));
    SV_Target.z = _2964 * (_2945 ? _2955 : (_2955 + (cbSceneParam._m0[72u].w * _2930)));
    SV_Target.w = _2830;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2830;
}


