#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1159;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _196 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _197 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _198 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _204 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _211 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _212 = _211 * NORMAL.x;
    float _213 = _211 * NORMAL.y;
    float _214 = _211 * NORMAL.z;
    float _218 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _226;
    float _227;
    float _228;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _226 = (-0.0) - _212;
        _227 = (-0.0) - _213;
        _228 = (-0.0) - _214;
    }
    else
    {
        _226 = _212;
        _227 = _213;
        _228 = _214;
    }
    float _273 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _283 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _273);
    float _284 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _273);
    float _285 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _273);
    vec4 _298 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _315 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _337 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _346 = ((_315.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _337.x;
    float _349 = ((_315.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _337.y;
    float _352 = ((_315.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _337.z;
    float _353 = _337.w * _315.w;
    vec4 _366 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _373 = cbMtdParam._m0[14u].z + _366.x;
    vec4 _385 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _397 = (_298.z * 2.0) * (cbMtdParam._m0[13u].x + _385.z);
    float _401 = (_298.x * 2.0) + (-1.0);
    float _403 = (_298.y * 2.0) + (-1.0);
    float _404 = dot(vec2(_401, _403), vec2(_401, _403));
    float _3806 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _410 = sqrt(1.0 - (isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0))));
    float _417 = (((_385.x * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _401;
    float _418 = (((_385.y * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _403;
    float _421 = fma(_410, _226, fma(_418, _218 * TANGENT.x, (_204 * _196) * _417));
    float _424 = fma(_410, _227, fma(_418, _218 * TANGENT.y, (_204 * _197) * _417));
    float _427 = fma(_410, _228, fma(_418, _218 * TANGENT.z, (_204 * _198) * _417));
    float _431 = inversesqrt(dot(vec3(_421, _424, _427), vec3(_421, _424, _427)));
    float _432 = _431 * _421;
    float _433 = _431 * _424;
    float _434 = _431 * _427;
    float _3817 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _435 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    float _3828 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _436 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
    float _3839 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _437 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    float _3850 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _438 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _3861 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _439 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _3872 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _440 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
    float _448 = cbMatDynParam._m0[9u].x * _437;
    float _449 = cbMatDynParam._m0[9u].y * _438;
    float _450 = cbMatDynParam._m0[9u].z * _439;
    float _458 = inversesqrt(dot(vec3(_283, _284, _285), vec3(_283, _284, _285)));
    float _459 = _458 * _283;
    float _460 = _458 * _284;
    float _461 = _458 * _285;
    float _462 = dot(vec3(_432, _433, _434), vec3(_459, _460, _461));
    float _468 = abs(exp2(log2(_462) * cbMatDynParam._m0[12u].x));
    float _469 = isnan(0.100000001490116119384765625) ? _468 : (isnan(_468) ? 0.100000001490116119384765625 : max(_468, 0.100000001490116119384765625));
    float _475 = ((isnan(0.699999988079071044921875) ? _469 : (isnan(_469) ? 0.699999988079071044921875 : min(_469, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _498 = 1.0 - cbMatDynParam._m0[8u].w;
    float _3893 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _501 = 1.0 - cbMatDynParam._m0[7u].w;
    float _3904 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _502 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _506 = dot(vec3(_432, _433, _434), vec3(0.0, -1.0, 0.0));
    float _3915 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _509 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _516 = (_509 * _437) * cbMatDynParam._m0[11u].x;
    float _518 = (_509 * _438) * cbMatDynParam._m0[11u].y;
    float _520 = (_509 * _439) * cbMatDynParam._m0[11u].z;
    float _527 = dot(vec3(_459, _460, _461), vec3(_432, _433, _434));
    float _530 = _527 * 2.0;
    float _540 = dot(vec3((-0.0) - (_459 - (_530 * _432)), (-0.0) - (_460 - (_530 * _433)), (-0.0) - (_461 - (_530 * _434))), vec3(0.0, -1.0, 0.0));
    float _3926 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _547 = exp2(log2(isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * 4.0);
    float _573 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _579 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _580 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _582 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _584 = _582.w;
    float _603 = fma(_434, cbSceneParam._m0[5u].z, fma(_433, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _432));
    float _606 = fma(_434, cbSceneParam._m0[6u].z, fma(_433, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _432));
    float _609 = fma(_434, cbSceneParam._m0[7u].z, fma(_433, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _432));
    vec4 _611 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _613 = _611.x;
    float _625 = (((_611.y - _436) + (_611.w * _436)) * cbMtdParam._m0[3u].x) + _436;
    float _642 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_613 * _613)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _651 = (((cbMatDynParam._m0[15u].x - _440) * cbMatDynParam._m0[15u].w) * _642) + _440;
    float _659 = ((_642 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _625)) + _625;
    uint _683 = uint(roundEven(NORMAL.w)) * 13u;
    uint _684 = _683 + 9u;
    uint _685 = _684 + uint(cbMatDynParam._m0[0u].w);
    float _691 = (cbMtdParam._m0[0u].x * _448) * cbInstanceData._m0[_685].x;
    float _692 = (cbMtdParam._m0[0u].y * _449) * cbInstanceData._m0[_685].y;
    float _693 = (cbMtdParam._m0[0u].z * _450) * cbInstanceData._m0[_685].z;
    float _3937 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _694 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
    float _3948 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _695 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
    float _3959 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _696 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
    vec4 _697 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _702 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _713 = (((_702.x - _651) + (_702.w * _651)) * cbMtdParam._m0[3u].x) + _651;
    float _726 = (cbMtdParam._m0[3u].x * (((_694 * _584) - _694) + _697.x)) + _694;
    float _727 = (cbMtdParam._m0[3u].x * (((_695 * _584) - _695) + _697.y)) + _695;
    float _728 = (cbMtdParam._m0[3u].x * (((_696 * _584) - _696) + _697.z)) + _696;
    vec4 _729 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _742 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_651 * (_448 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_651 * (_449 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_651 * (_450 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _729.z;
    float _746 = _742 * cbMatDynParam._m0[13u].w;
    float _756 = (_746 * (cbMatDynParam._m0[13u].x - _726)) + _726;
    float _757 = (_746 * (cbMatDynParam._m0[13u].y - _727)) + _727;
    float _758 = (_746 * (cbMatDynParam._m0[13u].z - _728)) + _728;
    float _766 = ((_742 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _713)) + _713;
    float _767 = 1.0 - _766;
    float _768 = _767 * _756;
    float _769 = _767 * _757;
    float _770 = _767 * _758;
    float _774 = (_756 + (-0.039999999105930328369140625)) * _766;
    float _775 = (_757 + (-0.039999999105930328369140625)) * _766;
    float _776 = (_758 + (-0.039999999105930328369140625)) * _766;
    float _777 = _774 + 0.039999999105930328369140625;
    float _778 = _775 + 0.039999999105930328369140625;
    float _779 = _776 + 0.039999999105930328369140625;
    vec4 _788 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _579, cbSceneParam._m0[86u].y * _580));
    float _791 = _788.x * TEXCOORD_4;
    float _792 = _462 * 2.0;
    float _796 = (_792 * _432) - _459;
    float _797 = (_792 * _433) - _460;
    float _798 = (_792 * _434) - _461;
    float _799 = abs(_527);
    float _3970 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _801 = sqrt(_659);
    float _813 = exp2((_801 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_801 * 3.0));
    float _819 = (1.0 - _813) * ((_801 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _820 = _813 * _801;
    float _848 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _852 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _856 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1158;
    float _1160;
    float _1161;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _883 = fma(_856, cbModelParam._m0[26u].z, fma(_852, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _848));
        float _887 = fma(_856, cbModelParam._m0[27u].z, fma(_852, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _848));
        float _891 = fma(_856, cbModelParam._m0[28u].z, fma(_852, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _848));
        float _916 = _848 + _432;
        float _917 = _852 + _433;
        float _918 = _856 + _434;
        float _928 = fma(_918, cbModelParam._m0[26u].z, fma(_917, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _916)) - _883;
        float _929 = fma(_918, cbModelParam._m0[27u].z, fma(_917, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _916)) - _887;
        float _930 = fma(_918, cbModelParam._m0[28u].z, fma(_917, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _916)) - _891;
        float _934 = inversesqrt(dot(vec3(_928, _929, _930), vec3(_928, _929, _930)));
        float _947 = ((_934 * _928) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_883 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _948 = ((_934 * _929) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_887 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _949 = ((_934 * _930) / cbModelParam._m0[34u].z) + ((((((_891 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _952 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_947, _948, _949), 0.0);
        vec4 _959 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_947, _948, _949), 0.0);
        vec4 _966 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_947, _948, _949), 0.0);
        vec4 _973 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_947, _948, _949), 0.0);
        float _986 = exp2((_952.w + (-0.5)) * 20.0) * 2.0;
        float _987 = _986 * (_952.x + (-0.5));
        float _988 = _986 * (_952.y + (-0.5));
        float _989 = _986 * (_952.z + (-0.5));
        float _996 = exp2((_959.w + (-0.5)) * 20.0) * 2.0;
        float _997 = _996 * (_959.x + (-0.5));
        float _998 = _996 * (_959.y + (-0.5));
        float _999 = _996 * (_959.z + (-0.5));
        float _1006 = exp2((_966.w + (-0.5)) * 20.0) * 2.0;
        float _1007 = _1006 * (_966.x + (-0.5));
        float _1008 = _1006 * (_966.y + (-0.5));
        float _1009 = _1006 * (_966.z + (-0.5));
        float _1016 = exp2((_973.w + (-0.5)) * 20.0) * 2.0;
        float _1017 = _1016 * (_973.x + (-0.5));
        float _1018 = _1016 * (_973.y + (-0.5));
        float _1019 = _1016 * (_973.z + (-0.5));
        float _1020 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
        float _1021 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1022 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1023 = _987 * 0.5;
        float _1024 = _997 * 0.5;
        float _1025 = _1007 * 0.5;
        float _1026 = dot(vec3(_1023, _1024, _1025), vec3(_1023, _1024, _1025));
        float _1031 = (_1026 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1026);
        float _1040 = (dot(vec3(_432, _433, _434), vec3(_1031 * _1023, _1031 * _1024, _1031 * _1025)) + 1.0) * 0.5;
        float _3996 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
        float _1050 = sqrt(((_1024 * _1024) + (_1023 * _1023)) + (_1025 * _1025)) / (_1020 + 9.9999997473787516355514526367188e-06);
        float _4007 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
        float _1051 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
        float _1052 = _1051 * 2.0;
        float _1056 = (1.0 - _1051) / (_1051 + 1.0);
        float _4018 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1057 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
        float _1066 = ((((1.0 - _1057) * (_1052 + 2.0)) * exp2(log2(isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) * (_1052 + 1.0))) + _1057) * _1020;
        float _1067 = _988 * 0.5;
        float _1068 = _998 * 0.5;
        float _1069 = _1008 * 0.5;
        float _1070 = dot(vec3(_1067, _1068, _1069), vec3(_1067, _1068, _1069));
        float _1075 = (_1070 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1070);
        float _1083 = (dot(vec3(_432, _433, _434), vec3(_1075 * _1067, _1075 * _1068, _1075 * _1069)) + 1.0) * 0.5;
        float _4029 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1092 = sqrt(((_1068 * _1068) + (_1067 * _1067)) + (_1069 * _1069)) / (_1021 + 9.9999997473787516355514526367188e-06);
        float _4040 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1093 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
        float _1094 = _1093 * 2.0;
        float _1098 = (1.0 - _1093) / (_1093 + 1.0);
        float _4051 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1099 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1108 = ((((1.0 - _1099) * (_1094 + 2.0)) * exp2(log2(isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0))) * (_1094 + 1.0))) + _1099) * _1021;
        float _1109 = _989 * 0.5;
        float _1110 = _999 * 0.5;
        float _1111 = _1009 * 0.5;
        float _1112 = dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111));
        float _1117 = (_1112 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1112);
        float _1125 = (dot(vec3(_432, _433, _434), vec3(_1117 * _1109, _1117 * _1110, _1117 * _1111)) + 1.0) * 0.5;
        float _4062 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1134 = sqrt(((_1110 * _1110) + (_1109 * _1109)) + (_1111 * _1111)) / (_1022 + 9.9999997473787516355514526367188e-06);
        float _4073 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1135 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1136 = _1135 * 2.0;
        float _1140 = (1.0 - _1135) / (_1135 + 1.0);
        float _4084 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1150 = ((((1.0 - _1141) * (_1136 + 2.0)) * exp2(log2(isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * (_1136 + 1.0))) + _1141) * _1022;
        _1158 = _989;
        _1160 = _988;
        _1161 = _987;
        _1162 = _999;
        _1163 = _998;
        _1164 = _997;
        _1165 = _1009;
        _1166 = _1008;
        _1167 = _1007;
        _1168 = _1022;
        _1169 = _1021;
        _1170 = _1020;
        _1171 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0)));
        _1172 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0)));
        _1173 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0)));
    }
    else
    {
        _1158 = _1159;
        _1160 = _1159;
        _1161 = _1159;
        _1162 = _1159;
        _1163 = _1159;
        _1164 = _1159;
        _1165 = _1159;
        _1166 = _1159;
        _1167 = _1159;
        _1168 = _1159;
        _1169 = _1159;
        _1170 = _1159;
        _1171 = 0.0;
        _1172 = 0.0;
        _1173 = 0.0;
    }
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1199 = fma(_856, cbModelParam._m0[30u].z, fma(_852, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _848));
        float _1203 = fma(_856, cbModelParam._m0[31u].z, fma(_852, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _848));
        float _1207 = fma(_856, cbModelParam._m0[32u].z, fma(_852, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _848));
        float _1230 = _848 + _432;
        float _1231 = _852 + _433;
        float _1232 = _856 + _434;
        float _1242 = fma(_1232, cbModelParam._m0[30u].z, fma(_1231, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1230)) - _1199;
        float _1243 = fma(_1232, cbModelParam._m0[31u].z, fma(_1231, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1230)) - _1203;
        float _1244 = fma(_1232, cbModelParam._m0[32u].z, fma(_1231, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1230)) - _1207;
        float _1248 = inversesqrt(dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244)));
        float _1261 = ((_1248 * _1242) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1199 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1262 = ((_1248 * _1243) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1203 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1263 = ((_1248 * _1244) / cbModelParam._m0[35u].z) + ((((((_1207 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1286 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        float _1298 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1299 = _1298 * (_1265.x + (-0.5));
        float _1300 = _1298 * (_1265.y + (-0.5));
        float _1301 = _1298 * (_1265.z + (-0.5));
        float _1308 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1309 = _1308 * (_1272.x + (-0.5));
        float _1310 = _1308 * (_1272.y + (-0.5));
        float _1311 = _1308 * (_1272.z + (-0.5));
        float _1318 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1319 = _1318 * (_1279.x + (-0.5));
        float _1320 = _1318 * (_1279.y + (-0.5));
        float _1321 = _1318 * (_1279.z + (-0.5));
        float _1328 = exp2((_1286.w + (-0.5)) * 20.0) * 2.0;
        float _1329 = _1328 * (_1286.x + (-0.5));
        float _1330 = _1328 * (_1286.y + (-0.5));
        float _1331 = _1328 * (_1286.z + (-0.5));
        float _1332 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1333 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1334 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1335 = _1299 * 0.5;
        float _1336 = _1309 * 0.5;
        float _1337 = _1319 * 0.5;
        float _1338 = dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337));
        float _1343 = (_1338 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1338);
        float _1351 = (dot(vec3(_432, _433, _434), vec3(_1343 * _1335, _1343 * _1336, _1343 * _1337)) + 1.0) * 0.5;
        float _4125 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1360 = sqrt(((_1336 * _1336) + (_1335 * _1335)) + (_1337 * _1337)) / (_1332 + 9.9999997473787516355514526367188e-06);
        float _4136 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1362 = _1361 * 2.0;
        float _1366 = (1.0 - _1361) / (_1361 + 1.0);
        float _4147 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1376 = ((((1.0 - _1367) * (_1362 + 2.0)) * exp2(log2(isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * (_1362 + 1.0))) + _1367) * _1332;
        float _1377 = _1300 * 0.5;
        float _1378 = _1310 * 0.5;
        float _1379 = _1320 * 0.5;
        float _1380 = dot(vec3(_1377, _1378, _1379), vec3(_1377, _1378, _1379));
        float _1385 = (_1380 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1380);
        float _1393 = (dot(vec3(_432, _433, _434), vec3(_1385 * _1377, _1385 * _1378, _1385 * _1379)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1402 = sqrt(((_1378 * _1378) + (_1377 * _1377)) + (_1379 * _1379)) / (_1333 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1404 = _1403 * 2.0;
        float _1408 = (1.0 - _1403) / (_1403 + 1.0);
        float _4180 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1418 = ((((1.0 - _1409) * (_1404 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1404 + 1.0))) + _1409) * _1333;
        float _1419 = _1301 * 0.5;
        float _1420 = _1311 * 0.5;
        float _1421 = _1321 * 0.5;
        float _1422 = dot(vec3(_1419, _1420, _1421), vec3(_1419, _1420, _1421));
        float _1427 = (_1422 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1422);
        float _1435 = (dot(vec3(_432, _433, _434), vec3(_1427 * _1419, _1427 * _1420, _1427 * _1421)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1444 = sqrt(((_1420 * _1420) + (_1419 * _1419)) + (_1421 * _1421)) / (_1334 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1445 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1446 = _1445 * 2.0;
        float _1450 = (1.0 - _1445) / (_1445 + 1.0);
        float _4213 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1460 = ((((1.0 - _1451) * (_1446 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1446 + 1.0))) + _1451) * _1334;
        _1468 = _1301;
        _1469 = _1300;
        _1470 = _1299;
        _1471 = _1311;
        _1472 = _1310;
        _1473 = _1309;
        _1474 = _1321;
        _1475 = _1320;
        _1476 = _1319;
        _1477 = _1334;
        _1478 = _1333;
        _1479 = _1332;
        _1480 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
        _1481 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0)));
        _1482 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0)));
    }
    else
    {
        _1468 = _1159;
        _1469 = _1159;
        _1470 = _1159;
        _1471 = _1159;
        _1472 = _1159;
        _1473 = _1159;
        _1474 = _1159;
        _1475 = _1159;
        _1476 = _1159;
        _1477 = _1159;
        _1478 = _1159;
        _1479 = _1159;
        _1480 = 0.0;
        _1481 = 0.0;
        _1482 = 0.0;
    }
    float _1492 = (cbModelParam._m0[1u].x * (_1480 - _1171)) + _1171;
    float _1493 = (cbModelParam._m0[1u].x * (_1481 - _1172)) + _1172;
    float _1494 = (cbModelParam._m0[1u].x * (_1482 - _1173)) + _1173;
    float _1515 = fma(_1494, cbSceneParam._m0[89u].z, fma(_1493, cbSceneParam._m0[89u].y, _1492 * cbSceneParam._m0[89u].x));
    float _1518 = fma(_1494, cbSceneParam._m0[90u].z, fma(_1493, cbSceneParam._m0[90u].y, _1492 * cbSceneParam._m0[90u].x));
    float _1521 = fma(_1494, cbSceneParam._m0[91u].z, fma(_1493, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1492));
    float _1536 = _796 * 0.5;
    float _1537 = _797 * 0.5;
    float _1538 = _798 * 0.5;
    float _1539 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1470, _1473, _1476, _1479));
    float _1542 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1469, _1472, _1475, _1478));
    float _1545 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1468, _1471, _1474, _1477));
    float _1576;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1552 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1158, _1162, _1165, _1168));
        float _1556 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1160, _1163, _1166, _1169));
        float _1560 = dot(vec4(_1536, _1537, _1538, 1.0), vec4(_1161, _1164, _1167, _1170));
        float _1567 = dot(vec4(cbModelParam._m0[39u]), vec4(_1536, _1537, _1538, 1.0));
        _1576 = dot(vec3(isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0)), isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)), isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1567) ? 0.0 : (isnan(0.0) ? _1567 : max(0.0, _1567))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1576 = 1.0;
    }
    float _1587;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1578 = dot(vec4(cbModelParam._m0[40u]), vec4(_1536, _1537, _1538, 1.0));
        _1587 = dot(vec3(isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0)), isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0)), isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1578) ? 0.0 : (isnan(0.0) ? _1578 : max(0.0, _1578))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1587 = 1.0;
    }
    float _1591 = (_1587 * cbModelParam._m0[1u].x) + (_1576 * (1.0 - cbModelParam._m0[1u].x));
    float _1601 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _659);
    float _1602 = isnan(_1601) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1601 : min(cbModelParam._m0[25u].z, _1601));
    float _1682;
    float _1684;
    float _1686;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1649 = fma(_856, cbModelParam._m0[13u].z, fma(_852, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _848)) + cbModelParam._m0[13u].w;
        float _1653 = fma(_856, cbModelParam._m0[14u].z, fma(_852, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _848)) + cbModelParam._m0[14u].w;
        float _1657 = fma(_856, cbModelParam._m0[15u].z, fma(_852, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _848)) + cbModelParam._m0[15u].w;
        float _1660 = fma(_798, cbModelParam._m0[13u].z, fma(_797, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _796));
        float _1663 = fma(_798, cbModelParam._m0[14u].z, fma(_797, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _796));
        float _1666 = fma(_798, cbModelParam._m0[15u].z, fma(_797, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _796));
        float _1694;
        if (_1660 > 0.0)
        {
            _1694 = abs((1.0 - _1649) / _1660);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1660 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1649 + 1.0) / _1660);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1694 = frontier_phi_16_14_ladder;
        }
        float _1869;
        if (_1663 > 0.0)
        {
            _1869 = abs((1.0 - _1653) / _1663);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1663 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1653 + 1.0) / _1663);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1869 = frontier_phi_25_21_ladder;
        }
        float _2165;
        if (_1666 > 0.0)
        {
            _2165 = abs((1.0 - _1657) / _1666);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1666 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1657 + 1.0) / _1666);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2165 = frontier_phi_37_32_ladder;
        }
        float _2167 = isnan(_1869) ? _1694 : (isnan(_1694) ? _1869 : min(_1694, _1869));
        float _2168 = isnan(_2165) ? _2167 : (isnan(_2167) ? _2165 : min(_2167, _2165));
        float _2172 = (_2168 * _1660) + _1649;
        float _2173 = (_2168 * _1663) + _1653;
        float _2174 = (_2168 * _1666) + _1657;
        float _2175 = _2168 * 9.9999997473787516355514526367188e-05;
        float _2177 = (-1.0) - _2175;
        float _2179 = _2175 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2174 > _2179) || ((_2174 < _2177) || ((_2173 > _2179) || ((_2173 < _2177) || ((_2172 < _2177) || (_2172 > _2179))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2319 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2174, cbModelParam._m0[9u].z, fma(_2173, cbModelParam._m0[9u].y, _2172 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2174, cbModelParam._m0[10u].z, fma(_2173, cbModelParam._m0[10u].y, _2172 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2174, cbModelParam._m0[11u].z, fma(_2173, cbModelParam._m0[11u].y, _2172 * cbModelParam._m0[11u].x))), _1602);
            frontier_phi_15_37_ladder = _2319.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2319.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2319.z * cbModelParam._m0[1u].y;
        }
        _1682 = frontier_phi_15_37_ladder_1;
        _1684 = frontier_phi_15_37_ladder;
        _1686 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1670 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_796, _797, _798), _1602);
        _1682 = _1670.x * cbModelParam._m0[1u].y;
        _1684 = _1670.y * cbModelParam._m0[1u].y;
        _1686 = _1670.z * cbModelParam._m0[1u].y;
    }
    float _1690 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _659);
    float _1691 = isnan(_1690) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1690 : min(cbModelParam._m0[25u].w, _1690));
    float _1784;
    float _1786;
    float _1788;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1748 = fma(_856, cbModelParam._m0[21u].z, fma(_852, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _848)) + cbModelParam._m0[21u].w;
        float _1752 = fma(_856, cbModelParam._m0[22u].z, fma(_852, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _848)) + cbModelParam._m0[22u].w;
        float _1756 = fma(_856, cbModelParam._m0[23u].z, fma(_852, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _848)) + cbModelParam._m0[23u].w;
        float _1759 = fma(_798, cbModelParam._m0[21u].z, fma(_797, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _796));
        float _1762 = fma(_798, cbModelParam._m0[22u].z, fma(_797, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _796));
        float _1765 = fma(_798, cbModelParam._m0[23u].z, fma(_797, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _796));
        float _1874;
        if (_1759 > 0.0)
        {
            _1874 = abs((1.0 - _1748) / _1759);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1759 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1748 + 1.0) / _1759);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1874 = frontier_phi_27_23_ladder;
        }
        float _2192;
        if (_1762 > 0.0)
        {
            _2192 = abs((1.0 - _1752) / _1762);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1762 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1752 + 1.0) / _1762);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2192 = frontier_phi_39_34_ladder;
        }
        float _2530;
        if (_1765 > 0.0)
        {
            _2530 = abs((1.0 - _1756) / _1765);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1765 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1756 + 1.0) / _1765);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2530 = frontier_phi_49_46_ladder;
        }
        float _2532 = isnan(_2192) ? _1874 : (isnan(_1874) ? _2192 : min(_1874, _2192));
        float _2533 = isnan(_2530) ? _2532 : (isnan(_2532) ? _2530 : min(_2532, _2530));
        float _2537 = (_2533 * _1759) + _1748;
        float _2538 = (_2533 * _1762) + _1752;
        float _2539 = (_2533 * _1765) + _1756;
        float _2540 = _2533 * 9.9999997473787516355514526367188e-05;
        float _2541 = (-1.0) - _2540;
        float _2543 = _2540 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2539 > _2543) || ((_2539 < _2541) || ((_2538 > _2543) || ((_2538 < _2541) || ((_2537 < _2541) || (_2537 > _2543))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2661 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2539, cbModelParam._m0[17u].z, fma(_2538, cbModelParam._m0[17u].y, _2537 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2539, cbModelParam._m0[18u].z, fma(_2538, cbModelParam._m0[18u].y, _2537 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2539, cbModelParam._m0[19u].z, fma(_2538, cbModelParam._m0[19u].y, _2537 * cbModelParam._m0[19u].x))), _1691);
            frontier_phi_24_49_ladder = _2661.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2661.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2661.x * cbModelParam._m0[1u].z;
        }
        _1784 = frontier_phi_24_49_ladder_2;
        _1786 = frontier_phi_24_49_ladder_1;
        _1788 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1768 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_796, _797, _798), _1691);
        _1784 = _1768.x * cbModelParam._m0[1u].z;
        _1786 = _1768.y * cbModelParam._m0[1u].z;
        _1788 = _1768.z * cbModelParam._m0[1u].z;
    }
    float _1801 = (((_819 * _777) + _820) * _791) * ((cbModelParam._m0[1u].w * (_1784 - _1682)) + _1682);
    float _1803 = (((_819 * _778) + _820) * _791) * ((cbModelParam._m0[1u].w * (_1786 - _1684)) + _1684);
    float _1805 = (((_819 * _779) + _820) * _791) * ((cbModelParam._m0[1u].w * (_1788 - _1686)) + _1686);
    float _1808 = fma(_1805, cbSceneParam._m0[89u].z, fma(_1803, cbSceneParam._m0[89u].y, _1801 * cbSceneParam._m0[89u].x));
    float _1811 = fma(_1805, cbSceneParam._m0[90u].z, fma(_1803, cbSceneParam._m0[90u].y, _1801 * cbSceneParam._m0[90u].x));
    float _1814 = fma(_1805, cbSceneParam._m0[91u].z, fma(_1803, cbSceneParam._m0[91u].y, _1801 * cbSceneParam._m0[91u].x));
    float _1848 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1852 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1856 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1860 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1861 = _1848 / _1860;
    float _1862 = _1852 / _1860;
    float _1863 = _1856 / _1860;
    float _2010;
    float _2011;
    float _2012;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1890 = ((uint(_1863 > cbSceneParam._m0[59u].y) + uint(_1863 > cbSceneParam._m0[59u].x)) + uint(_1863 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1891 = _1890 + 43u;
        uint _1899 = _1890 + 44u;
        uint _1907 = _1890 + 45u;
        uint _1915 = _1890 + 46u;
        float _1926 = fma(_1860, cbSceneParam._m0[_1891].w, fma(_1856, cbSceneParam._m0[_1891].z, fma(_1852, cbSceneParam._m0[_1891].y, _1848 * cbSceneParam._m0[_1891].x)));
        float _1930 = fma(_1860, cbSceneParam._m0[_1899].w, fma(_1856, cbSceneParam._m0[_1899].z, fma(_1852, cbSceneParam._m0[_1899].y, _1848 * cbSceneParam._m0[_1899].x)));
        float _1938 = fma(_1860, cbSceneParam._m0[_1915].w, fma(_1856, cbSceneParam._m0[_1915].z, fma(_1852, cbSceneParam._m0[_1915].y, _1848 * cbSceneParam._m0[_1915].x)));
        float _1943 = cbSceneParam._m0[33u].z * _1938;
        float _1945 = cbSceneParam._m0[33u].w * _1938;
        float _1948 = fma(_1860, cbSceneParam._m0[_1907].w, fma(_1856, cbSceneParam._m0[_1907].z, fma(_1852, cbSceneParam._m0[_1907].y, _1848 * cbSceneParam._m0[_1907].x))) / _1938;
        float _1996 = (cbSceneParam._m0[33u].x - sqrt(((_1862 * _1862) + (_1861 * _1861)) + (_1863 * _1863))) * cbSceneParam._m0[33u].y;
        float _4339 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _2003 = (isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1943 + _1926) / _1938, (_1945 + _1930) / _1938), _1948), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1945 + _1926) / _1938, (_1930 - _1943) / _1938), _1948), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1926 - _1943) / _1938, (_1930 - _1945) / _1938), _1948), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1926 - _1945) / _1938, (_1943 + _1930) / _1938), _1948), 0.0)).x), vec4(0.25)));
        _2010 = 1.0 - (_2003 * cbSceneParam._m0[34u].x);
        _2011 = 1.0 - (_2003 * cbSceneParam._m0[34u].y);
        _2012 = 1.0 - (_2003 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2010 = 1.0;
        _2011 = 1.0;
        _2012 = 1.0;
    }
    float _2076;
    float _2078;
    float _2080;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2064 = fma(_1860, cbSceneParam._m0[63u].w, fma(_1856, cbSceneParam._m0[63u].z, fma(_1852, cbSceneParam._m0[63u].y, _1848 * cbSceneParam._m0[63u].x)));
        float _2065 = fma(_1860, cbSceneParam._m0[60u].w, fma(_1856, cbSceneParam._m0[60u].z, fma(_1852, cbSceneParam._m0[60u].y, _1848 * cbSceneParam._m0[60u].x))) / _2064;
        float _2066 = fma(_1860, cbSceneParam._m0[61u].w, fma(_1856, cbSceneParam._m0[61u].z, fma(_1852, cbSceneParam._m0[61u].y, _1848 * cbSceneParam._m0[61u].x))) / _2064;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2065 >= cbSceneParam._m0[64u].x) && (_2066 >= cbSceneParam._m0[64u].y)) && (_2065 <= cbSceneParam._m0[64u].z)) && (_2066 <= cbSceneParam._m0[64u].w))
        {
            float _2205 = fma(_1860, cbSceneParam._m0[62u].w, fma(_1856, cbSceneParam._m0[62u].z, fma(_1852, cbSceneParam._m0[62u].y, _1848 * cbSceneParam._m0[62u].x))) / _2064;
            float _2209 = isnan(cbSceneParam._m0[41u].w) ? _2205 : (isnan(_2205) ? cbSceneParam._m0[41u].w : max(_2205, cbSceneParam._m0[41u].w));
            float _2252 = (cbSceneParam._m0[33u].x - sqrt(((_1862 * _1862) + (_1861 * _1861)) + (_1863 * _1863))) * cbSceneParam._m0[33u].y;
            float _4355 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
            float _2259 = (isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2065, cbSceneParam._m0[33u].w + _2066), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2065, _2066 - cbSceneParam._m0[33u].z), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2065 - cbSceneParam._m0[33u].z, _2066 - cbSceneParam._m0[33u].w), _2209), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2065 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2066), _2209), 0.0)).x), vec4(0.25)));
            float _2263 = 1.0 - (_2259 * cbSceneParam._m0[34u].x);
            float _2264 = 1.0 - (_2259 * cbSceneParam._m0[34u].y);
            float _2265 = 1.0 - (_2259 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2264) ? _2011 : (isnan(_2011) ? _2264 : min(_2011, _2264));
            frontier_phi_36_35_ladder_1 = isnan(_2265) ? _2012 : (isnan(_2012) ? _2265 : min(_2012, _2265));
            frontier_phi_36_35_ladder_2 = isnan(_2263) ? _2010 : (isnan(_2010) ? _2263 : min(_2010, _2263));
        }
        else
        {
            frontier_phi_36_35_ladder = _2011;
            frontier_phi_36_35_ladder_1 = _2012;
            frontier_phi_36_35_ladder_2 = _2010;
        }
        _2076 = frontier_phi_36_35_ladder_2;
        _2078 = frontier_phi_36_35_ladder;
        _2080 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2076 = _2010;
        _2078 = _2011;
        _2080 = _2012;
    }
    uvec4 _2085 = floatBitsToUint(cbInstanceData._m0[_683 + 5u]);
    uint _2087 = _2085.x * 14u;
    uint _2088 = _2087 + 13u;
    float _2095 = _791 + (-1.0);
    float _2100 = (cbLight._m0[_2088].x * _2095) + 1.0;
    float _2101 = (cbLight._m0[_2088].y * _2095) + 1.0;
    float _2102 = (cbLight._m0[_2088].z * _2095) + 1.0;
    float _2103 = (cbLight._m0[_2088].w * _2095) + 1.0;
    uint _2104 = _2087 + 5u;
    float _2110 = isnan(1.0) ? _2101 : (isnan(_2101) ? 1.0 : min(_2101, 1.0));
    uint _2114 = _2087 + 4u;
    float _2124 = isnan(1.0) ? _2100 : (isnan(_2100) ? 1.0 : min(_2100, 1.0));
    uint _2128 = _2087 | 1u;
    float _2139 = dot(vec3(cbLight._m0[_2087].xyz), vec3(_432, _433, _434));
    float _2142 = dot(vec3(cbLight._m0[_2128].xyz), vec3(_432, _433, _434));
    float _4391 = isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0));
    float _4402 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
    float _2147 = (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * 0.3183098733425140380859375;
    float _2149 = (isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0))) * 0.3183098733425140380859375;
    float _2156 = ((cbLight._m0[_2104].x * _2110) * _2149) + (((cbLight._m0[_2114].x * _2076) * _2124) * _2147);
    float _2157 = ((_2110 * cbLight._m0[_2104].y) * _2149) + (((cbLight._m0[_2114].y * _2078) * _2124) * _2147);
    float _2158 = ((_2110 * cbLight._m0[_2104].z) * _2149) + (((cbLight._m0[_2114].z * _2080) * _2124) * _2147);
    uvec4 _2162 = floatBitsToUint(cbLight._m0[_2087 + 12u]);
    bool _2164 = _2162.x == 0u;
    float _2266;
    float _2268;
    float _2270;
    if (_2164)
    {
        _2266 = _2156;
        _2268 = _2157;
        _2270 = _2158;
    }
    else
    {
        uint _2274 = _2087 + 6u;
        float _2290 = (dot(vec3(cbLight._m0[_2087 + 2u].xyz), vec3(_432, _433, _434)) * 0.5) + 0.5;
        float _2291 = _2290 * _2290;
        float _4413 = isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0));
        float _2292 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _2293 = isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0));
        _2266 = (((cbLight._m0[_2274].x * 0.3183098733425140380859375) * _2292) * _2293) + _2156;
        _2268 = (((cbLight._m0[_2274].y * 0.3183098733425140380859375) * _2292) * _2293) + _2157;
        _2270 = (((cbLight._m0[_2274].z * 0.3183098733425140380859375) * _2292) * _2293) + _2158;
    }
    bool _2273 = _2162.y == 0u;
    float _2328;
    float _2330;
    float _2332;
    if (_2273)
    {
        _2328 = _2266;
        _2330 = _2268;
        _2332 = _2270;
    }
    else
    {
        uint _2501 = _2087 + 7u;
        float _2517 = (dot(vec3(cbLight._m0[_2087 + 3u].xyz), vec3(_432, _433, _434)) * 0.5) + 0.5;
        float _2518 = _2517 * _2517;
        float _4429 = isnan(0.0) ? _2518 : (isnan(_2518) ? 0.0 : max(_2518, 0.0));
        float _2519 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _2520 = isnan(1.0) ? _2103 : (isnan(_2103) ? 1.0 : min(_2103, 1.0));
        _2328 = (((cbLight._m0[_2501].x * 0.3183098733425140380859375) * _2519) * _2520) + _2266;
        _2330 = (((cbLight._m0[_2501].y * 0.3183098733425140380859375) * _2519) * _2520) + _2268;
        _2332 = (((cbLight._m0[_2501].z * 0.3183098733425140380859375) * _2519) * _2520) + _2270;
    }
    uint _2335 = _2087 + 8u;
    float _2348 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2087].w)) * _659) * 0.949999988079071044921875);
    float _2349 = _2348 * _2348;
    float _2350 = cbLight._m0[_2087].x + _459;
    float _2351 = cbLight._m0[_2087].y + _460;
    float _2352 = cbLight._m0[_2087].z + _461;
    float _2356 = inversesqrt(dot(vec3(_2350, _2351, _2352), vec3(_2350, _2351, _2352)));
    float _2357 = _2356 * _2350;
    float _2358 = _2356 * _2351;
    float _2359 = _2356 * _2352;
    float _2360 = dot(vec3(_432, _433, _434), vec3(cbLight._m0[_2087].xyz));
    float _4445 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
    float _2363 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
    float _4456 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _2364 = isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0));
    float _2365 = dot(vec3(_432, _433, _434), vec3(_2357, _2358, _2359));
    float _4467 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
    float _2368 = isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0));
    float _2369 = dot(vec3(cbLight._m0[_2087].xyz), vec3(_2357, _2358, _2359));
    float _4478 = isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0));
    float _2373 = _2349 * _2349;
    float _2377 = ((_2368 * _2368) * (_2373 + (-1.0))) + 1.0;
    float _2385 = exp2(log2(1.0 - (isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0)))) * 5.0);
    float _2386 = 0.959999978542327880859375 - _774;
    float _2388 = 0.959999978542327880859375 - _775;
    float _2389 = 0.959999978542327880859375 - _776;
    float _2396 = 1.0 - _2349;
    float _2407 = (0.5 / (((_2364 * ((_2363 * _2396) + _2349)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2396) + _2349) * _2363))) * _2363;
    float _4489 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _2409 = (isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0))) * (_2373 / ((_2377 * _2377) * 3.141590118408203125));
    uint _2423 = _2087 + 9u;
    float _2434 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2128].w)) * _659) * 0.949999988079071044921875);
    float _2435 = _2434 * _2434;
    float _2436 = cbLight._m0[_2128].x + _459;
    float _2437 = cbLight._m0[_2128].y + _460;
    float _2438 = cbLight._m0[_2128].z + _461;
    float _2442 = inversesqrt(dot(vec3(_2436, _2437, _2438), vec3(_2436, _2437, _2438)));
    float _2443 = _2442 * _2436;
    float _2444 = _2442 * _2437;
    float _2445 = _2442 * _2438;
    float _2446 = dot(vec3(_432, _433, _434), vec3(cbLight._m0[_2128].xyz));
    float _4500 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
    float _2449 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
    float _2450 = dot(vec3(_432, _433, _434), vec3(_2443, _2444, _2445));
    float _4511 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2453 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
    float _2454 = dot(vec3(cbLight._m0[_2128].xyz), vec3(_2443, _2444, _2445));
    float _4522 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2458 = _2435 * _2435;
    float _2462 = ((_2453 * _2453) * (_2458 + (-1.0))) + 1.0;
    float _2469 = exp2(log2(1.0 - (isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0)))) * 5.0);
    float _2476 = 1.0 - _2435;
    float _2486 = (0.5 / (((_2364 * ((_2449 * _2476) + _2435)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2476) + _2435) * _2449))) * _2449;
    float _4533 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
    float _2488 = (isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0))) * (_2458 / ((_2462 * _2462) * 3.141590118408203125));
    float _2498 = (((((_2469 * _2386) + _777) * cbLight._m0[_2423].x) * _2488) * _2110) + ((((cbLight._m0[_2335].x * _2076) * ((_2385 * _2386) + _777)) * _2409) * _2124);
    float _2499 = (((((_2469 * _2388) + _778) * cbLight._m0[_2423].y) * _2488) * _2110) + ((((cbLight._m0[_2335].y * _2078) * ((_2385 * _2388) + _778)) * _2409) * _2124);
    float _2500 = (((((_2469 * _2389) + _779) * cbLight._m0[_2423].z) * _2488) * _2110) + ((((cbLight._m0[_2335].z * _2080) * ((_2385 * _2389) + _779)) * _2409) * _2124);
    float _2556;
    float _2558;
    float _2560;
    if (_2164)
    {
        _2556 = _2498;
        _2558 = _2499;
        _2560 = _2500;
    }
    else
    {
        uint _2562 = _2087 + 2u;
        uint _2566 = _2087 + 10u;
        float _2580 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2562].w)) * _659) * 0.949999988079071044921875);
        float _2581 = _2580 * _2580;
        float _2582 = cbLight._m0[_2562].x + _459;
        float _2583 = cbLight._m0[_2562].y + _460;
        float _2584 = cbLight._m0[_2562].z + _461;
        float _2588 = inversesqrt(dot(vec3(_2582, _2583, _2584), vec3(_2582, _2583, _2584)));
        float _2589 = _2588 * _2582;
        float _2590 = _2588 * _2583;
        float _2591 = _2588 * _2584;
        float _2592 = dot(vec3(_432, _433, _434), vec3(cbLight._m0[_2562].xyz));
        float _4544 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2595 = isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0));
        float _2596 = dot(vec3(_432, _433, _434), vec3(_2589, _2590, _2591));
        float _4555 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
        float _2599 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
        float _2600 = dot(vec3(cbLight._m0[_2562].xyz), vec3(_2589, _2590, _2591));
        float _4566 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
        float _2604 = _2581 * _2581;
        float _2608 = ((_2599 * _2599) * (_2604 + (-1.0))) + 1.0;
        float _2615 = exp2(log2(1.0 - (isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0)))) * 5.0);
        float _2622 = 1.0 - _2581;
        float _2632 = (0.5 / (((_2364 * ((_2595 * _2622) + _2581)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2622) + _2581) * _2595))) * _2595;
        float _4577 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
        float _2634 = (isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0))) * (_2604 / ((_2608 * _2608) * 3.141590118408203125));
        float _2635 = isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0));
        _2556 = (((((_2615 * _2386) + _777) * cbLight._m0[_2566].x) * _2634) * _2635) + _2498;
        _2558 = (((((_2615 * _2388) + _778) * cbLight._m0[_2566].y) * _2634) * _2635) + _2499;
        _2560 = (((((_2615 * _2389) + _779) * cbLight._m0[_2566].z) * _2634) * _2635) + _2500;
    }
    float _2666;
    float _2668;
    float _2670;
    if (_2273)
    {
        _2666 = _2556;
        _2668 = _2558;
        _2670 = _2560;
    }
    else
    {
        uint _2677 = _2087 + 3u;
        uint _2681 = _2087 + 11u;
        float _2695 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2677].w)) * _659) * 0.949999988079071044921875);
        float _2696 = _2695 * _2695;
        float _2697 = cbLight._m0[_2677].x + _459;
        float _2698 = cbLight._m0[_2677].y + _460;
        float _2699 = cbLight._m0[_2677].z + _461;
        float _2703 = inversesqrt(dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699)));
        float _2704 = _2703 * _2697;
        float _2705 = _2703 * _2698;
        float _2706 = _2703 * _2699;
        float _2707 = dot(vec3(_432, _433, _434), vec3(cbLight._m0[_2677].xyz));
        float _4593 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2710 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
        float _2711 = dot(vec3(_432, _433, _434), vec3(_2704, _2705, _2706));
        float _4604 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
        float _2714 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
        float _2715 = dot(vec3(cbLight._m0[_2677].xyz), vec3(_2704, _2705, _2706));
        float _4615 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
        float _2719 = _2696 * _2696;
        float _2723 = ((_2714 * _2714) * (_2719 + (-1.0))) + 1.0;
        float _2730 = exp2(log2(1.0 - (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0)))) * 5.0);
        float _2737 = 1.0 - _2696;
        float _2747 = (0.5 / (((_2364 * ((_2710 * _2737) + _2696)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2737) + _2696) * _2710))) * _2710;
        float _4626 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
        float _2749 = (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))) * (_2719 / ((_2723 * _2723) * 3.141590118408203125));
        float _2750 = isnan(1.0) ? _2103 : (isnan(_2103) ? 1.0 : min(_2103, 1.0));
        _2666 = (((((_2730 * _2386) + _777) * cbLight._m0[_2681].x) * _2749) * _2750) + _2556;
        _2668 = (((((_2730 * _2388) + _778) * cbLight._m0[_2681].y) * _2749) * _2750) + _2558;
        _2670 = (((((_2730 * _2389) + _779) * cbLight._m0[_2681].z) * _2749) * _2750) + _2560;
    }
    float _2815;
    float _2817;
    float _2819;
    float _2821;
    float _2823;
    float _2825;
    if (_2085.y == 0u)
    {
        uvec4 _2771 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2772 = _2771.x;
        uint _2783 = uint((float(_2771.y) * floor(float(uint(cbSceneParam._m0[85u].y * _580) / _2772))) + floor(float(uint(cbSceneParam._m0[85u].x * _579) / _2772)));
        float _2793 = (log2(_1863 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2794 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
        uint _2797 = uint(isnan(14.0) ? _2794 : (isnan(_2794) ? 14.0 : min(_2794, 14.0)));
        uvec4 _2802 = texelFetch(g_lightClusterGridBuffer, int(((_2797 << 2u) + (_2783 << 6u)) >> 2u));
        uint _2803 = _2802.x;
        uint _2804 = _2771.z;
        float _2908;
        float _2910;
        float _2912;
        float _2914;
        float _2916;
        float _2918;
        if (((((1u << ((_2804 >> 4u) & 15u)) + 4294967295u) & _2803) == 0u) || ((_2804 & 240u) == 0u))
        {
            _2908 = 0.0;
            _2910 = 0.0;
            _2912 = 0.0;
            _2914 = 0.0;
            _2916 = 0.0;
            _2918 = 0.0;
        }
        else
        {
            float _2909;
            float _2911;
            float _2913;
            float _2915;
            float _2917;
            float _2919;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            float _3064 = 0.0;
            float _3065 = 0.0;
            float _3066 = 0.0;
            uint _3067 = 0u;
            uint _3076;
            bool _3077;
            for (;;)
            {
                _3076 = texelFetch(g_lightClassification, int((((_2797 << 5u) + (_2783 << 9u)) + (_3067 << 2u)) >> 2u)).x;
                _3077 = _3076 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3077)
                {
                    frontier_phi_68_pred = _3066;
                    frontier_phi_68_pred_1 = _3065;
                    frontier_phi_68_pred_2 = _3064;
                    frontier_phi_68_pred_3 = _3062;
                    frontier_phi_68_pred_4 = _3061;
                    frontier_phi_68_pred_5 = _3063;
                }
                else
                {
                    float _3185;
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    uint _3191;
                    _3185 = _3061;
                    _3186 = _3062;
                    _3187 = _3063;
                    _3188 = _3064;
                    _3189 = _3065;
                    _3190 = _3066;
                    _3191 = _3076;
                    float _3117;
                    float _3118;
                    float _3119;
                    float _3120;
                    float _3121;
                    float _3122;
                    for (;;)
                    {
                        uint _3195 = uint(findLSB(_3191)) + (_3067 << 5u);
                        uint _3192 = (_3191 + 4294967295u) & _3191;
                        uint _3197 = _3195 * 48u;
                        vec4 _3211 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3197)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 3u)).x));
                        uint _3217 = (_3195 * 48u) + 4u;
                        vec4 _3230 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3217)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 3u)).x));
                        uint _3236 = (_3195 * 48u) + 8u;
                        vec3 _3247 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3236)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 2u)).x));
                        float _3251 = _3211.x - _1861;
                        float _3252 = _3211.y - _1862;
                        float _3253 = _3211.z - _1863;
                        float _3254 = dot(vec3(_3251, _3252, _3253), vec3(_3251, _3252, _3253));
                        float _3257 = inversesqrt(_3254);
                        float _3258 = _3257 * _3251;
                        float _3259 = _3257 * _3252;
                        float _3260 = _3257 * _3253;
                        float _3261 = dot(vec3(_603, _606, _609), vec3(_3258, _3259, _3260));
                        float _3266 = 1.0 - (_3254 * _3211.w);
                        float _4652 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0));
                        float _3267 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
                        float _3268 = sqrt(_3254) * _3230.w;
                        float _3271 = 1.39999997615814208984375 / (_3268 + 1.39999997615814208984375);
                        float _3272 = _3271 * _3271;
                        float _3275 = ((1.0 - _3272) * _3261) + _3272;
                        float _3278 = _3268 * _3268;
                        float _3281 = ((isnan(0.0) ? _3275 : (isnan(_3275) ? 0.0 : max(_3275, 0.0))) * _3267) / ((_3278 * 0.699999988079071044921875) + 1.0);
                        float _3285 = (-0.0) - _1861;
                        float _3286 = (-0.0) - _1862;
                        float _3287 = (-0.0) - _1863;
                        float _3291 = inversesqrt(dot(vec3(_3285, _3286, _3287), vec3(_3285, _3286, _3287)));
                        float _3292 = _3291 * _3285;
                        float _3293 = _3291 * _3286;
                        float _3294 = _3291 * _3287;
                        float _3301 = exp2(log2(1.0 / ((_3278 * 3.5) + 5.0)) * 0.25);
                        float _3302 = 1.0 - _801;
                        float _3309 = sqrt(1.0 - ((1.0 - (_3302 * _3302)) * (1.0 - (_3301 * _3301))));
                        float _3310 = _3309 * _3309;
                        float _3311 = _3310 * _3310;
                        float _3312 = _3292 + _3258;
                        float _3313 = _3293 + _3259;
                        float _3314 = _3294 + _3260;
                        float _3318 = inversesqrt(dot(vec3(_3312, _3313, _3314), vec3(_3312, _3313, _3314)));
                        float _3322 = dot(vec3(_603, _606, _609), vec3(_3292, _3293, _3294));
                        float _4668 = isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0));
                        float _3325 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
                        float _3326 = dot(vec3(_603, _606, _609), vec3(_3318 * _3312, _3318 * _3313, _3318 * _3314));
                        float _4679 = isnan(0.0) ? _3326 : (isnan(_3326) ? 0.0 : max(_3326, 0.0));
                        float _3329 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
                        float _3333 = ((_3329 * _3329) * (_3311 + (-1.0))) + 1.0;
                        float _3334 = _3271 * _3310;
                        float _3335 = _3334 * _3334;
                        float _3338 = ((1.0 - _3335) * _3261) + _3335;
                        float _4690 = isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0));
                        float _3339 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
                        float _3340 = 1.0 - _3310;
                        float _3350 = (0.5 / (((_3339 * ((_3325 * _3340) + _3310)) + 9.9999999392252902907785028219223e-09) + (((_3339 * _3340) + _3310) * _3325))) * _3339;
                        float _4701 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0));
                        float _3361 = (((_3311 * 3.1415927410125732421875) * (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0)))) / ((_3333 * _3333) * ((_3278 * 2.1991131305694580078125) + 3.141590118408203125))) * _3267;
                        _3120 = (_3281 * _3230.x) + _3188;
                        _3121 = (_3281 * _3230.y) + _3189;
                        _3122 = (_3281 * _3230.z) + _3190;
                        _3117 = (_3361 * _3247.x) + _3185;
                        _3118 = (_3361 * _3247.y) + _3186;
                        _3119 = (_3361 * _3247.z) + _3187;
                        if (_3192 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3185 = _3117;
                            _3186 = _3118;
                            _3187 = _3119;
                            _3188 = _3120;
                            _3189 = _3121;
                            _3190 = _3122;
                            _3191 = _3192;
                        }
                    }
                    frontier_phi_68_pred = _3122;
                    frontier_phi_68_pred_1 = _3121;
                    frontier_phi_68_pred_2 = _3120;
                    frontier_phi_68_pred_3 = _3118;
                    frontier_phi_68_pred_4 = _3117;
                    frontier_phi_68_pred_5 = _3119;
                }
                _2919 = frontier_phi_68_pred;
                _2917 = frontier_phi_68_pred_1;
                _2915 = frontier_phi_68_pred_2;
                _2911 = frontier_phi_68_pred_3;
                _2909 = frontier_phi_68_pred_4;
                _2913 = frontier_phi_68_pred_5;
                uint _3068 = _3067 + 1u;
                if (_3068 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3061 = _2909;
                    _3062 = _2911;
                    _3063 = _2913;
                    _3064 = _2915;
                    _3065 = _2917;
                    _3066 = _2919;
                    _3067 = _3068;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2908 = _2909;
            _2910 = _2911;
            _2912 = _2913;
            _2914 = _2915;
            _2916 = _2917;
            _2918 = _2919;
        }
        uvec4 _2922 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2923 = _2922.z;
        uint _2925 = (_2923 >> 8u) & 15u;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        float _3037;
        float _3039;
        if (((4294967295u << _2925) & _2803) == 0u)
        {
            _3029 = _2908;
            _3031 = _2910;
            _3033 = _2912;
            _3035 = _2914;
            _3037 = _2916;
            _3039 = _2918;
        }
        else
        {
            float _3054 = inversesqrt(dot(vec3(_1861, _1862, _1863), vec3(_1861, _1862, _1863)));
            float _3055 = _3054 * _1861;
            float _3056 = _3054 * _1862;
            float _3057 = _3054 * _1863;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2925 < ((_2923 >> 12u) & 15u))
            {
                float _3030;
                float _3032;
                float _3034;
                float _3036;
                float _3038;
                float _3040;
                float _3168 = _2908;
                float _3169 = _2910;
                float _3170 = _2912;
                float _3171 = _2914;
                float _3172 = _2916;
                float _3173 = _2918;
                uint _3174 = _2925;
                uint _3183;
                bool _3184;
                for (;;)
                {
                    _3183 = texelFetch(g_lightClassification, int((((_2797 << 5u) + (_2783 << 9u)) + (_3174 << 2u)) >> 2u)).x;
                    _3184 = _3183 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3184)
                    {
                        frontier_phi_74_pred = _3170;
                        frontier_phi_74_pred_1 = _3169;
                        frontier_phi_74_pred_2 = _3168;
                        frontier_phi_74_pred_3 = _3173;
                        frontier_phi_74_pred_4 = _3172;
                        frontier_phi_74_pred_5 = _3171;
                    }
                    else
                    {
                        float _3366;
                        float _3367;
                        float _3368;
                        float _3369;
                        float _3370;
                        float _3371;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3664;
                        float _3665;
                        float _3666;
                        float _3379 = _3168;
                        float _3380 = _3169;
                        float _3381 = _3170;
                        float _3382 = _3171;
                        float _3383 = _3172;
                        float _3384 = _3173;
                        uint _3385 = _3183;
                        uint _3386;
                        vec4 _3411;
                        float _3412;
                        vec4 _3427;
                        vec3 _3439;
                        vec4 _3454;
                        vec4 _3470;
                        float _3517;
                        bool _3518;
                        for (;;)
                        {
                            uint _3396 = ((_3174 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3385));
                            _3386 = (_3385 + 4294967295u) & _3385;
                            uint _3398 = _3396 * 40u;
                            _3411 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3398)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3398 + 3u)).x));
                            _3412 = _3411.w;
                            uint _3414 = (_3396 * 40u) + 4u;
                            _3427 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3414)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 3u)).x));
                            uint _3429 = (_3396 * 40u) + 8u;
                            _3439 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x));
                            uint _3441 = (_3396 * 40u) + 16u;
                            _3454 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3441)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 3u)).x));
                            uint _3457 = (_3396 * 40u) + 20u;
                            _3470 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3457)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3457 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3457 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3457 + 3u)).x));
                            uint _3473 = (_3396 * 40u) + 24u;
                            vec4 _3486 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3473)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 3u)).x));
                            uint _3492 = (_3396 * 40u) + 28u;
                            vec4 _3505 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3492)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 3u)).x));
                            _3517 = fma(_1863, _3505.z, fma(_1862, _3505.y, _3505.x * _1861)) + _3505.w;
                            _3518 = !((fma(_1863, _3486.z, fma(_1862, _3486.y, _3486.x * _1861)) + _3486.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3518)
                            {
                                float _3545 = _3411.x - _1861;
                                float _3546 = _3411.y - _1862;
                                float _3547 = _3411.z - _1863;
                                float _3548 = dot(vec3(_3545, _3546, _3547), vec3(_3545, _3546, _3547));
                                float _3551 = inversesqrt(_3548);
                                float _3552 = _3551 * _3545;
                                float _3553 = _3551 * _3546;
                                float _3554 = _3551 * _3547;
                                float _3558 = 1.0 - (_3548 / (_3412 * _3412));
                                float _4712 = isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0));
                                float _3559 = isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0));
                                float _3563 = sqrt(_3548) * _3427.w;
                                float _3565 = 1.39999997615814208984375 / (_3563 + 1.39999997615814208984375);
                                float _3566 = _3565 * _3565;
                                float _3569 = ((1.0 - _3566) * dot(vec3(_3552, _3553, _3554), vec3(_603, _606, _609))) + _3566;
                                float _3572 = _3563 * _3563;
                                float _3576 = (fma(_1863, _3454.z, fma(_1862, _3454.y, _3454.x * _1861)) + _3454.w) / _3517;
                                float _3577 = (fma(_1863, _3470.z, fma(_1862, _3470.y, _3470.x * _1861)) + _3470.w) / _3517;
                                float _3581 = 1.0 - dot(vec2(_3576, _3577), vec2(_3576, _3577));
                                float _4728 = isnan(0.0) ? _3581 : (isnan(_3581) ? 0.0 : max(_3581, 0.0));
                                float _3582 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
                                float _3583 = _3582 * (((isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0))) * _3559) / ((_3572 * 0.699999988079071044921875) + 1.0));
                                float _3595 = exp2(log2(1.0 / ((_3572 * 3.5) + 5.0)) * 0.25);
                                float _3596 = 1.0 - _801;
                                float _3603 = sqrt(1.0 - ((1.0 - (_3596 * _3596)) * (1.0 - (_3595 * _3595))));
                                float _3604 = _3603 * _3603;
                                float _3605 = _3604 * _3604;
                                float _3606 = _3552 - _3055;
                                float _3607 = _3553 - _3056;
                                float _3608 = _3554 - _3057;
                                float _3612 = inversesqrt(dot(vec3(_3606, _3607, _3608), vec3(_3606, _3607, _3608)));
                                float _3616 = dot(vec3(_603, _606, _609), vec3((-0.0) - _3055, (-0.0) - _3056, (-0.0) - _3057));
                                float _4739 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                                float _3619 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
                                float _3620 = dot(vec3(_603, _606, _609), vec3(_3612 * _3606, _3612 * _3607, _3612 * _3608));
                                float _4750 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                                float _3623 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
                                float _3627 = ((_3623 * _3623) * (_3605 + (-1.0))) + 1.0;
                                float _3628 = _3565 * _3604;
                                float _3629 = _3628 * _3628;
                                float _3635 = ((1.0 - _3629) * dot(vec3(_603, _606, _609), vec3(_3552, _3553, _3554))) + _3629;
                                float _4761 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                                float _3636 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
                                float _3637 = 1.0 - _3604;
                                float _3647 = (0.5 / (((_3636 * ((_3619 * _3637) + _3604)) + 9.9999999392252902907785028219223e-09) + (((_3636 * _3637) + _3604) * _3619))) * _3636;
                                float _4772 = isnan(0.0) ? _3647 : (isnan(_3647) ? 0.0 : max(_3647, 0.0));
                                float _3657 = (_3582 * _3559) * (((_3605 * 3.1415927410125732421875) * (isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0)))) / ((_3627 * _3627) * ((_3572 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3657 * _3439.z;
                                frontier_phi_80_pred_1 = _3657 * _3439.y;
                                frontier_phi_80_pred_2 = _3657 * _3439.x;
                                frontier_phi_80_pred_3 = _3583 * _3427.z;
                                frontier_phi_80_pred_4 = _3583 * _3427.y;
                                frontier_phi_80_pred_5 = _3583 * _3427.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3663 = frontier_phi_80_pred;
                            _3662 = frontier_phi_80_pred_1;
                            _3661 = frontier_phi_80_pred_2;
                            _3666 = frontier_phi_80_pred_3;
                            _3665 = frontier_phi_80_pred_4;
                            _3664 = frontier_phi_80_pred_5;
                            _3369 = _3664 + _3382;
                            _3370 = _3665 + _3383;
                            _3371 = _3666 + _3384;
                            _3366 = _3661 + _3379;
                            _3367 = _3662 + _3380;
                            _3368 = _3663 + _3381;
                            if (_3386 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3379 = _3366;
                                _3380 = _3367;
                                _3381 = _3368;
                                _3382 = _3369;
                                _3383 = _3370;
                                _3384 = _3371;
                                _3385 = _3386;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3368;
                        frontier_phi_74_pred_1 = _3367;
                        frontier_phi_74_pred_2 = _3366;
                        frontier_phi_74_pred_3 = _3371;
                        frontier_phi_74_pred_4 = _3370;
                        frontier_phi_74_pred_5 = _3369;
                    }
                    _3034 = frontier_phi_74_pred;
                    _3032 = frontier_phi_74_pred_1;
                    _3030 = frontier_phi_74_pred_2;
                    _3040 = frontier_phi_74_pred_3;
                    _3038 = frontier_phi_74_pred_4;
                    _3036 = frontier_phi_74_pred_5;
                    uint _3175 = _3174 + 1u;
                    if (_3175 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3168 = _3030;
                        _3169 = _3032;
                        _3170 = _3034;
                        _3171 = _3036;
                        _3172 = _3038;
                        _3173 = _3040;
                        _3174 = _3175;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3038;
                frontier_phi_62_63_ladder_1 = _3036;
                frontier_phi_62_63_ladder_2 = _3034;
                frontier_phi_62_63_ladder_3 = _3040;
                frontier_phi_62_63_ladder_4 = _3032;
                frontier_phi_62_63_ladder_5 = _3030;
            }
            else
            {
                frontier_phi_62_63_ladder = _2916;
                frontier_phi_62_63_ladder_1 = _2914;
                frontier_phi_62_63_ladder_2 = _2912;
                frontier_phi_62_63_ladder_3 = _2918;
                frontier_phi_62_63_ladder_4 = _2910;
                frontier_phi_62_63_ladder_5 = _2908;
            }
            _3029 = frontier_phi_62_63_ladder_5;
            _3031 = frontier_phi_62_63_ladder_4;
            _3033 = frontier_phi_62_63_ladder_2;
            _3035 = frontier_phi_62_63_ladder_1;
            _3037 = frontier_phi_62_63_ladder;
            _3039 = frontier_phi_62_63_ladder_3;
        }
        float _3044 = isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0));
        _2815 = (_3044 * _3035) + _2328;
        _2817 = (_3044 * _3037) + _2330;
        _2819 = (_3044 * _3039) + _2332;
        _2821 = ((_3029 * _777) * _3044) + _2666;
        _2823 = ((_3031 * _778) * _3044) + _2668;
        _2825 = ((_3033 * _779) * _3044) + _2670;
    }
    else
    {
        _2815 = _2328;
        _2817 = _2330;
        _2819 = _2332;
        _2821 = _2666;
        _2823 = _2668;
        _2825 = _2670;
    }
    uint _2831 = _684 + uint(cbMatDynParam._m0[0u].w);
    float _2837 = cbInstanceData._m0[_2831].x * ((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _475) + cbMatDynParam._m0[7u].x) + (((_516 - (_516 * _440)) + (cbMatDynParam._m0[11u].x * _547)) * cbMatDynParam._m0[9u].x));
    float _2838 = cbInstanceData._m0[_2831].y * ((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _475) + cbMatDynParam._m0[7u].y) + (((_518 - (_518 * _440)) + (cbMatDynParam._m0[11u].y * _547)) * cbMatDynParam._m0[9u].y));
    float _2839 = cbInstanceData._m0[_2831].z * ((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _475) + cbMatDynParam._m0[7u].z) + (((_520 - (_520 * _440)) + (cbMatDynParam._m0[11u].z * _547)) * cbMatDynParam._m0[9u].z));
    float _4788 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    float _4799 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _4810 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _4821 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _2857 = (((isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0))) * (_2815 + ((isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0))) * _791))) + ((_2821 + ((isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))) * _1591)) * cbPerFrame._m0[3u].x)) + _2837;
    float _2859 = (_2838 + ((_2823 + ((isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) * _1591)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0))) * (_2817 + ((isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0))) * _791)));
    float _2861 = (_2839 + ((_2825 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1591)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0))) * (_2819 + ((isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0))) * _791)));
    float _2869 = cbMatDynParam._m0[12u].y - (cbMatDynParam._m0[12u].y * ((((isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) - _502) * _475) + _502));
    float _2874 = cbInstanceData._m0[_683 + 6u].w * (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0)));
    float _2879 = _579 / cbSceneParam._m0[86u].x;
    float _2880 = _580 / cbSceneParam._m0[86u].y;
    vec4 _2894 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2879, _2880, (log2((isnan(cbSceneParam._m0[77u].w) ? _573 : (isnan(_573) ? cbSceneParam._m0[77u].w : min(_573, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2896 = _2894.x;
    float _2897 = _2894.y;
    float _2898 = _2894.z;
    float _2899 = _2894.w;
    float _2970;
    float _2972;
    float _2974;
    float _2976;
    if (_573 > cbSceneParam._m0[78u].w)
    {
        float _2933 = isnan(_573) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _573 : min(cbSceneParam._m0[80u].w, _573));
        float _2934 = _2933 / _573;
        float _2945 = _2934 * _283;
        float _2946 = _284 * _2934;
        float _2947 = (-0.0) - _2946;
        float _2948 = _2934 * _285;
        float _2950 = (cbSceneParam._m0[77u].w * _2947) / _2933;
        float _2951 = _2950 + cbSceneParam._m0[79u].w;
        float _2952 = cbSceneParam._m0[79u].w - _2946;
        float _2958 = sqrt(((_2945 * _2945) + (_2946 * _2946)) + (_2948 * _2948));
        float _2961 = (1.0 - (cbSceneParam._m0[77u].w / _2933)) * _2958;
        float _2966 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2968 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3130;
        if (abs((_2947 - _2950) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3130 = ((((_2951 > 0.0) ? exp2(_2966 * _2951) : (2.0 - exp2(_2968 * _2951))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2961;
        }
        else
        {
            float _3090 = 1.0 / cbSceneParam._m0[80u].x;
            float _3091 = isnan(_2952) ? _2951 : (isnan(_2951) ? _2952 : max(_2951, _2952));
            float _3092 = isnan(_2952) ? _2951 : (isnan(_2951) ? _2952 : min(_2951, _2952));
            float _3101 = isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : min(_3091, 0.0));
            float _3102 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : min(_3092, 0.0));
            _3130 = ((abs(_2958 / _2947) * cbSceneParam._m0[80u].y) * ((((_3101 - _3102) * 2.0) - ((exp2(_2966 * (isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : max(_3091, 0.0)))) - exp2(_2966 * (isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0))))) * _3090)) - ((exp2(_2968 * _3101) - exp2(_2968 * _3102)) * _3090))) + (_2961 * cbSceneParam._m0[80u].z);
        }
        vec4 _3132 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2879, _2880, 1.0), 0.0);
        float _3141 = exp2((_3130 * (-1.44269502162933349609375)) * (1.0 - _3132.w));
        float _3142 = log2(_3141);
        float _3158 = log2(_2899);
        _2970 = (exp2(_3158 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].x)) * _3132.x) / cbSceneParam._m0[78u].x)) + _2896;
        _2972 = (exp2(_3158 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].y)) * _3132.y) / cbSceneParam._m0[78u].y)) + _2897;
        _2974 = (exp2(_3158 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].z)) * _3132.z) / cbSceneParam._m0[78u].z)) + _2898;
        _2976 = _3141 * _2899;
    }
    else
    {
        _2970 = _2896;
        _2972 = _2897;
        _2974 = _2898;
        _2976 = _2899;
    }
    float _2988 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2989 = _2988 == 3.0;
    float _2990 = log2(_2976);
    float _2994 = exp2(_2990 * cbSceneParam._m0[78u].x);
    float _2995 = exp2(_2990 * cbSceneParam._m0[78u].y);
    float _2996 = exp2(_2990 * cbSceneParam._m0[78u].z);
    float _2997 = _2994 * (isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0)));
    float _2998 = _2995 * (isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0)));
    float _2999 = _2996 * (isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0)));
    float _3008 = (_2988 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3008 * (_2989 ? _2997 : (_2997 + (cbSceneParam._m0[72u].w * _2970)));
    SV_Target.y = _3008 * (_2989 ? _2998 : (_2998 + (cbSceneParam._m0[72u].w * _2972)));
    SV_Target.z = _3008 * (_2989 ? _2999 : (_2999 + (cbSceneParam._m0[72u].w * _2974)));
    SV_Target.w = _2874;
    SV_Target_1.x = ((_2869 * _2837) * _2994) * _3008;
    SV_Target_1.y = ((_2869 * _2838) * _2995) * _3008;
    SV_Target_1.z = ((_2869 * _2839) * _2996) * _3008;
    SV_Target_1.w = _2874;
}


