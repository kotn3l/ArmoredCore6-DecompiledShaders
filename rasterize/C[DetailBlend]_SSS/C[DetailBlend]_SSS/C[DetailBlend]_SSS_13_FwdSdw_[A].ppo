#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1178;
float _3849;
float _3850;
float _3851;
float _3852;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234;
    float _235;
    float _236;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
        _236 = (-0.0) - _222;
    }
    else
    {
        _234 = _220;
        _235 = _221;
        _236 = _222;
    }
    vec4 _250 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _268 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _280 = cbMtdParam._m0[9u].x * _268.x;
    float _281 = cbMtdParam._m0[9u].y * _268.y;
    float _282 = cbMtdParam._m0[9u].z * _268.z;
    float _288 = exp2(log2(1.0 - _250.w) * 8.0);
    vec4 _300 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _334 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _342 = (((((cbMtdParam._m0[12u].x * _300.x) - _280) * _288) + _280) * 4.55000019073486328125) * _334.x;
    float _344 = (((((cbMtdParam._m0[12u].y * _300.y) - _281) * _288) + _281) * 4.55000019073486328125) * _334.y;
    float _346 = (((((cbMtdParam._m0[12u].z * _300.z) - _282) * _288) + _282) * 4.55000019073486328125) * _334.z;
    float _347 = _334.w * _268.w;
    vec4 _364 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _368 = cbMtdParam._m0[14u].z + _364.x;
    float _371 = ((cbMtdParam._m0[14u].y - _368) * _288) + _368;
    vec4 _383 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _385 = _383.x;
    float _386 = _383.y;
    float _392 = cbMtdParam._m0[13u].x + _383.z;
    vec4 _405 = texture(sampler2D(C_DetailBlend_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _417 = (_250.z * 2.0) * ((((_405.z - _392) + cbMtdParam._m0[14u].x) * _288) + _392);
    float _421 = (_250.x * 2.0) + (-1.0);
    float _423 = (_250.y * 2.0) + (-1.0);
    float _424 = dot(vec2(_421, _423), vec2(_421, _423));
    float _3861 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _429 = sqrt(1.0 - (isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0))));
    float _442 = ((((((_405.x - _385) * _288) + _385) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _421;
    float _443 = ((((((_405.y - _386) * _288) + _386) * 2.0) + (-1.0)) * cbMtdParam._m0[13u].z) + _423;
    float _446 = fma(_429, _234, fma(_443, _226 * TANGENT.x, (_212 * _204) * _442));
    float _449 = fma(_429, _235, fma(_443, _226 * TANGENT.y, (_212 * _205) * _442));
    float _452 = fma(_429, _236, fma(_443, _226 * TANGENT.z, (_212 * _206) * _442));
    float _456 = inversesqrt(dot(vec3(_446, _449, _452), vec3(_446, _449, _452)));
    float _457 = _456 * _446;
    float _458 = _456 * _449;
    float _459 = _456 * _452;
    float _3872 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _460 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
    float _3883 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _461 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
    float _3894 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _462 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _3905 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _463 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _3916 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _464 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _3927 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
    float _465 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _481 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _524 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _534 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _524);
    float _535 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _524);
    float _536 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _524);
    float _540 = inversesqrt(dot(vec3(_534, _535, _536), vec3(_534, _535, _536)));
    float _541 = _534 * _540;
    float _542 = _535 * _540;
    float _543 = _536 * _540;
    vec4 _548 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _550 = _548.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _857 = sqrt(((_534 * _534) + (_535 * _535)) + (_536 * _536));
        float _863 = (cbMatDynParam._m0[5u].x * _857) + cbMatDynParam._m0[5u].y;
        float _3938 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
        float _864 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
        float _868 = (cbMatDynParam._m0[5u].z * _857) + cbMatDynParam._m0[5u].w;
        float _3949 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))) - _864)) + _864) < ((_550 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _561 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _562 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _564 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _566 = _564.w;
    float _586 = fma(_459, cbSceneParam._m0[5u].z, fma(_458, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _457));
    float _589 = fma(_459, cbSceneParam._m0[6u].z, fma(_458, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _457));
    float _592 = fma(_459, cbSceneParam._m0[7u].z, fma(_458, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _457));
    vec4 _594 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _596 = _594.x;
    float _608 = (((_594.y - _461) + (_594.w * _461)) * cbMtdParam._m0[3u].x) + _461;
    vec4 _609 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _625 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_596 * _596)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _609.z;
    float _634 = (((cbMatDynParam._m0[15u].x - _465) * cbMatDynParam._m0[15u].w) * _625) + _465;
    float _642 = ((_625 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _608)) + _608;
    uint _666 = uint(roundEven(NORMAL.w)) * 13u;
    uint _667 = _666 + 9u;
    uint _668 = _667 + uint(cbMatDynParam._m0[0u].w);
    float _674 = (cbMtdParam._m0[0u].x * _462) * cbInstanceData._m0[_668].x;
    float _675 = (cbMtdParam._m0[0u].y * _463) * cbInstanceData._m0[_668].y;
    float _676 = (cbMtdParam._m0[0u].z * _464) * cbInstanceData._m0[_668].z;
    float _3960 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _677 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _3971 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _678 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
    float _3982 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _679 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    vec4 _680 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _685 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _696 = (((_685.x - _634) + (_685.w * _634)) * cbMtdParam._m0[3u].x) + _634;
    float _709 = (cbMtdParam._m0[3u].x * (((_677 * _566) - _677) + _680.x)) + _677;
    float _710 = (cbMtdParam._m0[3u].x * (((_678 * _566) - _678) + _680.y)) + _678;
    float _711 = (cbMtdParam._m0[3u].x * (((_679 * _566) - _679) + _680.z)) + _679;
    float _725 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_634 * (_462 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_634 * (_463 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_634 * (_464 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _729 = _725 * cbMatDynParam._m0[13u].w;
    float _739 = (_729 * (cbMatDynParam._m0[13u].x - _709)) + _709;
    float _740 = (_729 * (cbMatDynParam._m0[13u].y - _710)) + _710;
    float _741 = (_729 * (cbMatDynParam._m0[13u].z - _711)) + _711;
    float _749 = ((_725 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _696)) + _696;
    float _750 = 1.0 - _749;
    float _751 = _750 * _739;
    float _752 = _750 * _740;
    float _753 = _750 * _741;
    float _757 = (_739 + (-0.039999999105930328369140625)) * _749;
    float _758 = (_740 + (-0.039999999105930328369140625)) * _749;
    float _759 = (_741 + (-0.039999999105930328369140625)) * _749;
    float _760 = _757 + 0.039999999105930328369140625;
    float _761 = _758 + 0.039999999105930328369140625;
    float _762 = _759 + 0.039999999105930328369140625;
    vec4 _771 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _561, cbSceneParam._m0[86u].y * _562));
    float _774 = _771.x * TEXCOORD_4;
    float _775 = dot(vec3(_457, _458, _459), vec3(_541, _542, _543));
    float _778 = _775 * 2.0;
    float _782 = (_778 * _457) - _541;
    float _783 = (_778 * _458) - _542;
    float _784 = (_778 * _459) - _543;
    float _788 = abs(dot(vec3(_541, _542, _543), vec3(_457, _458, _459)));
    float _3993 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _790 = sqrt(_642);
    float _803 = exp2((_790 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_790 * 3.0));
    float _809 = (1.0 - _803) * ((_790 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _810 = _803 * _790;
    float _838 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _842 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _846 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1177;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    float _1192;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _902 = fma(_846, cbModelParam._m0[26u].z, fma(_842, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _838));
        float _906 = fma(_846, cbModelParam._m0[27u].z, fma(_842, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _838));
        float _910 = fma(_846, cbModelParam._m0[28u].z, fma(_842, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _838));
        float _935 = _838 + _457;
        float _936 = _842 + _458;
        float _937 = _846 + _459;
        float _947 = fma(_937, cbModelParam._m0[26u].z, fma(_936, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _935)) - _902;
        float _948 = fma(_937, cbModelParam._m0[27u].z, fma(_936, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _935)) - _906;
        float _949 = fma(_937, cbModelParam._m0[28u].z, fma(_936, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _935)) - _910;
        float _953 = inversesqrt(dot(vec3(_947, _948, _949), vec3(_947, _948, _949)));
        float _966 = ((_953 * _947) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_902 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _967 = ((_953 * _948) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_906 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _968 = ((_953 * _949) / cbModelParam._m0[34u].z) + ((((((_910 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _971 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _978 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _985 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        vec4 _992 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_966, _967, _968), 0.0);
        float _1005 = exp2((_971.w + (-0.5)) * 20.0) * 2.0;
        float _1006 = _1005 * (_971.x + (-0.5));
        float _1007 = _1005 * (_971.y + (-0.5));
        float _1008 = _1005 * (_971.z + (-0.5));
        float _1015 = exp2((_978.w + (-0.5)) * 20.0) * 2.0;
        float _1016 = _1015 * (_978.x + (-0.5));
        float _1017 = _1015 * (_978.y + (-0.5));
        float _1018 = _1015 * (_978.z + (-0.5));
        float _1025 = exp2((_985.w + (-0.5)) * 20.0) * 2.0;
        float _1026 = _1025 * (_985.x + (-0.5));
        float _1027 = _1025 * (_985.y + (-0.5));
        float _1028 = _1025 * (_985.z + (-0.5));
        float _1035 = exp2((_992.w + (-0.5)) * 20.0) * 2.0;
        float _1036 = _1035 * (_992.x + (-0.5));
        float _1037 = _1035 * (_992.y + (-0.5));
        float _1038 = _1035 * (_992.z + (-0.5));
        float _1039 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1040 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1041 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1042 = _1006 * 0.5;
        float _1043 = _1016 * 0.5;
        float _1044 = _1026 * 0.5;
        float _1045 = dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044));
        float _1050 = (_1045 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1045);
        float _1059 = (dot(vec3(_457, _458, _459), vec3(_1050 * _1042, _1050 * _1043, _1050 * _1044)) + 1.0) * 0.5;
        float _4019 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
        float _1069 = sqrt(((_1043 * _1043) + (_1042 * _1042)) + (_1044 * _1044)) / (_1039 + 9.9999997473787516355514526367188e-06);
        float _4030 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1070 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
        float _1071 = _1070 * 2.0;
        float _1075 = (1.0 - _1070) / (_1070 + 1.0);
        float _4041 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1076 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
        float _1085 = ((((1.0 - _1076) * (_1071 + 2.0)) * exp2(log2(isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0))) * (_1071 + 1.0))) + _1076) * _1039;
        float _1086 = _1007 * 0.5;
        float _1087 = _1017 * 0.5;
        float _1088 = _1027 * 0.5;
        float _1089 = dot(vec3(_1086, _1087, _1088), vec3(_1086, _1087, _1088));
        float _1094 = (_1089 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1089);
        float _1102 = (dot(vec3(_457, _458, _459), vec3(_1094 * _1086, _1094 * _1087, _1094 * _1088)) + 1.0) * 0.5;
        float _4052 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1111 = sqrt(((_1087 * _1087) + (_1086 * _1086)) + (_1088 * _1088)) / (_1040 + 9.9999997473787516355514526367188e-06);
        float _4063 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
        float _1112 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
        float _1113 = _1112 * 2.0;
        float _1117 = (1.0 - _1112) / (_1112 + 1.0);
        float _4074 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
        float _1127 = ((((1.0 - _1118) * (_1113 + 2.0)) * exp2(log2(isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0))) * (_1113 + 1.0))) + _1118) * _1040;
        float _1128 = _1008 * 0.5;
        float _1129 = _1018 * 0.5;
        float _1130 = _1028 * 0.5;
        float _1131 = dot(vec3(_1128, _1129, _1130), vec3(_1128, _1129, _1130));
        float _1136 = (_1131 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1131);
        float _1144 = (dot(vec3(_457, _458, _459), vec3(_1136 * _1128, _1136 * _1129, _1136 * _1130)) + 1.0) * 0.5;
        float _4085 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1153 = sqrt(((_1129 * _1129) + (_1128 * _1128)) + (_1130 * _1130)) / (_1041 + 9.9999997473787516355514526367188e-06);
        float _4096 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _4107 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * (_1155 + 1.0))) + _1160) * _1041;
        _1177 = _1008;
        _1179 = _1007;
        _1180 = _1006;
        _1181 = _1018;
        _1182 = _1017;
        _1183 = _1016;
        _1184 = _1028;
        _1185 = _1027;
        _1186 = _1026;
        _1187 = _1041;
        _1188 = _1040;
        _1189 = _1039;
        _1190 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0)));
        _1191 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0)));
        _1192 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
    }
    else
    {
        _1177 = _1178;
        _1179 = _1178;
        _1180 = _1178;
        _1181 = _1178;
        _1182 = _1178;
        _1183 = _1178;
        _1184 = _1178;
        _1185 = _1178;
        _1186 = _1178;
        _1187 = _1178;
        _1188 = _1178;
        _1189 = _1178;
        _1190 = 0.0;
        _1191 = 0.0;
        _1192 = 0.0;
    }
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1221 = fma(_846, cbModelParam._m0[30u].z, fma(_842, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _838));
        float _1225 = fma(_846, cbModelParam._m0[31u].z, fma(_842, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _838));
        float _1229 = fma(_846, cbModelParam._m0[32u].z, fma(_842, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _838));
        float _1252 = _838 + _457;
        float _1253 = _842 + _458;
        float _1254 = _846 + _459;
        float _1264 = fma(_1254, cbModelParam._m0[30u].z, fma(_1253, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1252)) - _1221;
        float _1265 = fma(_1254, cbModelParam._m0[31u].z, fma(_1253, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1252)) - _1225;
        float _1266 = fma(_1254, cbModelParam._m0[32u].z, fma(_1253, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1252)) - _1229;
        float _1270 = inversesqrt(dot(vec3(_1264, _1265, _1266), vec3(_1264, _1265, _1266)));
        float _1283 = ((_1270 * _1264) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1221 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1284 = ((_1270 * _1265) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1225 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1285 = ((_1270 * _1266) / cbModelParam._m0[35u].z) + ((((((_1229 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1287 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1294 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1301 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1308 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        float _1320 = exp2((_1287.w + (-0.5)) * 20.0) * 2.0;
        float _1321 = _1320 * (_1287.x + (-0.5));
        float _1322 = _1320 * (_1287.y + (-0.5));
        float _1323 = _1320 * (_1287.z + (-0.5));
        float _1330 = exp2((_1294.w + (-0.5)) * 20.0) * 2.0;
        float _1331 = _1330 * (_1294.x + (-0.5));
        float _1332 = _1330 * (_1294.y + (-0.5));
        float _1333 = _1330 * (_1294.z + (-0.5));
        float _1340 = exp2((_1301.w + (-0.5)) * 20.0) * 2.0;
        float _1341 = _1340 * (_1301.x + (-0.5));
        float _1342 = _1340 * (_1301.y + (-0.5));
        float _1343 = _1340 * (_1301.z + (-0.5));
        float _1350 = exp2((_1308.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1308.x + (-0.5));
        float _1352 = _1350 * (_1308.y + (-0.5));
        float _1353 = _1350 * (_1308.z + (-0.5));
        float _1354 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1355 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1356 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1357 = _1321 * 0.5;
        float _1358 = _1331 * 0.5;
        float _1359 = _1341 * 0.5;
        float _1360 = dot(vec3(_1357, _1358, _1359), vec3(_1357, _1358, _1359));
        float _1365 = (_1360 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1360);
        float _1373 = (dot(vec3(_457, _458, _459), vec3(_1365 * _1357, _1365 * _1358, _1365 * _1359)) + 1.0) * 0.5;
        float _4148 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1382 = sqrt(((_1358 * _1358) + (_1357 * _1357)) + (_1359 * _1359)) / (_1354 + 9.9999997473787516355514526367188e-06);
        float _4159 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1383 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _1384 = _1383 * 2.0;
        float _1388 = (1.0 - _1383) / (_1383 + 1.0);
        float _4170 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
        float _1398 = ((((1.0 - _1389) * (_1384 + 2.0)) * exp2(log2(isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))) * (_1384 + 1.0))) + _1389) * _1354;
        float _1399 = _1322 * 0.5;
        float _1400 = _1332 * 0.5;
        float _1401 = _1342 * 0.5;
        float _1402 = dot(vec3(_1399, _1400, _1401), vec3(_1399, _1400, _1401));
        float _1407 = (_1402 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1402);
        float _1415 = (dot(vec3(_457, _458, _459), vec3(_1407 * _1399, _1407 * _1400, _1407 * _1401)) + 1.0) * 0.5;
        float _4181 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1424 = sqrt(((_1400 * _1400) + (_1399 * _1399)) + (_1401 * _1401)) / (_1355 + 9.9999997473787516355514526367188e-06);
        float _4192 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1426 = _1425 * 2.0;
        float _1430 = (1.0 - _1425) / (_1425 + 1.0);
        float _4203 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
        float _1440 = ((((1.0 - _1431) * (_1426 + 2.0)) * exp2(log2(isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0))) * (_1426 + 1.0))) + _1431) * _1355;
        float _1441 = _1323 * 0.5;
        float _1442 = _1333 * 0.5;
        float _1443 = _1343 * 0.5;
        float _1444 = dot(vec3(_1441, _1442, _1443), vec3(_1441, _1442, _1443));
        float _1449 = (_1444 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1444);
        float _1457 = (dot(vec3(_457, _458, _459), vec3(_1449 * _1441, _1449 * _1442, _1449 * _1443)) + 1.0) * 0.5;
        float _4214 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1466 = sqrt(((_1442 * _1442) + (_1441 * _1441)) + (_1443 * _1443)) / (_1356 + 9.9999997473787516355514526367188e-06);
        float _4225 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1468 = _1467 * 2.0;
        float _1472 = (1.0 - _1467) / (_1467 + 1.0);
        float _4236 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _1482 = ((((1.0 - _1473) * (_1468 + 2.0)) * exp2(log2(isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))) * (_1468 + 1.0))) + _1473) * _1356;
        _1490 = _1323;
        _1491 = _1322;
        _1492 = _1321;
        _1493 = _1333;
        _1494 = _1332;
        _1495 = _1331;
        _1496 = _1343;
        _1497 = _1342;
        _1498 = _1341;
        _1499 = _1356;
        _1500 = _1355;
        _1501 = _1354;
        _1502 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0)));
        _1503 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)));
        _1504 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)));
    }
    else
    {
        _1490 = _1178;
        _1491 = _1178;
        _1492 = _1178;
        _1493 = _1178;
        _1494 = _1178;
        _1495 = _1178;
        _1496 = _1178;
        _1497 = _1178;
        _1498 = _1178;
        _1499 = _1178;
        _1500 = _1178;
        _1501 = _1178;
        _1502 = 0.0;
        _1503 = 0.0;
        _1504 = 0.0;
    }
    float _1514 = (cbModelParam._m0[1u].x * (_1502 - _1190)) + _1190;
    float _1515 = (cbModelParam._m0[1u].x * (_1503 - _1191)) + _1191;
    float _1516 = (cbModelParam._m0[1u].x * (_1504 - _1192)) + _1192;
    float _1537 = fma(_1516, cbSceneParam._m0[89u].z, fma(_1515, cbSceneParam._m0[89u].y, _1514 * cbSceneParam._m0[89u].x));
    float _1540 = fma(_1516, cbSceneParam._m0[90u].z, fma(_1515, cbSceneParam._m0[90u].y, _1514 * cbSceneParam._m0[90u].x));
    float _1543 = fma(_1516, cbSceneParam._m0[91u].z, fma(_1515, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1514));
    float _1558 = _782 * 0.5;
    float _1559 = _783 * 0.5;
    float _1560 = _784 * 0.5;
    float _1561 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1492, _1495, _1498, _1501));
    float _1564 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1491, _1494, _1497, _1500));
    float _1567 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1490, _1493, _1496, _1499));
    float _1598;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1574 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1177, _1181, _1184, _1187));
        float _1578 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1179, _1182, _1185, _1188));
        float _1582 = dot(vec4(_1558, _1559, _1560, 1.0), vec4(_1180, _1183, _1186, _1189));
        float _1589 = dot(vec4(cbModelParam._m0[39u]), vec4(_1558, _1559, _1560, 1.0));
        _1598 = dot(vec3(isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0)), isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0)), isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1589) ? 0.0 : (isnan(0.0) ? _1589 : max(0.0, _1589))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1598 = 1.0;
    }
    float _1609;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1600 = dot(vec4(cbModelParam._m0[40u]), vec4(_1558, _1559, _1560, 1.0));
        _1609 = dot(vec3(isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0)), isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0)), isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1600) ? 0.0 : (isnan(0.0) ? _1600 : max(0.0, _1600))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1609 = 1.0;
    }
    float _1613 = (_1609 * cbModelParam._m0[1u].x) + (_1598 * (1.0 - cbModelParam._m0[1u].x));
    float _1623 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _642);
    float _1624 = isnan(_1623) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1623 : min(cbModelParam._m0[25u].z, _1623));
    float _1704;
    float _1706;
    float _1708;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1671 = fma(_846, cbModelParam._m0[13u].z, fma(_842, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _838)) + cbModelParam._m0[13u].w;
        float _1675 = fma(_846, cbModelParam._m0[14u].z, fma(_842, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _838)) + cbModelParam._m0[14u].w;
        float _1679 = fma(_846, cbModelParam._m0[15u].z, fma(_842, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _838)) + cbModelParam._m0[15u].w;
        float _1682 = fma(_784, cbModelParam._m0[13u].z, fma(_783, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _782));
        float _1685 = fma(_784, cbModelParam._m0[14u].z, fma(_783, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _782));
        float _1688 = fma(_784, cbModelParam._m0[15u].z, fma(_783, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _782));
        float _1716;
        if (_1682 > 0.0)
        {
            _1716 = abs((1.0 - _1671) / _1682);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1682 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1671 + 1.0) / _1682);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1716 = frontier_phi_19_17_ladder;
        }
        float _1891;
        if (_1685 > 0.0)
        {
            _1891 = abs((1.0 - _1675) / _1685);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1685 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1675 + 1.0) / _1685);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1891 = frontier_phi_28_24_ladder;
        }
        float _2186;
        if (_1688 > 0.0)
        {
            _2186 = abs((1.0 - _1679) / _1688);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1688 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1679 + 1.0) / _1688);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2186 = frontier_phi_40_35_ladder;
        }
        float _2188 = isnan(_1891) ? _1716 : (isnan(_1716) ? _1891 : min(_1716, _1891));
        float _2189 = isnan(_2186) ? _2188 : (isnan(_2188) ? _2186 : min(_2188, _2186));
        float _2193 = (_2189 * _1682) + _1671;
        float _2194 = (_2189 * _1685) + _1675;
        float _2195 = (_2189 * _1688) + _1679;
        float _2196 = _2189 * 9.9999997473787516355514526367188e-05;
        float _2198 = (-1.0) - _2196;
        float _2200 = _2196 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2195 > _2200) || ((_2195 < _2198) || ((_2194 > _2200) || ((_2194 < _2198) || ((_2193 < _2198) || (_2193 > _2200))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2340 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2195, cbModelParam._m0[9u].z, fma(_2194, cbModelParam._m0[9u].y, _2193 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2195, cbModelParam._m0[10u].z, fma(_2194, cbModelParam._m0[10u].y, _2193 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2195, cbModelParam._m0[11u].z, fma(_2194, cbModelParam._m0[11u].y, _2193 * cbModelParam._m0[11u].x))), _1624);
            frontier_phi_18_40_ladder = _2340.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2340.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2340.x * cbModelParam._m0[1u].y;
        }
        _1704 = frontier_phi_18_40_ladder_2;
        _1706 = frontier_phi_18_40_ladder_1;
        _1708 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1692 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_782, _783, _784), _1624);
        _1704 = _1692.x * cbModelParam._m0[1u].y;
        _1706 = _1692.y * cbModelParam._m0[1u].y;
        _1708 = _1692.z * cbModelParam._m0[1u].y;
    }
    float _1712 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _642);
    float _1713 = isnan(_1712) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1712 : min(cbModelParam._m0[25u].w, _1712));
    float _1806;
    float _1808;
    float _1810;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1770 = fma(_846, cbModelParam._m0[21u].z, fma(_842, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _838)) + cbModelParam._m0[21u].w;
        float _1774 = fma(_846, cbModelParam._m0[22u].z, fma(_842, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _838)) + cbModelParam._m0[22u].w;
        float _1778 = fma(_846, cbModelParam._m0[23u].z, fma(_842, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _838)) + cbModelParam._m0[23u].w;
        float _1781 = fma(_784, cbModelParam._m0[21u].z, fma(_783, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _782));
        float _1784 = fma(_784, cbModelParam._m0[22u].z, fma(_783, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _782));
        float _1787 = fma(_784, cbModelParam._m0[23u].z, fma(_783, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _782));
        float _1896;
        if (_1781 > 0.0)
        {
            _1896 = abs((1.0 - _1770) / _1781);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1781 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1770 + 1.0) / _1781);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1896 = frontier_phi_30_26_ladder;
        }
        float _2213;
        if (_1784 > 0.0)
        {
            _2213 = abs((1.0 - _1774) / _1784);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1784 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1774 + 1.0) / _1784);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2213 = frontier_phi_42_37_ladder;
        }
        float _2551;
        if (_1787 > 0.0)
        {
            _2551 = abs((1.0 - _1778) / _1787);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1787 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1778 + 1.0) / _1787);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2551 = frontier_phi_52_49_ladder;
        }
        float _2553 = isnan(_2213) ? _1896 : (isnan(_1896) ? _2213 : min(_1896, _2213));
        float _2554 = isnan(_2551) ? _2553 : (isnan(_2553) ? _2551 : min(_2553, _2551));
        float _2558 = (_2554 * _1781) + _1770;
        float _2559 = (_2554 * _1784) + _1774;
        float _2560 = (_2554 * _1787) + _1778;
        float _2561 = _2554 * 9.9999997473787516355514526367188e-05;
        float _2562 = (-1.0) - _2561;
        float _2564 = _2561 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2560 > _2564) || ((_2560 < _2562) || ((_2559 > _2564) || ((_2559 < _2562) || ((_2558 < _2562) || (_2558 > _2564))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2682 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2560, cbModelParam._m0[17u].z, fma(_2559, cbModelParam._m0[17u].y, _2558 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2560, cbModelParam._m0[18u].z, fma(_2559, cbModelParam._m0[18u].y, _2558 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2560, cbModelParam._m0[19u].z, fma(_2559, cbModelParam._m0[19u].y, _2558 * cbModelParam._m0[19u].x))), _1713);
            frontier_phi_27_52_ladder = _2682.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2682.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2682.x * cbModelParam._m0[1u].z;
        }
        _1806 = frontier_phi_27_52_ladder_2;
        _1808 = frontier_phi_27_52_ladder_1;
        _1810 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1790 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_782, _783, _784), _1713);
        _1806 = _1790.x * cbModelParam._m0[1u].z;
        _1808 = _1790.y * cbModelParam._m0[1u].z;
        _1810 = _1790.z * cbModelParam._m0[1u].z;
    }
    float _1823 = (((_809 * _760) + _810) * _774) * ((cbModelParam._m0[1u].w * (_1806 - _1704)) + _1704);
    float _1825 = (((_809 * _761) + _810) * _774) * ((cbModelParam._m0[1u].w * (_1808 - _1706)) + _1706);
    float _1827 = (((_809 * _762) + _810) * _774) * ((cbModelParam._m0[1u].w * (_1810 - _1708)) + _1708);
    float _1830 = fma(_1827, cbSceneParam._m0[89u].z, fma(_1825, cbSceneParam._m0[89u].y, _1823 * cbSceneParam._m0[89u].x));
    float _1833 = fma(_1827, cbSceneParam._m0[90u].z, fma(_1825, cbSceneParam._m0[90u].y, _1823 * cbSceneParam._m0[90u].x));
    float _1836 = fma(_1827, cbSceneParam._m0[91u].z, fma(_1825, cbSceneParam._m0[91u].y, _1823 * cbSceneParam._m0[91u].x));
    float _1870 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1874 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1878 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1882 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1883 = _1870 / _1882;
    float _1884 = _1874 / _1882;
    float _1885 = _1878 / _1882;
    float _2032;
    float _2033;
    float _2034;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1912 = ((uint(_1885 > cbSceneParam._m0[59u].y) + uint(_1885 > cbSceneParam._m0[59u].x)) + uint(_1885 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1913 = _1912 + 43u;
        uint _1921 = _1912 + 44u;
        uint _1929 = _1912 + 45u;
        uint _1937 = _1912 + 46u;
        float _1948 = fma(_1882, cbSceneParam._m0[_1913].w, fma(_1878, cbSceneParam._m0[_1913].z, fma(_1874, cbSceneParam._m0[_1913].y, _1870 * cbSceneParam._m0[_1913].x)));
        float _1952 = fma(_1882, cbSceneParam._m0[_1921].w, fma(_1878, cbSceneParam._m0[_1921].z, fma(_1874, cbSceneParam._m0[_1921].y, _1870 * cbSceneParam._m0[_1921].x)));
        float _1960 = fma(_1882, cbSceneParam._m0[_1937].w, fma(_1878, cbSceneParam._m0[_1937].z, fma(_1874, cbSceneParam._m0[_1937].y, _1870 * cbSceneParam._m0[_1937].x)));
        float _1965 = cbSceneParam._m0[33u].z * _1960;
        float _1967 = cbSceneParam._m0[33u].w * _1960;
        float _1970 = fma(_1882, cbSceneParam._m0[_1929].w, fma(_1878, cbSceneParam._m0[_1929].z, fma(_1874, cbSceneParam._m0[_1929].y, _1870 * cbSceneParam._m0[_1929].x))) / _1960;
        float _2018 = (cbSceneParam._m0[33u].x - sqrt(((_1884 * _1884) + (_1883 * _1883)) + (_1885 * _1885))) * cbSceneParam._m0[33u].y;
        float _4362 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0));
        float _2025 = (isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1965 + _1948) / _1960, (_1967 + _1952) / _1960), _1970), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1967 + _1948) / _1960, (_1952 - _1965) / _1960), _1970), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1948 - _1965) / _1960, (_1952 - _1967) / _1960), _1970), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1948 - _1967) / _1960, (_1965 + _1952) / _1960), _1970), 0.0)).x), vec4(0.25)));
        _2032 = 1.0 - (_2025 * cbSceneParam._m0[34u].x);
        _2033 = 1.0 - (_2025 * cbSceneParam._m0[34u].y);
        _2034 = 1.0 - (_2025 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2032 = 1.0;
        _2033 = 1.0;
        _2034 = 1.0;
    }
    float _2098;
    float _2100;
    float _2102;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2086 = fma(_1882, cbSceneParam._m0[63u].w, fma(_1878, cbSceneParam._m0[63u].z, fma(_1874, cbSceneParam._m0[63u].y, _1870 * cbSceneParam._m0[63u].x)));
        float _2087 = fma(_1882, cbSceneParam._m0[60u].w, fma(_1878, cbSceneParam._m0[60u].z, fma(_1874, cbSceneParam._m0[60u].y, _1870 * cbSceneParam._m0[60u].x))) / _2086;
        float _2088 = fma(_1882, cbSceneParam._m0[61u].w, fma(_1878, cbSceneParam._m0[61u].z, fma(_1874, cbSceneParam._m0[61u].y, _1870 * cbSceneParam._m0[61u].x))) / _2086;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2087 >= cbSceneParam._m0[64u].x) && (_2088 >= cbSceneParam._m0[64u].y)) && (_2087 <= cbSceneParam._m0[64u].z)) && (_2088 <= cbSceneParam._m0[64u].w))
        {
            float _2226 = fma(_1882, cbSceneParam._m0[62u].w, fma(_1878, cbSceneParam._m0[62u].z, fma(_1874, cbSceneParam._m0[62u].y, _1870 * cbSceneParam._m0[62u].x))) / _2086;
            float _2230 = isnan(cbSceneParam._m0[41u].w) ? _2226 : (isnan(_2226) ? cbSceneParam._m0[41u].w : max(_2226, cbSceneParam._m0[41u].w));
            float _2273 = (cbSceneParam._m0[33u].x - sqrt(((_1884 * _1884) + (_1883 * _1883)) + (_1885 * _1885))) * cbSceneParam._m0[33u].y;
            float _4378 = isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0));
            float _2280 = (isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2087, cbSceneParam._m0[33u].w + _2088), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2087, _2088 - cbSceneParam._m0[33u].z), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2087 - cbSceneParam._m0[33u].z, _2088 - cbSceneParam._m0[33u].w), _2230), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2087 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2088), _2230), 0.0)).x), vec4(0.25)));
            float _2284 = 1.0 - (_2280 * cbSceneParam._m0[34u].x);
            float _2285 = 1.0 - (_2280 * cbSceneParam._m0[34u].y);
            float _2286 = 1.0 - (_2280 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2285) ? _2033 : (isnan(_2033) ? _2285 : min(_2033, _2285));
            frontier_phi_39_38_ladder_1 = isnan(_2284) ? _2032 : (isnan(_2032) ? _2284 : min(_2032, _2284));
            frontier_phi_39_38_ladder_2 = isnan(_2286) ? _2034 : (isnan(_2034) ? _2286 : min(_2034, _2286));
        }
        else
        {
            frontier_phi_39_38_ladder = _2033;
            frontier_phi_39_38_ladder_1 = _2032;
            frontier_phi_39_38_ladder_2 = _2034;
        }
        _2098 = frontier_phi_39_38_ladder_1;
        _2100 = frontier_phi_39_38_ladder;
        _2102 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2098 = _2032;
        _2100 = _2033;
        _2102 = _2034;
    }
    uvec4 _2107 = floatBitsToUint(cbInstanceData._m0[_666 + 5u]);
    uint _2109 = _2107.x * 14u;
    uint _2110 = _2109 + 13u;
    float _2117 = _774 + (-1.0);
    float _2122 = (cbLight._m0[_2110].x * _2117) + 1.0;
    float _2123 = (cbLight._m0[_2110].y * _2117) + 1.0;
    float _2124 = (cbLight._m0[_2110].z * _2117) + 1.0;
    float _2125 = (cbLight._m0[_2110].w * _2117) + 1.0;
    uint _2126 = _2109 + 5u;
    float _2132 = isnan(1.0) ? _2123 : (isnan(_2123) ? 1.0 : min(_2123, 1.0));
    uint _2136 = _2109 + 4u;
    float _2145 = isnan(1.0) ? _2122 : (isnan(_2122) ? 1.0 : min(_2122, 1.0));
    uint _2149 = _2109 | 1u;
    float _2160 = dot(vec3(cbLight._m0[_2109].xyz), vec3(_457, _458, _459));
    float _2163 = dot(vec3(cbLight._m0[_2149].xyz), vec3(_457, _458, _459));
    float _4414 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
    float _4425 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    float _2168 = (isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * 0.3183098733425140380859375;
    float _2170 = (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * 0.3183098733425140380859375;
    float _2177 = ((cbLight._m0[_2126].x * _2132) * _2170) + (((cbLight._m0[_2136].x * _2098) * _2145) * _2168);
    float _2178 = ((_2132 * cbLight._m0[_2126].y) * _2170) + (((cbLight._m0[_2136].y * _2100) * _2145) * _2168);
    float _2179 = ((_2132 * cbLight._m0[_2126].z) * _2170) + (((cbLight._m0[_2136].z * _2102) * _2145) * _2168);
    uvec4 _2183 = floatBitsToUint(cbLight._m0[_2109 + 12u]);
    bool _2185 = _2183.x == 0u;
    float _2287;
    float _2289;
    float _2291;
    if (_2185)
    {
        _2287 = _2177;
        _2289 = _2178;
        _2291 = _2179;
    }
    else
    {
        uint _2295 = _2109 + 6u;
        float _2311 = (dot(vec3(cbLight._m0[_2109 + 2u].xyz), vec3(_457, _458, _459)) * 0.5) + 0.5;
        float _2312 = _2311 * _2311;
        float _4436 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
        float _2313 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _2314 = isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0));
        _2287 = (((cbLight._m0[_2295].x * 0.3183098733425140380859375) * _2313) * _2314) + _2177;
        _2289 = (((cbLight._m0[_2295].y * 0.3183098733425140380859375) * _2313) * _2314) + _2178;
        _2291 = (((cbLight._m0[_2295].z * 0.3183098733425140380859375) * _2313) * _2314) + _2179;
    }
    bool _2294 = _2183.y == 0u;
    float _2349;
    float _2351;
    float _2353;
    if (_2294)
    {
        _2349 = _2287;
        _2351 = _2289;
        _2353 = _2291;
    }
    else
    {
        uint _2522 = _2109 + 7u;
        float _2538 = (dot(vec3(cbLight._m0[_2109 + 3u].xyz), vec3(_457, _458, _459)) * 0.5) + 0.5;
        float _2539 = _2538 * _2538;
        float _4452 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
        float _2540 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _2541 = isnan(1.0) ? _2125 : (isnan(_2125) ? 1.0 : min(_2125, 1.0));
        _2349 = (((cbLight._m0[_2522].x * 0.3183098733425140380859375) * _2540) * _2541) + _2287;
        _2351 = (((cbLight._m0[_2522].y * 0.3183098733425140380859375) * _2540) * _2541) + _2289;
        _2353 = (((cbLight._m0[_2522].z * 0.3183098733425140380859375) * _2540) * _2541) + _2291;
    }
    uint _2356 = _2109 + 8u;
    float _2369 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2109].w)) * _642) * 0.949999988079071044921875);
    float _2370 = _2369 * _2369;
    float _2371 = cbLight._m0[_2109].x + _541;
    float _2372 = cbLight._m0[_2109].y + _542;
    float _2373 = cbLight._m0[_2109].z + _543;
    float _2377 = inversesqrt(dot(vec3(_2371, _2372, _2373), vec3(_2371, _2372, _2373)));
    float _2378 = _2377 * _2371;
    float _2379 = _2377 * _2372;
    float _2380 = _2377 * _2373;
    float _2381 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_2109].xyz));
    float _4468 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
    float _2384 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
    float _4479 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _2385 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
    float _2386 = dot(vec3(_457, _458, _459), vec3(_2378, _2379, _2380));
    float _4490 = isnan(0.0) ? _2386 : (isnan(_2386) ? 0.0 : max(_2386, 0.0));
    float _2389 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
    float _2390 = dot(vec3(cbLight._m0[_2109].xyz), vec3(_2378, _2379, _2380));
    float _4501 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
    float _2394 = _2370 * _2370;
    float _2398 = ((_2389 * _2389) * (_2394 + (-1.0))) + 1.0;
    float _2406 = exp2(log2(1.0 - (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)))) * 5.0);
    float _2407 = 0.959999978542327880859375 - _757;
    float _2409 = 0.959999978542327880859375 - _758;
    float _2410 = 0.959999978542327880859375 - _759;
    float _2417 = 1.0 - _2370;
    float _2428 = (0.5 / (((_2385 * ((_2384 * _2417) + _2370)) + 9.9999999392252902907785028219223e-09) + (((_2385 * _2417) + _2370) * _2384))) * _2384;
    float _4512 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
    float _2430 = (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0))) * (_2394 / ((_2398 * _2398) * 3.141590118408203125));
    uint _2444 = _2109 + 9u;
    float _2455 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2149].w)) * _642) * 0.949999988079071044921875);
    float _2456 = _2455 * _2455;
    float _2457 = cbLight._m0[_2149].x + _541;
    float _2458 = cbLight._m0[_2149].y + _542;
    float _2459 = cbLight._m0[_2149].z + _543;
    float _2463 = inversesqrt(dot(vec3(_2457, _2458, _2459), vec3(_2457, _2458, _2459)));
    float _2464 = _2463 * _2457;
    float _2465 = _2463 * _2458;
    float _2466 = _2463 * _2459;
    float _2467 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_2149].xyz));
    float _4523 = isnan(0.0) ? _2467 : (isnan(_2467) ? 0.0 : max(_2467, 0.0));
    float _2470 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _2471 = dot(vec3(_457, _458, _459), vec3(_2464, _2465, _2466));
    float _4534 = isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : max(_2471, 0.0));
    float _2474 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _2475 = dot(vec3(cbLight._m0[_2149].xyz), vec3(_2464, _2465, _2466));
    float _4545 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
    float _2479 = _2456 * _2456;
    float _2483 = ((_2474 * _2474) * (_2479 + (-1.0))) + 1.0;
    float _2490 = exp2(log2(1.0 - (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * 5.0);
    float _2497 = 1.0 - _2456;
    float _2507 = (0.5 / (((_2385 * ((_2470 * _2497) + _2456)) + 9.9999999392252902907785028219223e-09) + (((_2385 * _2497) + _2456) * _2470))) * _2470;
    float _4556 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
    float _2509 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_2479 / ((_2483 * _2483) * 3.141590118408203125));
    float _2519 = (((((_2490 * _2407) + _760) * cbLight._m0[_2444].x) * _2509) * _2132) + ((((cbLight._m0[_2356].x * _2098) * ((_2406 * _2407) + _760)) * _2430) * _2145);
    float _2520 = (((((_2490 * _2409) + _761) * cbLight._m0[_2444].y) * _2509) * _2132) + ((((cbLight._m0[_2356].y * _2100) * ((_2406 * _2409) + _761)) * _2430) * _2145);
    float _2521 = (((((_2490 * _2410) + _762) * cbLight._m0[_2444].z) * _2509) * _2132) + ((((cbLight._m0[_2356].z * _2102) * ((_2406 * _2410) + _762)) * _2430) * _2145);
    float _2577;
    float _2579;
    float _2581;
    if (_2185)
    {
        _2577 = _2519;
        _2579 = _2520;
        _2581 = _2521;
    }
    else
    {
        uint _2583 = _2109 + 2u;
        uint _2587 = _2109 + 10u;
        float _2601 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2583].w)) * _642) * 0.949999988079071044921875);
        float _2602 = _2601 * _2601;
        float _2603 = cbLight._m0[_2583].x + _541;
        float _2604 = cbLight._m0[_2583].y + _542;
        float _2605 = cbLight._m0[_2583].z + _543;
        float _2609 = inversesqrt(dot(vec3(_2603, _2604, _2605), vec3(_2603, _2604, _2605)));
        float _2610 = _2609 * _2603;
        float _2611 = _2609 * _2604;
        float _2612 = _2609 * _2605;
        float _2613 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_2583].xyz));
        float _4567 = isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : max(_2613, 0.0));
        float _2616 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _2617 = dot(vec3(_457, _458, _459), vec3(_2610, _2611, _2612));
        float _4578 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
        float _2620 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _2621 = dot(vec3(cbLight._m0[_2583].xyz), vec3(_2610, _2611, _2612));
        float _4589 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
        float _2625 = _2602 * _2602;
        float _2629 = ((_2620 * _2620) * (_2625 + (-1.0))) + 1.0;
        float _2636 = exp2(log2(1.0 - (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0)))) * 5.0);
        float _2643 = 1.0 - _2602;
        float _2653 = (0.5 / (((_2385 * ((_2616 * _2643) + _2602)) + 9.9999999392252902907785028219223e-09) + (((_2385 * _2643) + _2602) * _2616))) * _2616;
        float _4600 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
        float _2655 = (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * (_2625 / ((_2629 * _2629) * 3.141590118408203125));
        float _2656 = isnan(1.0) ? _2124 : (isnan(_2124) ? 1.0 : min(_2124, 1.0));
        _2577 = (((((_2636 * _2407) + _760) * cbLight._m0[_2587].x) * _2655) * _2656) + _2519;
        _2579 = (((((_2636 * _2409) + _761) * cbLight._m0[_2587].y) * _2655) * _2656) + _2520;
        _2581 = (((((_2636 * _2410) + _762) * cbLight._m0[_2587].z) * _2655) * _2656) + _2521;
    }
    float _2687;
    float _2689;
    float _2691;
    if (_2294)
    {
        _2687 = _2577;
        _2689 = _2579;
        _2691 = _2581;
    }
    else
    {
        uint _2698 = _2109 + 3u;
        uint _2702 = _2109 + 11u;
        float _2716 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2698].w)) * _642) * 0.949999988079071044921875);
        float _2717 = _2716 * _2716;
        float _2718 = cbLight._m0[_2698].x + _541;
        float _2719 = cbLight._m0[_2698].y + _542;
        float _2720 = cbLight._m0[_2698].z + _543;
        float _2724 = inversesqrt(dot(vec3(_2718, _2719, _2720), vec3(_2718, _2719, _2720)));
        float _2725 = _2724 * _2718;
        float _2726 = _2724 * _2719;
        float _2727 = _2724 * _2720;
        float _2728 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_2698].xyz));
        float _4616 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
        float _2731 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _2732 = dot(vec3(_457, _458, _459), vec3(_2725, _2726, _2727));
        float _4627 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
        float _2735 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _2736 = dot(vec3(cbLight._m0[_2698].xyz), vec3(_2725, _2726, _2727));
        float _4638 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
        float _2740 = _2717 * _2717;
        float _2744 = ((_2735 * _2735) * (_2740 + (-1.0))) + 1.0;
        float _2751 = exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0);
        float _2758 = 1.0 - _2717;
        float _2768 = (0.5 / (((_2385 * ((_2731 * _2758) + _2717)) + 9.9999999392252902907785028219223e-09) + (((_2385 * _2758) + _2717) * _2731))) * _2731;
        float _4649 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
        float _2770 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2740 / ((_2744 * _2744) * 3.141590118408203125));
        float _2771 = isnan(1.0) ? _2125 : (isnan(_2125) ? 1.0 : min(_2125, 1.0));
        _2687 = (((((_2751 * _2407) + _760) * cbLight._m0[_2702].x) * _2770) * _2771) + _2577;
        _2689 = (((((_2751 * _2409) + _761) * cbLight._m0[_2702].y) * _2770) * _2771) + _2579;
        _2691 = (((((_2751 * _2410) + _762) * cbLight._m0[_2702].z) * _2770) * _2771) + _2581;
    }
    float _2836;
    float _2838;
    float _2840;
    float _2842;
    float _2844;
    float _2846;
    if (_2107.y == 0u)
    {
        uvec4 _2792 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2793 = _2792.x;
        uint _2804 = uint((float(_2792.y) * floor(float(uint(cbSceneParam._m0[85u].y * _562) / _2793))) + floor(float(uint(cbSceneParam._m0[85u].x * _561) / _2793)));
        float _2814 = (log2(_1885 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2815 = isnan(0.0) ? _2814 : (isnan(_2814) ? 0.0 : max(_2814, 0.0));
        uint _2818 = uint(isnan(14.0) ? _2815 : (isnan(_2815) ? 14.0 : min(_2815, 14.0)));
        uvec4 _2823 = texelFetch(g_lightClusterGridBuffer, int(((_2818 << 2u) + (_2804 << 6u)) >> 2u));
        uint _2824 = _2823.x;
        uint _2825 = _2792.z;
        float _2908;
        float _2910;
        float _2912;
        float _2914;
        float _2916;
        float _2918;
        if (((((1u << ((_2825 >> 4u) & 15u)) + 4294967295u) & _2824) == 0u) || ((_2825 & 240u) == 0u))
        {
            _2908 = 0.0;
            _2910 = 0.0;
            _2912 = 0.0;
            _2914 = 0.0;
            _2916 = 0.0;
            _2918 = 0.0;
        }
        else
        {
            float _2909;
            float _2911;
            float _2913;
            float _2915;
            float _2917;
            float _2919;
            float _3060 = 0.0;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            float _3064 = 0.0;
            float _3065 = 0.0;
            uint _3066 = 0u;
            uint _3075;
            bool _3076;
            for (;;)
            {
                _3075 = texelFetch(g_lightClassification, int((((_2818 << 5u) + (_2804 << 9u)) + (_3066 << 2u)) >> 2u)).x;
                _3076 = _3075 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3076)
                {
                    frontier_phi_73_pred = _3065;
                    frontier_phi_73_pred_1 = _3064;
                    frontier_phi_73_pred_2 = _3063;
                    frontier_phi_73_pred_3 = _3062;
                    frontier_phi_73_pred_4 = _3061;
                    frontier_phi_73_pred_5 = _3060;
                }
                else
                {
                    float _3205;
                    float _3206;
                    float _3207;
                    float _3208;
                    float _3209;
                    float _3210;
                    uint _3211;
                    _3205 = _3060;
                    _3206 = _3061;
                    _3207 = _3062;
                    _3208 = _3063;
                    _3209 = _3064;
                    _3210 = _3065;
                    _3211 = _3075;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    float _3136;
                    float _3137;
                    for (;;)
                    {
                        uint _3215 = uint(findLSB(_3211)) + (_3066 << 5u);
                        uint _3212 = (_3211 + 4294967295u) & _3211;
                        uint _3217 = _3215 * 48u;
                        vec4 _3231 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3217)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 3u)).x));
                        uint _3237 = (_3215 * 48u) + 4u;
                        vec4 _3250 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3237)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 3u)).x));
                        uint _3256 = (_3215 * 48u) + 8u;
                        vec3 _3267 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3256)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 2u)).x));
                        float _3271 = _3231.x - _1883;
                        float _3272 = _3231.y - _1884;
                        float _3273 = _3231.z - _1885;
                        float _3274 = dot(vec3(_3271, _3272, _3273), vec3(_3271, _3272, _3273));
                        float _3277 = inversesqrt(_3274);
                        float _3278 = _3277 * _3271;
                        float _3279 = _3277 * _3272;
                        float _3280 = _3277 * _3273;
                        float _3281 = dot(vec3(_586, _589, _592), vec3(_3278, _3279, _3280));
                        float _3286 = 1.0 - (_3274 * _3231.w);
                        float _4675 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
                        float _3287 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
                        float _3288 = sqrt(_3274) * _3250.w;
                        float _3291 = 1.39999997615814208984375 / (_3288 + 1.39999997615814208984375);
                        float _3292 = _3291 * _3291;
                        float _3295 = ((1.0 - _3292) * _3281) + _3292;
                        float _3298 = _3288 * _3288;
                        float _3302 = ((isnan(0.0) ? _3295 : (isnan(_3295) ? 0.0 : max(_3295, 0.0))) * _3287) / ((_3298 * 0.699999988079071044921875) + 1.0);
                        float _3306 = (-0.0) - _1883;
                        float _3307 = (-0.0) - _1884;
                        float _3308 = (-0.0) - _1885;
                        float _3312 = inversesqrt(dot(vec3(_3306, _3307, _3308), vec3(_3306, _3307, _3308)));
                        float _3313 = _3312 * _3306;
                        float _3314 = _3312 * _3307;
                        float _3315 = _3312 * _3308;
                        float _3322 = exp2(log2(1.0 / ((_3298 * 3.5) + 5.0)) * 0.25);
                        float _3323 = 1.0 - _790;
                        float _3330 = sqrt(1.0 - ((1.0 - (_3323 * _3323)) * (1.0 - (_3322 * _3322))));
                        float _3331 = _3330 * _3330;
                        float _3332 = _3331 * _3331;
                        float _3333 = _3313 + _3278;
                        float _3334 = _3314 + _3279;
                        float _3335 = _3315 + _3280;
                        float _3339 = inversesqrt(dot(vec3(_3333, _3334, _3335), vec3(_3333, _3334, _3335)));
                        float _3343 = dot(vec3(_586, _589, _592), vec3(_3313, _3314, _3315));
                        float _4691 = isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : max(_3343, 0.0));
                        float _3346 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
                        float _3347 = dot(vec3(_586, _589, _592), vec3(_3339 * _3333, _3339 * _3334, _3339 * _3335));
                        float _4702 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0));
                        float _3350 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
                        float _3354 = ((_3350 * _3350) * (_3332 + (-1.0))) + 1.0;
                        float _3355 = _3291 * _3331;
                        float _3356 = _3355 * _3355;
                        float _3359 = ((1.0 - _3356) * _3281) + _3356;
                        float _4713 = isnan(0.0) ? _3359 : (isnan(_3359) ? 0.0 : max(_3359, 0.0));
                        float _3360 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
                        float _3361 = 1.0 - _3331;
                        float _3371 = (0.5 / (((_3360 * ((_3346 * _3361) + _3331)) + 9.9999999392252902907785028219223e-09) + (((_3360 * _3361) + _3331) * _3346))) * _3360;
                        float _4724 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0));
                        float _3382 = (((_3332 * 3.1415927410125732421875) * (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0)))) / ((_3354 * _3354) * ((_3298 * 2.1991131305694580078125) + 3.141590118408203125))) * _3287;
                        _3135 = (_3302 * _3250.x) + _3208;
                        _3136 = (_3302 * _3250.y) + _3209;
                        _3137 = (_3302 * _3250.z) + _3210;
                        _3132 = (_3382 * _3267.x) + _3205;
                        _3133 = (_3382 * _3267.y) + _3206;
                        _3134 = (_3382 * _3267.z) + _3207;
                        if (_3212 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3205 = _3132;
                            _3206 = _3133;
                            _3207 = _3134;
                            _3208 = _3135;
                            _3209 = _3136;
                            _3210 = _3137;
                            _3211 = _3212;
                        }
                    }
                    frontier_phi_73_pred = _3137;
                    frontier_phi_73_pred_1 = _3136;
                    frontier_phi_73_pred_2 = _3135;
                    frontier_phi_73_pred_3 = _3134;
                    frontier_phi_73_pred_4 = _3133;
                    frontier_phi_73_pred_5 = _3132;
                }
                _2919 = frontier_phi_73_pred;
                _2917 = frontier_phi_73_pred_1;
                _2915 = frontier_phi_73_pred_2;
                _2913 = frontier_phi_73_pred_3;
                _2911 = frontier_phi_73_pred_4;
                _2909 = frontier_phi_73_pred_5;
                uint _3067 = _3066 + 1u;
                if (_3067 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3060 = _2909;
                    _3061 = _2911;
                    _3062 = _2913;
                    _3063 = _2915;
                    _3064 = _2917;
                    _3065 = _2919;
                    _3066 = _3067;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2908 = _2909;
            _2910 = _2911;
            _2912 = _2913;
            _2914 = _2915;
            _2916 = _2917;
            _2918 = _2919;
        }
        uvec4 _2922 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2923 = _2922.z;
        uint _2925 = (_2923 >> 8u) & 15u;
        float _3028;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        float _3038;
        if (((4294967295u << _2925) & _2824) == 0u)
        {
            _3028 = _2908;
            _3030 = _2910;
            _3032 = _2912;
            _3034 = _2914;
            _3036 = _2916;
            _3038 = _2918;
        }
        else
        {
            float _3053 = inversesqrt(dot(vec3(_1883, _1884, _1885), vec3(_1883, _1884, _1885)));
            float _3054 = _3053 * _1883;
            float _3055 = _3053 * _1884;
            float _3056 = _3053 * _1885;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_2925 < ((_2923 >> 12u) & 15u))
            {
                float _3029;
                float _3031;
                float _3033;
                float _3035;
                float _3037;
                float _3039;
                float _3188 = _2908;
                float _3189 = _2910;
                float _3190 = _2912;
                float _3191 = _2914;
                float _3192 = _2916;
                float _3193 = _2918;
                uint _3194 = _2925;
                uint _3203;
                bool _3204;
                for (;;)
                {
                    _3203 = texelFetch(g_lightClassification, int((((_2818 << 5u) + (_2804 << 9u)) + (_3194 << 2u)) >> 2u)).x;
                    _3204 = _3203 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3204)
                    {
                        frontier_phi_84_pred = _3192;
                        frontier_phi_84_pred_1 = _3191;
                        frontier_phi_84_pred_2 = _3190;
                        frontier_phi_84_pred_3 = _3189;
                        frontier_phi_84_pred_4 = _3188;
                        frontier_phi_84_pred_5 = _3193;
                    }
                    else
                    {
                        float _3396;
                        float _3397;
                        float _3398;
                        float _3399;
                        float _3400;
                        float _3401;
                        float _3691;
                        float _3692;
                        float _3693;
                        float _3694;
                        float _3695;
                        float _3696;
                        float _3409 = _3188;
                        float _3410 = _3189;
                        float _3411 = _3190;
                        float _3412 = _3191;
                        float _3413 = _3192;
                        float _3414 = _3193;
                        uint _3415 = _3203;
                        uint _3416;
                        vec4 _3441;
                        float _3442;
                        vec4 _3457;
                        vec3 _3469;
                        vec4 _3484;
                        vec4 _3500;
                        float _3547;
                        bool _3548;
                        for (;;)
                        {
                            uint _3426 = ((_3194 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3415));
                            _3416 = (_3415 + 4294967295u) & _3415;
                            uint _3428 = _3426 * 40u;
                            _3441 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3428)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3428 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3428 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3428 + 3u)).x));
                            _3442 = _3441.w;
                            uint _3444 = (_3426 * 40u) + 4u;
                            _3457 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3444)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 3u)).x));
                            uint _3459 = (_3426 * 40u) + 8u;
                            _3469 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3459)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 2u)).x));
                            uint _3471 = (_3426 * 40u) + 16u;
                            _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            uint _3487 = (_3426 * 40u) + 20u;
                            _3500 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3487)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 3u)).x));
                            uint _3503 = (_3426 * 40u) + 24u;
                            vec4 _3516 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3503)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 3u)).x));
                            uint _3522 = (_3426 * 40u) + 28u;
                            vec4 _3535 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3522)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 3u)).x));
                            _3547 = fma(_1885, _3535.z, fma(_1884, _3535.y, _3535.x * _1883)) + _3535.w;
                            _3548 = !((fma(_1885, _3516.z, fma(_1884, _3516.y, _3516.x * _1883)) + _3516.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3548)
                            {
                                float _3575 = _3441.x - _1883;
                                float _3576 = _3441.y - _1884;
                                float _3577 = _3441.z - _1885;
                                float _3578 = dot(vec3(_3575, _3576, _3577), vec3(_3575, _3576, _3577));
                                float _3581 = inversesqrt(_3578);
                                float _3582 = _3581 * _3575;
                                float _3583 = _3581 * _3576;
                                float _3584 = _3581 * _3577;
                                float _3588 = 1.0 - (_3578 / (_3442 * _3442));
                                float _4735 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                                float _3589 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
                                float _3593 = sqrt(_3578) * _3457.w;
                                float _3595 = 1.39999997615814208984375 / (_3593 + 1.39999997615814208984375);
                                float _3596 = _3595 * _3595;
                                float _3599 = ((1.0 - _3596) * dot(vec3(_3582, _3583, _3584), vec3(_586, _589, _592))) + _3596;
                                float _3602 = _3593 * _3593;
                                float _3606 = (fma(_1885, _3484.z, fma(_1884, _3484.y, _3484.x * _1883)) + _3484.w) / _3547;
                                float _3607 = (fma(_1885, _3500.z, fma(_1884, _3500.y, _3500.x * _1883)) + _3500.w) / _3547;
                                float _3611 = 1.0 - dot(vec2(_3606, _3607), vec2(_3606, _3607));
                                float _4751 = isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0));
                                float _3612 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
                                float _3613 = _3612 * (((isnan(0.0) ? _3599 : (isnan(_3599) ? 0.0 : max(_3599, 0.0))) * _3589) / ((_3602 * 0.699999988079071044921875) + 1.0));
                                float _3625 = exp2(log2(1.0 / ((_3602 * 3.5) + 5.0)) * 0.25);
                                float _3626 = 1.0 - _790;
                                float _3633 = sqrt(1.0 - ((1.0 - (_3626 * _3626)) * (1.0 - (_3625 * _3625))));
                                float _3634 = _3633 * _3633;
                                float _3635 = _3634 * _3634;
                                float _3636 = _3582 - _3054;
                                float _3637 = _3583 - _3055;
                                float _3638 = _3584 - _3056;
                                float _3642 = inversesqrt(dot(vec3(_3636, _3637, _3638), vec3(_3636, _3637, _3638)));
                                float _3646 = dot(vec3(_586, _589, _592), vec3((-0.0) - _3054, (-0.0) - _3055, (-0.0) - _3056));
                                float _4762 = isnan(0.0) ? _3646 : (isnan(_3646) ? 0.0 : max(_3646, 0.0));
                                float _3649 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
                                float _3650 = dot(vec3(_586, _589, _592), vec3(_3642 * _3636, _3642 * _3637, _3642 * _3638));
                                float _4773 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                                float _3653 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
                                float _3657 = ((_3653 * _3653) * (_3635 + (-1.0))) + 1.0;
                                float _3658 = _3595 * _3634;
                                float _3659 = _3658 * _3658;
                                float _3665 = ((1.0 - _3659) * dot(vec3(_586, _589, _592), vec3(_3582, _3583, _3584))) + _3659;
                                float _4784 = isnan(0.0) ? _3665 : (isnan(_3665) ? 0.0 : max(_3665, 0.0));
                                float _3666 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                                float _3667 = 1.0 - _3634;
                                float _3677 = (0.5 / (((_3666 * ((_3649 * _3667) + _3634)) + 9.9999999392252902907785028219223e-09) + (((_3666 * _3667) + _3634) * _3649))) * _3666;
                                float _4795 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3687 = (_3612 * _3589) * (((_3635 * 3.1415927410125732421875) * (isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0)))) / ((_3657 * _3657) * ((_3602 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3613 * _3457.y;
                                frontier_phi_90_pred_1 = _3613 * _3457.x;
                                frontier_phi_90_pred_2 = _3687 * _3469.z;
                                frontier_phi_90_pred_3 = _3687 * _3469.y;
                                frontier_phi_90_pred_4 = _3687 * _3469.x;
                                frontier_phi_90_pred_5 = _3613 * _3457.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3695 = frontier_phi_90_pred;
                            _3694 = frontier_phi_90_pred_1;
                            _3693 = frontier_phi_90_pred_2;
                            _3692 = frontier_phi_90_pred_3;
                            _3691 = frontier_phi_90_pred_4;
                            _3696 = frontier_phi_90_pred_5;
                            _3399 = _3694 + _3412;
                            _3400 = _3695 + _3413;
                            _3401 = _3696 + _3414;
                            _3396 = _3691 + _3409;
                            _3397 = _3692 + _3410;
                            _3398 = _3693 + _3411;
                            if (_3416 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3409 = _3396;
                                _3410 = _3397;
                                _3411 = _3398;
                                _3412 = _3399;
                                _3413 = _3400;
                                _3414 = _3401;
                                _3415 = _3416;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3400;
                        frontier_phi_84_pred_1 = _3399;
                        frontier_phi_84_pred_2 = _3398;
                        frontier_phi_84_pred_3 = _3397;
                        frontier_phi_84_pred_4 = _3396;
                        frontier_phi_84_pred_5 = _3401;
                    }
                    _3037 = frontier_phi_84_pred;
                    _3035 = frontier_phi_84_pred_1;
                    _3033 = frontier_phi_84_pred_2;
                    _3031 = frontier_phi_84_pred_3;
                    _3029 = frontier_phi_84_pred_4;
                    _3039 = frontier_phi_84_pred_5;
                    uint _3195 = _3194 + 1u;
                    if (_3195 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3188 = _3029;
                        _3189 = _3031;
                        _3190 = _3033;
                        _3191 = _3035;
                        _3192 = _3037;
                        _3193 = _3039;
                        _3194 = _3195;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3039;
                frontier_phi_65_66_ladder_1 = _3035;
                frontier_phi_65_66_ladder_2 = _3037;
                frontier_phi_65_66_ladder_3 = _3031;
                frontier_phi_65_66_ladder_4 = _3029;
                frontier_phi_65_66_ladder_5 = _3033;
            }
            else
            {
                frontier_phi_65_66_ladder = _2918;
                frontier_phi_65_66_ladder_1 = _2914;
                frontier_phi_65_66_ladder_2 = _2916;
                frontier_phi_65_66_ladder_3 = _2910;
                frontier_phi_65_66_ladder_4 = _2908;
                frontier_phi_65_66_ladder_5 = _2912;
            }
            _3028 = frontier_phi_65_66_ladder_4;
            _3030 = frontier_phi_65_66_ladder_3;
            _3032 = frontier_phi_65_66_ladder_5;
            _3034 = frontier_phi_65_66_ladder_1;
            _3036 = frontier_phi_65_66_ladder_2;
            _3038 = frontier_phi_65_66_ladder;
        }
        float _3043 = isnan(1.0) ? _774 : (isnan(_774) ? 1.0 : min(_774, 1.0));
        _2836 = (_3043 * _3034) + _2349;
        _2838 = (_3043 * _3036) + _2351;
        _2840 = (_3043 * _3038) + _2353;
        _2842 = ((_3028 * _760) * _3043) + _2687;
        _2844 = ((_3030 * _761) * _3043) + _2689;
        _2846 = ((_3032 * _762) * _3043) + _2691;
    }
    else
    {
        _2836 = _2349;
        _2838 = _2351;
        _2840 = _2353;
        _2842 = _2687;
        _2844 = _2689;
        _2846 = _2691;
    }
    float _4811 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _4822 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _4833 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _4844 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
    float _2864 = ((isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (_2836 + ((isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0))) * _774))) + ((_2842 + ((isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))) * _1613)) * cbPerFrame._m0[3u].x);
    float _2865 = ((isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_2838 + ((isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0))) * _774))) + ((_2844 + ((isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0))) * _1613)) * cbPerFrame._m0[3u].x);
    float _2866 = ((isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0))) * (_2840 + ((isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0))) * _774))) + ((_2846 + ((isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0))) * _1613)) * cbPerFrame._m0[3u].x);
    float _2867 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
    float _2868 = isnan(0.0) ? _2865 : (isnan(_2865) ? 0.0 : max(_2865, 0.0));
    float _2869 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
    float _2874 = cbInstanceData._m0[_666 + 6u].w * (isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0)));
    float _2879 = _561 / cbSceneParam._m0[86u].x;
    float _2880 = _562 / cbSceneParam._m0[86u].y;
    vec4 _2894 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2879, _2880, (log2((isnan(cbSceneParam._m0[77u].w) ? _481 : (isnan(_481) ? cbSceneParam._m0[77u].w : min(_481, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2896 = _2894.x;
    float _2897 = _2894.y;
    float _2898 = _2894.z;
    float _2899 = _2894.w;
    float _2970;
    float _2972;
    float _2974;
    float _2976;
    if (_481 > cbSceneParam._m0[78u].w)
    {
        float _2933 = isnan(_481) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _481 : min(cbSceneParam._m0[80u].w, _481));
        float _2934 = _2933 / _481;
        float _2945 = _2934 * _534;
        float _2946 = _535 * _2934;
        float _2947 = (-0.0) - _2946;
        float _2948 = _2934 * _536;
        float _2950 = (cbSceneParam._m0[77u].w * _2947) / _2933;
        float _2951 = _2950 + cbSceneParam._m0[79u].w;
        float _2952 = cbSceneParam._m0[79u].w - _2946;
        float _2958 = sqrt(((_2945 * _2945) + (_2946 * _2946)) + (_2948 * _2948));
        float _2961 = (1.0 - (cbSceneParam._m0[77u].w / _2933)) * _2958;
        float _2966 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2968 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3145;
        if (abs((_2947 - _2950) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3145 = ((((_2951 > 0.0) ? exp2(_2966 * _2951) : (2.0 - exp2(_2968 * _2951))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2961;
        }
        else
        {
            float _3089 = 1.0 / cbSceneParam._m0[80u].x;
            float _3090 = isnan(_2952) ? _2951 : (isnan(_2951) ? _2952 : max(_2951, _2952));
            float _3091 = isnan(_2952) ? _2951 : (isnan(_2951) ? _2952 : min(_2951, _2952));
            float _3100 = isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : min(_3090, 0.0));
            float _3101 = isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : min(_3091, 0.0));
            _3145 = ((abs(_2958 / _2947) * cbSceneParam._m0[80u].y) * ((((_3100 - _3101) * 2.0) - ((exp2(_2966 * (isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : max(_3090, 0.0)))) - exp2(_2966 * (isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : max(_3091, 0.0))))) * _3089)) - ((exp2(_2968 * _3100) - exp2(_2968 * _3101)) * _3089))) + (_2961 * cbSceneParam._m0[80u].z);
        }
        vec4 _3147 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2879, _2880, 1.0), 0.0);
        float _3156 = exp2((_3145 * (-1.44269502162933349609375)) * (1.0 - _3147.w));
        float _3157 = log2(_3156);
        float _3173 = log2(_2899);
        _2970 = (exp2(_3173 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3157 * cbSceneParam._m0[78u].x)) * _3147.x) / cbSceneParam._m0[78u].x)) + _2896;
        _2972 = (exp2(_3173 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3157 * cbSceneParam._m0[78u].y)) * _3147.y) / cbSceneParam._m0[78u].y)) + _2897;
        _2974 = (exp2(_3173 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3157 * cbSceneParam._m0[78u].z)) * _3147.z) / cbSceneParam._m0[78u].z)) + _2898;
        _2976 = _3156 * _2899;
    }
    else
    {
        _2970 = _2896;
        _2972 = _2897;
        _2974 = _2898;
        _2976 = _2899;
    }
    bool _3183;
    vec4 _2986;
    vec4 _3008;
    float _3010;
    float _3014;
    float _3015;
    float _3016;
    float _3017;
    bool _3027;
    for (;;)
    {
        _2986 = cbMatDynParam._m0[0u];
        float _2988 = roundEven(_2986.y);
        bool _2989 = _2988 == 3.0;
        float _2990 = log2(_2976);
        float _2997 = exp2(_2990 * cbSceneParam._m0[78u].x) * _2867;
        float _2998 = exp2(_2990 * cbSceneParam._m0[78u].y) * _2868;
        float _2999 = exp2(_2990 * cbSceneParam._m0[78u].z) * _2869;
        float _3006 = _550 + (-0.5);
        _3008 = cbMtdParam._m0[1u];
        _3010 = _3008.y * _3006;
        float _3013 = (_2988 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3014 = _3013 * (_2989 ? _2997 : (_2997 + (cbSceneParam._m0[72u].w * _2970)));
        _3015 = _3013 * (_2989 ? _2998 : (_2998 + (cbSceneParam._m0[72u].w * _2972)));
        _3016 = _3013 * (_2989 ? _2999 : (_2999 + (cbSceneParam._m0[72u].w * _2974)));
        _3017 = _3006 * 0.999000012874603271484375;
        _3027 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3027)
        {
            if ((cbInstanceData._m0[_666 + 7u].x + _3017) < 0.5)
            {
                _3183 = true;
                break;
            }
        }
        uint _3124 = _667 + uint(_2986.w);
        if ((cbInstanceData._m0[_3124].w < 1.0) && ((cbInstanceData._m0[_3124].w + _3017) < 0.5))
        {
            _3183 = true;
            break;
        }
        if ((_3010 + _347) < _3008.x)
        {
            _3183 = true;
            break;
        }
        _3183 = false;
        break;
    }
    float _3387;
    if (_3183)
    {
        discard_state = true;
        _3387 = 0.0;
    }
    else
    {
        _3387 = _2874;
    }
    SV_Target.x = _3014;
    SV_Target.y = _3015;
    SV_Target.z = _3016;
    SV_Target.w = _3387;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2874;
    discard_exit();
}


