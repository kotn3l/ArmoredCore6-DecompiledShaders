#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _179 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _203 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _205 = texelFetch(g_InstanceIndexBuffer, int(_203));
    uint _206 = _205.x;
    precise float _207 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _212 = isnan(_207) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _207 : max(0.001000000047497451305389404296875, _207));
    precise float _214 = BLENDWEIGHT.x / _212;
    precise float _215 = BLENDWEIGHT.y / _212;
    precise float _216 = BLENDWEIGHT.z / _212;
    precise float _217 = BLENDWEIGHT.w / _212;
    uvec4 _224 = floatBitsToUint(cbInstanceData._m0[(_206 * 13u) + 4u]);
    uint _225 = _224.x;
    uint _227 = (_225 + uint(float(BLENDINDICES.x))) * 3u;
    uint _234 = _227 + 1u;
    uint _241 = _227 + 2u;
    precise float _248 = _214 * cbObjMatrix._m0[_227].x;
    precise float _249 = _214 * cbObjMatrix._m0[_234].x;
    precise float _250 = _214 * cbObjMatrix._m0[_241].x;
    precise float _251 = _214 * cbObjMatrix._m0[_227].y;
    precise float _252 = _214 * cbObjMatrix._m0[_234].y;
    precise float _253 = _214 * cbObjMatrix._m0[_241].y;
    precise float _254 = _214 * cbObjMatrix._m0[_227].z;
    precise float _255 = _214 * cbObjMatrix._m0[_234].z;
    precise float _256 = _214 * cbObjMatrix._m0[_241].z;
    precise float _257 = _214 * cbObjMatrix._m0[_227].w;
    precise float _258 = _214 * cbObjMatrix._m0[_234].w;
    precise float _259 = _214 * cbObjMatrix._m0[_241].w;
    uint _262 = (_225 + uint(float(BLENDINDICES.y))) * 3u;
    uint _269 = _262 + 1u;
    uint _276 = _262 + 2u;
    precise float _283 = _215 * cbObjMatrix._m0[_262].x;
    precise float _284 = _215 * cbObjMatrix._m0[_269].x;
    precise float _285 = _215 * cbObjMatrix._m0[_276].x;
    precise float _286 = _215 * cbObjMatrix._m0[_262].y;
    precise float _287 = _215 * cbObjMatrix._m0[_269].y;
    precise float _288 = _215 * cbObjMatrix._m0[_276].y;
    precise float _289 = _215 * cbObjMatrix._m0[_262].z;
    precise float _290 = _215 * cbObjMatrix._m0[_269].z;
    precise float _291 = _215 * cbObjMatrix._m0[_276].z;
    precise float _292 = _215 * cbObjMatrix._m0[_262].w;
    precise float _293 = _215 * cbObjMatrix._m0[_269].w;
    precise float _294 = _215 * cbObjMatrix._m0[_276].w;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    uint _309 = (_225 + uint(float(BLENDINDICES.z))) * 3u;
    uint _316 = _309 + 1u;
    uint _323 = _309 + 2u;
    precise float _330 = _216 * cbObjMatrix._m0[_309].x;
    precise float _331 = _216 * cbObjMatrix._m0[_316].x;
    precise float _332 = _216 * cbObjMatrix._m0[_323].x;
    precise float _333 = _216 * cbObjMatrix._m0[_309].y;
    precise float _334 = _216 * cbObjMatrix._m0[_316].y;
    precise float _335 = _216 * cbObjMatrix._m0[_323].y;
    precise float _336 = _216 * cbObjMatrix._m0[_309].z;
    precise float _337 = _216 * cbObjMatrix._m0[_316].z;
    precise float _338 = _216 * cbObjMatrix._m0[_323].z;
    precise float _339 = _216 * cbObjMatrix._m0[_309].w;
    precise float _340 = _216 * cbObjMatrix._m0[_316].w;
    precise float _341 = _216 * cbObjMatrix._m0[_323].w;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    uint _356 = (_225 + uint(float(BLENDINDICES.w))) * 3u;
    uint _363 = _356 + 1u;
    uint _370 = _356 + 2u;
    precise float _377 = _217 * cbObjMatrix._m0[_356].x;
    precise float _378 = _217 * cbObjMatrix._m0[_363].x;
    precise float _379 = _217 * cbObjMatrix._m0[_370].x;
    precise float _380 = _217 * cbObjMatrix._m0[_356].y;
    precise float _381 = _217 * cbObjMatrix._m0[_363].y;
    precise float _382 = _217 * cbObjMatrix._m0[_370].y;
    precise float _383 = _217 * cbObjMatrix._m0[_356].z;
    precise float _384 = _217 * cbObjMatrix._m0[_363].z;
    precise float _385 = _217 * cbObjMatrix._m0[_370].z;
    precise float _386 = _217 * cbObjMatrix._m0[_356].w;
    precise float _387 = _217 * cbObjMatrix._m0[_363].w;
    precise float _388 = _217 * cbObjMatrix._m0[_370].w;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = POSITION.x * _389;
    precise float _402 = POSITION.y * _392;
    precise float _403 = _402 + _401;
    precise float _404 = POSITION.z * _395;
    precise float _405 = _404 + _403;
    precise float _406 = 1.0 * _398;
    precise float _407 = _406 + _405;
    precise float _408 = POSITION.x * _390;
    precise float _409 = POSITION.y * _393;
    precise float _410 = _409 + _408;
    precise float _411 = POSITION.z * _396;
    precise float _412 = _411 + _410;
    precise float _413 = 1.0 * _399;
    precise float _414 = _413 + _412;
    precise float _415 = POSITION.x * _391;
    precise float _416 = POSITION.y * _394;
    precise float _417 = _416 + _415;
    precise float _418 = POSITION.z * _397;
    precise float _419 = _418 + _417;
    precise float _420 = 1.0 * _400;
    precise float _421 = _420 + _419;
    precise float _446 = _407 - cbSceneParam._m0[3u].x;
    precise float _447 = _414 - cbSceneParam._m0[3u].y;
    precise float _448 = _421 - cbSceneParam._m0[3u].z;
    precise float _476 = _446 * cbSceneParam._m0[24u].x;
    precise float _477 = _447 * cbSceneParam._m0[24u].y;
    precise float _478 = _477 + _476;
    precise float _479 = _448 * cbSceneParam._m0[24u].z;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _482 = _481 + _480;
    precise float _483 = _446 * cbSceneParam._m0[25u].x;
    precise float _484 = _447 * cbSceneParam._m0[25u].y;
    precise float _485 = _484 + _483;
    precise float _486 = _448 * cbSceneParam._m0[25u].z;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _489 = _488 + _487;
    precise float _490 = _446 * cbSceneParam._m0[26u].x;
    precise float _491 = _447 * cbSceneParam._m0[26u].y;
    precise float _492 = _491 + _490;
    precise float _493 = _448 * cbSceneParam._m0[26u].z;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _496 = _495 + _494;
    precise float _497 = _446 * cbSceneParam._m0[27u].x;
    precise float _498 = _447 * cbSceneParam._m0[27u].y;
    precise float _499 = _498 + _497;
    precise float _500 = _448 * cbSceneParam._m0[27u].z;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _503 = _502 + _501;
    gl_Position.x = _482;
    gl_Position.y = _489;
    gl_Position.z = _496;
    gl_Position.w = _503;
    POSITION_1.x = _482;
    POSITION_1.y = _489;
    POSITION_1.z = _496;
    POSITION_1.w = _503;
    NORMAL_1.x = fma(_182, _395, fma(_181, _392, _389 * _179));
    NORMAL_1.y = fma(_182, _396, fma(_181, _393, _390 * _179));
    NORMAL_1.z = fma(_182, _397, fma(_181, _394, _391 * _179));
    NORMAL_1.w = float(_206);
    TANGENT_1.x = fma(_193, _395, fma(_192, _392, _389 * _191));
    TANGENT_1.y = fma(_193, _396, fma(_192, _393, _390 * _191));
    TANGENT_1.z = fma(_193, _397, fma(_192, _394, _391 * _191));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
}


