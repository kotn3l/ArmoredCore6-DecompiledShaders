#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Detail4Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail4Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail4Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail4Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail4Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail4Blend_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail4Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail4Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail4Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail4Blend_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1249;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    vec4 _252 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _257 = _252.z;
    float _258 = _252.w;
    float _264 = exp2(log2(_257 * 22.0) * 260.0);
    float _265 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _266 = isnan(1.0) ? _265 : (isnan(_265) ? 1.0 : min(_265, 1.0));
    float _272 = exp2(log2(1.0 - _258) * 10.0);
    vec4 _285 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _310 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _321 = cbMtdParam._m0[9u].x * _310.x;
    float _322 = cbMtdParam._m0[9u].y * _310.y;
    float _323 = cbMtdParam._m0[9u].z * _310.z;
    float _330 = (((cbMtdParam._m0[10u].x * _285.x) - _321) * _272) + _321;
    float _331 = (((cbMtdParam._m0[10u].y * _285.y) - _322) * _272) + _322;
    float _332 = (((cbMtdParam._m0[10u].z * _285.z) - _323) * _272) + _323;
    float _335 = exp2(log2(_258) * 10.0);
    vec4 _347 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _382 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _393 = cbMtdParam._m0[12u].x * _382.x;
    float _394 = cbMtdParam._m0[12u].y * _382.y;
    float _395 = cbMtdParam._m0[12u].z * _382.z;
    vec4 _416 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _421 = _416.w;
    float _424 = ((((((((cbMtdParam._m0[11u].x * _347.x) - _330) * _335) + _330) - _393) * _266) + _393) * 4.55000019073486328125) * _416.x;
    float _426 = ((((((((cbMtdParam._m0[11u].y * _347.y) - _331) * _335) + _331) - _394) * _266) + _394) * 4.55000019073486328125) * _416.y;
    float _428 = ((((((((cbMtdParam._m0[11u].z * _347.z) - _332) * _335) + _332) - _395) * _266) + _395) * 4.55000019073486328125) * _416.z;
    vec4 _445 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    vec4 _467 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _469 = _467.x;
    float _470 = _467.y;
    float _473 = cbMtdParam._m0[13u].x + _467.z;
    float _476 = (((cbMtdParam._m0[13u].y + _445.z) - _473) * _272) + _473;
    vec4 _489 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _513 = texture(sampler2D(C_Detail4Blend_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _515 = _513.x;
    float _516 = _513.y;
    float _519 = cbMtdParam._m0[13u].z + _513.z;
    float _522 = ((((_257 * 2.0) * ((((_489.z - _476) + cbMtdParam._m0[14u].y) * _335) + _476)) - _519) * _266) + _519;
    float _533 = ((_445.x - _469) * _272) + _469;
    float _534 = ((_445.y - _470) * _272) + _470;
    float _549 = (((((((_489.x - _533) * _335) + _533) - _515) * _266) + _515) * 2.0) + (-1.0);
    float _550 = (((((((_489.y - _534) * _335) + _534) - _516) * _266) + _516) * 2.0) + (-1.0);
    float _551 = dot(vec2(_549, _550), vec2(_549, _550));
    float _3956 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _556 = sqrt(1.0 - (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))));
    float _559 = _549 + (cbMtdParam._m0[13u].w * ((_252.x * 2.0) + (-1.0)));
    float _560 = _550 + (cbMtdParam._m0[13u].w * ((_252.y * 2.0) + (-1.0)));
    float _563 = fma(_556, _236, fma(_560, _228 * TANGENT.x, (_214 * _206) * _559));
    float _566 = fma(_556, _237, fma(_560, _228 * TANGENT.y, (_214 * _207) * _559));
    float _569 = fma(_556, _238, fma(_560, _228 * TANGENT.z, (_214 * _208) * _559));
    float _573 = inversesqrt(dot(vec3(_563, _566, _569), vec3(_563, _566, _569)));
    float _574 = _573 * _563;
    float _575 = _573 * _566;
    float _576 = _573 * _569;
    float _3967 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _577 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    float _3978 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _578 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    float _3989 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _579 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
    float _4000 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _580 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _4011 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _581 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
    float _4022 = isnan(0.0) ? cbMtdParam._m0[14u].x : (isnan(cbMtdParam._m0[14u].x) ? 0.0 : max(cbMtdParam._m0[14u].x, 0.0));
    float _582 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
    float _598 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _638 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _648 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _638);
    float _649 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _638);
    float _650 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _638);
    float _654 = inversesqrt(dot(vec3(_648, _649, _650), vec3(_648, _649, _650)));
    float _655 = _648 * _654;
    float _656 = _649 * _654;
    float _657 = _650 * _654;
    float _663 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _664 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _666 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _668 = _666.w;
    float _686 = fma(_576, cbSceneParam._m0[5u].z, fma(_575, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _574));
    float _689 = fma(_576, cbSceneParam._m0[6u].z, fma(_575, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _574));
    float _692 = fma(_576, cbSceneParam._m0[7u].z, fma(_575, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _574));
    vec4 _694 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _696 = _694.x;
    float _708 = (((_694.y - _578) + (_694.w * _578)) * cbMtdParam._m0[3u].x) + _578;
    float _725 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_696 * _696)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _733 = (((cbMatDynParam._m0[15u].x - _582) * cbMatDynParam._m0[15u].w) * _725) + _582;
    float _742 = ((_725 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _708)) + _708;
    uint _766 = uint(roundEven(NORMAL.w)) * 13u;
    uint _768 = (_766 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _774 = (cbMtdParam._m0[0u].x * _579) * cbInstanceData._m0[_768].x;
    float _775 = (cbMtdParam._m0[0u].y * _580) * cbInstanceData._m0[_768].y;
    float _776 = (cbMtdParam._m0[0u].z * _581) * cbInstanceData._m0[_768].z;
    float _4033 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _777 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
    float _4044 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _778 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
    float _4055 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _779 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    vec4 _780 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _785 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _796 = (((_785.x - _733) + (_785.w * _733)) * cbMtdParam._m0[3u].x) + _733;
    float _809 = (cbMtdParam._m0[3u].x * (((_777 * _668) - _777) + _780.x)) + _777;
    float _810 = (cbMtdParam._m0[3u].x * (((_778 * _668) - _778) + _780.y)) + _778;
    float _811 = (cbMtdParam._m0[3u].x * (((_779 * _668) - _779) + _780.z)) + _779;
    vec4 _812 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _825 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_733 * (_579 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_733 * (_580 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_733 * (_581 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _812.z;
    float _829 = _825 * cbMatDynParam._m0[13u].w;
    float _839 = (_829 * (cbMatDynParam._m0[13u].x - _809)) + _809;
    float _840 = (_829 * (cbMatDynParam._m0[13u].y - _810)) + _810;
    float _841 = (_829 * (cbMatDynParam._m0[13u].z - _811)) + _811;
    float _849 = ((_825 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _796)) + _796;
    float _850 = 1.0 - _849;
    float _857 = (_839 + (-0.039999999105930328369140625)) * _849;
    float _858 = (_840 + (-0.039999999105930328369140625)) * _849;
    float _859 = (_841 + (-0.039999999105930328369140625)) * _849;
    float _860 = _857 + 0.039999999105930328369140625;
    float _861 = _858 + 0.039999999105930328369140625;
    float _862 = _859 + 0.039999999105930328369140625;
    vec4 _871 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _663, cbSceneParam._m0[86u].y * _664));
    float _874 = _871.x * TEXCOORD_4;
    float _875 = dot(vec3(_574, _575, _576), vec3(_655, _656, _657));
    float _878 = _875 * 2.0;
    float _882 = (_878 * _574) - _655;
    float _883 = (_878 * _575) - _656;
    float _884 = (_878 * _576) - _657;
    float _888 = abs(dot(vec3(_655, _656, _657), vec3(_574, _575, _576)));
    float _4066 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _890 = sqrt(_742);
    float _903 = exp2((_890 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_890 * 3.0));
    float _909 = (1.0 - _903) * ((_890 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _910 = _903 * _890;
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _942 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _946 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1248;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _973 = fma(_946, cbModelParam._m0[26u].z, fma(_942, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _938));
        float _977 = fma(_946, cbModelParam._m0[27u].z, fma(_942, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _938));
        float _981 = fma(_946, cbModelParam._m0[28u].z, fma(_942, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _938));
        float _1006 = _938 + _574;
        float _1007 = _942 + _575;
        float _1008 = _946 + _576;
        float _1018 = fma(_1008, cbModelParam._m0[26u].z, fma(_1007, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1006)) - _973;
        float _1019 = fma(_1008, cbModelParam._m0[27u].z, fma(_1007, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1006)) - _977;
        float _1020 = fma(_1008, cbModelParam._m0[28u].z, fma(_1007, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1006)) - _981;
        float _1024 = inversesqrt(dot(vec3(_1018, _1019, _1020), vec3(_1018, _1019, _1020)));
        float _1037 = ((_1024 * _1018) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_973 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1038 = ((_1024 * _1019) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_977 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1039 = ((_1024 * _1020) / cbModelParam._m0[34u].z) + ((((((_981 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1042 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1049 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1056 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1063 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        float _1076 = exp2((_1042.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1042.x + (-0.5));
        float _1078 = _1076 * (_1042.y + (-0.5));
        float _1079 = _1076 * (_1042.z + (-0.5));
        float _1086 = exp2((_1049.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1049.x + (-0.5));
        float _1088 = _1086 * (_1049.y + (-0.5));
        float _1089 = _1086 * (_1049.z + (-0.5));
        float _1096 = exp2((_1056.w + (-0.5)) * 20.0) * 2.0;
        float _1097 = _1096 * (_1056.x + (-0.5));
        float _1098 = _1096 * (_1056.y + (-0.5));
        float _1099 = _1096 * (_1056.z + (-0.5));
        float _1106 = exp2((_1063.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1063.x + (-0.5));
        float _1108 = _1106 * (_1063.y + (-0.5));
        float _1109 = _1106 * (_1063.z + (-0.5));
        float _1110 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1111 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1112 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1113 = _1077 * 0.5;
        float _1114 = _1087 * 0.5;
        float _1115 = _1097 * 0.5;
        float _1116 = dot(vec3(_1113, _1114, _1115), vec3(_1113, _1114, _1115));
        float _1121 = (_1116 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1116);
        float _1130 = (dot(vec3(_574, _575, _576), vec3(_1121 * _1113, _1121 * _1114, _1121 * _1115)) + 1.0) * 0.5;
        float _4092 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1140 = sqrt(((_1114 * _1114) + (_1113 * _1113)) + (_1115 * _1115)) / (_1110 + 9.9999997473787516355514526367188e-06);
        float _4103 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
        float _1142 = _1141 * 2.0;
        float _1146 = (1.0 - _1141) / (_1141 + 1.0);
        float _4114 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
        float _1156 = ((((1.0 - _1147) * (_1142 + 2.0)) * exp2(log2(isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))) * (_1142 + 1.0))) + _1147) * _1110;
        float _1157 = _1078 * 0.5;
        float _1158 = _1088 * 0.5;
        float _1159 = _1098 * 0.5;
        float _1160 = dot(vec3(_1157, _1158, _1159), vec3(_1157, _1158, _1159));
        float _1165 = (_1160 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1160);
        float _1173 = (dot(vec3(_574, _575, _576), vec3(_1165 * _1157, _1165 * _1158, _1165 * _1159)) + 1.0) * 0.5;
        float _4125 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1182 = sqrt(((_1158 * _1158) + (_1157 * _1157)) + (_1159 * _1159)) / (_1111 + 9.9999997473787516355514526367188e-06);
        float _4136 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1183 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1184 = _1183 * 2.0;
        float _1188 = (1.0 - _1183) / (_1183 + 1.0);
        float _4147 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1198 = ((((1.0 - _1189) * (_1184 + 2.0)) * exp2(log2(isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * (_1184 + 1.0))) + _1189) * _1111;
        float _1199 = _1079 * 0.5;
        float _1200 = _1089 * 0.5;
        float _1201 = _1099 * 0.5;
        float _1202 = dot(vec3(_1199, _1200, _1201), vec3(_1199, _1200, _1201));
        float _1207 = (_1202 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1202);
        float _1215 = (dot(vec3(_574, _575, _576), vec3(_1207 * _1199, _1207 * _1200, _1207 * _1201)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1224 = sqrt(((_1200 * _1200) + (_1199 * _1199)) + (_1201 * _1201)) / (_1112 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1225 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1226 = _1225 * 2.0;
        float _1230 = (1.0 - _1225) / (_1225 + 1.0);
        float _4180 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1240 = ((((1.0 - _1231) * (_1226 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1226 + 1.0))) + _1231) * _1112;
        _1248 = _1079;
        _1250 = _1078;
        _1251 = _1077;
        _1252 = _1089;
        _1253 = _1088;
        _1254 = _1087;
        _1255 = _1099;
        _1256 = _1098;
        _1257 = _1097;
        _1258 = _1112;
        _1259 = _1111;
        _1260 = _1110;
        _1261 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0)));
        _1262 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0)));
        _1263 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0)));
    }
    else
    {
        _1248 = _1249;
        _1250 = _1249;
        _1251 = _1249;
        _1252 = _1249;
        _1253 = _1249;
        _1254 = _1249;
        _1255 = _1249;
        _1256 = _1249;
        _1257 = _1249;
        _1258 = _1249;
        _1259 = _1249;
        _1260 = _1249;
        _1261 = 0.0;
        _1262 = 0.0;
        _1263 = 0.0;
    }
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1289 = fma(_946, cbModelParam._m0[30u].z, fma(_942, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _938));
        float _1293 = fma(_946, cbModelParam._m0[31u].z, fma(_942, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _938));
        float _1297 = fma(_946, cbModelParam._m0[32u].z, fma(_942, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _938));
        float _1320 = _938 + _574;
        float _1321 = _942 + _575;
        float _1322 = _946 + _576;
        float _1332 = fma(_1322, cbModelParam._m0[30u].z, fma(_1321, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1320)) - _1289;
        float _1333 = fma(_1322, cbModelParam._m0[31u].z, fma(_1321, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1320)) - _1293;
        float _1334 = fma(_1322, cbModelParam._m0[32u].z, fma(_1321, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1320)) - _1297;
        float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
        float _1351 = ((_1338 * _1332) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1289 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1338 * _1333) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1293 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1338 * _1334) / cbModelParam._m0[35u].z) + ((((((_1297 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1362 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1369 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        vec4 _1376 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1351, _1352, _1353), 0.0);
        float _1388 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1389 = _1388 * (_1355.x + (-0.5));
        float _1390 = _1388 * (_1355.y + (-0.5));
        float _1391 = _1388 * (_1355.z + (-0.5));
        float _1398 = exp2((_1362.w + (-0.5)) * 20.0) * 2.0;
        float _1399 = _1398 * (_1362.x + (-0.5));
        float _1400 = _1398 * (_1362.y + (-0.5));
        float _1401 = _1398 * (_1362.z + (-0.5));
        float _1408 = exp2((_1369.w + (-0.5)) * 20.0) * 2.0;
        float _1409 = _1408 * (_1369.x + (-0.5));
        float _1410 = _1408 * (_1369.y + (-0.5));
        float _1411 = _1408 * (_1369.z + (-0.5));
        float _1418 = exp2((_1376.w + (-0.5)) * 20.0) * 2.0;
        float _1419 = _1418 * (_1376.x + (-0.5));
        float _1420 = _1418 * (_1376.y + (-0.5));
        float _1421 = _1418 * (_1376.z + (-0.5));
        float _1422 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = _1389 * 0.5;
        float _1426 = _1399 * 0.5;
        float _1427 = _1409 * 0.5;
        float _1428 = dot(vec3(_1425, _1426, _1427), vec3(_1425, _1426, _1427));
        float _1433 = (_1428 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1428);
        float _1441 = (dot(vec3(_574, _575, _576), vec3(_1433 * _1425, _1433 * _1426, _1433 * _1427)) + 1.0) * 0.5;
        float _4221 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1450 = sqrt(((_1426 * _1426) + (_1425 * _1425)) + (_1427 * _1427)) / (_1422 + 9.9999997473787516355514526367188e-06);
        float _4232 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0));
        float _1452 = _1451 * 2.0;
        float _1456 = (1.0 - _1451) / (_1451 + 1.0);
        float _4243 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
        float _1466 = ((((1.0 - _1457) * (_1452 + 2.0)) * exp2(log2(isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0))) * (_1452 + 1.0))) + _1457) * _1422;
        float _1467 = _1390 * 0.5;
        float _1468 = _1400 * 0.5;
        float _1469 = _1410 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_574, _575, _576), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _4254 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _4265 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _4276 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0))) * (_1494 + 1.0))) + _1499) * _1423;
        float _1509 = _1391 * 0.5;
        float _1510 = _1401 * 0.5;
        float _1511 = _1411 * 0.5;
        float _1512 = dot(vec3(_1509, _1510, _1511), vec3(_1509, _1510, _1511));
        float _1517 = (_1512 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1512);
        float _1525 = (dot(vec3(_574, _575, _576), vec3(_1517 * _1509, _1517 * _1510, _1517 * _1511)) + 1.0) * 0.5;
        float _4287 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1534 = sqrt(((_1510 * _1510) + (_1509 * _1509)) + (_1511 * _1511)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _4298 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1536 = _1535 * 2.0;
        float _1540 = (1.0 - _1535) / (_1535 + 1.0);
        float _4309 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
        float _1550 = ((((1.0 - _1541) * (_1536 + 2.0)) * exp2(log2(isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0))) * (_1536 + 1.0))) + _1541) * _1424;
        _1558 = _1391;
        _1559 = _1390;
        _1560 = _1389;
        _1561 = _1401;
        _1562 = _1400;
        _1563 = _1399;
        _1564 = _1411;
        _1565 = _1410;
        _1566 = _1409;
        _1567 = _1424;
        _1568 = _1423;
        _1569 = _1422;
        _1570 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0)));
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
        _1572 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)));
    }
    else
    {
        _1558 = _1249;
        _1559 = _1249;
        _1560 = _1249;
        _1561 = _1249;
        _1562 = _1249;
        _1563 = _1249;
        _1564 = _1249;
        _1565 = _1249;
        _1566 = _1249;
        _1567 = _1249;
        _1568 = _1249;
        _1569 = _1249;
        _1570 = 0.0;
        _1571 = 0.0;
        _1572 = 0.0;
    }
    float _1582 = (cbModelParam._m0[1u].x * (_1570 - _1261)) + _1261;
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1262)) + _1262;
    float _1584 = (cbModelParam._m0[1u].x * (_1572 - _1263)) + _1263;
    float _1605 = fma(_1584, cbSceneParam._m0[89u].z, fma(_1583, cbSceneParam._m0[89u].y, _1582 * cbSceneParam._m0[89u].x));
    float _1608 = fma(_1584, cbSceneParam._m0[90u].z, fma(_1583, cbSceneParam._m0[90u].y, _1582 * cbSceneParam._m0[90u].x));
    float _1611 = fma(_1584, cbSceneParam._m0[91u].z, fma(_1583, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1582));
    float _1626 = _882 * 0.5;
    float _1627 = _883 * 0.5;
    float _1628 = _884 * 0.5;
    float _1629 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1560, _1563, _1566, _1569));
    float _1632 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1635 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1558, _1561, _1564, _1567));
    float _1666;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1642 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1248, _1252, _1255, _1258));
        float _1646 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1250, _1253, _1256, _1259));
        float _1650 = dot(vec4(_1626, _1627, _1628, 1.0), vec4(_1251, _1254, _1257, _1260));
        float _1657 = dot(vec4(cbModelParam._m0[39u]), vec4(_1626, _1627, _1628, 1.0));
        _1666 = dot(vec3(isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)), isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)), isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1657) ? 0.0 : (isnan(0.0) ? _1657 : max(0.0, _1657))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1666 = 1.0;
    }
    float _1677;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1668 = dot(vec4(cbModelParam._m0[40u]), vec4(_1626, _1627, _1628, 1.0));
        _1677 = dot(vec3(isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)), isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1668) ? 0.0 : (isnan(0.0) ? _1668 : max(0.0, _1668))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1677 = 1.0;
    }
    float _1681 = (_1677 * cbModelParam._m0[1u].x) + (_1666 * (1.0 - cbModelParam._m0[1u].x));
    float _1691 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _742);
    float _1692 = isnan(_1691) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1691 : min(cbModelParam._m0[25u].z, _1691));
    float _1772;
    float _1774;
    float _1776;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1739 = fma(_946, cbModelParam._m0[13u].z, fma(_942, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _938)) + cbModelParam._m0[13u].w;
        float _1743 = fma(_946, cbModelParam._m0[14u].z, fma(_942, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _938)) + cbModelParam._m0[14u].w;
        float _1747 = fma(_946, cbModelParam._m0[15u].z, fma(_942, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _938)) + cbModelParam._m0[15u].w;
        float _1750 = fma(_884, cbModelParam._m0[13u].z, fma(_883, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _882));
        float _1753 = fma(_884, cbModelParam._m0[14u].z, fma(_883, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _882));
        float _1756 = fma(_884, cbModelParam._m0[15u].z, fma(_883, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _882));
        float _1784;
        if (_1750 > 0.0)
        {
            _1784 = abs((1.0 - _1739) / _1750);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1750 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1739 + 1.0) / _1750);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1784 = frontier_phi_16_14_ladder;
        }
        float _1959;
        if (_1753 > 0.0)
        {
            _1959 = abs((1.0 - _1743) / _1753);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1753 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1743 + 1.0) / _1753);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1959 = frontier_phi_25_21_ladder;
        }
        float _2254;
        if (_1756 > 0.0)
        {
            _2254 = abs((1.0 - _1747) / _1756);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1756 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1747 + 1.0) / _1756);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2254 = frontier_phi_37_32_ladder;
        }
        float _2256 = isnan(_1959) ? _1784 : (isnan(_1784) ? _1959 : min(_1784, _1959));
        float _2257 = isnan(_2254) ? _2256 : (isnan(_2256) ? _2254 : min(_2256, _2254));
        float _2261 = (_2257 * _1750) + _1739;
        float _2262 = (_2257 * _1753) + _1743;
        float _2263 = (_2257 * _1756) + _1747;
        float _2264 = _2257 * 9.9999997473787516355514526367188e-05;
        float _2266 = (-1.0) - _2264;
        float _2268 = _2264 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2263 > _2268) || ((_2263 < _2266) || ((_2262 > _2268) || ((_2262 < _2266) || ((_2261 < _2266) || (_2261 > _2268))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2408 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2263, cbModelParam._m0[9u].z, fma(_2262, cbModelParam._m0[9u].y, _2261 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2263, cbModelParam._m0[10u].z, fma(_2262, cbModelParam._m0[10u].y, _2261 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2263, cbModelParam._m0[11u].z, fma(_2262, cbModelParam._m0[11u].y, _2261 * cbModelParam._m0[11u].x))), _1692);
            frontier_phi_15_37_ladder = _2408.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2408.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2408.z * cbModelParam._m0[1u].y;
        }
        _1772 = frontier_phi_15_37_ladder_1;
        _1774 = frontier_phi_15_37_ladder;
        _1776 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1760 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_882, _883, _884), _1692);
        _1772 = _1760.x * cbModelParam._m0[1u].y;
        _1774 = _1760.y * cbModelParam._m0[1u].y;
        _1776 = _1760.z * cbModelParam._m0[1u].y;
    }
    float _1780 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _742);
    float _1781 = isnan(_1780) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1780 : min(cbModelParam._m0[25u].w, _1780));
    float _1874;
    float _1876;
    float _1878;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1838 = fma(_946, cbModelParam._m0[21u].z, fma(_942, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _938)) + cbModelParam._m0[21u].w;
        float _1842 = fma(_946, cbModelParam._m0[22u].z, fma(_942, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _938)) + cbModelParam._m0[22u].w;
        float _1846 = fma(_946, cbModelParam._m0[23u].z, fma(_942, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _938)) + cbModelParam._m0[23u].w;
        float _1849 = fma(_884, cbModelParam._m0[21u].z, fma(_883, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _882));
        float _1852 = fma(_884, cbModelParam._m0[22u].z, fma(_883, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _882));
        float _1855 = fma(_884, cbModelParam._m0[23u].z, fma(_883, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _882));
        float _1964;
        if (_1849 > 0.0)
        {
            _1964 = abs((1.0 - _1838) / _1849);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1849 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1838 + 1.0) / _1849);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1964 = frontier_phi_27_23_ladder;
        }
        float _2281;
        if (_1852 > 0.0)
        {
            _2281 = abs((1.0 - _1842) / _1852);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1852 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1842 + 1.0) / _1852);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2281 = frontier_phi_39_34_ladder;
        }
        float _2619;
        if (_1855 > 0.0)
        {
            _2619 = abs((1.0 - _1846) / _1855);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1855 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1846 + 1.0) / _1855);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2619 = frontier_phi_49_46_ladder;
        }
        float _2621 = isnan(_2281) ? _1964 : (isnan(_1964) ? _2281 : min(_1964, _2281));
        float _2622 = isnan(_2619) ? _2621 : (isnan(_2621) ? _2619 : min(_2621, _2619));
        float _2626 = (_2622 * _1849) + _1838;
        float _2627 = (_2622 * _1852) + _1842;
        float _2628 = (_2622 * _1855) + _1846;
        float _2629 = _2622 * 9.9999997473787516355514526367188e-05;
        float _2630 = (-1.0) - _2629;
        float _2632 = _2629 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2628 > _2632) || ((_2628 < _2630) || ((_2627 > _2632) || ((_2627 < _2630) || ((_2626 < _2630) || (_2626 > _2632))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2750 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2628, cbModelParam._m0[17u].z, fma(_2627, cbModelParam._m0[17u].y, _2626 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2628, cbModelParam._m0[18u].z, fma(_2627, cbModelParam._m0[18u].y, _2626 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2628, cbModelParam._m0[19u].z, fma(_2627, cbModelParam._m0[19u].y, _2626 * cbModelParam._m0[19u].x))), _1781);
            frontier_phi_24_49_ladder = _2750.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2750.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2750.x * cbModelParam._m0[1u].z;
        }
        _1874 = frontier_phi_24_49_ladder_2;
        _1876 = frontier_phi_24_49_ladder_1;
        _1878 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1858 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_882, _883, _884), _1781);
        _1874 = _1858.x * cbModelParam._m0[1u].z;
        _1876 = _1858.y * cbModelParam._m0[1u].z;
        _1878 = _1858.z * cbModelParam._m0[1u].z;
    }
    float _1891 = (((_909 * _860) + _910) * _874) * ((cbModelParam._m0[1u].w * (_1874 - _1772)) + _1772);
    float _1893 = (((_909 * _861) + _910) * _874) * ((cbModelParam._m0[1u].w * (_1876 - _1774)) + _1774);
    float _1895 = (((_909 * _862) + _910) * _874) * ((cbModelParam._m0[1u].w * (_1878 - _1776)) + _1776);
    float _1898 = fma(_1895, cbSceneParam._m0[89u].z, fma(_1893, cbSceneParam._m0[89u].y, _1891 * cbSceneParam._m0[89u].x));
    float _1901 = fma(_1895, cbSceneParam._m0[90u].z, fma(_1893, cbSceneParam._m0[90u].y, _1891 * cbSceneParam._m0[90u].x));
    float _1904 = fma(_1895, cbSceneParam._m0[91u].z, fma(_1893, cbSceneParam._m0[91u].y, _1891 * cbSceneParam._m0[91u].x));
    float _1938 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1942 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1946 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1950 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1951 = _1938 / _1950;
    float _1952 = _1942 / _1950;
    float _1953 = _1946 / _1950;
    float _2100;
    float _2101;
    float _2102;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1980 = ((uint(_1953 > cbSceneParam._m0[59u].y) + uint(_1953 > cbSceneParam._m0[59u].x)) + uint(_1953 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1981 = _1980 + 43u;
        uint _1989 = _1980 + 44u;
        uint _1997 = _1980 + 45u;
        uint _2005 = _1980 + 46u;
        float _2016 = fma(_1950, cbSceneParam._m0[_1981].w, fma(_1946, cbSceneParam._m0[_1981].z, fma(_1942, cbSceneParam._m0[_1981].y, _1938 * cbSceneParam._m0[_1981].x)));
        float _2020 = fma(_1950, cbSceneParam._m0[_1989].w, fma(_1946, cbSceneParam._m0[_1989].z, fma(_1942, cbSceneParam._m0[_1989].y, _1938 * cbSceneParam._m0[_1989].x)));
        float _2028 = fma(_1950, cbSceneParam._m0[_2005].w, fma(_1946, cbSceneParam._m0[_2005].z, fma(_1942, cbSceneParam._m0[_2005].y, _1938 * cbSceneParam._m0[_2005].x)));
        float _2033 = cbSceneParam._m0[33u].z * _2028;
        float _2035 = cbSceneParam._m0[33u].w * _2028;
        float _2038 = fma(_1950, cbSceneParam._m0[_1997].w, fma(_1946, cbSceneParam._m0[_1997].z, fma(_1942, cbSceneParam._m0[_1997].y, _1938 * cbSceneParam._m0[_1997].x))) / _2028;
        float _2086 = (cbSceneParam._m0[33u].x - sqrt(((_1952 * _1952) + (_1951 * _1951)) + (_1953 * _1953))) * cbSceneParam._m0[33u].y;
        float _4435 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2093 = (isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2033 + _2016) / _2028, (_2035 + _2020) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2035 + _2016) / _2028, (_2020 - _2033) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2016 - _2033) / _2028, (_2020 - _2035) / _2028), _2038), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2016 - _2035) / _2028, (_2033 + _2020) / _2028), _2038), 0.0)).x), vec4(0.25)));
        _2100 = 1.0 - (_2093 * cbSceneParam._m0[34u].x);
        _2101 = 1.0 - (_2093 * cbSceneParam._m0[34u].y);
        _2102 = 1.0 - (_2093 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2100 = 1.0;
        _2101 = 1.0;
        _2102 = 1.0;
    }
    float _2166;
    float _2168;
    float _2170;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2154 = fma(_1950, cbSceneParam._m0[63u].w, fma(_1946, cbSceneParam._m0[63u].z, fma(_1942, cbSceneParam._m0[63u].y, _1938 * cbSceneParam._m0[63u].x)));
        float _2155 = fma(_1950, cbSceneParam._m0[60u].w, fma(_1946, cbSceneParam._m0[60u].z, fma(_1942, cbSceneParam._m0[60u].y, _1938 * cbSceneParam._m0[60u].x))) / _2154;
        float _2156 = fma(_1950, cbSceneParam._m0[61u].w, fma(_1946, cbSceneParam._m0[61u].z, fma(_1942, cbSceneParam._m0[61u].y, _1938 * cbSceneParam._m0[61u].x))) / _2154;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2155 >= cbSceneParam._m0[64u].x) && (_2156 >= cbSceneParam._m0[64u].y)) && (_2155 <= cbSceneParam._m0[64u].z)) && (_2156 <= cbSceneParam._m0[64u].w))
        {
            float _2294 = fma(_1950, cbSceneParam._m0[62u].w, fma(_1946, cbSceneParam._m0[62u].z, fma(_1942, cbSceneParam._m0[62u].y, _1938 * cbSceneParam._m0[62u].x))) / _2154;
            float _2298 = isnan(cbSceneParam._m0[41u].w) ? _2294 : (isnan(_2294) ? cbSceneParam._m0[41u].w : max(_2294, cbSceneParam._m0[41u].w));
            float _2341 = (cbSceneParam._m0[33u].x - sqrt(((_1952 * _1952) + (_1951 * _1951)) + (_1953 * _1953))) * cbSceneParam._m0[33u].y;
            float _4451 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
            float _2348 = (isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2155, cbSceneParam._m0[33u].w + _2156), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2155, _2156 - cbSceneParam._m0[33u].z), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2155 - cbSceneParam._m0[33u].z, _2156 - cbSceneParam._m0[33u].w), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2155 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2156), _2298), 0.0)).x), vec4(0.25)));
            float _2352 = 1.0 - (_2348 * cbSceneParam._m0[34u].x);
            float _2353 = 1.0 - (_2348 * cbSceneParam._m0[34u].y);
            float _2354 = 1.0 - (_2348 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2353) ? _2101 : (isnan(_2101) ? _2353 : min(_2101, _2353));
            frontier_phi_36_35_ladder_1 = isnan(_2354) ? _2102 : (isnan(_2102) ? _2354 : min(_2102, _2354));
            frontier_phi_36_35_ladder_2 = isnan(_2352) ? _2100 : (isnan(_2100) ? _2352 : min(_2100, _2352));
        }
        else
        {
            frontier_phi_36_35_ladder = _2101;
            frontier_phi_36_35_ladder_1 = _2102;
            frontier_phi_36_35_ladder_2 = _2100;
        }
        _2166 = frontier_phi_36_35_ladder_2;
        _2168 = frontier_phi_36_35_ladder;
        _2170 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2166 = _2100;
        _2168 = _2101;
        _2170 = _2102;
    }
    uvec4 _2175 = floatBitsToUint(cbInstanceData._m0[_766 + 5u]);
    uint _2177 = _2175.x * 14u;
    uint _2178 = _2177 + 13u;
    float _2185 = _874 + (-1.0);
    float _2190 = (cbLight._m0[_2178].x * _2185) + 1.0;
    float _2191 = (cbLight._m0[_2178].y * _2185) + 1.0;
    float _2192 = (cbLight._m0[_2178].z * _2185) + 1.0;
    float _2193 = (cbLight._m0[_2178].w * _2185) + 1.0;
    uint _2194 = _2177 + 5u;
    float _2200 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2204 = _2177 + 4u;
    float _2213 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2217 = _2177 | 1u;
    float _2228 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_574, _575, _576));
    float _2231 = dot(vec3(cbLight._m0[_2217].xyz), vec3(_574, _575, _576));
    float _4487 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
    float _4498 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
    float _2236 = (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * 0.3183098733425140380859375;
    float _2238 = (isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * 0.3183098733425140380859375;
    float _2245 = ((cbLight._m0[_2194].x * _2200) * _2238) + (((cbLight._m0[_2204].x * _2166) * _2213) * _2236);
    float _2246 = ((_2200 * cbLight._m0[_2194].y) * _2238) + (((cbLight._m0[_2204].y * _2168) * _2213) * _2236);
    float _2247 = ((_2200 * cbLight._m0[_2194].z) * _2238) + (((cbLight._m0[_2204].z * _2170) * _2213) * _2236);
    uvec4 _2251 = floatBitsToUint(cbLight._m0[_2177 + 12u]);
    bool _2253 = _2251.x == 0u;
    float _2355;
    float _2357;
    float _2359;
    if (_2253)
    {
        _2355 = _2245;
        _2357 = _2246;
        _2359 = _2247;
    }
    else
    {
        uint _2363 = _2177 + 6u;
        float _2379 = (dot(vec3(cbLight._m0[_2177 + 2u].xyz), vec3(_574, _575, _576)) * 0.5) + 0.5;
        float _2380 = _2379 * _2379;
        float _4509 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
        float _2381 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _2382 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2355 = (((cbLight._m0[_2363].x * 0.3183098733425140380859375) * _2381) * _2382) + _2245;
        _2357 = (((cbLight._m0[_2363].y * 0.3183098733425140380859375) * _2381) * _2382) + _2246;
        _2359 = (((cbLight._m0[_2363].z * 0.3183098733425140380859375) * _2381) * _2382) + _2247;
    }
    bool _2362 = _2251.y == 0u;
    float _2417;
    float _2419;
    float _2421;
    if (_2362)
    {
        _2417 = _2355;
        _2419 = _2357;
        _2421 = _2359;
    }
    else
    {
        uint _2590 = _2177 + 7u;
        float _2606 = (dot(vec3(cbLight._m0[_2177 + 3u].xyz), vec3(_574, _575, _576)) * 0.5) + 0.5;
        float _2607 = _2606 * _2606;
        float _4525 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
        float _2608 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _2609 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2417 = (((cbLight._m0[_2590].x * 0.3183098733425140380859375) * _2608) * _2609) + _2355;
        _2419 = (((cbLight._m0[_2590].y * 0.3183098733425140380859375) * _2608) * _2609) + _2357;
        _2421 = (((cbLight._m0[_2590].z * 0.3183098733425140380859375) * _2608) * _2609) + _2359;
    }
    uint _2424 = _2177 + 8u;
    float _2437 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _742) * 0.949999988079071044921875);
    float _2438 = _2437 * _2437;
    float _2439 = cbLight._m0[_2177].x + _655;
    float _2440 = cbLight._m0[_2177].y + _656;
    float _2441 = cbLight._m0[_2177].z + _657;
    float _2445 = inversesqrt(dot(vec3(_2439, _2440, _2441), vec3(_2439, _2440, _2441)));
    float _2446 = _2445 * _2439;
    float _2447 = _2445 * _2440;
    float _2448 = _2445 * _2441;
    float _2449 = dot(vec3(_574, _575, _576), vec3(cbLight._m0[_2177].xyz));
    float _4541 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _2452 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
    float _4552 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _2453 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
    float _2454 = dot(vec3(_574, _575, _576), vec3(_2446, _2447, _2448));
    float _4563 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2457 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
    float _2458 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2446, _2447, _2448));
    float _4574 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2462 = _2438 * _2438;
    float _2466 = ((_2457 * _2457) * (_2462 + (-1.0))) + 1.0;
    float _2474 = exp2(log2(1.0 - (isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0)))) * 5.0);
    float _2475 = 0.959999978542327880859375 - _857;
    float _2477 = 0.959999978542327880859375 - _858;
    float _2478 = 0.959999978542327880859375 - _859;
    float _2485 = 1.0 - _2438;
    float _2496 = (0.5 / (((_2453 * ((_2452 * _2485) + _2438)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2485) + _2438) * _2452))) * _2452;
    float _4585 = isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : max(_2496, 0.0));
    float _2498 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * (_2462 / ((_2466 * _2466) * 3.141590118408203125));
    uint _2512 = _2177 + 9u;
    float _2523 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2217].w)) * _742) * 0.949999988079071044921875);
    float _2524 = _2523 * _2523;
    float _2525 = cbLight._m0[_2217].x + _655;
    float _2526 = cbLight._m0[_2217].y + _656;
    float _2527 = cbLight._m0[_2217].z + _657;
    float _2531 = inversesqrt(dot(vec3(_2525, _2526, _2527), vec3(_2525, _2526, _2527)));
    float _2532 = _2531 * _2525;
    float _2533 = _2531 * _2526;
    float _2534 = _2531 * _2527;
    float _2535 = dot(vec3(_574, _575, _576), vec3(cbLight._m0[_2217].xyz));
    float _4596 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
    float _2538 = isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0));
    float _2539 = dot(vec3(_574, _575, _576), vec3(_2532, _2533, _2534));
    float _4607 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
    float _2542 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
    float _2543 = dot(vec3(cbLight._m0[_2217].xyz), vec3(_2532, _2533, _2534));
    float _4618 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2547 = _2524 * _2524;
    float _2551 = ((_2542 * _2542) * (_2547 + (-1.0))) + 1.0;
    float _2558 = exp2(log2(1.0 - (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0)))) * 5.0);
    float _2565 = 1.0 - _2524;
    float _2575 = (0.5 / (((_2453 * ((_2538 * _2565) + _2524)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2565) + _2524) * _2538))) * _2538;
    float _4629 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
    float _2577 = (isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0))) * (_2547 / ((_2551 * _2551) * 3.141590118408203125));
    float _2587 = (((((_2558 * _2475) + _860) * cbLight._m0[_2512].x) * _2577) * _2200) + ((((cbLight._m0[_2424].x * _2166) * ((_2474 * _2475) + _860)) * _2498) * _2213);
    float _2588 = (((((_2558 * _2477) + _861) * cbLight._m0[_2512].y) * _2577) * _2200) + ((((cbLight._m0[_2424].y * _2168) * ((_2474 * _2477) + _861)) * _2498) * _2213);
    float _2589 = (((((_2558 * _2478) + _862) * cbLight._m0[_2512].z) * _2577) * _2200) + ((((cbLight._m0[_2424].z * _2170) * ((_2474 * _2478) + _862)) * _2498) * _2213);
    float _2645;
    float _2647;
    float _2649;
    if (_2253)
    {
        _2645 = _2587;
        _2647 = _2588;
        _2649 = _2589;
    }
    else
    {
        uint _2651 = _2177 + 2u;
        uint _2655 = _2177 + 10u;
        float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2651].w)) * _742) * 0.949999988079071044921875);
        float _2670 = _2669 * _2669;
        float _2671 = cbLight._m0[_2651].x + _655;
        float _2672 = cbLight._m0[_2651].y + _656;
        float _2673 = cbLight._m0[_2651].z + _657;
        float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
        float _2678 = _2677 * _2671;
        float _2679 = _2677 * _2672;
        float _2680 = _2677 * _2673;
        float _2681 = dot(vec3(_574, _575, _576), vec3(cbLight._m0[_2651].xyz));
        float _4640 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
        float _2685 = dot(vec3(_574, _575, _576), vec3(_2678, _2679, _2680));
        float _4651 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2688 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
        float _2689 = dot(vec3(cbLight._m0[_2651].xyz), vec3(_2678, _2679, _2680));
        float _4662 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2693 = _2670 * _2670;
        float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
        float _2704 = exp2(log2(1.0 - (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0)))) * 5.0);
        float _2711 = 1.0 - _2670;
        float _2721 = (0.5 / (((_2453 * ((_2684 * _2711) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2711) + _2670) * _2684))) * _2684;
        float _4673 = isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0));
        float _2723 = (isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
        float _2724 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2645 = (((((_2704 * _2475) + _860) * cbLight._m0[_2655].x) * _2723) * _2724) + _2587;
        _2647 = (((((_2704 * _2477) + _861) * cbLight._m0[_2655].y) * _2723) * _2724) + _2588;
        _2649 = (((((_2704 * _2478) + _862) * cbLight._m0[_2655].z) * _2723) * _2724) + _2589;
    }
    float _2755;
    float _2757;
    float _2759;
    if (_2362)
    {
        _2755 = _2645;
        _2757 = _2647;
        _2759 = _2649;
    }
    else
    {
        uint _2766 = _2177 + 3u;
        uint _2770 = _2177 + 11u;
        float _2784 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2766].w)) * _742) * 0.949999988079071044921875);
        float _2785 = _2784 * _2784;
        float _2786 = cbLight._m0[_2766].x + _655;
        float _2787 = cbLight._m0[_2766].y + _656;
        float _2788 = cbLight._m0[_2766].z + _657;
        float _2792 = inversesqrt(dot(vec3(_2786, _2787, _2788), vec3(_2786, _2787, _2788)));
        float _2793 = _2792 * _2786;
        float _2794 = _2792 * _2787;
        float _2795 = _2792 * _2788;
        float _2796 = dot(vec3(_574, _575, _576), vec3(cbLight._m0[_2766].xyz));
        float _4689 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2799 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
        float _2800 = dot(vec3(_574, _575, _576), vec3(_2793, _2794, _2795));
        float _4700 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0));
        float _2803 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
        float _2804 = dot(vec3(cbLight._m0[_2766].xyz), vec3(_2793, _2794, _2795));
        float _4711 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2808 = _2785 * _2785;
        float _2812 = ((_2803 * _2803) * (_2808 + (-1.0))) + 1.0;
        float _2819 = exp2(log2(1.0 - (isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0)))) * 5.0);
        float _2826 = 1.0 - _2785;
        float _2836 = (0.5 / (((_2453 * ((_2799 * _2826) + _2785)) + 9.9999999392252902907785028219223e-09) + (((_2453 * _2826) + _2785) * _2799))) * _2799;
        float _4722 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
        float _2838 = (isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0))) * (_2808 / ((_2812 * _2812) * 3.141590118408203125));
        float _2839 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2755 = (((((_2819 * _2475) + _860) * cbLight._m0[_2770].x) * _2838) * _2839) + _2645;
        _2757 = (((((_2819 * _2477) + _861) * cbLight._m0[_2770].y) * _2838) * _2839) + _2647;
        _2759 = (((((_2819 * _2478) + _862) * cbLight._m0[_2770].z) * _2838) * _2839) + _2649;
    }
    float _2904;
    float _2906;
    float _2908;
    float _2910;
    float _2912;
    float _2914;
    if (_2175.y == 0u)
    {
        uvec4 _2860 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2861 = _2860.x;
        uint _2872 = uint((float(_2860.y) * floor(float(uint(cbSceneParam._m0[85u].y * _664) / _2861))) + floor(float(uint(cbSceneParam._m0[85u].x * _663) / _2861)));
        float _2882 = (log2(_1953 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2883 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        uint _2886 = uint(isnan(14.0) ? _2883 : (isnan(_2883) ? 14.0 : min(_2883, 14.0)));
        uvec4 _2891 = texelFetch(g_lightClusterGridBuffer, int(((_2886 << 2u) + (_2872 << 6u)) >> 2u));
        uint _2892 = _2891.x;
        uint _2893 = _2860.z;
        float _3057;
        float _3059;
        float _3061;
        float _3063;
        float _3065;
        float _3067;
        if (((((1u << ((_2893 >> 4u) & 15u)) + 4294967295u) & _2892) == 0u) || ((_2893 & 240u) == 0u))
        {
            _3057 = 0.0;
            _3059 = 0.0;
            _3061 = 0.0;
            _3063 = 0.0;
            _3065 = 0.0;
            _3067 = 0.0;
        }
        else
        {
            float _3058;
            float _3060;
            float _3062;
            float _3064;
            float _3066;
            float _3068;
            float _3201 = 0.0;
            float _3202 = 0.0;
            float _3203 = 0.0;
            float _3204 = 0.0;
            float _3205 = 0.0;
            float _3206 = 0.0;
            uint _3207 = 0u;
            uint _3216;
            bool _3217;
            for (;;)
            {
                _3216 = texelFetch(g_lightClassification, int((((_2886 << 5u) + (_2872 << 9u)) + (_3207 << 2u)) >> 2u)).x;
                _3217 = _3216 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3217)
                {
                    frontier_phi_68_pred = _3206;
                    frontier_phi_68_pred_1 = _3205;
                    frontier_phi_68_pred_2 = _3204;
                    frontier_phi_68_pred_3 = _3202;
                    frontier_phi_68_pred_4 = _3201;
                    frontier_phi_68_pred_5 = _3203;
                }
                else
                {
                    float _3325;
                    float _3326;
                    float _3327;
                    float _3328;
                    float _3329;
                    float _3330;
                    uint _3331;
                    _3325 = _3201;
                    _3326 = _3202;
                    _3327 = _3203;
                    _3328 = _3204;
                    _3329 = _3205;
                    _3330 = _3206;
                    _3331 = _3216;
                    float _3257;
                    float _3258;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    for (;;)
                    {
                        uint _3335 = uint(findLSB(_3331)) + (_3207 << 5u);
                        uint _3332 = (_3331 + 4294967295u) & _3331;
                        uint _3337 = _3335 * 48u;
                        vec4 _3351 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3337)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 3u)).x));
                        uint _3357 = (_3335 * 48u) + 4u;
                        vec4 _3370 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3357)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 3u)).x));
                        uint _3376 = (_3335 * 48u) + 8u;
                        vec3 _3387 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3376)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 2u)).x));
                        float _3391 = _3351.x - _1951;
                        float _3392 = _3351.y - _1952;
                        float _3393 = _3351.z - _1953;
                        float _3394 = dot(vec3(_3391, _3392, _3393), vec3(_3391, _3392, _3393));
                        float _3397 = inversesqrt(_3394);
                        float _3398 = _3397 * _3391;
                        float _3399 = _3397 * _3392;
                        float _3400 = _3397 * _3393;
                        float _3401 = dot(vec3(_686, _689, _692), vec3(_3398, _3399, _3400));
                        float _3406 = 1.0 - (_3394 * _3351.w);
                        float _4748 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                        float _3407 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
                        float _3408 = sqrt(_3394) * _3370.w;
                        float _3411 = 1.39999997615814208984375 / (_3408 + 1.39999997615814208984375);
                        float _3412 = _3411 * _3411;
                        float _3415 = ((1.0 - _3412) * _3401) + _3412;
                        float _3418 = _3408 * _3408;
                        float _3421 = ((isnan(0.0) ? _3415 : (isnan(_3415) ? 0.0 : max(_3415, 0.0))) * _3407) / ((_3418 * 0.699999988079071044921875) + 1.0);
                        float _3425 = (-0.0) - _1951;
                        float _3426 = (-0.0) - _1952;
                        float _3427 = (-0.0) - _1953;
                        float _3431 = inversesqrt(dot(vec3(_3425, _3426, _3427), vec3(_3425, _3426, _3427)));
                        float _3432 = _3431 * _3425;
                        float _3433 = _3431 * _3426;
                        float _3434 = _3431 * _3427;
                        float _3441 = exp2(log2(1.0 / ((_3418 * 3.5) + 5.0)) * 0.25);
                        float _3442 = 1.0 - _890;
                        float _3449 = sqrt(1.0 - ((1.0 - (_3442 * _3442)) * (1.0 - (_3441 * _3441))));
                        float _3450 = _3449 * _3449;
                        float _3451 = _3450 * _3450;
                        float _3452 = _3432 + _3398;
                        float _3453 = _3433 + _3399;
                        float _3454 = _3434 + _3400;
                        float _3458 = inversesqrt(dot(vec3(_3452, _3453, _3454), vec3(_3452, _3453, _3454)));
                        float _3462 = dot(vec3(_686, _689, _692), vec3(_3432, _3433, _3434));
                        float _4764 = isnan(0.0) ? _3462 : (isnan(_3462) ? 0.0 : max(_3462, 0.0));
                        float _3465 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
                        float _3466 = dot(vec3(_686, _689, _692), vec3(_3458 * _3452, _3458 * _3453, _3458 * _3454));
                        float _4775 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3469 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
                        float _3473 = ((_3469 * _3469) * (_3451 + (-1.0))) + 1.0;
                        float _3474 = _3411 * _3450;
                        float _3475 = _3474 * _3474;
                        float _3478 = ((1.0 - _3475) * _3401) + _3475;
                        float _4786 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3479 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                        float _3480 = 1.0 - _3450;
                        float _3490 = (0.5 / (((_3479 * ((_3465 * _3480) + _3450)) + 9.9999999392252902907785028219223e-09) + (((_3479 * _3480) + _3450) * _3465))) * _3479;
                        float _4797 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                        float _3501 = (((_3451 * 3.1415927410125732421875) * (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) / ((_3473 * _3473) * ((_3418 * 2.1991131305694580078125) + 3.141590118408203125))) * _3407;
                        _3260 = (_3421 * _3370.x) + _3328;
                        _3261 = (_3421 * _3370.y) + _3329;
                        _3262 = (_3421 * _3370.z) + _3330;
                        _3257 = (_3501 * _3387.x) + _3325;
                        _3258 = (_3501 * _3387.y) + _3326;
                        _3259 = (_3501 * _3387.z) + _3327;
                        if (_3332 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3325 = _3257;
                            _3326 = _3258;
                            _3327 = _3259;
                            _3328 = _3260;
                            _3329 = _3261;
                            _3330 = _3262;
                            _3331 = _3332;
                        }
                    }
                    frontier_phi_68_pred = _3262;
                    frontier_phi_68_pred_1 = _3261;
                    frontier_phi_68_pred_2 = _3260;
                    frontier_phi_68_pred_3 = _3258;
                    frontier_phi_68_pred_4 = _3257;
                    frontier_phi_68_pred_5 = _3259;
                }
                _3068 = frontier_phi_68_pred;
                _3066 = frontier_phi_68_pred_1;
                _3064 = frontier_phi_68_pred_2;
                _3060 = frontier_phi_68_pred_3;
                _3058 = frontier_phi_68_pred_4;
                _3062 = frontier_phi_68_pred_5;
                uint _3208 = _3207 + 1u;
                if (_3208 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3201 = _3058;
                    _3202 = _3060;
                    _3203 = _3062;
                    _3204 = _3064;
                    _3205 = _3066;
                    _3206 = _3068;
                    _3207 = _3208;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3057 = _3058;
            _3059 = _3060;
            _3061 = _3062;
            _3063 = _3064;
            _3065 = _3066;
            _3067 = _3068;
        }
        uvec4 _3071 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3072 = _3071.z;
        uint _3074 = (_3072 >> 8u) & 15u;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        float _3179;
        if (((4294967295u << _3074) & _2892) == 0u)
        {
            _3169 = _3057;
            _3171 = _3059;
            _3173 = _3061;
            _3175 = _3063;
            _3177 = _3065;
            _3179 = _3067;
        }
        else
        {
            float _3194 = inversesqrt(dot(vec3(_1951, _1952, _1953), vec3(_1951, _1952, _1953)));
            float _3195 = _3194 * _1951;
            float _3196 = _3194 * _1952;
            float _3197 = _3194 * _1953;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3074 < ((_3072 >> 12u) & 15u))
            {
                float _3170;
                float _3172;
                float _3174;
                float _3176;
                float _3178;
                float _3180;
                float _3308 = _3057;
                float _3309 = _3059;
                float _3310 = _3061;
                float _3311 = _3063;
                float _3312 = _3065;
                float _3313 = _3067;
                uint _3314 = _3074;
                uint _3323;
                bool _3324;
                for (;;)
                {
                    _3323 = texelFetch(g_lightClassification, int((((_2886 << 5u) + (_2872 << 9u)) + (_3314 << 2u)) >> 2u)).x;
                    _3324 = _3323 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3324)
                    {
                        frontier_phi_74_pred = _3310;
                        frontier_phi_74_pred_1 = _3309;
                        frontier_phi_74_pred_2 = _3308;
                        frontier_phi_74_pred_3 = _3313;
                        frontier_phi_74_pred_4 = _3312;
                        frontier_phi_74_pred_5 = _3311;
                    }
                    else
                    {
                        float _3506;
                        float _3507;
                        float _3508;
                        float _3509;
                        float _3510;
                        float _3511;
                        float _3801;
                        float _3802;
                        float _3803;
                        float _3804;
                        float _3805;
                        float _3806;
                        float _3519 = _3308;
                        float _3520 = _3309;
                        float _3521 = _3310;
                        float _3522 = _3311;
                        float _3523 = _3312;
                        float _3524 = _3313;
                        uint _3525 = _3323;
                        uint _3526;
                        vec4 _3551;
                        float _3552;
                        vec4 _3567;
                        vec3 _3579;
                        vec4 _3594;
                        vec4 _3610;
                        float _3657;
                        bool _3658;
                        for (;;)
                        {
                            uint _3536 = ((_3314 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3525));
                            _3526 = (_3525 + 4294967295u) & _3525;
                            uint _3538 = _3536 * 40u;
                            _3551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 3u)).x));
                            _3552 = _3551.w;
                            uint _3554 = (_3536 * 40u) + 4u;
                            _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3569 = (_3536 * 40u) + 8u;
                            _3579 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x));
                            uint _3581 = (_3536 * 40u) + 16u;
                            _3594 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3581)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 3u)).x));
                            uint _3597 = (_3536 * 40u) + 20u;
                            _3610 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 3u)).x));
                            uint _3613 = (_3536 * 40u) + 24u;
                            vec4 _3626 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3613)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 3u)).x));
                            uint _3632 = (_3536 * 40u) + 28u;
                            vec4 _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            _3657 = fma(_1953, _3645.z, fma(_1952, _3645.y, _3645.x * _1951)) + _3645.w;
                            _3658 = !((fma(_1953, _3626.z, fma(_1952, _3626.y, _3626.x * _1951)) + _3626.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3658)
                            {
                                float _3685 = _3551.x - _1951;
                                float _3686 = _3551.y - _1952;
                                float _3687 = _3551.z - _1953;
                                float _3688 = dot(vec3(_3685, _3686, _3687), vec3(_3685, _3686, _3687));
                                float _3691 = inversesqrt(_3688);
                                float _3692 = _3691 * _3685;
                                float _3693 = _3691 * _3686;
                                float _3694 = _3691 * _3687;
                                float _3698 = 1.0 - (_3688 / (_3552 * _3552));
                                float _4808 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0));
                                float _3699 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                                float _3703 = sqrt(_3688) * _3567.w;
                                float _3705 = 1.39999997615814208984375 / (_3703 + 1.39999997615814208984375);
                                float _3706 = _3705 * _3705;
                                float _3709 = ((1.0 - _3706) * dot(vec3(_3692, _3693, _3694), vec3(_686, _689, _692))) + _3706;
                                float _3712 = _3703 * _3703;
                                float _3716 = (fma(_1953, _3594.z, fma(_1952, _3594.y, _3594.x * _1951)) + _3594.w) / _3657;
                                float _3717 = (fma(_1953, _3610.z, fma(_1952, _3610.y, _3610.x * _1951)) + _3610.w) / _3657;
                                float _3721 = 1.0 - dot(vec2(_3716, _3717), vec2(_3716, _3717));
                                float _4824 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3722 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
                                float _3723 = _3722 * (((isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0))) * _3699) / ((_3712 * 0.699999988079071044921875) + 1.0));
                                float _3735 = exp2(log2(1.0 / ((_3712 * 3.5) + 5.0)) * 0.25);
                                float _3736 = 1.0 - _890;
                                float _3743 = sqrt(1.0 - ((1.0 - (_3736 * _3736)) * (1.0 - (_3735 * _3735))));
                                float _3744 = _3743 * _3743;
                                float _3745 = _3744 * _3744;
                                float _3746 = _3692 - _3195;
                                float _3747 = _3693 - _3196;
                                float _3748 = _3694 - _3197;
                                float _3752 = inversesqrt(dot(vec3(_3746, _3747, _3748), vec3(_3746, _3747, _3748)));
                                float _3756 = dot(vec3(_686, _689, _692), vec3((-0.0) - _3195, (-0.0) - _3196, (-0.0) - _3197));
                                float _4835 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                                float _3759 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
                                float _3760 = dot(vec3(_686, _689, _692), vec3(_3752 * _3746, _3752 * _3747, _3752 * _3748));
                                float _4846 = isnan(0.0) ? _3760 : (isnan(_3760) ? 0.0 : max(_3760, 0.0));
                                float _3763 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                                float _3767 = ((_3763 * _3763) * (_3745 + (-1.0))) + 1.0;
                                float _3768 = _3705 * _3744;
                                float _3769 = _3768 * _3768;
                                float _3775 = ((1.0 - _3769) * dot(vec3(_686, _689, _692), vec3(_3692, _3693, _3694))) + _3769;
                                float _4857 = isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0));
                                float _3776 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
                                float _3777 = 1.0 - _3744;
                                float _3787 = (0.5 / (((_3776 * ((_3759 * _3777) + _3744)) + 9.9999999392252902907785028219223e-09) + (((_3776 * _3777) + _3744) * _3759))) * _3776;
                                float _4868 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3797 = (_3722 * _3699) * (((_3745 * 3.1415927410125732421875) * (isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0)))) / ((_3767 * _3767) * ((_3712 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3797 * _3579.z;
                                frontier_phi_80_pred_1 = _3797 * _3579.y;
                                frontier_phi_80_pred_2 = _3797 * _3579.x;
                                frontier_phi_80_pred_3 = _3723 * _3567.z;
                                frontier_phi_80_pred_4 = _3723 * _3567.y;
                                frontier_phi_80_pred_5 = _3723 * _3567.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3803 = frontier_phi_80_pred;
                            _3802 = frontier_phi_80_pred_1;
                            _3801 = frontier_phi_80_pred_2;
                            _3806 = frontier_phi_80_pred_3;
                            _3805 = frontier_phi_80_pred_4;
                            _3804 = frontier_phi_80_pred_5;
                            _3509 = _3804 + _3522;
                            _3510 = _3805 + _3523;
                            _3511 = _3806 + _3524;
                            _3506 = _3801 + _3519;
                            _3507 = _3802 + _3520;
                            _3508 = _3803 + _3521;
                            if (_3526 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3519 = _3506;
                                _3520 = _3507;
                                _3521 = _3508;
                                _3522 = _3509;
                                _3523 = _3510;
                                _3524 = _3511;
                                _3525 = _3526;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3508;
                        frontier_phi_74_pred_1 = _3507;
                        frontier_phi_74_pred_2 = _3506;
                        frontier_phi_74_pred_3 = _3511;
                        frontier_phi_74_pred_4 = _3510;
                        frontier_phi_74_pred_5 = _3509;
                    }
                    _3174 = frontier_phi_74_pred;
                    _3172 = frontier_phi_74_pred_1;
                    _3170 = frontier_phi_74_pred_2;
                    _3180 = frontier_phi_74_pred_3;
                    _3178 = frontier_phi_74_pred_4;
                    _3176 = frontier_phi_74_pred_5;
                    uint _3315 = _3314 + 1u;
                    if (_3315 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3308 = _3170;
                        _3309 = _3172;
                        _3310 = _3174;
                        _3311 = _3176;
                        _3312 = _3178;
                        _3313 = _3180;
                        _3314 = _3315;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3178;
                frontier_phi_62_63_ladder_1 = _3176;
                frontier_phi_62_63_ladder_2 = _3174;
                frontier_phi_62_63_ladder_3 = _3180;
                frontier_phi_62_63_ladder_4 = _3172;
                frontier_phi_62_63_ladder_5 = _3170;
            }
            else
            {
                frontier_phi_62_63_ladder = _3065;
                frontier_phi_62_63_ladder_1 = _3063;
                frontier_phi_62_63_ladder_2 = _3061;
                frontier_phi_62_63_ladder_3 = _3067;
                frontier_phi_62_63_ladder_4 = _3059;
                frontier_phi_62_63_ladder_5 = _3057;
            }
            _3169 = frontier_phi_62_63_ladder_5;
            _3171 = frontier_phi_62_63_ladder_4;
            _3173 = frontier_phi_62_63_ladder_2;
            _3175 = frontier_phi_62_63_ladder_1;
            _3177 = frontier_phi_62_63_ladder;
            _3179 = frontier_phi_62_63_ladder_3;
        }
        float _3184 = isnan(1.0) ? _874 : (isnan(_874) ? 1.0 : min(_874, 1.0));
        _2904 = (_3184 * _3175) + _2417;
        _2906 = (_3184 * _3177) + _2419;
        _2908 = (_3184 * _3179) + _2421;
        _2910 = ((_3169 * _860) * _3184) + _2755;
        _2912 = ((_3171 * _861) * _3184) + _2757;
        _2914 = ((_3173 * _862) * _3184) + _2759;
    }
    else
    {
        _2904 = _2417;
        _2906 = _2419;
        _2908 = _2421;
        _2910 = _2755;
        _2912 = _2757;
        _2914 = _2759;
    }
    float _2921 = (_850 * _839) * cbMatDynParam._m0[9u].x;
    float _2922 = (_850 * _840) * cbMatDynParam._m0[9u].y;
    float _2923 = (_850 * _841) * cbMatDynParam._m0[9u].z;
    float _2934 = dot(vec3(_574, _575, _576), vec3(0.0, -1.0, 0.0));
    float _4884 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
    float _2937 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
    float _2941 = dot(vec3(_882, _883, _884), vec3(0.0, -1.0, 0.0));
    float _4895 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
    float _2947 = exp2(log2(isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0))) * 4.0);
    float _4906 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
    float _4917 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
    float _4928 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
    float _4939 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _2992 = abs(exp2(log2(_875) * cbMatDynParam._m0[12u].x));
    float _2993 = isnan(0.100000001490116119384765625) ? _2992 : (isnan(_2992) ? 0.100000001490116119384765625 : max(_2992, 0.100000001490116119384765625));
    float _2999 = ((isnan(0.699999988079071044921875) ? _2993 : (isnan(_2993) ? 0.699999988079071044921875 : min(_2993, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _3009 = ((((cbMatDynParam._m0[10u].x * cbPerFrame._m0[3u].x) * ((_2910 + ((isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0))) * _1681)) + (_2947 * cbMatDynParam._m0[11u].x))) + ((isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0))) * ((_2904 + ((isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))) * _874)) + (_2937 * cbMatDynParam._m0[11u].x)))) + cbMatDynParam._m0[7u].x) + (_2999 * (cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x));
    float _3012 = ((((cbMatDynParam._m0[10u].y * cbPerFrame._m0[3u].x) * ((_2912 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1681)) + (_2947 * cbMatDynParam._m0[11u].y))) + ((isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0))) * ((_2906 + ((isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0))) * _874)) + (_2937 * cbMatDynParam._m0[11u].y)))) + cbMatDynParam._m0[7u].y) + (_2999 * (cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y));
    float _3015 = ((((cbMatDynParam._m0[10u].z * cbPerFrame._m0[3u].x) * ((_2914 + ((isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))) * _1681)) + (_2947 * cbMatDynParam._m0[11u].z))) + ((isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0))) * ((_2908 + ((isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0))) * _874)) + (_2937 * cbMatDynParam._m0[11u].z)))) + cbMatDynParam._m0[7u].z) + (_2999 * (cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z));
    float _3023 = cbInstanceData._m0[_766 + 6u].w * (isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0)));
    float _3028 = _663 / cbSceneParam._m0[86u].x;
    float _3029 = _664 / cbSceneParam._m0[86u].y;
    vec4 _3043 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3028, _3029, (log2((isnan(cbSceneParam._m0[77u].w) ? _598 : (isnan(_598) ? cbSceneParam._m0[77u].w : min(_598, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3045 = _3043.x;
    float _3046 = _3043.y;
    float _3047 = _3043.z;
    float _3048 = _3043.w;
    float _3119;
    float _3121;
    float _3123;
    float _3125;
    if (_598 > cbSceneParam._m0[78u].w)
    {
        float _3082 = isnan(_598) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _598 : min(cbSceneParam._m0[80u].w, _598));
        float _3083 = _3082 / _598;
        float _3094 = _3083 * _648;
        float _3095 = _649 * _3083;
        float _3096 = (-0.0) - _3095;
        float _3097 = _3083 * _650;
        float _3099 = (cbSceneParam._m0[77u].w * _3096) / _3082;
        float _3100 = _3099 + cbSceneParam._m0[79u].w;
        float _3101 = cbSceneParam._m0[79u].w - _3095;
        float _3107 = sqrt(((_3094 * _3094) + (_3095 * _3095)) + (_3097 * _3097));
        float _3110 = (1.0 - (cbSceneParam._m0[77u].w / _3082)) * _3107;
        float _3115 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3117 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3270;
        if (abs((_3096 - _3099) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3270 = ((((_3100 > 0.0) ? exp2(_3115 * _3100) : (2.0 - exp2(_3117 * _3100))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3110;
        }
        else
        {
            float _3230 = 1.0 / cbSceneParam._m0[80u].x;
            float _3231 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : max(_3100, _3101));
            float _3232 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : min(_3100, _3101));
            float _3241 = isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : min(_3231, 0.0));
            float _3242 = isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : min(_3232, 0.0));
            _3270 = ((abs(_3107 / _3096) * cbSceneParam._m0[80u].y) * ((((_3241 - _3242) * 2.0) - ((exp2(_3115 * (isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : max(_3231, 0.0)))) - exp2(_3115 * (isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0))))) * _3230)) - ((exp2(_3117 * _3241) - exp2(_3117 * _3242)) * _3230))) + (_3110 * cbSceneParam._m0[80u].z);
        }
        vec4 _3272 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3028, _3029, 1.0), 0.0);
        float _3281 = exp2((_3270 * (-1.44269502162933349609375)) * (1.0 - _3272.w));
        float _3282 = log2(_3281);
        float _3298 = log2(_3048);
        _3119 = (exp2(_3298 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].x)) * _3272.x) / cbSceneParam._m0[78u].x)) + _3045;
        _3121 = (exp2(_3298 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].y)) * _3272.y) / cbSceneParam._m0[78u].y)) + _3046;
        _3123 = (exp2(_3298 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].z)) * _3272.z) / cbSceneParam._m0[78u].z)) + _3047;
        _3125 = _3281 * _3048;
    }
    else
    {
        _3119 = _3045;
        _3121 = _3046;
        _3123 = _3047;
        _3125 = _3048;
    }
    float _3137 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3138 = _3137 == 3.0;
    float _3139 = log2(_3125);
    float _3146 = exp2(_3139 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0)));
    float _3147 = exp2(_3139 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3012 : (isnan(_3012) ? 0.0 : max(_3012, 0.0)));
    float _3148 = exp2(_3139 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0)));
    float _3157 = (_3137 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3157 * (_3138 ? _3146 : (_3146 + (cbSceneParam._m0[72u].w * _3119)));
    SV_Target.y = _3157 * (_3138 ? _3147 : (_3147 + (cbSceneParam._m0[72u].w * _3121)));
    SV_Target.z = _3157 * (_3138 ? _3148 : (_3148 + (cbSceneParam._m0[72u].w * _3123)));
    SV_Target.w = _3023;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3023;
}


