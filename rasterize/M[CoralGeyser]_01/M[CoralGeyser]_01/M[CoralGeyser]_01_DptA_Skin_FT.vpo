#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec2 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_1_1;
layout(location = 3, component = 2) out float TEXCOORD_10;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_10 = 0.0;
    float _185 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _209 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _211 = texelFetch(g_InstanceIndexBuffer, int(_209));
    uint _212 = _211.x;
    float _213 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _218 = isnan(_213) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _213 : max(0.001000000047497451305389404296875, _213));
    float _220 = BLENDWEIGHT.x / _218;
    float _221 = BLENDWEIGHT.y / _218;
    float _222 = BLENDWEIGHT.z / _218;
    float _223 = BLENDWEIGHT.w / _218;
    uvec4 _230 = floatBitsToUint(cbInstanceData._m0[(_212 * 13u) + 4u]);
    uint _231 = _230.x;
    uint _233 = (_231 + uint(float(BLENDINDICES.x))) * 3u;
    uint _240 = _233 + 1u;
    uint _247 = _233 + 2u;
    uint _268 = (_231 + uint(float(BLENDINDICES.y))) * 3u;
    uint _275 = _268 + 1u;
    uint _282 = _268 + 2u;
    uint _315 = (_231 + uint(float(BLENDINDICES.z))) * 3u;
    uint _322 = _315 + 1u;
    uint _329 = _315 + 2u;
    uint _362 = (_231 + uint(float(BLENDINDICES.w))) * 3u;
    uint _369 = _362 + 1u;
    uint _376 = _362 + 2u;
    float _395 = (((cbObjMatrix._m0[_268].x * _221) + (cbObjMatrix._m0[_233].x * _220)) + (cbObjMatrix._m0[_315].x * _222)) + (cbObjMatrix._m0[_362].x * _223);
    float _396 = (((cbObjMatrix._m0[_275].x * _221) + (cbObjMatrix._m0[_240].x * _220)) + (cbObjMatrix._m0[_322].x * _222)) + (cbObjMatrix._m0[_369].x * _223);
    float _397 = (((cbObjMatrix._m0[_282].x * _221) + (cbObjMatrix._m0[_247].x * _220)) + (cbObjMatrix._m0[_329].x * _222)) + (cbObjMatrix._m0[_376].x * _223);
    float _398 = (((cbObjMatrix._m0[_268].y * _221) + (cbObjMatrix._m0[_233].y * _220)) + (cbObjMatrix._m0[_315].y * _222)) + (cbObjMatrix._m0[_362].y * _223);
    float _399 = (((cbObjMatrix._m0[_275].y * _221) + (cbObjMatrix._m0[_240].y * _220)) + (cbObjMatrix._m0[_322].y * _222)) + (cbObjMatrix._m0[_369].y * _223);
    float _400 = (((cbObjMatrix._m0[_282].y * _221) + (cbObjMatrix._m0[_247].y * _220)) + (cbObjMatrix._m0[_329].y * _222)) + (cbObjMatrix._m0[_376].y * _223);
    float _401 = (((cbObjMatrix._m0[_268].z * _221) + (cbObjMatrix._m0[_233].z * _220)) + (cbObjMatrix._m0[_315].z * _222)) + (cbObjMatrix._m0[_362].z * _223);
    float _402 = (((cbObjMatrix._m0[_275].z * _221) + (cbObjMatrix._m0[_240].z * _220)) + (cbObjMatrix._m0[_322].z * _222)) + (cbObjMatrix._m0[_369].z * _223);
    float _403 = (((cbObjMatrix._m0[_282].z * _221) + (cbObjMatrix._m0[_247].z * _220)) + (cbObjMatrix._m0[_329].z * _222)) + (cbObjMatrix._m0[_376].z * _223);
    float _410 = ((((cbObjMatrix._m0[_268].w * _221) + (cbObjMatrix._m0[_233].w * _220)) + (cbObjMatrix._m0[_315].w * _222)) + (cbObjMatrix._m0[_362].w * _223)) + fma(POSITION.z, _401, fma(POSITION.y, _398, _395 * POSITION.x));
    float _414 = ((((cbObjMatrix._m0[_275].w * _221) + (cbObjMatrix._m0[_240].w * _220)) + (cbObjMatrix._m0[_322].w * _222)) + (cbObjMatrix._m0[_369].w * _223)) + fma(POSITION.z, _402, fma(POSITION.y, _399, _396 * POSITION.x));
    float _418 = ((((cbObjMatrix._m0[_282].w * _221) + (cbObjMatrix._m0[_247].w * _220)) + (cbObjMatrix._m0[_329].w * _222)) + (cbObjMatrix._m0[_376].w * _223)) + fma(POSITION.z, _403, fma(POSITION.y, _400, _397 * POSITION.x));
    float _424 = cbSceneParam._m0[3u].x - _410;
    float _425 = cbSceneParam._m0[3u].y - _414;
    float _426 = cbSceneParam._m0[3u].z - _418;
    float _459 = cbMtdParam._m0[18u].y - cbMtdParam._m0[18u].x;
    POSITION_1.x = _410;
    POSITION_1.y = _414;
    POSITION_1.z = _418;
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_188, _401, fma(_187, _398, _395 * _185));
    NORMAL_1.y = fma(_188, _402, fma(_187, _399, _396 * _185));
    NORMAL_1.z = fma(_188, _403, fma(_187, _400, _397 * _185));
    NORMAL_1.w = float(_212);
    TANGENT_1.x = fma(_199, _401, fma(_198, _398, _395 * _197));
    TANGENT_1.y = fma(_199, _402, fma(_198, _399, _396 * _197));
    TANGENT_1.z = fma(_199, _403, fma(_198, _400, _397 * _197));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR_1.w;
    TEXCOORD_1.y = COLOR_1.x;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_10 = ((floatBitsToUint(cbSceneParam._m0[69u]).w != 0u) ? (1.0 - ((sqrt(((_424 * _424) + (_425 * _425)) + (_426 * _426)) - cbMtdParam._m0[18u].x) / (isnan(0.001000000047497451305389404296875) ? _459 : (isnan(_459) ? 0.001000000047497451305389404296875 : max(_459, 0.001000000047497451305389404296875))))) : 0.0) * cbMtdParam._m0[18u].w;
}


