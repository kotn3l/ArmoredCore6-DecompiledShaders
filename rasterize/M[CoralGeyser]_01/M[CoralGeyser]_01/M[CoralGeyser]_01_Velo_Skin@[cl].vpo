#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec2 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_1_1;
layout(location = 6) out vec4 TEXCOORD_11;
layout(location = 7) out vec4 TEXCOORD_12;
layout(location = 8) out vec3 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    float _204 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _228 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _230 = texelFetch(g_InstanceIndexBuffer, int(_228));
    uint _231 = _230.x;
    precise float _232 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _237 = isnan(_232) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _232 : max(0.001000000047497451305389404296875, _232));
    precise float _239 = BLENDWEIGHT.x / _237;
    precise float _240 = BLENDWEIGHT.y / _237;
    precise float _241 = BLENDWEIGHT.z / _237;
    precise float _242 = BLENDWEIGHT.w / _237;
    uvec4 _249 = floatBitsToUint(cbInstanceData._m0[(_231 * 13u) + 4u]);
    uint _250 = _249.x;
    uint _252 = (_250 + uint(float(BLENDINDICES.x))) * 3u;
    uint _259 = _252 + 1u;
    uint _266 = _252 + 2u;
    precise float _273 = _239 * cbObjMatrix._m0[_252].x;
    precise float _274 = _239 * cbObjMatrix._m0[_259].x;
    precise float _275 = _239 * cbObjMatrix._m0[_266].x;
    precise float _276 = _239 * cbObjMatrix._m0[_252].y;
    precise float _277 = _239 * cbObjMatrix._m0[_259].y;
    precise float _278 = _239 * cbObjMatrix._m0[_266].y;
    precise float _279 = _239 * cbObjMatrix._m0[_252].z;
    precise float _280 = _239 * cbObjMatrix._m0[_259].z;
    precise float _281 = _239 * cbObjMatrix._m0[_266].z;
    precise float _282 = _239 * cbObjMatrix._m0[_252].w;
    precise float _283 = _239 * cbObjMatrix._m0[_259].w;
    precise float _284 = _239 * cbObjMatrix._m0[_266].w;
    uint _287 = (_250 + uint(float(BLENDINDICES.y))) * 3u;
    uint _294 = _287 + 1u;
    uint _301 = _287 + 2u;
    precise float _308 = _240 * cbObjMatrix._m0[_287].x;
    precise float _309 = _240 * cbObjMatrix._m0[_294].x;
    precise float _310 = _240 * cbObjMatrix._m0[_301].x;
    precise float _311 = _240 * cbObjMatrix._m0[_287].y;
    precise float _312 = _240 * cbObjMatrix._m0[_294].y;
    precise float _313 = _240 * cbObjMatrix._m0[_301].y;
    precise float _314 = _240 * cbObjMatrix._m0[_287].z;
    precise float _315 = _240 * cbObjMatrix._m0[_294].z;
    precise float _316 = _240 * cbObjMatrix._m0[_301].z;
    precise float _317 = _240 * cbObjMatrix._m0[_287].w;
    precise float _318 = _240 * cbObjMatrix._m0[_294].w;
    precise float _319 = _240 * cbObjMatrix._m0[_301].w;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    uint _334 = (_250 + uint(float(BLENDINDICES.z))) * 3u;
    uint _341 = _334 + 1u;
    uint _348 = _334 + 2u;
    precise float _355 = _241 * cbObjMatrix._m0[_334].x;
    precise float _356 = _241 * cbObjMatrix._m0[_341].x;
    precise float _357 = _241 * cbObjMatrix._m0[_348].x;
    precise float _358 = _241 * cbObjMatrix._m0[_334].y;
    precise float _359 = _241 * cbObjMatrix._m0[_341].y;
    precise float _360 = _241 * cbObjMatrix._m0[_348].y;
    precise float _361 = _241 * cbObjMatrix._m0[_334].z;
    precise float _362 = _241 * cbObjMatrix._m0[_341].z;
    precise float _363 = _241 * cbObjMatrix._m0[_348].z;
    precise float _364 = _241 * cbObjMatrix._m0[_334].w;
    precise float _365 = _241 * cbObjMatrix._m0[_341].w;
    precise float _366 = _241 * cbObjMatrix._m0[_348].w;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    uint _381 = (_250 + uint(float(BLENDINDICES.w))) * 3u;
    uint _388 = _381 + 1u;
    uint _395 = _381 + 2u;
    precise float _402 = _242 * cbObjMatrix._m0[_381].x;
    precise float _403 = _242 * cbObjMatrix._m0[_388].x;
    precise float _404 = _242 * cbObjMatrix._m0[_395].x;
    precise float _405 = _242 * cbObjMatrix._m0[_381].y;
    precise float _406 = _242 * cbObjMatrix._m0[_388].y;
    precise float _407 = _242 * cbObjMatrix._m0[_395].y;
    precise float _408 = _242 * cbObjMatrix._m0[_381].z;
    precise float _409 = _242 * cbObjMatrix._m0[_388].z;
    precise float _410 = _242 * cbObjMatrix._m0[_395].z;
    precise float _411 = _242 * cbObjMatrix._m0[_381].w;
    precise float _412 = _242 * cbObjMatrix._m0[_388].w;
    precise float _413 = _242 * cbObjMatrix._m0[_395].w;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = POSITION.x * _414;
    precise float _427 = POSITION.y * _417;
    precise float _428 = _427 + _426;
    precise float _429 = POSITION.z * _420;
    precise float _430 = _429 + _428;
    precise float _431 = 1.0 * _423;
    precise float _432 = _431 + _430;
    precise float _433 = POSITION.x * _415;
    precise float _434 = POSITION.y * _418;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.z * _421;
    precise float _437 = _436 + _435;
    precise float _438 = 1.0 * _424;
    precise float _439 = _438 + _437;
    precise float _440 = POSITION.x * _416;
    precise float _441 = POSITION.y * _419;
    precise float _442 = _441 + _440;
    precise float _443 = POSITION.z * _422;
    precise float _444 = _443 + _442;
    precise float _445 = 1.0 * _425;
    precise float _446 = _445 + _444;
    float _621 = (((((cbPrevObjMatrix._m0[_287].w * _240) + (cbPrevObjMatrix._m0[_252].w * _239)) + (cbPrevObjMatrix._m0[_334].w * _241)) + (cbPrevObjMatrix._m0[_381].w * _242)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_287].z * _240) + (cbPrevObjMatrix._m0[_252].z * _239)) + (cbPrevObjMatrix._m0[_334].z * _241)) + (cbPrevObjMatrix._m0[_381].z * _242), fma(POSITION.y, (((cbPrevObjMatrix._m0[_287].y * _240) + (cbPrevObjMatrix._m0[_252].y * _239)) + (cbPrevObjMatrix._m0[_334].y * _241)) + (cbPrevObjMatrix._m0[_381].y * _242), ((((cbPrevObjMatrix._m0[_287].x * _240) + (cbPrevObjMatrix._m0[_252].x * _239)) + (cbPrevObjMatrix._m0[_334].x * _241)) + (cbPrevObjMatrix._m0[_381].x * _242)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _622 = (((((cbPrevObjMatrix._m0[_294].w * _240) + (cbPrevObjMatrix._m0[_259].w * _239)) + (cbPrevObjMatrix._m0[_341].w * _241)) + (cbPrevObjMatrix._m0[_388].w * _242)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_294].z * _240) + (cbPrevObjMatrix._m0[_259].z * _239)) + (cbPrevObjMatrix._m0[_341].z * _241)) + (cbPrevObjMatrix._m0[_388].z * _242), fma(POSITION.y, (((cbPrevObjMatrix._m0[_294].y * _240) + (cbPrevObjMatrix._m0[_259].y * _239)) + (cbPrevObjMatrix._m0[_341].y * _241)) + (cbPrevObjMatrix._m0[_388].y * _242), ((((cbPrevObjMatrix._m0[_294].x * _240) + (cbPrevObjMatrix._m0[_259].x * _239)) + (cbPrevObjMatrix._m0[_341].x * _241)) + (cbPrevObjMatrix._m0[_388].x * _242)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _623 = (((((cbPrevObjMatrix._m0[_301].w * _240) + (cbPrevObjMatrix._m0[_266].w * _239)) + (cbPrevObjMatrix._m0[_348].w * _241)) + (cbPrevObjMatrix._m0[_395].w * _242)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_301].z * _240) + (cbPrevObjMatrix._m0[_266].z * _239)) + (cbPrevObjMatrix._m0[_348].z * _241)) + (cbPrevObjMatrix._m0[_395].z * _242), fma(POSITION.y, (((cbPrevObjMatrix._m0[_301].y * _240) + (cbPrevObjMatrix._m0[_266].y * _239)) + (cbPrevObjMatrix._m0[_348].y * _241)) + (cbPrevObjMatrix._m0[_395].y * _242), ((((cbPrevObjMatrix._m0[_301].x * _240) + (cbPrevObjMatrix._m0[_266].x * _239)) + (cbPrevObjMatrix._m0[_348].x * _241)) + (cbPrevObjMatrix._m0[_395].x * _242)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _670 = fma(_207, _420, fma(_206, _417, _414 * _204));
    float _673 = fma(_207, _421, fma(_206, _418, _415 * _204));
    float _676 = fma(_207, _422, fma(_206, _419, _416 * _204));
    precise float _692 = _432 - cbSceneParam._m0[3u].x;
    precise float _693 = _439 - cbSceneParam._m0[3u].y;
    precise float _694 = _446 - cbSceneParam._m0[3u].z;
    precise float _722 = _692 * cbSceneParam._m0[24u].x;
    precise float _723 = _693 * cbSceneParam._m0[24u].y;
    precise float _724 = _723 + _722;
    precise float _725 = _694 * cbSceneParam._m0[24u].z;
    precise float _726 = _725 + _724;
    precise float _727 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _728 = _727 + _726;
    precise float _729 = _692 * cbSceneParam._m0[25u].x;
    precise float _730 = _693 * cbSceneParam._m0[25u].y;
    precise float _731 = _730 + _729;
    precise float _732 = _694 * cbSceneParam._m0[25u].z;
    precise float _733 = _732 + _731;
    precise float _734 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _735 = _734 + _733;
    precise float _736 = _692 * cbSceneParam._m0[26u].x;
    precise float _737 = _693 * cbSceneParam._m0[26u].y;
    precise float _738 = _737 + _736;
    precise float _739 = _694 * cbSceneParam._m0[26u].z;
    precise float _740 = _739 + _738;
    precise float _741 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _742 = _741 + _740;
    precise float _743 = _692 * cbSceneParam._m0[27u].x;
    precise float _744 = _693 * cbSceneParam._m0[27u].y;
    precise float _745 = _744 + _743;
    precise float _746 = _694 * cbSceneParam._m0[27u].z;
    precise float _747 = _746 + _745;
    precise float _748 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _749 = _748 + _747;
    gl_Position.x = _728;
    gl_Position.y = _735;
    gl_Position.z = _742;
    gl_Position.w = _749;
    POSITION_1.x = _728;
    POSITION_1.y = _735;
    POSITION_1.z = _742;
    POSITION_1.w = _749;
    NORMAL_1.x = _670;
    NORMAL_1.y = _673;
    NORMAL_1.z = _676;
    NORMAL_1.w = float(_231);
    TANGENT_1.x = fma(_218, _420, fma(_217, _417, _414 * _216));
    TANGENT_1.y = fma(_218, _421, fma(_217, _418, _415 * _216));
    TANGENT_1.z = fma(_218, _422, fma(_217, _419, _416 * _216));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR_1.w;
    TEXCOORD_1.y = COLOR_1.x;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_11.x = _728;
    TEXCOORD_11.y = _735;
    TEXCOORD_11.z = _742;
    TEXCOORD_11.w = _749;
    TEXCOORD_12.x = fma(_623, cbSceneParam._m0[29u].z, fma(_622, cbSceneParam._m0[29u].y, _621 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_623, cbSceneParam._m0[30u].z, fma(_622, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _621)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_623, cbSceneParam._m0[31u].z, fma(_622, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _621)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_623, cbSceneParam._m0[32u].z, fma(_622, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _621)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _670;
    TEXCOORD_13.y = _673;
    TEXCOORD_13.z = _676;
}


