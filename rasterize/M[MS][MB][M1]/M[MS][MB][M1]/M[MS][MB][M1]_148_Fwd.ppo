#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1417;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _241 = _240 * _232;
    float _242 = _240 * _233;
    float _243 = _240 * _234;
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = _247 * NORMAL.x;
    float _249 = _247 * NORMAL.y;
    float _250 = _247 * NORMAL.z;
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _255 = _254 * TANGENT.x;
    float _256 = _254 * TANGENT.y;
    float _257 = _254 * TANGENT.z;
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3741 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3752 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3763 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    uint _279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _284 = _279 + 1u;
    uint _288 = _279 + 2u;
    float _297 = sqrt(((cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x)) + (cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x));
    float _298 = _297 * TEXCOORD.z;
    float _299 = _297 * TEXCOORD.w;
    vec4 _312 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _298) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _299) + cbTextureTilingScale._m0[13u].w));
    vec4 _336 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _341 = _336.x * cbMtdParam._m0[11u].x;
    float _342 = _336.y * cbMtdParam._m0[11u].y;
    float _343 = _336.z * cbMtdParam._m0[11u].z;
    vec4 _362 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _298) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _299) + cbTextureTilingScale._m0[5u].w));
    vec4 _398 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _400 = _398.x;
    float _412 = dot(vec4(_400, _398.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_400 - _412) * cbMtdParam._m0[24u].y) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3774 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
    float _437 = (_430 * ((_362.x * cbMtdParam._m0[12u].x) - _341)) + _341;
    float _438 = (_430 * ((_362.y * cbMtdParam._m0[12u].y) - _342)) + _342;
    float _439 = (_430 * ((_362.z * cbMtdParam._m0[12u].z) - _343)) + _343;
    float _443 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _312.x) * _437;
    float _446 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _312.y) * _438;
    float _449 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _312.z) * _439;
    float _456 = ((_437 - _443) * (isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0)))) + _443;
    float _457 = ((_438 - _446) * (isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0)))) + _446;
    float _458 = ((_439 - _449) * (isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0)))) + _449;
    vec4 _477 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _298) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _299) + cbTextureTilingScale._m0[14u].w));
    vec4 _497 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _298) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _299) + cbTextureTilingScale._m0[20u].w));
    vec4 _524 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _298) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _299) + cbTextureTilingScale._m0[4u].w));
    vec4 _541 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _543 = _541.x;
    float _544 = _541.y;
    float _545 = _541.z;
    float _554 = ((_524.z - _545) * _430) + _545;
    float _557 = ((((_524.x - _543) * _430) + _543) * 2.0) + (-1.0);
    float _558 = ((((_524.y - _544) * _430) + _544) * 2.0) + (-1.0);
    float _559 = dot(vec2(_557, _558), vec2(_557, _558));
    float _3785 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _564 = sqrt(1.0 - (isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0))));
    float _567 = _557 + ((((_497.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _568 = _558 + ((((_497.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _571 = fma(_564, _248, fma(_568, _255, _567 * _241));
    float _574 = fma(_564, _249, fma(_568, _256, _567 * _242));
    float _577 = fma(_564, _250, fma(_568, _257, _567 * _243));
    float _581 = inversesqrt(dot(vec3(_571, _574, _577), vec3(_571, _574, _577)));
    vec4 _597 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _623 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _298) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _299) + cbTextureTilingScale._m0[11u].w));
    float _625 = _623.x;
    float _626 = 1.0 - _625;
    float _632 = (cbMtdParam._m0[19u].x + dot(vec4(_581 * _571, _581 * _574, _581 * _577, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_625 - _626) * cbMtdParam._m0[24u].z) + _626) * cbMtdParam._m0[21u].z);
    float _3796 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _633 = isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0));
    float _635 = (-0.0) - cbMtdParam._m0[24u].x;
    float _637 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _638 = isnan(1.0) ? _637 : (isnan(_637) ? 1.0 : min(_637, 1.0));
    float _645 = _633 - ((_633 * TEXCOORD_8.x) * _638);
    float _646 = _633 - ((_633 * TEXCOORD_8.y) * _638);
    float _647 = _633 - ((_633 * TEXCOORD_8.z) * _638);
    float _654 = (_645 * ((_477.x * cbMtdParam._m0[18u].x) - _456)) + _456;
    float _655 = (_646 * ((_477.y * cbMtdParam._m0[18u].y) - _457)) + _457;
    float _656 = (_647 * ((_477.z * cbMtdParam._m0[18u].z) - _458)) + _458;
    vec4 _668 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _298) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _299) + cbTextureTilingScale._m0[19u].w));
    float _670 = _668.x;
    float _671 = 1.0 - _670;
    float _697 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_670 - _671) * cbMtdParam._m0[24u].w) + _671) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3817 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _698 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    float _706 = ((((cbMtdParam._m0[10u].x - _654) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _698) + _654;
    float _707 = ((((cbMtdParam._m0[10u].y - _655) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _698) + _655;
    float _708 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _656)) * _698) + _656;
    vec4 _734 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _736 = _734.x;
    float _754 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _298) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _299) + cbTextureTilingScale._m0[9u].w)).x - _736) * _430) + _736;
    float _758 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _754) * cbMtdParam._m0[19u].z) + _754;
    float _760 = _758 - (_758 * _645);
    float _762 = _760 - (_760 * _698);
    float _767 = (((_497.z - _554) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _554;
    vec4 _781 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _298) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _299) + cbTextureTilingScale._m0[15u].w));
    float _788 = (_781.x * 2.0) + (-1.0);
    float _789 = (_781.y * 2.0) + (-1.0);
    float _790 = dot(vec2(_788, _789), vec2(_788, _789));
    float _3828 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _798 = ((_781.z - _767) * _645) + _767;
    float _801 = ((cbMtdParam._m0[23u].y - _798) * _698) + _798;
    vec4 _820 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _298) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _299) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _826 = (_820.x * 2.0) + (-1.0);
    float _827 = (_820.y * 2.0) + (-1.0);
    float _828 = dot(vec2(_826, _827), vec2(_826, _827));
    float _3839 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _843 = ((sqrt(1.0 - (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0)))) - _564) * _647) + _564;
    float _846 = (((_788 - _567) * _645) + _567) + (cbMtdParam._m0[21u].x * _567);
    float _847 = (((_789 - _568) * _646) + _568) + (cbMtdParam._m0[21u].x * _568);
    float _858 = (((_826 - _846) + (_846 * cbMtdParam._m0[22u].z)) * _698) + _846;
    float _859 = (((_827 - _847) + (_847 * cbMtdParam._m0[22u].z)) * _698) + _847;
    float _860 = (_698 * (sqrt(1.0 - (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0)))) - _843)) + _843;
    float _864 = cbMtdParam._m0[22u].x + _597.w;
    float _867 = fma(_860, _248, fma(_859, _255, _858 * _241));
    float _870 = fma(_860, _249, fma(_859, _256, _858 * _242));
    float _873 = fma(_860, _250, fma(_859, _257, _858 * _243));
    float _877 = inversesqrt(dot(vec3(_867, _870, _873), vec3(_867, _870, _873)));
    float _878 = _877 * _867;
    float _879 = _877 * _870;
    float _880 = _877 * _873;
    float _3850 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _881 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _3861 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _3872 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _3883 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _3894 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _3905 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _886 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _900 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _950 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _940);
    float _951 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _940);
    float _952 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _940);
    float _956 = inversesqrt(dot(vec3(_950, _951, _952), vec3(_950, _951, _952)));
    float _957 = _950 * _956;
    float _958 = _951 * _956;
    float _959 = _952 * _956;
    float _965 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _966 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _984 = fma(_880, cbSceneParam._m0[5u].z, fma(_879, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _878));
    float _987 = fma(_880, cbSceneParam._m0[6u].z, fma(_879, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _878));
    float _990 = fma(_880, cbSceneParam._m0[7u].z, fma(_879, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _878));
    uint _1004 = (_279 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1010 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0)))) * cbInstanceData._m0[_1004].x;
    float _1011 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0)))) * cbInstanceData._m0[_1004].y;
    float _1012 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0)))) * cbInstanceData._m0[_1004].z;
    float _3916 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1013 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _3927 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1014 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _3938 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1015 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    float _1016 = 1.0 - _886;
    float _1017 = _1013 * _1016;
    float _1018 = _1014 * _1016;
    float _1019 = _1015 * _1016;
    float _1024 = (_1013 + (-0.039999999105930328369140625)) * _886;
    float _1025 = (_1014 + (-0.039999999105930328369140625)) * _886;
    float _1026 = (_1015 + (-0.039999999105930328369140625)) * _886;
    float _1027 = _1024 + 0.039999999105930328369140625;
    float _1029 = _1025 + 0.039999999105930328369140625;
    float _1030 = _1026 + 0.039999999105930328369140625;
    vec4 _1039 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _965, cbSceneParam._m0[86u].y * _966));
    float _1043 = ((isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0))) * TEXCOORD_5.w) * _1039.x;
    float _1044 = dot(vec3(_878, _879, _880), vec3(_957, _958, _959));
    float _1047 = _1044 * 2.0;
    float _1051 = (_1047 * _878) - _957;
    float _1052 = (_1047 * _879) - _958;
    float _1053 = (_1047 * _880) - _959;
    float _1057 = abs(dot(vec3(_957, _958, _959), vec3(_878, _879, _880)));
    float _3949 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _1059 = sqrt(_881);
    float _1072 = exp2((_1059 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1059 * 3.0));
    float _1078 = (1.0 - _1072) * ((_1059 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1079 = _1072 * _1059;
    float _1107 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1111 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1115 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1416;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1141 = fma(_1115, cbModelParam._m0[26u].z, fma(_1111, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1107));
        float _1145 = fma(_1115, cbModelParam._m0[27u].z, fma(_1111, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1107));
        float _1149 = fma(_1115, cbModelParam._m0[28u].z, fma(_1111, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1107));
        float _1174 = _1107 + _878;
        float _1175 = _1111 + _879;
        float _1176 = _1115 + _880;
        float _1186 = fma(_1176, cbModelParam._m0[26u].z, fma(_1175, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1174)) - _1141;
        float _1187 = fma(_1176, cbModelParam._m0[27u].z, fma(_1175, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1174)) - _1145;
        float _1188 = fma(_1176, cbModelParam._m0[28u].z, fma(_1175, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1174)) - _1149;
        float _1192 = inversesqrt(dot(vec3(_1186, _1187, _1188), vec3(_1186, _1187, _1188)));
        float _1205 = ((_1192 * _1186) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1141 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1206 = ((_1192 * _1187) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1145 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1207 = ((_1192 * _1188) / cbModelParam._m0[34u].z) + ((((((_1149 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1210 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1205, _1206, _1207), 0.0);
        vec4 _1217 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1205, _1206, _1207), 0.0);
        vec4 _1224 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1205, _1206, _1207), 0.0);
        vec4 _1231 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1205, _1206, _1207), 0.0);
        float _1244 = exp2((_1210.w + (-0.5)) * 20.0) * 2.0;
        float _1245 = _1244 * (_1210.x + (-0.5));
        float _1246 = _1244 * (_1210.y + (-0.5));
        float _1247 = _1244 * (_1210.z + (-0.5));
        float _1254 = exp2((_1217.w + (-0.5)) * 20.0) * 2.0;
        float _1255 = _1254 * (_1217.x + (-0.5));
        float _1256 = _1254 * (_1217.y + (-0.5));
        float _1257 = _1254 * (_1217.z + (-0.5));
        float _1264 = exp2((_1224.w + (-0.5)) * 20.0) * 2.0;
        float _1265 = _1264 * (_1224.x + (-0.5));
        float _1266 = _1264 * (_1224.y + (-0.5));
        float _1267 = _1264 * (_1224.z + (-0.5));
        float _1274 = exp2((_1231.w + (-0.5)) * 20.0) * 2.0;
        float _1275 = _1274 * (_1231.x + (-0.5));
        float _1276 = _1274 * (_1231.y + (-0.5));
        float _1277 = _1274 * (_1231.z + (-0.5));
        float _1278 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1279 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1280 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
        float _1281 = _1245 * 0.5;
        float _1282 = _1255 * 0.5;
        float _1283 = _1265 * 0.5;
        float _1284 = dot(vec3(_1281, _1282, _1283), vec3(_1281, _1282, _1283));
        float _1289 = (_1284 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1284);
        float _1298 = (dot(vec3(_878, _879, _880), vec3(_1289 * _1281, _1289 * _1282, _1289 * _1283)) + 1.0) * 0.5;
        float _3975 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1308 = sqrt(((_1282 * _1282) + (_1281 * _1281)) + (_1283 * _1283)) / (_1278 + 9.9999997473787516355514526367188e-06);
        float _3986 = isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0));
        float _1309 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
        float _1310 = _1309 * 2.0;
        float _1314 = (1.0 - _1309) / (_1309 + 1.0);
        float _3997 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1315 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
        float _1324 = ((((1.0 - _1315) * (_1310 + 2.0)) * exp2(log2(isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_1310 + 1.0))) + _1315) * _1278;
        float _1325 = _1246 * 0.5;
        float _1326 = _1256 * 0.5;
        float _1327 = _1266 * 0.5;
        float _1328 = dot(vec3(_1325, _1326, _1327), vec3(_1325, _1326, _1327));
        float _1333 = (_1328 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1328);
        float _1341 = (dot(vec3(_878, _879, _880), vec3(_1333 * _1325, _1333 * _1326, _1333 * _1327)) + 1.0) * 0.5;
        float _4008 = isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0));
        float _1350 = sqrt(((_1326 * _1326) + (_1325 * _1325)) + (_1327 * _1327)) / (_1279 + 9.9999997473787516355514526367188e-06);
        float _4019 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1351 = isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0));
        float _1352 = _1351 * 2.0;
        float _1356 = (1.0 - _1351) / (_1351 + 1.0);
        float _4030 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
        float _1366 = ((((1.0 - _1357) * (_1352 + 2.0)) * exp2(log2(isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0))) * (_1352 + 1.0))) + _1357) * _1279;
        float _1367 = _1247 * 0.5;
        float _1368 = _1257 * 0.5;
        float _1369 = _1267 * 0.5;
        float _1370 = dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369));
        float _1375 = (_1370 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1370);
        float _1383 = (dot(vec3(_878, _879, _880), vec3(_1375 * _1367, _1375 * _1368, _1375 * _1369)) + 1.0) * 0.5;
        float _4041 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369)) / (_1280 + 9.9999997473787516355514526367188e-06);
        float _4052 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
        float _1394 = _1393 * 2.0;
        float _1398 = (1.0 - _1393) / (_1393 + 1.0);
        float _4063 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
        float _1408 = ((((1.0 - _1399) * (_1394 + 2.0)) * exp2(log2(isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0))) * (_1394 + 1.0))) + _1399) * _1280;
        _1416 = _1247;
        _1418 = _1246;
        _1419 = _1245;
        _1420 = _1257;
        _1421 = _1256;
        _1422 = _1255;
        _1423 = _1267;
        _1424 = _1266;
        _1425 = _1265;
        _1426 = _1280;
        _1427 = _1279;
        _1428 = _1278;
        _1429 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0)));
        _1430 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0)));
        _1431 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0)));
    }
    else
    {
        _1416 = _1417;
        _1418 = _1417;
        _1419 = _1417;
        _1420 = _1417;
        _1421 = _1417;
        _1422 = _1417;
        _1423 = _1417;
        _1424 = _1417;
        _1425 = _1417;
        _1426 = _1417;
        _1427 = _1417;
        _1428 = _1417;
        _1429 = 0.0;
        _1430 = 0.0;
        _1431 = 0.0;
    }
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1456 = fma(_1115, cbModelParam._m0[30u].z, fma(_1111, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1107));
        float _1460 = fma(_1115, cbModelParam._m0[31u].z, fma(_1111, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1107));
        float _1464 = fma(_1115, cbModelParam._m0[32u].z, fma(_1111, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1107));
        float _1487 = _1107 + _878;
        float _1488 = _1111 + _879;
        float _1489 = _1115 + _880;
        float _1499 = fma(_1489, cbModelParam._m0[30u].z, fma(_1488, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1487)) - _1456;
        float _1500 = fma(_1489, cbModelParam._m0[31u].z, fma(_1488, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1487)) - _1460;
        float _1501 = fma(_1489, cbModelParam._m0[32u].z, fma(_1488, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1487)) - _1464;
        float _1505 = inversesqrt(dot(vec3(_1499, _1500, _1501), vec3(_1499, _1500, _1501)));
        float _1518 = ((_1505 * _1499) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1456 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1519 = ((_1505 * _1500) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1460 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1520 = ((_1505 * _1501) / cbModelParam._m0[35u].z) + ((((((_1464 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1522 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1518, _1519, _1520), 0.0);
        vec4 _1529 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1518, _1519, _1520), 0.0);
        vec4 _1536 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1518, _1519, _1520), 0.0);
        vec4 _1543 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1518, _1519, _1520), 0.0);
        float _1555 = exp2((_1522.w + (-0.5)) * 20.0) * 2.0;
        float _1556 = _1555 * (_1522.x + (-0.5));
        float _1557 = _1555 * (_1522.y + (-0.5));
        float _1558 = _1555 * (_1522.z + (-0.5));
        float _1565 = exp2((_1529.w + (-0.5)) * 20.0) * 2.0;
        float _1566 = _1565 * (_1529.x + (-0.5));
        float _1567 = _1565 * (_1529.y + (-0.5));
        float _1568 = _1565 * (_1529.z + (-0.5));
        float _1575 = exp2((_1536.w + (-0.5)) * 20.0) * 2.0;
        float _1576 = _1575 * (_1536.x + (-0.5));
        float _1577 = _1575 * (_1536.y + (-0.5));
        float _1578 = _1575 * (_1536.z + (-0.5));
        float _1585 = exp2((_1543.w + (-0.5)) * 20.0) * 2.0;
        float _1586 = _1585 * (_1543.x + (-0.5));
        float _1587 = _1585 * (_1543.y + (-0.5));
        float _1588 = _1585 * (_1543.z + (-0.5));
        float _1589 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1590 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1591 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1592 = _1556 * 0.5;
        float _1593 = _1566 * 0.5;
        float _1594 = _1576 * 0.5;
        float _1595 = dot(vec3(_1592, _1593, _1594), vec3(_1592, _1593, _1594));
        float _1600 = (_1595 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1595);
        float _1608 = (dot(vec3(_878, _879, _880), vec3(_1600 * _1592, _1600 * _1593, _1600 * _1594)) + 1.0) * 0.5;
        float _4104 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1617 = sqrt(((_1593 * _1593) + (_1592 * _1592)) + (_1594 * _1594)) / (_1589 + 9.9999997473787516355514526367188e-06);
        float _4115 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
        float _1618 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
        float _1619 = _1618 * 2.0;
        float _1623 = (1.0 - _1618) / (_1618 + 1.0);
        float _4126 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1624 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
        float _1633 = ((((1.0 - _1624) * (_1619 + 2.0)) * exp2(log2(isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (_1619 + 1.0))) + _1624) * _1589;
        float _1634 = _1557 * 0.5;
        float _1635 = _1567 * 0.5;
        float _1636 = _1577 * 0.5;
        float _1637 = dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636));
        float _1642 = (_1637 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1637);
        float _1650 = (dot(vec3(_878, _879, _880), vec3(_1642 * _1634, _1642 * _1635, _1642 * _1636)) + 1.0) * 0.5;
        float _4137 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1659 = sqrt(((_1635 * _1635) + (_1634 * _1634)) + (_1636 * _1636)) / (_1590 + 9.9999997473787516355514526367188e-06);
        float _4148 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
        float _1661 = _1660 * 2.0;
        float _1665 = (1.0 - _1660) / (_1660 + 1.0);
        float _4159 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1666 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _1675 = ((((1.0 - _1666) * (_1661 + 2.0)) * exp2(log2(isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * (_1661 + 1.0))) + _1666) * _1590;
        float _1676 = _1558 * 0.5;
        float _1677 = _1568 * 0.5;
        float _1678 = _1578 * 0.5;
        float _1679 = dot(vec3(_1676, _1677, _1678), vec3(_1676, _1677, _1678));
        float _1684 = (_1679 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1679);
        float _1692 = (dot(vec3(_878, _879, _880), vec3(_1684 * _1676, _1684 * _1677, _1684 * _1678)) + 1.0) * 0.5;
        float _4170 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
        float _1701 = sqrt(((_1677 * _1677) + (_1676 * _1676)) + (_1678 * _1678)) / (_1591 + 9.9999997473787516355514526367188e-06);
        float _4181 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1702 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1703 = _1702 * 2.0;
        float _1707 = (1.0 - _1702) / (_1702 + 1.0);
        float _4192 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1708 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1717 = ((((1.0 - _1708) * (_1703 + 2.0)) * exp2(log2(isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_1703 + 1.0))) + _1708) * _1591;
        _1725 = _1558;
        _1726 = _1557;
        _1727 = _1556;
        _1728 = _1568;
        _1729 = _1567;
        _1730 = _1566;
        _1731 = _1578;
        _1732 = _1577;
        _1733 = _1576;
        _1734 = _1591;
        _1735 = _1590;
        _1736 = _1589;
        _1737 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)));
        _1738 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0)));
        _1739 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0)));
    }
    else
    {
        _1725 = _1417;
        _1726 = _1417;
        _1727 = _1417;
        _1728 = _1417;
        _1729 = _1417;
        _1730 = _1417;
        _1731 = _1417;
        _1732 = _1417;
        _1733 = _1417;
        _1734 = _1417;
        _1735 = _1417;
        _1736 = _1417;
        _1737 = 0.0;
        _1738 = 0.0;
        _1739 = 0.0;
    }
    float _1749 = (cbModelParam._m0[1u].x * (_1737 - _1429)) + _1429;
    float _1750 = (cbModelParam._m0[1u].x * (_1738 - _1430)) + _1430;
    float _1751 = (cbModelParam._m0[1u].x * (_1739 - _1431)) + _1431;
    float _1772 = fma(_1751, cbSceneParam._m0[89u].z, fma(_1750, cbSceneParam._m0[89u].y, _1749 * cbSceneParam._m0[89u].x));
    float _1775 = fma(_1751, cbSceneParam._m0[90u].z, fma(_1750, cbSceneParam._m0[90u].y, _1749 * cbSceneParam._m0[90u].x));
    float _1778 = fma(_1751, cbSceneParam._m0[91u].z, fma(_1750, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1749));
    float _1793 = _1051 * 0.5;
    float _1794 = _1052 * 0.5;
    float _1795 = _1053 * 0.5;
    float _1796 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1727, _1730, _1733, _1736));
    float _1799 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1802 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1725, _1728, _1731, _1734));
    float _1836;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1809 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1416, _1420, _1423, _1426));
        float _1813 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1418, _1421, _1424, _1427));
        float _1817 = dot(vec4(_1793, _1794, _1795, 1.0), vec4(_1419, _1422, _1425, _1428));
        float _1824 = dot(vec4(cbModelParam._m0[39u]), vec4(_1793, _1794, _1795, 1.0));
        _1836 = dot(vec3(isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0)), isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0)), isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1824) ? 0.0 : (isnan(0.0) ? _1824 : max(0.0, _1824))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1836 = 1.0;
    }
    float _1847;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1838 = dot(vec4(cbModelParam._m0[40u]), vec4(_1793, _1794, _1795, 1.0));
        _1847 = dot(vec3(isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)), isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0)), isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1838) ? 0.0 : (isnan(0.0) ? _1838 : max(0.0, _1838))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1847 = 1.0;
    }
    float _1851 = (_1847 * cbModelParam._m0[1u].x) + (_1836 * (1.0 - cbModelParam._m0[1u].x));
    float _1861 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _881);
    float _1862 = isnan(_1861) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1861 : min(cbModelParam._m0[25u].z, _1861));
    float _1942;
    float _1944;
    float _1946;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1909 = fma(_1115, cbModelParam._m0[13u].z, fma(_1111, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1107)) + cbModelParam._m0[13u].w;
        float _1913 = fma(_1115, cbModelParam._m0[14u].z, fma(_1111, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1107)) + cbModelParam._m0[14u].w;
        float _1917 = fma(_1115, cbModelParam._m0[15u].z, fma(_1111, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1107)) + cbModelParam._m0[15u].w;
        float _1920 = fma(_1053, cbModelParam._m0[13u].z, fma(_1052, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1051));
        float _1923 = fma(_1053, cbModelParam._m0[14u].z, fma(_1052, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1051));
        float _1926 = fma(_1053, cbModelParam._m0[15u].z, fma(_1052, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1051));
        float _1954;
        if (_1920 > 0.0)
        {
            _1954 = abs((1.0 - _1909) / _1920);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1920 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1909 + 1.0) / _1920);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1954 = frontier_phi_14_12_ladder;
        }
        float _2156;
        if (_1923 > 0.0)
        {
            _2156 = abs((1.0 - _1913) / _1923);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1923 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1913 + 1.0) / _1923);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2156 = frontier_phi_23_19_ladder;
        }
        float _2410;
        if (_1926 > 0.0)
        {
            _2410 = abs((1.0 - _1917) / _1926);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1926 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1917 + 1.0) / _1926);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2410 = frontier_phi_35_30_ladder;
        }
        float _2412 = isnan(_2156) ? _1954 : (isnan(_1954) ? _2156 : min(_1954, _2156));
        float _2413 = isnan(_2410) ? _2412 : (isnan(_2412) ? _2410 : min(_2412, _2410));
        float _2417 = (_2413 * _1920) + _1909;
        float _2418 = (_2413 * _1923) + _1913;
        float _2419 = (_2413 * _1926) + _1917;
        float _2420 = _2413 * 9.9999997473787516355514526367188e-05;
        float _2422 = (-1.0) - _2420;
        float _2424 = _2420 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2419 > _2424) || ((_2419 < _2422) || ((_2418 > _2424) || ((_2418 < _2422) || ((_2417 < _2422) || (_2417 > _2424))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2547 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2419, cbModelParam._m0[9u].z, fma(_2418, cbModelParam._m0[9u].y, _2417 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2419, cbModelParam._m0[10u].z, fma(_2418, cbModelParam._m0[10u].y, _2417 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2419, cbModelParam._m0[11u].z, fma(_2418, cbModelParam._m0[11u].y, _2417 * cbModelParam._m0[11u].x))), _1862);
            frontier_phi_13_35_ladder = _2547.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2547.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2547.x * cbModelParam._m0[1u].y;
        }
        _1942 = frontier_phi_13_35_ladder_2;
        _1944 = frontier_phi_13_35_ladder_1;
        _1946 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1930 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1051, _1052, _1053), _1862);
        _1942 = _1930.x * cbModelParam._m0[1u].y;
        _1944 = _1930.y * cbModelParam._m0[1u].y;
        _1946 = _1930.z * cbModelParam._m0[1u].y;
    }
    float _1950 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _881);
    float _1951 = isnan(_1950) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1950 : min(cbModelParam._m0[25u].w, _1950));
    float _2040;
    float _2042;
    float _2044;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2004 = fma(_1115, cbModelParam._m0[21u].z, fma(_1111, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1107)) + cbModelParam._m0[21u].w;
        float _2008 = fma(_1115, cbModelParam._m0[22u].z, fma(_1111, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1107)) + cbModelParam._m0[22u].w;
        float _2012 = fma(_1115, cbModelParam._m0[23u].z, fma(_1111, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1107)) + cbModelParam._m0[23u].w;
        float _2015 = fma(_1053, cbModelParam._m0[21u].z, fma(_1052, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1051));
        float _2018 = fma(_1053, cbModelParam._m0[22u].z, fma(_1052, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1051));
        float _2021 = fma(_1053, cbModelParam._m0[23u].z, fma(_1052, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1051));
        float _2161;
        if (_2015 > 0.0)
        {
            _2161 = abs((1.0 - _2004) / _2015);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2015 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2004 + 1.0) / _2015);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2161 = frontier_phi_25_21_ladder;
        }
        float _2437;
        if (_2018 > 0.0)
        {
            _2437 = abs((1.0 - _2008) / _2018);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2018 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2008 + 1.0) / _2018);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2437 = frontier_phi_37_32_ladder;
        }
        float _2650;
        if (_2021 > 0.0)
        {
            _2650 = abs((1.0 - _2012) / _2021);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2021 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2012 + 1.0) / _2021);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2650 = frontier_phi_46_43_ladder;
        }
        float _2652 = isnan(_2437) ? _2161 : (isnan(_2161) ? _2437 : min(_2161, _2437));
        float _2653 = isnan(_2650) ? _2652 : (isnan(_2652) ? _2650 : min(_2652, _2650));
        float _2657 = (_2653 * _2015) + _2004;
        float _2658 = (_2653 * _2018) + _2008;
        float _2659 = (_2653 * _2021) + _2012;
        float _2660 = _2653 * 9.9999997473787516355514526367188e-05;
        float _2661 = (-1.0) - _2660;
        float _2663 = _2660 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2659 > _2663) || ((_2659 < _2661) || ((_2658 > _2663) || ((_2658 < _2661) || ((_2657 < _2661) || (_2657 > _2663))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2858 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2659, cbModelParam._m0[17u].z, fma(_2658, cbModelParam._m0[17u].y, _2657 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2659, cbModelParam._m0[18u].z, fma(_2658, cbModelParam._m0[18u].y, _2657 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2659, cbModelParam._m0[19u].z, fma(_2658, cbModelParam._m0[19u].y, _2657 * cbModelParam._m0[19u].x))), _1951);
            frontier_phi_22_46_ladder = _2858.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2858.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2858.x * cbModelParam._m0[1u].z;
        }
        _2040 = frontier_phi_22_46_ladder_2;
        _2042 = frontier_phi_22_46_ladder_1;
        _2044 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2024 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1051, _1052, _1053), _1951);
        _2040 = _2024.x * cbModelParam._m0[1u].z;
        _2042 = _2024.y * cbModelParam._m0[1u].z;
        _2044 = _2024.z * cbModelParam._m0[1u].z;
    }
    float _2057 = (((_1078 * _1027) + _1079) * _1043) * ((cbModelParam._m0[1u].w * (_2040 - _1942)) + _1942);
    float _2059 = (((_1078 * _1029) + _1079) * _1043) * ((cbModelParam._m0[1u].w * (_2042 - _1944)) + _1944);
    float _2061 = (((_1078 * _1030) + _1079) * _1043) * ((cbModelParam._m0[1u].w * (_2044 - _1946)) + _1946);
    float _2064 = fma(_2061, cbSceneParam._m0[89u].z, fma(_2059, cbSceneParam._m0[89u].y, _2057 * cbSceneParam._m0[89u].x));
    float _2067 = fma(_2061, cbSceneParam._m0[90u].z, fma(_2059, cbSceneParam._m0[90u].y, _2057 * cbSceneParam._m0[90u].x));
    float _2070 = fma(_2061, cbSceneParam._m0[91u].z, fma(_2059, cbSceneParam._m0[91u].y, _2057 * cbSceneParam._m0[91u].x));
    uvec4 _2080 = floatBitsToUint(cbInstanceData._m0[_279 + 5u]);
    uint _2082 = _2080.x * 14u;
    uint _2083 = _2082 + 13u;
    float _2090 = _1043 + (-1.0);
    float _2095 = (cbLight._m0[_2083].x * _2090) + 1.0;
    float _2096 = (cbLight._m0[_2083].y * _2090) + 1.0;
    float _2097 = (cbLight._m0[_2083].z * _2090) + 1.0;
    float _2098 = (cbLight._m0[_2083].w * _2090) + 1.0;
    uint _2099 = _2082 + 5u;
    float _2105 = isnan(1.0) ? _2096 : (isnan(_2096) ? 1.0 : min(_2096, 1.0));
    uint _2109 = _2082 + 4u;
    float _2115 = isnan(1.0) ? _2095 : (isnan(_2095) ? 1.0 : min(_2095, 1.0));
    uint _2119 = _2082 | 1u;
    float _2130 = dot(vec3(cbLight._m0[_2082].xyz), vec3(_878, _879, _880));
    float _2133 = dot(vec3(cbLight._m0[_2119].xyz), vec3(_878, _879, _880));
    float _4328 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
    float _4339 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _2138 = (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * 0.3183098733425140380859375;
    float _2140 = (isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0))) * 0.3183098733425140380859375;
    float _2147 = ((cbLight._m0[_2099].x * _2105) * _2140) + ((cbLight._m0[_2109].x * _2115) * _2138);
    float _2148 = ((_2105 * cbLight._m0[_2099].y) * _2140) + ((_2115 * cbLight._m0[_2109].y) * _2138);
    float _2149 = ((_2105 * cbLight._m0[_2099].z) * _2140) + ((_2115 * cbLight._m0[_2109].z) * _2138);
    uvec4 _2153 = floatBitsToUint(cbLight._m0[_2082 + 12u]);
    bool _2155 = _2153.x == 0u;
    float _2166;
    float _2168;
    float _2170;
    if (_2155)
    {
        _2166 = _2147;
        _2168 = _2148;
        _2170 = _2149;
    }
    else
    {
        uint _2174 = _2082 + 6u;
        float _2190 = (dot(vec3(cbLight._m0[_2082 + 2u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2191 = _2190 * _2190;
        float _4350 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
        float _2192 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _2193 = isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0));
        _2166 = (((cbLight._m0[_2174].x * 0.3183098733425140380859375) * _2192) * _2193) + _2147;
        _2168 = (((cbLight._m0[_2174].y * 0.3183098733425140380859375) * _2192) * _2193) + _2148;
        _2170 = (((cbLight._m0[_2174].z * 0.3183098733425140380859375) * _2192) * _2193) + _2149;
    }
    bool _2173 = _2153.y == 0u;
    float _2211;
    float _2213;
    float _2215;
    if (_2173)
    {
        _2211 = _2166;
        _2213 = _2168;
        _2215 = _2170;
    }
    else
    {
        uint _2381 = _2082 + 7u;
        float _2397 = (dot(vec3(cbLight._m0[_2082 + 3u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2398 = _2397 * _2397;
        float _4366 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
        float _2399 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _2400 = isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0));
        _2211 = (((cbLight._m0[_2381].x * 0.3183098733425140380859375) * _2399) * _2400) + _2166;
        _2213 = (((cbLight._m0[_2381].y * 0.3183098733425140380859375) * _2399) * _2400) + _2168;
        _2215 = (((cbLight._m0[_2381].z * 0.3183098733425140380859375) * _2399) * _2400) + _2170;
    }
    uint _2218 = _2082 + 8u;
    float _2231 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2082].w)) * _881) * 0.949999988079071044921875);
    float _2232 = _2231 * _2231;
    float _2233 = cbLight._m0[_2082].x + _957;
    float _2234 = cbLight._m0[_2082].y + _958;
    float _2235 = cbLight._m0[_2082].z + _959;
    float _2239 = inversesqrt(dot(vec3(_2233, _2234, _2235), vec3(_2233, _2234, _2235)));
    float _2240 = _2239 * _2233;
    float _2241 = _2239 * _2234;
    float _2242 = _2239 * _2235;
    float _2243 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2082].xyz));
    float _4382 = isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0));
    float _2246 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _4393 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
    float _2247 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _2248 = dot(vec3(_878, _879, _880), vec3(_2240, _2241, _2242));
    float _4404 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
    float _2251 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    float _2252 = dot(vec3(cbLight._m0[_2082].xyz), vec3(_2240, _2241, _2242));
    float _4415 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _2256 = _2232 * _2232;
    float _2260 = ((_2251 * _2251) * (_2256 + (-1.0))) + 1.0;
    float _2268 = exp2(log2(1.0 - (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0)))) * 5.0);
    float _2269 = 0.959999978542327880859375 - _1024;
    float _2271 = 0.959999978542327880859375 - _1025;
    float _2272 = 0.959999978542327880859375 - _1026;
    float _2279 = 1.0 - _2232;
    float _2290 = (0.5 / (((_2247 * ((_2246 * _2279) + _2232)) + 9.9999999392252902907785028219223e-09) + (((_2247 * _2279) + _2232) * _2246))) * _2246;
    float _4426 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _2292 = (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_2256 / ((_2260 * _2260) * 3.141590118408203125));
    uint _2303 = _2082 + 9u;
    float _2314 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2119].w)) * _881) * 0.949999988079071044921875);
    float _2315 = _2314 * _2314;
    float _2316 = cbLight._m0[_2119].x + _957;
    float _2317 = cbLight._m0[_2119].y + _958;
    float _2318 = cbLight._m0[_2119].z + _959;
    float _2322 = inversesqrt(dot(vec3(_2316, _2317, _2318), vec3(_2316, _2317, _2318)));
    float _2323 = _2322 * _2316;
    float _2324 = _2322 * _2317;
    float _2325 = _2322 * _2318;
    float _2326 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2119].xyz));
    float _4437 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
    float _2329 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _2330 = dot(vec3(_878, _879, _880), vec3(_2323, _2324, _2325));
    float _4448 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
    float _2333 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _2334 = dot(vec3(cbLight._m0[_2119].xyz), vec3(_2323, _2324, _2325));
    float _4459 = isnan(0.0) ? _2334 : (isnan(_2334) ? 0.0 : max(_2334, 0.0));
    float _2338 = _2315 * _2315;
    float _2342 = ((_2333 * _2333) * (_2338 + (-1.0))) + 1.0;
    float _2349 = exp2(log2(1.0 - (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)))) * 5.0);
    float _2356 = 1.0 - _2315;
    float _2366 = (0.5 / (((_2247 * ((_2329 * _2356) + _2315)) + 9.9999999392252902907785028219223e-09) + (((_2247 * _2356) + _2315) * _2329))) * _2329;
    float _4470 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
    float _2368 = (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_2338 / ((_2342 * _2342) * 3.141590118408203125));
    float _2378 = (((((_2349 * _2269) + _1027) * cbLight._m0[_2303].x) * _2368) * _2105) + (((((_2268 * _2269) + _1027) * cbLight._m0[_2218].x) * _2292) * _2115);
    float _2379 = (((((_2349 * _2271) + _1029) * cbLight._m0[_2303].y) * _2368) * _2105) + (((((_2268 * _2271) + _1029) * cbLight._m0[_2218].y) * _2292) * _2115);
    float _2380 = (((((_2349 * _2272) + _1030) * cbLight._m0[_2303].z) * _2368) * _2105) + (((((_2268 * _2272) + _1030) * cbLight._m0[_2218].z) * _2292) * _2115);
    float _2442;
    float _2444;
    float _2446;
    if (_2155)
    {
        _2442 = _2378;
        _2444 = _2379;
        _2446 = _2380;
    }
    else
    {
        uint _2448 = _2082 + 2u;
        uint _2452 = _2082 + 10u;
        float _2466 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2448].w)) * _881) * 0.949999988079071044921875);
        float _2467 = _2466 * _2466;
        float _2468 = cbLight._m0[_2448].x + _957;
        float _2469 = cbLight._m0[_2448].y + _958;
        float _2470 = cbLight._m0[_2448].z + _959;
        float _2474 = inversesqrt(dot(vec3(_2468, _2469, _2470), vec3(_2468, _2469, _2470)));
        float _2475 = _2474 * _2468;
        float _2476 = _2474 * _2469;
        float _2477 = _2474 * _2470;
        float _2478 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2448].xyz));
        float _4481 = isnan(0.0) ? _2478 : (isnan(_2478) ? 0.0 : max(_2478, 0.0));
        float _2481 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _2482 = dot(vec3(_878, _879, _880), vec3(_2475, _2476, _2477));
        float _4492 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
        float _2485 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _2486 = dot(vec3(cbLight._m0[_2448].xyz), vec3(_2475, _2476, _2477));
        float _4503 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
        float _2490 = _2467 * _2467;
        float _2494 = ((_2485 * _2485) * (_2490 + (-1.0))) + 1.0;
        float _2501 = exp2(log2(1.0 - (isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0)))) * 5.0);
        float _2508 = 1.0 - _2467;
        float _2518 = (0.5 / (((_2247 * ((_2481 * _2508) + _2467)) + 9.9999999392252902907785028219223e-09) + (((_2247 * _2508) + _2467) * _2481))) * _2481;
        float _4514 = isnan(0.0) ? _2518 : (isnan(_2518) ? 0.0 : max(_2518, 0.0));
        float _2520 = (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))) * (_2490 / ((_2494 * _2494) * 3.141590118408203125));
        float _2521 = isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0));
        _2442 = (((((_2501 * _2269) + _1027) * cbLight._m0[_2452].x) * _2520) * _2521) + _2378;
        _2444 = (((((_2501 * _2271) + _1029) * cbLight._m0[_2452].y) * _2520) * _2521) + _2379;
        _2446 = (((((_2501 * _2272) + _1030) * cbLight._m0[_2452].z) * _2520) * _2521) + _2380;
    }
    float _2556;
    float _2558;
    float _2560;
    if (_2173)
    {
        _2556 = _2442;
        _2558 = _2444;
        _2560 = _2446;
    }
    else
    {
        uint _2567 = _2082 + 3u;
        uint _2571 = _2082 + 11u;
        float _2585 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2567].w)) * _881) * 0.949999988079071044921875);
        float _2586 = _2585 * _2585;
        float _2587 = cbLight._m0[_2567].x + _957;
        float _2588 = cbLight._m0[_2567].y + _958;
        float _2589 = cbLight._m0[_2567].z + _959;
        float _2593 = inversesqrt(dot(vec3(_2587, _2588, _2589), vec3(_2587, _2588, _2589)));
        float _2594 = _2593 * _2587;
        float _2595 = _2593 * _2588;
        float _2596 = _2593 * _2589;
        float _2597 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2567].xyz));
        float _4530 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2600 = isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0));
        float _2601 = dot(vec3(_878, _879, _880), vec3(_2594, _2595, _2596));
        float _4541 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
        float _2604 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _2605 = dot(vec3(cbLight._m0[_2567].xyz), vec3(_2594, _2595, _2596));
        float _4552 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
        float _2609 = _2586 * _2586;
        float _2613 = ((_2604 * _2604) * (_2609 + (-1.0))) + 1.0;
        float _2620 = exp2(log2(1.0 - (isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0)))) * 5.0);
        float _2627 = 1.0 - _2586;
        float _2637 = (0.5 / (((_2247 * ((_2600 * _2627) + _2586)) + 9.9999999392252902907785028219223e-09) + (((_2247 * _2627) + _2586) * _2600))) * _2600;
        float _4563 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
        float _2639 = (isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0))) * (_2609 / ((_2613 * _2613) * 3.141590118408203125));
        float _2640 = isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0));
        _2556 = (((((_2620 * _2269) + _1027) * cbLight._m0[_2571].x) * _2639) * _2640) + _2442;
        _2558 = (((((_2620 * _2271) + _1029) * cbLight._m0[_2571].y) * _2639) * _2640) + _2444;
        _2560 = (((((_2620 * _2272) + _1030) * cbLight._m0[_2571].z) * _2639) * _2640) + _2446;
    }
    float _2775;
    float _2777;
    float _2779;
    float _2781;
    float _2783;
    float _2785;
    if (_2080.y == 0u)
    {
        float _2715 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2716 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2715;
        float _2717 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2715;
        float _2718 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2715;
        uvec4 _2730 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2731 = _2730.x;
        uint _2742 = uint((float(_2730.y) * floor(float(uint(cbSceneParam._m0[85u].y * _966) / _2731))) + floor(float(uint(cbSceneParam._m0[85u].x * _965) / _2731)));
        float _2752 = (log2(_2718 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2753 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        uint _2756 = uint(isnan(14.0) ? _2753 : (isnan(_2753) ? 14.0 : min(_2753, 14.0)));
        uvec4 _2761 = texelFetch(g_lightClusterGridBuffer, int(((_2756 << 2u) + (_2742 << 6u)) >> 2u));
        uint _2762 = _2761.x;
        uint _2763 = _2730.z;
        float _2863;
        float _2865;
        float _2867;
        float _2869;
        float _2871;
        float _2873;
        if (((((1u << ((_2763 >> 4u) & 15u)) + 4294967295u) & _2762) == 0u) || ((_2763 & 240u) == 0u))
        {
            _2863 = 0.0;
            _2865 = 0.0;
            _2867 = 0.0;
            _2869 = 0.0;
            _2871 = 0.0;
            _2873 = 0.0;
        }
        else
        {
            float _2864;
            float _2866;
            float _2868;
            float _2870;
            float _2872;
            float _2874;
            float _3007 = 0.0;
            float _3008 = 0.0;
            float _3009 = 0.0;
            float _3010 = 0.0;
            float _3011 = 0.0;
            float _3012 = 0.0;
            uint _3013 = 0u;
            uint _3022;
            bool _3023;
            for (;;)
            {
                _3022 = texelFetch(g_lightClassification, int((((_2756 << 5u) + (_2742 << 9u)) + (_3013 << 2u)) >> 2u)).x;
                _3023 = _3022 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3023)
                {
                    frontier_phi_61_pred = _3007;
                    frontier_phi_61_pred_1 = _3012;
                    frontier_phi_61_pred_2 = _3011;
                    frontier_phi_61_pred_3 = _3010;
                    frontier_phi_61_pred_4 = _3009;
                    frontier_phi_61_pred_5 = _3008;
                }
                else
                {
                    float _3131;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    float _3136;
                    uint _3137;
                    _3131 = _3007;
                    _3132 = _3008;
                    _3133 = _3009;
                    _3134 = _3010;
                    _3135 = _3011;
                    _3136 = _3012;
                    _3137 = _3022;
                    float _3063;
                    float _3064;
                    float _3065;
                    float _3066;
                    float _3067;
                    float _3068;
                    for (;;)
                    {
                        uint _3141 = uint(findLSB(_3137)) + (_3013 << 5u);
                        uint _3138 = (_3137 + 4294967295u) & _3137;
                        uint _3143 = _3141 * 48u;
                        vec4 _3157 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3143)).x, texelFetch(g_PointLightRenderingBuffer, int(_3143 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3143 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3143 + 3u)).x));
                        uint _3163 = (_3141 * 48u) + 4u;
                        vec4 _3176 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3163)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 3u)).x));
                        uint _3182 = (_3141 * 48u) + 8u;
                        vec3 _3193 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3182)).x, texelFetch(g_PointLightRenderingBuffer, int(_3182 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3182 + 2u)).x));
                        float _3197 = _3157.x - _2716;
                        float _3198 = _3157.y - _2717;
                        float _3199 = _3157.z - _2718;
                        float _3200 = dot(vec3(_3197, _3198, _3199), vec3(_3197, _3198, _3199));
                        float _3203 = inversesqrt(_3200);
                        float _3204 = _3203 * _3197;
                        float _3205 = _3203 * _3198;
                        float _3206 = _3203 * _3199;
                        float _3207 = dot(vec3(_984, _987, _990), vec3(_3204, _3205, _3206));
                        float _3212 = 1.0 - (_3200 * _3157.w);
                        float _4589 = isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0));
                        float _3213 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
                        float _3214 = sqrt(_3200) * _3176.w;
                        float _3217 = 1.39999997615814208984375 / (_3214 + 1.39999997615814208984375);
                        float _3218 = _3217 * _3217;
                        float _3221 = ((1.0 - _3218) * _3207) + _3218;
                        float _3224 = _3214 * _3214;
                        float _3228 = ((isnan(0.0) ? _3221 : (isnan(_3221) ? 0.0 : max(_3221, 0.0))) * _3213) / ((_3224 * 0.699999988079071044921875) + 1.0);
                        float _3232 = (-0.0) - _2716;
                        float _3233 = (-0.0) - _2717;
                        float _3234 = (-0.0) - _2718;
                        float _3238 = inversesqrt(dot(vec3(_3232, _3233, _3234), vec3(_3232, _3233, _3234)));
                        float _3239 = _3238 * _3232;
                        float _3240 = _3238 * _3233;
                        float _3241 = _3238 * _3234;
                        float _3249 = exp2(log2(1.0 / ((_3224 * 3.5) + 5.0)) * 0.25);
                        float _3250 = 1.0 - _1059;
                        float _3257 = sqrt(1.0 - ((1.0 - (_3250 * _3250)) * (1.0 - (_3249 * _3249))));
                        float _3258 = _3257 * _3257;
                        float _3259 = _3258 * _3258;
                        float _3260 = _3239 + _3204;
                        float _3261 = _3240 + _3205;
                        float _3262 = _3241 + _3206;
                        float _3266 = inversesqrt(dot(vec3(_3260, _3261, _3262), vec3(_3260, _3261, _3262)));
                        float _3270 = dot(vec3(_984, _987, _990), vec3(_3239, _3240, _3241));
                        float _4605 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0));
                        float _3273 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
                        float _3274 = dot(vec3(_984, _987, _990), vec3(_3266 * _3260, _3266 * _3261, _3266 * _3262));
                        float _4616 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
                        float _3277 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
                        float _3281 = ((_3277 * _3277) * (_3259 + (-1.0))) + 1.0;
                        float _3282 = _3217 * _3258;
                        float _3283 = _3282 * _3282;
                        float _3286 = ((1.0 - _3283) * _3207) + _3283;
                        float _4627 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
                        float _3287 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
                        float _3288 = 1.0 - _3258;
                        float _3298 = (0.5 / (((_3287 * ((_3273 * _3288) + _3258)) + 9.9999999392252902907785028219223e-09) + (((_3287 * _3288) + _3258) * _3273))) * _3287;
                        float _4638 = isnan(0.0) ? _3298 : (isnan(_3298) ? 0.0 : max(_3298, 0.0));
                        float _3309 = (((_3259 * 3.1415927410125732421875) * (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) / ((_3281 * _3281) * ((_3224 * 2.1991131305694580078125) + 3.141590118408203125))) * _3213;
                        _3066 = (_3228 * _3176.x) + _3134;
                        _3067 = (_3228 * _3176.y) + _3135;
                        _3068 = (_3228 * _3176.z) + _3136;
                        _3063 = (_3309 * _3193.x) + _3131;
                        _3064 = (_3309 * _3193.y) + _3132;
                        _3065 = (_3309 * _3193.z) + _3133;
                        if (_3138 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3131 = _3063;
                            _3132 = _3064;
                            _3133 = _3065;
                            _3134 = _3066;
                            _3135 = _3067;
                            _3136 = _3068;
                            _3137 = _3138;
                        }
                    }
                    frontier_phi_61_pred = _3063;
                    frontier_phi_61_pred_1 = _3068;
                    frontier_phi_61_pred_2 = _3067;
                    frontier_phi_61_pred_3 = _3066;
                    frontier_phi_61_pred_4 = _3065;
                    frontier_phi_61_pred_5 = _3064;
                }
                _2864 = frontier_phi_61_pred;
                _2874 = frontier_phi_61_pred_1;
                _2872 = frontier_phi_61_pred_2;
                _2870 = frontier_phi_61_pred_3;
                _2868 = frontier_phi_61_pred_4;
                _2866 = frontier_phi_61_pred_5;
                uint _3014 = _3013 + 1u;
                if (_3014 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3007 = _2864;
                    _3008 = _2866;
                    _3009 = _2868;
                    _3010 = _2870;
                    _3011 = _2872;
                    _3012 = _2874;
                    _3013 = _3014;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2863 = _2864;
            _2865 = _2866;
            _2867 = _2868;
            _2869 = _2870;
            _2871 = _2872;
            _2873 = _2874;
        }
        uvec4 _2877 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2878 = _2877.z;
        uint _2880 = (_2878 >> 8u) & 15u;
        float _2975;
        float _2977;
        float _2979;
        float _2981;
        float _2983;
        float _2985;
        if (((4294967295u << _2880) & _2762) == 0u)
        {
            _2975 = _2863;
            _2977 = _2865;
            _2979 = _2867;
            _2981 = _2869;
            _2983 = _2871;
            _2985 = _2873;
        }
        else
        {
            float _3000 = inversesqrt(dot(vec3(_2716, _2717, _2718), vec3(_2716, _2717, _2718)));
            float _3001 = _3000 * _2716;
            float _3002 = _3000 * _2717;
            float _3003 = _3000 * _2718;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2880 < ((_2878 >> 12u) & 15u))
            {
                float _2976;
                float _2978;
                float _2980;
                float _2982;
                float _2984;
                float _2986;
                float _3114 = _2863;
                float _3115 = _2865;
                float _3116 = _2867;
                float _3117 = _2869;
                float _3118 = _2871;
                float _3119 = _2873;
                uint _3120 = _2880;
                uint _3129;
                bool _3130;
                for (;;)
                {
                    _3129 = texelFetch(g_lightClassification, int((((_2756 << 5u) + (_2742 << 9u)) + (_3120 << 2u)) >> 2u)).x;
                    _3130 = _3129 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3130)
                    {
                        frontier_phi_67_pred = _3117;
                        frontier_phi_67_pred_1 = _3118;
                        frontier_phi_67_pred_2 = _3119;
                        frontier_phi_67_pred_3 = _3116;
                        frontier_phi_67_pred_4 = _3115;
                        frontier_phi_67_pred_5 = _3114;
                    }
                    else
                    {
                        float _3314;
                        float _3315;
                        float _3316;
                        float _3317;
                        float _3318;
                        float _3319;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3610;
                        float _3611;
                        float _3612;
                        float _3327 = _3114;
                        float _3328 = _3115;
                        float _3329 = _3116;
                        float _3330 = _3117;
                        float _3331 = _3118;
                        float _3332 = _3119;
                        uint _3333 = _3129;
                        uint _3334;
                        vec4 _3359;
                        float _3360;
                        vec4 _3375;
                        vec3 _3387;
                        vec4 _3402;
                        vec4 _3417;
                        float _3463;
                        bool _3464;
                        for (;;)
                        {
                            uint _3344 = ((_3120 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3333));
                            _3334 = (_3333 + 4294967295u) & _3333;
                            uint _3346 = _3344 * 40u;
                            _3359 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3346)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3346 + 3u)).x));
                            _3360 = _3359.w;
                            uint _3362 = (_3344 * 40u) + 4u;
                            _3375 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3362)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 3u)).x));
                            uint _3377 = (_3344 * 40u) + 8u;
                            _3387 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3377)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 2u)).x));
                            uint _3389 = (_3344 * 40u) + 16u;
                            _3402 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3389)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 3u)).x));
                            uint _3404 = (_3344 * 40u) + 20u;
                            _3417 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3404)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 3u)).x));
                            uint _3419 = (_3344 * 40u) + 24u;
                            vec4 _3432 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3419)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3419 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3419 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3419 + 3u)).x));
                            uint _3438 = (_3344 * 40u) + 28u;
                            vec4 _3451 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3438)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 3u)).x));
                            _3463 = fma(_2718, _3451.z, fma(_2717, _3451.y, _3451.x * _2716)) + _3451.w;
                            _3464 = !((fma(_2718, _3432.z, fma(_2717, _3432.y, _3432.x * _2716)) + _3432.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3464)
                            {
                                float _3491 = _3359.x - _2716;
                                float _3492 = _3359.y - _2717;
                                float _3493 = _3359.z - _2718;
                                float _3494 = dot(vec3(_3491, _3492, _3493), vec3(_3491, _3492, _3493));
                                float _3497 = inversesqrt(_3494);
                                float _3498 = _3497 * _3491;
                                float _3499 = _3497 * _3492;
                                float _3500 = _3497 * _3493;
                                float _3504 = 1.0 - (_3494 / (_3360 * _3360));
                                float _4649 = isnan(0.0) ? _3504 : (isnan(_3504) ? 0.0 : max(_3504, 0.0));
                                float _3505 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                                float _3509 = sqrt(_3494) * _3375.w;
                                float _3511 = 1.39999997615814208984375 / (_3509 + 1.39999997615814208984375);
                                float _3512 = _3511 * _3511;
                                float _3515 = ((1.0 - _3512) * dot(vec3(_3498, _3499, _3500), vec3(_984, _987, _990))) + _3512;
                                float _3518 = _3509 * _3509;
                                float _3522 = (fma(_2718, _3402.z, fma(_2717, _3402.y, _3402.x * _2716)) + _3402.w) / _3463;
                                float _3523 = (fma(_2718, _3417.z, fma(_2717, _3417.y, _3417.x * _2716)) + _3417.w) / _3463;
                                float _3527 = 1.0 - dot(vec2(_3522, _3523), vec2(_3522, _3523));
                                float _4665 = isnan(0.0) ? _3527 : (isnan(_3527) ? 0.0 : max(_3527, 0.0));
                                float _3528 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
                                float _3529 = _3528 * (((isnan(0.0) ? _3515 : (isnan(_3515) ? 0.0 : max(_3515, 0.0))) * _3505) / ((_3518 * 0.699999988079071044921875) + 1.0));
                                float _3541 = exp2(log2(1.0 / ((_3518 * 3.5) + 5.0)) * 0.25);
                                float _3542 = 1.0 - _1059;
                                float _3549 = sqrt(1.0 - ((1.0 - (_3542 * _3542)) * (1.0 - (_3541 * _3541))));
                                float _3550 = _3549 * _3549;
                                float _3551 = _3550 * _3550;
                                float _3552 = _3498 - _3001;
                                float _3553 = _3499 - _3002;
                                float _3554 = _3500 - _3003;
                                float _3558 = inversesqrt(dot(vec3(_3552, _3553, _3554), vec3(_3552, _3553, _3554)));
                                float _3562 = dot(vec3(_984, _987, _990), vec3((-0.0) - _3001, (-0.0) - _3002, (-0.0) - _3003));
                                float _4676 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                                float _3565 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
                                float _3566 = dot(vec3(_984, _987, _990), vec3(_3558 * _3552, _3558 * _3553, _3558 * _3554));
                                float _4687 = isnan(0.0) ? _3566 : (isnan(_3566) ? 0.0 : max(_3566, 0.0));
                                float _3569 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
                                float _3573 = ((_3569 * _3569) * (_3551 + (-1.0))) + 1.0;
                                float _3574 = _3511 * _3550;
                                float _3575 = _3574 * _3574;
                                float _3581 = ((1.0 - _3575) * dot(vec3(_984, _987, _990), vec3(_3498, _3499, _3500))) + _3575;
                                float _4698 = isnan(0.0) ? _3581 : (isnan(_3581) ? 0.0 : max(_3581, 0.0));
                                float _3582 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
                                float _3583 = 1.0 - _3550;
                                float _3593 = (0.5 / (((_3582 * ((_3565 * _3583) + _3550)) + 9.9999999392252902907785028219223e-09) + (((_3582 * _3583) + _3550) * _3565))) * _3582;
                                float _4709 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                                float _3603 = (_3528 * _3505) * (((_3551 * 3.1415927410125732421875) * (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0)))) / ((_3573 * _3573) * ((_3518 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3603 * _3387.x;
                                frontier_phi_73_pred_1 = _3603 * _3387.y;
                                frontier_phi_73_pred_2 = _3529 * _3375.z;
                                frontier_phi_73_pred_3 = _3529 * _3375.y;
                                frontier_phi_73_pred_4 = _3529 * _3375.x;
                                frontier_phi_73_pred_5 = _3603 * _3387.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3607 = frontier_phi_73_pred;
                            _3608 = frontier_phi_73_pred_1;
                            _3612 = frontier_phi_73_pred_2;
                            _3611 = frontier_phi_73_pred_3;
                            _3610 = frontier_phi_73_pred_4;
                            _3609 = frontier_phi_73_pred_5;
                            _3317 = _3610 + _3330;
                            _3318 = _3611 + _3331;
                            _3319 = _3612 + _3332;
                            _3314 = _3607 + _3327;
                            _3315 = _3608 + _3328;
                            _3316 = _3609 + _3329;
                            if (_3334 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3316;
                                _3330 = _3317;
                                _3331 = _3318;
                                _3332 = _3319;
                                _3333 = _3334;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3317;
                        frontier_phi_67_pred_1 = _3318;
                        frontier_phi_67_pred_2 = _3319;
                        frontier_phi_67_pred_3 = _3316;
                        frontier_phi_67_pred_4 = _3315;
                        frontier_phi_67_pred_5 = _3314;
                    }
                    _2982 = frontier_phi_67_pred;
                    _2984 = frontier_phi_67_pred_1;
                    _2986 = frontier_phi_67_pred_2;
                    _2980 = frontier_phi_67_pred_3;
                    _2978 = frontier_phi_67_pred_4;
                    _2976 = frontier_phi_67_pred_5;
                    uint _3121 = _3120 + 1u;
                    if (_3121 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3114 = _2976;
                        _3115 = _2978;
                        _3116 = _2980;
                        _3117 = _2982;
                        _3118 = _2984;
                        _3119 = _2986;
                        _3120 = _3121;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2984;
                frontier_phi_55_56_ladder_1 = _2986;
                frontier_phi_55_56_ladder_2 = _2982;
                frontier_phi_55_56_ladder_3 = _2980;
                frontier_phi_55_56_ladder_4 = _2978;
                frontier_phi_55_56_ladder_5 = _2976;
            }
            else
            {
                frontier_phi_55_56_ladder = _2871;
                frontier_phi_55_56_ladder_1 = _2873;
                frontier_phi_55_56_ladder_2 = _2869;
                frontier_phi_55_56_ladder_3 = _2867;
                frontier_phi_55_56_ladder_4 = _2865;
                frontier_phi_55_56_ladder_5 = _2863;
            }
            _2975 = frontier_phi_55_56_ladder_5;
            _2977 = frontier_phi_55_56_ladder_4;
            _2979 = frontier_phi_55_56_ladder_3;
            _2981 = frontier_phi_55_56_ladder_2;
            _2983 = frontier_phi_55_56_ladder;
            _2985 = frontier_phi_55_56_ladder_1;
        }
        float _2990 = isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0));
        _2775 = (_2990 * _2981) + _2211;
        _2777 = (_2990 * _2983) + _2213;
        _2779 = (_2990 * _2985) + _2215;
        _2781 = ((_2975 * _1027) * _2990) + _2556;
        _2783 = ((_2977 * _1029) * _2990) + _2558;
        _2785 = ((_2979 * _1030) * _2990) + _2560;
    }
    else
    {
        _2775 = _2211;
        _2777 = _2213;
        _2779 = _2215;
        _2781 = _2556;
        _2783 = _2558;
        _2785 = _2560;
    }
    float _4725 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _4736 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _4747 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    uint _2805 = _279 + 6u;
    float _2813 = _965 / cbSceneParam._m0[86u].x;
    float _2814 = _966 / cbSceneParam._m0[86u].y;
    vec4 _2828 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2813, _2814, (log2((isnan(cbSceneParam._m0[77u].w) ? _900 : (isnan(_900) ? cbSceneParam._m0[77u].w : min(_900, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2830 = _2828.x;
    float _2831 = _2828.y;
    float _2832 = _2828.z;
    float _2833 = _2828.w;
    float _2925;
    float _2927;
    float _2929;
    float _2931;
    if (_900 > cbSceneParam._m0[78u].w)
    {
        float _2888 = isnan(_900) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _900 : min(cbSceneParam._m0[80u].w, _900));
        float _2889 = _2888 / _900;
        float _2900 = _2889 * _950;
        float _2901 = _951 * _2889;
        float _2902 = (-0.0) - _2901;
        float _2903 = _2889 * _952;
        float _2905 = (cbSceneParam._m0[77u].w * _2902) / _2888;
        float _2906 = _2905 + cbSceneParam._m0[79u].w;
        float _2907 = cbSceneParam._m0[79u].w - _2901;
        float _2913 = sqrt(((_2900 * _2900) + (_2901 * _2901)) + (_2903 * _2903));
        float _2916 = (1.0 - (cbSceneParam._m0[77u].w / _2888)) * _2913;
        float _2921 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2923 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3076;
        if (abs((_2902 - _2905) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3076 = ((((_2906 > 0.0) ? exp2(_2921 * _2906) : (2.0 - exp2(_2923 * _2906))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2916;
        }
        else
        {
            float _3036 = 1.0 / cbSceneParam._m0[80u].x;
            float _3037 = isnan(_2907) ? _2906 : (isnan(_2906) ? _2907 : max(_2906, _2907));
            float _3038 = isnan(_2907) ? _2906 : (isnan(_2906) ? _2907 : min(_2906, _2907));
            float _3047 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : min(_3037, 0.0));
            float _3048 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : min(_3038, 0.0));
            _3076 = ((abs(_2913 / _2902) * cbSceneParam._m0[80u].y) * ((((_3047 - _3048) * 2.0) - ((exp2(_2921 * (isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0)))) - exp2(_2921 * (isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0))))) * _3036)) - ((exp2(_2923 * _3047) - exp2(_2923 * _3048)) * _3036))) + (_2916 * cbSceneParam._m0[80u].z);
        }
        vec4 _3078 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2813, _2814, 1.0), 0.0);
        float _3087 = exp2((_3076 * (-1.44269502162933349609375)) * (1.0 - _3078.w));
        float _3088 = log2(_3087);
        float _3104 = log2(_2833);
        _2925 = (exp2(_3104 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3088 * cbSceneParam._m0[78u].x)) * _3078.x) / cbSceneParam._m0[78u].x)) + _2830;
        _2927 = (exp2(_3104 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3088 * cbSceneParam._m0[78u].y)) * _3078.y) / cbSceneParam._m0[78u].y)) + _2831;
        _2929 = (exp2(_3104 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3088 * cbSceneParam._m0[78u].z)) * _3078.z) / cbSceneParam._m0[78u].z)) + _2832;
        _2931 = _3087 * _2833;
    }
    else
    {
        _2925 = _2830;
        _2927 = _2831;
        _2929 = _2832;
        _2931 = _2833;
    }
    float _2943 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2944 = _2943 == 3.0;
    float _2945 = log2(_2931);
    float _2952 = exp2(_2945 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2775 + ((isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0))) * _1043))) + ((_2781 + ((isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0))) * _1851)) * cbPerFrame._m0[3u].x));
    float _2953 = exp2(_2945 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0))) * (_2777 + ((isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0))) * _1043))) + ((_2783 + ((isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0))) * _1851)) * cbPerFrame._m0[3u].x));
    float _2954 = exp2(_2945 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0))) * (_2779 + ((isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))) * _1043))) + ((_2785 + ((isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0))) * _1851)) * cbPerFrame._m0[3u].x));
    float _2963 = (_2943 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2963 * (_2944 ? _2952 : (_2952 + (cbSceneParam._m0[72u].w * _2925)));
    SV_Target.y = _2963 * (_2944 ? _2953 : (_2953 + (cbSceneParam._m0[72u].w * _2927)));
    SV_Target.z = _2963 * (_2944 ? _2954 : (_2954 + (cbSceneParam._m0[72u].w * _2929)));
    SV_Target.w = cbInstanceData._m0[_2805].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2805].w;
}


