#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1199;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _258 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _259 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3810 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _3821 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _3832 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    uint _269 = uint(roundEven(NORMAL.w)) * 13u;
    uint _274 = _269 + 1u;
    uint _278 = _269 + 2u;
    float _287 = sqrt(((cbInstanceData._m0[_274].x * cbInstanceData._m0[_274].x) + (cbInstanceData._m0[_269].x * cbInstanceData._m0[_269].x)) + (cbInstanceData._m0[_278].x * cbInstanceData._m0[_278].x));
    float _288 = _287 * TEXCOORD.z;
    float _289 = _287 * TEXCOORD.w;
    vec4 _302 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _288) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _289) + cbTextureTilingScale._m0[13u].w));
    vec4 _325 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _330 = _325.x * cbMtdParam._m0[9u].x;
    float _331 = _325.y * cbMtdParam._m0[9u].y;
    float _332 = _325.z * cbMtdParam._m0[9u].z;
    float _336 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _302.x) * _330;
    float _339 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _302.y) * _331;
    float _342 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _302.z) * _332;
    float _349 = ((_330 - _336) * (isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0)))) + _336;
    float _350 = ((_331 - _339) * (isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0)))) + _339;
    float _351 = ((_332 - _342) * (isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0)))) + _342;
    vec4 _369 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _288) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _289) + cbTextureTilingScale._m0[20u].w));
    vec4 _395 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _399 = _395.z;
    float _403 = (_395.x * 2.0) + (-1.0);
    float _404 = (_395.y * 2.0) + (-1.0);
    float _405 = dot(vec2(_403, _404), vec2(_403, _404));
    float _3843 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _410 = sqrt(1.0 - (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))));
    float _415 = _403 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_369.x * 2.0) + (-1.0)));
    float _416 = _404 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_369.y * 2.0) + (-1.0)));
    vec4 _433 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _288) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _289) + cbTextureTilingScale._m0[11u].w));
    float _435 = _433.x;
    float _436 = 1.0 - _435;
    float _445 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _448 = ((isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : min(_445, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _457 = (_448 - ((((((_435 - _436) * cbMtdParam._m0[24u].z) + _436) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _448))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3864 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _458 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
    float _465 = (_458 * (cbMtdParam._m0[17u].x - _349)) + _349;
    float _466 = (_458 * (cbMtdParam._m0[17u].y - _350)) + _350;
    float _467 = (_458 * (cbMtdParam._m0[17u].z - _351)) + _351;
    vec4 _480 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _288) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _289) + cbTextureTilingScale._m0[19u].w));
    float _482 = _480.x;
    float _483 = 1.0 - _482;
    float _510 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_482 - _483) * cbMtdParam._m0[24u].w) + _483) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3875 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _511 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _519 = ((((cbMtdParam._m0[10u].x - _465) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _511) + _465;
    float _520 = ((((cbMtdParam._m0[10u].y - _466) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _511) + _466;
    float _521 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _467)) * _511) + _467;
    vec4 _534 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _536 = _534.x;
    float _538 = _536 - (_536 * _458);
    float _540 = _538 - (_538 * _511);
    float _545 = (((_369.z - _399) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _399;
    vec4 _559 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _288) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _289) + cbTextureTilingScale._m0[15u].w));
    float _566 = (_559.x * 2.0) + (-1.0);
    float _567 = (_559.y * 2.0) + (-1.0);
    float _568 = dot(vec2(_566, _567), vec2(_566, _567));
    float _3886 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _576 = (_458 * (_559.z - _545)) + _545;
    float _579 = ((cbMtdParam._m0[23u].y - _576) * _511) + _576;
    vec4 _601 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _288) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _289) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _607 = (_601.x * 2.0) + (-1.0);
    float _608 = (_601.y * 2.0) + (-1.0);
    float _609 = dot(vec2(_607, _608), vec2(_607, _608));
    float _3897 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _626 = (((_566 - _415) + (cbMtdParam._m0[21u].x * _415)) * _458) + _415;
    float _627 = (((_567 - _416) + (cbMtdParam._m0[21u].x * _416)) * _458) + _416;
    float _628 = (_458 * (sqrt(1.0 - (isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0)))) - _410)) + _410;
    float _639 = (((_607 - _626) + (_626 * cbMtdParam._m0[22u].z)) * _511) + _626;
    float _640 = (((_608 - _627) + (_627 * cbMtdParam._m0[22u].z)) * _511) + _627;
    float _641 = ((sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) - _628) * _511) + _628;
    float _643 = cbMtdParam._m0[22u].x + _395.w;
    float _646 = fma(_641, _237 * NORMAL.x, fma(_640, _244 * TANGENT.x, (_230 * _222) * _639));
    float _649 = fma(_641, _237 * NORMAL.y, fma(_640, _244 * TANGENT.y, (_230 * _223) * _639));
    float _652 = fma(_641, _237 * NORMAL.z, fma(_640, _244 * TANGENT.z, (_230 * _224) * _639));
    float _656 = inversesqrt(dot(vec3(_646, _649, _652), vec3(_646, _649, _652)));
    float _657 = _656 * _646;
    float _658 = _656 * _649;
    float _659 = _656 * _652;
    float _3908 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _660 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _3919 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3930 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _3941 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _3952 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _3963 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _665 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
    float _679 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _719 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _729 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _719);
    float _730 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _719);
    float _731 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _719);
    float _735 = inversesqrt(dot(vec3(_729, _730, _731), vec3(_729, _730, _731)));
    float _736 = _729 * _735;
    float _737 = _730 * _735;
    float _738 = _731 * _735;
    float _744 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _745 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _766 = fma(_659, cbSceneParam._m0[5u].z, fma(_658, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _657));
    float _769 = fma(_659, cbSceneParam._m0[6u].z, fma(_658, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _657));
    float _772 = fma(_659, cbSceneParam._m0[7u].z, fma(_658, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _657));
    uint _786 = (_269 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _792 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0)))) * cbInstanceData._m0[_786].x;
    float _793 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_786].y;
    float _794 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_786].z;
    float _3974 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _795 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _796 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _3996 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _797 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    float _798 = 1.0 - _665;
    float _799 = _795 * _798;
    float _800 = _796 * _798;
    float _801 = _797 * _798;
    float _806 = (_795 + (-0.039999999105930328369140625)) * _665;
    float _807 = (_796 + (-0.039999999105930328369140625)) * _665;
    float _808 = (_797 + (-0.039999999105930328369140625)) * _665;
    float _809 = _806 + 0.039999999105930328369140625;
    float _811 = _807 + 0.039999999105930328369140625;
    float _812 = _808 + 0.039999999105930328369140625;
    vec4 _821 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _744, cbSceneParam._m0[86u].y * _745));
    float _825 = ((isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0))) * TEXCOORD_5.w) * _821.x;
    float _826 = dot(vec3(_657, _658, _659), vec3(_736, _737, _738));
    float _829 = _826 * 2.0;
    float _833 = (_829 * _657) - _736;
    float _834 = (_829 * _658) - _737;
    float _835 = (_829 * _659) - _738;
    float _839 = abs(dot(vec3(_736, _737, _738), vec3(_657, _658, _659)));
    float _4007 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _841 = sqrt(_660);
    float _854 = exp2((_841 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_841 * 3.0));
    float _860 = (1.0 - _854) * ((_841 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _861 = _854 * _841;
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _893 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _897 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1198;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    float _1208;
    float _1209;
    float _1210;
    float _1211;
    float _1212;
    float _1213;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _923 = fma(_897, cbModelParam._m0[26u].z, fma(_893, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _889));
        float _927 = fma(_897, cbModelParam._m0[27u].z, fma(_893, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _889));
        float _931 = fma(_897, cbModelParam._m0[28u].z, fma(_893, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _889));
        float _956 = _889 + _657;
        float _957 = _893 + _658;
        float _958 = _897 + _659;
        float _968 = fma(_958, cbModelParam._m0[26u].z, fma(_957, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _956)) - _923;
        float _969 = fma(_958, cbModelParam._m0[27u].z, fma(_957, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _956)) - _927;
        float _970 = fma(_958, cbModelParam._m0[28u].z, fma(_957, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _956)) - _931;
        float _974 = inversesqrt(dot(vec3(_968, _969, _970), vec3(_968, _969, _970)));
        float _987 = ((_974 * _968) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_923 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _988 = ((_974 * _969) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_927 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _989 = ((_974 * _970) / cbModelParam._m0[34u].z) + ((((((_931 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _992 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_987, _988, _989), 0.0);
        vec4 _999 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_987, _988, _989), 0.0);
        vec4 _1006 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_987, _988, _989), 0.0);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_987, _988, _989), 0.0);
        float _1026 = exp2((_992.w + (-0.5)) * 20.0) * 2.0;
        float _1027 = _1026 * (_992.x + (-0.5));
        float _1028 = _1026 * (_992.y + (-0.5));
        float _1029 = _1026 * (_992.z + (-0.5));
        float _1036 = exp2((_999.w + (-0.5)) * 20.0) * 2.0;
        float _1037 = _1036 * (_999.x + (-0.5));
        float _1038 = _1036 * (_999.y + (-0.5));
        float _1039 = _1036 * (_999.z + (-0.5));
        float _1046 = exp2((_1006.w + (-0.5)) * 20.0) * 2.0;
        float _1047 = _1046 * (_1006.x + (-0.5));
        float _1048 = _1046 * (_1006.y + (-0.5));
        float _1049 = _1046 * (_1006.z + (-0.5));
        float _1056 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1013.x + (-0.5));
        float _1058 = _1056 * (_1013.y + (-0.5));
        float _1059 = _1056 * (_1013.z + (-0.5));
        float _1060 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1061 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1062 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
        float _1063 = _1027 * 0.5;
        float _1064 = _1037 * 0.5;
        float _1065 = _1047 * 0.5;
        float _1066 = dot(vec3(_1063, _1064, _1065), vec3(_1063, _1064, _1065));
        float _1071 = (_1066 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1066);
        float _1080 = (dot(vec3(_657, _658, _659), vec3(_1071 * _1063, _1071 * _1064, _1071 * _1065)) + 1.0) * 0.5;
        float _4033 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1090 = sqrt(((_1064 * _1064) + (_1063 * _1063)) + (_1065 * _1065)) / (_1060 + 9.9999997473787516355514526367188e-06);
        float _4044 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
        float _1091 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1092 = _1091 * 2.0;
        float _1096 = (1.0 - _1091) / (_1091 + 1.0);
        float _4055 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        float _1097 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1106 = ((((1.0 - _1097) * (_1092 + 2.0)) * exp2(log2(isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * (_1092 + 1.0))) + _1097) * _1060;
        float _1107 = _1028 * 0.5;
        float _1108 = _1038 * 0.5;
        float _1109 = _1048 * 0.5;
        float _1110 = dot(vec3(_1107, _1108, _1109), vec3(_1107, _1108, _1109));
        float _1115 = (_1110 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1110);
        float _1123 = (dot(vec3(_657, _658, _659), vec3(_1115 * _1107, _1115 * _1108, _1115 * _1109)) + 1.0) * 0.5;
        float _4066 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1132 = sqrt(((_1108 * _1108) + (_1107 * _1107)) + (_1109 * _1109)) / (_1061 + 9.9999997473787516355514526367188e-06);
        float _4077 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1133 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1134 = _1133 * 2.0;
        float _1138 = (1.0 - _1133) / (_1133 + 1.0);
        float _4088 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1148 = ((((1.0 - _1139) * (_1134 + 2.0)) * exp2(log2(isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * (_1134 + 1.0))) + _1139) * _1061;
        float _1149 = _1029 * 0.5;
        float _1150 = _1039 * 0.5;
        float _1151 = _1049 * 0.5;
        float _1152 = dot(vec3(_1149, _1150, _1151), vec3(_1149, _1150, _1151));
        float _1157 = (_1152 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1152);
        float _1165 = (dot(vec3(_657, _658, _659), vec3(_1157 * _1149, _1157 * _1150, _1157 * _1151)) + 1.0) * 0.5;
        float _4099 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1174 = sqrt(((_1150 * _1150) + (_1149 * _1149)) + (_1151 * _1151)) / (_1062 + 9.9999997473787516355514526367188e-06);
        float _4110 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1175 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1176 = _1175 * 2.0;
        float _1180 = (1.0 - _1175) / (_1175 + 1.0);
        float _4121 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1181 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1190 = ((((1.0 - _1181) * (_1176 + 2.0)) * exp2(log2(isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * (_1176 + 1.0))) + _1181) * _1062;
        _1198 = _1029;
        _1200 = _1028;
        _1201 = _1027;
        _1202 = _1039;
        _1203 = _1038;
        _1204 = _1037;
        _1205 = _1049;
        _1206 = _1048;
        _1207 = _1047;
        _1208 = _1062;
        _1209 = _1061;
        _1210 = _1060;
        _1211 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0)));
        _1212 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0)));
        _1213 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0)));
    }
    else
    {
        _1198 = _1199;
        _1200 = _1199;
        _1201 = _1199;
        _1202 = _1199;
        _1203 = _1199;
        _1204 = _1199;
        _1205 = _1199;
        _1206 = _1199;
        _1207 = _1199;
        _1208 = _1199;
        _1209 = _1199;
        _1210 = _1199;
        _1211 = 0.0;
        _1212 = 0.0;
        _1213 = 0.0;
    }
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1238 = fma(_897, cbModelParam._m0[30u].z, fma(_893, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _889));
        float _1242 = fma(_897, cbModelParam._m0[31u].z, fma(_893, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _889));
        float _1246 = fma(_897, cbModelParam._m0[32u].z, fma(_893, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _889));
        float _1269 = _889 + _657;
        float _1270 = _893 + _658;
        float _1271 = _897 + _659;
        float _1281 = fma(_1271, cbModelParam._m0[30u].z, fma(_1270, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1269)) - _1238;
        float _1282 = fma(_1271, cbModelParam._m0[31u].z, fma(_1270, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1269)) - _1242;
        float _1283 = fma(_1271, cbModelParam._m0[32u].z, fma(_1270, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1269)) - _1246;
        float _1287 = inversesqrt(dot(vec3(_1281, _1282, _1283), vec3(_1281, _1282, _1283)));
        float _1300 = ((_1287 * _1281) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1238 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1301 = ((_1287 * _1282) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1242 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1302 = ((_1287 * _1283) / cbModelParam._m0[35u].z) + ((((((_1246 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        float _1337 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1338 = _1337 * (_1304.x + (-0.5));
        float _1339 = _1337 * (_1304.y + (-0.5));
        float _1340 = _1337 * (_1304.z + (-0.5));
        float _1347 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1348 = _1347 * (_1311.x + (-0.5));
        float _1349 = _1347 * (_1311.y + (-0.5));
        float _1350 = _1347 * (_1311.z + (-0.5));
        float _1357 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1358 = _1357 * (_1318.x + (-0.5));
        float _1359 = _1357 * (_1318.y + (-0.5));
        float _1360 = _1357 * (_1318.z + (-0.5));
        float _1367 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1325.x + (-0.5));
        float _1369 = _1367 * (_1325.y + (-0.5));
        float _1370 = _1367 * (_1325.z + (-0.5));
        float _1371 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1372 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = _1338 * 0.5;
        float _1375 = _1348 * 0.5;
        float _1376 = _1358 * 0.5;
        float _1377 = dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376));
        float _1382 = (_1377 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1377);
        float _1390 = (dot(vec3(_657, _658, _659), vec3(_1382 * _1374, _1382 * _1375, _1382 * _1376)) + 1.0) * 0.5;
        float _4162 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1399 = sqrt(((_1375 * _1375) + (_1374 * _1374)) + (_1376 * _1376)) / (_1371 + 9.9999997473787516355514526367188e-06);
        float _4173 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1401 = _1400 * 2.0;
        float _1405 = (1.0 - _1400) / (_1400 + 1.0);
        float _4184 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1415 = ((((1.0 - _1406) * (_1401 + 2.0)) * exp2(log2(isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))) * (_1401 + 1.0))) + _1406) * _1371;
        float _1416 = _1339 * 0.5;
        float _1417 = _1349 * 0.5;
        float _1418 = _1359 * 0.5;
        float _1419 = dot(vec3(_1416, _1417, _1418), vec3(_1416, _1417, _1418));
        float _1424 = (_1419 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1419);
        float _1432 = (dot(vec3(_657, _658, _659), vec3(_1424 * _1416, _1424 * _1417, _1424 * _1418)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1441 = sqrt(((_1417 * _1417) + (_1416 * _1416)) + (_1418 * _1418)) / (_1372 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1442 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1443 = _1442 * 2.0;
        float _1447 = (1.0 - _1442) / (_1442 + 1.0);
        float _4217 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1457 = ((((1.0 - _1448) * (_1443 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1443 + 1.0))) + _1448) * _1372;
        float _1458 = _1340 * 0.5;
        float _1459 = _1350 * 0.5;
        float _1460 = _1360 * 0.5;
        float _1461 = dot(vec3(_1458, _1459, _1460), vec3(_1458, _1459, _1460));
        float _1466 = (_1461 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1461);
        float _1474 = (dot(vec3(_657, _658, _659), vec3(_1466 * _1458, _1466 * _1459, _1466 * _1460)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1483 = sqrt(((_1459 * _1459) + (_1458 * _1458)) + (_1460 * _1460)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1484 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1485 = _1484 * 2.0;
        float _1489 = (1.0 - _1484) / (_1484 + 1.0);
        float _4250 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1499 = ((((1.0 - _1490) * (_1485 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1485 + 1.0))) + _1490) * _1373;
        _1507 = _1340;
        _1508 = _1339;
        _1509 = _1338;
        _1510 = _1350;
        _1511 = _1349;
        _1512 = _1348;
        _1513 = _1360;
        _1514 = _1359;
        _1515 = _1358;
        _1516 = _1373;
        _1517 = _1372;
        _1518 = _1371;
        _1519 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0)));
        _1520 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0)));
        _1521 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0)));
    }
    else
    {
        _1507 = _1199;
        _1508 = _1199;
        _1509 = _1199;
        _1510 = _1199;
        _1511 = _1199;
        _1512 = _1199;
        _1513 = _1199;
        _1514 = _1199;
        _1515 = _1199;
        _1516 = _1199;
        _1517 = _1199;
        _1518 = _1199;
        _1519 = 0.0;
        _1520 = 0.0;
        _1521 = 0.0;
    }
    float _1531 = (cbModelParam._m0[1u].x * (_1519 - _1211)) + _1211;
    float _1532 = (cbModelParam._m0[1u].x * (_1520 - _1212)) + _1212;
    float _1533 = (cbModelParam._m0[1u].x * (_1521 - _1213)) + _1213;
    float _1554 = fma(_1533, cbSceneParam._m0[89u].z, fma(_1532, cbSceneParam._m0[89u].y, _1531 * cbSceneParam._m0[89u].x));
    float _1557 = fma(_1533, cbSceneParam._m0[90u].z, fma(_1532, cbSceneParam._m0[90u].y, _1531 * cbSceneParam._m0[90u].x));
    float _1560 = fma(_1533, cbSceneParam._m0[91u].z, fma(_1532, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1531));
    float _1575 = _833 * 0.5;
    float _1576 = _834 * 0.5;
    float _1577 = _835 * 0.5;
    float _1578 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1509, _1512, _1515, _1518));
    float _1581 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1508, _1511, _1514, _1517));
    float _1584 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1507, _1510, _1513, _1516));
    float _1618;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1591 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1198, _1202, _1205, _1208));
        float _1595 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1200, _1203, _1206, _1209));
        float _1599 = dot(vec4(_1575, _1576, _1577, 1.0), vec4(_1201, _1204, _1207, _1210));
        float _1606 = dot(vec4(cbModelParam._m0[39u]), vec4(_1575, _1576, _1577, 1.0));
        _1618 = dot(vec3(isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0)), isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1606) ? 0.0 : (isnan(0.0) ? _1606 : max(0.0, _1606))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1618 = 1.0;
    }
    float _1629;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1620 = dot(vec4(cbModelParam._m0[40u]), vec4(_1575, _1576, _1577, 1.0));
        _1629 = dot(vec3(isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0)), isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0)), isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1620) ? 0.0 : (isnan(0.0) ? _1620 : max(0.0, _1620))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1629 = 1.0;
    }
    float _1633 = (_1629 * cbModelParam._m0[1u].x) + (_1618 * (1.0 - cbModelParam._m0[1u].x));
    float _1643 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _660);
    float _1644 = isnan(_1643) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1643 : min(cbModelParam._m0[25u].z, _1643));
    float _1725;
    float _1727;
    float _1729;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1692 = fma(_897, cbModelParam._m0[13u].z, fma(_893, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _889)) + cbModelParam._m0[13u].w;
        float _1696 = fma(_897, cbModelParam._m0[14u].z, fma(_893, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _889)) + cbModelParam._m0[14u].w;
        float _1700 = fma(_897, cbModelParam._m0[15u].z, fma(_893, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _889)) + cbModelParam._m0[15u].w;
        float _1703 = fma(_835, cbModelParam._m0[13u].z, fma(_834, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _833));
        float _1706 = fma(_835, cbModelParam._m0[14u].z, fma(_834, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _833));
        float _1709 = fma(_835, cbModelParam._m0[15u].z, fma(_834, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _833));
        float _1737;
        if (_1703 > 0.0)
        {
            _1737 = abs((1.0 - _1692) / _1703);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1703 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1692 + 1.0) / _1703);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1737 = frontier_phi_14_12_ladder;
        }
        float _1909;
        if (_1706 > 0.0)
        {
            _1909 = abs((1.0 - _1696) / _1706);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1706 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1696 + 1.0) / _1706);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1909 = frontier_phi_23_19_ladder;
        }
        float _2205;
        if (_1709 > 0.0)
        {
            _2205 = abs((1.0 - _1700) / _1709);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1709 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1700 + 1.0) / _1709);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2205 = frontier_phi_35_30_ladder;
        }
        float _2207 = isnan(_1909) ? _1737 : (isnan(_1737) ? _1909 : min(_1737, _1909));
        float _2208 = isnan(_2205) ? _2207 : (isnan(_2207) ? _2205 : min(_2207, _2205));
        float _2212 = (_2208 * _1703) + _1692;
        float _2213 = (_2208 * _1706) + _1696;
        float _2214 = (_2208 * _1709) + _1700;
        float _2215 = _2208 * 9.9999997473787516355514526367188e-05;
        float _2217 = (-1.0) - _2215;
        float _2219 = _2215 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2214 > _2219) || ((_2214 < _2217) || ((_2213 > _2219) || ((_2213 < _2217) || ((_2212 < _2217) || (_2212 > _2219))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2359 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2214, cbModelParam._m0[9u].z, fma(_2213, cbModelParam._m0[9u].y, _2212 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2214, cbModelParam._m0[10u].z, fma(_2213, cbModelParam._m0[10u].y, _2212 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2214, cbModelParam._m0[11u].z, fma(_2213, cbModelParam._m0[11u].y, _2212 * cbModelParam._m0[11u].x))), _1644);
            frontier_phi_13_35_ladder = _2359.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2359.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2359.x * cbModelParam._m0[1u].y;
        }
        _1725 = frontier_phi_13_35_ladder_2;
        _1727 = frontier_phi_13_35_ladder_1;
        _1729 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1713 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_833, _834, _835), _1644);
        _1725 = _1713.x * cbModelParam._m0[1u].y;
        _1727 = _1713.y * cbModelParam._m0[1u].y;
        _1729 = _1713.z * cbModelParam._m0[1u].y;
    }
    float _1733 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _660);
    float _1734 = isnan(_1733) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1733 : min(cbModelParam._m0[25u].w, _1733));
    float _1824;
    float _1826;
    float _1828;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1788 = fma(_897, cbModelParam._m0[21u].z, fma(_893, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _889)) + cbModelParam._m0[21u].w;
        float _1792 = fma(_897, cbModelParam._m0[22u].z, fma(_893, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _889)) + cbModelParam._m0[22u].w;
        float _1796 = fma(_897, cbModelParam._m0[23u].z, fma(_893, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _889)) + cbModelParam._m0[23u].w;
        float _1799 = fma(_835, cbModelParam._m0[21u].z, fma(_834, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _833));
        float _1802 = fma(_835, cbModelParam._m0[22u].z, fma(_834, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _833));
        float _1805 = fma(_835, cbModelParam._m0[23u].z, fma(_834, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _833));
        float _1914;
        if (_1799 > 0.0)
        {
            _1914 = abs((1.0 - _1788) / _1799);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1788 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1914 = frontier_phi_25_21_ladder;
        }
        float _2232;
        if (_1802 > 0.0)
        {
            _2232 = abs((1.0 - _1792) / _1802);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1802 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1792 + 1.0) / _1802);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2232 = frontier_phi_37_32_ladder;
        }
        float _2570;
        if (_1805 > 0.0)
        {
            _2570 = abs((1.0 - _1796) / _1805);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1796 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2570 = frontier_phi_47_44_ladder;
        }
        float _2572 = isnan(_2232) ? _1914 : (isnan(_1914) ? _2232 : min(_1914, _2232));
        float _2573 = isnan(_2570) ? _2572 : (isnan(_2572) ? _2570 : min(_2572, _2570));
        float _2577 = (_2573 * _1799) + _1788;
        float _2578 = (_2573 * _1802) + _1792;
        float _2579 = (_2573 * _1805) + _1796;
        float _2580 = _2573 * 9.9999997473787516355514526367188e-05;
        float _2581 = (-1.0) - _2580;
        float _2583 = _2580 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2579 > _2583) || ((_2579 < _2581) || ((_2578 > _2583) || ((_2578 < _2581) || ((_2577 < _2581) || (_2577 > _2583))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2701 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2579, cbModelParam._m0[17u].z, fma(_2578, cbModelParam._m0[17u].y, _2577 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2579, cbModelParam._m0[18u].z, fma(_2578, cbModelParam._m0[18u].y, _2577 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2579, cbModelParam._m0[19u].z, fma(_2578, cbModelParam._m0[19u].y, _2577 * cbModelParam._m0[19u].x))), _1734);
            frontier_phi_22_47_ladder = _2701.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2701.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2701.x * cbModelParam._m0[1u].z;
        }
        _1824 = frontier_phi_22_47_ladder_2;
        _1826 = frontier_phi_22_47_ladder_1;
        _1828 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1808 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_833, _834, _835), _1734);
        _1824 = _1808.x * cbModelParam._m0[1u].z;
        _1826 = _1808.y * cbModelParam._m0[1u].z;
        _1828 = _1808.z * cbModelParam._m0[1u].z;
    }
    float _1841 = (((_860 * _809) + _861) * _825) * ((cbModelParam._m0[1u].w * (_1824 - _1725)) + _1725);
    float _1843 = (((_860 * _811) + _861) * _825) * ((cbModelParam._m0[1u].w * (_1826 - _1727)) + _1727);
    float _1845 = (((_860 * _812) + _861) * _825) * ((cbModelParam._m0[1u].w * (_1828 - _1729)) + _1729);
    float _1848 = fma(_1845, cbSceneParam._m0[89u].z, fma(_1843, cbSceneParam._m0[89u].y, _1841 * cbSceneParam._m0[89u].x));
    float _1851 = fma(_1845, cbSceneParam._m0[90u].z, fma(_1843, cbSceneParam._m0[90u].y, _1841 * cbSceneParam._m0[90u].x));
    float _1854 = fma(_1845, cbSceneParam._m0[91u].z, fma(_1843, cbSceneParam._m0[91u].y, _1841 * cbSceneParam._m0[91u].x));
    float _1888 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1892 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1896 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1900 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1901 = _1888 / _1900;
    float _1902 = _1892 / _1900;
    float _1903 = _1896 / _1900;
    float _2050;
    float _2051;
    float _2052;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1930 = ((uint(_1903 > cbSceneParam._m0[59u].y) + uint(_1903 > cbSceneParam._m0[59u].x)) + uint(_1903 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1931 = _1930 + 43u;
        uint _1939 = _1930 + 44u;
        uint _1947 = _1930 + 45u;
        uint _1955 = _1930 + 46u;
        float _1966 = fma(_1900, cbSceneParam._m0[_1931].w, fma(_1896, cbSceneParam._m0[_1931].z, fma(_1892, cbSceneParam._m0[_1931].y, _1888 * cbSceneParam._m0[_1931].x)));
        float _1970 = fma(_1900, cbSceneParam._m0[_1939].w, fma(_1896, cbSceneParam._m0[_1939].z, fma(_1892, cbSceneParam._m0[_1939].y, _1888 * cbSceneParam._m0[_1939].x)));
        float _1978 = fma(_1900, cbSceneParam._m0[_1955].w, fma(_1896, cbSceneParam._m0[_1955].z, fma(_1892, cbSceneParam._m0[_1955].y, _1888 * cbSceneParam._m0[_1955].x)));
        float _1983 = cbSceneParam._m0[33u].z * _1978;
        float _1985 = cbSceneParam._m0[33u].w * _1978;
        float _1988 = fma(_1900, cbSceneParam._m0[_1947].w, fma(_1896, cbSceneParam._m0[_1947].z, fma(_1892, cbSceneParam._m0[_1947].y, _1888 * cbSceneParam._m0[_1947].x))) / _1978;
        float _2036 = (cbSceneParam._m0[33u].x - sqrt(((_1902 * _1902) + (_1901 * _1901)) + (_1903 * _1903))) * cbSceneParam._m0[33u].y;
        float _4376 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
        float _2043 = (isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1983 + _1966) / _1978, (_1985 + _1970) / _1978), _1988), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1985 + _1966) / _1978, (_1970 - _1983) / _1978), _1988), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1966 - _1983) / _1978, (_1970 - _1985) / _1978), _1988), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1966 - _1985) / _1978, (_1983 + _1970) / _1978), _1988), 0.0)).x), vec4(0.25)));
        _2050 = 1.0 - (_2043 * cbSceneParam._m0[34u].x);
        _2051 = 1.0 - (_2043 * cbSceneParam._m0[34u].y);
        _2052 = 1.0 - (_2043 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2050 = 1.0;
        _2051 = 1.0;
        _2052 = 1.0;
    }
    float _2116;
    float _2118;
    float _2120;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2104 = fma(_1900, cbSceneParam._m0[63u].w, fma(_1896, cbSceneParam._m0[63u].z, fma(_1892, cbSceneParam._m0[63u].y, _1888 * cbSceneParam._m0[63u].x)));
        float _2105 = fma(_1900, cbSceneParam._m0[60u].w, fma(_1896, cbSceneParam._m0[60u].z, fma(_1892, cbSceneParam._m0[60u].y, _1888 * cbSceneParam._m0[60u].x))) / _2104;
        float _2106 = fma(_1900, cbSceneParam._m0[61u].w, fma(_1896, cbSceneParam._m0[61u].z, fma(_1892, cbSceneParam._m0[61u].y, _1888 * cbSceneParam._m0[61u].x))) / _2104;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2105 >= cbSceneParam._m0[64u].x) && (_2106 >= cbSceneParam._m0[64u].y)) && (_2105 <= cbSceneParam._m0[64u].z)) && (_2106 <= cbSceneParam._m0[64u].w))
        {
            float _2245 = fma(_1900, cbSceneParam._m0[62u].w, fma(_1896, cbSceneParam._m0[62u].z, fma(_1892, cbSceneParam._m0[62u].y, _1888 * cbSceneParam._m0[62u].x))) / _2104;
            float _2249 = isnan(cbSceneParam._m0[41u].w) ? _2245 : (isnan(_2245) ? cbSceneParam._m0[41u].w : max(_2245, cbSceneParam._m0[41u].w));
            float _2292 = (cbSceneParam._m0[33u].x - sqrt(((_1902 * _1902) + (_1901 * _1901)) + (_1903 * _1903))) * cbSceneParam._m0[33u].y;
            float _4392 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
            float _2299 = (isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2105, cbSceneParam._m0[33u].w + _2106), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2105, _2106 - cbSceneParam._m0[33u].z), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2105 - cbSceneParam._m0[33u].z, _2106 - cbSceneParam._m0[33u].w), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2105 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2106), _2249), 0.0)).x), vec4(0.25)));
            float _2303 = 1.0 - (_2299 * cbSceneParam._m0[34u].x);
            float _2304 = 1.0 - (_2299 * cbSceneParam._m0[34u].y);
            float _2305 = 1.0 - (_2299 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2305) ? _2052 : (isnan(_2052) ? _2305 : min(_2052, _2305));
            frontier_phi_34_33_ladder_1 = isnan(_2304) ? _2051 : (isnan(_2051) ? _2304 : min(_2051, _2304));
            frontier_phi_34_33_ladder_2 = isnan(_2303) ? _2050 : (isnan(_2050) ? _2303 : min(_2050, _2303));
        }
        else
        {
            frontier_phi_34_33_ladder = _2052;
            frontier_phi_34_33_ladder_1 = _2051;
            frontier_phi_34_33_ladder_2 = _2050;
        }
        _2116 = frontier_phi_34_33_ladder_2;
        _2118 = frontier_phi_34_33_ladder_1;
        _2120 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2116 = _2050;
        _2118 = _2051;
        _2120 = _2052;
    }
    uvec4 _2125 = floatBitsToUint(cbInstanceData._m0[_269 + 5u]);
    uint _2127 = _2125.x * 14u;
    uint _2128 = _2127 + 13u;
    float _2135 = _825 + (-1.0);
    float _2140 = (cbLight._m0[_2128].x * _2135) + 1.0;
    float _2141 = (cbLight._m0[_2128].y * _2135) + 1.0;
    float _2142 = (cbLight._m0[_2128].z * _2135) + 1.0;
    float _2143 = (cbLight._m0[_2128].w * _2135) + 1.0;
    uint _2144 = _2127 + 5u;
    float _2150 = isnan(1.0) ? _2141 : (isnan(_2141) ? 1.0 : min(_2141, 1.0));
    uint _2154 = _2127 + 4u;
    float _2164 = isnan(1.0) ? _2140 : (isnan(_2140) ? 1.0 : min(_2140, 1.0));
    uint _2168 = _2127 | 1u;
    float _2179 = dot(vec3(cbLight._m0[_2127].xyz), vec3(_657, _658, _659));
    float _2182 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_657, _658, _659));
    float _4428 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _4439 = isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0));
    float _2187 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2189 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * 0.3183098733425140380859375;
    float _2196 = ((cbLight._m0[_2144].x * _2150) * _2189) + (((cbLight._m0[_2154].x * _2116) * _2164) * _2187);
    float _2197 = ((_2150 * cbLight._m0[_2144].y) * _2189) + (((cbLight._m0[_2154].y * _2118) * _2164) * _2187);
    float _2198 = ((_2150 * cbLight._m0[_2144].z) * _2189) + (((cbLight._m0[_2154].z * _2120) * _2164) * _2187);
    uvec4 _2202 = floatBitsToUint(cbLight._m0[_2127 + 12u]);
    bool _2204 = _2202.x == 0u;
    float _2306;
    float _2308;
    float _2310;
    if (_2204)
    {
        _2306 = _2196;
        _2308 = _2197;
        _2310 = _2198;
    }
    else
    {
        uint _2314 = _2127 + 6u;
        float _2330 = (dot(vec3(cbLight._m0[_2127 + 2u].xyz), vec3(_657, _658, _659)) * 0.5) + 0.5;
        float _2331 = _2330 * _2330;
        float _4450 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
        float _2332 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _2333 = isnan(1.0) ? _2142 : (isnan(_2142) ? 1.0 : min(_2142, 1.0));
        _2306 = (((cbLight._m0[_2314].x * 0.3183098733425140380859375) * _2332) * _2333) + _2196;
        _2308 = (((cbLight._m0[_2314].y * 0.3183098733425140380859375) * _2332) * _2333) + _2197;
        _2310 = (((cbLight._m0[_2314].z * 0.3183098733425140380859375) * _2332) * _2333) + _2198;
    }
    bool _2313 = _2202.y == 0u;
    float _2368;
    float _2370;
    float _2372;
    if (_2313)
    {
        _2368 = _2306;
        _2370 = _2308;
        _2372 = _2310;
    }
    else
    {
        uint _2541 = _2127 + 7u;
        float _2557 = (dot(vec3(cbLight._m0[_2127 + 3u].xyz), vec3(_657, _658, _659)) * 0.5) + 0.5;
        float _2558 = _2557 * _2557;
        float _4466 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
        float _2559 = isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0));
        float _2560 = isnan(1.0) ? _2143 : (isnan(_2143) ? 1.0 : min(_2143, 1.0));
        _2368 = (((cbLight._m0[_2541].x * 0.3183098733425140380859375) * _2559) * _2560) + _2306;
        _2370 = (((cbLight._m0[_2541].y * 0.3183098733425140380859375) * _2559) * _2560) + _2308;
        _2372 = (((cbLight._m0[_2541].z * 0.3183098733425140380859375) * _2559) * _2560) + _2310;
    }
    uint _2375 = _2127 + 8u;
    float _2388 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2127].w)) * _660) * 0.949999988079071044921875);
    float _2389 = _2388 * _2388;
    float _2390 = cbLight._m0[_2127].x + _736;
    float _2391 = cbLight._m0[_2127].y + _737;
    float _2392 = cbLight._m0[_2127].z + _738;
    float _2396 = inversesqrt(dot(vec3(_2390, _2391, _2392), vec3(_2390, _2391, _2392)));
    float _2397 = _2396 * _2390;
    float _2398 = _2396 * _2391;
    float _2399 = _2396 * _2392;
    float _2400 = dot(vec3(_657, _658, _659), vec3(cbLight._m0[_2127].xyz));
    float _4482 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2403 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _4493 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _2404 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2405 = dot(vec3(_657, _658, _659), vec3(_2397, _2398, _2399));
    float _4504 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
    float _2408 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _2409 = dot(vec3(cbLight._m0[_2127].xyz), vec3(_2397, _2398, _2399));
    float _4515 = isnan(0.0) ? _2409 : (isnan(_2409) ? 0.0 : max(_2409, 0.0));
    float _2413 = _2389 * _2389;
    float _2417 = ((_2408 * _2408) * (_2413 + (-1.0))) + 1.0;
    float _2425 = exp2(log2(1.0 - (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0)))) * 5.0);
    float _2426 = 0.959999978542327880859375 - _806;
    float _2428 = 0.959999978542327880859375 - _807;
    float _2429 = 0.959999978542327880859375 - _808;
    float _2436 = 1.0 - _2389;
    float _2447 = (0.5 / (((_2404 * ((_2403 * _2436) + _2389)) + 9.9999999392252902907785028219223e-09) + (((_2404 * _2436) + _2389) * _2403))) * _2403;
    float _4526 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _2449 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * (_2413 / ((_2417 * _2417) * 3.141590118408203125));
    uint _2463 = _2127 + 9u;
    float _2474 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2168].w)) * _660) * 0.949999988079071044921875);
    float _2475 = _2474 * _2474;
    float _2476 = cbLight._m0[_2168].x + _736;
    float _2477 = cbLight._m0[_2168].y + _737;
    float _2478 = cbLight._m0[_2168].z + _738;
    float _2482 = inversesqrt(dot(vec3(_2476, _2477, _2478), vec3(_2476, _2477, _2478)));
    float _2483 = _2482 * _2476;
    float _2484 = _2482 * _2477;
    float _2485 = _2482 * _2478;
    float _2486 = dot(vec3(_657, _658, _659), vec3(cbLight._m0[_2168].xyz));
    float _4537 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
    float _2489 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2490 = dot(vec3(_657, _658, _659), vec3(_2483, _2484, _2485));
    float _4548 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
    float _2493 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _2494 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_2483, _2484, _2485));
    float _4559 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
    float _2498 = _2475 * _2475;
    float _2502 = ((_2493 * _2493) * (_2498 + (-1.0))) + 1.0;
    float _2509 = exp2(log2(1.0 - (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0)))) * 5.0);
    float _2516 = 1.0 - _2475;
    float _2526 = (0.5 / (((_2404 * ((_2489 * _2516) + _2475)) + 9.9999999392252902907785028219223e-09) + (((_2404 * _2516) + _2475) * _2489))) * _2489;
    float _4570 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
    float _2528 = (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_2498 / ((_2502 * _2502) * 3.141590118408203125));
    float _2538 = (((((_2509 * _2426) + _809) * cbLight._m0[_2463].x) * _2528) * _2150) + ((((cbLight._m0[_2375].x * _2116) * ((_2425 * _2426) + _809)) * _2449) * _2164);
    float _2539 = (((((_2509 * _2428) + _811) * cbLight._m0[_2463].y) * _2528) * _2150) + ((((cbLight._m0[_2375].y * _2118) * ((_2425 * _2428) + _811)) * _2449) * _2164);
    float _2540 = (((((_2509 * _2429) + _812) * cbLight._m0[_2463].z) * _2528) * _2150) + ((((cbLight._m0[_2375].z * _2120) * ((_2425 * _2429) + _812)) * _2449) * _2164);
    float _2596;
    float _2598;
    float _2600;
    if (_2204)
    {
        _2596 = _2538;
        _2598 = _2539;
        _2600 = _2540;
    }
    else
    {
        uint _2602 = _2127 + 2u;
        uint _2606 = _2127 + 10u;
        float _2620 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2602].w)) * _660) * 0.949999988079071044921875);
        float _2621 = _2620 * _2620;
        float _2622 = cbLight._m0[_2602].x + _736;
        float _2623 = cbLight._m0[_2602].y + _737;
        float _2624 = cbLight._m0[_2602].z + _738;
        float _2628 = inversesqrt(dot(vec3(_2622, _2623, _2624), vec3(_2622, _2623, _2624)));
        float _2629 = _2628 * _2622;
        float _2630 = _2628 * _2623;
        float _2631 = _2628 * _2624;
        float _2632 = dot(vec3(_657, _658, _659), vec3(cbLight._m0[_2602].xyz));
        float _4581 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
        float _2635 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2636 = dot(vec3(_657, _658, _659), vec3(_2629, _2630, _2631));
        float _4592 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
        float _2639 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2640 = dot(vec3(cbLight._m0[_2602].xyz), vec3(_2629, _2630, _2631));
        float _4603 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
        float _2644 = _2621 * _2621;
        float _2648 = ((_2639 * _2639) * (_2644 + (-1.0))) + 1.0;
        float _2655 = exp2(log2(1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * 5.0);
        float _2662 = 1.0 - _2621;
        float _2672 = (0.5 / (((_2404 * ((_2635 * _2662) + _2621)) + 9.9999999392252902907785028219223e-09) + (((_2404 * _2662) + _2621) * _2635))) * _2635;
        float _4614 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0));
        float _2674 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_2644 / ((_2648 * _2648) * 3.141590118408203125));
        float _2675 = isnan(1.0) ? _2142 : (isnan(_2142) ? 1.0 : min(_2142, 1.0));
        _2596 = (((((_2655 * _2426) + _809) * cbLight._m0[_2606].x) * _2674) * _2675) + _2538;
        _2598 = (((((_2655 * _2428) + _811) * cbLight._m0[_2606].y) * _2674) * _2675) + _2539;
        _2600 = (((((_2655 * _2429) + _812) * cbLight._m0[_2606].z) * _2674) * _2675) + _2540;
    }
    float _2706;
    float _2708;
    float _2710;
    if (_2313)
    {
        _2706 = _2596;
        _2708 = _2598;
        _2710 = _2600;
    }
    else
    {
        uint _2717 = _2127 + 3u;
        uint _2721 = _2127 + 11u;
        float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2717].w)) * _660) * 0.949999988079071044921875);
        float _2736 = _2735 * _2735;
        float _2737 = cbLight._m0[_2717].x + _736;
        float _2738 = cbLight._m0[_2717].y + _737;
        float _2739 = cbLight._m0[_2717].z + _738;
        float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
        float _2744 = _2743 * _2737;
        float _2745 = _2743 * _2738;
        float _2746 = _2743 * _2739;
        float _2747 = dot(vec3(_657, _658, _659), vec3(cbLight._m0[_2717].xyz));
        float _4630 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
        float _2750 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2751 = dot(vec3(_657, _658, _659), vec3(_2744, _2745, _2746));
        float _4641 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
        float _2754 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _2755 = dot(vec3(cbLight._m0[_2717].xyz), vec3(_2744, _2745, _2746));
        float _4652 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
        float _2759 = _2736 * _2736;
        float _2763 = ((_2754 * _2754) * (_2759 + (-1.0))) + 1.0;
        float _2770 = exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0);
        float _2777 = 1.0 - _2736;
        float _2787 = (0.5 / (((_2404 * ((_2750 * _2777) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2404 * _2777) + _2736) * _2750))) * _2750;
        float _4663 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
        float _2789 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2759 / ((_2763 * _2763) * 3.141590118408203125));
        float _2790 = isnan(1.0) ? _2143 : (isnan(_2143) ? 1.0 : min(_2143, 1.0));
        _2706 = (((((_2770 * _2426) + _809) * cbLight._m0[_2721].x) * _2789) * _2790) + _2596;
        _2708 = (((((_2770 * _2428) + _811) * cbLight._m0[_2721].y) * _2789) * _2790) + _2598;
        _2710 = (((((_2770 * _2429) + _812) * cbLight._m0[_2721].z) * _2789) * _2790) + _2600;
    }
    float _2856;
    float _2858;
    float _2860;
    float _2862;
    float _2864;
    float _2866;
    if (_2125.y == 0u)
    {
        uvec4 _2811 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2812 = _2811.x;
        uint _2823 = uint((float(_2811.y) * floor(float(uint(cbSceneParam._m0[85u].y * _745) / _2812))) + floor(float(uint(cbSceneParam._m0[85u].x * _744) / _2812)));
        float _2833 = (log2(_1903 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2834 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        uint _2837 = uint(isnan(14.0) ? _2834 : (isnan(_2834) ? 14.0 : min(_2834, 14.0)));
        uvec4 _2842 = texelFetch(g_lightClusterGridBuffer, int(((_2837 << 2u) + (_2823 << 6u)) >> 2u));
        uint _2843 = _2842.x;
        uint _2844 = _2811.z;
        float _2923;
        float _2925;
        float _2927;
        float _2929;
        float _2931;
        float _2933;
        if (((((1u << ((_2844 >> 4u) & 15u)) + 4294967295u) & _2843) == 0u) || ((_2844 & 240u) == 0u))
        {
            _2923 = 0.0;
            _2925 = 0.0;
            _2927 = 0.0;
            _2929 = 0.0;
            _2931 = 0.0;
            _2933 = 0.0;
        }
        else
        {
            float _2924;
            float _2926;
            float _2928;
            float _2930;
            float _2932;
            float _2934;
            float _3068 = 0.0;
            float _3069 = 0.0;
            float _3070 = 0.0;
            float _3071 = 0.0;
            float _3072 = 0.0;
            float _3073 = 0.0;
            uint _3074 = 0u;
            uint _3083;
            bool _3084;
            for (;;)
            {
                _3083 = texelFetch(g_lightClassification, int((((_2837 << 5u) + (_2823 << 9u)) + (_3074 << 2u)) >> 2u)).x;
                _3084 = _3083 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3084)
                {
                    frontier_phi_66_pred = _3073;
                    frontier_phi_66_pred_1 = _3072;
                    frontier_phi_66_pred_2 = _3071;
                    frontier_phi_66_pred_3 = _3070;
                    frontier_phi_66_pred_4 = _3069;
                    frontier_phi_66_pred_5 = _3068;
                }
                else
                {
                    float _3192;
                    float _3193;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    uint _3198;
                    _3192 = _3068;
                    _3193 = _3069;
                    _3194 = _3070;
                    _3195 = _3071;
                    _3196 = _3072;
                    _3197 = _3073;
                    _3198 = _3083;
                    float _3124;
                    float _3125;
                    float _3126;
                    float _3127;
                    float _3128;
                    float _3129;
                    for (;;)
                    {
                        uint _3202 = uint(findLSB(_3198)) + (_3074 << 5u);
                        uint _3199 = (_3198 + 4294967295u) & _3198;
                        uint _3204 = _3202 * 48u;
                        vec4 _3218 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3204)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 3u)).x));
                        uint _3224 = (_3202 * 48u) + 4u;
                        vec4 _3237 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3224)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 3u)).x));
                        uint _3243 = (_3202 * 48u) + 8u;
                        vec3 _3254 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3243)).x, texelFetch(g_PointLightRenderingBuffer, int(_3243 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3243 + 2u)).x));
                        float _3258 = _3218.x - _1901;
                        float _3259 = _3218.y - _1902;
                        float _3260 = _3218.z - _1903;
                        float _3261 = dot(vec3(_3258, _3259, _3260), vec3(_3258, _3259, _3260));
                        float _3264 = inversesqrt(_3261);
                        float _3265 = _3264 * _3258;
                        float _3266 = _3264 * _3259;
                        float _3267 = _3264 * _3260;
                        float _3268 = dot(vec3(_766, _769, _772), vec3(_3265, _3266, _3267));
                        float _3273 = 1.0 - (_3261 * _3218.w);
                        float _4689 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3274 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                        float _3275 = sqrt(_3261) * _3237.w;
                        float _3278 = 1.39999997615814208984375 / (_3275 + 1.39999997615814208984375);
                        float _3279 = _3278 * _3278;
                        float _3282 = ((1.0 - _3279) * _3268) + _3279;
                        float _3285 = _3275 * _3275;
                        float _3289 = ((isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : max(_3282, 0.0))) * _3274) / ((_3285 * 0.699999988079071044921875) + 1.0);
                        float _3293 = (-0.0) - _1901;
                        float _3294 = (-0.0) - _1902;
                        float _3295 = (-0.0) - _1903;
                        float _3299 = inversesqrt(dot(vec3(_3293, _3294, _3295), vec3(_3293, _3294, _3295)));
                        float _3300 = _3299 * _3293;
                        float _3301 = _3299 * _3294;
                        float _3302 = _3299 * _3295;
                        float _3309 = exp2(log2(1.0 / ((_3285 * 3.5) + 5.0)) * 0.25);
                        float _3310 = 1.0 - _841;
                        float _3317 = sqrt(1.0 - ((1.0 - (_3310 * _3310)) * (1.0 - (_3309 * _3309))));
                        float _3318 = _3317 * _3317;
                        float _3319 = _3318 * _3318;
                        float _3320 = _3300 + _3265;
                        float _3321 = _3301 + _3266;
                        float _3322 = _3302 + _3267;
                        float _3326 = inversesqrt(dot(vec3(_3320, _3321, _3322), vec3(_3320, _3321, _3322)));
                        float _3330 = dot(vec3(_766, _769, _772), vec3(_3300, _3301, _3302));
                        float _4705 = isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : max(_3330, 0.0));
                        float _3333 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3334 = dot(vec3(_766, _769, _772), vec3(_3326 * _3320, _3326 * _3321, _3326 * _3322));
                        float _4716 = isnan(0.0) ? _3334 : (isnan(_3334) ? 0.0 : max(_3334, 0.0));
                        float _3337 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3341 = ((_3337 * _3337) * (_3319 + (-1.0))) + 1.0;
                        float _3342 = _3278 * _3318;
                        float _3343 = _3342 * _3342;
                        float _3346 = ((1.0 - _3343) * _3268) + _3343;
                        float _4727 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3347 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                        float _3348 = 1.0 - _3318;
                        float _3358 = (0.5 / (((_3347 * ((_3333 * _3348) + _3318)) + 9.9999999392252902907785028219223e-09) + (((_3347 * _3348) + _3318) * _3333))) * _3347;
                        float _4738 = isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : max(_3358, 0.0));
                        float _3369 = (((_3319 * 3.1415927410125732421875) * (isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0)))) / ((_3341 * _3341) * ((_3285 * 2.1991131305694580078125) + 3.141590118408203125))) * _3274;
                        _3127 = (_3289 * _3237.x) + _3195;
                        _3128 = (_3289 * _3237.y) + _3196;
                        _3129 = (_3289 * _3237.z) + _3197;
                        _3124 = (_3369 * _3254.x) + _3192;
                        _3125 = (_3369 * _3254.y) + _3193;
                        _3126 = (_3369 * _3254.z) + _3194;
                        if (_3199 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3192 = _3124;
                            _3193 = _3125;
                            _3194 = _3126;
                            _3195 = _3127;
                            _3196 = _3128;
                            _3197 = _3129;
                            _3198 = _3199;
                        }
                    }
                    frontier_phi_66_pred = _3129;
                    frontier_phi_66_pred_1 = _3128;
                    frontier_phi_66_pred_2 = _3127;
                    frontier_phi_66_pred_3 = _3126;
                    frontier_phi_66_pred_4 = _3125;
                    frontier_phi_66_pred_5 = _3124;
                }
                _2934 = frontier_phi_66_pred;
                _2932 = frontier_phi_66_pred_1;
                _2930 = frontier_phi_66_pred_2;
                _2928 = frontier_phi_66_pred_3;
                _2926 = frontier_phi_66_pred_4;
                _2924 = frontier_phi_66_pred_5;
                uint _3075 = _3074 + 1u;
                if (_3075 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3068 = _2924;
                    _3069 = _2926;
                    _3070 = _2928;
                    _3071 = _2930;
                    _3072 = _2932;
                    _3073 = _2934;
                    _3074 = _3075;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2923 = _2924;
            _2925 = _2926;
            _2927 = _2928;
            _2929 = _2930;
            _2931 = _2932;
            _2933 = _2934;
        }
        uvec4 _2937 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2938 = _2937.z;
        uint _2940 = (_2938 >> 8u) & 15u;
        float _3036;
        float _3038;
        float _3040;
        float _3042;
        float _3044;
        float _3046;
        if (((4294967295u << _2940) & _2843) == 0u)
        {
            _3036 = _2923;
            _3038 = _2925;
            _3040 = _2927;
            _3042 = _2929;
            _3044 = _2931;
            _3046 = _2933;
        }
        else
        {
            float _3061 = inversesqrt(dot(vec3(_1901, _1902, _1903), vec3(_1901, _1902, _1903)));
            float _3062 = _3061 * _1901;
            float _3063 = _3061 * _1902;
            float _3064 = _3061 * _1903;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2940 < ((_2938 >> 12u) & 15u))
            {
                float _3037;
                float _3039;
                float _3041;
                float _3043;
                float _3045;
                float _3047;
                float _3175 = _2923;
                float _3176 = _2925;
                float _3177 = _2927;
                float _3178 = _2929;
                float _3179 = _2931;
                float _3180 = _2933;
                uint _3181 = _2940;
                uint _3190;
                bool _3191;
                for (;;)
                {
                    _3190 = texelFetch(g_lightClassification, int((((_2837 << 5u) + (_2823 << 9u)) + (_3181 << 2u)) >> 2u)).x;
                    _3191 = _3190 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3191)
                    {
                        frontier_phi_72_pred = _3180;
                        frontier_phi_72_pred_1 = _3179;
                        frontier_phi_72_pred_2 = _3178;
                        frontier_phi_72_pred_3 = _3177;
                        frontier_phi_72_pred_4 = _3176;
                        frontier_phi_72_pred_5 = _3175;
                    }
                    else
                    {
                        float _3374;
                        float _3375;
                        float _3376;
                        float _3377;
                        float _3378;
                        float _3379;
                        float _3667;
                        float _3668;
                        float _3669;
                        float _3670;
                        float _3671;
                        float _3672;
                        float _3387 = _3175;
                        float _3388 = _3176;
                        float _3389 = _3177;
                        float _3390 = _3178;
                        float _3391 = _3179;
                        float _3392 = _3180;
                        uint _3393 = _3190;
                        uint _3394;
                        vec4 _3419;
                        float _3420;
                        vec4 _3435;
                        vec3 _3447;
                        vec4 _3462;
                        vec4 _3477;
                        float _3523;
                        bool _3524;
                        for (;;)
                        {
                            uint _3404 = ((_3181 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3393));
                            _3394 = (_3393 + 4294967295u) & _3393;
                            uint _3406 = _3404 * 40u;
                            _3419 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3406)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 3u)).x));
                            _3420 = _3419.w;
                            uint _3422 = (_3404 * 40u) + 4u;
                            _3435 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3422)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 3u)).x));
                            uint _3437 = (_3404 * 40u) + 8u;
                            _3447 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3437)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 2u)).x));
                            uint _3449 = (_3404 * 40u) + 16u;
                            _3462 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3449)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 3u)).x));
                            uint _3464 = (_3404 * 40u) + 20u;
                            _3477 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3464)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 3u)).x));
                            uint _3479 = (_3404 * 40u) + 24u;
                            vec4 _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            uint _3498 = (_3404 * 40u) + 28u;
                            vec4 _3511 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 3u)).x));
                            _3523 = fma(_1903, _3511.z, fma(_1902, _3511.y, _3511.x * _1901)) + _3511.w;
                            _3524 = !((fma(_1903, _3492.z, fma(_1902, _3492.y, _3492.x * _1901)) + _3492.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3524)
                            {
                                float _3551 = _3419.x - _1901;
                                float _3552 = _3419.y - _1902;
                                float _3553 = _3419.z - _1903;
                                float _3554 = dot(vec3(_3551, _3552, _3553), vec3(_3551, _3552, _3553));
                                float _3557 = inversesqrt(_3554);
                                float _3558 = _3557 * _3551;
                                float _3559 = _3557 * _3552;
                                float _3560 = _3557 * _3553;
                                float _3564 = 1.0 - (_3554 / (_3420 * _3420));
                                float _4749 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                                float _3565 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                                float _3569 = sqrt(_3554) * _3435.w;
                                float _3571 = 1.39999997615814208984375 / (_3569 + 1.39999997615814208984375);
                                float _3572 = _3571 * _3571;
                                float _3575 = ((1.0 - _3572) * dot(vec3(_3558, _3559, _3560), vec3(_766, _769, _772))) + _3572;
                                float _3578 = _3569 * _3569;
                                float _3582 = (fma(_1903, _3462.z, fma(_1902, _3462.y, _3462.x * _1901)) + _3462.w) / _3523;
                                float _3583 = (fma(_1903, _3477.z, fma(_1902, _3477.y, _3477.x * _1901)) + _3477.w) / _3523;
                                float _3587 = 1.0 - dot(vec2(_3582, _3583), vec2(_3582, _3583));
                                float _4765 = isnan(0.0) ? _3587 : (isnan(_3587) ? 0.0 : max(_3587, 0.0));
                                float _3588 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3589 = _3588 * (((isnan(0.0) ? _3575 : (isnan(_3575) ? 0.0 : max(_3575, 0.0))) * _3565) / ((_3578 * 0.699999988079071044921875) + 1.0));
                                float _3601 = exp2(log2(1.0 / ((_3578 * 3.5) + 5.0)) * 0.25);
                                float _3602 = 1.0 - _841;
                                float _3609 = sqrt(1.0 - ((1.0 - (_3602 * _3602)) * (1.0 - (_3601 * _3601))));
                                float _3610 = _3609 * _3609;
                                float _3611 = _3610 * _3610;
                                float _3612 = _3558 - _3062;
                                float _3613 = _3559 - _3063;
                                float _3614 = _3560 - _3064;
                                float _3618 = inversesqrt(dot(vec3(_3612, _3613, _3614), vec3(_3612, _3613, _3614)));
                                float _3622 = dot(vec3(_766, _769, _772), vec3((-0.0) - _3062, (-0.0) - _3063, (-0.0) - _3064));
                                float _4776 = isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0));
                                float _3625 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3626 = dot(vec3(_766, _769, _772), vec3(_3618 * _3612, _3618 * _3613, _3618 * _3614));
                                float _4787 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                                float _3629 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3633 = ((_3629 * _3629) * (_3611 + (-1.0))) + 1.0;
                                float _3634 = _3571 * _3610;
                                float _3635 = _3634 * _3634;
                                float _3641 = ((1.0 - _3635) * dot(vec3(_766, _769, _772), vec3(_3558, _3559, _3560))) + _3635;
                                float _4798 = isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0));
                                float _3642 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
                                float _3643 = 1.0 - _3610;
                                float _3653 = (0.5 / (((_3642 * ((_3625 * _3643) + _3610)) + 9.9999999392252902907785028219223e-09) + (((_3642 * _3643) + _3610) * _3625))) * _3642;
                                float _4809 = isnan(0.0) ? _3653 : (isnan(_3653) ? 0.0 : max(_3653, 0.0));
                                float _3663 = (_3588 * _3565) * (((_3611 * 3.1415927410125732421875) * (isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0)))) / ((_3633 * _3633) * ((_3578 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3589 * _3435.y;
                                frontier_phi_78_pred_1 = _3589 * _3435.x;
                                frontier_phi_78_pred_2 = _3663 * _3447.z;
                                frontier_phi_78_pred_3 = _3663 * _3447.y;
                                frontier_phi_78_pred_4 = _3663 * _3447.x;
                                frontier_phi_78_pred_5 = _3589 * _3435.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3671 = frontier_phi_78_pred;
                            _3670 = frontier_phi_78_pred_1;
                            _3669 = frontier_phi_78_pred_2;
                            _3668 = frontier_phi_78_pred_3;
                            _3667 = frontier_phi_78_pred_4;
                            _3672 = frontier_phi_78_pred_5;
                            _3377 = _3670 + _3390;
                            _3378 = _3671 + _3391;
                            _3379 = _3672 + _3392;
                            _3374 = _3667 + _3387;
                            _3375 = _3668 + _3388;
                            _3376 = _3669 + _3389;
                            if (_3394 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3387 = _3374;
                                _3388 = _3375;
                                _3389 = _3376;
                                _3390 = _3377;
                                _3391 = _3378;
                                _3392 = _3379;
                                _3393 = _3394;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3379;
                        frontier_phi_72_pred_1 = _3378;
                        frontier_phi_72_pred_2 = _3377;
                        frontier_phi_72_pred_3 = _3376;
                        frontier_phi_72_pred_4 = _3375;
                        frontier_phi_72_pred_5 = _3374;
                    }
                    _3047 = frontier_phi_72_pred;
                    _3045 = frontier_phi_72_pred_1;
                    _3043 = frontier_phi_72_pred_2;
                    _3041 = frontier_phi_72_pred_3;
                    _3039 = frontier_phi_72_pred_4;
                    _3037 = frontier_phi_72_pred_5;
                    uint _3182 = _3181 + 1u;
                    if (_3182 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3175 = _3037;
                        _3176 = _3039;
                        _3177 = _3041;
                        _3178 = _3043;
                        _3179 = _3045;
                        _3180 = _3047;
                        _3181 = _3182;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3047;
                frontier_phi_60_61_ladder_1 = _3045;
                frontier_phi_60_61_ladder_2 = _3041;
                frontier_phi_60_61_ladder_3 = _3039;
                frontier_phi_60_61_ladder_4 = _3037;
                frontier_phi_60_61_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_60_61_ladder = _2933;
                frontier_phi_60_61_ladder_1 = _2931;
                frontier_phi_60_61_ladder_2 = _2927;
                frontier_phi_60_61_ladder_3 = _2925;
                frontier_phi_60_61_ladder_4 = _2923;
                frontier_phi_60_61_ladder_5 = _2929;
            }
            _3036 = frontier_phi_60_61_ladder_4;
            _3038 = frontier_phi_60_61_ladder_3;
            _3040 = frontier_phi_60_61_ladder_2;
            _3042 = frontier_phi_60_61_ladder_5;
            _3044 = frontier_phi_60_61_ladder_1;
            _3046 = frontier_phi_60_61_ladder;
        }
        float _3051 = isnan(1.0) ? _825 : (isnan(_825) ? 1.0 : min(_825, 1.0));
        _2856 = (_3051 * _3042) + _2368;
        _2858 = (_3051 * _3044) + _2370;
        _2860 = (_3051 * _3046) + _2372;
        _2862 = ((_3036 * _809) * _3051) + _2706;
        _2864 = ((_3038 * _811) * _3051) + _2708;
        _2866 = ((_3040 * _812) * _3051) + _2710;
    }
    else
    {
        _2856 = _2368;
        _2858 = _2370;
        _2860 = _2372;
        _2862 = _2706;
        _2864 = _2708;
        _2866 = _2710;
    }
    float _4825 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _4836 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _4847 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    uint _2886 = _269 + 6u;
    float _2894 = _744 / cbSceneParam._m0[86u].x;
    float _2895 = _745 / cbSceneParam._m0[86u].y;
    vec4 _2909 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2894, _2895, (log2((isnan(cbSceneParam._m0[77u].w) ? _679 : (isnan(_679) ? cbSceneParam._m0[77u].w : min(_679, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2911 = _2909.x;
    float _2912 = _2909.y;
    float _2913 = _2909.z;
    float _2914 = _2909.w;
    float _2986;
    float _2988;
    float _2990;
    float _2992;
    if (_679 > cbSceneParam._m0[78u].w)
    {
        float _2948 = isnan(_679) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _679 : min(cbSceneParam._m0[80u].w, _679));
        float _2949 = _2948 / _679;
        float _2960 = _2949 * _729;
        float _2961 = _730 * _2949;
        float _2962 = (-0.0) - _2961;
        float _2964 = _2949 * _731;
        float _2966 = (cbSceneParam._m0[77u].w * _2962) / _2948;
        float _2967 = _2966 + cbSceneParam._m0[79u].w;
        float _2968 = cbSceneParam._m0[79u].w - _2961;
        float _2974 = sqrt(((_2960 * _2960) + (_2961 * _2961)) + (_2964 * _2964));
        float _2977 = (1.0 - (cbSceneParam._m0[77u].w / _2948)) * _2974;
        float _2982 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2984 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3137;
        if (abs((_2962 - _2966) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3137 = ((((_2967 > 0.0) ? exp2(_2982 * _2967) : (2.0 - exp2(_2984 * _2967))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2977;
        }
        else
        {
            float _3097 = 1.0 / cbSceneParam._m0[80u].x;
            float _3098 = isnan(_2968) ? _2967 : (isnan(_2967) ? _2968 : max(_2967, _2968));
            float _3099 = isnan(_2968) ? _2967 : (isnan(_2967) ? _2968 : min(_2967, _2968));
            float _3108 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : min(_3098, 0.0));
            float _3109 = isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : min(_3099, 0.0));
            _3137 = ((abs(_2974 / _2962) * cbSceneParam._m0[80u].y) * ((((_3108 - _3109) * 2.0) - ((exp2(_2982 * (isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0)))) - exp2(_2982 * (isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : max(_3099, 0.0))))) * _3097)) - ((exp2(_2984 * _3108) - exp2(_2984 * _3109)) * _3097))) + (_2977 * cbSceneParam._m0[80u].z);
        }
        vec4 _3139 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2894, _2895, 1.0), 0.0);
        float _3148 = exp2((_3137 * (-1.44269502162933349609375)) * (1.0 - _3139.w));
        float _3149 = log2(_3148);
        float _3165 = log2(_2914);
        _2986 = (exp2(_3165 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].x)) * _3139.x) / cbSceneParam._m0[78u].x)) + _2911;
        _2988 = (exp2(_3165 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].y)) * _3139.y) / cbSceneParam._m0[78u].y)) + _2912;
        _2990 = (exp2(_3165 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3149 * cbSceneParam._m0[78u].z)) * _3139.z) / cbSceneParam._m0[78u].z)) + _2913;
        _2992 = _3148 * _2914;
    }
    else
    {
        _2986 = _2911;
        _2988 = _2912;
        _2990 = _2913;
        _2992 = _2914;
    }
    float _3004 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3005 = _3004 == 3.0;
    float _3006 = log2(_2992);
    float _3013 = exp2(_3006 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2856 + ((isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0))) * _825))) + ((_2862 + ((isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))) * _1633)) * cbPerFrame._m0[3u].x));
    float _3014 = exp2(_3006 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2858 + ((isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0))) * _825))) + ((_2864 + ((isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))) * _1633)) * cbPerFrame._m0[3u].x));
    float _3015 = exp2(_3006 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2860 + ((isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0))) * _825))) + ((_2866 + ((isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))) * _1633)) * cbPerFrame._m0[3u].x));
    float _3024 = (_3004 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3024 * (_3005 ? _3013 : (_3013 + (cbSceneParam._m0[72u].w * _2986)));
    SV_Target.y = _3024 * (_3005 ? _3014 : (_3014 + (cbSceneParam._m0[72u].w * _2988)));
    SV_Target.z = _3024 * (_3005 ? _3015 : (_3015 + (cbSceneParam._m0[72u].w * _2990)));
    SV_Target.w = cbInstanceData._m0[_2886].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2886].w;
}


