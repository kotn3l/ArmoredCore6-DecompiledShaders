#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1323;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _234 = _233 * _225;
    float _235 = _233 * _226;
    float _236 = _233 * _227;
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = _240 * NORMAL.x;
    float _242 = _240 * NORMAL.y;
    float _243 = _240 * NORMAL.z;
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = _247 * TANGENT.x;
    float _249 = _247 * TANGENT.y;
    float _250 = _247 * TANGENT.z;
    uint _253 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = _253 + 1u;
    uint _262 = _253 + 2u;
    float _271 = sqrt(((cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x) + (cbInstanceData._m0[_253].x * cbInstanceData._m0[_253].x)) + (cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x));
    float _272 = _271 * TEXCOORD.z;
    float _273 = _271 * TEXCOORD.w;
    vec4 _293 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _299 = _293.x * cbMtdParam._m0[11u].x;
    float _300 = _293.y * cbMtdParam._m0[11u].y;
    float _301 = _293.z * cbMtdParam._m0[11u].z;
    vec4 _320 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _272) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _273) + cbTextureTilingScale._m0[5u].w));
    vec4 _358 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _360 = _358.x;
    float _372 = dot(vec4(_360, _358.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _389 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_360 - _372) * cbMtdParam._m0[24u].y) + _372) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3931 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0));
    float _397 = (_390 * ((_320.x * cbMtdParam._m0[12u].x) - _299)) + _299;
    float _398 = (_390 * ((_320.y * cbMtdParam._m0[12u].y) - _300)) + _300;
    float _399 = (_390 * ((_320.z * cbMtdParam._m0[12u].z) - _301)) + _301;
    vec4 _418 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _272) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _273) + cbTextureTilingScale._m0[14u].w));
    vec4 _438 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _272) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _273) + cbTextureTilingScale._m0[4u].w));
    vec4 _455 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _457 = _455.x;
    float _458 = _455.y;
    float _459 = _455.z;
    float _468 = ((_438.z - _459) * _390) + _459;
    float _471 = ((((_438.x - _457) * _390) + _457) * 2.0) + (-1.0);
    float _473 = ((((_438.y - _458) * _390) + _458) * 2.0) + (-1.0);
    float _474 = dot(vec2(_471, _473), vec2(_471, _473));
    float _3942 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _479 = sqrt(1.0 - (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0))));
    float _482 = fma(_479, _241, fma(_473, _248, _471 * _234));
    float _485 = fma(_479, _242, fma(_473, _249, _471 * _235));
    float _488 = fma(_479, _243, fma(_473, _250, _471 * _236));
    float _492 = inversesqrt(dot(vec3(_482, _485, _488), vec3(_482, _485, _488)));
    vec4 _508 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _534 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _272) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _273) + cbTextureTilingScale._m0[11u].w));
    float _536 = _534.x;
    float _537 = 1.0 - _536;
    float _543 = (cbMtdParam._m0[19u].x + dot(vec4(_492 * _482, _492 * _485, _492 * _488, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_536 - _537) * cbMtdParam._m0[24u].z) + _537) * cbMtdParam._m0[21u].z);
    float _3953 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _544 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _546 = (-0.0) - cbMtdParam._m0[24u].x;
    float _548 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _549 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
    float _556 = _544 - ((_544 * TEXCOORD_8.x) * _549);
    float _557 = _544 - ((_544 * TEXCOORD_8.y) * _549);
    float _558 = _544 - ((_544 * TEXCOORD_8.z) * _549);
    float _565 = (_556 * ((_418.x * cbMtdParam._m0[18u].x) - _397)) + _397;
    float _566 = (_557 * ((_418.y * cbMtdParam._m0[18u].y) - _398)) + _398;
    float _567 = (_558 * ((_418.z * cbMtdParam._m0[18u].z) - _399)) + _399;
    vec4 _579 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _272) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _273) + cbTextureTilingScale._m0[19u].w));
    float _581 = _579.x;
    float _582 = 1.0 - _581;
    float _610 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_581 - _582) * cbMtdParam._m0[24u].w) + _582) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3974 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _611 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _619 = ((((cbMtdParam._m0[10u].x - _565) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _611) + _565;
    float _620 = ((((cbMtdParam._m0[10u].y - _566) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _611) + _566;
    float _621 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _567)) * _611) + _567;
    vec4 _647 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _649 = _647.x;
    float _667 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _272) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _273) + cbTextureTilingScale._m0[9u].w)).x - _649) * _390) + _649;
    float _671 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _667) * cbMtdParam._m0[19u].z) + _667;
    float _673 = _671 - (_671 * _556);
    float _675 = _673 - (_673 * _611);
    vec4 _689 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _272) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _273) + cbTextureTilingScale._m0[15u].w));
    float _696 = (_689.x * 2.0) + (-1.0);
    float _697 = (_689.y * 2.0) + (-1.0);
    float _698 = dot(vec2(_696, _697), vec2(_696, _697));
    float _3985 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _706 = ((_689.z - _468) * _556) + _468;
    float _709 = ((cbMtdParam._m0[23u].y - _706) * _611) + _706;
    vec4 _728 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _272) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _273) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _734 = (_728.x * 2.0) + (-1.0);
    float _735 = (_728.y * 2.0) + (-1.0);
    float _736 = dot(vec2(_734, _735), vec2(_734, _735));
    float _3996 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _751 = ((sqrt(1.0 - (isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0)))) - _479) * _558) + _479;
    float _754 = (((_696 - _471) * _556) + _471) + (cbMtdParam._m0[21u].x * _471);
    float _755 = (((_697 - _473) * _557) + _473) + (cbMtdParam._m0[21u].x * _473);
    float _766 = (((_734 - _754) + (_754 * cbMtdParam._m0[22u].z)) * _611) + _754;
    float _767 = (((_735 - _755) + (_755 * cbMtdParam._m0[22u].z)) * _611) + _755;
    float _768 = (_611 * (sqrt(1.0 - (isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0)))) - _751)) + _751;
    float _770 = cbMtdParam._m0[22u].x + _508.w;
    float _773 = fma(_768, _241, fma(_767, _248, _766 * _234));
    float _776 = fma(_768, _242, fma(_767, _249, _766 * _235));
    float _779 = fma(_768, _243, fma(_767, _250, _766 * _236));
    float _783 = inversesqrt(dot(vec3(_773, _776, _779), vec3(_773, _776, _779)));
    float _784 = _783 * _773;
    float _785 = _783 * _776;
    float _786 = _783 * _779;
    float _4007 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _787 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
    float _4018 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _4029 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _4040 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _4051 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _4062 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _792 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
    float _806 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _846 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _856 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _846);
    float _857 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _846);
    float _858 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _846);
    float _862 = inversesqrt(dot(vec3(_856, _857, _858), vec3(_856, _857, _858)));
    float _863 = _856 * _862;
    float _864 = _857 * _862;
    float _865 = _858 * _862;
    float _871 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _872 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _890 = fma(_786, cbSceneParam._m0[5u].z, fma(_785, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _784));
    float _893 = fma(_786, cbSceneParam._m0[6u].z, fma(_785, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _784));
    float _896 = fma(_786, cbSceneParam._m0[7u].z, fma(_785, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _784));
    uint _910 = (_253 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _916 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0)))) * cbInstanceData._m0[_910].x;
    float _917 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0)))) * cbInstanceData._m0[_910].y;
    float _918 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0)))) * cbInstanceData._m0[_910].z;
    float _4073 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _919 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    float _4084 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _920 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _4095 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _921 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _922 = 1.0 - _792;
    float _923 = _919 * _922;
    float _924 = _920 * _922;
    float _925 = _921 * _922;
    float _930 = (_919 + (-0.039999999105930328369140625)) * _792;
    float _931 = (_920 + (-0.039999999105930328369140625)) * _792;
    float _932 = (_921 + (-0.039999999105930328369140625)) * _792;
    float _933 = _930 + 0.039999999105930328369140625;
    float _935 = _931 + 0.039999999105930328369140625;
    float _936 = _932 + 0.039999999105930328369140625;
    vec4 _945 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _871, cbSceneParam._m0[86u].y * _872));
    float _949 = ((isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0))) * TEXCOORD_5.w) * _945.x;
    float _950 = dot(vec3(_784, _785, _786), vec3(_863, _864, _865));
    float _953 = _950 * 2.0;
    float _957 = (_953 * _784) - _863;
    float _958 = (_953 * _785) - _864;
    float _959 = (_953 * _786) - _865;
    float _963 = abs(dot(vec3(_863, _864, _865), vec3(_784, _785, _786)));
    float _4106 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _965 = sqrt(_787);
    float _978 = exp2((_965 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_965 * 3.0));
    float _984 = (1.0 - _978) * ((_965 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _985 = _978 * _965;
    float _1013 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1017 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1021 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1322;
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    float _1330;
    float _1331;
    float _1332;
    float _1333;
    float _1334;
    float _1335;
    float _1336;
    float _1337;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1047 = fma(_1021, cbModelParam._m0[26u].z, fma(_1017, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1013));
        float _1051 = fma(_1021, cbModelParam._m0[27u].z, fma(_1017, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1013));
        float _1055 = fma(_1021, cbModelParam._m0[28u].z, fma(_1017, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1013));
        float _1080 = _1013 + _784;
        float _1081 = _1017 + _785;
        float _1082 = _1021 + _786;
        float _1092 = fma(_1082, cbModelParam._m0[26u].z, fma(_1081, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1080)) - _1047;
        float _1093 = fma(_1082, cbModelParam._m0[27u].z, fma(_1081, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1080)) - _1051;
        float _1094 = fma(_1082, cbModelParam._m0[28u].z, fma(_1081, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1080)) - _1055;
        float _1098 = inversesqrt(dot(vec3(_1092, _1093, _1094), vec3(_1092, _1093, _1094)));
        float _1111 = ((_1098 * _1092) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1047 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1112 = ((_1098 * _1093) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1051 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1113 = ((_1098 * _1094) / cbModelParam._m0[34u].z) + ((((((_1055 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1116 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1111, _1112, _1113), 0.0);
        vec4 _1123 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1111, _1112, _1113), 0.0);
        vec4 _1130 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1111, _1112, _1113), 0.0);
        vec4 _1137 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1111, _1112, _1113), 0.0);
        float _1150 = exp2((_1116.w + (-0.5)) * 20.0) * 2.0;
        float _1151 = _1150 * (_1116.x + (-0.5));
        float _1152 = _1150 * (_1116.y + (-0.5));
        float _1153 = _1150 * (_1116.z + (-0.5));
        float _1160 = exp2((_1123.w + (-0.5)) * 20.0) * 2.0;
        float _1161 = _1160 * (_1123.x + (-0.5));
        float _1162 = _1160 * (_1123.y + (-0.5));
        float _1163 = _1160 * (_1123.z + (-0.5));
        float _1170 = exp2((_1130.w + (-0.5)) * 20.0) * 2.0;
        float _1171 = _1170 * (_1130.x + (-0.5));
        float _1172 = _1170 * (_1130.y + (-0.5));
        float _1173 = _1170 * (_1130.z + (-0.5));
        float _1180 = exp2((_1137.w + (-0.5)) * 20.0) * 2.0;
        float _1181 = _1180 * (_1137.x + (-0.5));
        float _1182 = _1180 * (_1137.y + (-0.5));
        float _1183 = _1180 * (_1137.z + (-0.5));
        float _1184 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1185 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1186 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1187 = _1151 * 0.5;
        float _1188 = _1161 * 0.5;
        float _1189 = _1171 * 0.5;
        float _1190 = dot(vec3(_1187, _1188, _1189), vec3(_1187, _1188, _1189));
        float _1195 = (_1190 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1190);
        float _1204 = (dot(vec3(_784, _785, _786), vec3(_1195 * _1187, _1195 * _1188, _1195 * _1189)) + 1.0) * 0.5;
        float _4132 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1214 = sqrt(((_1188 * _1188) + (_1187 * _1187)) + (_1189 * _1189)) / (_1184 + 9.9999997473787516355514526367188e-06);
        float _4143 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
        float _1216 = _1215 * 2.0;
        float _1220 = (1.0 - _1215) / (_1215 + 1.0);
        float _4154 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1230 = ((((1.0 - _1221) * (_1216 + 2.0)) * exp2(log2(isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))) * (_1216 + 1.0))) + _1221) * _1184;
        float _1231 = _1152 * 0.5;
        float _1232 = _1162 * 0.5;
        float _1233 = _1172 * 0.5;
        float _1234 = dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233));
        float _1239 = (_1234 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1234);
        float _1247 = (dot(vec3(_784, _785, _786), vec3(_1239 * _1231, _1239 * _1232, _1239 * _1233)) + 1.0) * 0.5;
        float _4165 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1256 = sqrt(((_1232 * _1232) + (_1231 * _1231)) + (_1233 * _1233)) / (_1185 + 9.9999997473787516355514526367188e-06);
        float _4176 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
        float _1258 = _1257 * 2.0;
        float _1262 = (1.0 - _1257) / (_1257 + 1.0);
        float _4187 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1263 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _1272 = ((((1.0 - _1263) * (_1258 + 2.0)) * exp2(log2(isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0))) * (_1258 + 1.0))) + _1263) * _1185;
        float _1273 = _1153 * 0.5;
        float _1274 = _1163 * 0.5;
        float _1275 = _1173 * 0.5;
        float _1276 = dot(vec3(_1273, _1274, _1275), vec3(_1273, _1274, _1275));
        float _1281 = (_1276 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1276);
        float _1289 = (dot(vec3(_784, _785, _786), vec3(_1281 * _1273, _1281 * _1274, _1281 * _1275)) + 1.0) * 0.5;
        float _4198 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
        float _1298 = sqrt(((_1274 * _1274) + (_1273 * _1273)) + (_1275 * _1275)) / (_1186 + 9.9999997473787516355514526367188e-06);
        float _4209 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1299 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1300 = _1299 * 2.0;
        float _1304 = (1.0 - _1299) / (_1299 + 1.0);
        float _4220 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1305 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1314 = ((((1.0 - _1305) * (_1300 + 2.0)) * exp2(log2(isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * (_1300 + 1.0))) + _1305) * _1186;
        _1322 = _1153;
        _1324 = _1152;
        _1325 = _1151;
        _1326 = _1163;
        _1327 = _1162;
        _1328 = _1161;
        _1329 = _1173;
        _1330 = _1172;
        _1331 = _1171;
        _1332 = _1186;
        _1333 = _1185;
        _1334 = _1184;
        _1335 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0)));
        _1336 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0)));
        _1337 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0)));
    }
    else
    {
        _1322 = _1323;
        _1324 = _1323;
        _1325 = _1323;
        _1326 = _1323;
        _1327 = _1323;
        _1328 = _1323;
        _1329 = _1323;
        _1330 = _1323;
        _1331 = _1323;
        _1332 = _1323;
        _1333 = _1323;
        _1334 = _1323;
        _1335 = 0.0;
        _1336 = 0.0;
        _1337 = 0.0;
    }
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    float _1640;
    float _1641;
    float _1642;
    float _1643;
    float _1644;
    float _1645;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1362 = fma(_1021, cbModelParam._m0[30u].z, fma(_1017, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1013));
        float _1366 = fma(_1021, cbModelParam._m0[31u].z, fma(_1017, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1013));
        float _1370 = fma(_1021, cbModelParam._m0[32u].z, fma(_1017, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1013));
        float _1393 = _1013 + _784;
        float _1394 = _1017 + _785;
        float _1395 = _1021 + _786;
        float _1405 = fma(_1395, cbModelParam._m0[30u].z, fma(_1394, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1393)) - _1362;
        float _1406 = fma(_1395, cbModelParam._m0[31u].z, fma(_1394, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1393)) - _1366;
        float _1407 = fma(_1395, cbModelParam._m0[32u].z, fma(_1394, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1393)) - _1370;
        float _1411 = inversesqrt(dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407)));
        float _1424 = ((_1411 * _1405) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1362 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1425 = ((_1411 * _1406) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1366 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1426 = ((_1411 * _1407) / cbModelParam._m0[35u].z) + ((((((_1370 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1428 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1424, _1425, _1426), 0.0);
        vec4 _1435 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1424, _1425, _1426), 0.0);
        vec4 _1442 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1424, _1425, _1426), 0.0);
        vec4 _1449 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1424, _1425, _1426), 0.0);
        float _1461 = exp2((_1428.w + (-0.5)) * 20.0) * 2.0;
        float _1462 = _1461 * (_1428.x + (-0.5));
        float _1463 = _1461 * (_1428.y + (-0.5));
        float _1464 = _1461 * (_1428.z + (-0.5));
        float _1471 = exp2((_1435.w + (-0.5)) * 20.0) * 2.0;
        float _1472 = _1471 * (_1435.x + (-0.5));
        float _1473 = _1471 * (_1435.y + (-0.5));
        float _1474 = _1471 * (_1435.z + (-0.5));
        float _1481 = exp2((_1442.w + (-0.5)) * 20.0) * 2.0;
        float _1482 = _1481 * (_1442.x + (-0.5));
        float _1483 = _1481 * (_1442.y + (-0.5));
        float _1484 = _1481 * (_1442.z + (-0.5));
        float _1491 = exp2((_1449.w + (-0.5)) * 20.0) * 2.0;
        float _1492 = _1491 * (_1449.x + (-0.5));
        float _1493 = _1491 * (_1449.y + (-0.5));
        float _1494 = _1491 * (_1449.z + (-0.5));
        float _1495 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1496 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1497 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1498 = _1462 * 0.5;
        float _1499 = _1472 * 0.5;
        float _1500 = _1482 * 0.5;
        float _1501 = dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500));
        float _1506 = (_1501 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1501);
        float _1514 = (dot(vec3(_784, _785, _786), vec3(_1506 * _1498, _1506 * _1499, _1506 * _1500)) + 1.0) * 0.5;
        float _4261 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1523 = sqrt(((_1499 * _1499) + (_1498 * _1498)) + (_1500 * _1500)) / (_1495 + 9.9999997473787516355514526367188e-06);
        float _4272 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0));
        float _1525 = _1524 * 2.0;
        float _1529 = (1.0 - _1524) / (_1524 + 1.0);
        float _4283 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1539 = ((((1.0 - _1530) * (_1525 + 2.0)) * exp2(log2(isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0))) * (_1525 + 1.0))) + _1530) * _1495;
        float _1540 = _1463 * 0.5;
        float _1541 = _1473 * 0.5;
        float _1542 = _1483 * 0.5;
        float _1543 = dot(vec3(_1540, _1541, _1542), vec3(_1540, _1541, _1542));
        float _1548 = (_1543 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1543);
        float _1556 = (dot(vec3(_784, _785, _786), vec3(_1548 * _1540, _1548 * _1541, _1548 * _1542)) + 1.0) * 0.5;
        float _4294 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1565 = sqrt(((_1541 * _1541) + (_1540 * _1540)) + (_1542 * _1542)) / (_1496 + 9.9999997473787516355514526367188e-06);
        float _4305 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
        float _1567 = _1566 * 2.0;
        float _1571 = (1.0 - _1566) / (_1566 + 1.0);
        float _4316 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1572 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
        float _1581 = ((((1.0 - _1572) * (_1567 + 2.0)) * exp2(log2(isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0))) * (_1567 + 1.0))) + _1572) * _1496;
        float _1582 = _1464 * 0.5;
        float _1583 = _1474 * 0.5;
        float _1584 = _1484 * 0.5;
        float _1585 = dot(vec3(_1582, _1583, _1584), vec3(_1582, _1583, _1584));
        float _1590 = (_1585 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1585);
        float _1598 = (dot(vec3(_784, _785, _786), vec3(_1590 * _1582, _1590 * _1583, _1590 * _1584)) + 1.0) * 0.5;
        float _4327 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1607 = sqrt(((_1583 * _1583) + (_1582 * _1582)) + (_1584 * _1584)) / (_1497 + 9.9999997473787516355514526367188e-06);
        float _4338 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1608 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
        float _1609 = _1608 * 2.0;
        float _1613 = (1.0 - _1608) / (_1608 + 1.0);
        float _4349 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1614 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1623 = ((((1.0 - _1614) * (_1609 + 2.0)) * exp2(log2(isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))) * (_1609 + 1.0))) + _1614) * _1497;
        _1631 = _1464;
        _1632 = _1463;
        _1633 = _1462;
        _1634 = _1474;
        _1635 = _1473;
        _1636 = _1472;
        _1637 = _1484;
        _1638 = _1483;
        _1639 = _1482;
        _1640 = _1497;
        _1641 = _1496;
        _1642 = _1495;
        _1643 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0)));
        _1644 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0)));
        _1645 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0)));
    }
    else
    {
        _1631 = _1323;
        _1632 = _1323;
        _1633 = _1323;
        _1634 = _1323;
        _1635 = _1323;
        _1636 = _1323;
        _1637 = _1323;
        _1638 = _1323;
        _1639 = _1323;
        _1640 = _1323;
        _1641 = _1323;
        _1642 = _1323;
        _1643 = 0.0;
        _1644 = 0.0;
        _1645 = 0.0;
    }
    float _1655 = (cbModelParam._m0[1u].x * (_1643 - _1335)) + _1335;
    float _1656 = (cbModelParam._m0[1u].x * (_1644 - _1336)) + _1336;
    float _1657 = (cbModelParam._m0[1u].x * (_1645 - _1337)) + _1337;
    float _1678 = fma(_1657, cbSceneParam._m0[89u].z, fma(_1656, cbSceneParam._m0[89u].y, _1655 * cbSceneParam._m0[89u].x));
    float _1681 = fma(_1657, cbSceneParam._m0[90u].z, fma(_1656, cbSceneParam._m0[90u].y, _1655 * cbSceneParam._m0[90u].x));
    float _1684 = fma(_1657, cbSceneParam._m0[91u].z, fma(_1656, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1655));
    float _1699 = _957 * 0.5;
    float _1700 = _958 * 0.5;
    float _1701 = _959 * 0.5;
    float _1702 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1633, _1636, _1639, _1642));
    float _1705 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1632, _1635, _1638, _1641));
    float _1708 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1631, _1634, _1637, _1640));
    float _1742;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1715 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1322, _1326, _1329, _1332));
        float _1719 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1324, _1327, _1330, _1333));
        float _1723 = dot(vec4(_1699, _1700, _1701, 1.0), vec4(_1325, _1328, _1331, _1334));
        float _1730 = dot(vec4(cbModelParam._m0[39u]), vec4(_1699, _1700, _1701, 1.0));
        _1742 = dot(vec3(isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0)), isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0)), isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1730) ? 0.0 : (isnan(0.0) ? _1730 : max(0.0, _1730))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1742 = 1.0;
    }
    float _1753;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1744 = dot(vec4(cbModelParam._m0[40u]), vec4(_1699, _1700, _1701, 1.0));
        _1753 = dot(vec3(isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0)), isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)), isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1744) ? 0.0 : (isnan(0.0) ? _1744 : max(0.0, _1744))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1753 = 1.0;
    }
    float _1757 = (_1753 * cbModelParam._m0[1u].x) + (_1742 * (1.0 - cbModelParam._m0[1u].x));
    float _1767 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _787);
    float _1768 = isnan(_1767) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1767 : min(cbModelParam._m0[25u].z, _1767));
    float _1848;
    float _1850;
    float _1852;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1815 = fma(_1021, cbModelParam._m0[13u].z, fma(_1017, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1013)) + cbModelParam._m0[13u].w;
        float _1819 = fma(_1021, cbModelParam._m0[14u].z, fma(_1017, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1013)) + cbModelParam._m0[14u].w;
        float _1823 = fma(_1021, cbModelParam._m0[15u].z, fma(_1017, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1013)) + cbModelParam._m0[15u].w;
        float _1826 = fma(_959, cbModelParam._m0[13u].z, fma(_958, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _957));
        float _1829 = fma(_959, cbModelParam._m0[14u].z, fma(_958, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _957));
        float _1832 = fma(_959, cbModelParam._m0[15u].z, fma(_958, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _957));
        float _1860;
        if (_1826 > 0.0)
        {
            _1860 = abs((1.0 - _1815) / _1826);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1826 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1815 + 1.0) / _1826);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1860 = frontier_phi_14_12_ladder;
        }
        float _2031;
        if (_1829 > 0.0)
        {
            _2031 = abs((1.0 - _1819) / _1829);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1819 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2031 = frontier_phi_23_19_ladder;
        }
        float _2326;
        if (_1832 > 0.0)
        {
            _2326 = abs((1.0 - _1823) / _1832);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1823 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2326 = frontier_phi_35_30_ladder;
        }
        float _2328 = isnan(_2031) ? _1860 : (isnan(_1860) ? _2031 : min(_1860, _2031));
        float _2329 = isnan(_2326) ? _2328 : (isnan(_2328) ? _2326 : min(_2328, _2326));
        float _2333 = (_2329 * _1826) + _1815;
        float _2334 = (_2329 * _1829) + _1819;
        float _2335 = (_2329 * _1832) + _1823;
        float _2336 = _2329 * 9.9999997473787516355514526367188e-05;
        float _2338 = (-1.0) - _2336;
        float _2340 = _2336 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2335 > _2340) || ((_2335 < _2338) || ((_2334 > _2340) || ((_2334 < _2338) || ((_2333 < _2338) || (_2333 > _2340))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2480 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2335, cbModelParam._m0[9u].z, fma(_2334, cbModelParam._m0[9u].y, _2333 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2335, cbModelParam._m0[10u].z, fma(_2334, cbModelParam._m0[10u].y, _2333 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2335, cbModelParam._m0[11u].z, fma(_2334, cbModelParam._m0[11u].y, _2333 * cbModelParam._m0[11u].x))), _1768);
            frontier_phi_13_35_ladder = _2480.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2480.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2480.x * cbModelParam._m0[1u].y;
        }
        _1848 = frontier_phi_13_35_ladder_2;
        _1850 = frontier_phi_13_35_ladder_1;
        _1852 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1836 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_957, _958, _959), _1768);
        _1848 = _1836.x * cbModelParam._m0[1u].y;
        _1850 = _1836.y * cbModelParam._m0[1u].y;
        _1852 = _1836.z * cbModelParam._m0[1u].y;
    }
    float _1856 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _787);
    float _1857 = isnan(_1856) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1856 : min(cbModelParam._m0[25u].w, _1856));
    float _1946;
    float _1948;
    float _1950;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1910 = fma(_1021, cbModelParam._m0[21u].z, fma(_1017, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1013)) + cbModelParam._m0[21u].w;
        float _1914 = fma(_1021, cbModelParam._m0[22u].z, fma(_1017, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1013)) + cbModelParam._m0[22u].w;
        float _1918 = fma(_1021, cbModelParam._m0[23u].z, fma(_1017, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1013)) + cbModelParam._m0[23u].w;
        float _1921 = fma(_959, cbModelParam._m0[21u].z, fma(_958, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _957));
        float _1924 = fma(_959, cbModelParam._m0[22u].z, fma(_958, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _957));
        float _1927 = fma(_959, cbModelParam._m0[23u].z, fma(_958, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _957));
        float _2036;
        if (_1921 > 0.0)
        {
            _2036 = abs((1.0 - _1910) / _1921);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1921 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1910 + 1.0) / _1921);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2036 = frontier_phi_25_21_ladder;
        }
        float _2353;
        if (_1924 > 0.0)
        {
            _2353 = abs((1.0 - _1914) / _1924);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1924 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1914 + 1.0) / _1924);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2353 = frontier_phi_37_32_ladder;
        }
        float _2691;
        if (_1927 > 0.0)
        {
            _2691 = abs((1.0 - _1918) / _1927);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1927 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1918 + 1.0) / _1927);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2691 = frontier_phi_47_44_ladder;
        }
        float _2693 = isnan(_2353) ? _2036 : (isnan(_2036) ? _2353 : min(_2036, _2353));
        float _2694 = isnan(_2691) ? _2693 : (isnan(_2693) ? _2691 : min(_2693, _2691));
        float _2698 = (_2694 * _1921) + _1910;
        float _2699 = (_2694 * _1924) + _1914;
        float _2700 = (_2694 * _1927) + _1918;
        float _2701 = _2694 * 9.9999997473787516355514526367188e-05;
        float _2702 = (-1.0) - _2701;
        float _2704 = _2701 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2700 > _2704) || ((_2700 < _2702) || ((_2699 > _2704) || ((_2699 < _2702) || ((_2698 < _2702) || (_2698 > _2704))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2822 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2700, cbModelParam._m0[17u].z, fma(_2699, cbModelParam._m0[17u].y, _2698 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2700, cbModelParam._m0[18u].z, fma(_2699, cbModelParam._m0[18u].y, _2698 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2700, cbModelParam._m0[19u].z, fma(_2699, cbModelParam._m0[19u].y, _2698 * cbModelParam._m0[19u].x))), _1857);
            frontier_phi_22_47_ladder = _2822.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2822.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2822.x * cbModelParam._m0[1u].z;
        }
        _1946 = frontier_phi_22_47_ladder_2;
        _1948 = frontier_phi_22_47_ladder_1;
        _1950 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1930 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_957, _958, _959), _1857);
        _1946 = _1930.x * cbModelParam._m0[1u].z;
        _1948 = _1930.y * cbModelParam._m0[1u].z;
        _1950 = _1930.z * cbModelParam._m0[1u].z;
    }
    float _1963 = (((_984 * _933) + _985) * _949) * ((cbModelParam._m0[1u].w * (_1946 - _1848)) + _1848);
    float _1965 = (((_984 * _935) + _985) * _949) * ((cbModelParam._m0[1u].w * (_1948 - _1850)) + _1850);
    float _1967 = (((_984 * _936) + _985) * _949) * ((cbModelParam._m0[1u].w * (_1950 - _1852)) + _1852);
    float _1970 = fma(_1967, cbSceneParam._m0[89u].z, fma(_1965, cbSceneParam._m0[89u].y, _1963 * cbSceneParam._m0[89u].x));
    float _1973 = fma(_1967, cbSceneParam._m0[90u].z, fma(_1965, cbSceneParam._m0[90u].y, _1963 * cbSceneParam._m0[90u].x));
    float _1976 = fma(_1967, cbSceneParam._m0[91u].z, fma(_1965, cbSceneParam._m0[91u].y, _1963 * cbSceneParam._m0[91u].x));
    float _2010 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2014 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2018 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2022 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2023 = _2010 / _2022;
    float _2024 = _2014 / _2022;
    float _2025 = _2018 / _2022;
    float _2172;
    float _2173;
    float _2174;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2052 = ((uint(_2025 > cbSceneParam._m0[59u].y) + uint(_2025 > cbSceneParam._m0[59u].x)) + uint(_2025 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2053 = _2052 + 43u;
        uint _2061 = _2052 + 44u;
        uint _2069 = _2052 + 45u;
        uint _2077 = _2052 + 46u;
        float _2088 = fma(_2022, cbSceneParam._m0[_2053].w, fma(_2018, cbSceneParam._m0[_2053].z, fma(_2014, cbSceneParam._m0[_2053].y, _2010 * cbSceneParam._m0[_2053].x)));
        float _2092 = fma(_2022, cbSceneParam._m0[_2061].w, fma(_2018, cbSceneParam._m0[_2061].z, fma(_2014, cbSceneParam._m0[_2061].y, _2010 * cbSceneParam._m0[_2061].x)));
        float _2100 = fma(_2022, cbSceneParam._m0[_2077].w, fma(_2018, cbSceneParam._m0[_2077].z, fma(_2014, cbSceneParam._m0[_2077].y, _2010 * cbSceneParam._m0[_2077].x)));
        float _2105 = cbSceneParam._m0[33u].z * _2100;
        float _2107 = cbSceneParam._m0[33u].w * _2100;
        float _2110 = fma(_2022, cbSceneParam._m0[_2069].w, fma(_2018, cbSceneParam._m0[_2069].z, fma(_2014, cbSceneParam._m0[_2069].y, _2010 * cbSceneParam._m0[_2069].x))) / _2100;
        float _2158 = (cbSceneParam._m0[33u].x - sqrt(((_2024 * _2024) + (_2023 * _2023)) + (_2025 * _2025))) * cbSceneParam._m0[33u].y;
        float _4475 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
        float _2165 = (isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2105 + _2088) / _2100, (_2107 + _2092) / _2100), _2110), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2107 + _2088) / _2100, (_2092 - _2105) / _2100), _2110), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2088 - _2105) / _2100, (_2092 - _2107) / _2100), _2110), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2088 - _2107) / _2100, (_2105 + _2092) / _2100), _2110), 0.0)).x), vec4(0.25)));
        _2172 = 1.0 - (_2165 * cbSceneParam._m0[34u].x);
        _2173 = 1.0 - (_2165 * cbSceneParam._m0[34u].y);
        _2174 = 1.0 - (_2165 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2172 = 1.0;
        _2173 = 1.0;
        _2174 = 1.0;
    }
    float _2238;
    float _2240;
    float _2242;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2226 = fma(_2022, cbSceneParam._m0[63u].w, fma(_2018, cbSceneParam._m0[63u].z, fma(_2014, cbSceneParam._m0[63u].y, _2010 * cbSceneParam._m0[63u].x)));
        float _2227 = fma(_2022, cbSceneParam._m0[60u].w, fma(_2018, cbSceneParam._m0[60u].z, fma(_2014, cbSceneParam._m0[60u].y, _2010 * cbSceneParam._m0[60u].x))) / _2226;
        float _2228 = fma(_2022, cbSceneParam._m0[61u].w, fma(_2018, cbSceneParam._m0[61u].z, fma(_2014, cbSceneParam._m0[61u].y, _2010 * cbSceneParam._m0[61u].x))) / _2226;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2227 >= cbSceneParam._m0[64u].x) && (_2228 >= cbSceneParam._m0[64u].y)) && (_2227 <= cbSceneParam._m0[64u].z)) && (_2228 <= cbSceneParam._m0[64u].w))
        {
            float _2366 = fma(_2022, cbSceneParam._m0[62u].w, fma(_2018, cbSceneParam._m0[62u].z, fma(_2014, cbSceneParam._m0[62u].y, _2010 * cbSceneParam._m0[62u].x))) / _2226;
            float _2370 = isnan(cbSceneParam._m0[41u].w) ? _2366 : (isnan(_2366) ? cbSceneParam._m0[41u].w : max(_2366, cbSceneParam._m0[41u].w));
            float _2413 = (cbSceneParam._m0[33u].x - sqrt(((_2024 * _2024) + (_2023 * _2023)) + (_2025 * _2025))) * cbSceneParam._m0[33u].y;
            float _4491 = isnan(0.0) ? _2413 : (isnan(_2413) ? 0.0 : max(_2413, 0.0));
            float _2420 = (isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2227, cbSceneParam._m0[33u].w + _2228), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2227, _2228 - cbSceneParam._m0[33u].z), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2227 - cbSceneParam._m0[33u].z, _2228 - cbSceneParam._m0[33u].w), _2370), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2227 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2228), _2370), 0.0)).x), vec4(0.25)));
            float _2424 = 1.0 - (_2420 * cbSceneParam._m0[34u].x);
            float _2425 = 1.0 - (_2420 * cbSceneParam._m0[34u].y);
            float _2426 = 1.0 - (_2420 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2426) ? _2174 : (isnan(_2174) ? _2426 : min(_2174, _2426));
            frontier_phi_34_33_ladder_1 = isnan(_2425) ? _2173 : (isnan(_2173) ? _2425 : min(_2173, _2425));
            frontier_phi_34_33_ladder_2 = isnan(_2424) ? _2172 : (isnan(_2172) ? _2424 : min(_2172, _2424));
        }
        else
        {
            frontier_phi_34_33_ladder = _2174;
            frontier_phi_34_33_ladder_1 = _2173;
            frontier_phi_34_33_ladder_2 = _2172;
        }
        _2238 = frontier_phi_34_33_ladder_2;
        _2240 = frontier_phi_34_33_ladder_1;
        _2242 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2238 = _2172;
        _2240 = _2173;
        _2242 = _2174;
    }
    uvec4 _2247 = floatBitsToUint(cbInstanceData._m0[_253 + 5u]);
    uint _2249 = _2247.x * 14u;
    uint _2250 = _2249 + 13u;
    float _2257 = _949 + (-1.0);
    float _2262 = (cbLight._m0[_2250].x * _2257) + 1.0;
    float _2263 = (cbLight._m0[_2250].y * _2257) + 1.0;
    float _2264 = (cbLight._m0[_2250].z * _2257) + 1.0;
    float _2265 = (cbLight._m0[_2250].w * _2257) + 1.0;
    uint _2266 = _2249 + 5u;
    float _2272 = isnan(1.0) ? _2263 : (isnan(_2263) ? 1.0 : min(_2263, 1.0));
    uint _2276 = _2249 + 4u;
    float _2285 = isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0));
    uint _2289 = _2249 | 1u;
    float _2300 = dot(vec3(cbLight._m0[_2249].xyz), vec3(_784, _785, _786));
    float _2303 = dot(vec3(cbLight._m0[_2289].xyz), vec3(_784, _785, _786));
    float _4527 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
    float _4538 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
    float _2308 = (isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0))) * 0.3183098733425140380859375;
    float _2310 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * 0.3183098733425140380859375;
    float _2317 = ((cbLight._m0[_2266].x * _2272) * _2310) + (((cbLight._m0[_2276].x * _2238) * _2285) * _2308);
    float _2318 = ((_2272 * cbLight._m0[_2266].y) * _2310) + (((cbLight._m0[_2276].y * _2240) * _2285) * _2308);
    float _2319 = ((_2272 * cbLight._m0[_2266].z) * _2310) + (((cbLight._m0[_2276].z * _2242) * _2285) * _2308);
    uvec4 _2323 = floatBitsToUint(cbLight._m0[_2249 + 12u]);
    bool _2325 = _2323.x == 0u;
    float _2427;
    float _2429;
    float _2431;
    if (_2325)
    {
        _2427 = _2317;
        _2429 = _2318;
        _2431 = _2319;
    }
    else
    {
        uint _2435 = _2249 + 6u;
        float _2451 = (dot(vec3(cbLight._m0[_2249 + 2u].xyz), vec3(_784, _785, _786)) * 0.5) + 0.5;
        float _2452 = _2451 * _2451;
        float _4549 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
        float _2453 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _2454 = isnan(1.0) ? _2264 : (isnan(_2264) ? 1.0 : min(_2264, 1.0));
        _2427 = (((cbLight._m0[_2435].x * 0.3183098733425140380859375) * _2453) * _2454) + _2317;
        _2429 = (((cbLight._m0[_2435].y * 0.3183098733425140380859375) * _2453) * _2454) + _2318;
        _2431 = (((cbLight._m0[_2435].z * 0.3183098733425140380859375) * _2453) * _2454) + _2319;
    }
    bool _2434 = _2323.y == 0u;
    float _2489;
    float _2491;
    float _2493;
    if (_2434)
    {
        _2489 = _2427;
        _2491 = _2429;
        _2493 = _2431;
    }
    else
    {
        uint _2662 = _2249 + 7u;
        float _2678 = (dot(vec3(cbLight._m0[_2249 + 3u].xyz), vec3(_784, _785, _786)) * 0.5) + 0.5;
        float _2679 = _2678 * _2678;
        float _4565 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
        float _2680 = isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0));
        float _2681 = isnan(1.0) ? _2265 : (isnan(_2265) ? 1.0 : min(_2265, 1.0));
        _2489 = (((cbLight._m0[_2662].x * 0.3183098733425140380859375) * _2680) * _2681) + _2427;
        _2491 = (((cbLight._m0[_2662].y * 0.3183098733425140380859375) * _2680) * _2681) + _2429;
        _2493 = (((cbLight._m0[_2662].z * 0.3183098733425140380859375) * _2680) * _2681) + _2431;
    }
    uint _2496 = _2249 + 8u;
    float _2509 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2249].w)) * _787) * 0.949999988079071044921875);
    float _2510 = _2509 * _2509;
    float _2511 = cbLight._m0[_2249].x + _863;
    float _2512 = cbLight._m0[_2249].y + _864;
    float _2513 = cbLight._m0[_2249].z + _865;
    float _2517 = inversesqrt(dot(vec3(_2511, _2512, _2513), vec3(_2511, _2512, _2513)));
    float _2518 = _2517 * _2511;
    float _2519 = _2517 * _2512;
    float _2520 = _2517 * _2513;
    float _2521 = dot(vec3(_784, _785, _786), vec3(cbLight._m0[_2249].xyz));
    float _4581 = isnan(0.0) ? _2521 : (isnan(_2521) ? 0.0 : max(_2521, 0.0));
    float _2524 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
    float _4592 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _2525 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
    float _2526 = dot(vec3(_784, _785, _786), vec3(_2518, _2519, _2520));
    float _4603 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
    float _2529 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
    float _2530 = dot(vec3(cbLight._m0[_2249].xyz), vec3(_2518, _2519, _2520));
    float _4614 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
    float _2534 = _2510 * _2510;
    float _2538 = ((_2529 * _2529) * (_2534 + (-1.0))) + 1.0;
    float _2546 = exp2(log2(1.0 - (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0)))) * 5.0);
    float _2547 = 0.959999978542327880859375 - _930;
    float _2549 = 0.959999978542327880859375 - _931;
    float _2550 = 0.959999978542327880859375 - _932;
    float _2557 = 1.0 - _2510;
    float _2568 = (0.5 / (((_2525 * ((_2524 * _2557) + _2510)) + 9.9999999392252902907785028219223e-09) + (((_2525 * _2557) + _2510) * _2524))) * _2524;
    float _4625 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
    float _2570 = (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0))) * (_2534 / ((_2538 * _2538) * 3.141590118408203125));
    uint _2584 = _2249 + 9u;
    float _2595 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2289].w)) * _787) * 0.949999988079071044921875);
    float _2596 = _2595 * _2595;
    float _2597 = cbLight._m0[_2289].x + _863;
    float _2598 = cbLight._m0[_2289].y + _864;
    float _2599 = cbLight._m0[_2289].z + _865;
    float _2603 = inversesqrt(dot(vec3(_2597, _2598, _2599), vec3(_2597, _2598, _2599)));
    float _2604 = _2603 * _2597;
    float _2605 = _2603 * _2598;
    float _2606 = _2603 * _2599;
    float _2607 = dot(vec3(_784, _785, _786), vec3(cbLight._m0[_2289].xyz));
    float _4636 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2610 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
    float _2611 = dot(vec3(_784, _785, _786), vec3(_2604, _2605, _2606));
    float _4647 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
    float _2614 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
    float _2615 = dot(vec3(cbLight._m0[_2289].xyz), vec3(_2604, _2605, _2606));
    float _4658 = isnan(0.0) ? _2615 : (isnan(_2615) ? 0.0 : max(_2615, 0.0));
    float _2619 = _2596 * _2596;
    float _2623 = ((_2614 * _2614) * (_2619 + (-1.0))) + 1.0;
    float _2630 = exp2(log2(1.0 - (isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0)))) * 5.0);
    float _2637 = 1.0 - _2596;
    float _2647 = (0.5 / (((_2525 * ((_2610 * _2637) + _2596)) + 9.9999999392252902907785028219223e-09) + (((_2525 * _2637) + _2596) * _2610))) * _2610;
    float _4669 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
    float _2649 = (isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0))) * (_2619 / ((_2623 * _2623) * 3.141590118408203125));
    float _2659 = (((((_2630 * _2547) + _933) * cbLight._m0[_2584].x) * _2649) * _2272) + ((((cbLight._m0[_2496].x * _2238) * ((_2546 * _2547) + _933)) * _2570) * _2285);
    float _2660 = (((((_2630 * _2549) + _935) * cbLight._m0[_2584].y) * _2649) * _2272) + ((((cbLight._m0[_2496].y * _2240) * ((_2546 * _2549) + _935)) * _2570) * _2285);
    float _2661 = (((((_2630 * _2550) + _936) * cbLight._m0[_2584].z) * _2649) * _2272) + ((((cbLight._m0[_2496].z * _2242) * ((_2546 * _2550) + _936)) * _2570) * _2285);
    float _2717;
    float _2719;
    float _2721;
    if (_2325)
    {
        _2717 = _2659;
        _2719 = _2660;
        _2721 = _2661;
    }
    else
    {
        uint _2723 = _2249 + 2u;
        uint _2727 = _2249 + 10u;
        float _2741 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2723].w)) * _787) * 0.949999988079071044921875);
        float _2742 = _2741 * _2741;
        float _2743 = cbLight._m0[_2723].x + _863;
        float _2744 = cbLight._m0[_2723].y + _864;
        float _2745 = cbLight._m0[_2723].z + _865;
        float _2749 = inversesqrt(dot(vec3(_2743, _2744, _2745), vec3(_2743, _2744, _2745)));
        float _2750 = _2749 * _2743;
        float _2751 = _2749 * _2744;
        float _2752 = _2749 * _2745;
        float _2753 = dot(vec3(_784, _785, _786), vec3(cbLight._m0[_2723].xyz));
        float _4680 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
        float _2756 = isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0));
        float _2757 = dot(vec3(_784, _785, _786), vec3(_2750, _2751, _2752));
        float _4691 = isnan(0.0) ? _2757 : (isnan(_2757) ? 0.0 : max(_2757, 0.0));
        float _2760 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _2761 = dot(vec3(cbLight._m0[_2723].xyz), vec3(_2750, _2751, _2752));
        float _4702 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2765 = _2742 * _2742;
        float _2769 = ((_2760 * _2760) * (_2765 + (-1.0))) + 1.0;
        float _2776 = exp2(log2(1.0 - (isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0)))) * 5.0);
        float _2783 = 1.0 - _2742;
        float _2793 = (0.5 / (((_2525 * ((_2756 * _2783) + _2742)) + 9.9999999392252902907785028219223e-09) + (((_2525 * _2783) + _2742) * _2756))) * _2756;
        float _4713 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
        float _2795 = (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0))) * (_2765 / ((_2769 * _2769) * 3.141590118408203125));
        float _2796 = isnan(1.0) ? _2264 : (isnan(_2264) ? 1.0 : min(_2264, 1.0));
        _2717 = (((((_2776 * _2547) + _933) * cbLight._m0[_2727].x) * _2795) * _2796) + _2659;
        _2719 = (((((_2776 * _2549) + _935) * cbLight._m0[_2727].y) * _2795) * _2796) + _2660;
        _2721 = (((((_2776 * _2550) + _936) * cbLight._m0[_2727].z) * _2795) * _2796) + _2661;
    }
    float _2827;
    float _2829;
    float _2831;
    if (_2434)
    {
        _2827 = _2717;
        _2829 = _2719;
        _2831 = _2721;
    }
    else
    {
        uint _2838 = _2249 + 3u;
        uint _2842 = _2249 + 11u;
        float _2856 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2838].w)) * _787) * 0.949999988079071044921875);
        float _2857 = _2856 * _2856;
        float _2858 = cbLight._m0[_2838].x + _863;
        float _2859 = cbLight._m0[_2838].y + _864;
        float _2860 = cbLight._m0[_2838].z + _865;
        float _2864 = inversesqrt(dot(vec3(_2858, _2859, _2860), vec3(_2858, _2859, _2860)));
        float _2865 = _2864 * _2858;
        float _2866 = _2864 * _2859;
        float _2867 = _2864 * _2860;
        float _2868 = dot(vec3(_784, _785, _786), vec3(cbLight._m0[_2838].xyz));
        float _4729 = isnan(0.0) ? _2868 : (isnan(_2868) ? 0.0 : max(_2868, 0.0));
        float _2871 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
        float _2872 = dot(vec3(_784, _785, _786), vec3(_2865, _2866, _2867));
        float _4740 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
        float _2875 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
        float _2876 = dot(vec3(cbLight._m0[_2838].xyz), vec3(_2865, _2866, _2867));
        float _4751 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0));
        float _2880 = _2857 * _2857;
        float _2884 = ((_2875 * _2875) * (_2880 + (-1.0))) + 1.0;
        float _2891 = exp2(log2(1.0 - (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0)))) * 5.0);
        float _2898 = 1.0 - _2857;
        float _2908 = (0.5 / (((_2525 * ((_2871 * _2898) + _2857)) + 9.9999999392252902907785028219223e-09) + (((_2525 * _2898) + _2857) * _2871))) * _2871;
        float _4762 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
        float _2910 = (isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0))) * (_2880 / ((_2884 * _2884) * 3.141590118408203125));
        float _2911 = isnan(1.0) ? _2265 : (isnan(_2265) ? 1.0 : min(_2265, 1.0));
        _2827 = (((((_2891 * _2547) + _933) * cbLight._m0[_2842].x) * _2910) * _2911) + _2717;
        _2829 = (((((_2891 * _2549) + _935) * cbLight._m0[_2842].y) * _2910) * _2911) + _2719;
        _2831 = (((((_2891 * _2550) + _936) * cbLight._m0[_2842].z) * _2910) * _2911) + _2721;
    }
    float _2977;
    float _2979;
    float _2981;
    float _2983;
    float _2985;
    float _2987;
    if (_2247.y == 0u)
    {
        uvec4 _2932 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2933 = _2932.x;
        uint _2944 = uint((float(_2932.y) * floor(float(uint(cbSceneParam._m0[85u].y * _872) / _2933))) + floor(float(uint(cbSceneParam._m0[85u].x * _871) / _2933)));
        float _2954 = (log2(_2025 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2955 = isnan(0.0) ? _2954 : (isnan(_2954) ? 0.0 : max(_2954, 0.0));
        uint _2958 = uint(isnan(14.0) ? _2955 : (isnan(_2955) ? 14.0 : min(_2955, 14.0)));
        uvec4 _2963 = texelFetch(g_lightClusterGridBuffer, int(((_2958 << 2u) + (_2944 << 6u)) >> 2u));
        uint _2964 = _2963.x;
        uint _2965 = _2932.z;
        float _3044;
        float _3046;
        float _3048;
        float _3050;
        float _3052;
        float _3054;
        if (((((1u << ((_2965 >> 4u) & 15u)) + 4294967295u) & _2964) == 0u) || ((_2965 & 240u) == 0u))
        {
            _3044 = 0.0;
            _3046 = 0.0;
            _3048 = 0.0;
            _3050 = 0.0;
            _3052 = 0.0;
            _3054 = 0.0;
        }
        else
        {
            float _3045;
            float _3047;
            float _3049;
            float _3051;
            float _3053;
            float _3055;
            float _3188 = 0.0;
            float _3189 = 0.0;
            float _3190 = 0.0;
            float _3191 = 0.0;
            float _3192 = 0.0;
            float _3193 = 0.0;
            uint _3194 = 0u;
            uint _3203;
            bool _3204;
            for (;;)
            {
                _3203 = texelFetch(g_lightClassification, int((((_2958 << 5u) + (_2944 << 9u)) + (_3194 << 2u)) >> 2u)).x;
                _3204 = _3203 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3204)
                {
                    frontier_phi_66_pred = _3193;
                    frontier_phi_66_pred_1 = _3192;
                    frontier_phi_66_pred_2 = _3191;
                    frontier_phi_66_pred_3 = _3190;
                    frontier_phi_66_pred_4 = _3189;
                    frontier_phi_66_pred_5 = _3188;
                }
                else
                {
                    float _3312;
                    float _3313;
                    float _3314;
                    float _3315;
                    float _3316;
                    float _3317;
                    uint _3318;
                    _3312 = _3188;
                    _3313 = _3189;
                    _3314 = _3190;
                    _3315 = _3191;
                    _3316 = _3192;
                    _3317 = _3193;
                    _3318 = _3203;
                    float _3244;
                    float _3245;
                    float _3246;
                    float _3247;
                    float _3248;
                    float _3249;
                    for (;;)
                    {
                        uint _3322 = uint(findLSB(_3318)) + (_3194 << 5u);
                        uint _3319 = (_3318 + 4294967295u) & _3318;
                        uint _3324 = _3322 * 48u;
                        vec4 _3338 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3324)).x, texelFetch(g_PointLightRenderingBuffer, int(_3324 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3324 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3324 + 3u)).x));
                        uint _3344 = (_3322 * 48u) + 4u;
                        vec4 _3357 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3344)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3344 + 3u)).x));
                        uint _3363 = (_3322 * 48u) + 8u;
                        vec3 _3374 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3363)).x, texelFetch(g_PointLightRenderingBuffer, int(_3363 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3363 + 2u)).x));
                        float _3378 = _3338.x - _2023;
                        float _3379 = _3338.y - _2024;
                        float _3380 = _3338.z - _2025;
                        float _3381 = dot(vec3(_3378, _3379, _3380), vec3(_3378, _3379, _3380));
                        float _3384 = inversesqrt(_3381);
                        float _3385 = _3384 * _3378;
                        float _3386 = _3384 * _3379;
                        float _3387 = _3384 * _3380;
                        float _3388 = dot(vec3(_890, _893, _896), vec3(_3385, _3386, _3387));
                        float _3393 = 1.0 - (_3381 * _3338.w);
                        float _4788 = isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0));
                        float _3394 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
                        float _3395 = sqrt(_3381) * _3357.w;
                        float _3398 = 1.39999997615814208984375 / (_3395 + 1.39999997615814208984375);
                        float _3399 = _3398 * _3398;
                        float _3402 = ((1.0 - _3399) * _3388) + _3399;
                        float _3405 = _3395 * _3395;
                        float _3409 = ((isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0))) * _3394) / ((_3405 * 0.699999988079071044921875) + 1.0);
                        float _3413 = (-0.0) - _2023;
                        float _3414 = (-0.0) - _2024;
                        float _3415 = (-0.0) - _2025;
                        float _3419 = inversesqrt(dot(vec3(_3413, _3414, _3415), vec3(_3413, _3414, _3415)));
                        float _3420 = _3419 * _3413;
                        float _3421 = _3419 * _3414;
                        float _3422 = _3419 * _3415;
                        float _3429 = exp2(log2(1.0 / ((_3405 * 3.5) + 5.0)) * 0.25);
                        float _3430 = 1.0 - _965;
                        float _3437 = sqrt(1.0 - ((1.0 - (_3430 * _3430)) * (1.0 - (_3429 * _3429))));
                        float _3438 = _3437 * _3437;
                        float _3439 = _3438 * _3438;
                        float _3440 = _3420 + _3385;
                        float _3441 = _3421 + _3386;
                        float _3442 = _3422 + _3387;
                        float _3446 = inversesqrt(dot(vec3(_3440, _3441, _3442), vec3(_3440, _3441, _3442)));
                        float _3450 = dot(vec3(_890, _893, _896), vec3(_3420, _3421, _3422));
                        float _4804 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                        float _3453 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
                        float _3454 = dot(vec3(_890, _893, _896), vec3(_3446 * _3440, _3446 * _3441, _3446 * _3442));
                        float _4815 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3457 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
                        float _3461 = ((_3457 * _3457) * (_3439 + (-1.0))) + 1.0;
                        float _3462 = _3398 * _3438;
                        float _3463 = _3462 * _3462;
                        float _3466 = ((1.0 - _3463) * _3388) + _3463;
                        float _4826 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3467 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                        float _3468 = 1.0 - _3438;
                        float _3478 = (0.5 / (((_3467 * ((_3453 * _3468) + _3438)) + 9.9999999392252902907785028219223e-09) + (((_3467 * _3468) + _3438) * _3453))) * _3467;
                        float _4837 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3489 = (((_3439 * 3.1415927410125732421875) * (isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0)))) / ((_3461 * _3461) * ((_3405 * 2.1991131305694580078125) + 3.141590118408203125))) * _3394;
                        _3247 = (_3409 * _3357.x) + _3315;
                        _3248 = (_3409 * _3357.y) + _3316;
                        _3249 = (_3409 * _3357.z) + _3317;
                        _3244 = (_3489 * _3374.x) + _3312;
                        _3245 = (_3489 * _3374.y) + _3313;
                        _3246 = (_3489 * _3374.z) + _3314;
                        if (_3319 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3312 = _3244;
                            _3313 = _3245;
                            _3314 = _3246;
                            _3315 = _3247;
                            _3316 = _3248;
                            _3317 = _3249;
                            _3318 = _3319;
                        }
                    }
                    frontier_phi_66_pred = _3249;
                    frontier_phi_66_pred_1 = _3248;
                    frontier_phi_66_pred_2 = _3247;
                    frontier_phi_66_pred_3 = _3246;
                    frontier_phi_66_pred_4 = _3245;
                    frontier_phi_66_pred_5 = _3244;
                }
                _3055 = frontier_phi_66_pred;
                _3053 = frontier_phi_66_pred_1;
                _3051 = frontier_phi_66_pred_2;
                _3049 = frontier_phi_66_pred_3;
                _3047 = frontier_phi_66_pred_4;
                _3045 = frontier_phi_66_pred_5;
                uint _3195 = _3194 + 1u;
                if (_3195 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3188 = _3045;
                    _3189 = _3047;
                    _3190 = _3049;
                    _3191 = _3051;
                    _3192 = _3053;
                    _3193 = _3055;
                    _3194 = _3195;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3044 = _3045;
            _3046 = _3047;
            _3048 = _3049;
            _3050 = _3051;
            _3052 = _3053;
            _3054 = _3055;
        }
        uvec4 _3058 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3059 = _3058.z;
        uint _3061 = (_3059 >> 8u) & 15u;
        float _3156;
        float _3158;
        float _3160;
        float _3162;
        float _3164;
        float _3166;
        if (((4294967295u << _3061) & _2964) == 0u)
        {
            _3156 = _3044;
            _3158 = _3046;
            _3160 = _3048;
            _3162 = _3050;
            _3164 = _3052;
            _3166 = _3054;
        }
        else
        {
            float _3181 = inversesqrt(dot(vec3(_2023, _2024, _2025), vec3(_2023, _2024, _2025)));
            float _3182 = _3181 * _2023;
            float _3183 = _3181 * _2024;
            float _3184 = _3181 * _2025;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3061 < ((_3059 >> 12u) & 15u))
            {
                float _3157;
                float _3159;
                float _3161;
                float _3163;
                float _3165;
                float _3167;
                float _3295 = _3044;
                float _3296 = _3046;
                float _3297 = _3048;
                float _3298 = _3050;
                float _3299 = _3052;
                float _3300 = _3054;
                uint _3301 = _3061;
                uint _3310;
                bool _3311;
                for (;;)
                {
                    _3310 = texelFetch(g_lightClassification, int((((_2958 << 5u) + (_2944 << 9u)) + (_3301 << 2u)) >> 2u)).x;
                    _3311 = _3310 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3311)
                    {
                        frontier_phi_72_pred = _3300;
                        frontier_phi_72_pred_1 = _3299;
                        frontier_phi_72_pred_2 = _3298;
                        frontier_phi_72_pred_3 = _3297;
                        frontier_phi_72_pred_4 = _3296;
                        frontier_phi_72_pred_5 = _3295;
                    }
                    else
                    {
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3498;
                        float _3499;
                        float _3788;
                        float _3789;
                        float _3790;
                        float _3791;
                        float _3792;
                        float _3793;
                        float _3507 = _3295;
                        float _3508 = _3296;
                        float _3509 = _3297;
                        float _3510 = _3298;
                        float _3511 = _3299;
                        float _3512 = _3300;
                        uint _3513 = _3310;
                        uint _3514;
                        vec4 _3539;
                        float _3540;
                        vec4 _3555;
                        vec3 _3567;
                        vec4 _3582;
                        vec4 _3598;
                        float _3644;
                        bool _3645;
                        for (;;)
                        {
                            uint _3524 = ((_3301 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3513));
                            _3514 = (_3513 + 4294967295u) & _3513;
                            uint _3526 = _3524 * 40u;
                            _3539 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3526)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 3u)).x));
                            _3540 = _3539.w;
                            uint _3542 = (_3524 * 40u) + 4u;
                            _3555 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 3u)).x));
                            uint _3557 = (_3524 * 40u) + 8u;
                            _3567 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x));
                            uint _3569 = (_3524 * 40u) + 16u;
                            _3582 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 3u)).x));
                            uint _3585 = (_3524 * 40u) + 20u;
                            _3598 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3585)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3585 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3585 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3585 + 3u)).x));
                            uint _3600 = (_3524 * 40u) + 24u;
                            vec4 _3613 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3600)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 3u)).x));
                            uint _3619 = (_3524 * 40u) + 28u;
                            vec4 _3632 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3619)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 3u)).x));
                            _3644 = fma(_2025, _3632.z, fma(_2024, _3632.y, _3632.x * _2023)) + _3632.w;
                            _3645 = !((fma(_2025, _3613.z, fma(_2024, _3613.y, _3613.x * _2023)) + _3613.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3645)
                            {
                                float _3672 = _3539.x - _2023;
                                float _3673 = _3539.y - _2024;
                                float _3674 = _3539.z - _2025;
                                float _3675 = dot(vec3(_3672, _3673, _3674), vec3(_3672, _3673, _3674));
                                float _3678 = inversesqrt(_3675);
                                float _3679 = _3678 * _3672;
                                float _3680 = _3678 * _3673;
                                float _3681 = _3678 * _3674;
                                float _3685 = 1.0 - (_3675 / (_3540 * _3540));
                                float _4848 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                                float _3686 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
                                float _3690 = sqrt(_3675) * _3555.w;
                                float _3692 = 1.39999997615814208984375 / (_3690 + 1.39999997615814208984375);
                                float _3693 = _3692 * _3692;
                                float _3696 = ((1.0 - _3693) * dot(vec3(_3679, _3680, _3681), vec3(_890, _893, _896))) + _3693;
                                float _3699 = _3690 * _3690;
                                float _3703 = (fma(_2025, _3582.z, fma(_2024, _3582.y, _3582.x * _2023)) + _3582.w) / _3644;
                                float _3704 = (fma(_2025, _3598.z, fma(_2024, _3598.y, _3598.x * _2023)) + _3598.w) / _3644;
                                float _3708 = 1.0 - dot(vec2(_3703, _3704), vec2(_3703, _3704));
                                float _4864 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                                float _3709 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                                float _3710 = _3709 * (((isnan(0.0) ? _3696 : (isnan(_3696) ? 0.0 : max(_3696, 0.0))) * _3686) / ((_3699 * 0.699999988079071044921875) + 1.0));
                                float _3722 = exp2(log2(1.0 / ((_3699 * 3.5) + 5.0)) * 0.25);
                                float _3723 = 1.0 - _965;
                                float _3730 = sqrt(1.0 - ((1.0 - (_3723 * _3723)) * (1.0 - (_3722 * _3722))));
                                float _3731 = _3730 * _3730;
                                float _3732 = _3731 * _3731;
                                float _3733 = _3679 - _3182;
                                float _3734 = _3680 - _3183;
                                float _3735 = _3681 - _3184;
                                float _3739 = inversesqrt(dot(vec3(_3733, _3734, _3735), vec3(_3733, _3734, _3735)));
                                float _3743 = dot(vec3(_890, _893, _896), vec3((-0.0) - _3182, (-0.0) - _3183, (-0.0) - _3184));
                                float _4875 = isnan(0.0) ? _3743 : (isnan(_3743) ? 0.0 : max(_3743, 0.0));
                                float _3746 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                                float _3747 = dot(vec3(_890, _893, _896), vec3(_3739 * _3733, _3739 * _3734, _3739 * _3735));
                                float _4886 = isnan(0.0) ? _3747 : (isnan(_3747) ? 0.0 : max(_3747, 0.0));
                                float _3750 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                                float _3754 = ((_3750 * _3750) * (_3732 + (-1.0))) + 1.0;
                                float _3755 = _3692 * _3731;
                                float _3756 = _3755 * _3755;
                                float _3762 = ((1.0 - _3756) * dot(vec3(_890, _893, _896), vec3(_3679, _3680, _3681))) + _3756;
                                float _4897 = isnan(0.0) ? _3762 : (isnan(_3762) ? 0.0 : max(_3762, 0.0));
                                float _3763 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
                                float _3764 = 1.0 - _3731;
                                float _3774 = (0.5 / (((_3763 * ((_3746 * _3764) + _3731)) + 9.9999999392252902907785028219223e-09) + (((_3763 * _3764) + _3731) * _3746))) * _3763;
                                float _4908 = isnan(0.0) ? _3774 : (isnan(_3774) ? 0.0 : max(_3774, 0.0));
                                float _3784 = (_3709 * _3686) * (((_3732 * 3.1415927410125732421875) * (isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0)))) / ((_3754 * _3754) * ((_3699 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3710 * _3555.y;
                                frontier_phi_78_pred_1 = _3710 * _3555.x;
                                frontier_phi_78_pred_2 = _3784 * _3567.z;
                                frontier_phi_78_pred_3 = _3784 * _3567.y;
                                frontier_phi_78_pred_4 = _3784 * _3567.x;
                                frontier_phi_78_pred_5 = _3710 * _3555.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3792 = frontier_phi_78_pred;
                            _3791 = frontier_phi_78_pred_1;
                            _3790 = frontier_phi_78_pred_2;
                            _3789 = frontier_phi_78_pred_3;
                            _3788 = frontier_phi_78_pred_4;
                            _3793 = frontier_phi_78_pred_5;
                            _3497 = _3791 + _3510;
                            _3498 = _3792 + _3511;
                            _3499 = _3793 + _3512;
                            _3494 = _3788 + _3507;
                            _3495 = _3789 + _3508;
                            _3496 = _3790 + _3509;
                            if (_3514 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3507 = _3494;
                                _3508 = _3495;
                                _3509 = _3496;
                                _3510 = _3497;
                                _3511 = _3498;
                                _3512 = _3499;
                                _3513 = _3514;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3499;
                        frontier_phi_72_pred_1 = _3498;
                        frontier_phi_72_pred_2 = _3497;
                        frontier_phi_72_pred_3 = _3496;
                        frontier_phi_72_pred_4 = _3495;
                        frontier_phi_72_pred_5 = _3494;
                    }
                    _3167 = frontier_phi_72_pred;
                    _3165 = frontier_phi_72_pred_1;
                    _3163 = frontier_phi_72_pred_2;
                    _3161 = frontier_phi_72_pred_3;
                    _3159 = frontier_phi_72_pred_4;
                    _3157 = frontier_phi_72_pred_5;
                    uint _3302 = _3301 + 1u;
                    if (_3302 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3295 = _3157;
                        _3296 = _3159;
                        _3297 = _3161;
                        _3298 = _3163;
                        _3299 = _3165;
                        _3300 = _3167;
                        _3301 = _3302;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3167;
                frontier_phi_60_61_ladder_1 = _3165;
                frontier_phi_60_61_ladder_2 = _3161;
                frontier_phi_60_61_ladder_3 = _3159;
                frontier_phi_60_61_ladder_4 = _3157;
                frontier_phi_60_61_ladder_5 = _3163;
            }
            else
            {
                frontier_phi_60_61_ladder = _3054;
                frontier_phi_60_61_ladder_1 = _3052;
                frontier_phi_60_61_ladder_2 = _3048;
                frontier_phi_60_61_ladder_3 = _3046;
                frontier_phi_60_61_ladder_4 = _3044;
                frontier_phi_60_61_ladder_5 = _3050;
            }
            _3156 = frontier_phi_60_61_ladder_4;
            _3158 = frontier_phi_60_61_ladder_3;
            _3160 = frontier_phi_60_61_ladder_2;
            _3162 = frontier_phi_60_61_ladder_5;
            _3164 = frontier_phi_60_61_ladder_1;
            _3166 = frontier_phi_60_61_ladder;
        }
        float _3171 = isnan(1.0) ? _949 : (isnan(_949) ? 1.0 : min(_949, 1.0));
        _2977 = (_3171 * _3162) + _2489;
        _2979 = (_3171 * _3164) + _2491;
        _2981 = (_3171 * _3166) + _2493;
        _2983 = ((_3156 * _933) * _3171) + _2827;
        _2985 = ((_3158 * _935) * _3171) + _2829;
        _2987 = ((_3160 * _936) * _3171) + _2831;
    }
    else
    {
        _2977 = _2489;
        _2979 = _2491;
        _2981 = _2493;
        _2983 = _2827;
        _2985 = _2829;
        _2987 = _2831;
    }
    float _4924 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _4935 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _4946 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    uint _3007 = _253 + 6u;
    float _3015 = _871 / cbSceneParam._m0[86u].x;
    float _3016 = _872 / cbSceneParam._m0[86u].y;
    vec4 _3030 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3015, _3016, (log2((isnan(cbSceneParam._m0[77u].w) ? _806 : (isnan(_806) ? cbSceneParam._m0[77u].w : min(_806, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3032 = _3030.x;
    float _3033 = _3030.y;
    float _3034 = _3030.z;
    float _3035 = _3030.w;
    float _3106;
    float _3108;
    float _3110;
    float _3112;
    if (_806 > cbSceneParam._m0[78u].w)
    {
        float _3069 = isnan(_806) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _806 : min(cbSceneParam._m0[80u].w, _806));
        float _3070 = _3069 / _806;
        float _3081 = _3070 * _856;
        float _3082 = _857 * _3070;
        float _3083 = (-0.0) - _3082;
        float _3084 = _3070 * _858;
        float _3086 = (cbSceneParam._m0[77u].w * _3083) / _3069;
        float _3087 = _3086 + cbSceneParam._m0[79u].w;
        float _3088 = cbSceneParam._m0[79u].w - _3082;
        float _3094 = sqrt(((_3081 * _3081) + (_3082 * _3082)) + (_3084 * _3084));
        float _3097 = (1.0 - (cbSceneParam._m0[77u].w / _3069)) * _3094;
        float _3102 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3104 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3257;
        if (abs((_3083 - _3086) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3257 = ((((_3087 > 0.0) ? exp2(_3102 * _3087) : (2.0 - exp2(_3104 * _3087))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3097;
        }
        else
        {
            float _3217 = 1.0 / cbSceneParam._m0[80u].x;
            float _3218 = isnan(_3088) ? _3087 : (isnan(_3087) ? _3088 : max(_3087, _3088));
            float _3219 = isnan(_3088) ? _3087 : (isnan(_3087) ? _3088 : min(_3087, _3088));
            float _3228 = isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : min(_3218, 0.0));
            float _3229 = isnan(0.0) ? _3219 : (isnan(_3219) ? 0.0 : min(_3219, 0.0));
            _3257 = ((abs(_3094 / _3083) * cbSceneParam._m0[80u].y) * ((((_3228 - _3229) * 2.0) - ((exp2(_3102 * (isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : max(_3218, 0.0)))) - exp2(_3102 * (isnan(0.0) ? _3219 : (isnan(_3219) ? 0.0 : max(_3219, 0.0))))) * _3217)) - ((exp2(_3104 * _3228) - exp2(_3104 * _3229)) * _3217))) + (_3097 * cbSceneParam._m0[80u].z);
        }
        vec4 _3259 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3015, _3016, 1.0), 0.0);
        float _3268 = exp2((_3257 * (-1.44269502162933349609375)) * (1.0 - _3259.w));
        float _3269 = log2(_3268);
        float _3285 = log2(_3035);
        _3106 = (exp2(_3285 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3269 * cbSceneParam._m0[78u].x)) * _3259.x) / cbSceneParam._m0[78u].x)) + _3032;
        _3108 = (exp2(_3285 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3269 * cbSceneParam._m0[78u].y)) * _3259.y) / cbSceneParam._m0[78u].y)) + _3033;
        _3110 = (exp2(_3285 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3269 * cbSceneParam._m0[78u].z)) * _3259.z) / cbSceneParam._m0[78u].z)) + _3034;
        _3112 = _3268 * _3035;
    }
    else
    {
        _3106 = _3032;
        _3108 = _3033;
        _3110 = _3034;
        _3112 = _3035;
    }
    float _3124 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3125 = _3124 == 3.0;
    float _3126 = log2(_3112);
    float _3133 = exp2(_3126 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0))) * (_2977 + ((isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0))) * _949))) + ((_2983 + ((isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0))) * _1757)) * cbPerFrame._m0[3u].x));
    float _3134 = exp2(_3126 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0))) * (_2979 + ((isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0))) * _949))) + ((_2985 + ((isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0))) * _1757)) * cbPerFrame._m0[3u].x));
    float _3135 = exp2(_3126 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (_2981 + ((isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))) * _949))) + ((_2987 + ((isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0))) * _1757)) * cbPerFrame._m0[3u].x));
    float _3144 = (_3124 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3144 * (_3125 ? _3133 : (_3133 + (cbSceneParam._m0[72u].w * _3106)));
    SV_Target.y = _3144 * (_3125 ? _3134 : (_3134 + (cbSceneParam._m0[72u].w * _3108)));
    SV_Target.z = _3144 * (_3125 ? _3135 : (_3135 + (cbSceneParam._m0[72u].w * _3110)));
    SV_Target.w = cbInstanceData._m0[_3007].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3007].w;
}


