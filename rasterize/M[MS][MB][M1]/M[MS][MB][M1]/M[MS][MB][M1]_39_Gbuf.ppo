#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _165 = uint(roundEven(NORMAL.w)) * 13u;
    uint _171 = _165 + 1u;
    uint _175 = _165 + 2u;
    float _184 = sqrt(((cbInstanceData._m0[_171].x * cbInstanceData._m0[_171].x) + (cbInstanceData._m0[_165].x * cbInstanceData._m0[_165].x)) + (cbInstanceData._m0[_175].x * cbInstanceData._m0[_175].x));
    float _185 = _184 * TEXCOORD.z;
    float _186 = _184 * TEXCOORD.w;
    vec4 _205 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _211 = _205.x * cbMtdParam._m0[9u].x;
    float _212 = _205.y * cbMtdParam._m0[9u].y;
    float _213 = _205.z * cbMtdParam._m0[9u].z;
    vec4 _232 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _185) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _186) + cbTextureTilingScale._m0[14u].w));
    vec4 _252 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _256 = _252.z;
    float _261 = (_252.x * 2.0) + (-1.0);
    float _263 = (_252.y * 2.0) + (-1.0);
    float _264 = dot(vec2(_261, _263), vec2(_261, _263));
    float _483 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _270 = sqrt(1.0 - (isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0))));
    vec4 _287 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _185) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _186) + cbTextureTilingScale._m0[11u].w));
    float _289 = _287.x;
    float _290 = 1.0 - _289;
    float _306 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_289 - _290) * cbMtdParam._m0[24u].z) + _290) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _494 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    float _307 = isnan(1.0) ? _494 : (isnan(_494) ? 1.0 : min(_494, 1.0));
    float _314 = (_307 * ((_232.x * cbMtdParam._m0[18u].x) - _211)) + _211;
    float _315 = (_307 * ((_232.y * cbMtdParam._m0[18u].y) - _212)) + _212;
    float _316 = (_307 * ((_232.z * cbMtdParam._m0[18u].z) - _213)) + _213;
    vec4 _329 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _331 = _329.x;
    float _333 = _331 - (_331 * _307);
    vec4 _346 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _185) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _186) + cbTextureTilingScale._m0[15u].w));
    float _353 = (_346.x * 2.0) + (-1.0);
    float _354 = (_346.y * 2.0) + (-1.0);
    float _355 = dot(vec2(_353, _354), vec2(_353, _354));
    float _505 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _363 = (_307 * (_346.z - _256)) + _256;
    float _375 = (((_353 - _261) + (cbMtdParam._m0[21u].x * _261)) * _307) + _261;
    float _376 = (((_354 - _263) + (cbMtdParam._m0[21u].x * _263)) * _307) + _263;
    float _377 = (_307 * (sqrt(1.0 - (isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0)))) - _270)) + _270;
    float _382 = cbMtdParam._m0[22u].x + _252.w;
    float _385 = fma(_377, _152 * NORMAL.x, fma(_376, _159 * TANGENT.x, (_145 * _137) * _375));
    float _388 = fma(_377, _152 * NORMAL.y, fma(_376, _159 * TANGENT.y, (_145 * _138) * _375));
    float _391 = fma(_377, _152 * NORMAL.z, fma(_376, _159 * TANGENT.z, (_145 * _139) * _375));
    float _395 = inversesqrt(dot(vec3(_385, _388, _391), vec3(_385, _388, _391)));
    float _516 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _527 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _538 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _549 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _560 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _571 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    uint _415 = (_165 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _421 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0)))) * cbInstanceData._m0[_415].x;
    float _422 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0)))) * cbInstanceData._m0[_415].y;
    float _423 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0)))) * cbInstanceData._m0[_415].z;
    float _582 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _593 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _604 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    uint _428 = _165 + 6u;
    bool _457 = cbMtdParam._m0[1u].z != 0.0;
    float _458 = _457 ? cbInstanceData._m0[_428].w : 0.0;
    SV_Target.x = ((_385 * 0.5) * _395) + 0.500488758087158203125;
    SV_Target.y = ((_388 * 0.5) * _395) + 0.500488758087158203125;
    SV_Target.z = ((_391 * 0.5) * _395) + 0.500488758087158203125;
    SV_Target.w = _458;
    SV_Target_1.x = isnan(1.0) ? _571 : (isnan(_571) ? 1.0 : min(_571, 1.0));
    SV_Target_1.y = isnan(1.0) ? _516 : (isnan(_516) ? 1.0 : min(_516, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _457 ? cbInstanceData._m0[_428].w : ((isnan(1.0) ? _527 : (isnan(_527) ? 1.0 : min(_527, 1.0))) * TEXCOORD_5.w);
    SV_Target_2.x = isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0));
    SV_Target_2.y = isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0));
    SV_Target_2.z = isnan(1.0) ? _604 : (isnan(_604) ? 1.0 : min(_604, 1.0));
    SV_Target_2.w = _457 ? cbInstanceData._m0[_428].w : (float(floatBitsToUint(cbInstanceData._m0[_165 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _458;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _458;
}


