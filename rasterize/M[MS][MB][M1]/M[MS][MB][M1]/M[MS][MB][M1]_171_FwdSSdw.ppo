#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1289;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _259 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3640 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _3651 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _3662 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    uint _270 = uint(roundEven(NORMAL.w)) * 13u;
    uint _275 = _270 + 1u;
    uint _279 = _270 + 2u;
    float _288 = sqrt(((cbInstanceData._m0[_275].x * cbInstanceData._m0[_275].x) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x)) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x));
    float _289 = _288 * TEXCOORD.z;
    float _290 = _288 * TEXCOORD.w;
    vec4 _303 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _289) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _290) + cbTextureTilingScale._m0[13u].w));
    vec4 _327 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _332 = _327.x * cbMtdParam._m0[11u].x;
    float _333 = _327.y * cbMtdParam._m0[11u].y;
    float _334 = _327.z * cbMtdParam._m0[11u].z;
    vec4 _353 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _289) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _290) + cbTextureTilingScale._m0[5u].w));
    vec4 _390 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _392 = _390.x;
    float _404 = dot(vec4(_392, _390.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _421 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_392 - _404) * cbMtdParam._m0[24u].y) + _404) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3673 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0));
    float _429 = (_422 * ((_353.x * cbMtdParam._m0[12u].x) - _332)) + _332;
    float _430 = (_422 * ((_353.y * cbMtdParam._m0[12u].y) - _333)) + _333;
    float _431 = (_422 * ((_353.z * cbMtdParam._m0[12u].z) - _334)) + _334;
    vec4 _448 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _289) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _290) + cbTextureTilingScale._m0[3u].w));
    vec4 _468 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _470 = _468.x;
    float _480 = dot(vec4(_470, _468.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _494 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_470 - _480) * cbMtdParam._m0[24u].y) + _480) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3684 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _495 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
    float _502 = (_495 * ((_448.x * cbMtdParam._m0[13u].x) - _429)) + _429;
    float _503 = (_495 * ((_448.y * cbMtdParam._m0[13u].y) - _430)) + _430;
    float _504 = (_495 * ((_448.z * cbMtdParam._m0[13u].z) - _431)) + _431;
    float _508 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _303.x) * _502;
    float _511 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _303.y) * _503;
    float _514 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _303.z) * _504;
    float _521 = ((_502 - _508) * (isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0)))) + _508;
    float _522 = ((_503 - _511) * (isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0)))) + _511;
    float _523 = ((_504 - _514) * (isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0)))) + _514;
    vec4 _535 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _289) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _290) + cbTextureTilingScale._m0[20u].w));
    vec4 _558 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _289) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _290) + cbTextureTilingScale._m0[4u].w));
    vec4 _575 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _577 = _575.x;
    float _578 = _575.y;
    float _579 = _575.z;
    float _586 = ((_558.x - _577) * _422) + _577;
    float _587 = ((_558.y - _578) * _422) + _578;
    float _588 = ((_558.z - _579) * _422) + _579;
    vec4 _600 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _289) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _290) + cbTextureTilingScale._m0[2u].w));
    float _613 = ((_600.z - _588) * _495) + _588;
    float _616 = ((((_600.x - _586) * _495) + _586) * 2.0) + (-1.0);
    float _617 = ((((_600.y - _587) * _495) + _587) * 2.0) + (-1.0);
    float _618 = dot(vec2(_616, _617), vec2(_616, _617));
    float _3695 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _623 = sqrt(1.0 - (isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0))));
    vec4 _643 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _655 = (_616 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_535.x * 2.0) + (-1.0)))) + (((_643.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _656 = (_617 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_535.y * 2.0) + (-1.0)))) + (((_643.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _668 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _682 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _684 = _682.x;
    float _702 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _289) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _290) + cbTextureTilingScale._m0[9u].w)).x - _684) * _422) + _684;
    float _720 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _289) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _290) + cbTextureTilingScale._m0[21u].w)).x - _702) * _495) + _702;
    float _724 = ((_668.x - _720) * cbMtdParam._m0[19u].z) + _720;
    float _729 = (((_535.z - _613) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _613;
    float _733 = ((_643.z - _729) * cbMtdParam._m0[19u].w) + _729;
    float _735 = cbMtdParam._m0[22u].x + _643.w;
    float _738 = fma(_623, _236 * NORMAL.x, fma(_656, _243 * TANGENT.x, (_229 * _221) * _655));
    float _741 = fma(_623, _236 * NORMAL.y, fma(_656, _243 * TANGENT.y, (_229 * _222) * _655));
    float _744 = fma(_623, _236 * NORMAL.z, fma(_656, _243 * TANGENT.z, (_229 * _223) * _655));
    float _748 = inversesqrt(dot(vec3(_738, _741, _744), vec3(_738, _741, _744)));
    float _749 = _748 * _738;
    float _750 = _748 * _741;
    float _751 = _748 * _744;
    float _3706 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _752 = isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0));
    float _3717 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _3728 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _3739 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _3750 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _3761 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _757 = isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0));
    float _771 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _812 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _822 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _812);
    float _823 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _812);
    float _824 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _812);
    float _828 = inversesqrt(dot(vec3(_822, _823, _824), vec3(_822, _823, _824)));
    float _829 = _822 * _828;
    float _830 = _823 * _828;
    float _831 = _824 * _828;
    float _837 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _838 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _856 = fma(_751, cbSceneParam._m0[5u].z, fma(_750, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _749));
    float _859 = fma(_751, cbSceneParam._m0[6u].z, fma(_750, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _749));
    float _862 = fma(_751, cbSceneParam._m0[7u].z, fma(_750, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _749));
    uint _876 = (_270 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _882 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0)))) * cbInstanceData._m0[_876].x;
    float _883 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0)))) * cbInstanceData._m0[_876].y;
    float _884 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0)))) * cbInstanceData._m0[_876].z;
    float _3772 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _885 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
    float _3783 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _886 = isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0));
    float _3794 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _887 = isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0));
    float _888 = 1.0 - _757;
    float _889 = _885 * _888;
    float _890 = _886 * _888;
    float _891 = _887 * _888;
    float _896 = (_885 + (-0.039999999105930328369140625)) * _757;
    float _897 = (_886 + (-0.039999999105930328369140625)) * _757;
    float _898 = (_887 + (-0.039999999105930328369140625)) * _757;
    float _899 = _896 + 0.039999999105930328369140625;
    float _901 = _897 + 0.039999999105930328369140625;
    float _902 = _898 + 0.039999999105930328369140625;
    vec4 _911 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _837, cbSceneParam._m0[86u].y * _838));
    float _915 = ((isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0))) * TEXCOORD_5.w) * _911.x;
    float _916 = dot(vec3(_749, _750, _751), vec3(_829, _830, _831));
    float _919 = _916 * 2.0;
    float _923 = (_919 * _749) - _829;
    float _924 = (_919 * _750) - _830;
    float _925 = (_919 * _751) - _831;
    float _929 = abs(dot(vec3(_829, _830, _831), vec3(_749, _750, _751)));
    float _3805 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _931 = sqrt(_752);
    float _944 = exp2((_931 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_931 * 3.0));
    float _950 = (1.0 - _944) * ((_931 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _951 = _944 * _931;
    float _979 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _983 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _987 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1288;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1013 = fma(_987, cbModelParam._m0[26u].z, fma(_983, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _979));
        float _1017 = fma(_987, cbModelParam._m0[27u].z, fma(_983, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _979));
        float _1021 = fma(_987, cbModelParam._m0[28u].z, fma(_983, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _979));
        float _1046 = _979 + _749;
        float _1047 = _983 + _750;
        float _1048 = _987 + _751;
        float _1058 = fma(_1048, cbModelParam._m0[26u].z, fma(_1047, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1046)) - _1013;
        float _1059 = fma(_1048, cbModelParam._m0[27u].z, fma(_1047, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1046)) - _1017;
        float _1060 = fma(_1048, cbModelParam._m0[28u].z, fma(_1047, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1046)) - _1021;
        float _1064 = inversesqrt(dot(vec3(_1058, _1059, _1060), vec3(_1058, _1059, _1060)));
        float _1077 = ((_1064 * _1058) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1013 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1078 = ((_1064 * _1059) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1017 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1079 = ((_1064 * _1060) / cbModelParam._m0[34u].z) + ((((((_1021 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1082 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1077, _1078, _1079), 0.0);
        vec4 _1089 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1077, _1078, _1079), 0.0);
        vec4 _1096 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1077, _1078, _1079), 0.0);
        vec4 _1103 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1077, _1078, _1079), 0.0);
        float _1116 = exp2((_1082.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1082.x + (-0.5));
        float _1118 = _1116 * (_1082.y + (-0.5));
        float _1119 = _1116 * (_1082.z + (-0.5));
        float _1126 = exp2((_1089.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1089.x + (-0.5));
        float _1128 = _1126 * (_1089.y + (-0.5));
        float _1129 = _1126 * (_1089.z + (-0.5));
        float _1136 = exp2((_1096.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1096.x + (-0.5));
        float _1138 = _1136 * (_1096.y + (-0.5));
        float _1139 = _1136 * (_1096.z + (-0.5));
        float _1146 = exp2((_1103.w + (-0.5)) * 20.0) * 2.0;
        float _1147 = _1146 * (_1103.x + (-0.5));
        float _1148 = _1146 * (_1103.y + (-0.5));
        float _1149 = _1146 * (_1103.z + (-0.5));
        float _1150 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1151 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1152 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1153 = _1117 * 0.5;
        float _1154 = _1127 * 0.5;
        float _1155 = _1137 * 0.5;
        float _1156 = dot(vec3(_1153, _1154, _1155), vec3(_1153, _1154, _1155));
        float _1161 = (_1156 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1156);
        float _1170 = (dot(vec3(_749, _750, _751), vec3(_1161 * _1153, _1161 * _1154, _1161 * _1155)) + 1.0) * 0.5;
        float _3831 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1180 = sqrt(((_1154 * _1154) + (_1153 * _1153)) + (_1155 * _1155)) / (_1150 + 9.9999997473787516355514526367188e-06);
        float _3842 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1181 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
        float _1182 = _1181 * 2.0;
        float _1186 = (1.0 - _1181) / (_1181 + 1.0);
        float _3853 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0));
        float _1196 = ((((1.0 - _1187) * (_1182 + 2.0)) * exp2(log2(isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0))) * (_1182 + 1.0))) + _1187) * _1150;
        float _1197 = _1118 * 0.5;
        float _1198 = _1128 * 0.5;
        float _1199 = _1138 * 0.5;
        float _1200 = dot(vec3(_1197, _1198, _1199), vec3(_1197, _1198, _1199));
        float _1205 = (_1200 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1200);
        float _1213 = (dot(vec3(_749, _750, _751), vec3(_1205 * _1197, _1205 * _1198, _1205 * _1199)) + 1.0) * 0.5;
        float _3864 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1222 = sqrt(((_1198 * _1198) + (_1197 * _1197)) + (_1199 * _1199)) / (_1151 + 9.9999997473787516355514526367188e-06);
        float _3875 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1223 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
        float _1224 = _1223 * 2.0;
        float _1228 = (1.0 - _1223) / (_1223 + 1.0);
        float _3886 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
        float _1238 = ((((1.0 - _1229) * (_1224 + 2.0)) * exp2(log2(isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0))) * (_1224 + 1.0))) + _1229) * _1151;
        float _1239 = _1119 * 0.5;
        float _1240 = _1129 * 0.5;
        float _1241 = _1139 * 0.5;
        float _1242 = dot(vec3(_1239, _1240, _1241), vec3(_1239, _1240, _1241));
        float _1247 = (_1242 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1242);
        float _1255 = (dot(vec3(_749, _750, _751), vec3(_1247 * _1239, _1247 * _1240, _1247 * _1241)) + 1.0) * 0.5;
        float _3897 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
        float _1264 = sqrt(((_1240 * _1240) + (_1239 * _1239)) + (_1241 * _1241)) / (_1152 + 9.9999997473787516355514526367188e-06);
        float _3908 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1265 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
        float _1266 = _1265 * 2.0;
        float _1270 = (1.0 - _1265) / (_1265 + 1.0);
        float _3919 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
        float _1280 = ((((1.0 - _1271) * (_1266 + 2.0)) * exp2(log2(isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0))) * (_1266 + 1.0))) + _1271) * _1152;
        _1288 = _1119;
        _1290 = _1118;
        _1291 = _1117;
        _1292 = _1129;
        _1293 = _1128;
        _1294 = _1127;
        _1295 = _1139;
        _1296 = _1138;
        _1297 = _1137;
        _1298 = _1152;
        _1299 = _1151;
        _1300 = _1150;
        _1301 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0)));
        _1302 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0)));
        _1303 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0)));
    }
    else
    {
        _1288 = _1289;
        _1290 = _1289;
        _1291 = _1289;
        _1292 = _1289;
        _1293 = _1289;
        _1294 = _1289;
        _1295 = _1289;
        _1296 = _1289;
        _1297 = _1289;
        _1298 = _1289;
        _1299 = _1289;
        _1300 = _1289;
        _1301 = 0.0;
        _1302 = 0.0;
        _1303 = 0.0;
    }
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1327 = fma(_987, cbModelParam._m0[30u].z, fma(_983, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _979));
        float _1331 = fma(_987, cbModelParam._m0[31u].z, fma(_983, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _979));
        float _1335 = fma(_987, cbModelParam._m0[32u].z, fma(_983, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _979));
        float _1358 = _979 + _749;
        float _1359 = _983 + _750;
        float _1360 = _987 + _751;
        float _1370 = fma(_1360, cbModelParam._m0[30u].z, fma(_1359, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1358)) - _1327;
        float _1371 = fma(_1360, cbModelParam._m0[31u].z, fma(_1359, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1358)) - _1331;
        float _1372 = fma(_1360, cbModelParam._m0[32u].z, fma(_1359, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1358)) - _1335;
        float _1376 = inversesqrt(dot(vec3(_1370, _1371, _1372), vec3(_1370, _1371, _1372)));
        float _1389 = ((_1376 * _1370) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1327 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1390 = ((_1376 * _1371) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1331 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1391 = ((_1376 * _1372) / cbModelParam._m0[35u].z) + ((((((_1335 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        vec4 _1414 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1389, _1390, _1391), 0.0);
        float _1426 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1393.x + (-0.5));
        float _1428 = _1426 * (_1393.y + (-0.5));
        float _1429 = _1426 * (_1393.z + (-0.5));
        float _1436 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1400.x + (-0.5));
        float _1438 = _1436 * (_1400.y + (-0.5));
        float _1439 = _1436 * (_1400.z + (-0.5));
        float _1446 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1447 = _1446 * (_1407.x + (-0.5));
        float _1448 = _1446 * (_1407.y + (-0.5));
        float _1449 = _1446 * (_1407.z + (-0.5));
        float _1456 = exp2((_1414.w + (-0.5)) * 20.0) * 2.0;
        float _1457 = _1456 * (_1414.x + (-0.5));
        float _1458 = _1456 * (_1414.y + (-0.5));
        float _1459 = _1456 * (_1414.z + (-0.5));
        float _1460 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1461 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1462 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1463 = _1427 * 0.5;
        float _1464 = _1437 * 0.5;
        float _1465 = _1447 * 0.5;
        float _1466 = dot(vec3(_1463, _1464, _1465), vec3(_1463, _1464, _1465));
        float _1471 = (_1466 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1466);
        float _1479 = (dot(vec3(_749, _750, _751), vec3(_1471 * _1463, _1471 * _1464, _1471 * _1465)) + 1.0) * 0.5;
        float _3960 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1488 = sqrt(((_1464 * _1464) + (_1463 * _1463)) + (_1465 * _1465)) / (_1460 + 9.9999997473787516355514526367188e-06);
        float _3971 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1489 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
        float _1490 = _1489 * 2.0;
        float _1494 = (1.0 - _1489) / (_1489 + 1.0);
        float _3982 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
        float _1504 = ((((1.0 - _1495) * (_1490 + 2.0)) * exp2(log2(isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0))) * (_1490 + 1.0))) + _1495) * _1460;
        float _1505 = _1428 * 0.5;
        float _1506 = _1438 * 0.5;
        float _1507 = _1448 * 0.5;
        float _1508 = dot(vec3(_1505, _1506, _1507), vec3(_1505, _1506, _1507));
        float _1513 = (_1508 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1508);
        float _1521 = (dot(vec3(_749, _750, _751), vec3(_1513 * _1505, _1513 * _1506, _1513 * _1507)) + 1.0) * 0.5;
        float _3993 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1530 = sqrt(((_1506 * _1506) + (_1505 * _1505)) + (_1507 * _1507)) / (_1461 + 9.9999997473787516355514526367188e-06);
        float _4004 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
        float _1532 = _1531 * 2.0;
        float _1536 = (1.0 - _1531) / (_1531 + 1.0);
        float _4015 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
        float _1546 = ((((1.0 - _1537) * (_1532 + 2.0)) * exp2(log2(isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0))) * (_1532 + 1.0))) + _1537) * _1461;
        float _1547 = _1429 * 0.5;
        float _1548 = _1439 * 0.5;
        float _1549 = _1449 * 0.5;
        float _1550 = dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549));
        float _1555 = (_1550 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1550);
        float _1563 = (dot(vec3(_749, _750, _751), vec3(_1555 * _1547, _1555 * _1548, _1555 * _1549)) + 1.0) * 0.5;
        float _4026 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1572 = sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549)) / (_1462 + 9.9999997473787516355514526367188e-06);
        float _4037 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
        float _1574 = _1573 * 2.0;
        float _1578 = (1.0 - _1573) / (_1573 + 1.0);
        float _4048 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
        float _1588 = ((((1.0 - _1579) * (_1574 + 2.0)) * exp2(log2(isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0))) * (_1574 + 1.0))) + _1579) * _1462;
        _1596 = _1429;
        _1597 = _1428;
        _1598 = _1427;
        _1599 = _1439;
        _1600 = _1438;
        _1601 = _1437;
        _1602 = _1449;
        _1603 = _1448;
        _1604 = _1447;
        _1605 = _1462;
        _1606 = _1461;
        _1607 = _1460;
        _1608 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0)));
        _1609 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)));
        _1610 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)));
    }
    else
    {
        _1596 = _1289;
        _1597 = _1289;
        _1598 = _1289;
        _1599 = _1289;
        _1600 = _1289;
        _1601 = _1289;
        _1602 = _1289;
        _1603 = _1289;
        _1604 = _1289;
        _1605 = _1289;
        _1606 = _1289;
        _1607 = _1289;
        _1608 = 0.0;
        _1609 = 0.0;
        _1610 = 0.0;
    }
    float _1620 = (cbModelParam._m0[1u].x * (_1608 - _1301)) + _1301;
    float _1621 = (cbModelParam._m0[1u].x * (_1609 - _1302)) + _1302;
    float _1622 = (cbModelParam._m0[1u].x * (_1610 - _1303)) + _1303;
    float _1643 = fma(_1622, cbSceneParam._m0[89u].z, fma(_1621, cbSceneParam._m0[89u].y, _1620 * cbSceneParam._m0[89u].x));
    float _1646 = fma(_1622, cbSceneParam._m0[90u].z, fma(_1621, cbSceneParam._m0[90u].y, _1620 * cbSceneParam._m0[90u].x));
    float _1649 = fma(_1622, cbSceneParam._m0[91u].z, fma(_1621, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1620));
    float _1664 = _923 * 0.5;
    float _1665 = _924 * 0.5;
    float _1666 = _925 * 0.5;
    float _1667 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1598, _1601, _1604, _1607));
    float _1670 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1597, _1600, _1603, _1606));
    float _1673 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1596, _1599, _1602, _1605));
    float _1707;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1680 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1288, _1292, _1295, _1298));
        float _1684 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1290, _1293, _1296, _1299));
        float _1688 = dot(vec4(_1664, _1665, _1666, 1.0), vec4(_1291, _1294, _1297, _1300));
        float _1695 = dot(vec4(cbModelParam._m0[39u]), vec4(_1664, _1665, _1666, 1.0));
        _1707 = dot(vec3(isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1695) ? 0.0 : (isnan(0.0) ? _1695 : max(0.0, _1695))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1707 = 1.0;
    }
    float _1718;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1709 = dot(vec4(cbModelParam._m0[40u]), vec4(_1664, _1665, _1666, 1.0));
        _1718 = dot(vec3(isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)), isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1709) ? 0.0 : (isnan(0.0) ? _1709 : max(0.0, _1709))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1718 = 1.0;
    }
    float _1722 = (_1718 * cbModelParam._m0[1u].x) + (_1707 * (1.0 - cbModelParam._m0[1u].x));
    float _1732 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _752);
    float _1733 = isnan(_1732) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1732 : min(cbModelParam._m0[25u].z, _1732));
    float _1815;
    float _1817;
    float _1819;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1782 = fma(_987, cbModelParam._m0[13u].z, fma(_983, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _979)) + cbModelParam._m0[13u].w;
        float _1786 = fma(_987, cbModelParam._m0[14u].z, fma(_983, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _979)) + cbModelParam._m0[14u].w;
        float _1790 = fma(_987, cbModelParam._m0[15u].z, fma(_983, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _979)) + cbModelParam._m0[15u].w;
        float _1793 = fma(_925, cbModelParam._m0[13u].z, fma(_924, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _923));
        float _1796 = fma(_925, cbModelParam._m0[14u].z, fma(_924, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _923));
        float _1799 = fma(_925, cbModelParam._m0[15u].z, fma(_924, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _923));
        float _1827;
        if (_1793 > 0.0)
        {
            _1827 = abs((1.0 - _1782) / _1793);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1782 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1827 = frontier_phi_14_12_ladder;
        }
        float _2051;
        if (_1796 > 0.0)
        {
            _2051 = abs((1.0 - _1786) / _1796);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1786 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2051 = frontier_phi_23_19_ladder;
        }
        float _2308;
        if (_1799 > 0.0)
        {
            _2308 = abs((1.0 - _1790) / _1799);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1790 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2308 = frontier_phi_35_30_ladder;
        }
        float _2310 = isnan(_2051) ? _1827 : (isnan(_1827) ? _2051 : min(_1827, _2051));
        float _2311 = isnan(_2308) ? _2310 : (isnan(_2310) ? _2308 : min(_2310, _2308));
        float _2315 = (_2311 * _1793) + _1782;
        float _2316 = (_2311 * _1796) + _1786;
        float _2317 = (_2311 * _1799) + _1790;
        float _2318 = _2311 * 9.9999997473787516355514526367188e-05;
        float _2320 = (-1.0) - _2318;
        float _2322 = _2318 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2317 > _2322) || ((_2317 < _2320) || ((_2316 > _2322) || ((_2316 < _2320) || ((_2315 < _2320) || (_2315 > _2322))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2445 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2317, cbModelParam._m0[9u].z, fma(_2316, cbModelParam._m0[9u].y, _2315 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2317, cbModelParam._m0[10u].z, fma(_2316, cbModelParam._m0[10u].y, _2315 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2317, cbModelParam._m0[11u].z, fma(_2316, cbModelParam._m0[11u].y, _2315 * cbModelParam._m0[11u].x))), _1733);
            frontier_phi_13_35_ladder = _2445.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2445.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2445.x * cbModelParam._m0[1u].y;
        }
        _1815 = frontier_phi_13_35_ladder_2;
        _1817 = frontier_phi_13_35_ladder_1;
        _1819 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1803 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_923, _924, _925), _1733);
        _1815 = _1803.x * cbModelParam._m0[1u].y;
        _1817 = _1803.y * cbModelParam._m0[1u].y;
        _1819 = _1803.z * cbModelParam._m0[1u].y;
    }
    float _1823 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _752);
    float _1824 = isnan(_1823) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1823 : min(cbModelParam._m0[25u].w, _1823));
    float _1914;
    float _1916;
    float _1918;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1878 = fma(_987, cbModelParam._m0[21u].z, fma(_983, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _979)) + cbModelParam._m0[21u].w;
        float _1882 = fma(_987, cbModelParam._m0[22u].z, fma(_983, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _979)) + cbModelParam._m0[22u].w;
        float _1886 = fma(_987, cbModelParam._m0[23u].z, fma(_983, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _979)) + cbModelParam._m0[23u].w;
        float _1889 = fma(_925, cbModelParam._m0[21u].z, fma(_924, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _923));
        float _1892 = fma(_925, cbModelParam._m0[22u].z, fma(_924, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _923));
        float _1895 = fma(_925, cbModelParam._m0[23u].z, fma(_924, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _923));
        float _2056;
        if (_1889 > 0.0)
        {
            _2056 = abs((1.0 - _1878) / _1889);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1889 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1878 + 1.0) / _1889);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2056 = frontier_phi_25_21_ladder;
        }
        float _2335;
        if (_1892 > 0.0)
        {
            _2335 = abs((1.0 - _1882) / _1892);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1882 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2335 = frontier_phi_37_32_ladder;
        }
        float _2548;
        if (_1895 > 0.0)
        {
            _2548 = abs((1.0 - _1886) / _1895);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1895 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1886 + 1.0) / _1895);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2548 = frontier_phi_46_43_ladder;
        }
        float _2550 = isnan(_2335) ? _2056 : (isnan(_2056) ? _2335 : min(_2056, _2335));
        float _2551 = isnan(_2548) ? _2550 : (isnan(_2550) ? _2548 : min(_2550, _2548));
        float _2555 = (_2551 * _1889) + _1878;
        float _2556 = (_2551 * _1892) + _1882;
        float _2557 = (_2551 * _1895) + _1886;
        float _2558 = _2551 * 9.9999997473787516355514526367188e-05;
        float _2559 = (-1.0) - _2558;
        float _2561 = _2558 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2557 > _2561) || ((_2557 < _2559) || ((_2556 > _2561) || ((_2556 < _2559) || ((_2555 < _2559) || (_2555 > _2561))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2756 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2557, cbModelParam._m0[17u].z, fma(_2556, cbModelParam._m0[17u].y, _2555 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2557, cbModelParam._m0[18u].z, fma(_2556, cbModelParam._m0[18u].y, _2555 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2557, cbModelParam._m0[19u].z, fma(_2556, cbModelParam._m0[19u].y, _2555 * cbModelParam._m0[19u].x))), _1824);
            frontier_phi_22_46_ladder = _2756.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2756.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2756.x * cbModelParam._m0[1u].z;
        }
        _1914 = frontier_phi_22_46_ladder_2;
        _1916 = frontier_phi_22_46_ladder_1;
        _1918 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1898 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_923, _924, _925), _1824);
        _1914 = _1898.x * cbModelParam._m0[1u].z;
        _1916 = _1898.y * cbModelParam._m0[1u].z;
        _1918 = _1898.z * cbModelParam._m0[1u].z;
    }
    float _1931 = (((_950 * _899) + _951) * _915) * ((cbModelParam._m0[1u].w * (_1914 - _1815)) + _1815);
    float _1933 = (((_950 * _901) + _951) * _915) * ((cbModelParam._m0[1u].w * (_1916 - _1817)) + _1817);
    float _1935 = (((_950 * _902) + _951) * _915) * ((cbModelParam._m0[1u].w * (_1918 - _1819)) + _1819);
    float _1938 = fma(_1935, cbSceneParam._m0[89u].z, fma(_1933, cbSceneParam._m0[89u].y, _1931 * cbSceneParam._m0[89u].x));
    float _1941 = fma(_1935, cbSceneParam._m0[90u].z, fma(_1933, cbSceneParam._m0[90u].y, _1931 * cbSceneParam._m0[90u].x));
    float _1944 = fma(_1935, cbSceneParam._m0[91u].z, fma(_1933, cbSceneParam._m0[91u].y, _1931 * cbSceneParam._m0[91u].x));
    vec4 _1952 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_837, _838));
    float _1954 = _1952.w;
    float _1966 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1954);
    float _1967 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1954);
    float _1968 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1954);
    uvec4 _1972 = floatBitsToUint(cbInstanceData._m0[_270 + 5u]);
    uint _1974 = _1972.x * 14u;
    uint _1975 = _1974 + 13u;
    float _1982 = _915 + (-1.0);
    float _1987 = (cbLight._m0[_1975].x * _1982) + 1.0;
    float _1988 = (cbLight._m0[_1975].y * _1982) + 1.0;
    float _1989 = (cbLight._m0[_1975].z * _1982) + 1.0;
    float _1990 = (cbLight._m0[_1975].w * _1982) + 1.0;
    uint _1991 = _1974 + 5u;
    float _1997 = isnan(1.0) ? _1988 : (isnan(_1988) ? 1.0 : min(_1988, 1.0));
    uint _2001 = _1974 + 4u;
    float _2010 = isnan(1.0) ? _1987 : (isnan(_1987) ? 1.0 : min(_1987, 1.0));
    uint _2014 = _1974 | 1u;
    float _2025 = dot(vec3(cbLight._m0[_1974].xyz), vec3(_749, _750, _751));
    float _2028 = dot(vec3(cbLight._m0[_2014].xyz), vec3(_749, _750, _751));
    float _4184 = isnan(0.0) ? _2025 : (isnan(_2025) ? 0.0 : max(_2025, 0.0));
    float _4195 = isnan(0.0) ? _2028 : (isnan(_2028) ? 0.0 : max(_2028, 0.0));
    float _2033 = (isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0))) * 0.3183098733425140380859375;
    float _2035 = (isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * 0.3183098733425140380859375;
    float _2042 = ((cbLight._m0[_1991].x * _1997) * _2035) + (((cbLight._m0[_2001].x * _1966) * _2010) * _2033);
    float _2043 = ((_1997 * cbLight._m0[_1991].y) * _2035) + (((cbLight._m0[_2001].y * _1967) * _2010) * _2033);
    float _2044 = ((_1997 * cbLight._m0[_1991].z) * _2035) + (((cbLight._m0[_2001].z * _1968) * _2010) * _2033);
    uvec4 _2048 = floatBitsToUint(cbLight._m0[_1974 + 12u]);
    bool _2050 = _2048.x == 0u;
    float _2061;
    float _2063;
    float _2065;
    if (_2050)
    {
        _2061 = _2042;
        _2063 = _2043;
        _2065 = _2044;
    }
    else
    {
        uint _2069 = _1974 + 6u;
        float _2085 = (dot(vec3(cbLight._m0[_1974 + 2u].xyz), vec3(_749, _750, _751)) * 0.5) + 0.5;
        float _2086 = _2085 * _2085;
        float _4206 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2087 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _2088 = isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0));
        _2061 = (((cbLight._m0[_2069].x * 0.3183098733425140380859375) * _2087) * _2088) + _2042;
        _2063 = (((cbLight._m0[_2069].y * 0.3183098733425140380859375) * _2087) * _2088) + _2043;
        _2065 = (((cbLight._m0[_2069].z * 0.3183098733425140380859375) * _2087) * _2088) + _2044;
    }
    bool _2068 = _2048.y == 0u;
    float _2106;
    float _2108;
    float _2110;
    if (_2068)
    {
        _2106 = _2061;
        _2108 = _2063;
        _2110 = _2065;
    }
    else
    {
        uint _2279 = _1974 + 7u;
        float _2295 = (dot(vec3(cbLight._m0[_1974 + 3u].xyz), vec3(_749, _750, _751)) * 0.5) + 0.5;
        float _2296 = _2295 * _2295;
        float _4222 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
        float _2297 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
        float _2298 = isnan(1.0) ? _1990 : (isnan(_1990) ? 1.0 : min(_1990, 1.0));
        _2106 = (((cbLight._m0[_2279].x * 0.3183098733425140380859375) * _2297) * _2298) + _2061;
        _2108 = (((cbLight._m0[_2279].y * 0.3183098733425140380859375) * _2297) * _2298) + _2063;
        _2110 = (((cbLight._m0[_2279].z * 0.3183098733425140380859375) * _2297) * _2298) + _2065;
    }
    uint _2113 = _1974 + 8u;
    float _2126 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1974].w)) * _752) * 0.949999988079071044921875);
    float _2127 = _2126 * _2126;
    float _2128 = cbLight._m0[_1974].x + _829;
    float _2129 = cbLight._m0[_1974].y + _830;
    float _2130 = cbLight._m0[_1974].z + _831;
    float _2134 = inversesqrt(dot(vec3(_2128, _2129, _2130), vec3(_2128, _2129, _2130)));
    float _2135 = _2134 * _2128;
    float _2136 = _2134 * _2129;
    float _2137 = _2134 * _2130;
    float _2138 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_1974].xyz));
    float _4238 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2141 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
    float _4249 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _2142 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
    float _2143 = dot(vec3(_749, _750, _751), vec3(_2135, _2136, _2137));
    float _4260 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
    float _2146 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
    float _2147 = dot(vec3(cbLight._m0[_1974].xyz), vec3(_2135, _2136, _2137));
    float _4271 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2151 = _2127 * _2127;
    float _2155 = ((_2146 * _2146) * (_2151 + (-1.0))) + 1.0;
    float _2163 = exp2(log2(1.0 - (isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0)))) * 5.0);
    float _2164 = 0.959999978542327880859375 - _896;
    float _2166 = 0.959999978542327880859375 - _897;
    float _2167 = 0.959999978542327880859375 - _898;
    float _2174 = 1.0 - _2127;
    float _2185 = (0.5 / (((_2142 * ((_2141 * _2174) + _2127)) + 9.9999999392252902907785028219223e-09) + (((_2142 * _2174) + _2127) * _2141))) * _2141;
    float _4282 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
    float _2187 = (isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * (_2151 / ((_2155 * _2155) * 3.141590118408203125));
    uint _2201 = _1974 + 9u;
    float _2212 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2014].w)) * _752) * 0.949999988079071044921875);
    float _2213 = _2212 * _2212;
    float _2214 = cbLight._m0[_2014].x + _829;
    float _2215 = cbLight._m0[_2014].y + _830;
    float _2216 = cbLight._m0[_2014].z + _831;
    float _2220 = inversesqrt(dot(vec3(_2214, _2215, _2216), vec3(_2214, _2215, _2216)));
    float _2221 = _2220 * _2214;
    float _2222 = _2220 * _2215;
    float _2223 = _2220 * _2216;
    float _2224 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2014].xyz));
    float _4293 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
    float _2227 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
    float _2228 = dot(vec3(_749, _750, _751), vec3(_2221, _2222, _2223));
    float _4304 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
    float _2231 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
    float _2232 = dot(vec3(cbLight._m0[_2014].xyz), vec3(_2221, _2222, _2223));
    float _4315 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _2236 = _2213 * _2213;
    float _2240 = ((_2231 * _2231) * (_2236 + (-1.0))) + 1.0;
    float _2247 = exp2(log2(1.0 - (isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0)))) * 5.0);
    float _2254 = 1.0 - _2213;
    float _2264 = (0.5 / (((_2142 * ((_2227 * _2254) + _2213)) + 9.9999999392252902907785028219223e-09) + (((_2142 * _2254) + _2213) * _2227))) * _2227;
    float _4326 = isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0));
    float _2266 = (isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0))) * (_2236 / ((_2240 * _2240) * 3.141590118408203125));
    float _2276 = (((((_2247 * _2164) + _899) * cbLight._m0[_2201].x) * _2266) * _1997) + ((((cbLight._m0[_2113].x * _1966) * ((_2163 * _2164) + _899)) * _2187) * _2010);
    float _2277 = (((((_2247 * _2166) + _901) * cbLight._m0[_2201].y) * _2266) * _1997) + ((((cbLight._m0[_2113].y * _1967) * ((_2163 * _2166) + _901)) * _2187) * _2010);
    float _2278 = (((((_2247 * _2167) + _902) * cbLight._m0[_2201].z) * _2266) * _1997) + ((((cbLight._m0[_2113].z * _1968) * ((_2163 * _2167) + _902)) * _2187) * _2010);
    float _2340;
    float _2342;
    float _2344;
    if (_2050)
    {
        _2340 = _2276;
        _2342 = _2277;
        _2344 = _2278;
    }
    else
    {
        uint _2346 = _1974 + 2u;
        uint _2350 = _1974 + 10u;
        float _2364 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2346].w)) * _752) * 0.949999988079071044921875);
        float _2365 = _2364 * _2364;
        float _2366 = cbLight._m0[_2346].x + _829;
        float _2367 = cbLight._m0[_2346].y + _830;
        float _2368 = cbLight._m0[_2346].z + _831;
        float _2372 = inversesqrt(dot(vec3(_2366, _2367, _2368), vec3(_2366, _2367, _2368)));
        float _2373 = _2372 * _2366;
        float _2374 = _2372 * _2367;
        float _2375 = _2372 * _2368;
        float _2376 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2346].xyz));
        float _4337 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
        float _2379 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _2380 = dot(vec3(_749, _750, _751), vec3(_2373, _2374, _2375));
        float _4348 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
        float _2383 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _2384 = dot(vec3(cbLight._m0[_2346].xyz), vec3(_2373, _2374, _2375));
        float _4359 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
        float _2388 = _2365 * _2365;
        float _2392 = ((_2383 * _2383) * (_2388 + (-1.0))) + 1.0;
        float _2399 = exp2(log2(1.0 - (isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0)))) * 5.0);
        float _2406 = 1.0 - _2365;
        float _2416 = (0.5 / (((_2142 * ((_2379 * _2406) + _2365)) + 9.9999999392252902907785028219223e-09) + (((_2142 * _2406) + _2365) * _2379))) * _2379;
        float _4370 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
        float _2418 = (isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0))) * (_2388 / ((_2392 * _2392) * 3.141590118408203125));
        float _2419 = isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0));
        _2340 = (((((_2399 * _2164) + _899) * cbLight._m0[_2350].x) * _2418) * _2419) + _2276;
        _2342 = (((((_2399 * _2166) + _901) * cbLight._m0[_2350].y) * _2418) * _2419) + _2277;
        _2344 = (((((_2399 * _2167) + _902) * cbLight._m0[_2350].z) * _2418) * _2419) + _2278;
    }
    float _2454;
    float _2456;
    float _2458;
    if (_2068)
    {
        _2454 = _2340;
        _2456 = _2342;
        _2458 = _2344;
    }
    else
    {
        uint _2465 = _1974 + 3u;
        uint _2469 = _1974 + 11u;
        float _2483 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2465].w)) * _752) * 0.949999988079071044921875);
        float _2484 = _2483 * _2483;
        float _2485 = cbLight._m0[_2465].x + _829;
        float _2486 = cbLight._m0[_2465].y + _830;
        float _2487 = cbLight._m0[_2465].z + _831;
        float _2491 = inversesqrt(dot(vec3(_2485, _2486, _2487), vec3(_2485, _2486, _2487)));
        float _2492 = _2491 * _2485;
        float _2493 = _2491 * _2486;
        float _2494 = _2491 * _2487;
        float _2495 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2465].xyz));
        float _4386 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
        float _2498 = isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0));
        float _2499 = dot(vec3(_749, _750, _751), vec3(_2492, _2493, _2494));
        float _4397 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
        float _2502 = isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0));
        float _2503 = dot(vec3(cbLight._m0[_2465].xyz), vec3(_2492, _2493, _2494));
        float _4408 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
        float _2507 = _2484 * _2484;
        float _2511 = ((_2502 * _2502) * (_2507 + (-1.0))) + 1.0;
        float _2518 = exp2(log2(1.0 - (isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0)))) * 5.0);
        float _2525 = 1.0 - _2484;
        float _2535 = (0.5 / (((_2142 * ((_2498 * _2525) + _2484)) + 9.9999999392252902907785028219223e-09) + (((_2142 * _2525) + _2484) * _2498))) * _2498;
        float _4419 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
        float _2537 = (isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0))) * (_2507 / ((_2511 * _2511) * 3.141590118408203125));
        float _2538 = isnan(1.0) ? _1990 : (isnan(_1990) ? 1.0 : min(_1990, 1.0));
        _2454 = (((((_2518 * _2164) + _899) * cbLight._m0[_2469].x) * _2537) * _2538) + _2340;
        _2456 = (((((_2518 * _2166) + _901) * cbLight._m0[_2469].y) * _2537) * _2538) + _2342;
        _2458 = (((((_2518 * _2167) + _902) * cbLight._m0[_2469].z) * _2537) * _2538) + _2344;
    }
    float _2673;
    float _2675;
    float _2677;
    float _2679;
    float _2681;
    float _2683;
    if (_1972.y == 0u)
    {
        float _2613 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2614 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2613;
        float _2615 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2613;
        float _2616 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2613;
        uvec4 _2628 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2629 = _2628.x;
        uint _2640 = uint((float(_2628.y) * floor(float(uint(cbSceneParam._m0[85u].y * _838) / _2629))) + floor(float(uint(cbSceneParam._m0[85u].x * _837) / _2629)));
        float _2650 = (log2(_2616 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2651 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        uint _2654 = uint(isnan(14.0) ? _2651 : (isnan(_2651) ? 14.0 : min(_2651, 14.0)));
        uvec4 _2659 = texelFetch(g_lightClusterGridBuffer, int(((_2654 << 2u) + (_2640 << 6u)) >> 2u));
        uint _2660 = _2659.x;
        uint _2661 = _2628.z;
        float _2761;
        float _2763;
        float _2765;
        float _2767;
        float _2769;
        float _2771;
        if (((((1u << ((_2661 >> 4u) & 15u)) + 4294967295u) & _2660) == 0u) || ((_2661 & 240u) == 0u))
        {
            _2761 = 0.0;
            _2763 = 0.0;
            _2765 = 0.0;
            _2767 = 0.0;
            _2769 = 0.0;
            _2771 = 0.0;
        }
        else
        {
            float _2762;
            float _2764;
            float _2766;
            float _2768;
            float _2770;
            float _2772;
            float _2906 = 0.0;
            float _2907 = 0.0;
            float _2908 = 0.0;
            float _2909 = 0.0;
            float _2910 = 0.0;
            float _2911 = 0.0;
            uint _2912 = 0u;
            uint _2921;
            bool _2922;
            for (;;)
            {
                _2921 = texelFetch(g_lightClassification, int((((_2654 << 5u) + (_2640 << 9u)) + (_2912 << 2u)) >> 2u)).x;
                _2922 = _2921 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2922)
                {
                    frontier_phi_61_pred = _2906;
                    frontier_phi_61_pred_1 = _2911;
                    frontier_phi_61_pred_2 = _2910;
                    frontier_phi_61_pred_3 = _2909;
                    frontier_phi_61_pred_4 = _2908;
                    frontier_phi_61_pred_5 = _2907;
                }
                else
                {
                    float _3030;
                    float _3031;
                    float _3032;
                    float _3033;
                    float _3034;
                    float _3035;
                    uint _3036;
                    _3030 = _2906;
                    _3031 = _2907;
                    _3032 = _2908;
                    _3033 = _2909;
                    _3034 = _2910;
                    _3035 = _2911;
                    _3036 = _2921;
                    float _2962;
                    float _2963;
                    float _2964;
                    float _2965;
                    float _2966;
                    float _2967;
                    for (;;)
                    {
                        uint _3040 = uint(findLSB(_3036)) + (_2912 << 5u);
                        uint _3037 = (_3036 + 4294967295u) & _3036;
                        uint _3042 = _3040 * 48u;
                        vec4 _3056 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3042)).x, texelFetch(g_PointLightRenderingBuffer, int(_3042 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3042 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3042 + 3u)).x));
                        uint _3062 = (_3040 * 48u) + 4u;
                        vec4 _3075 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3062)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 3u)).x));
                        uint _3081 = (_3040 * 48u) + 8u;
                        vec3 _3092 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3081)).x, texelFetch(g_PointLightRenderingBuffer, int(_3081 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3081 + 2u)).x));
                        float _3096 = _3056.x - _2614;
                        float _3097 = _3056.y - _2615;
                        float _3098 = _3056.z - _2616;
                        float _3099 = dot(vec3(_3096, _3097, _3098), vec3(_3096, _3097, _3098));
                        float _3102 = inversesqrt(_3099);
                        float _3103 = _3102 * _3096;
                        float _3104 = _3102 * _3097;
                        float _3105 = _3102 * _3098;
                        float _3106 = dot(vec3(_856, _859, _862), vec3(_3103, _3104, _3105));
                        float _3111 = 1.0 - (_3099 * _3056.w);
                        float _4445 = isnan(0.0) ? _3111 : (isnan(_3111) ? 0.0 : max(_3111, 0.0));
                        float _3112 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
                        float _3113 = sqrt(_3099) * _3075.w;
                        float _3116 = 1.39999997615814208984375 / (_3113 + 1.39999997615814208984375);
                        float _3117 = _3116 * _3116;
                        float _3120 = ((1.0 - _3117) * _3106) + _3117;
                        float _3123 = _3113 * _3113;
                        float _3127 = ((isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : max(_3120, 0.0))) * _3112) / ((_3123 * 0.699999988079071044921875) + 1.0);
                        float _3131 = (-0.0) - _2614;
                        float _3132 = (-0.0) - _2615;
                        float _3133 = (-0.0) - _2616;
                        float _3137 = inversesqrt(dot(vec3(_3131, _3132, _3133), vec3(_3131, _3132, _3133)));
                        float _3138 = _3137 * _3131;
                        float _3139 = _3137 * _3132;
                        float _3140 = _3137 * _3133;
                        float _3148 = exp2(log2(1.0 / ((_3123 * 3.5) + 5.0)) * 0.25);
                        float _3149 = 1.0 - _931;
                        float _3156 = sqrt(1.0 - ((1.0 - (_3149 * _3149)) * (1.0 - (_3148 * _3148))));
                        float _3157 = _3156 * _3156;
                        float _3158 = _3157 * _3157;
                        float _3159 = _3138 + _3103;
                        float _3160 = _3139 + _3104;
                        float _3161 = _3140 + _3105;
                        float _3165 = inversesqrt(dot(vec3(_3159, _3160, _3161), vec3(_3159, _3160, _3161)));
                        float _3169 = dot(vec3(_856, _859, _862), vec3(_3138, _3139, _3140));
                        float _4461 = isnan(0.0) ? _3169 : (isnan(_3169) ? 0.0 : max(_3169, 0.0));
                        float _3172 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
                        float _3173 = dot(vec3(_856, _859, _862), vec3(_3165 * _3159, _3165 * _3160, _3165 * _3161));
                        float _4472 = isnan(0.0) ? _3173 : (isnan(_3173) ? 0.0 : max(_3173, 0.0));
                        float _3176 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
                        float _3180 = ((_3176 * _3176) * (_3158 + (-1.0))) + 1.0;
                        float _3181 = _3116 * _3157;
                        float _3182 = _3181 * _3181;
                        float _3185 = ((1.0 - _3182) * _3106) + _3182;
                        float _4483 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                        float _3186 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
                        float _3187 = 1.0 - _3157;
                        float _3197 = (0.5 / (((_3186 * ((_3172 * _3187) + _3157)) + 9.9999999392252902907785028219223e-09) + (((_3186 * _3187) + _3157) * _3172))) * _3186;
                        float _4494 = isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : max(_3197, 0.0));
                        float _3208 = (((_3158 * 3.1415927410125732421875) * (isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0)))) / ((_3180 * _3180) * ((_3123 * 2.1991131305694580078125) + 3.141590118408203125))) * _3112;
                        _2965 = (_3127 * _3075.x) + _3033;
                        _2966 = (_3127 * _3075.y) + _3034;
                        _2967 = (_3127 * _3075.z) + _3035;
                        _2962 = (_3208 * _3092.x) + _3030;
                        _2963 = (_3208 * _3092.y) + _3031;
                        _2964 = (_3208 * _3092.z) + _3032;
                        if (_3037 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3030 = _2962;
                            _3031 = _2963;
                            _3032 = _2964;
                            _3033 = _2965;
                            _3034 = _2966;
                            _3035 = _2967;
                            _3036 = _3037;
                        }
                    }
                    frontier_phi_61_pred = _2962;
                    frontier_phi_61_pred_1 = _2967;
                    frontier_phi_61_pred_2 = _2966;
                    frontier_phi_61_pred_3 = _2965;
                    frontier_phi_61_pred_4 = _2964;
                    frontier_phi_61_pred_5 = _2963;
                }
                _2762 = frontier_phi_61_pred;
                _2772 = frontier_phi_61_pred_1;
                _2770 = frontier_phi_61_pred_2;
                _2768 = frontier_phi_61_pred_3;
                _2766 = frontier_phi_61_pred_4;
                _2764 = frontier_phi_61_pred_5;
                uint _2913 = _2912 + 1u;
                if (_2913 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2906 = _2762;
                    _2907 = _2764;
                    _2908 = _2766;
                    _2909 = _2768;
                    _2910 = _2770;
                    _2911 = _2772;
                    _2912 = _2913;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2761 = _2762;
            _2763 = _2764;
            _2765 = _2766;
            _2767 = _2768;
            _2769 = _2770;
            _2771 = _2772;
        }
        uvec4 _2775 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2776 = _2775.z;
        uint _2778 = (_2776 >> 8u) & 15u;
        float _2874;
        float _2876;
        float _2878;
        float _2880;
        float _2882;
        float _2884;
        if (((4294967295u << _2778) & _2660) == 0u)
        {
            _2874 = _2761;
            _2876 = _2763;
            _2878 = _2765;
            _2880 = _2767;
            _2882 = _2769;
            _2884 = _2771;
        }
        else
        {
            float _2899 = inversesqrt(dot(vec3(_2614, _2615, _2616), vec3(_2614, _2615, _2616)));
            float _2900 = _2899 * _2614;
            float _2901 = _2899 * _2615;
            float _2902 = _2899 * _2616;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2778 < ((_2776 >> 12u) & 15u))
            {
                float _2875;
                float _2877;
                float _2879;
                float _2881;
                float _2883;
                float _2885;
                float _3013 = _2761;
                float _3014 = _2763;
                float _3015 = _2765;
                float _3016 = _2767;
                float _3017 = _2769;
                float _3018 = _2771;
                uint _3019 = _2778;
                uint _3028;
                bool _3029;
                for (;;)
                {
                    _3028 = texelFetch(g_lightClassification, int((((_2654 << 5u) + (_2640 << 9u)) + (_3019 << 2u)) >> 2u)).x;
                    _3029 = _3028 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3029)
                    {
                        frontier_phi_67_pred = _3016;
                        frontier_phi_67_pred_1 = _3017;
                        frontier_phi_67_pred_2 = _3018;
                        frontier_phi_67_pred_3 = _3015;
                        frontier_phi_67_pred_4 = _3014;
                        frontier_phi_67_pred_5 = _3013;
                    }
                    else
                    {
                        float _3213;
                        float _3214;
                        float _3215;
                        float _3216;
                        float _3217;
                        float _3218;
                        float _3506;
                        float _3507;
                        float _3508;
                        float _3509;
                        float _3510;
                        float _3511;
                        float _3226 = _3013;
                        float _3227 = _3014;
                        float _3228 = _3015;
                        float _3229 = _3016;
                        float _3230 = _3017;
                        float _3231 = _3018;
                        uint _3232 = _3028;
                        uint _3233;
                        vec4 _3258;
                        float _3259;
                        vec4 _3274;
                        vec3 _3286;
                        vec4 _3301;
                        vec4 _3316;
                        float _3362;
                        bool _3363;
                        for (;;)
                        {
                            uint _3243 = ((_3019 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3232));
                            _3233 = (_3232 + 4294967295u) & _3232;
                            uint _3245 = _3243 * 40u;
                            _3258 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3245)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3245 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3245 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3245 + 3u)).x));
                            _3259 = _3258.w;
                            uint _3261 = (_3243 * 40u) + 4u;
                            _3274 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3261)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3261 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3261 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3261 + 3u)).x));
                            uint _3276 = (_3243 * 40u) + 8u;
                            _3286 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3276)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3276 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3276 + 2u)).x));
                            uint _3288 = (_3243 * 40u) + 16u;
                            _3301 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3288)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3288 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3288 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3288 + 3u)).x));
                            uint _3303 = (_3243 * 40u) + 20u;
                            _3316 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3303)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3303 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3303 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3303 + 3u)).x));
                            uint _3318 = (_3243 * 40u) + 24u;
                            vec4 _3331 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3318)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 3u)).x));
                            uint _3337 = (_3243 * 40u) + 28u;
                            vec4 _3350 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3337)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3337 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3337 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3337 + 3u)).x));
                            _3362 = fma(_2616, _3350.z, fma(_2615, _3350.y, _3350.x * _2614)) + _3350.w;
                            _3363 = !((fma(_2616, _3331.z, fma(_2615, _3331.y, _3331.x * _2614)) + _3331.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3363)
                            {
                                float _3390 = _3258.x - _2614;
                                float _3391 = _3258.y - _2615;
                                float _3392 = _3258.z - _2616;
                                float _3393 = dot(vec3(_3390, _3391, _3392), vec3(_3390, _3391, _3392));
                                float _3396 = inversesqrt(_3393);
                                float _3397 = _3396 * _3390;
                                float _3398 = _3396 * _3391;
                                float _3399 = _3396 * _3392;
                                float _3403 = 1.0 - (_3393 / (_3259 * _3259));
                                float _4505 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                                float _3404 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
                                float _3408 = sqrt(_3393) * _3274.w;
                                float _3410 = 1.39999997615814208984375 / (_3408 + 1.39999997615814208984375);
                                float _3411 = _3410 * _3410;
                                float _3414 = ((1.0 - _3411) * dot(vec3(_3397, _3398, _3399), vec3(_856, _859, _862))) + _3411;
                                float _3417 = _3408 * _3408;
                                float _3421 = (fma(_2616, _3301.z, fma(_2615, _3301.y, _3301.x * _2614)) + _3301.w) / _3362;
                                float _3422 = (fma(_2616, _3316.z, fma(_2615, _3316.y, _3316.x * _2614)) + _3316.w) / _3362;
                                float _3426 = 1.0 - dot(vec2(_3421, _3422), vec2(_3421, _3422));
                                float _4521 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                                float _3427 = isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0));
                                float _3428 = _3427 * (((isnan(0.0) ? _3414 : (isnan(_3414) ? 0.0 : max(_3414, 0.0))) * _3404) / ((_3417 * 0.699999988079071044921875) + 1.0));
                                float _3440 = exp2(log2(1.0 / ((_3417 * 3.5) + 5.0)) * 0.25);
                                float _3441 = 1.0 - _931;
                                float _3448 = sqrt(1.0 - ((1.0 - (_3441 * _3441)) * (1.0 - (_3440 * _3440))));
                                float _3449 = _3448 * _3448;
                                float _3450 = _3449 * _3449;
                                float _3451 = _3397 - _2900;
                                float _3452 = _3398 - _2901;
                                float _3453 = _3399 - _2902;
                                float _3457 = inversesqrt(dot(vec3(_3451, _3452, _3453), vec3(_3451, _3452, _3453)));
                                float _3461 = dot(vec3(_856, _859, _862), vec3((-0.0) - _2900, (-0.0) - _2901, (-0.0) - _2902));
                                float _4532 = isnan(0.0) ? _3461 : (isnan(_3461) ? 0.0 : max(_3461, 0.0));
                                float _3464 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
                                float _3465 = dot(vec3(_856, _859, _862), vec3(_3457 * _3451, _3457 * _3452, _3457 * _3453));
                                float _4543 = isnan(0.0) ? _3465 : (isnan(_3465) ? 0.0 : max(_3465, 0.0));
                                float _3468 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
                                float _3472 = ((_3468 * _3468) * (_3450 + (-1.0))) + 1.0;
                                float _3473 = _3410 * _3449;
                                float _3474 = _3473 * _3473;
                                float _3480 = ((1.0 - _3474) * dot(vec3(_856, _859, _862), vec3(_3397, _3398, _3399))) + _3474;
                                float _4554 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                                float _3481 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
                                float _3482 = 1.0 - _3449;
                                float _3492 = (0.5 / (((_3481 * ((_3464 * _3482) + _3449)) + 9.9999999392252902907785028219223e-09) + (((_3481 * _3482) + _3449) * _3464))) * _3481;
                                float _4565 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                                float _3502 = (_3427 * _3404) * (((_3450 * 3.1415927410125732421875) * (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0)))) / ((_3472 * _3472) * ((_3417 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3502 * _3286.x;
                                frontier_phi_73_pred_1 = _3502 * _3286.y;
                                frontier_phi_73_pred_2 = _3428 * _3274.z;
                                frontier_phi_73_pred_3 = _3428 * _3274.y;
                                frontier_phi_73_pred_4 = _3428 * _3274.x;
                                frontier_phi_73_pred_5 = _3502 * _3286.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3506 = frontier_phi_73_pred;
                            _3507 = frontier_phi_73_pred_1;
                            _3511 = frontier_phi_73_pred_2;
                            _3510 = frontier_phi_73_pred_3;
                            _3509 = frontier_phi_73_pred_4;
                            _3508 = frontier_phi_73_pred_5;
                            _3216 = _3509 + _3229;
                            _3217 = _3510 + _3230;
                            _3218 = _3511 + _3231;
                            _3213 = _3506 + _3226;
                            _3214 = _3507 + _3227;
                            _3215 = _3508 + _3228;
                            if (_3233 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3226 = _3213;
                                _3227 = _3214;
                                _3228 = _3215;
                                _3229 = _3216;
                                _3230 = _3217;
                                _3231 = _3218;
                                _3232 = _3233;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3216;
                        frontier_phi_67_pred_1 = _3217;
                        frontier_phi_67_pred_2 = _3218;
                        frontier_phi_67_pred_3 = _3215;
                        frontier_phi_67_pred_4 = _3214;
                        frontier_phi_67_pred_5 = _3213;
                    }
                    _2881 = frontier_phi_67_pred;
                    _2883 = frontier_phi_67_pred_1;
                    _2885 = frontier_phi_67_pred_2;
                    _2879 = frontier_phi_67_pred_3;
                    _2877 = frontier_phi_67_pred_4;
                    _2875 = frontier_phi_67_pred_5;
                    uint _3020 = _3019 + 1u;
                    if (_3020 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3013 = _2875;
                        _3014 = _2877;
                        _3015 = _2879;
                        _3016 = _2881;
                        _3017 = _2883;
                        _3018 = _2885;
                        _3019 = _3020;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2883;
                frontier_phi_55_56_ladder_1 = _2885;
                frontier_phi_55_56_ladder_2 = _2881;
                frontier_phi_55_56_ladder_3 = _2879;
                frontier_phi_55_56_ladder_4 = _2877;
                frontier_phi_55_56_ladder_5 = _2875;
            }
            else
            {
                frontier_phi_55_56_ladder = _2769;
                frontier_phi_55_56_ladder_1 = _2771;
                frontier_phi_55_56_ladder_2 = _2767;
                frontier_phi_55_56_ladder_3 = _2765;
                frontier_phi_55_56_ladder_4 = _2763;
                frontier_phi_55_56_ladder_5 = _2761;
            }
            _2874 = frontier_phi_55_56_ladder_5;
            _2876 = frontier_phi_55_56_ladder_4;
            _2878 = frontier_phi_55_56_ladder_3;
            _2880 = frontier_phi_55_56_ladder_2;
            _2882 = frontier_phi_55_56_ladder;
            _2884 = frontier_phi_55_56_ladder_1;
        }
        float _2889 = isnan(1.0) ? _915 : (isnan(_915) ? 1.0 : min(_915, 1.0));
        _2673 = (_2889 * _2880) + _2106;
        _2675 = (_2889 * _2882) + _2108;
        _2677 = (_2889 * _2884) + _2110;
        _2679 = ((_2874 * _899) * _2889) + _2454;
        _2681 = ((_2876 * _901) * _2889) + _2456;
        _2683 = ((_2878 * _902) * _2889) + _2458;
    }
    else
    {
        _2673 = _2106;
        _2675 = _2108;
        _2677 = _2110;
        _2679 = _2454;
        _2681 = _2456;
        _2683 = _2458;
    }
    float _4581 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _4592 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _4603 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    uint _2703 = _270 + 6u;
    float _2711 = _837 / cbSceneParam._m0[86u].x;
    float _2712 = _838 / cbSceneParam._m0[86u].y;
    vec4 _2726 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2711, _2712, (log2((isnan(cbSceneParam._m0[77u].w) ? _771 : (isnan(_771) ? cbSceneParam._m0[77u].w : min(_771, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2728 = _2726.x;
    float _2729 = _2726.y;
    float _2730 = _2726.z;
    float _2731 = _2726.w;
    float _2824;
    float _2826;
    float _2828;
    float _2830;
    if (_771 > cbSceneParam._m0[78u].w)
    {
        float _2786 = isnan(_771) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _771 : min(cbSceneParam._m0[80u].w, _771));
        float _2787 = _2786 / _771;
        float _2798 = _2787 * _822;
        float _2799 = _823 * _2787;
        float _2800 = (-0.0) - _2799;
        float _2802 = _2787 * _824;
        float _2804 = (cbSceneParam._m0[77u].w * _2800) / _2786;
        float _2805 = _2804 + cbSceneParam._m0[79u].w;
        float _2806 = cbSceneParam._m0[79u].w - _2799;
        float _2812 = sqrt(((_2798 * _2798) + (_2799 * _2799)) + (_2802 * _2802));
        float _2815 = (1.0 - (cbSceneParam._m0[77u].w / _2786)) * _2812;
        float _2820 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2822 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2975;
        if (abs((_2800 - _2804) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2975 = ((((_2805 > 0.0) ? exp2(_2820 * _2805) : (2.0 - exp2(_2822 * _2805))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2815;
        }
        else
        {
            float _2935 = 1.0 / cbSceneParam._m0[80u].x;
            float _2936 = isnan(_2806) ? _2805 : (isnan(_2805) ? _2806 : max(_2805, _2806));
            float _2937 = isnan(_2806) ? _2805 : (isnan(_2805) ? _2806 : min(_2805, _2806));
            float _2946 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : min(_2936, 0.0));
            float _2947 = isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : min(_2937, 0.0));
            _2975 = ((abs(_2812 / _2800) * cbSceneParam._m0[80u].y) * ((((_2946 - _2947) * 2.0) - ((exp2(_2820 * (isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0)))) - exp2(_2820 * (isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0))))) * _2935)) - ((exp2(_2822 * _2946) - exp2(_2822 * _2947)) * _2935))) + (_2815 * cbSceneParam._m0[80u].z);
        }
        vec4 _2977 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2711, _2712, 1.0), 0.0);
        float _2986 = exp2((_2975 * (-1.44269502162933349609375)) * (1.0 - _2977.w));
        float _2987 = log2(_2986);
        float _3003 = log2(_2731);
        _2824 = (exp2(_3003 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2987 * cbSceneParam._m0[78u].x)) * _2977.x) / cbSceneParam._m0[78u].x)) + _2728;
        _2826 = (exp2(_3003 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2987 * cbSceneParam._m0[78u].y)) * _2977.y) / cbSceneParam._m0[78u].y)) + _2729;
        _2828 = (exp2(_3003 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2987 * cbSceneParam._m0[78u].z)) * _2977.z) / cbSceneParam._m0[78u].z)) + _2730;
        _2830 = _2986 * _2731;
    }
    else
    {
        _2824 = _2728;
        _2826 = _2729;
        _2828 = _2730;
        _2830 = _2731;
    }
    float _2842 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2843 = _2842 == 3.0;
    float _2844 = log2(_2830);
    float _2851 = exp2(_2844 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0))) * (_2673 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _915))) + ((_2679 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1722)) * cbPerFrame._m0[3u].x));
    float _2852 = exp2(_2844 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0))) * (_2675 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _915))) + ((_2681 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1722)) * cbPerFrame._m0[3u].x));
    float _2853 = exp2(_2844 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2677 + ((isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0))) * _915))) + ((_2683 + ((isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0))) * _1722)) * cbPerFrame._m0[3u].x));
    float _2862 = (_2842 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2862 * (_2843 ? _2851 : (_2851 + (cbSceneParam._m0[72u].w * _2824)));
    SV_Target.y = _2862 * (_2843 ? _2852 : (_2852 + (cbSceneParam._m0[72u].w * _2826)));
    SV_Target.z = _2862 * (_2843 ? _2853 : (_2853 + (cbSceneParam._m0[72u].w * _2828)));
    SV_Target.w = cbInstanceData._m0[_2703].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2703].w;
}


