#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1399;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _261 = uint(roundEven(NORMAL.w)) * 13u;
    uint _266 = _261 + 1u;
    uint _270 = _261 + 2u;
    float _279 = sqrt(((cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x) + (cbInstanceData._m0[_261].x * cbInstanceData._m0[_261].x)) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x));
    float _280 = _279 * TEXCOORD.z;
    float _281 = _279 * TEXCOORD.w;
    vec4 _301 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _307 = _301.x * cbMtdParam._m0[11u].x;
    float _308 = _301.y * cbMtdParam._m0[11u].y;
    float _309 = _301.z * cbMtdParam._m0[11u].z;
    vec4 _328 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _280) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _281) + cbTextureTilingScale._m0[5u].w));
    vec4 _367 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _369 = _367.x;
    float _381 = dot(vec4(_369, _367.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _398 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_369 - _381) * cbMtdParam._m0[24u].y) + _381) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4008 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _399 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
    float _406 = (_399 * ((_328.x * cbMtdParam._m0[12u].x) - _307)) + _307;
    float _407 = (_399 * ((_328.y * cbMtdParam._m0[12u].y) - _308)) + _308;
    float _408 = (_399 * ((_328.z * cbMtdParam._m0[12u].z) - _309)) + _309;
    vec4 _425 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _280) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _281) + cbTextureTilingScale._m0[3u].w));
    vec4 _445 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _447 = _445.x;
    float _457 = dot(vec4(_447, _445.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _471 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_447 - _457) * cbMtdParam._m0[24u].y) + _457) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4019 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _472 = isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0));
    float _479 = (_472 * ((_425.x * cbMtdParam._m0[13u].x) - _406)) + _406;
    float _480 = (_472 * ((_425.y * cbMtdParam._m0[13u].y) - _407)) + _407;
    float _481 = (_472 * ((_425.z * cbMtdParam._m0[13u].z) - _408)) + _408;
    vec4 _499 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _280) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _281) + cbTextureTilingScale._m0[4u].w));
    vec4 _516 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _518 = _516.x;
    float _519 = _516.y;
    float _520 = _516.z;
    float _527 = ((_499.x - _518) * _399) + _518;
    float _528 = ((_499.y - _519) * _399) + _519;
    float _529 = ((_499.z - _520) * _399) + _520;
    vec4 _541 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _280) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _281) + cbTextureTilingScale._m0[2u].w));
    float _554 = ((_541.z - _529) * _472) + _529;
    float _557 = ((((_541.x - _527) * _472) + _527) * 2.0) + (-1.0);
    float _559 = ((((_541.y - _528) * _472) + _528) * 2.0) + (-1.0);
    float _560 = dot(vec2(_557, _559), vec2(_557, _559));
    float _4030 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _565 = sqrt(1.0 - (isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0))));
    vec4 _578 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _596 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _280) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _281) + cbTextureTilingScale._m0[11u].w));
    float _598 = _596.x;
    float _599 = 1.0 - _598;
    float _605 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _608 = ((isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : min(_605, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _617 = (_608 - ((((((_598 - _599) * cbMtdParam._m0[24u].z) + _599) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _608))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4051 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _618 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
    float _625 = (_618 * (cbMtdParam._m0[17u].x - _479)) + _479;
    float _626 = (_618 * (cbMtdParam._m0[17u].y - _480)) + _480;
    float _627 = (_618 * (cbMtdParam._m0[17u].z - _481)) + _481;
    vec4 _639 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _280) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _281) + cbTextureTilingScale._m0[19u].w));
    float _641 = _639.x;
    float _642 = 1.0 - _641;
    float _669 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_641 - _642) * cbMtdParam._m0[24u].w) + _642) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4062 = isnan(0.0) ? _669 : (isnan(_669) ? 0.0 : max(_669, 0.0));
    float _670 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
    float _678 = ((((cbMtdParam._m0[10u].x - _625) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _670) + _625;
    float _679 = ((((cbMtdParam._m0[10u].y - _626) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _670) + _626;
    float _680 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _627)) * _670) + _627;
    vec4 _706 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _708 = _706.x;
    float _726 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _280) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _281) + cbTextureTilingScale._m0[9u].w)).x - _708) * _399) + _708;
    float _743 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _280) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _281) + cbTextureTilingScale._m0[21u].w)).x - _726) * _472) + _726;
    float _747 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _743) * cbMtdParam._m0[19u].z) + _743;
    float _749 = _747 - (_747 * _618);
    float _751 = _749 - (_749 * _670);
    vec4 _765 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _280) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _281) + cbTextureTilingScale._m0[15u].w));
    float _772 = (_765.x * 2.0) + (-1.0);
    float _773 = (_765.y * 2.0) + (-1.0);
    float _774 = dot(vec2(_772, _773), vec2(_772, _773));
    float _4073 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _782 = (_618 * (_765.z - _554)) + _554;
    float _785 = ((cbMtdParam._m0[23u].y - _782) * _670) + _782;
    vec4 _804 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _280) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _281) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _810 = (_804.x * 2.0) + (-1.0);
    float _811 = (_804.y * 2.0) + (-1.0);
    float _812 = dot(vec2(_810, _811), vec2(_810, _811));
    float _4084 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _829 = (((_772 - _557) + (cbMtdParam._m0[21u].x * _557)) * _618) + _557;
    float _830 = (((_773 - _559) + (cbMtdParam._m0[21u].x * _559)) * _618) + _559;
    float _831 = (_618 * (sqrt(1.0 - (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0)))) - _565)) + _565;
    float _842 = (((_810 - _829) + (_829 * cbMtdParam._m0[22u].z)) * _670) + _829;
    float _843 = (((_811 - _830) + (_830 * cbMtdParam._m0[22u].z)) * _670) + _830;
    float _844 = ((sqrt(1.0 - (isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0)))) - _831) * _670) + _831;
    float _846 = cbMtdParam._m0[22u].x + _578.w;
    float _849 = fma(_844, _248 * NORMAL.x, fma(_843, _255 * TANGENT.x, (_241 * _233) * _842));
    float _852 = fma(_844, _248 * NORMAL.y, fma(_843, _255 * TANGENT.y, (_241 * _234) * _842));
    float _855 = fma(_844, _248 * NORMAL.z, fma(_843, _255 * TANGENT.z, (_241 * _235) * _842));
    float _859 = inversesqrt(dot(vec3(_849, _852, _855), vec3(_849, _852, _855)));
    float _860 = _859 * _849;
    float _861 = _859 * _852;
    float _862 = _859 * _855;
    float _4095 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _863 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _4106 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _4117 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _4128 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _4139 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _4150 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _868 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    float _882 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _922 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _932 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _922);
    float _933 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _922);
    float _934 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _922);
    float _938 = inversesqrt(dot(vec3(_932, _933, _934), vec3(_932, _933, _934)));
    float _939 = _932 * _938;
    float _940 = _933 * _938;
    float _941 = _934 * _938;
    float _947 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _948 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _966 = fma(_862, cbSceneParam._m0[5u].z, fma(_861, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _860));
    float _969 = fma(_862, cbSceneParam._m0[6u].z, fma(_861, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _860));
    float _972 = fma(_862, cbSceneParam._m0[7u].z, fma(_861, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _860));
    uint _986 = (_261 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _992 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0)))) * cbInstanceData._m0[_986].x;
    float _993 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0)))) * cbInstanceData._m0[_986].y;
    float _994 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0)))) * cbInstanceData._m0[_986].z;
    float _4161 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    float _995 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _996 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
    float _4183 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _997 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
    float _998 = 1.0 - _868;
    float _999 = _995 * _998;
    float _1000 = _996 * _998;
    float _1001 = _997 * _998;
    float _1006 = (_995 + (-0.039999999105930328369140625)) * _868;
    float _1007 = (_996 + (-0.039999999105930328369140625)) * _868;
    float _1008 = (_997 + (-0.039999999105930328369140625)) * _868;
    float _1009 = _1006 + 0.039999999105930328369140625;
    float _1011 = _1007 + 0.039999999105930328369140625;
    float _1012 = _1008 + 0.039999999105930328369140625;
    vec4 _1021 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _947, cbSceneParam._m0[86u].y * _948));
    float _1025 = ((isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * TEXCOORD_5.w) * _1021.x;
    float _1026 = dot(vec3(_860, _861, _862), vec3(_939, _940, _941));
    float _1029 = _1026 * 2.0;
    float _1033 = (_1029 * _860) - _939;
    float _1034 = (_1029 * _861) - _940;
    float _1035 = (_1029 * _862) - _941;
    float _1039 = abs(dot(vec3(_939, _940, _941), vec3(_860, _861, _862)));
    float _4194 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
    float _1041 = sqrt(_863);
    float _1054 = exp2((_1041 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1041 * 3.0));
    float _1060 = (1.0 - _1054) * ((_1041 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1061 = _1054 * _1041;
    float _1089 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1093 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1097 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1398;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1123 = fma(_1097, cbModelParam._m0[26u].z, fma(_1093, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1089));
        float _1127 = fma(_1097, cbModelParam._m0[27u].z, fma(_1093, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1089));
        float _1131 = fma(_1097, cbModelParam._m0[28u].z, fma(_1093, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1089));
        float _1156 = _1089 + _860;
        float _1157 = _1093 + _861;
        float _1158 = _1097 + _862;
        float _1168 = fma(_1158, cbModelParam._m0[26u].z, fma(_1157, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1156)) - _1123;
        float _1169 = fma(_1158, cbModelParam._m0[27u].z, fma(_1157, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1156)) - _1127;
        float _1170 = fma(_1158, cbModelParam._m0[28u].z, fma(_1157, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1156)) - _1131;
        float _1174 = inversesqrt(dot(vec3(_1168, _1169, _1170), vec3(_1168, _1169, _1170)));
        float _1187 = ((_1174 * _1168) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1123 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1188 = ((_1174 * _1169) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1127 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1189 = ((_1174 * _1170) / cbModelParam._m0[34u].z) + ((((((_1131 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1187, _1188, _1189), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1187, _1188, _1189), 0.0);
        vec4 _1206 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1187, _1188, _1189), 0.0);
        vec4 _1213 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1187, _1188, _1189), 0.0);
        float _1226 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1227 = _1226 * (_1192.x + (-0.5));
        float _1228 = _1226 * (_1192.y + (-0.5));
        float _1229 = _1226 * (_1192.z + (-0.5));
        float _1236 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1237 = _1236 * (_1199.x + (-0.5));
        float _1238 = _1236 * (_1199.y + (-0.5));
        float _1239 = _1236 * (_1199.z + (-0.5));
        float _1246 = exp2((_1206.w + (-0.5)) * 20.0) * 2.0;
        float _1247 = _1246 * (_1206.x + (-0.5));
        float _1248 = _1246 * (_1206.y + (-0.5));
        float _1249 = _1246 * (_1206.z + (-0.5));
        float _1256 = exp2((_1213.w + (-0.5)) * 20.0) * 2.0;
        float _1257 = _1256 * (_1213.x + (-0.5));
        float _1258 = _1256 * (_1213.y + (-0.5));
        float _1259 = _1256 * (_1213.z + (-0.5));
        float _1260 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
        float _1261 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1262 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1263 = _1227 * 0.5;
        float _1264 = _1237 * 0.5;
        float _1265 = _1247 * 0.5;
        float _1266 = dot(vec3(_1263, _1264, _1265), vec3(_1263, _1264, _1265));
        float _1271 = (_1266 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1266);
        float _1280 = (dot(vec3(_860, _861, _862), vec3(_1271 * _1263, _1271 * _1264, _1271 * _1265)) + 1.0) * 0.5;
        float _4220 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1290 = sqrt(((_1264 * _1264) + (_1263 * _1263)) + (_1265 * _1265)) / (_1260 + 9.9999997473787516355514526367188e-06);
        float _4231 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1291 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1292 = _1291 * 2.0;
        float _1296 = (1.0 - _1291) / (_1291 + 1.0);
        float _4242 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1297 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1306 = ((((1.0 - _1297) * (_1292 + 2.0)) * exp2(log2(isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * (_1292 + 1.0))) + _1297) * _1260;
        float _1307 = _1228 * 0.5;
        float _1308 = _1238 * 0.5;
        float _1309 = _1248 * 0.5;
        float _1310 = dot(vec3(_1307, _1308, _1309), vec3(_1307, _1308, _1309));
        float _1315 = (_1310 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1310);
        float _1323 = (dot(vec3(_860, _861, _862), vec3(_1315 * _1307, _1315 * _1308, _1315 * _1309)) + 1.0) * 0.5;
        float _4253 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1332 = sqrt(((_1308 * _1308) + (_1307 * _1307)) + (_1309 * _1309)) / (_1261 + 9.9999997473787516355514526367188e-06);
        float _4264 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1333 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1334 = _1333 * 2.0;
        float _1338 = (1.0 - _1333) / (_1333 + 1.0);
        float _4275 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1339 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1348 = ((((1.0 - _1339) * (_1334 + 2.0)) * exp2(log2(isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * (_1334 + 1.0))) + _1339) * _1261;
        float _1349 = _1229 * 0.5;
        float _1350 = _1239 * 0.5;
        float _1351 = _1249 * 0.5;
        float _1352 = dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351));
        float _1357 = (_1352 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1352);
        float _1365 = (dot(vec3(_860, _861, _862), vec3(_1357 * _1349, _1357 * _1350, _1357 * _1351)) + 1.0) * 0.5;
        float _4286 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1374 = sqrt(((_1350 * _1350) + (_1349 * _1349)) + (_1351 * _1351)) / (_1262 + 9.9999997473787516355514526367188e-06);
        float _4297 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1375 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1376 = _1375 * 2.0;
        float _1380 = (1.0 - _1375) / (_1375 + 1.0);
        float _4308 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1381 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1390 = ((((1.0 - _1381) * (_1376 + 2.0)) * exp2(log2(isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0))) * (_1376 + 1.0))) + _1381) * _1262;
        _1398 = _1229;
        _1400 = _1228;
        _1401 = _1227;
        _1402 = _1239;
        _1403 = _1238;
        _1404 = _1237;
        _1405 = _1249;
        _1406 = _1248;
        _1407 = _1247;
        _1408 = _1262;
        _1409 = _1261;
        _1410 = _1260;
        _1411 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0)));
        _1412 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0)));
        _1413 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0)));
    }
    else
    {
        _1398 = _1399;
        _1400 = _1399;
        _1401 = _1399;
        _1402 = _1399;
        _1403 = _1399;
        _1404 = _1399;
        _1405 = _1399;
        _1406 = _1399;
        _1407 = _1399;
        _1408 = _1399;
        _1409 = _1399;
        _1410 = _1399;
        _1411 = 0.0;
        _1412 = 0.0;
        _1413 = 0.0;
    }
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1437 = fma(_1097, cbModelParam._m0[30u].z, fma(_1093, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1089));
        float _1441 = fma(_1097, cbModelParam._m0[31u].z, fma(_1093, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1089));
        float _1445 = fma(_1097, cbModelParam._m0[32u].z, fma(_1093, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1089));
        float _1468 = _1089 + _860;
        float _1469 = _1093 + _861;
        float _1470 = _1097 + _862;
        float _1480 = fma(_1470, cbModelParam._m0[30u].z, fma(_1469, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1468)) - _1437;
        float _1481 = fma(_1470, cbModelParam._m0[31u].z, fma(_1469, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1468)) - _1441;
        float _1482 = fma(_1470, cbModelParam._m0[32u].z, fma(_1469, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1468)) - _1445;
        float _1486 = inversesqrt(dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482)));
        float _1499 = ((_1486 * _1480) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1437 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1500 = ((_1486 * _1481) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1441 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1501 = ((_1486 * _1482) / cbModelParam._m0[35u].z) + ((((((_1445 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1503 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1499, _1500, _1501), 0.0);
        vec4 _1510 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1499, _1500, _1501), 0.0);
        vec4 _1517 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1499, _1500, _1501), 0.0);
        vec4 _1524 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1499, _1500, _1501), 0.0);
        float _1536 = exp2((_1503.w + (-0.5)) * 20.0) * 2.0;
        float _1537 = _1536 * (_1503.x + (-0.5));
        float _1538 = _1536 * (_1503.y + (-0.5));
        float _1539 = _1536 * (_1503.z + (-0.5));
        float _1546 = exp2((_1510.w + (-0.5)) * 20.0) * 2.0;
        float _1547 = _1546 * (_1510.x + (-0.5));
        float _1548 = _1546 * (_1510.y + (-0.5));
        float _1549 = _1546 * (_1510.z + (-0.5));
        float _1556 = exp2((_1517.w + (-0.5)) * 20.0) * 2.0;
        float _1557 = _1556 * (_1517.x + (-0.5));
        float _1558 = _1556 * (_1517.y + (-0.5));
        float _1559 = _1556 * (_1517.z + (-0.5));
        float _1566 = exp2((_1524.w + (-0.5)) * 20.0) * 2.0;
        float _1567 = _1566 * (_1524.x + (-0.5));
        float _1568 = _1566 * (_1524.y + (-0.5));
        float _1569 = _1566 * (_1524.z + (-0.5));
        float _1570 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1571 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1572 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1573 = _1537 * 0.5;
        float _1574 = _1547 * 0.5;
        float _1575 = _1557 * 0.5;
        float _1576 = dot(vec3(_1573, _1574, _1575), vec3(_1573, _1574, _1575));
        float _1581 = (_1576 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1576);
        float _1589 = (dot(vec3(_860, _861, _862), vec3(_1581 * _1573, _1581 * _1574, _1581 * _1575)) + 1.0) * 0.5;
        float _4349 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1598 = sqrt(((_1574 * _1574) + (_1573 * _1573)) + (_1575 * _1575)) / (_1570 + 9.9999997473787516355514526367188e-06);
        float _4360 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1599 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1600 = _1599 * 2.0;
        float _1604 = (1.0 - _1599) / (_1599 + 1.0);
        float _4371 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1605 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1614 = ((((1.0 - _1605) * (_1600 + 2.0)) * exp2(log2(isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0))) * (_1600 + 1.0))) + _1605) * _1570;
        float _1615 = _1538 * 0.5;
        float _1616 = _1548 * 0.5;
        float _1617 = _1558 * 0.5;
        float _1618 = dot(vec3(_1615, _1616, _1617), vec3(_1615, _1616, _1617));
        float _1623 = (_1618 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1618);
        float _1631 = (dot(vec3(_860, _861, _862), vec3(_1623 * _1615, _1623 * _1616, _1623 * _1617)) + 1.0) * 0.5;
        float _4382 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1640 = sqrt(((_1616 * _1616) + (_1615 * _1615)) + (_1617 * _1617)) / (_1571 + 9.9999997473787516355514526367188e-06);
        float _4393 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1641 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1642 = _1641 * 2.0;
        float _1646 = (1.0 - _1641) / (_1641 + 1.0);
        float _4404 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1647 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1656 = ((((1.0 - _1647) * (_1642 + 2.0)) * exp2(log2(isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * (_1642 + 1.0))) + _1647) * _1571;
        float _1657 = _1539 * 0.5;
        float _1658 = _1549 * 0.5;
        float _1659 = _1559 * 0.5;
        float _1660 = dot(vec3(_1657, _1658, _1659), vec3(_1657, _1658, _1659));
        float _1665 = (_1660 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1660);
        float _1673 = (dot(vec3(_860, _861, _862), vec3(_1665 * _1657, _1665 * _1658, _1665 * _1659)) + 1.0) * 0.5;
        float _4415 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1682 = sqrt(((_1658 * _1658) + (_1657 * _1657)) + (_1659 * _1659)) / (_1572 + 9.9999997473787516355514526367188e-06);
        float _4426 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1683 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1684 = _1683 * 2.0;
        float _1688 = (1.0 - _1683) / (_1683 + 1.0);
        float _4437 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1689 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1698 = ((((1.0 - _1689) * (_1684 + 2.0)) * exp2(log2(isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * (_1684 + 1.0))) + _1689) * _1572;
        _1706 = _1539;
        _1707 = _1538;
        _1708 = _1537;
        _1709 = _1549;
        _1710 = _1548;
        _1711 = _1547;
        _1712 = _1559;
        _1713 = _1558;
        _1714 = _1557;
        _1715 = _1572;
        _1716 = _1571;
        _1717 = _1570;
        _1718 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)));
        _1719 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0)));
        _1720 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0)));
    }
    else
    {
        _1706 = _1399;
        _1707 = _1399;
        _1708 = _1399;
        _1709 = _1399;
        _1710 = _1399;
        _1711 = _1399;
        _1712 = _1399;
        _1713 = _1399;
        _1714 = _1399;
        _1715 = _1399;
        _1716 = _1399;
        _1717 = _1399;
        _1718 = 0.0;
        _1719 = 0.0;
        _1720 = 0.0;
    }
    float _1730 = (cbModelParam._m0[1u].x * (_1718 - _1411)) + _1411;
    float _1731 = (cbModelParam._m0[1u].x * (_1719 - _1412)) + _1412;
    float _1732 = (cbModelParam._m0[1u].x * (_1720 - _1413)) + _1413;
    float _1753 = fma(_1732, cbSceneParam._m0[89u].z, fma(_1731, cbSceneParam._m0[89u].y, _1730 * cbSceneParam._m0[89u].x));
    float _1756 = fma(_1732, cbSceneParam._m0[90u].z, fma(_1731, cbSceneParam._m0[90u].y, _1730 * cbSceneParam._m0[90u].x));
    float _1759 = fma(_1732, cbSceneParam._m0[91u].z, fma(_1731, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1730));
    float _1774 = _1033 * 0.5;
    float _1775 = _1034 * 0.5;
    float _1776 = _1035 * 0.5;
    float _1777 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1708, _1711, _1714, _1717));
    float _1780 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1707, _1710, _1713, _1716));
    float _1783 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1706, _1709, _1712, _1715));
    float _1817;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1790 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1398, _1402, _1405, _1408));
        float _1794 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1400, _1403, _1406, _1409));
        float _1798 = dot(vec4(_1774, _1775, _1776, 1.0), vec4(_1401, _1404, _1407, _1410));
        float _1805 = dot(vec4(cbModelParam._m0[39u]), vec4(_1774, _1775, _1776, 1.0));
        _1817 = dot(vec3(isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)), isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0)), isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1805) ? 0.0 : (isnan(0.0) ? _1805 : max(0.0, _1805))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1817 = 1.0;
    }
    float _1828;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1819 = dot(vec4(cbModelParam._m0[40u]), vec4(_1774, _1775, _1776, 1.0));
        _1828 = dot(vec3(isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0)), isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0)), isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1819) ? 0.0 : (isnan(0.0) ? _1819 : max(0.0, _1819))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1828 = 1.0;
    }
    float _1832 = (_1828 * cbModelParam._m0[1u].x) + (_1817 * (1.0 - cbModelParam._m0[1u].x));
    float _1842 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _863);
    float _1843 = isnan(_1842) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1842 : min(cbModelParam._m0[25u].z, _1842));
    float _1924;
    float _1926;
    float _1928;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1891 = fma(_1097, cbModelParam._m0[13u].z, fma(_1093, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1089)) + cbModelParam._m0[13u].w;
        float _1895 = fma(_1097, cbModelParam._m0[14u].z, fma(_1093, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1089)) + cbModelParam._m0[14u].w;
        float _1899 = fma(_1097, cbModelParam._m0[15u].z, fma(_1093, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1089)) + cbModelParam._m0[15u].w;
        float _1902 = fma(_1035, cbModelParam._m0[13u].z, fma(_1034, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1033));
        float _1905 = fma(_1035, cbModelParam._m0[14u].z, fma(_1034, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1033));
        float _1908 = fma(_1035, cbModelParam._m0[15u].z, fma(_1034, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1033));
        float _1936;
        if (_1902 > 0.0)
        {
            _1936 = abs((1.0 - _1891) / _1902);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1902 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1891 + 1.0) / _1902);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1936 = frontier_phi_14_12_ladder;
        }
        float _2108;
        if (_1905 > 0.0)
        {
            _2108 = abs((1.0 - _1895) / _1905);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1905 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1895 + 1.0) / _1905);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2108 = frontier_phi_23_19_ladder;
        }
        float _2403;
        if (_1908 > 0.0)
        {
            _2403 = abs((1.0 - _1899) / _1908);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1908 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1899 + 1.0) / _1908);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2403 = frontier_phi_35_30_ladder;
        }
        float _2405 = isnan(_2108) ? _1936 : (isnan(_1936) ? _2108 : min(_1936, _2108));
        float _2406 = isnan(_2403) ? _2405 : (isnan(_2405) ? _2403 : min(_2405, _2403));
        float _2410 = (_2406 * _1902) + _1891;
        float _2411 = (_2406 * _1905) + _1895;
        float _2412 = (_2406 * _1908) + _1899;
        float _2413 = _2406 * 9.9999997473787516355514526367188e-05;
        float _2415 = (-1.0) - _2413;
        float _2417 = _2413 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2412 > _2417) || ((_2412 < _2415) || ((_2411 > _2417) || ((_2411 < _2415) || ((_2410 < _2415) || (_2410 > _2417))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2557 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2412, cbModelParam._m0[9u].z, fma(_2411, cbModelParam._m0[9u].y, _2410 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2412, cbModelParam._m0[10u].z, fma(_2411, cbModelParam._m0[10u].y, _2410 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2412, cbModelParam._m0[11u].z, fma(_2411, cbModelParam._m0[11u].y, _2410 * cbModelParam._m0[11u].x))), _1843);
            frontier_phi_13_35_ladder = _2557.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2557.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2557.x * cbModelParam._m0[1u].y;
        }
        _1924 = frontier_phi_13_35_ladder_2;
        _1926 = frontier_phi_13_35_ladder_1;
        _1928 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1912 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1033, _1034, _1035), _1843);
        _1924 = _1912.x * cbModelParam._m0[1u].y;
        _1926 = _1912.y * cbModelParam._m0[1u].y;
        _1928 = _1912.z * cbModelParam._m0[1u].y;
    }
    float _1932 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _863);
    float _1933 = isnan(_1932) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1932 : min(cbModelParam._m0[25u].w, _1932));
    float _2023;
    float _2025;
    float _2027;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1987 = fma(_1097, cbModelParam._m0[21u].z, fma(_1093, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1089)) + cbModelParam._m0[21u].w;
        float _1991 = fma(_1097, cbModelParam._m0[22u].z, fma(_1093, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1089)) + cbModelParam._m0[22u].w;
        float _1995 = fma(_1097, cbModelParam._m0[23u].z, fma(_1093, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1089)) + cbModelParam._m0[23u].w;
        float _1998 = fma(_1035, cbModelParam._m0[21u].z, fma(_1034, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1033));
        float _2001 = fma(_1035, cbModelParam._m0[22u].z, fma(_1034, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1033));
        float _2004 = fma(_1035, cbModelParam._m0[23u].z, fma(_1034, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1033));
        float _2113;
        if (_1998 > 0.0)
        {
            _2113 = abs((1.0 - _1987) / _1998);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1998 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1987 + 1.0) / _1998);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2113 = frontier_phi_25_21_ladder;
        }
        float _2430;
        if (_2001 > 0.0)
        {
            _2430 = abs((1.0 - _1991) / _2001);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2001 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1991 + 1.0) / _2001);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2430 = frontier_phi_37_32_ladder;
        }
        float _2768;
        if (_2004 > 0.0)
        {
            _2768 = abs((1.0 - _1995) / _2004);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2004 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1995 + 1.0) / _2004);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2768 = frontier_phi_47_44_ladder;
        }
        float _2770 = isnan(_2430) ? _2113 : (isnan(_2113) ? _2430 : min(_2113, _2430));
        float _2771 = isnan(_2768) ? _2770 : (isnan(_2770) ? _2768 : min(_2770, _2768));
        float _2775 = (_2771 * _1998) + _1987;
        float _2776 = (_2771 * _2001) + _1991;
        float _2777 = (_2771 * _2004) + _1995;
        float _2778 = _2771 * 9.9999997473787516355514526367188e-05;
        float _2779 = (-1.0) - _2778;
        float _2781 = _2778 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2777 > _2781) || ((_2777 < _2779) || ((_2776 > _2781) || ((_2776 < _2779) || ((_2775 < _2779) || (_2775 > _2781))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2899 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2777, cbModelParam._m0[17u].z, fma(_2776, cbModelParam._m0[17u].y, _2775 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2777, cbModelParam._m0[18u].z, fma(_2776, cbModelParam._m0[18u].y, _2775 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2777, cbModelParam._m0[19u].z, fma(_2776, cbModelParam._m0[19u].y, _2775 * cbModelParam._m0[19u].x))), _1933);
            frontier_phi_22_47_ladder = _2899.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2899.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2899.x * cbModelParam._m0[1u].z;
        }
        _2023 = frontier_phi_22_47_ladder_2;
        _2025 = frontier_phi_22_47_ladder_1;
        _2027 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2007 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1033, _1034, _1035), _1933);
        _2023 = _2007.x * cbModelParam._m0[1u].z;
        _2025 = _2007.y * cbModelParam._m0[1u].z;
        _2027 = _2007.z * cbModelParam._m0[1u].z;
    }
    float _2040 = (((_1060 * _1009) + _1061) * _1025) * ((cbModelParam._m0[1u].w * (_2023 - _1924)) + _1924);
    float _2042 = (((_1060 * _1011) + _1061) * _1025) * ((cbModelParam._m0[1u].w * (_2025 - _1926)) + _1926);
    float _2044 = (((_1060 * _1012) + _1061) * _1025) * ((cbModelParam._m0[1u].w * (_2027 - _1928)) + _1928);
    float _2047 = fma(_2044, cbSceneParam._m0[89u].z, fma(_2042, cbSceneParam._m0[89u].y, _2040 * cbSceneParam._m0[89u].x));
    float _2050 = fma(_2044, cbSceneParam._m0[90u].z, fma(_2042, cbSceneParam._m0[90u].y, _2040 * cbSceneParam._m0[90u].x));
    float _2053 = fma(_2044, cbSceneParam._m0[91u].z, fma(_2042, cbSceneParam._m0[91u].y, _2040 * cbSceneParam._m0[91u].x));
    float _2087 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2091 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2095 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2099 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2100 = _2087 / _2099;
    float _2101 = _2091 / _2099;
    float _2102 = _2095 / _2099;
    float _2249;
    float _2250;
    float _2251;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2129 = ((uint(_2102 > cbSceneParam._m0[59u].y) + uint(_2102 > cbSceneParam._m0[59u].x)) + uint(_2102 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2130 = _2129 + 43u;
        uint _2138 = _2129 + 44u;
        uint _2146 = _2129 + 45u;
        uint _2154 = _2129 + 46u;
        float _2165 = fma(_2099, cbSceneParam._m0[_2130].w, fma(_2095, cbSceneParam._m0[_2130].z, fma(_2091, cbSceneParam._m0[_2130].y, _2087 * cbSceneParam._m0[_2130].x)));
        float _2169 = fma(_2099, cbSceneParam._m0[_2138].w, fma(_2095, cbSceneParam._m0[_2138].z, fma(_2091, cbSceneParam._m0[_2138].y, _2087 * cbSceneParam._m0[_2138].x)));
        float _2177 = fma(_2099, cbSceneParam._m0[_2154].w, fma(_2095, cbSceneParam._m0[_2154].z, fma(_2091, cbSceneParam._m0[_2154].y, _2087 * cbSceneParam._m0[_2154].x)));
        float _2182 = cbSceneParam._m0[33u].z * _2177;
        float _2184 = cbSceneParam._m0[33u].w * _2177;
        float _2187 = fma(_2099, cbSceneParam._m0[_2146].w, fma(_2095, cbSceneParam._m0[_2146].z, fma(_2091, cbSceneParam._m0[_2146].y, _2087 * cbSceneParam._m0[_2146].x))) / _2177;
        float _2235 = (cbSceneParam._m0[33u].x - sqrt(((_2101 * _2101) + (_2100 * _2100)) + (_2102 * _2102))) * cbSceneParam._m0[33u].y;
        float _4563 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
        float _2242 = (isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2182 + _2165) / _2177, (_2184 + _2169) / _2177), _2187), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2184 + _2165) / _2177, (_2169 - _2182) / _2177), _2187), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2165 - _2182) / _2177, (_2169 - _2184) / _2177), _2187), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2165 - _2184) / _2177, (_2182 + _2169) / _2177), _2187), 0.0)).x), vec4(0.25)));
        _2249 = 1.0 - (_2242 * cbSceneParam._m0[34u].x);
        _2250 = 1.0 - (_2242 * cbSceneParam._m0[34u].y);
        _2251 = 1.0 - (_2242 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2249 = 1.0;
        _2250 = 1.0;
        _2251 = 1.0;
    }
    float _2315;
    float _2317;
    float _2319;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2303 = fma(_2099, cbSceneParam._m0[63u].w, fma(_2095, cbSceneParam._m0[63u].z, fma(_2091, cbSceneParam._m0[63u].y, _2087 * cbSceneParam._m0[63u].x)));
        float _2304 = fma(_2099, cbSceneParam._m0[60u].w, fma(_2095, cbSceneParam._m0[60u].z, fma(_2091, cbSceneParam._m0[60u].y, _2087 * cbSceneParam._m0[60u].x))) / _2303;
        float _2305 = fma(_2099, cbSceneParam._m0[61u].w, fma(_2095, cbSceneParam._m0[61u].z, fma(_2091, cbSceneParam._m0[61u].y, _2087 * cbSceneParam._m0[61u].x))) / _2303;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2304 >= cbSceneParam._m0[64u].x) && (_2305 >= cbSceneParam._m0[64u].y)) && (_2304 <= cbSceneParam._m0[64u].z)) && (_2305 <= cbSceneParam._m0[64u].w))
        {
            float _2443 = fma(_2099, cbSceneParam._m0[62u].w, fma(_2095, cbSceneParam._m0[62u].z, fma(_2091, cbSceneParam._m0[62u].y, _2087 * cbSceneParam._m0[62u].x))) / _2303;
            float _2447 = isnan(cbSceneParam._m0[41u].w) ? _2443 : (isnan(_2443) ? cbSceneParam._m0[41u].w : max(_2443, cbSceneParam._m0[41u].w));
            float _2490 = (cbSceneParam._m0[33u].x - sqrt(((_2101 * _2101) + (_2100 * _2100)) + (_2102 * _2102))) * cbSceneParam._m0[33u].y;
            float _4579 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
            float _2497 = (isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2304, cbSceneParam._m0[33u].w + _2305), _2447), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2304, _2305 - cbSceneParam._m0[33u].z), _2447), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2304 - cbSceneParam._m0[33u].z, _2305 - cbSceneParam._m0[33u].w), _2447), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2304 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2305), _2447), 0.0)).x), vec4(0.25)));
            float _2501 = 1.0 - (_2497 * cbSceneParam._m0[34u].x);
            float _2502 = 1.0 - (_2497 * cbSceneParam._m0[34u].y);
            float _2503 = 1.0 - (_2497 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2503) ? _2251 : (isnan(_2251) ? _2503 : min(_2251, _2503));
            frontier_phi_34_33_ladder_1 = isnan(_2502) ? _2250 : (isnan(_2250) ? _2502 : min(_2250, _2502));
            frontier_phi_34_33_ladder_2 = isnan(_2501) ? _2249 : (isnan(_2249) ? _2501 : min(_2249, _2501));
        }
        else
        {
            frontier_phi_34_33_ladder = _2251;
            frontier_phi_34_33_ladder_1 = _2250;
            frontier_phi_34_33_ladder_2 = _2249;
        }
        _2315 = frontier_phi_34_33_ladder_2;
        _2317 = frontier_phi_34_33_ladder_1;
        _2319 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2315 = _2249;
        _2317 = _2250;
        _2319 = _2251;
    }
    uvec4 _2324 = floatBitsToUint(cbInstanceData._m0[_261 + 5u]);
    uint _2326 = _2324.x * 14u;
    uint _2327 = _2326 + 13u;
    float _2334 = _1025 + (-1.0);
    float _2339 = (cbLight._m0[_2327].x * _2334) + 1.0;
    float _2340 = (cbLight._m0[_2327].y * _2334) + 1.0;
    float _2341 = (cbLight._m0[_2327].z * _2334) + 1.0;
    float _2342 = (cbLight._m0[_2327].w * _2334) + 1.0;
    uint _2343 = _2326 + 5u;
    float _2349 = isnan(1.0) ? _2340 : (isnan(_2340) ? 1.0 : min(_2340, 1.0));
    uint _2353 = _2326 + 4u;
    float _2362 = isnan(1.0) ? _2339 : (isnan(_2339) ? 1.0 : min(_2339, 1.0));
    uint _2366 = _2326 | 1u;
    float _2377 = dot(vec3(cbLight._m0[_2326].xyz), vec3(_860, _861, _862));
    float _2380 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_860, _861, _862));
    float _4615 = isnan(0.0) ? _2377 : (isnan(_2377) ? 0.0 : max(_2377, 0.0));
    float _4626 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
    float _2385 = (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0))) * 0.3183098733425140380859375;
    float _2387 = (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))) * 0.3183098733425140380859375;
    float _2394 = ((cbLight._m0[_2343].x * _2349) * _2387) + (((cbLight._m0[_2353].x * _2315) * _2362) * _2385);
    float _2395 = ((_2349 * cbLight._m0[_2343].y) * _2387) + (((cbLight._m0[_2353].y * _2317) * _2362) * _2385);
    float _2396 = ((_2349 * cbLight._m0[_2343].z) * _2387) + (((cbLight._m0[_2353].z * _2319) * _2362) * _2385);
    uvec4 _2400 = floatBitsToUint(cbLight._m0[_2326 + 12u]);
    bool _2402 = _2400.x == 0u;
    float _2504;
    float _2506;
    float _2508;
    if (_2402)
    {
        _2504 = _2394;
        _2506 = _2395;
        _2508 = _2396;
    }
    else
    {
        uint _2512 = _2326 + 6u;
        float _2528 = (dot(vec3(cbLight._m0[_2326 + 2u].xyz), vec3(_860, _861, _862)) * 0.5) + 0.5;
        float _2529 = _2528 * _2528;
        float _4637 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
        float _2530 = isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0));
        float _2531 = isnan(1.0) ? _2341 : (isnan(_2341) ? 1.0 : min(_2341, 1.0));
        _2504 = (((cbLight._m0[_2512].x * 0.3183098733425140380859375) * _2530) * _2531) + _2394;
        _2506 = (((cbLight._m0[_2512].y * 0.3183098733425140380859375) * _2530) * _2531) + _2395;
        _2508 = (((cbLight._m0[_2512].z * 0.3183098733425140380859375) * _2530) * _2531) + _2396;
    }
    bool _2511 = _2400.y == 0u;
    float _2566;
    float _2568;
    float _2570;
    if (_2511)
    {
        _2566 = _2504;
        _2568 = _2506;
        _2570 = _2508;
    }
    else
    {
        uint _2739 = _2326 + 7u;
        float _2755 = (dot(vec3(cbLight._m0[_2326 + 3u].xyz), vec3(_860, _861, _862)) * 0.5) + 0.5;
        float _2756 = _2755 * _2755;
        float _4653 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
        float _2757 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
        float _2758 = isnan(1.0) ? _2342 : (isnan(_2342) ? 1.0 : min(_2342, 1.0));
        _2566 = (((cbLight._m0[_2739].x * 0.3183098733425140380859375) * _2757) * _2758) + _2504;
        _2568 = (((cbLight._m0[_2739].y * 0.3183098733425140380859375) * _2757) * _2758) + _2506;
        _2570 = (((cbLight._m0[_2739].z * 0.3183098733425140380859375) * _2757) * _2758) + _2508;
    }
    uint _2573 = _2326 + 8u;
    float _2586 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2326].w)) * _863) * 0.949999988079071044921875);
    float _2587 = _2586 * _2586;
    float _2588 = cbLight._m0[_2326].x + _939;
    float _2589 = cbLight._m0[_2326].y + _940;
    float _2590 = cbLight._m0[_2326].z + _941;
    float _2594 = inversesqrt(dot(vec3(_2588, _2589, _2590), vec3(_2588, _2589, _2590)));
    float _2595 = _2594 * _2588;
    float _2596 = _2594 * _2589;
    float _2597 = _2594 * _2590;
    float _2598 = dot(vec3(_860, _861, _862), vec3(cbLight._m0[_2326].xyz));
    float _4669 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2601 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
    float _4680 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _2602 = isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0));
    float _2603 = dot(vec3(_860, _861, _862), vec3(_2595, _2596, _2597));
    float _4691 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
    float _2606 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
    float _2607 = dot(vec3(cbLight._m0[_2326].xyz), vec3(_2595, _2596, _2597));
    float _4702 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2611 = _2587 * _2587;
    float _2615 = ((_2606 * _2606) * (_2611 + (-1.0))) + 1.0;
    float _2623 = exp2(log2(1.0 - (isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0)))) * 5.0);
    float _2624 = 0.959999978542327880859375 - _1006;
    float _2626 = 0.959999978542327880859375 - _1007;
    float _2627 = 0.959999978542327880859375 - _1008;
    float _2634 = 1.0 - _2587;
    float _2645 = (0.5 / (((_2602 * ((_2601 * _2634) + _2587)) + 9.9999999392252902907785028219223e-09) + (((_2602 * _2634) + _2587) * _2601))) * _2601;
    float _4713 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
    float _2647 = (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0))) * (_2611 / ((_2615 * _2615) * 3.141590118408203125));
    uint _2661 = _2326 + 9u;
    float _2672 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2366].w)) * _863) * 0.949999988079071044921875);
    float _2673 = _2672 * _2672;
    float _2674 = cbLight._m0[_2366].x + _939;
    float _2675 = cbLight._m0[_2366].y + _940;
    float _2676 = cbLight._m0[_2366].z + _941;
    float _2680 = inversesqrt(dot(vec3(_2674, _2675, _2676), vec3(_2674, _2675, _2676)));
    float _2681 = _2680 * _2674;
    float _2682 = _2680 * _2675;
    float _2683 = _2680 * _2676;
    float _2684 = dot(vec3(_860, _861, _862), vec3(cbLight._m0[_2366].xyz));
    float _4724 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
    float _2687 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2688 = dot(vec3(_860, _861, _862), vec3(_2681, _2682, _2683));
    float _4735 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
    float _2691 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _2692 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_2681, _2682, _2683));
    float _4746 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
    float _2696 = _2673 * _2673;
    float _2700 = ((_2691 * _2691) * (_2696 + (-1.0))) + 1.0;
    float _2707 = exp2(log2(1.0 - (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0)))) * 5.0);
    float _2714 = 1.0 - _2673;
    float _2724 = (0.5 / (((_2602 * ((_2687 * _2714) + _2673)) + 9.9999999392252902907785028219223e-09) + (((_2602 * _2714) + _2673) * _2687))) * _2687;
    float _4757 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
    float _2726 = (isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0))) * (_2696 / ((_2700 * _2700) * 3.141590118408203125));
    float _2736 = (((((_2707 * _2624) + _1009) * cbLight._m0[_2661].x) * _2726) * _2349) + ((((cbLight._m0[_2573].x * _2315) * ((_2623 * _2624) + _1009)) * _2647) * _2362);
    float _2737 = (((((_2707 * _2626) + _1011) * cbLight._m0[_2661].y) * _2726) * _2349) + ((((cbLight._m0[_2573].y * _2317) * ((_2623 * _2626) + _1011)) * _2647) * _2362);
    float _2738 = (((((_2707 * _2627) + _1012) * cbLight._m0[_2661].z) * _2726) * _2349) + ((((cbLight._m0[_2573].z * _2319) * ((_2623 * _2627) + _1012)) * _2647) * _2362);
    float _2794;
    float _2796;
    float _2798;
    if (_2402)
    {
        _2794 = _2736;
        _2796 = _2737;
        _2798 = _2738;
    }
    else
    {
        uint _2800 = _2326 + 2u;
        uint _2804 = _2326 + 10u;
        float _2818 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2800].w)) * _863) * 0.949999988079071044921875);
        float _2819 = _2818 * _2818;
        float _2820 = cbLight._m0[_2800].x + _939;
        float _2821 = cbLight._m0[_2800].y + _940;
        float _2822 = cbLight._m0[_2800].z + _941;
        float _2826 = inversesqrt(dot(vec3(_2820, _2821, _2822), vec3(_2820, _2821, _2822)));
        float _2827 = _2826 * _2820;
        float _2828 = _2826 * _2821;
        float _2829 = _2826 * _2822;
        float _2830 = dot(vec3(_860, _861, _862), vec3(cbLight._m0[_2800].xyz));
        float _4768 = isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : max(_2830, 0.0));
        float _2833 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
        float _2834 = dot(vec3(_860, _861, _862), vec3(_2827, _2828, _2829));
        float _4779 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
        float _2837 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
        float _2838 = dot(vec3(cbLight._m0[_2800].xyz), vec3(_2827, _2828, _2829));
        float _4790 = isnan(0.0) ? _2838 : (isnan(_2838) ? 0.0 : max(_2838, 0.0));
        float _2842 = _2819 * _2819;
        float _2846 = ((_2837 * _2837) * (_2842 + (-1.0))) + 1.0;
        float _2853 = exp2(log2(1.0 - (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) * 5.0);
        float _2860 = 1.0 - _2819;
        float _2870 = (0.5 / (((_2602 * ((_2833 * _2860) + _2819)) + 9.9999999392252902907785028219223e-09) + (((_2602 * _2860) + _2819) * _2833))) * _2833;
        float _4801 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2872 = (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2842 / ((_2846 * _2846) * 3.141590118408203125));
        float _2873 = isnan(1.0) ? _2341 : (isnan(_2341) ? 1.0 : min(_2341, 1.0));
        _2794 = (((((_2853 * _2624) + _1009) * cbLight._m0[_2804].x) * _2872) * _2873) + _2736;
        _2796 = (((((_2853 * _2626) + _1011) * cbLight._m0[_2804].y) * _2872) * _2873) + _2737;
        _2798 = (((((_2853 * _2627) + _1012) * cbLight._m0[_2804].z) * _2872) * _2873) + _2738;
    }
    float _2904;
    float _2906;
    float _2908;
    if (_2511)
    {
        _2904 = _2794;
        _2906 = _2796;
        _2908 = _2798;
    }
    else
    {
        uint _2915 = _2326 + 3u;
        uint _2919 = _2326 + 11u;
        float _2933 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2915].w)) * _863) * 0.949999988079071044921875);
        float _2934 = _2933 * _2933;
        float _2935 = cbLight._m0[_2915].x + _939;
        float _2936 = cbLight._m0[_2915].y + _940;
        float _2937 = cbLight._m0[_2915].z + _941;
        float _2941 = inversesqrt(dot(vec3(_2935, _2936, _2937), vec3(_2935, _2936, _2937)));
        float _2942 = _2941 * _2935;
        float _2943 = _2941 * _2936;
        float _2944 = _2941 * _2937;
        float _2945 = dot(vec3(_860, _861, _862), vec3(cbLight._m0[_2915].xyz));
        float _4817 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
        float _2948 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
        float _2949 = dot(vec3(_860, _861, _862), vec3(_2942, _2943, _2944));
        float _4828 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
        float _2952 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
        float _2953 = dot(vec3(cbLight._m0[_2915].xyz), vec3(_2942, _2943, _2944));
        float _4839 = isnan(0.0) ? _2953 : (isnan(_2953) ? 0.0 : max(_2953, 0.0));
        float _2957 = _2934 * _2934;
        float _2961 = ((_2952 * _2952) * (_2957 + (-1.0))) + 1.0;
        float _2968 = exp2(log2(1.0 - (isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0)))) * 5.0);
        float _2975 = 1.0 - _2934;
        float _2985 = (0.5 / (((_2602 * ((_2948 * _2975) + _2934)) + 9.9999999392252902907785028219223e-09) + (((_2602 * _2975) + _2934) * _2948))) * _2948;
        float _4850 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
        float _2987 = (isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0))) * (_2957 / ((_2961 * _2961) * 3.141590118408203125));
        float _2988 = isnan(1.0) ? _2342 : (isnan(_2342) ? 1.0 : min(_2342, 1.0));
        _2904 = (((((_2968 * _2624) + _1009) * cbLight._m0[_2919].x) * _2987) * _2988) + _2794;
        _2906 = (((((_2968 * _2626) + _1011) * cbLight._m0[_2919].y) * _2987) * _2988) + _2796;
        _2908 = (((((_2968 * _2627) + _1012) * cbLight._m0[_2919].z) * _2987) * _2988) + _2798;
    }
    float _3054;
    float _3056;
    float _3058;
    float _3060;
    float _3062;
    float _3064;
    if (_2324.y == 0u)
    {
        uvec4 _3009 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3010 = _3009.x;
        uint _3021 = uint((float(_3009.y) * floor(float(uint(cbSceneParam._m0[85u].y * _948) / _3010))) + floor(float(uint(cbSceneParam._m0[85u].x * _947) / _3010)));
        float _3031 = (log2(_2102 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3032 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
        uint _3035 = uint(isnan(14.0) ? _3032 : (isnan(_3032) ? 14.0 : min(_3032, 14.0)));
        uvec4 _3040 = texelFetch(g_lightClusterGridBuffer, int(((_3035 << 2u) + (_3021 << 6u)) >> 2u));
        uint _3041 = _3040.x;
        uint _3042 = _3009.z;
        float _3121;
        float _3123;
        float _3125;
        float _3127;
        float _3129;
        float _3131;
        if (((((1u << ((_3042 >> 4u) & 15u)) + 4294967295u) & _3041) == 0u) || ((_3042 & 240u) == 0u))
        {
            _3121 = 0.0;
            _3123 = 0.0;
            _3125 = 0.0;
            _3127 = 0.0;
            _3129 = 0.0;
            _3131 = 0.0;
        }
        else
        {
            float _3122;
            float _3124;
            float _3126;
            float _3128;
            float _3130;
            float _3132;
            float _3266 = 0.0;
            float _3267 = 0.0;
            float _3268 = 0.0;
            float _3269 = 0.0;
            float _3270 = 0.0;
            float _3271 = 0.0;
            uint _3272 = 0u;
            uint _3281;
            bool _3282;
            for (;;)
            {
                _3281 = texelFetch(g_lightClassification, int((((_3035 << 5u) + (_3021 << 9u)) + (_3272 << 2u)) >> 2u)).x;
                _3282 = _3281 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3282)
                {
                    frontier_phi_66_pred = _3271;
                    frontier_phi_66_pred_1 = _3270;
                    frontier_phi_66_pred_2 = _3269;
                    frontier_phi_66_pred_3 = _3268;
                    frontier_phi_66_pred_4 = _3267;
                    frontier_phi_66_pred_5 = _3266;
                }
                else
                {
                    float _3390;
                    float _3391;
                    float _3392;
                    float _3393;
                    float _3394;
                    float _3395;
                    uint _3396;
                    _3390 = _3266;
                    _3391 = _3267;
                    _3392 = _3268;
                    _3393 = _3269;
                    _3394 = _3270;
                    _3395 = _3271;
                    _3396 = _3281;
                    float _3322;
                    float _3323;
                    float _3324;
                    float _3325;
                    float _3326;
                    float _3327;
                    for (;;)
                    {
                        uint _3400 = uint(findLSB(_3396)) + (_3272 << 5u);
                        uint _3397 = (_3396 + 4294967295u) & _3396;
                        uint _3402 = _3400 * 48u;
                        vec4 _3416 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3402)).x, texelFetch(g_PointLightRenderingBuffer, int(_3402 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3402 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3402 + 3u)).x));
                        uint _3422 = (_3400 * 48u) + 4u;
                        vec4 _3435 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3422)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 3u)).x));
                        uint _3441 = (_3400 * 48u) + 8u;
                        vec3 _3452 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3441)).x, texelFetch(g_PointLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3441 + 2u)).x));
                        float _3456 = _3416.x - _2100;
                        float _3457 = _3416.y - _2101;
                        float _3458 = _3416.z - _2102;
                        float _3459 = dot(vec3(_3456, _3457, _3458), vec3(_3456, _3457, _3458));
                        float _3462 = inversesqrt(_3459);
                        float _3463 = _3462 * _3456;
                        float _3464 = _3462 * _3457;
                        float _3465 = _3462 * _3458;
                        float _3466 = dot(vec3(_966, _969, _972), vec3(_3463, _3464, _3465));
                        float _3471 = 1.0 - (_3459 * _3416.w);
                        float _4876 = isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0));
                        float _3472 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
                        float _3473 = sqrt(_3459) * _3435.w;
                        float _3476 = 1.39999997615814208984375 / (_3473 + 1.39999997615814208984375);
                        float _3477 = _3476 * _3476;
                        float _3480 = ((1.0 - _3477) * _3466) + _3477;
                        float _3483 = _3473 * _3473;
                        float _3487 = ((isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0))) * _3472) / ((_3483 * 0.699999988079071044921875) + 1.0);
                        float _3491 = (-0.0) - _2100;
                        float _3492 = (-0.0) - _2101;
                        float _3493 = (-0.0) - _2102;
                        float _3497 = inversesqrt(dot(vec3(_3491, _3492, _3493), vec3(_3491, _3492, _3493)));
                        float _3498 = _3497 * _3491;
                        float _3499 = _3497 * _3492;
                        float _3500 = _3497 * _3493;
                        float _3507 = exp2(log2(1.0 / ((_3483 * 3.5) + 5.0)) * 0.25);
                        float _3508 = 1.0 - _1041;
                        float _3515 = sqrt(1.0 - ((1.0 - (_3508 * _3508)) * (1.0 - (_3507 * _3507))));
                        float _3516 = _3515 * _3515;
                        float _3517 = _3516 * _3516;
                        float _3518 = _3498 + _3463;
                        float _3519 = _3499 + _3464;
                        float _3520 = _3500 + _3465;
                        float _3524 = inversesqrt(dot(vec3(_3518, _3519, _3520), vec3(_3518, _3519, _3520)));
                        float _3528 = dot(vec3(_966, _969, _972), vec3(_3498, _3499, _3500));
                        float _4892 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
                        float _3531 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
                        float _3532 = dot(vec3(_966, _969, _972), vec3(_3524 * _3518, _3524 * _3519, _3524 * _3520));
                        float _4903 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0));
                        float _3535 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
                        float _3539 = ((_3535 * _3535) * (_3517 + (-1.0))) + 1.0;
                        float _3540 = _3476 * _3516;
                        float _3541 = _3540 * _3540;
                        float _3544 = ((1.0 - _3541) * _3466) + _3541;
                        float _4914 = isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0));
                        float _3545 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
                        float _3546 = 1.0 - _3516;
                        float _3556 = (0.5 / (((_3545 * ((_3531 * _3546) + _3516)) + 9.9999999392252902907785028219223e-09) + (((_3545 * _3546) + _3516) * _3531))) * _3545;
                        float _4925 = isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0));
                        float _3567 = (((_3517 * 3.1415927410125732421875) * (isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0)))) / ((_3539 * _3539) * ((_3483 * 2.1991131305694580078125) + 3.141590118408203125))) * _3472;
                        _3325 = (_3487 * _3435.x) + _3393;
                        _3326 = (_3487 * _3435.y) + _3394;
                        _3327 = (_3487 * _3435.z) + _3395;
                        _3322 = (_3567 * _3452.x) + _3390;
                        _3323 = (_3567 * _3452.y) + _3391;
                        _3324 = (_3567 * _3452.z) + _3392;
                        if (_3397 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3390 = _3322;
                            _3391 = _3323;
                            _3392 = _3324;
                            _3393 = _3325;
                            _3394 = _3326;
                            _3395 = _3327;
                            _3396 = _3397;
                        }
                    }
                    frontier_phi_66_pred = _3327;
                    frontier_phi_66_pred_1 = _3326;
                    frontier_phi_66_pred_2 = _3325;
                    frontier_phi_66_pred_3 = _3324;
                    frontier_phi_66_pred_4 = _3323;
                    frontier_phi_66_pred_5 = _3322;
                }
                _3132 = frontier_phi_66_pred;
                _3130 = frontier_phi_66_pred_1;
                _3128 = frontier_phi_66_pred_2;
                _3126 = frontier_phi_66_pred_3;
                _3124 = frontier_phi_66_pred_4;
                _3122 = frontier_phi_66_pred_5;
                uint _3273 = _3272 + 1u;
                if (_3273 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3266 = _3122;
                    _3267 = _3124;
                    _3268 = _3126;
                    _3269 = _3128;
                    _3270 = _3130;
                    _3271 = _3132;
                    _3272 = _3273;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3121 = _3122;
            _3123 = _3124;
            _3125 = _3126;
            _3127 = _3128;
            _3129 = _3130;
            _3131 = _3132;
        }
        uvec4 _3135 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3136 = _3135.z;
        uint _3138 = (_3136 >> 8u) & 15u;
        float _3234;
        float _3236;
        float _3238;
        float _3240;
        float _3242;
        float _3244;
        if (((4294967295u << _3138) & _3041) == 0u)
        {
            _3234 = _3121;
            _3236 = _3123;
            _3238 = _3125;
            _3240 = _3127;
            _3242 = _3129;
            _3244 = _3131;
        }
        else
        {
            float _3259 = inversesqrt(dot(vec3(_2100, _2101, _2102), vec3(_2100, _2101, _2102)));
            float _3260 = _3259 * _2100;
            float _3261 = _3259 * _2101;
            float _3262 = _3259 * _2102;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3138 < ((_3136 >> 12u) & 15u))
            {
                float _3235;
                float _3237;
                float _3239;
                float _3241;
                float _3243;
                float _3245;
                float _3373 = _3121;
                float _3374 = _3123;
                float _3375 = _3125;
                float _3376 = _3127;
                float _3377 = _3129;
                float _3378 = _3131;
                uint _3379 = _3138;
                uint _3388;
                bool _3389;
                for (;;)
                {
                    _3388 = texelFetch(g_lightClassification, int((((_3035 << 5u) + (_3021 << 9u)) + (_3379 << 2u)) >> 2u)).x;
                    _3389 = _3388 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3389)
                    {
                        frontier_phi_72_pred = _3378;
                        frontier_phi_72_pred_1 = _3377;
                        frontier_phi_72_pred_2 = _3376;
                        frontier_phi_72_pred_3 = _3375;
                        frontier_phi_72_pred_4 = _3374;
                        frontier_phi_72_pred_5 = _3373;
                    }
                    else
                    {
                        float _3572;
                        float _3573;
                        float _3574;
                        float _3575;
                        float _3576;
                        float _3577;
                        float _3865;
                        float _3866;
                        float _3867;
                        float _3868;
                        float _3869;
                        float _3870;
                        float _3585 = _3373;
                        float _3586 = _3374;
                        float _3587 = _3375;
                        float _3588 = _3376;
                        float _3589 = _3377;
                        float _3590 = _3378;
                        uint _3591 = _3388;
                        uint _3592;
                        vec4 _3617;
                        float _3618;
                        vec4 _3633;
                        vec3 _3645;
                        vec4 _3660;
                        vec4 _3675;
                        float _3721;
                        bool _3722;
                        for (;;)
                        {
                            uint _3602 = ((_3379 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3591));
                            _3592 = (_3591 + 4294967295u) & _3591;
                            uint _3604 = _3602 * 40u;
                            _3617 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3604)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3604 + 3u)).x));
                            _3618 = _3617.w;
                            uint _3620 = (_3602 * 40u) + 4u;
                            _3633 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3620)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 3u)).x));
                            uint _3635 = (_3602 * 40u) + 8u;
                            _3645 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3635)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 2u)).x));
                            uint _3647 = (_3602 * 40u) + 16u;
                            _3660 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3647)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 3u)).x));
                            uint _3662 = (_3602 * 40u) + 20u;
                            _3675 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 3u)).x));
                            uint _3677 = (_3602 * 40u) + 24u;
                            vec4 _3690 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 3u)).x));
                            uint _3696 = (_3602 * 40u) + 28u;
                            vec4 _3709 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3696)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 3u)).x));
                            _3721 = fma(_2102, _3709.z, fma(_2101, _3709.y, _3709.x * _2100)) + _3709.w;
                            _3722 = !((fma(_2102, _3690.z, fma(_2101, _3690.y, _3690.x * _2100)) + _3690.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3722)
                            {
                                float _3749 = _3617.x - _2100;
                                float _3750 = _3617.y - _2101;
                                float _3751 = _3617.z - _2102;
                                float _3752 = dot(vec3(_3749, _3750, _3751), vec3(_3749, _3750, _3751));
                                float _3755 = inversesqrt(_3752);
                                float _3756 = _3755 * _3749;
                                float _3757 = _3755 * _3750;
                                float _3758 = _3755 * _3751;
                                float _3762 = 1.0 - (_3752 / (_3618 * _3618));
                                float _4936 = isnan(0.0) ? _3762 : (isnan(_3762) ? 0.0 : max(_3762, 0.0));
                                float _3763 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                                float _3767 = sqrt(_3752) * _3633.w;
                                float _3769 = 1.39999997615814208984375 / (_3767 + 1.39999997615814208984375);
                                float _3770 = _3769 * _3769;
                                float _3773 = ((1.0 - _3770) * dot(vec3(_3756, _3757, _3758), vec3(_966, _969, _972))) + _3770;
                                float _3776 = _3767 * _3767;
                                float _3780 = (fma(_2102, _3660.z, fma(_2101, _3660.y, _3660.x * _2100)) + _3660.w) / _3721;
                                float _3781 = (fma(_2102, _3675.z, fma(_2101, _3675.y, _3675.x * _2100)) + _3675.w) / _3721;
                                float _3785 = 1.0 - dot(vec2(_3780, _3781), vec2(_3780, _3781));
                                float _4952 = isnan(0.0) ? _3785 : (isnan(_3785) ? 0.0 : max(_3785, 0.0));
                                float _3786 = isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0));
                                float _3787 = _3786 * (((isnan(0.0) ? _3773 : (isnan(_3773) ? 0.0 : max(_3773, 0.0))) * _3763) / ((_3776 * 0.699999988079071044921875) + 1.0));
                                float _3799 = exp2(log2(1.0 / ((_3776 * 3.5) + 5.0)) * 0.25);
                                float _3800 = 1.0 - _1041;
                                float _3807 = sqrt(1.0 - ((1.0 - (_3800 * _3800)) * (1.0 - (_3799 * _3799))));
                                float _3808 = _3807 * _3807;
                                float _3809 = _3808 * _3808;
                                float _3810 = _3756 - _3260;
                                float _3811 = _3757 - _3261;
                                float _3812 = _3758 - _3262;
                                float _3816 = inversesqrt(dot(vec3(_3810, _3811, _3812), vec3(_3810, _3811, _3812)));
                                float _3820 = dot(vec3(_966, _969, _972), vec3((-0.0) - _3260, (-0.0) - _3261, (-0.0) - _3262));
                                float _4963 = isnan(0.0) ? _3820 : (isnan(_3820) ? 0.0 : max(_3820, 0.0));
                                float _3823 = isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0));
                                float _3824 = dot(vec3(_966, _969, _972), vec3(_3816 * _3810, _3816 * _3811, _3816 * _3812));
                                float _4974 = isnan(0.0) ? _3824 : (isnan(_3824) ? 0.0 : max(_3824, 0.0));
                                float _3827 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
                                float _3831 = ((_3827 * _3827) * (_3809 + (-1.0))) + 1.0;
                                float _3832 = _3769 * _3808;
                                float _3833 = _3832 * _3832;
                                float _3839 = ((1.0 - _3833) * dot(vec3(_966, _969, _972), vec3(_3756, _3757, _3758))) + _3833;
                                float _4985 = isnan(0.0) ? _3839 : (isnan(_3839) ? 0.0 : max(_3839, 0.0));
                                float _3840 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
                                float _3841 = 1.0 - _3808;
                                float _3851 = (0.5 / (((_3840 * ((_3823 * _3841) + _3808)) + 9.9999999392252902907785028219223e-09) + (((_3840 * _3841) + _3808) * _3823))) * _3840;
                                float _4996 = isnan(0.0) ? _3851 : (isnan(_3851) ? 0.0 : max(_3851, 0.0));
                                float _3861 = (_3786 * _3763) * (((_3809 * 3.1415927410125732421875) * (isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0)))) / ((_3831 * _3831) * ((_3776 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3787 * _3633.y;
                                frontier_phi_78_pred_1 = _3787 * _3633.x;
                                frontier_phi_78_pred_2 = _3861 * _3645.z;
                                frontier_phi_78_pred_3 = _3861 * _3645.y;
                                frontier_phi_78_pred_4 = _3861 * _3645.x;
                                frontier_phi_78_pred_5 = _3787 * _3633.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3869 = frontier_phi_78_pred;
                            _3868 = frontier_phi_78_pred_1;
                            _3867 = frontier_phi_78_pred_2;
                            _3866 = frontier_phi_78_pred_3;
                            _3865 = frontier_phi_78_pred_4;
                            _3870 = frontier_phi_78_pred_5;
                            _3575 = _3868 + _3588;
                            _3576 = _3869 + _3589;
                            _3577 = _3870 + _3590;
                            _3572 = _3865 + _3585;
                            _3573 = _3866 + _3586;
                            _3574 = _3867 + _3587;
                            if (_3592 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3585 = _3572;
                                _3586 = _3573;
                                _3587 = _3574;
                                _3588 = _3575;
                                _3589 = _3576;
                                _3590 = _3577;
                                _3591 = _3592;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3577;
                        frontier_phi_72_pred_1 = _3576;
                        frontier_phi_72_pred_2 = _3575;
                        frontier_phi_72_pred_3 = _3574;
                        frontier_phi_72_pred_4 = _3573;
                        frontier_phi_72_pred_5 = _3572;
                    }
                    _3245 = frontier_phi_72_pred;
                    _3243 = frontier_phi_72_pred_1;
                    _3241 = frontier_phi_72_pred_2;
                    _3239 = frontier_phi_72_pred_3;
                    _3237 = frontier_phi_72_pred_4;
                    _3235 = frontier_phi_72_pred_5;
                    uint _3380 = _3379 + 1u;
                    if (_3380 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3373 = _3235;
                        _3374 = _3237;
                        _3375 = _3239;
                        _3376 = _3241;
                        _3377 = _3243;
                        _3378 = _3245;
                        _3379 = _3380;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3245;
                frontier_phi_60_61_ladder_1 = _3243;
                frontier_phi_60_61_ladder_2 = _3239;
                frontier_phi_60_61_ladder_3 = _3237;
                frontier_phi_60_61_ladder_4 = _3235;
                frontier_phi_60_61_ladder_5 = _3241;
            }
            else
            {
                frontier_phi_60_61_ladder = _3131;
                frontier_phi_60_61_ladder_1 = _3129;
                frontier_phi_60_61_ladder_2 = _3125;
                frontier_phi_60_61_ladder_3 = _3123;
                frontier_phi_60_61_ladder_4 = _3121;
                frontier_phi_60_61_ladder_5 = _3127;
            }
            _3234 = frontier_phi_60_61_ladder_4;
            _3236 = frontier_phi_60_61_ladder_3;
            _3238 = frontier_phi_60_61_ladder_2;
            _3240 = frontier_phi_60_61_ladder_5;
            _3242 = frontier_phi_60_61_ladder_1;
            _3244 = frontier_phi_60_61_ladder;
        }
        float _3249 = isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0));
        _3054 = (_3249 * _3240) + _2566;
        _3056 = (_3249 * _3242) + _2568;
        _3058 = (_3249 * _3244) + _2570;
        _3060 = ((_3234 * _1009) * _3249) + _2904;
        _3062 = ((_3236 * _1011) * _3249) + _2906;
        _3064 = ((_3238 * _1012) * _3249) + _2908;
    }
    else
    {
        _3054 = _2566;
        _3056 = _2568;
        _3058 = _2570;
        _3060 = _2904;
        _3062 = _2906;
        _3064 = _2908;
    }
    float _5012 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _5023 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _5034 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    uint _3084 = _261 + 6u;
    float _3092 = _947 / cbSceneParam._m0[86u].x;
    float _3093 = _948 / cbSceneParam._m0[86u].y;
    vec4 _3107 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3092, _3093, (log2((isnan(cbSceneParam._m0[77u].w) ? _882 : (isnan(_882) ? cbSceneParam._m0[77u].w : min(_882, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3109 = _3107.x;
    float _3110 = _3107.y;
    float _3111 = _3107.z;
    float _3112 = _3107.w;
    float _3184;
    float _3186;
    float _3188;
    float _3190;
    if (_882 > cbSceneParam._m0[78u].w)
    {
        float _3146 = isnan(_882) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _882 : min(cbSceneParam._m0[80u].w, _882));
        float _3147 = _3146 / _882;
        float _3158 = _3147 * _932;
        float _3159 = _933 * _3147;
        float _3160 = (-0.0) - _3159;
        float _3162 = _3147 * _934;
        float _3164 = (cbSceneParam._m0[77u].w * _3160) / _3146;
        float _3165 = _3164 + cbSceneParam._m0[79u].w;
        float _3166 = cbSceneParam._m0[79u].w - _3159;
        float _3172 = sqrt(((_3158 * _3158) + (_3159 * _3159)) + (_3162 * _3162));
        float _3175 = (1.0 - (cbSceneParam._m0[77u].w / _3146)) * _3172;
        float _3180 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3182 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3335;
        if (abs((_3160 - _3164) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3335 = ((((_3165 > 0.0) ? exp2(_3180 * _3165) : (2.0 - exp2(_3182 * _3165))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3175;
        }
        else
        {
            float _3295 = 1.0 / cbSceneParam._m0[80u].x;
            float _3296 = isnan(_3166) ? _3165 : (isnan(_3165) ? _3166 : max(_3165, _3166));
            float _3297 = isnan(_3166) ? _3165 : (isnan(_3165) ? _3166 : min(_3165, _3166));
            float _3306 = isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : min(_3296, 0.0));
            float _3307 = isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : min(_3297, 0.0));
            _3335 = ((abs(_3172 / _3160) * cbSceneParam._m0[80u].y) * ((((_3306 - _3307) * 2.0) - ((exp2(_3180 * (isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0)))) - exp2(_3180 * (isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : max(_3297, 0.0))))) * _3295)) - ((exp2(_3182 * _3306) - exp2(_3182 * _3307)) * _3295))) + (_3175 * cbSceneParam._m0[80u].z);
        }
        vec4 _3337 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3092, _3093, 1.0), 0.0);
        float _3346 = exp2((_3335 * (-1.44269502162933349609375)) * (1.0 - _3337.w));
        float _3347 = log2(_3346);
        float _3363 = log2(_3112);
        _3184 = (exp2(_3363 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3347 * cbSceneParam._m0[78u].x)) * _3337.x) / cbSceneParam._m0[78u].x)) + _3109;
        _3186 = (exp2(_3363 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3347 * cbSceneParam._m0[78u].y)) * _3337.y) / cbSceneParam._m0[78u].y)) + _3110;
        _3188 = (exp2(_3363 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3347 * cbSceneParam._m0[78u].z)) * _3337.z) / cbSceneParam._m0[78u].z)) + _3111;
        _3190 = _3346 * _3112;
    }
    else
    {
        _3184 = _3109;
        _3186 = _3110;
        _3188 = _3111;
        _3190 = _3112;
    }
    float _3202 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3203 = _3202 == 3.0;
    float _3204 = log2(_3190);
    float _3211 = exp2(_3204 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0))) * (_3054 + ((isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0))) * _1025))) + ((_3060 + ((isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0))) * _1832)) * cbPerFrame._m0[3u].x));
    float _3212 = exp2(_3204 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0))) * (_3056 + ((isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0))) * _1025))) + ((_3062 + ((isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0))) * _1832)) * cbPerFrame._m0[3u].x));
    float _3213 = exp2(_3204 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0))) * (_3058 + ((isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0))) * _1025))) + ((_3064 + ((isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0))) * _1832)) * cbPerFrame._m0[3u].x));
    float _3222 = (_3202 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3222 * (_3203 ? _3211 : (_3211 + (cbSceneParam._m0[72u].w * _3184)));
    SV_Target.y = _3222 * (_3203 ? _3212 : (_3212 + (cbSceneParam._m0[72u].w * _3186)));
    SV_Target.z = _3222 * (_3203 ? _3213 : (_3213 + (cbSceneParam._m0[72u].w * _3188)));
    SV_Target.w = cbInstanceData._m0[_3084].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3084].w;
}


