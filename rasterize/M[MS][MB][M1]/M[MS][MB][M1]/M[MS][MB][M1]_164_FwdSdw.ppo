#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1462;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _247 = _246 * _238;
    float _248 = _246 * _239;
    float _249 = _246 * _240;
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = _253 * NORMAL.x;
    float _255 = _253 * NORMAL.y;
    float _256 = _253 * NORMAL.z;
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _261 = _260 * TANGENT.x;
    float _262 = _260 * TANGENT.y;
    float _263 = _260 * TANGENT.z;
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _275 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4069 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _4080 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4091 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _290 = _285 + 1u;
    uint _294 = _285 + 2u;
    float _303 = sqrt(((cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x) + (cbInstanceData._m0[_285].x * cbInstanceData._m0[_285].x)) + (cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x));
    float _304 = _303 * TEXCOORD.z;
    float _305 = _303 * TEXCOORD.w;
    vec4 _318 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _304) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _305) + cbTextureTilingScale._m0[13u].w));
    vec4 _342 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _347 = _342.x * cbMtdParam._m0[11u].x;
    float _348 = _342.y * cbMtdParam._m0[11u].y;
    float _349 = _342.z * cbMtdParam._m0[11u].z;
    vec4 _368 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _304) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _305) + cbTextureTilingScale._m0[5u].w));
    vec4 _404 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _406 = _404.x;
    float _418 = dot(vec4(_406, _404.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _435 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_406 - _418) * cbMtdParam._m0[24u].y) + _418) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4102 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _436 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _443 = (_436 * ((_368.x * cbMtdParam._m0[12u].x) - _347)) + _347;
    float _444 = (_436 * ((_368.y * cbMtdParam._m0[12u].y) - _348)) + _348;
    float _445 = (_436 * ((_368.z * cbMtdParam._m0[12u].z) - _349)) + _349;
    float _449 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _318.x) * _443;
    float _452 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _318.y) * _444;
    float _455 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _318.z) * _445;
    float _462 = ((_443 - _449) * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) + _449;
    float _463 = ((_444 - _452) * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) + _452;
    float _464 = ((_445 - _455) * (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0)))) + _455;
    vec4 _483 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _304) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _305) + cbTextureTilingScale._m0[14u].w));
    vec4 _503 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _304) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _305) + cbTextureTilingScale._m0[20u].w));
    vec4 _530 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _304) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _305) + cbTextureTilingScale._m0[4u].w));
    vec4 _547 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _549 = _547.x;
    float _550 = _547.y;
    float _551 = _547.z;
    float _560 = ((_530.z - _551) * _436) + _551;
    float _563 = ((((_530.x - _549) * _436) + _549) * 2.0) + (-1.0);
    float _564 = ((((_530.y - _550) * _436) + _550) * 2.0) + (-1.0);
    float _565 = dot(vec2(_563, _564), vec2(_563, _564));
    float _4113 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _570 = sqrt(1.0 - (isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))));
    vec4 _590 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _602 = (_563 + ((((_503.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_590.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _603 = (_564 + ((((_503.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_590.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _606 = fma(_570, _254, fma(_603, _261, _602 * _247));
    float _609 = fma(_570, _255, fma(_603, _262, _602 * _248));
    float _612 = fma(_570, _256, fma(_603, _263, _602 * _249));
    float _616 = inversesqrt(dot(vec3(_606, _609, _612), vec3(_606, _609, _612)));
    vec4 _643 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _304) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _305) + cbTextureTilingScale._m0[11u].w));
    float _645 = _643.x;
    float _646 = 1.0 - _645;
    float _650 = ((_645 - _646) * cbMtdParam._m0[24u].z) + _646;
    float _652 = (cbMtdParam._m0[19u].x + dot(vec4(_616 * _606, _616 * _609, _616 * _612, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_650 * cbMtdParam._m0[21u].z);
    float _4124 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _653 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _655 = (-0.0) - cbMtdParam._m0[24u].x;
    float _657 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _658 = isnan(1.0) ? _657 : (isnan(_657) ? 1.0 : min(_657, 1.0));
    float _665 = _653 - ((_653 * TEXCOORD_8.x) * _658);
    float _666 = _653 - ((_653 * TEXCOORD_8.y) * _658);
    float _667 = _653 - ((_653 * TEXCOORD_8.z) * _658);
    float _674 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _678 = ((isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : min(_674, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _686 = (_678 - (((_650 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _678))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4155 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _687 = isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0));
    float _691 = ((_665 * ((_483.x * cbMtdParam._m0[18u].x) - _462)) * _687) + _462;
    float _692 = ((_666 * ((_483.y * cbMtdParam._m0[18u].y) - _463)) * _687) + _463;
    float _693 = ((_667 * ((_483.z * cbMtdParam._m0[18u].z) - _464)) * _687) + _464;
    vec4 _705 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _304) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _305) + cbTextureTilingScale._m0[19u].w));
    float _707 = _705.x;
    float _708 = 1.0 - _707;
    float _733 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_707 - _708) * cbMtdParam._m0[24u].w) + _708) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4166 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _734 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    float _742 = ((((cbMtdParam._m0[10u].x - _691) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _734) + _691;
    float _743 = ((((cbMtdParam._m0[10u].y - _692) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _734) + _692;
    float _744 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _693)) * _734) + _693;
    vec4 _770 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _772 = _770.x;
    float _790 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _304) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _305) + cbTextureTilingScale._m0[9u].w)).x - _772) * _436) + _772;
    float _794 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _790) * cbMtdParam._m0[19u].z) + _790;
    float _797 = _794 - ((_687 * _665) * _794);
    float _799 = _797 - (_797 * _734);
    float _804 = (((_503.z - _560) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _560;
    float _808 = ((_590.z - _804) * cbMtdParam._m0[19u].w) + _804;
    vec4 _822 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _304) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _305) + cbTextureTilingScale._m0[15u].w));
    float _829 = (_822.x * 2.0) + (-1.0);
    float _830 = (_822.y * 2.0) + (-1.0);
    float _831 = dot(vec2(_829, _830), vec2(_829, _830));
    float _4177 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _840 = (((_822.z - _808) * _665) * _687) + _808;
    float _843 = ((cbMtdParam._m0[23u].y - _840) * _734) + _840;
    vec4 _864 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _304) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _305) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _870 = (_864.x * 2.0) + (-1.0);
    float _871 = (_864.y * 2.0) + (-1.0);
    float _872 = dot(vec2(_870, _871), vec2(_870, _871));
    float _4188 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _892 = (((cbMtdParam._m0[21u].x * _602) + ((_829 - _602) * _665)) * _687) + _602;
    float _893 = (((cbMtdParam._m0[21u].x * _603) + ((_830 - _603) * _666)) * _687) + _603;
    float _894 = (((sqrt(1.0 - (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)))) - _570) * _667) * _687) + _570;
    float _905 = (((_870 - _892) + (_892 * cbMtdParam._m0[22u].z)) * _734) + _892;
    float _906 = (((_871 - _893) + (_893 * cbMtdParam._m0[22u].z)) * _734) + _893;
    float _907 = ((sqrt(1.0 - (isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0)))) - _894) * _734) + _894;
    float _909 = cbMtdParam._m0[22u].x + _590.w;
    float _912 = fma(_907, _254, fma(_906, _261, _905 * _247));
    float _915 = fma(_907, _255, fma(_906, _262, _905 * _248));
    float _918 = fma(_907, _256, fma(_906, _263, _905 * _249));
    float _922 = inversesqrt(dot(vec3(_912, _915, _918), vec3(_912, _915, _918)));
    float _923 = _922 * _912;
    float _924 = _922 * _915;
    float _925 = _922 * _918;
    float _4199 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _926 = isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0));
    float _4210 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _4221 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _4232 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _4243 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _4254 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _931 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
    float _945 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _985 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _995 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _985);
    float _996 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _985);
    float _997 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _985);
    float _1001 = inversesqrt(dot(vec3(_995, _996, _997), vec3(_995, _996, _997)));
    float _1002 = _995 * _1001;
    float _1003 = _996 * _1001;
    float _1004 = _997 * _1001;
    float _1010 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1011 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1029 = fma(_925, cbSceneParam._m0[5u].z, fma(_924, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _923));
    float _1032 = fma(_925, cbSceneParam._m0[6u].z, fma(_924, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _923));
    float _1035 = fma(_925, cbSceneParam._m0[7u].z, fma(_924, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _923));
    uint _1049 = (_285 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1055 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) * cbInstanceData._m0[_1049].x;
    float _1056 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0)))) * cbInstanceData._m0[_1049].y;
    float _1057 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0)))) * cbInstanceData._m0[_1049].z;
    float _4265 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
    float _1058 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
    float _4276 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _1059 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _1060 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _1061 = 1.0 - _931;
    float _1062 = _1058 * _1061;
    float _1063 = _1059 * _1061;
    float _1064 = _1060 * _1061;
    float _1069 = (_1058 + (-0.039999999105930328369140625)) * _931;
    float _1070 = (_1059 + (-0.039999999105930328369140625)) * _931;
    float _1071 = (_1060 + (-0.039999999105930328369140625)) * _931;
    float _1072 = _1069 + 0.039999999105930328369140625;
    float _1074 = _1070 + 0.039999999105930328369140625;
    float _1075 = _1071 + 0.039999999105930328369140625;
    vec4 _1084 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1010, cbSceneParam._m0[86u].y * _1011));
    float _1088 = ((isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0))) * TEXCOORD_5.w) * _1084.x;
    float _1089 = dot(vec3(_923, _924, _925), vec3(_1002, _1003, _1004));
    float _1092 = _1089 * 2.0;
    float _1096 = (_1092 * _923) - _1002;
    float _1097 = (_1092 * _924) - _1003;
    float _1098 = (_1092 * _925) - _1004;
    float _1102 = abs(dot(vec3(_1002, _1003, _1004), vec3(_923, _924, _925)));
    float _4298 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _1104 = sqrt(_926);
    float _1117 = exp2((_1104 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1104 * 3.0));
    float _1123 = (1.0 - _1117) * ((_1104 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1124 = _1117 * _1104;
    float _1152 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1156 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1461;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1186 = fma(_1160, cbModelParam._m0[26u].z, fma(_1156, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1152));
        float _1190 = fma(_1160, cbModelParam._m0[27u].z, fma(_1156, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1152));
        float _1194 = fma(_1160, cbModelParam._m0[28u].z, fma(_1156, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1152));
        float _1219 = _1152 + _923;
        float _1220 = _1156 + _924;
        float _1221 = _1160 + _925;
        float _1231 = fma(_1221, cbModelParam._m0[26u].z, fma(_1220, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1219)) - _1186;
        float _1232 = fma(_1221, cbModelParam._m0[27u].z, fma(_1220, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1219)) - _1190;
        float _1233 = fma(_1221, cbModelParam._m0[28u].z, fma(_1220, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1219)) - _1194;
        float _1237 = inversesqrt(dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233)));
        float _1250 = ((_1237 * _1231) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1186 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1251 = ((_1237 * _1232) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1190 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1252 = ((_1237 * _1233) / cbModelParam._m0[34u].z) + ((((((_1194 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1276 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        float _1289 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1255.x + (-0.5));
        float _1291 = _1289 * (_1255.y + (-0.5));
        float _1292 = _1289 * (_1255.z + (-0.5));
        float _1299 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1262.x + (-0.5));
        float _1301 = _1299 * (_1262.y + (-0.5));
        float _1302 = _1299 * (_1262.z + (-0.5));
        float _1309 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1269.x + (-0.5));
        float _1311 = _1309 * (_1269.y + (-0.5));
        float _1312 = _1309 * (_1269.z + (-0.5));
        float _1319 = exp2((_1276.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1276.x + (-0.5));
        float _1321 = _1319 * (_1276.y + (-0.5));
        float _1322 = _1319 * (_1276.z + (-0.5));
        float _1323 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1324 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1325 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1326 = _1290 * 0.5;
        float _1327 = _1300 * 0.5;
        float _1328 = _1310 * 0.5;
        float _1329 = dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328));
        float _1334 = (_1329 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1329);
        float _1343 = (dot(vec3(_923, _924, _925), vec3(_1334 * _1326, _1334 * _1327, _1334 * _1328)) + 1.0) * 0.5;
        float _4324 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1353 = sqrt(((_1327 * _1327) + (_1326 * _1326)) + (_1328 * _1328)) / (_1323 + 9.9999997473787516355514526367188e-06);
        float _4335 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1354 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1355 = _1354 * 2.0;
        float _1359 = (1.0 - _1354) / (_1354 + 1.0);
        float _4346 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1369 = ((((1.0 - _1360) * (_1355 + 2.0)) * exp2(log2(isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_1355 + 1.0))) + _1360) * _1323;
        float _1370 = _1291 * 0.5;
        float _1371 = _1301 * 0.5;
        float _1372 = _1311 * 0.5;
        float _1373 = dot(vec3(_1370, _1371, _1372), vec3(_1370, _1371, _1372));
        float _1378 = (_1373 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1373);
        float _1386 = (dot(vec3(_923, _924, _925), vec3(_1378 * _1370, _1378 * _1371, _1378 * _1372)) + 1.0) * 0.5;
        float _4357 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1395 = sqrt(((_1371 * _1371) + (_1370 * _1370)) + (_1372 * _1372)) / (_1324 + 9.9999997473787516355514526367188e-06);
        float _4368 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1396 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _1397 = _1396 * 2.0;
        float _1401 = (1.0 - _1396) / (_1396 + 1.0);
        float _4379 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1411 = ((((1.0 - _1402) * (_1397 + 2.0)) * exp2(log2(isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (_1397 + 1.0))) + _1402) * _1324;
        float _1412 = _1292 * 0.5;
        float _1413 = _1302 * 0.5;
        float _1414 = _1312 * 0.5;
        float _1415 = dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414));
        float _1420 = (_1415 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1415);
        float _1428 = (dot(vec3(_923, _924, _925), vec3(_1420 * _1412, _1420 * _1413, _1420 * _1414)) + 1.0) * 0.5;
        float _4390 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1437 = sqrt(((_1413 * _1413) + (_1412 * _1412)) + (_1414 * _1414)) / (_1325 + 9.9999997473787516355514526367188e-06);
        float _4401 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _1439 = _1438 * 2.0;
        float _1443 = (1.0 - _1438) / (_1438 + 1.0);
        float _4412 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1453 = ((((1.0 - _1444) * (_1439 + 2.0)) * exp2(log2(isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_1439 + 1.0))) + _1444) * _1325;
        _1461 = _1292;
        _1463 = _1291;
        _1464 = _1290;
        _1465 = _1302;
        _1466 = _1301;
        _1467 = _1300;
        _1468 = _1312;
        _1469 = _1311;
        _1470 = _1310;
        _1471 = _1325;
        _1472 = _1324;
        _1473 = _1323;
        _1474 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0)));
        _1475 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0)));
        _1476 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0)));
    }
    else
    {
        _1461 = _1462;
        _1463 = _1462;
        _1464 = _1462;
        _1465 = _1462;
        _1466 = _1462;
        _1467 = _1462;
        _1468 = _1462;
        _1469 = _1462;
        _1470 = _1462;
        _1471 = _1462;
        _1472 = _1462;
        _1473 = _1462;
        _1474 = 0.0;
        _1475 = 0.0;
        _1476 = 0.0;
    }
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1501 = fma(_1160, cbModelParam._m0[30u].z, fma(_1156, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1152));
        float _1505 = fma(_1160, cbModelParam._m0[31u].z, fma(_1156, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1152));
        float _1509 = fma(_1160, cbModelParam._m0[32u].z, fma(_1156, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1152));
        float _1532 = _1152 + _923;
        float _1533 = _1156 + _924;
        float _1534 = _1160 + _925;
        float _1544 = fma(_1534, cbModelParam._m0[30u].z, fma(_1533, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1532)) - _1501;
        float _1545 = fma(_1534, cbModelParam._m0[31u].z, fma(_1533, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1532)) - _1505;
        float _1546 = fma(_1534, cbModelParam._m0[32u].z, fma(_1533, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1532)) - _1509;
        float _1550 = inversesqrt(dot(vec3(_1544, _1545, _1546), vec3(_1544, _1545, _1546)));
        float _1563 = ((_1550 * _1544) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1501 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1564 = ((_1550 * _1545) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1505 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1565 = ((_1550 * _1546) / cbModelParam._m0[35u].z) + ((((((_1509 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1567 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1563, _1564, _1565), 0.0);
        vec4 _1574 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1563, _1564, _1565), 0.0);
        vec4 _1581 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1563, _1564, _1565), 0.0);
        vec4 _1588 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1563, _1564, _1565), 0.0);
        float _1600 = exp2((_1567.w + (-0.5)) * 20.0) * 2.0;
        float _1601 = _1600 * (_1567.x + (-0.5));
        float _1602 = _1600 * (_1567.y + (-0.5));
        float _1603 = _1600 * (_1567.z + (-0.5));
        float _1610 = exp2((_1574.w + (-0.5)) * 20.0) * 2.0;
        float _1611 = _1610 * (_1574.x + (-0.5));
        float _1612 = _1610 * (_1574.y + (-0.5));
        float _1613 = _1610 * (_1574.z + (-0.5));
        float _1620 = exp2((_1581.w + (-0.5)) * 20.0) * 2.0;
        float _1621 = _1620 * (_1581.x + (-0.5));
        float _1622 = _1620 * (_1581.y + (-0.5));
        float _1623 = _1620 * (_1581.z + (-0.5));
        float _1630 = exp2((_1588.w + (-0.5)) * 20.0) * 2.0;
        float _1631 = _1630 * (_1588.x + (-0.5));
        float _1632 = _1630 * (_1588.y + (-0.5));
        float _1633 = _1630 * (_1588.z + (-0.5));
        float _1634 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1635 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1636 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1637 = _1601 * 0.5;
        float _1638 = _1611 * 0.5;
        float _1639 = _1621 * 0.5;
        float _1640 = dot(vec3(_1637, _1638, _1639), vec3(_1637, _1638, _1639));
        float _1645 = (_1640 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1640);
        float _1653 = (dot(vec3(_923, _924, _925), vec3(_1645 * _1637, _1645 * _1638, _1645 * _1639)) + 1.0) * 0.5;
        float _4453 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1662 = sqrt(((_1638 * _1638) + (_1637 * _1637)) + (_1639 * _1639)) / (_1634 + 9.9999997473787516355514526367188e-06);
        float _4464 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1663 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1664 = _1663 * 2.0;
        float _1668 = (1.0 - _1663) / (_1663 + 1.0);
        float _4475 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1669 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1678 = ((((1.0 - _1669) * (_1664 + 2.0)) * exp2(log2(isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (_1664 + 1.0))) + _1669) * _1634;
        float _1679 = _1602 * 0.5;
        float _1680 = _1612 * 0.5;
        float _1681 = _1622 * 0.5;
        float _1682 = dot(vec3(_1679, _1680, _1681), vec3(_1679, _1680, _1681));
        float _1687 = (_1682 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1682);
        float _1695 = (dot(vec3(_923, _924, _925), vec3(_1687 * _1679, _1687 * _1680, _1687 * _1681)) + 1.0) * 0.5;
        float _4486 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1704 = sqrt(((_1680 * _1680) + (_1679 * _1679)) + (_1681 * _1681)) / (_1635 + 9.9999997473787516355514526367188e-06);
        float _4497 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1705 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _1706 = _1705 * 2.0;
        float _1710 = (1.0 - _1705) / (_1705 + 1.0);
        float _4508 = isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0));
        float _1711 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1720 = ((((1.0 - _1711) * (_1706 + 2.0)) * exp2(log2(isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))) * (_1706 + 1.0))) + _1711) * _1635;
        float _1721 = _1603 * 0.5;
        float _1722 = _1613 * 0.5;
        float _1723 = _1623 * 0.5;
        float _1724 = dot(vec3(_1721, _1722, _1723), vec3(_1721, _1722, _1723));
        float _1729 = (_1724 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1724);
        float _1737 = (dot(vec3(_923, _924, _925), vec3(_1729 * _1721, _1729 * _1722, _1729 * _1723)) + 1.0) * 0.5;
        float _4519 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1746 = sqrt(((_1722 * _1722) + (_1721 * _1721)) + (_1723 * _1723)) / (_1636 + 9.9999997473787516355514526367188e-06);
        float _4530 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1747 = isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0));
        float _1748 = _1747 * 2.0;
        float _1752 = (1.0 - _1747) / (_1747 + 1.0);
        float _4541 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1753 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1762 = ((((1.0 - _1753) * (_1748 + 2.0)) * exp2(log2(isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0))) * (_1748 + 1.0))) + _1753) * _1636;
        _1770 = _1603;
        _1771 = _1602;
        _1772 = _1601;
        _1773 = _1613;
        _1774 = _1612;
        _1775 = _1611;
        _1776 = _1623;
        _1777 = _1622;
        _1778 = _1621;
        _1779 = _1636;
        _1780 = _1635;
        _1781 = _1634;
        _1782 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0)));
        _1783 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0)));
        _1784 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0)));
    }
    else
    {
        _1770 = _1462;
        _1771 = _1462;
        _1772 = _1462;
        _1773 = _1462;
        _1774 = _1462;
        _1775 = _1462;
        _1776 = _1462;
        _1777 = _1462;
        _1778 = _1462;
        _1779 = _1462;
        _1780 = _1462;
        _1781 = _1462;
        _1782 = 0.0;
        _1783 = 0.0;
        _1784 = 0.0;
    }
    float _1794 = (cbModelParam._m0[1u].x * (_1782 - _1474)) + _1474;
    float _1795 = (cbModelParam._m0[1u].x * (_1783 - _1475)) + _1475;
    float _1796 = (cbModelParam._m0[1u].x * (_1784 - _1476)) + _1476;
    float _1817 = fma(_1796, cbSceneParam._m0[89u].z, fma(_1795, cbSceneParam._m0[89u].y, _1794 * cbSceneParam._m0[89u].x));
    float _1820 = fma(_1796, cbSceneParam._m0[90u].z, fma(_1795, cbSceneParam._m0[90u].y, _1794 * cbSceneParam._m0[90u].x));
    float _1823 = fma(_1796, cbSceneParam._m0[91u].z, fma(_1795, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1794));
    float _1838 = _1096 * 0.5;
    float _1839 = _1097 * 0.5;
    float _1840 = _1098 * 0.5;
    float _1841 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1772, _1775, _1778, _1781));
    float _1844 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1771, _1774, _1777, _1780));
    float _1847 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1770, _1773, _1776, _1779));
    float _1881;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1854 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1461, _1465, _1468, _1471));
        float _1858 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1463, _1466, _1469, _1472));
        float _1862 = dot(vec4(_1838, _1839, _1840, 1.0), vec4(_1464, _1467, _1470, _1473));
        float _1869 = dot(vec4(cbModelParam._m0[39u]), vec4(_1838, _1839, _1840, 1.0));
        _1881 = dot(vec3(isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0)), isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0)), isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1869) ? 0.0 : (isnan(0.0) ? _1869 : max(0.0, _1869))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1881 = 1.0;
    }
    float _1892;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1883 = dot(vec4(cbModelParam._m0[40u]), vec4(_1838, _1839, _1840, 1.0));
        _1892 = dot(vec3(isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0)), isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0)), isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1883) ? 0.0 : (isnan(0.0) ? _1883 : max(0.0, _1883))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1892 = 1.0;
    }
    float _1896 = (_1892 * cbModelParam._m0[1u].x) + (_1881 * (1.0 - cbModelParam._m0[1u].x));
    float _1906 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _926);
    float _1907 = isnan(_1906) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1906 : min(cbModelParam._m0[25u].z, _1906));
    float _1987;
    float _1989;
    float _1991;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1954 = fma(_1160, cbModelParam._m0[13u].z, fma(_1156, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1152)) + cbModelParam._m0[13u].w;
        float _1958 = fma(_1160, cbModelParam._m0[14u].z, fma(_1156, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1152)) + cbModelParam._m0[14u].w;
        float _1962 = fma(_1160, cbModelParam._m0[15u].z, fma(_1156, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1152)) + cbModelParam._m0[15u].w;
        float _1965 = fma(_1098, cbModelParam._m0[13u].z, fma(_1097, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1096));
        float _1968 = fma(_1098, cbModelParam._m0[14u].z, fma(_1097, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1096));
        float _1971 = fma(_1098, cbModelParam._m0[15u].z, fma(_1097, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1096));
        float _1999;
        if (_1965 > 0.0)
        {
            _1999 = abs((1.0 - _1954) / _1965);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1954 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1999 = frontier_phi_14_12_ladder;
        }
        float _2170;
        if (_1968 > 0.0)
        {
            _2170 = abs((1.0 - _1958) / _1968);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1958 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2170 = frontier_phi_23_19_ladder;
        }
        float _2465;
        if (_1971 > 0.0)
        {
            _2465 = abs((1.0 - _1962) / _1971);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1971 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1962 + 1.0) / _1971);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2465 = frontier_phi_35_30_ladder;
        }
        float _2467 = isnan(_2170) ? _1999 : (isnan(_1999) ? _2170 : min(_1999, _2170));
        float _2468 = isnan(_2465) ? _2467 : (isnan(_2467) ? _2465 : min(_2467, _2465));
        float _2472 = (_2468 * _1965) + _1954;
        float _2473 = (_2468 * _1968) + _1958;
        float _2474 = (_2468 * _1971) + _1962;
        float _2475 = _2468 * 9.9999997473787516355514526367188e-05;
        float _2477 = (-1.0) - _2475;
        float _2479 = _2475 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2474 > _2479) || ((_2474 < _2477) || ((_2473 > _2479) || ((_2473 < _2477) || ((_2472 < _2477) || (_2472 > _2479))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2619 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2474, cbModelParam._m0[9u].z, fma(_2473, cbModelParam._m0[9u].y, _2472 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2474, cbModelParam._m0[10u].z, fma(_2473, cbModelParam._m0[10u].y, _2472 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2474, cbModelParam._m0[11u].z, fma(_2473, cbModelParam._m0[11u].y, _2472 * cbModelParam._m0[11u].x))), _1907);
            frontier_phi_13_35_ladder = _2619.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2619.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2619.x * cbModelParam._m0[1u].y;
        }
        _1987 = frontier_phi_13_35_ladder_2;
        _1989 = frontier_phi_13_35_ladder_1;
        _1991 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1975 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1096, _1097, _1098), _1907);
        _1987 = _1975.x * cbModelParam._m0[1u].y;
        _1989 = _1975.y * cbModelParam._m0[1u].y;
        _1991 = _1975.z * cbModelParam._m0[1u].y;
    }
    float _1995 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _926);
    float _1996 = isnan(_1995) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1995 : min(cbModelParam._m0[25u].w, _1995));
    float _2085;
    float _2087;
    float _2089;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2049 = fma(_1160, cbModelParam._m0[21u].z, fma(_1156, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1152)) + cbModelParam._m0[21u].w;
        float _2053 = fma(_1160, cbModelParam._m0[22u].z, fma(_1156, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1152)) + cbModelParam._m0[22u].w;
        float _2057 = fma(_1160, cbModelParam._m0[23u].z, fma(_1156, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1152)) + cbModelParam._m0[23u].w;
        float _2060 = fma(_1098, cbModelParam._m0[21u].z, fma(_1097, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1096));
        float _2063 = fma(_1098, cbModelParam._m0[22u].z, fma(_1097, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1096));
        float _2066 = fma(_1098, cbModelParam._m0[23u].z, fma(_1097, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1096));
        float _2175;
        if (_2060 > 0.0)
        {
            _2175 = abs((1.0 - _2049) / _2060);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2060 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2049 + 1.0) / _2060);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2175 = frontier_phi_25_21_ladder;
        }
        float _2492;
        if (_2063 > 0.0)
        {
            _2492 = abs((1.0 - _2053) / _2063);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2063 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2053 + 1.0) / _2063);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2492 = frontier_phi_37_32_ladder;
        }
        float _2830;
        if (_2066 > 0.0)
        {
            _2830 = abs((1.0 - _2057) / _2066);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2066 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2057 + 1.0) / _2066);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2830 = frontier_phi_47_44_ladder;
        }
        float _2832 = isnan(_2492) ? _2175 : (isnan(_2175) ? _2492 : min(_2175, _2492));
        float _2833 = isnan(_2830) ? _2832 : (isnan(_2832) ? _2830 : min(_2832, _2830));
        float _2837 = (_2833 * _2060) + _2049;
        float _2838 = (_2833 * _2063) + _2053;
        float _2839 = (_2833 * _2066) + _2057;
        float _2840 = _2833 * 9.9999997473787516355514526367188e-05;
        float _2841 = (-1.0) - _2840;
        float _2843 = _2840 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2839 > _2843) || ((_2839 < _2841) || ((_2838 > _2843) || ((_2838 < _2841) || ((_2837 < _2841) || (_2837 > _2843))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2961 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2839, cbModelParam._m0[17u].z, fma(_2838, cbModelParam._m0[17u].y, _2837 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2839, cbModelParam._m0[18u].z, fma(_2838, cbModelParam._m0[18u].y, _2837 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2839, cbModelParam._m0[19u].z, fma(_2838, cbModelParam._m0[19u].y, _2837 * cbModelParam._m0[19u].x))), _1996);
            frontier_phi_22_47_ladder = _2961.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2961.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2961.x * cbModelParam._m0[1u].z;
        }
        _2085 = frontier_phi_22_47_ladder_2;
        _2087 = frontier_phi_22_47_ladder_1;
        _2089 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2069 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1096, _1097, _1098), _1996);
        _2085 = _2069.x * cbModelParam._m0[1u].z;
        _2087 = _2069.y * cbModelParam._m0[1u].z;
        _2089 = _2069.z * cbModelParam._m0[1u].z;
    }
    float _2102 = (((_1123 * _1072) + _1124) * _1088) * ((cbModelParam._m0[1u].w * (_2085 - _1987)) + _1987);
    float _2104 = (((_1123 * _1074) + _1124) * _1088) * ((cbModelParam._m0[1u].w * (_2087 - _1989)) + _1989);
    float _2106 = (((_1123 * _1075) + _1124) * _1088) * ((cbModelParam._m0[1u].w * (_2089 - _1991)) + _1991);
    float _2109 = fma(_2106, cbSceneParam._m0[89u].z, fma(_2104, cbSceneParam._m0[89u].y, _2102 * cbSceneParam._m0[89u].x));
    float _2112 = fma(_2106, cbSceneParam._m0[90u].z, fma(_2104, cbSceneParam._m0[90u].y, _2102 * cbSceneParam._m0[90u].x));
    float _2115 = fma(_2106, cbSceneParam._m0[91u].z, fma(_2104, cbSceneParam._m0[91u].y, _2102 * cbSceneParam._m0[91u].x));
    float _2149 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2153 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2161 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2162 = _2149 / _2161;
    float _2163 = _2153 / _2161;
    float _2164 = _2157 / _2161;
    float _2311;
    float _2312;
    float _2313;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2191 = ((uint(_2164 > cbSceneParam._m0[59u].y) + uint(_2164 > cbSceneParam._m0[59u].x)) + uint(_2164 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2192 = _2191 + 43u;
        uint _2200 = _2191 + 44u;
        uint _2208 = _2191 + 45u;
        uint _2216 = _2191 + 46u;
        float _2227 = fma(_2161, cbSceneParam._m0[_2192].w, fma(_2157, cbSceneParam._m0[_2192].z, fma(_2153, cbSceneParam._m0[_2192].y, _2149 * cbSceneParam._m0[_2192].x)));
        float _2231 = fma(_2161, cbSceneParam._m0[_2200].w, fma(_2157, cbSceneParam._m0[_2200].z, fma(_2153, cbSceneParam._m0[_2200].y, _2149 * cbSceneParam._m0[_2200].x)));
        float _2239 = fma(_2161, cbSceneParam._m0[_2216].w, fma(_2157, cbSceneParam._m0[_2216].z, fma(_2153, cbSceneParam._m0[_2216].y, _2149 * cbSceneParam._m0[_2216].x)));
        float _2244 = cbSceneParam._m0[33u].z * _2239;
        float _2246 = cbSceneParam._m0[33u].w * _2239;
        float _2249 = fma(_2161, cbSceneParam._m0[_2208].w, fma(_2157, cbSceneParam._m0[_2208].z, fma(_2153, cbSceneParam._m0[_2208].y, _2149 * cbSceneParam._m0[_2208].x))) / _2239;
        float _2297 = (cbSceneParam._m0[33u].x - sqrt(((_2163 * _2163) + (_2162 * _2162)) + (_2164 * _2164))) * cbSceneParam._m0[33u].y;
        float _4667 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
        float _2304 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2244 + _2227) / _2239, (_2246 + _2231) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2246 + _2227) / _2239, (_2231 - _2244) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2227 - _2244) / _2239, (_2231 - _2246) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2227 - _2246) / _2239, (_2244 + _2231) / _2239), _2249), 0.0)).x), vec4(0.25)));
        _2311 = 1.0 - (_2304 * cbSceneParam._m0[34u].x);
        _2312 = 1.0 - (_2304 * cbSceneParam._m0[34u].y);
        _2313 = 1.0 - (_2304 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2311 = 1.0;
        _2312 = 1.0;
        _2313 = 1.0;
    }
    float _2377;
    float _2379;
    float _2381;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2365 = fma(_2161, cbSceneParam._m0[63u].w, fma(_2157, cbSceneParam._m0[63u].z, fma(_2153, cbSceneParam._m0[63u].y, _2149 * cbSceneParam._m0[63u].x)));
        float _2366 = fma(_2161, cbSceneParam._m0[60u].w, fma(_2157, cbSceneParam._m0[60u].z, fma(_2153, cbSceneParam._m0[60u].y, _2149 * cbSceneParam._m0[60u].x))) / _2365;
        float _2367 = fma(_2161, cbSceneParam._m0[61u].w, fma(_2157, cbSceneParam._m0[61u].z, fma(_2153, cbSceneParam._m0[61u].y, _2149 * cbSceneParam._m0[61u].x))) / _2365;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2366 >= cbSceneParam._m0[64u].x) && (_2367 >= cbSceneParam._m0[64u].y)) && (_2366 <= cbSceneParam._m0[64u].z)) && (_2367 <= cbSceneParam._m0[64u].w))
        {
            float _2505 = fma(_2161, cbSceneParam._m0[62u].w, fma(_2157, cbSceneParam._m0[62u].z, fma(_2153, cbSceneParam._m0[62u].y, _2149 * cbSceneParam._m0[62u].x))) / _2365;
            float _2509 = isnan(cbSceneParam._m0[41u].w) ? _2505 : (isnan(_2505) ? cbSceneParam._m0[41u].w : max(_2505, cbSceneParam._m0[41u].w));
            float _2552 = (cbSceneParam._m0[33u].x - sqrt(((_2163 * _2163) + (_2162 * _2162)) + (_2164 * _2164))) * cbSceneParam._m0[33u].y;
            float _4683 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
            float _2559 = (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2366, cbSceneParam._m0[33u].w + _2367), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2366, _2367 - cbSceneParam._m0[33u].z), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2366 - cbSceneParam._m0[33u].z, _2367 - cbSceneParam._m0[33u].w), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2366 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2367), _2509), 0.0)).x), vec4(0.25)));
            float _2563 = 1.0 - (_2559 * cbSceneParam._m0[34u].x);
            float _2564 = 1.0 - (_2559 * cbSceneParam._m0[34u].y);
            float _2565 = 1.0 - (_2559 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2565) ? _2313 : (isnan(_2313) ? _2565 : min(_2313, _2565));
            frontier_phi_34_33_ladder_1 = isnan(_2564) ? _2312 : (isnan(_2312) ? _2564 : min(_2312, _2564));
            frontier_phi_34_33_ladder_2 = isnan(_2563) ? _2311 : (isnan(_2311) ? _2563 : min(_2311, _2563));
        }
        else
        {
            frontier_phi_34_33_ladder = _2313;
            frontier_phi_34_33_ladder_1 = _2312;
            frontier_phi_34_33_ladder_2 = _2311;
        }
        _2377 = frontier_phi_34_33_ladder_2;
        _2379 = frontier_phi_34_33_ladder_1;
        _2381 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2377 = _2311;
        _2379 = _2312;
        _2381 = _2313;
    }
    uvec4 _2386 = floatBitsToUint(cbInstanceData._m0[_285 + 5u]);
    uint _2388 = _2386.x * 14u;
    uint _2389 = _2388 + 13u;
    float _2396 = _1088 + (-1.0);
    float _2401 = (cbLight._m0[_2389].x * _2396) + 1.0;
    float _2402 = (cbLight._m0[_2389].y * _2396) + 1.0;
    float _2403 = (cbLight._m0[_2389].z * _2396) + 1.0;
    float _2404 = (cbLight._m0[_2389].w * _2396) + 1.0;
    uint _2405 = _2388 + 5u;
    float _2411 = isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0));
    uint _2415 = _2388 + 4u;
    float _2424 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
    uint _2428 = _2388 | 1u;
    float _2439 = dot(vec3(cbLight._m0[_2388].xyz), vec3(_923, _924, _925));
    float _2442 = dot(vec3(cbLight._m0[_2428].xyz), vec3(_923, _924, _925));
    float _4719 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
    float _4730 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
    float _2447 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * 0.3183098733425140380859375;
    float _2449 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * 0.3183098733425140380859375;
    float _2456 = ((cbLight._m0[_2405].x * _2411) * _2449) + (((cbLight._m0[_2415].x * _2377) * _2424) * _2447);
    float _2457 = ((_2411 * cbLight._m0[_2405].y) * _2449) + (((cbLight._m0[_2415].y * _2379) * _2424) * _2447);
    float _2458 = ((_2411 * cbLight._m0[_2405].z) * _2449) + (((cbLight._m0[_2415].z * _2381) * _2424) * _2447);
    uvec4 _2462 = floatBitsToUint(cbLight._m0[_2388 + 12u]);
    bool _2464 = _2462.x == 0u;
    float _2566;
    float _2568;
    float _2570;
    if (_2464)
    {
        _2566 = _2456;
        _2568 = _2457;
        _2570 = _2458;
    }
    else
    {
        uint _2574 = _2388 + 6u;
        float _2590 = (dot(vec3(cbLight._m0[_2388 + 2u].xyz), vec3(_923, _924, _925)) * 0.5) + 0.5;
        float _2591 = _2590 * _2590;
        float _4741 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
        float _2592 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2593 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
        _2566 = (((cbLight._m0[_2574].x * 0.3183098733425140380859375) * _2592) * _2593) + _2456;
        _2568 = (((cbLight._m0[_2574].y * 0.3183098733425140380859375) * _2592) * _2593) + _2457;
        _2570 = (((cbLight._m0[_2574].z * 0.3183098733425140380859375) * _2592) * _2593) + _2458;
    }
    bool _2573 = _2462.y == 0u;
    float _2628;
    float _2630;
    float _2632;
    if (_2573)
    {
        _2628 = _2566;
        _2630 = _2568;
        _2632 = _2570;
    }
    else
    {
        uint _2801 = _2388 + 7u;
        float _2817 = (dot(vec3(cbLight._m0[_2388 + 3u].xyz), vec3(_923, _924, _925)) * 0.5) + 0.5;
        float _2818 = _2817 * _2817;
        float _4757 = isnan(0.0) ? _2818 : (isnan(_2818) ? 0.0 : max(_2818, 0.0));
        float _2819 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
        float _2820 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2628 = (((cbLight._m0[_2801].x * 0.3183098733425140380859375) * _2819) * _2820) + _2566;
        _2630 = (((cbLight._m0[_2801].y * 0.3183098733425140380859375) * _2819) * _2820) + _2568;
        _2632 = (((cbLight._m0[_2801].z * 0.3183098733425140380859375) * _2819) * _2820) + _2570;
    }
    uint _2635 = _2388 + 8u;
    float _2648 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2388].w)) * _926) * 0.949999988079071044921875);
    float _2649 = _2648 * _2648;
    float _2650 = cbLight._m0[_2388].x + _1002;
    float _2651 = cbLight._m0[_2388].y + _1003;
    float _2652 = cbLight._m0[_2388].z + _1004;
    float _2656 = inversesqrt(dot(vec3(_2650, _2651, _2652), vec3(_2650, _2651, _2652)));
    float _2657 = _2656 * _2650;
    float _2658 = _2656 * _2651;
    float _2659 = _2656 * _2652;
    float _2660 = dot(vec3(_923, _924, _925), vec3(cbLight._m0[_2388].xyz));
    float _4773 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
    float _2663 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
    float _4784 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _2664 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _2665 = dot(vec3(_923, _924, _925), vec3(_2657, _2658, _2659));
    float _4795 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
    float _2668 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _2669 = dot(vec3(cbLight._m0[_2388].xyz), vec3(_2657, _2658, _2659));
    float _4806 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
    float _2673 = _2649 * _2649;
    float _2677 = ((_2668 * _2668) * (_2673 + (-1.0))) + 1.0;
    float _2685 = exp2(log2(1.0 - (isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0)))) * 5.0);
    float _2686 = 0.959999978542327880859375 - _1069;
    float _2688 = 0.959999978542327880859375 - _1070;
    float _2689 = 0.959999978542327880859375 - _1071;
    float _2696 = 1.0 - _2649;
    float _2707 = (0.5 / (((_2664 * ((_2663 * _2696) + _2649)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2696) + _2649) * _2663))) * _2663;
    float _4817 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
    float _2709 = (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0))) * (_2673 / ((_2677 * _2677) * 3.141590118408203125));
    uint _2723 = _2388 + 9u;
    float _2734 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2428].w)) * _926) * 0.949999988079071044921875);
    float _2735 = _2734 * _2734;
    float _2736 = cbLight._m0[_2428].x + _1002;
    float _2737 = cbLight._m0[_2428].y + _1003;
    float _2738 = cbLight._m0[_2428].z + _1004;
    float _2742 = inversesqrt(dot(vec3(_2736, _2737, _2738), vec3(_2736, _2737, _2738)));
    float _2743 = _2742 * _2736;
    float _2744 = _2742 * _2737;
    float _2745 = _2742 * _2738;
    float _2746 = dot(vec3(_923, _924, _925), vec3(cbLight._m0[_2428].xyz));
    float _4828 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
    float _2749 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
    float _2750 = dot(vec3(_923, _924, _925), vec3(_2743, _2744, _2745));
    float _4839 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2753 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    float _2754 = dot(vec3(cbLight._m0[_2428].xyz), vec3(_2743, _2744, _2745));
    float _4850 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
    float _2758 = _2735 * _2735;
    float _2762 = ((_2753 * _2753) * (_2758 + (-1.0))) + 1.0;
    float _2769 = exp2(log2(1.0 - (isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0)))) * 5.0);
    float _2776 = 1.0 - _2735;
    float _2786 = (0.5 / (((_2664 * ((_2749 * _2776) + _2735)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2776) + _2735) * _2749))) * _2749;
    float _4861 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
    float _2788 = (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (_2758 / ((_2762 * _2762) * 3.141590118408203125));
    float _2798 = (((((_2769 * _2686) + _1072) * cbLight._m0[_2723].x) * _2788) * _2411) + ((((cbLight._m0[_2635].x * _2377) * ((_2685 * _2686) + _1072)) * _2709) * _2424);
    float _2799 = (((((_2769 * _2688) + _1074) * cbLight._m0[_2723].y) * _2788) * _2411) + ((((cbLight._m0[_2635].y * _2379) * ((_2685 * _2688) + _1074)) * _2709) * _2424);
    float _2800 = (((((_2769 * _2689) + _1075) * cbLight._m0[_2723].z) * _2788) * _2411) + ((((cbLight._m0[_2635].z * _2381) * ((_2685 * _2689) + _1075)) * _2709) * _2424);
    float _2856;
    float _2858;
    float _2860;
    if (_2464)
    {
        _2856 = _2798;
        _2858 = _2799;
        _2860 = _2800;
    }
    else
    {
        uint _2862 = _2388 + 2u;
        uint _2866 = _2388 + 10u;
        float _2880 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2862].w)) * _926) * 0.949999988079071044921875);
        float _2881 = _2880 * _2880;
        float _2882 = cbLight._m0[_2862].x + _1002;
        float _2883 = cbLight._m0[_2862].y + _1003;
        float _2884 = cbLight._m0[_2862].z + _1004;
        float _2888 = inversesqrt(dot(vec3(_2882, _2883, _2884), vec3(_2882, _2883, _2884)));
        float _2889 = _2888 * _2882;
        float _2890 = _2888 * _2883;
        float _2891 = _2888 * _2884;
        float _2892 = dot(vec3(_923, _924, _925), vec3(cbLight._m0[_2862].xyz));
        float _4872 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2895 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _2896 = dot(vec3(_923, _924, _925), vec3(_2889, _2890, _2891));
        float _4883 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
        float _2899 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2900 = dot(vec3(cbLight._m0[_2862].xyz), vec3(_2889, _2890, _2891));
        float _4894 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2904 = _2881 * _2881;
        float _2908 = ((_2899 * _2899) * (_2904 + (-1.0))) + 1.0;
        float _2915 = exp2(log2(1.0 - (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0)))) * 5.0);
        float _2922 = 1.0 - _2881;
        float _2932 = (0.5 / (((_2664 * ((_2895 * _2922) + _2881)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2922) + _2881) * _2895))) * _2895;
        float _4905 = isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0));
        float _2934 = (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0))) * (_2904 / ((_2908 * _2908) * 3.141590118408203125));
        float _2935 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
        _2856 = (((((_2915 * _2686) + _1072) * cbLight._m0[_2866].x) * _2934) * _2935) + _2798;
        _2858 = (((((_2915 * _2688) + _1074) * cbLight._m0[_2866].y) * _2934) * _2935) + _2799;
        _2860 = (((((_2915 * _2689) + _1075) * cbLight._m0[_2866].z) * _2934) * _2935) + _2800;
    }
    float _2966;
    float _2968;
    float _2970;
    if (_2573)
    {
        _2966 = _2856;
        _2968 = _2858;
        _2970 = _2860;
    }
    else
    {
        uint _2977 = _2388 + 3u;
        uint _2981 = _2388 + 11u;
        float _2995 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2977].w)) * _926) * 0.949999988079071044921875);
        float _2996 = _2995 * _2995;
        float _2997 = cbLight._m0[_2977].x + _1002;
        float _2998 = cbLight._m0[_2977].y + _1003;
        float _2999 = cbLight._m0[_2977].z + _1004;
        float _3003 = inversesqrt(dot(vec3(_2997, _2998, _2999), vec3(_2997, _2998, _2999)));
        float _3004 = _3003 * _2997;
        float _3005 = _3003 * _2998;
        float _3006 = _3003 * _2999;
        float _3007 = dot(vec3(_923, _924, _925), vec3(cbLight._m0[_2977].xyz));
        float _4921 = isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : max(_3007, 0.0));
        float _3010 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
        float _3011 = dot(vec3(_923, _924, _925), vec3(_3004, _3005, _3006));
        float _4932 = isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0));
        float _3014 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _3015 = dot(vec3(cbLight._m0[_2977].xyz), vec3(_3004, _3005, _3006));
        float _4943 = isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0));
        float _3019 = _2996 * _2996;
        float _3023 = ((_3014 * _3014) * (_3019 + (-1.0))) + 1.0;
        float _3030 = exp2(log2(1.0 - (isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0)))) * 5.0);
        float _3037 = 1.0 - _2996;
        float _3047 = (0.5 / (((_2664 * ((_3010 * _3037) + _2996)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _3037) + _2996) * _3010))) * _3010;
        float _4954 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
        float _3049 = (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0))) * (_3019 / ((_3023 * _3023) * 3.141590118408203125));
        float _3050 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2966 = (((((_3030 * _2686) + _1072) * cbLight._m0[_2981].x) * _3049) * _3050) + _2856;
        _2968 = (((((_3030 * _2688) + _1074) * cbLight._m0[_2981].y) * _3049) * _3050) + _2858;
        _2970 = (((((_3030 * _2689) + _1075) * cbLight._m0[_2981].z) * _3049) * _3050) + _2860;
    }
    float _3116;
    float _3118;
    float _3120;
    float _3122;
    float _3124;
    float _3126;
    if (_2386.y == 0u)
    {
        uvec4 _3071 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3072 = _3071.x;
        uint _3083 = uint((float(_3071.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1011) / _3072))) + floor(float(uint(cbSceneParam._m0[85u].x * _1010) / _3072)));
        float _3093 = (log2(_2164 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3094 = isnan(0.0) ? _3093 : (isnan(_3093) ? 0.0 : max(_3093, 0.0));
        uint _3097 = uint(isnan(14.0) ? _3094 : (isnan(_3094) ? 14.0 : min(_3094, 14.0)));
        uvec4 _3102 = texelFetch(g_lightClusterGridBuffer, int(((_3097 << 2u) + (_3083 << 6u)) >> 2u));
        uint _3103 = _3102.x;
        uint _3104 = _3071.z;
        float _3183;
        float _3185;
        float _3187;
        float _3189;
        float _3191;
        float _3193;
        if (((((1u << ((_3104 >> 4u) & 15u)) + 4294967295u) & _3103) == 0u) || ((_3104 & 240u) == 0u))
        {
            _3183 = 0.0;
            _3185 = 0.0;
            _3187 = 0.0;
            _3189 = 0.0;
            _3191 = 0.0;
            _3193 = 0.0;
        }
        else
        {
            float _3184;
            float _3186;
            float _3188;
            float _3190;
            float _3192;
            float _3194;
            float _3327 = 0.0;
            float _3328 = 0.0;
            float _3329 = 0.0;
            float _3330 = 0.0;
            float _3331 = 0.0;
            float _3332 = 0.0;
            uint _3333 = 0u;
            uint _3342;
            bool _3343;
            for (;;)
            {
                _3342 = texelFetch(g_lightClassification, int((((_3097 << 5u) + (_3083 << 9u)) + (_3333 << 2u)) >> 2u)).x;
                _3343 = _3342 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3343)
                {
                    frontier_phi_66_pred = _3332;
                    frontier_phi_66_pred_1 = _3331;
                    frontier_phi_66_pred_2 = _3330;
                    frontier_phi_66_pred_3 = _3329;
                    frontier_phi_66_pred_4 = _3328;
                    frontier_phi_66_pred_5 = _3327;
                }
                else
                {
                    float _3451;
                    float _3452;
                    float _3453;
                    float _3454;
                    float _3455;
                    float _3456;
                    uint _3457;
                    _3451 = _3327;
                    _3452 = _3328;
                    _3453 = _3329;
                    _3454 = _3330;
                    _3455 = _3331;
                    _3456 = _3332;
                    _3457 = _3342;
                    float _3383;
                    float _3384;
                    float _3385;
                    float _3386;
                    float _3387;
                    float _3388;
                    for (;;)
                    {
                        uint _3461 = uint(findLSB(_3457)) + (_3333 << 5u);
                        uint _3458 = (_3457 + 4294967295u) & _3457;
                        uint _3463 = _3461 * 48u;
                        vec4 _3477 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3463)).x, texelFetch(g_PointLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3463 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3463 + 3u)).x));
                        uint _3483 = (_3461 * 48u) + 4u;
                        vec4 _3496 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3483)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 3u)).x));
                        uint _3502 = (_3461 * 48u) + 8u;
                        vec3 _3513 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3502)).x, texelFetch(g_PointLightRenderingBuffer, int(_3502 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3502 + 2u)).x));
                        float _3517 = _3477.x - _2162;
                        float _3518 = _3477.y - _2163;
                        float _3519 = _3477.z - _2164;
                        float _3520 = dot(vec3(_3517, _3518, _3519), vec3(_3517, _3518, _3519));
                        float _3523 = inversesqrt(_3520);
                        float _3524 = _3523 * _3517;
                        float _3525 = _3523 * _3518;
                        float _3526 = _3523 * _3519;
                        float _3527 = dot(vec3(_1029, _1032, _1035), vec3(_3524, _3525, _3526));
                        float _3532 = 1.0 - (_3520 * _3477.w);
                        float _4980 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0));
                        float _3533 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3534 = sqrt(_3520) * _3496.w;
                        float _3537 = 1.39999997615814208984375 / (_3534 + 1.39999997615814208984375);
                        float _3538 = _3537 * _3537;
                        float _3541 = ((1.0 - _3538) * _3527) + _3538;
                        float _3544 = _3534 * _3534;
                        float _3548 = ((isnan(0.0) ? _3541 : (isnan(_3541) ? 0.0 : max(_3541, 0.0))) * _3533) / ((_3544 * 0.699999988079071044921875) + 1.0);
                        float _3552 = (-0.0) - _2162;
                        float _3553 = (-0.0) - _2163;
                        float _3554 = (-0.0) - _2164;
                        float _3558 = inversesqrt(dot(vec3(_3552, _3553, _3554), vec3(_3552, _3553, _3554)));
                        float _3559 = _3558 * _3552;
                        float _3560 = _3558 * _3553;
                        float _3561 = _3558 * _3554;
                        float _3568 = exp2(log2(1.0 / ((_3544 * 3.5) + 5.0)) * 0.25);
                        float _3569 = 1.0 - _1104;
                        float _3576 = sqrt(1.0 - ((1.0 - (_3569 * _3569)) * (1.0 - (_3568 * _3568))));
                        float _3577 = _3576 * _3576;
                        float _3578 = _3577 * _3577;
                        float _3579 = _3559 + _3524;
                        float _3580 = _3560 + _3525;
                        float _3581 = _3561 + _3526;
                        float _3585 = inversesqrt(dot(vec3(_3579, _3580, _3581), vec3(_3579, _3580, _3581)));
                        float _3589 = dot(vec3(_1029, _1032, _1035), vec3(_3559, _3560, _3561));
                        float _4996 = isnan(0.0) ? _3589 : (isnan(_3589) ? 0.0 : max(_3589, 0.0));
                        float _3592 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                        float _3593 = dot(vec3(_1029, _1032, _1035), vec3(_3585 * _3579, _3585 * _3580, _3585 * _3581));
                        float _5007 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                        float _3596 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                        float _3600 = ((_3596 * _3596) * (_3578 + (-1.0))) + 1.0;
                        float _3601 = _3537 * _3577;
                        float _3602 = _3601 * _3601;
                        float _3605 = ((1.0 - _3602) * _3527) + _3602;
                        float _5018 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                        float _3606 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                        float _3607 = 1.0 - _3577;
                        float _3617 = (0.5 / (((_3606 * ((_3592 * _3607) + _3577)) + 9.9999999392252902907785028219223e-09) + (((_3606 * _3607) + _3577) * _3592))) * _3606;
                        float _5029 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0));
                        float _3628 = (((_3578 * 3.1415927410125732421875) * (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) / ((_3600 * _3600) * ((_3544 * 2.1991131305694580078125) + 3.141590118408203125))) * _3533;
                        _3386 = (_3548 * _3496.x) + _3454;
                        _3387 = (_3548 * _3496.y) + _3455;
                        _3388 = (_3548 * _3496.z) + _3456;
                        _3383 = (_3628 * _3513.x) + _3451;
                        _3384 = (_3628 * _3513.y) + _3452;
                        _3385 = (_3628 * _3513.z) + _3453;
                        if (_3458 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3451 = _3383;
                            _3452 = _3384;
                            _3453 = _3385;
                            _3454 = _3386;
                            _3455 = _3387;
                            _3456 = _3388;
                            _3457 = _3458;
                        }
                    }
                    frontier_phi_66_pred = _3388;
                    frontier_phi_66_pred_1 = _3387;
                    frontier_phi_66_pred_2 = _3386;
                    frontier_phi_66_pred_3 = _3385;
                    frontier_phi_66_pred_4 = _3384;
                    frontier_phi_66_pred_5 = _3383;
                }
                _3194 = frontier_phi_66_pred;
                _3192 = frontier_phi_66_pred_1;
                _3190 = frontier_phi_66_pred_2;
                _3188 = frontier_phi_66_pred_3;
                _3186 = frontier_phi_66_pred_4;
                _3184 = frontier_phi_66_pred_5;
                uint _3334 = _3333 + 1u;
                if (_3334 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3327 = _3184;
                    _3328 = _3186;
                    _3329 = _3188;
                    _3330 = _3190;
                    _3331 = _3192;
                    _3332 = _3194;
                    _3333 = _3334;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3183 = _3184;
            _3185 = _3186;
            _3187 = _3188;
            _3189 = _3190;
            _3191 = _3192;
            _3193 = _3194;
        }
        uvec4 _3197 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3198 = _3197.z;
        uint _3200 = (_3198 >> 8u) & 15u;
        float _3295;
        float _3297;
        float _3299;
        float _3301;
        float _3303;
        float _3305;
        if (((4294967295u << _3200) & _3103) == 0u)
        {
            _3295 = _3183;
            _3297 = _3185;
            _3299 = _3187;
            _3301 = _3189;
            _3303 = _3191;
            _3305 = _3193;
        }
        else
        {
            float _3320 = inversesqrt(dot(vec3(_2162, _2163, _2164), vec3(_2162, _2163, _2164)));
            float _3321 = _3320 * _2162;
            float _3322 = _3320 * _2163;
            float _3323 = _3320 * _2164;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3200 < ((_3198 >> 12u) & 15u))
            {
                float _3296;
                float _3298;
                float _3300;
                float _3302;
                float _3304;
                float _3306;
                float _3434 = _3183;
                float _3435 = _3185;
                float _3436 = _3187;
                float _3437 = _3189;
                float _3438 = _3191;
                float _3439 = _3193;
                uint _3440 = _3200;
                uint _3449;
                bool _3450;
                for (;;)
                {
                    _3449 = texelFetch(g_lightClassification, int((((_3097 << 5u) + (_3083 << 9u)) + (_3440 << 2u)) >> 2u)).x;
                    _3450 = _3449 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3450)
                    {
                        frontier_phi_72_pred = _3439;
                        frontier_phi_72_pred_1 = _3438;
                        frontier_phi_72_pred_2 = _3437;
                        frontier_phi_72_pred_3 = _3436;
                        frontier_phi_72_pred_4 = _3435;
                        frontier_phi_72_pred_5 = _3434;
                    }
                    else
                    {
                        float _3633;
                        float _3634;
                        float _3635;
                        float _3636;
                        float _3637;
                        float _3638;
                        float _3926;
                        float _3927;
                        float _3928;
                        float _3929;
                        float _3930;
                        float _3931;
                        float _3646 = _3434;
                        float _3647 = _3435;
                        float _3648 = _3436;
                        float _3649 = _3437;
                        float _3650 = _3438;
                        float _3651 = _3439;
                        uint _3652 = _3449;
                        uint _3653;
                        vec4 _3678;
                        float _3679;
                        vec4 _3694;
                        vec3 _3706;
                        vec4 _3721;
                        vec4 _3736;
                        float _3782;
                        bool _3783;
                        for (;;)
                        {
                            uint _3663 = ((_3440 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3652));
                            _3653 = (_3652 + 4294967295u) & _3652;
                            uint _3665 = _3663 * 40u;
                            _3678 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3665)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 3u)).x));
                            _3679 = _3678.w;
                            uint _3681 = (_3663 * 40u) + 4u;
                            _3694 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3681)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 3u)).x));
                            uint _3696 = (_3663 * 40u) + 8u;
                            _3706 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3696)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 2u)).x));
                            uint _3708 = (_3663 * 40u) + 16u;
                            _3721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 3u)).x));
                            uint _3723 = (_3663 * 40u) + 20u;
                            _3736 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3723)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 3u)).x));
                            uint _3738 = (_3663 * 40u) + 24u;
                            vec4 _3751 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3738)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 3u)).x));
                            uint _3757 = (_3663 * 40u) + 28u;
                            vec4 _3770 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3757)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 3u)).x));
                            _3782 = fma(_2164, _3770.z, fma(_2163, _3770.y, _3770.x * _2162)) + _3770.w;
                            _3783 = !((fma(_2164, _3751.z, fma(_2163, _3751.y, _3751.x * _2162)) + _3751.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3783)
                            {
                                float _3810 = _3678.x - _2162;
                                float _3811 = _3678.y - _2163;
                                float _3812 = _3678.z - _2164;
                                float _3813 = dot(vec3(_3810, _3811, _3812), vec3(_3810, _3811, _3812));
                                float _3816 = inversesqrt(_3813);
                                float _3817 = _3816 * _3810;
                                float _3818 = _3816 * _3811;
                                float _3819 = _3816 * _3812;
                                float _3823 = 1.0 - (_3813 / (_3679 * _3679));
                                float _5040 = isnan(0.0) ? _3823 : (isnan(_3823) ? 0.0 : max(_3823, 0.0));
                                float _3824 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3828 = sqrt(_3813) * _3694.w;
                                float _3830 = 1.39999997615814208984375 / (_3828 + 1.39999997615814208984375);
                                float _3831 = _3830 * _3830;
                                float _3834 = ((1.0 - _3831) * dot(vec3(_3817, _3818, _3819), vec3(_1029, _1032, _1035))) + _3831;
                                float _3837 = _3828 * _3828;
                                float _3841 = (fma(_2164, _3721.z, fma(_2163, _3721.y, _3721.x * _2162)) + _3721.w) / _3782;
                                float _3842 = (fma(_2164, _3736.z, fma(_2163, _3736.y, _3736.x * _2162)) + _3736.w) / _3782;
                                float _3846 = 1.0 - dot(vec2(_3841, _3842), vec2(_3841, _3842));
                                float _5056 = isnan(0.0) ? _3846 : (isnan(_3846) ? 0.0 : max(_3846, 0.0));
                                float _3847 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
                                float _3848 = _3847 * (((isnan(0.0) ? _3834 : (isnan(_3834) ? 0.0 : max(_3834, 0.0))) * _3824) / ((_3837 * 0.699999988079071044921875) + 1.0));
                                float _3860 = exp2(log2(1.0 / ((_3837 * 3.5) + 5.0)) * 0.25);
                                float _3861 = 1.0 - _1104;
                                float _3868 = sqrt(1.0 - ((1.0 - (_3861 * _3861)) * (1.0 - (_3860 * _3860))));
                                float _3869 = _3868 * _3868;
                                float _3870 = _3869 * _3869;
                                float _3871 = _3817 - _3321;
                                float _3872 = _3818 - _3322;
                                float _3873 = _3819 - _3323;
                                float _3877 = inversesqrt(dot(vec3(_3871, _3872, _3873), vec3(_3871, _3872, _3873)));
                                float _3881 = dot(vec3(_1029, _1032, _1035), vec3((-0.0) - _3321, (-0.0) - _3322, (-0.0) - _3323));
                                float _5067 = isnan(0.0) ? _3881 : (isnan(_3881) ? 0.0 : max(_3881, 0.0));
                                float _3884 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                                float _3885 = dot(vec3(_1029, _1032, _1035), vec3(_3877 * _3871, _3877 * _3872, _3877 * _3873));
                                float _5078 = isnan(0.0) ? _3885 : (isnan(_3885) ? 0.0 : max(_3885, 0.0));
                                float _3888 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                                float _3892 = ((_3888 * _3888) * (_3870 + (-1.0))) + 1.0;
                                float _3893 = _3830 * _3869;
                                float _3894 = _3893 * _3893;
                                float _3900 = ((1.0 - _3894) * dot(vec3(_1029, _1032, _1035), vec3(_3817, _3818, _3819))) + _3894;
                                float _5089 = isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0));
                                float _3901 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                                float _3902 = 1.0 - _3869;
                                float _3912 = (0.5 / (((_3901 * ((_3884 * _3902) + _3869)) + 9.9999999392252902907785028219223e-09) + (((_3901 * _3902) + _3869) * _3884))) * _3901;
                                float _5100 = isnan(0.0) ? _3912 : (isnan(_3912) ? 0.0 : max(_3912, 0.0));
                                float _3922 = (_3847 * _3824) * (((_3870 * 3.1415927410125732421875) * (isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0)))) / ((_3892 * _3892) * ((_3837 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3848 * _3694.y;
                                frontier_phi_78_pred_1 = _3848 * _3694.x;
                                frontier_phi_78_pred_2 = _3922 * _3706.z;
                                frontier_phi_78_pred_3 = _3922 * _3706.y;
                                frontier_phi_78_pred_4 = _3922 * _3706.x;
                                frontier_phi_78_pred_5 = _3848 * _3694.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3930 = frontier_phi_78_pred;
                            _3929 = frontier_phi_78_pred_1;
                            _3928 = frontier_phi_78_pred_2;
                            _3927 = frontier_phi_78_pred_3;
                            _3926 = frontier_phi_78_pred_4;
                            _3931 = frontier_phi_78_pred_5;
                            _3636 = _3929 + _3649;
                            _3637 = _3930 + _3650;
                            _3638 = _3931 + _3651;
                            _3633 = _3926 + _3646;
                            _3634 = _3927 + _3647;
                            _3635 = _3928 + _3648;
                            if (_3653 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3646 = _3633;
                                _3647 = _3634;
                                _3648 = _3635;
                                _3649 = _3636;
                                _3650 = _3637;
                                _3651 = _3638;
                                _3652 = _3653;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3638;
                        frontier_phi_72_pred_1 = _3637;
                        frontier_phi_72_pred_2 = _3636;
                        frontier_phi_72_pred_3 = _3635;
                        frontier_phi_72_pred_4 = _3634;
                        frontier_phi_72_pred_5 = _3633;
                    }
                    _3306 = frontier_phi_72_pred;
                    _3304 = frontier_phi_72_pred_1;
                    _3302 = frontier_phi_72_pred_2;
                    _3300 = frontier_phi_72_pred_3;
                    _3298 = frontier_phi_72_pred_4;
                    _3296 = frontier_phi_72_pred_5;
                    uint _3441 = _3440 + 1u;
                    if (_3441 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3434 = _3296;
                        _3435 = _3298;
                        _3436 = _3300;
                        _3437 = _3302;
                        _3438 = _3304;
                        _3439 = _3306;
                        _3440 = _3441;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3306;
                frontier_phi_60_61_ladder_1 = _3304;
                frontier_phi_60_61_ladder_2 = _3300;
                frontier_phi_60_61_ladder_3 = _3298;
                frontier_phi_60_61_ladder_4 = _3296;
                frontier_phi_60_61_ladder_5 = _3302;
            }
            else
            {
                frontier_phi_60_61_ladder = _3193;
                frontier_phi_60_61_ladder_1 = _3191;
                frontier_phi_60_61_ladder_2 = _3187;
                frontier_phi_60_61_ladder_3 = _3185;
                frontier_phi_60_61_ladder_4 = _3183;
                frontier_phi_60_61_ladder_5 = _3189;
            }
            _3295 = frontier_phi_60_61_ladder_4;
            _3297 = frontier_phi_60_61_ladder_3;
            _3299 = frontier_phi_60_61_ladder_2;
            _3301 = frontier_phi_60_61_ladder_5;
            _3303 = frontier_phi_60_61_ladder_1;
            _3305 = frontier_phi_60_61_ladder;
        }
        float _3310 = isnan(1.0) ? _1088 : (isnan(_1088) ? 1.0 : min(_1088, 1.0));
        _3116 = (_3310 * _3301) + _2628;
        _3118 = (_3310 * _3303) + _2630;
        _3120 = (_3310 * _3305) + _2632;
        _3122 = ((_3295 * _1072) * _3310) + _2966;
        _3124 = ((_3297 * _1074) * _3310) + _2968;
        _3126 = ((_3299 * _1075) * _3310) + _2970;
    }
    else
    {
        _3116 = _2628;
        _3118 = _2630;
        _3120 = _2632;
        _3122 = _2966;
        _3124 = _2968;
        _3126 = _2970;
    }
    float _5116 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
    float _5127 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _5138 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    uint _3146 = _285 + 6u;
    float _3154 = _1010 / cbSceneParam._m0[86u].x;
    float _3155 = _1011 / cbSceneParam._m0[86u].y;
    vec4 _3169 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3154, _3155, (log2((isnan(cbSceneParam._m0[77u].w) ? _945 : (isnan(_945) ? cbSceneParam._m0[77u].w : min(_945, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3171 = _3169.x;
    float _3172 = _3169.y;
    float _3173 = _3169.z;
    float _3174 = _3169.w;
    float _3245;
    float _3247;
    float _3249;
    float _3251;
    if (_945 > cbSceneParam._m0[78u].w)
    {
        float _3208 = isnan(_945) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _945 : min(cbSceneParam._m0[80u].w, _945));
        float _3209 = _3208 / _945;
        float _3220 = _3209 * _995;
        float _3221 = _996 * _3209;
        float _3222 = (-0.0) - _3221;
        float _3223 = _3209 * _997;
        float _3225 = (cbSceneParam._m0[77u].w * _3222) / _3208;
        float _3226 = _3225 + cbSceneParam._m0[79u].w;
        float _3227 = cbSceneParam._m0[79u].w - _3221;
        float _3233 = sqrt(((_3220 * _3220) + (_3221 * _3221)) + (_3223 * _3223));
        float _3236 = (1.0 - (cbSceneParam._m0[77u].w / _3208)) * _3233;
        float _3241 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3243 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3396;
        if (abs((_3222 - _3225) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3396 = ((((_3226 > 0.0) ? exp2(_3241 * _3226) : (2.0 - exp2(_3243 * _3226))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3236;
        }
        else
        {
            float _3356 = 1.0 / cbSceneParam._m0[80u].x;
            float _3357 = isnan(_3227) ? _3226 : (isnan(_3226) ? _3227 : max(_3226, _3227));
            float _3358 = isnan(_3227) ? _3226 : (isnan(_3226) ? _3227 : min(_3226, _3227));
            float _3367 = isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : min(_3357, 0.0));
            float _3368 = isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : min(_3358, 0.0));
            _3396 = ((abs(_3233 / _3222) * cbSceneParam._m0[80u].y) * ((((_3367 - _3368) * 2.0) - ((exp2(_3241 * (isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0)))) - exp2(_3241 * (isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : max(_3358, 0.0))))) * _3356)) - ((exp2(_3243 * _3367) - exp2(_3243 * _3368)) * _3356))) + (_3236 * cbSceneParam._m0[80u].z);
        }
        vec4 _3398 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3154, _3155, 1.0), 0.0);
        float _3407 = exp2((_3396 * (-1.44269502162933349609375)) * (1.0 - _3398.w));
        float _3408 = log2(_3407);
        float _3424 = log2(_3174);
        _3245 = (exp2(_3424 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3408 * cbSceneParam._m0[78u].x)) * _3398.x) / cbSceneParam._m0[78u].x)) + _3171;
        _3247 = (exp2(_3424 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3408 * cbSceneParam._m0[78u].y)) * _3398.y) / cbSceneParam._m0[78u].y)) + _3172;
        _3249 = (exp2(_3424 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3408 * cbSceneParam._m0[78u].z)) * _3398.z) / cbSceneParam._m0[78u].z)) + _3173;
        _3251 = _3407 * _3174;
    }
    else
    {
        _3245 = _3171;
        _3247 = _3172;
        _3249 = _3173;
        _3251 = _3174;
    }
    float _3263 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3264 = _3263 == 3.0;
    float _3265 = log2(_3251);
    float _3272 = exp2(_3265 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5116 : (isnan(_5116) ? 1.0 : min(_5116, 1.0))) * (_3116 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1088))) + ((_3122 + ((isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0))) * _1896)) * cbPerFrame._m0[3u].x));
    float _3273 = exp2(_3265 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_3118 + ((isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0))) * _1088))) + ((_3124 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1896)) * cbPerFrame._m0[3u].x));
    float _3274 = exp2(_3265 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0))) * (_3120 + ((isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))) * _1088))) + ((_3126 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1896)) * cbPerFrame._m0[3u].x));
    float _3283 = (_3263 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3283 * (_3264 ? _3272 : (_3272 + (cbSceneParam._m0[72u].w * _3245)));
    SV_Target.y = _3283 * (_3264 ? _3273 : (_3273 + (cbSceneParam._m0[72u].w * _3247)));
    SV_Target.z = _3283 * (_3264 ? _3274 : (_3274 + (cbSceneParam._m0[72u].w * _3249)));
    SV_Target.w = cbInstanceData._m0[_3146].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3146].w;
}


