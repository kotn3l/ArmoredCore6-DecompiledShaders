#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1128;
float _3792;
float _3793;
float _3794;
float _3795;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _217 = _216 * _208;
    float _218 = _216 * _209;
    float _219 = _216 * _210;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _231 = _230 * TANGENT.x;
    float _232 = _230 * TANGENT.y;
    float _233 = _230 * TANGENT.z;
    uint _236 = uint(roundEven(NORMAL.w)) * 13u;
    uint _242 = _236 + 1u;
    uint _246 = _236 + 2u;
    float _255 = sqrt(((cbInstanceData._m0[_242].x * cbInstanceData._m0[_242].x) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x)) + (cbInstanceData._m0[_246].x * cbInstanceData._m0[_246].x));
    float _256 = _255 * TEXCOORD.z;
    float _257 = _255 * TEXCOORD.w;
    vec4 _276 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _282 = _276.x * cbMtdParam._m0[9u].x;
    float _283 = _276.y * cbMtdParam._m0[9u].y;
    float _284 = _276.z * cbMtdParam._m0[9u].z;
    vec4 _303 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _256) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _257) + cbTextureTilingScale._m0[14u].w));
    vec4 _323 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _256) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _257) + cbTextureTilingScale._m0[20u].w));
    vec4 _349 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _353 = _349.z;
    float _357 = (_349.x * 2.0) + (-1.0);
    float _358 = (_349.y * 2.0) + (-1.0);
    float _359 = dot(vec2(_357, _358), vec2(_357, _358));
    float _3804 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _365 = sqrt(1.0 - (isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0))));
    float _370 = _357 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_323.x * 2.0) + (-1.0)));
    float _371 = _358 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_323.y * 2.0) + (-1.0)));
    float _374 = fma(_365, _224, fma(_371, _231, _370 * _217));
    float _377 = fma(_365, _225, fma(_371, _232, _370 * _218));
    float _380 = fma(_365, _226, fma(_371, _233, _370 * _219));
    float _384 = inversesqrt(dot(vec3(_374, _377, _380), vec3(_374, _377, _380)));
    vec4 _420 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _256) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _257) + cbTextureTilingScale._m0[11u].w));
    float _422 = _420.x;
    float _423 = 1.0 - _422;
    float _430 = ((_422 - _423) * cbMtdParam._m0[24u].z) + _423;
    float _432 = (cbMtdParam._m0[19u].x + dot(vec4(_384 * _374, _384 * _377, _384 * _380, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_430 * cbMtdParam._m0[21u].z);
    float _3815 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _433 = isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0));
    float _448 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_430 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3826 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _449 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
    float _453 = ((_433 * ((_303.x * cbMtdParam._m0[18u].x) - _282)) * _449) + _282;
    float _454 = ((_433 * ((_303.y * cbMtdParam._m0[18u].y) - _283)) * _449) + _283;
    float _455 = ((_433 * ((_303.z * cbMtdParam._m0[18u].z) - _284)) * _449) + _284;
    vec4 _468 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _470 = _468.x;
    float _473 = _470 - ((_470 * _433) * _449);
    float _478 = (((_323.z - _353) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _353;
    vec4 _491 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _256) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _257) + cbTextureTilingScale._m0[15u].w));
    float _498 = (_491.x * 2.0) + (-1.0);
    float _499 = (_491.y * 2.0) + (-1.0);
    float _500 = dot(vec2(_498, _499), vec2(_498, _499));
    float _3837 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _509 = (((_491.z - _478) * _433) * _449) + _478;
    float _524 = (((cbMtdParam._m0[21u].x * _370) + ((_498 - _370) * _433)) * _449) + _370;
    float _525 = (((cbMtdParam._m0[21u].x * _371) + ((_499 - _371) * _433)) * _449) + _371;
    float _526 = (((sqrt(1.0 - (isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0)))) - _365) * _433) * _449) + _365;
    float _531 = cbMtdParam._m0[22u].x + _349.w;
    float _534 = fma(_526, _224, fma(_525, _231, _524 * _217));
    float _537 = fma(_526, _225, fma(_525, _232, _524 * _218));
    float _540 = fma(_526, _226, fma(_525, _233, _524 * _219));
    float _544 = inversesqrt(dot(vec3(_534, _537, _540), vec3(_534, _537, _540)));
    float _545 = _544 * _534;
    float _546 = _544 * _537;
    float _547 = _544 * _540;
    float _3848 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _548 = isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0));
    float _3859 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _3870 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _3881 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _3892 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _3903 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _553 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
    float _567 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _608 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _618 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _608);
    float _619 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _608);
    float _620 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _608);
    float _624 = inversesqrt(dot(vec3(_618, _619, _620), vec3(_618, _619, _620)));
    float _625 = _618 * _624;
    float _626 = _619 * _624;
    float _627 = _620 * _624;
    vec4 _632 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _634 = _632.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _809 = sqrt(((_618 * _618) + (_619 * _619)) + (_620 * _620));
        float _815 = (cbMatDynParam._m0[5u].x * _809) + cbMatDynParam._m0[5u].y;
        float _3914 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
        float _816 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
        float _820 = (cbMatDynParam._m0[5u].z * _809) + cbMatDynParam._m0[5u].w;
        float _3925 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0))) - _816)) + _816) < ((_634 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _646 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _647 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _667 = fma(_547, cbSceneParam._m0[5u].z, fma(_546, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _545));
    float _670 = fma(_547, cbSceneParam._m0[6u].z, fma(_546, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _545));
    float _673 = fma(_547, cbSceneParam._m0[7u].z, fma(_546, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _545));
    uint _686 = _236 + 9u;
    uint _687 = _686 + uint(cbMatDynParam._m0[0u].w);
    float _693 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0)))) * cbInstanceData._m0[_687].x;
    float _694 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0)))) * cbInstanceData._m0[_687].y;
    float _695 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0)))) * cbInstanceData._m0[_687].z;
    float _3936 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _696 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _3947 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _697 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    float _3958 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _698 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
    float _699 = 1.0 - _553;
    float _700 = _696 * _699;
    float _701 = _697 * _699;
    float _702 = _698 * _699;
    float _707 = (_696 + (-0.039999999105930328369140625)) * _553;
    float _708 = (_697 + (-0.039999999105930328369140625)) * _553;
    float _709 = (_698 + (-0.039999999105930328369140625)) * _553;
    float _710 = _707 + 0.039999999105930328369140625;
    float _712 = _708 + 0.039999999105930328369140625;
    float _713 = _709 + 0.039999999105930328369140625;
    vec4 _722 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _646, cbSceneParam._m0[86u].y * _647));
    float _726 = ((isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0))) * TEXCOORD_5.w) * _722.x;
    float _727 = dot(vec3(_545, _546, _547), vec3(_625, _626, _627));
    float _730 = _727 * 2.0;
    float _734 = (_730 * _545) - _625;
    float _735 = (_730 * _546) - _626;
    float _736 = (_730 * _547) - _627;
    float _740 = abs(dot(vec3(_625, _626, _627), vec3(_545, _546, _547)));
    float _3969 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _742 = sqrt(_548);
    float _755 = exp2((_742 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_742 * 3.0));
    float _761 = (1.0 - _755) * ((_742 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _762 = _755 * _742;
    float _790 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _794 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _798 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1127;
    float _1129;
    float _1130;
    float _1131;
    float _1132;
    float _1133;
    float _1134;
    float _1135;
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    float _1142;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _852 = fma(_798, cbModelParam._m0[26u].z, fma(_794, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _790));
        float _856 = fma(_798, cbModelParam._m0[27u].z, fma(_794, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _790));
        float _860 = fma(_798, cbModelParam._m0[28u].z, fma(_794, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _790));
        float _885 = _790 + _545;
        float _886 = _794 + _546;
        float _887 = _798 + _547;
        float _897 = fma(_887, cbModelParam._m0[26u].z, fma(_886, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _885)) - _852;
        float _898 = fma(_887, cbModelParam._m0[27u].z, fma(_886, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _885)) - _856;
        float _899 = fma(_887, cbModelParam._m0[28u].z, fma(_886, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _885)) - _860;
        float _903 = inversesqrt(dot(vec3(_897, _898, _899), vec3(_897, _898, _899)));
        float _916 = ((_903 * _897) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_852 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _917 = ((_903 * _898) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_856 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _918 = ((_903 * _899) / cbModelParam._m0[34u].z) + ((((((_860 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _921 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_916, _917, _918), 0.0);
        vec4 _928 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_916, _917, _918), 0.0);
        vec4 _935 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_916, _917, _918), 0.0);
        vec4 _942 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_916, _917, _918), 0.0);
        float _955 = exp2((_921.w + (-0.5)) * 20.0) * 2.0;
        float _956 = _955 * (_921.x + (-0.5));
        float _957 = _955 * (_921.y + (-0.5));
        float _958 = _955 * (_921.z + (-0.5));
        float _965 = exp2((_928.w + (-0.5)) * 20.0) * 2.0;
        float _966 = _965 * (_928.x + (-0.5));
        float _967 = _965 * (_928.y + (-0.5));
        float _968 = _965 * (_928.z + (-0.5));
        float _975 = exp2((_935.w + (-0.5)) * 20.0) * 2.0;
        float _976 = _975 * (_935.x + (-0.5));
        float _977 = _975 * (_935.y + (-0.5));
        float _978 = _975 * (_935.z + (-0.5));
        float _985 = exp2((_942.w + (-0.5)) * 20.0) * 2.0;
        float _986 = _985 * (_942.x + (-0.5));
        float _987 = _985 * (_942.y + (-0.5));
        float _988 = _985 * (_942.z + (-0.5));
        float _989 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _990 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        float _991 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _992 = _956 * 0.5;
        float _993 = _966 * 0.5;
        float _994 = _976 * 0.5;
        float _995 = dot(vec3(_992, _993, _994), vec3(_992, _993, _994));
        float _1000 = (_995 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_995);
        float _1009 = (dot(vec3(_545, _546, _547), vec3(_1000 * _992, _1000 * _993, _1000 * _994)) + 1.0) * 0.5;
        float _3995 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1019 = sqrt(((_993 * _993) + (_992 * _992)) + (_994 * _994)) / (_989 + 9.9999997473787516355514526367188e-06);
        float _4006 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1020 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
        float _1021 = _1020 * 2.0;
        float _1025 = (1.0 - _1020) / (_1020 + 1.0);
        float _4017 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1026 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
        float _1035 = ((((1.0 - _1026) * (_1021 + 2.0)) * exp2(log2(isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0))) * (_1021 + 1.0))) + _1026) * _989;
        float _1036 = _957 * 0.5;
        float _1037 = _967 * 0.5;
        float _1038 = _977 * 0.5;
        float _1039 = dot(vec3(_1036, _1037, _1038), vec3(_1036, _1037, _1038));
        float _1044 = (_1039 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1039);
        float _1052 = (dot(vec3(_545, _546, _547), vec3(_1044 * _1036, _1044 * _1037, _1044 * _1038)) + 1.0) * 0.5;
        float _4028 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1061 = sqrt(((_1037 * _1037) + (_1036 * _1036)) + (_1038 * _1038)) / (_990 + 9.9999997473787516355514526367188e-06);
        float _4039 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
        float _1062 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1063 = _1062 * 2.0;
        float _1067 = (1.0 - _1062) / (_1062 + 1.0);
        float _4050 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
        float _1077 = ((((1.0 - _1068) * (_1063 + 2.0)) * exp2(log2(isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0))) * (_1063 + 1.0))) + _1068) * _990;
        float _1078 = _958 * 0.5;
        float _1079 = _968 * 0.5;
        float _1080 = _978 * 0.5;
        float _1081 = dot(vec3(_1078, _1079, _1080), vec3(_1078, _1079, _1080));
        float _1086 = (_1081 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1081);
        float _1094 = (dot(vec3(_545, _546, _547), vec3(_1086 * _1078, _1086 * _1079, _1086 * _1080)) + 1.0) * 0.5;
        float _4061 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1103 = sqrt(((_1079 * _1079) + (_1078 * _1078)) + (_1080 * _1080)) / (_991 + 9.9999997473787516355514526367188e-06);
        float _4072 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1105 = _1104 * 2.0;
        float _1109 = (1.0 - _1104) / (_1104 + 1.0);
        float _4083 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
        float _1119 = ((((1.0 - _1110) * (_1105 + 2.0)) * exp2(log2(isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * (_1105 + 1.0))) + _1110) * _991;
        _1127 = _958;
        _1129 = _957;
        _1130 = _956;
        _1131 = _968;
        _1132 = _967;
        _1133 = _966;
        _1134 = _978;
        _1135 = _977;
        _1136 = _976;
        _1137 = _991;
        _1138 = _990;
        _1139 = _989;
        _1140 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0)));
        _1141 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0)));
        _1142 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)));
    }
    else
    {
        _1127 = _1128;
        _1129 = _1128;
        _1130 = _1128;
        _1131 = _1128;
        _1132 = _1128;
        _1133 = _1128;
        _1134 = _1128;
        _1135 = _1128;
        _1136 = _1128;
        _1137 = _1128;
        _1138 = _1128;
        _1139 = _1128;
        _1140 = 0.0;
        _1141 = 0.0;
        _1142 = 0.0;
    }
    float _1439;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1170 = fma(_798, cbModelParam._m0[30u].z, fma(_794, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _790));
        float _1174 = fma(_798, cbModelParam._m0[31u].z, fma(_794, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _790));
        float _1178 = fma(_798, cbModelParam._m0[32u].z, fma(_794, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _790));
        float _1201 = _790 + _545;
        float _1202 = _794 + _546;
        float _1203 = _798 + _547;
        float _1213 = fma(_1203, cbModelParam._m0[30u].z, fma(_1202, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1201)) - _1170;
        float _1214 = fma(_1203, cbModelParam._m0[31u].z, fma(_1202, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1201)) - _1174;
        float _1215 = fma(_1203, cbModelParam._m0[32u].z, fma(_1202, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1201)) - _1178;
        float _1219 = inversesqrt(dot(vec3(_1213, _1214, _1215), vec3(_1213, _1214, _1215)));
        float _1232 = ((_1219 * _1213) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1170 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1233 = ((_1219 * _1214) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1174 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1234 = ((_1219 * _1215) / cbModelParam._m0[35u].z) + ((((((_1178 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1236 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1232, _1233, _1234), 0.0);
        vec4 _1243 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1232, _1233, _1234), 0.0);
        vec4 _1250 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1232, _1233, _1234), 0.0);
        vec4 _1257 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1232, _1233, _1234), 0.0);
        float _1269 = exp2((_1236.w + (-0.5)) * 20.0) * 2.0;
        float _1270 = _1269 * (_1236.x + (-0.5));
        float _1271 = _1269 * (_1236.y + (-0.5));
        float _1272 = _1269 * (_1236.z + (-0.5));
        float _1279 = exp2((_1243.w + (-0.5)) * 20.0) * 2.0;
        float _1280 = _1279 * (_1243.x + (-0.5));
        float _1281 = _1279 * (_1243.y + (-0.5));
        float _1282 = _1279 * (_1243.z + (-0.5));
        float _1289 = exp2((_1250.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1250.x + (-0.5));
        float _1291 = _1289 * (_1250.y + (-0.5));
        float _1292 = _1289 * (_1250.z + (-0.5));
        float _1299 = exp2((_1257.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1257.x + (-0.5));
        float _1301 = _1299 * (_1257.y + (-0.5));
        float _1302 = _1299 * (_1257.z + (-0.5));
        float _1303 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1304 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1305 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1306 = _1270 * 0.5;
        float _1307 = _1280 * 0.5;
        float _1308 = _1290 * 0.5;
        float _1309 = dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308));
        float _1314 = (_1309 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1309);
        float _1322 = (dot(vec3(_545, _546, _547), vec3(_1314 * _1306, _1314 * _1307, _1314 * _1308)) + 1.0) * 0.5;
        float _4124 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1331 = sqrt(((_1307 * _1307) + (_1306 * _1306)) + (_1308 * _1308)) / (_1303 + 9.9999997473787516355514526367188e-06);
        float _4135 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1332 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1333 = _1332 * 2.0;
        float _1337 = (1.0 - _1332) / (_1332 + 1.0);
        float _4146 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
        float _1347 = ((((1.0 - _1338) * (_1333 + 2.0)) * exp2(log2(isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (_1333 + 1.0))) + _1338) * _1303;
        float _1348 = _1271 * 0.5;
        float _1349 = _1281 * 0.5;
        float _1350 = _1291 * 0.5;
        float _1351 = dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350));
        float _1356 = (_1351 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1351);
        float _1364 = (dot(vec3(_545, _546, _547), vec3(_1356 * _1348, _1356 * _1349, _1356 * _1350)) + 1.0) * 0.5;
        float _4157 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1373 = sqrt(((_1349 * _1349) + (_1348 * _1348)) + (_1350 * _1350)) / (_1304 + 9.9999997473787516355514526367188e-06);
        float _4168 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1374 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1375 = _1374 * 2.0;
        float _1379 = (1.0 - _1374) / (_1374 + 1.0);
        float _4179 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
        float _1389 = ((((1.0 - _1380) * (_1375 + 2.0)) * exp2(log2(isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0))) * (_1375 + 1.0))) + _1380) * _1304;
        float _1390 = _1272 * 0.5;
        float _1391 = _1282 * 0.5;
        float _1392 = _1292 * 0.5;
        float _1393 = dot(vec3(_1390, _1391, _1392), vec3(_1390, _1391, _1392));
        float _1398 = (_1393 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1393);
        float _1406 = (dot(vec3(_545, _546, _547), vec3(_1398 * _1390, _1398 * _1391, _1398 * _1392)) + 1.0) * 0.5;
        float _4190 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1415 = sqrt(((_1391 * _1391) + (_1390 * _1390)) + (_1392 * _1392)) / (_1305 + 9.9999997473787516355514526367188e-06);
        float _4201 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1416 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1417 = _1416 * 2.0;
        float _1421 = (1.0 - _1416) / (_1416 + 1.0);
        float _4212 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1422 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
        float _1431 = ((((1.0 - _1422) * (_1417 + 2.0)) * exp2(log2(isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0))) * (_1417 + 1.0))) + _1422) * _1305;
        _1439 = _1272;
        _1440 = _1271;
        _1441 = _1270;
        _1442 = _1282;
        _1443 = _1281;
        _1444 = _1280;
        _1445 = _1292;
        _1446 = _1291;
        _1447 = _1290;
        _1448 = _1305;
        _1449 = _1304;
        _1450 = _1303;
        _1451 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0)));
        _1452 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0)));
        _1453 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0)));
    }
    else
    {
        _1439 = _1128;
        _1440 = _1128;
        _1441 = _1128;
        _1442 = _1128;
        _1443 = _1128;
        _1444 = _1128;
        _1445 = _1128;
        _1446 = _1128;
        _1447 = _1128;
        _1448 = _1128;
        _1449 = _1128;
        _1450 = _1128;
        _1451 = 0.0;
        _1452 = 0.0;
        _1453 = 0.0;
    }
    float _1463 = (cbModelParam._m0[1u].x * (_1451 - _1140)) + _1140;
    float _1464 = (cbModelParam._m0[1u].x * (_1452 - _1141)) + _1141;
    float _1465 = (cbModelParam._m0[1u].x * (_1453 - _1142)) + _1142;
    float _1486 = fma(_1465, cbSceneParam._m0[89u].z, fma(_1464, cbSceneParam._m0[89u].y, _1463 * cbSceneParam._m0[89u].x));
    float _1489 = fma(_1465, cbSceneParam._m0[90u].z, fma(_1464, cbSceneParam._m0[90u].y, _1463 * cbSceneParam._m0[90u].x));
    float _1492 = fma(_1465, cbSceneParam._m0[91u].z, fma(_1464, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1463));
    float _1507 = _734 * 0.5;
    float _1508 = _735 * 0.5;
    float _1509 = _736 * 0.5;
    float _1510 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1441, _1444, _1447, _1450));
    float _1513 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1440, _1443, _1446, _1449));
    float _1516 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1439, _1442, _1445, _1448));
    float _1550;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1523 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1127, _1131, _1134, _1137));
        float _1527 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1129, _1132, _1135, _1138));
        float _1531 = dot(vec4(_1507, _1508, _1509, 1.0), vec4(_1130, _1133, _1136, _1139));
        float _1538 = dot(vec4(cbModelParam._m0[39u]), vec4(_1507, _1508, _1509, 1.0));
        _1550 = dot(vec3(isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0)), isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0)), isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1538) ? 0.0 : (isnan(0.0) ? _1538 : max(0.0, _1538))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1550 = 1.0;
    }
    float _1561;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1552 = dot(vec4(cbModelParam._m0[40u]), vec4(_1507, _1508, _1509, 1.0));
        _1561 = dot(vec3(isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)), isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0)), isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1552) ? 0.0 : (isnan(0.0) ? _1552 : max(0.0, _1552))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1561 = 1.0;
    }
    float _1565 = (_1561 * cbModelParam._m0[1u].x) + (_1550 * (1.0 - cbModelParam._m0[1u].x));
    float _1575 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _548);
    float _1576 = isnan(_1575) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1575 : min(cbModelParam._m0[25u].z, _1575));
    float _1656;
    float _1658;
    float _1660;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1623 = fma(_798, cbModelParam._m0[13u].z, fma(_794, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _790)) + cbModelParam._m0[13u].w;
        float _1627 = fma(_798, cbModelParam._m0[14u].z, fma(_794, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _790)) + cbModelParam._m0[14u].w;
        float _1631 = fma(_798, cbModelParam._m0[15u].z, fma(_794, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _790)) + cbModelParam._m0[15u].w;
        float _1634 = fma(_736, cbModelParam._m0[13u].z, fma(_735, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _734));
        float _1637 = fma(_736, cbModelParam._m0[14u].z, fma(_735, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _734));
        float _1640 = fma(_736, cbModelParam._m0[15u].z, fma(_735, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _734));
        float _1668;
        if (_1634 > 0.0)
        {
            _1668 = abs((1.0 - _1623) / _1634);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1634 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1623 + 1.0) / _1634);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1668 = frontier_phi_17_15_ladder;
        }
        float _1839;
        if (_1637 > 0.0)
        {
            _1839 = abs((1.0 - _1627) / _1637);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1637 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1627 + 1.0) / _1637);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1839 = frontier_phi_26_22_ladder;
        }
        float _2135;
        if (_1640 > 0.0)
        {
            _2135 = abs((1.0 - _1631) / _1640);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1640 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1631 + 1.0) / _1640);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2135 = frontier_phi_38_33_ladder;
        }
        float _2137 = isnan(_1839) ? _1668 : (isnan(_1668) ? _1839 : min(_1668, _1839));
        float _2138 = isnan(_2135) ? _2137 : (isnan(_2137) ? _2135 : min(_2137, _2135));
        float _2142 = (_2138 * _1634) + _1623;
        float _2143 = (_2138 * _1637) + _1627;
        float _2144 = (_2138 * _1640) + _1631;
        float _2145 = _2138 * 9.9999997473787516355514526367188e-05;
        float _2147 = (-1.0) - _2145;
        float _2149 = _2145 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2144 > _2149) || ((_2144 < _2147) || ((_2143 > _2149) || ((_2143 < _2147) || ((_2142 < _2147) || (_2142 > _2149))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2289 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2144, cbModelParam._m0[9u].z, fma(_2143, cbModelParam._m0[9u].y, _2142 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2144, cbModelParam._m0[10u].z, fma(_2143, cbModelParam._m0[10u].y, _2142 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2144, cbModelParam._m0[11u].z, fma(_2143, cbModelParam._m0[11u].y, _2142 * cbModelParam._m0[11u].x))), _1576);
            frontier_phi_16_38_ladder = _2289.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2289.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2289.x * cbModelParam._m0[1u].y;
        }
        _1656 = frontier_phi_16_38_ladder_2;
        _1658 = frontier_phi_16_38_ladder_1;
        _1660 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1644 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_734, _735, _736), _1576);
        _1656 = _1644.x * cbModelParam._m0[1u].y;
        _1658 = _1644.y * cbModelParam._m0[1u].y;
        _1660 = _1644.z * cbModelParam._m0[1u].y;
    }
    float _1664 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _548);
    float _1665 = isnan(_1664) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1664 : min(cbModelParam._m0[25u].w, _1664));
    float _1754;
    float _1756;
    float _1758;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1718 = fma(_798, cbModelParam._m0[21u].z, fma(_794, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _790)) + cbModelParam._m0[21u].w;
        float _1722 = fma(_798, cbModelParam._m0[22u].z, fma(_794, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _790)) + cbModelParam._m0[22u].w;
        float _1726 = fma(_798, cbModelParam._m0[23u].z, fma(_794, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _790)) + cbModelParam._m0[23u].w;
        float _1729 = fma(_736, cbModelParam._m0[21u].z, fma(_735, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _734));
        float _1732 = fma(_736, cbModelParam._m0[22u].z, fma(_735, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _734));
        float _1735 = fma(_736, cbModelParam._m0[23u].z, fma(_735, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _734));
        float _1844;
        if (_1729 > 0.0)
        {
            _1844 = abs((1.0 - _1718) / _1729);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1729 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1718 + 1.0) / _1729);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1844 = frontier_phi_28_24_ladder;
        }
        float _2162;
        if (_1732 > 0.0)
        {
            _2162 = abs((1.0 - _1722) / _1732);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1732 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1722 + 1.0) / _1732);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2162 = frontier_phi_40_35_ladder;
        }
        float _2500;
        if (_1735 > 0.0)
        {
            _2500 = abs((1.0 - _1726) / _1735);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1726 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2500 = frontier_phi_50_47_ladder;
        }
        float _2502 = isnan(_2162) ? _1844 : (isnan(_1844) ? _2162 : min(_1844, _2162));
        float _2503 = isnan(_2500) ? _2502 : (isnan(_2502) ? _2500 : min(_2502, _2500));
        float _2507 = (_2503 * _1729) + _1718;
        float _2508 = (_2503 * _1732) + _1722;
        float _2509 = (_2503 * _1735) + _1726;
        float _2510 = _2503 * 9.9999997473787516355514526367188e-05;
        float _2511 = (-1.0) - _2510;
        float _2513 = _2510 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2509 > _2513) || ((_2509 < _2511) || ((_2508 > _2513) || ((_2508 < _2511) || ((_2507 < _2511) || (_2507 > _2513))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2631 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2509, cbModelParam._m0[17u].z, fma(_2508, cbModelParam._m0[17u].y, _2507 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2509, cbModelParam._m0[18u].z, fma(_2508, cbModelParam._m0[18u].y, _2507 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2509, cbModelParam._m0[19u].z, fma(_2508, cbModelParam._m0[19u].y, _2507 * cbModelParam._m0[19u].x))), _1665);
            frontier_phi_25_50_ladder = _2631.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2631.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2631.x * cbModelParam._m0[1u].z;
        }
        _1754 = frontier_phi_25_50_ladder_2;
        _1756 = frontier_phi_25_50_ladder_1;
        _1758 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1738 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_734, _735, _736), _1665);
        _1754 = _1738.x * cbModelParam._m0[1u].z;
        _1756 = _1738.y * cbModelParam._m0[1u].z;
        _1758 = _1738.z * cbModelParam._m0[1u].z;
    }
    float _1771 = (((_761 * _710) + _762) * _726) * ((cbModelParam._m0[1u].w * (_1754 - _1656)) + _1656);
    float _1773 = (((_761 * _712) + _762) * _726) * ((cbModelParam._m0[1u].w * (_1756 - _1658)) + _1658);
    float _1775 = (((_761 * _713) + _762) * _726) * ((cbModelParam._m0[1u].w * (_1758 - _1660)) + _1660);
    float _1778 = fma(_1775, cbSceneParam._m0[89u].z, fma(_1773, cbSceneParam._m0[89u].y, _1771 * cbSceneParam._m0[89u].x));
    float _1781 = fma(_1775, cbSceneParam._m0[90u].z, fma(_1773, cbSceneParam._m0[90u].y, _1771 * cbSceneParam._m0[90u].x));
    float _1784 = fma(_1775, cbSceneParam._m0[91u].z, fma(_1773, cbSceneParam._m0[91u].y, _1771 * cbSceneParam._m0[91u].x));
    float _1818 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1822 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1826 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1830 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1831 = _1818 / _1830;
    float _1832 = _1822 / _1830;
    float _1833 = _1826 / _1830;
    float _1980;
    float _1981;
    float _1982;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1860 = ((uint(_1833 > cbSceneParam._m0[59u].y) + uint(_1833 > cbSceneParam._m0[59u].x)) + uint(_1833 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1861 = _1860 + 43u;
        uint _1869 = _1860 + 44u;
        uint _1877 = _1860 + 45u;
        uint _1885 = _1860 + 46u;
        float _1896 = fma(_1830, cbSceneParam._m0[_1861].w, fma(_1826, cbSceneParam._m0[_1861].z, fma(_1822, cbSceneParam._m0[_1861].y, _1818 * cbSceneParam._m0[_1861].x)));
        float _1900 = fma(_1830, cbSceneParam._m0[_1869].w, fma(_1826, cbSceneParam._m0[_1869].z, fma(_1822, cbSceneParam._m0[_1869].y, _1818 * cbSceneParam._m0[_1869].x)));
        float _1908 = fma(_1830, cbSceneParam._m0[_1885].w, fma(_1826, cbSceneParam._m0[_1885].z, fma(_1822, cbSceneParam._m0[_1885].y, _1818 * cbSceneParam._m0[_1885].x)));
        float _1913 = cbSceneParam._m0[33u].z * _1908;
        float _1915 = cbSceneParam._m0[33u].w * _1908;
        float _1918 = fma(_1830, cbSceneParam._m0[_1877].w, fma(_1826, cbSceneParam._m0[_1877].z, fma(_1822, cbSceneParam._m0[_1877].y, _1818 * cbSceneParam._m0[_1877].x))) / _1908;
        float _1966 = (cbSceneParam._m0[33u].x - sqrt(((_1832 * _1832) + (_1831 * _1831)) + (_1833 * _1833))) * cbSceneParam._m0[33u].y;
        float _4338 = isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0));
        float _1973 = (isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1913 + _1896) / _1908, (_1915 + _1900) / _1908), _1918), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1915 + _1896) / _1908, (_1900 - _1913) / _1908), _1918), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1896 - _1913) / _1908, (_1900 - _1915) / _1908), _1918), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1896 - _1915) / _1908, (_1913 + _1900) / _1908), _1918), 0.0)).x), vec4(0.25)));
        _1980 = 1.0 - (_1973 * cbSceneParam._m0[34u].x);
        _1981 = 1.0 - (_1973 * cbSceneParam._m0[34u].y);
        _1982 = 1.0 - (_1973 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1980 = 1.0;
        _1981 = 1.0;
        _1982 = 1.0;
    }
    float _2046;
    float _2048;
    float _2050;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2034 = fma(_1830, cbSceneParam._m0[63u].w, fma(_1826, cbSceneParam._m0[63u].z, fma(_1822, cbSceneParam._m0[63u].y, _1818 * cbSceneParam._m0[63u].x)));
        float _2035 = fma(_1830, cbSceneParam._m0[60u].w, fma(_1826, cbSceneParam._m0[60u].z, fma(_1822, cbSceneParam._m0[60u].y, _1818 * cbSceneParam._m0[60u].x))) / _2034;
        float _2036 = fma(_1830, cbSceneParam._m0[61u].w, fma(_1826, cbSceneParam._m0[61u].z, fma(_1822, cbSceneParam._m0[61u].y, _1818 * cbSceneParam._m0[61u].x))) / _2034;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2035 >= cbSceneParam._m0[64u].x) && (_2036 >= cbSceneParam._m0[64u].y)) && (_2035 <= cbSceneParam._m0[64u].z)) && (_2036 <= cbSceneParam._m0[64u].w))
        {
            float _2175 = fma(_1830, cbSceneParam._m0[62u].w, fma(_1826, cbSceneParam._m0[62u].z, fma(_1822, cbSceneParam._m0[62u].y, _1818 * cbSceneParam._m0[62u].x))) / _2034;
            float _2179 = isnan(cbSceneParam._m0[41u].w) ? _2175 : (isnan(_2175) ? cbSceneParam._m0[41u].w : max(_2175, cbSceneParam._m0[41u].w));
            float _2222 = (cbSceneParam._m0[33u].x - sqrt(((_1832 * _1832) + (_1831 * _1831)) + (_1833 * _1833))) * cbSceneParam._m0[33u].y;
            float _4354 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
            float _2229 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2035, cbSceneParam._m0[33u].w + _2036), _2179), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2035, _2036 - cbSceneParam._m0[33u].z), _2179), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2035 - cbSceneParam._m0[33u].z, _2036 - cbSceneParam._m0[33u].w), _2179), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2035 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2036), _2179), 0.0)).x), vec4(0.25)));
            float _2233 = 1.0 - (_2229 * cbSceneParam._m0[34u].x);
            float _2234 = 1.0 - (_2229 * cbSceneParam._m0[34u].y);
            float _2235 = 1.0 - (_2229 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2235) ? _1982 : (isnan(_1982) ? _2235 : min(_1982, _2235));
            frontier_phi_37_36_ladder_1 = isnan(_2234) ? _1981 : (isnan(_1981) ? _2234 : min(_1981, _2234));
            frontier_phi_37_36_ladder_2 = isnan(_2233) ? _1980 : (isnan(_1980) ? _2233 : min(_1980, _2233));
        }
        else
        {
            frontier_phi_37_36_ladder = _1982;
            frontier_phi_37_36_ladder_1 = _1981;
            frontier_phi_37_36_ladder_2 = _1980;
        }
        _2046 = frontier_phi_37_36_ladder_2;
        _2048 = frontier_phi_37_36_ladder_1;
        _2050 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2046 = _1980;
        _2048 = _1981;
        _2050 = _1982;
    }
    uvec4 _2055 = floatBitsToUint(cbInstanceData._m0[_236 + 5u]);
    uint _2057 = _2055.x * 14u;
    uint _2058 = _2057 + 13u;
    float _2065 = _726 + (-1.0);
    float _2070 = (cbLight._m0[_2058].x * _2065) + 1.0;
    float _2071 = (cbLight._m0[_2058].y * _2065) + 1.0;
    float _2072 = (cbLight._m0[_2058].z * _2065) + 1.0;
    float _2073 = (cbLight._m0[_2058].w * _2065) + 1.0;
    uint _2074 = _2057 + 5u;
    float _2080 = isnan(1.0) ? _2071 : (isnan(_2071) ? 1.0 : min(_2071, 1.0));
    uint _2084 = _2057 + 4u;
    float _2094 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
    uint _2098 = _2057 | 1u;
    float _2109 = dot(vec3(cbLight._m0[_2057].xyz), vec3(_545, _546, _547));
    float _2112 = dot(vec3(cbLight._m0[_2098].xyz), vec3(_545, _546, _547));
    float _4390 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
    float _4401 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    float _2117 = (isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * 0.3183098733425140380859375;
    float _2119 = (isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * 0.3183098733425140380859375;
    float _2126 = ((cbLight._m0[_2074].x * _2080) * _2119) + (((cbLight._m0[_2084].x * _2046) * _2094) * _2117);
    float _2127 = ((_2080 * cbLight._m0[_2074].y) * _2119) + (((cbLight._m0[_2084].y * _2048) * _2094) * _2117);
    float _2128 = ((_2080 * cbLight._m0[_2074].z) * _2119) + (((cbLight._m0[_2084].z * _2050) * _2094) * _2117);
    uvec4 _2132 = floatBitsToUint(cbLight._m0[_2057 + 12u]);
    bool _2134 = _2132.x == 0u;
    float _2236;
    float _2238;
    float _2240;
    if (_2134)
    {
        _2236 = _2126;
        _2238 = _2127;
        _2240 = _2128;
    }
    else
    {
        uint _2244 = _2057 + 6u;
        float _2260 = (dot(vec3(cbLight._m0[_2057 + 2u].xyz), vec3(_545, _546, _547)) * 0.5) + 0.5;
        float _2261 = _2260 * _2260;
        float _4412 = isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0));
        float _2262 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _2263 = isnan(1.0) ? _2072 : (isnan(_2072) ? 1.0 : min(_2072, 1.0));
        _2236 = (((cbLight._m0[_2244].x * 0.3183098733425140380859375) * _2262) * _2263) + _2126;
        _2238 = (((cbLight._m0[_2244].y * 0.3183098733425140380859375) * _2262) * _2263) + _2127;
        _2240 = (((cbLight._m0[_2244].z * 0.3183098733425140380859375) * _2262) * _2263) + _2128;
    }
    bool _2243 = _2132.y == 0u;
    float _2298;
    float _2300;
    float _2302;
    if (_2243)
    {
        _2298 = _2236;
        _2300 = _2238;
        _2302 = _2240;
    }
    else
    {
        uint _2471 = _2057 + 7u;
        float _2487 = (dot(vec3(cbLight._m0[_2057 + 3u].xyz), vec3(_545, _546, _547)) * 0.5) + 0.5;
        float _2488 = _2487 * _2487;
        float _4428 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
        float _2489 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
        float _2490 = isnan(1.0) ? _2073 : (isnan(_2073) ? 1.0 : min(_2073, 1.0));
        _2298 = (((cbLight._m0[_2471].x * 0.3183098733425140380859375) * _2489) * _2490) + _2236;
        _2300 = (((cbLight._m0[_2471].y * 0.3183098733425140380859375) * _2489) * _2490) + _2238;
        _2302 = (((cbLight._m0[_2471].z * 0.3183098733425140380859375) * _2489) * _2490) + _2240;
    }
    uint _2305 = _2057 + 8u;
    float _2318 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2057].w)) * _548) * 0.949999988079071044921875);
    float _2319 = _2318 * _2318;
    float _2320 = cbLight._m0[_2057].x + _625;
    float _2321 = cbLight._m0[_2057].y + _626;
    float _2322 = cbLight._m0[_2057].z + _627;
    float _2326 = inversesqrt(dot(vec3(_2320, _2321, _2322), vec3(_2320, _2321, _2322)));
    float _2327 = _2326 * _2320;
    float _2328 = _2326 * _2321;
    float _2329 = _2326 * _2322;
    float _2330 = dot(vec3(_545, _546, _547), vec3(cbLight._m0[_2057].xyz));
    float _4444 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
    float _2333 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
    float _4455 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _2334 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
    float _2335 = dot(vec3(_545, _546, _547), vec3(_2327, _2328, _2329));
    float _4466 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
    float _2338 = isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0));
    float _2339 = dot(vec3(cbLight._m0[_2057].xyz), vec3(_2327, _2328, _2329));
    float _4477 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _2343 = _2319 * _2319;
    float _2347 = ((_2338 * _2338) * (_2343 + (-1.0))) + 1.0;
    float _2355 = exp2(log2(1.0 - (isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0)))) * 5.0);
    float _2356 = 0.959999978542327880859375 - _707;
    float _2358 = 0.959999978542327880859375 - _708;
    float _2359 = 0.959999978542327880859375 - _709;
    float _2366 = 1.0 - _2319;
    float _2377 = (0.5 / (((_2334 * ((_2333 * _2366) + _2319)) + 9.9999999392252902907785028219223e-09) + (((_2334 * _2366) + _2319) * _2333))) * _2333;
    float _4488 = isnan(0.0) ? _2377 : (isnan(_2377) ? 0.0 : max(_2377, 0.0));
    float _2379 = (isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0))) * (_2343 / ((_2347 * _2347) * 3.141590118408203125));
    uint _2393 = _2057 + 9u;
    float _2404 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2098].w)) * _548) * 0.949999988079071044921875);
    float _2405 = _2404 * _2404;
    float _2406 = cbLight._m0[_2098].x + _625;
    float _2407 = cbLight._m0[_2098].y + _626;
    float _2408 = cbLight._m0[_2098].z + _627;
    float _2412 = inversesqrt(dot(vec3(_2406, _2407, _2408), vec3(_2406, _2407, _2408)));
    float _2413 = _2412 * _2406;
    float _2414 = _2412 * _2407;
    float _2415 = _2412 * _2408;
    float _2416 = dot(vec3(_545, _546, _547), vec3(cbLight._m0[_2098].xyz));
    float _4499 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0));
    float _2420 = dot(vec3(_545, _546, _547), vec3(_2413, _2414, _2415));
    float _4510 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2423 = isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0));
    float _2424 = dot(vec3(cbLight._m0[_2098].xyz), vec3(_2413, _2414, _2415));
    float _4521 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
    float _2428 = _2405 * _2405;
    float _2432 = ((_2423 * _2423) * (_2428 + (-1.0))) + 1.0;
    float _2439 = exp2(log2(1.0 - (isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0)))) * 5.0);
    float _2446 = 1.0 - _2405;
    float _2456 = (0.5 / (((_2334 * ((_2419 * _2446) + _2405)) + 9.9999999392252902907785028219223e-09) + (((_2334 * _2446) + _2405) * _2419))) * _2419;
    float _4532 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2458 = (isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0))) * (_2428 / ((_2432 * _2432) * 3.141590118408203125));
    float _2468 = (((((_2439 * _2356) + _710) * cbLight._m0[_2393].x) * _2458) * _2080) + ((((cbLight._m0[_2305].x * _2046) * ((_2355 * _2356) + _710)) * _2379) * _2094);
    float _2469 = (((((_2439 * _2358) + _712) * cbLight._m0[_2393].y) * _2458) * _2080) + ((((cbLight._m0[_2305].y * _2048) * ((_2355 * _2358) + _712)) * _2379) * _2094);
    float _2470 = (((((_2439 * _2359) + _713) * cbLight._m0[_2393].z) * _2458) * _2080) + ((((cbLight._m0[_2305].z * _2050) * ((_2355 * _2359) + _713)) * _2379) * _2094);
    float _2526;
    float _2528;
    float _2530;
    if (_2134)
    {
        _2526 = _2468;
        _2528 = _2469;
        _2530 = _2470;
    }
    else
    {
        uint _2532 = _2057 + 2u;
        uint _2536 = _2057 + 10u;
        float _2550 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2532].w)) * _548) * 0.949999988079071044921875);
        float _2551 = _2550 * _2550;
        float _2552 = cbLight._m0[_2532].x + _625;
        float _2553 = cbLight._m0[_2532].y + _626;
        float _2554 = cbLight._m0[_2532].z + _627;
        float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
        float _2559 = _2558 * _2552;
        float _2560 = _2558 * _2553;
        float _2561 = _2558 * _2554;
        float _2562 = dot(vec3(_545, _546, _547), vec3(cbLight._m0[_2532].xyz));
        float _4543 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
        float _2565 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
        float _2566 = dot(vec3(_545, _546, _547), vec3(_2559, _2560, _2561));
        float _4554 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
        float _2569 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
        float _2570 = dot(vec3(cbLight._m0[_2532].xyz), vec3(_2559, _2560, _2561));
        float _4565 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
        float _2574 = _2551 * _2551;
        float _2578 = ((_2569 * _2569) * (_2574 + (-1.0))) + 1.0;
        float _2585 = exp2(log2(1.0 - (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0)))) * 5.0);
        float _2592 = 1.0 - _2551;
        float _2602 = (0.5 / (((_2334 * ((_2565 * _2592) + _2551)) + 9.9999999392252902907785028219223e-09) + (((_2334 * _2592) + _2551) * _2565))) * _2565;
        float _4576 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
        float _2604 = (isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * (_2574 / ((_2578 * _2578) * 3.141590118408203125));
        float _2605 = isnan(1.0) ? _2072 : (isnan(_2072) ? 1.0 : min(_2072, 1.0));
        _2526 = (((((_2585 * _2356) + _710) * cbLight._m0[_2536].x) * _2604) * _2605) + _2468;
        _2528 = (((((_2585 * _2358) + _712) * cbLight._m0[_2536].y) * _2604) * _2605) + _2469;
        _2530 = (((((_2585 * _2359) + _713) * cbLight._m0[_2536].z) * _2604) * _2605) + _2470;
    }
    float _2636;
    float _2638;
    float _2640;
    if (_2243)
    {
        _2636 = _2526;
        _2638 = _2528;
        _2640 = _2530;
    }
    else
    {
        uint _2647 = _2057 + 3u;
        uint _2651 = _2057 + 11u;
        float _2665 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2647].w)) * _548) * 0.949999988079071044921875);
        float _2666 = _2665 * _2665;
        float _2667 = cbLight._m0[_2647].x + _625;
        float _2668 = cbLight._m0[_2647].y + _626;
        float _2669 = cbLight._m0[_2647].z + _627;
        float _2673 = inversesqrt(dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669)));
        float _2674 = _2673 * _2667;
        float _2675 = _2673 * _2668;
        float _2676 = _2673 * _2669;
        float _2677 = dot(vec3(_545, _546, _547), vec3(cbLight._m0[_2647].xyz));
        float _4592 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
        float _2680 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2681 = dot(vec3(_545, _546, _547), vec3(_2674, _2675, _2676));
        float _4603 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
        float _2685 = dot(vec3(cbLight._m0[_2647].xyz), vec3(_2674, _2675, _2676));
        float _4614 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2689 = _2666 * _2666;
        float _2693 = ((_2684 * _2684) * (_2689 + (-1.0))) + 1.0;
        float _2700 = exp2(log2(1.0 - (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0)))) * 5.0);
        float _2707 = 1.0 - _2666;
        float _2717 = (0.5 / (((_2334 * ((_2680 * _2707) + _2666)) + 9.9999999392252902907785028219223e-09) + (((_2334 * _2707) + _2666) * _2680))) * _2680;
        float _4625 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
        float _2719 = (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0))) * (_2689 / ((_2693 * _2693) * 3.141590118408203125));
        float _2720 = isnan(1.0) ? _2073 : (isnan(_2073) ? 1.0 : min(_2073, 1.0));
        _2636 = (((((_2700 * _2356) + _710) * cbLight._m0[_2651].x) * _2719) * _2720) + _2526;
        _2638 = (((((_2700 * _2358) + _712) * cbLight._m0[_2651].y) * _2719) * _2720) + _2528;
        _2640 = (((((_2700 * _2359) + _713) * cbLight._m0[_2651].z) * _2719) * _2720) + _2530;
    }
    float _2786;
    float _2788;
    float _2790;
    float _2792;
    float _2794;
    float _2796;
    if (_2055.y == 0u)
    {
        uvec4 _2741 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2742 = _2741.x;
        uint _2753 = uint((float(_2741.y) * floor(float(uint(cbSceneParam._m0[85u].y * _647) / _2742))) + floor(float(uint(cbSceneParam._m0[85u].x * _646) / _2742)));
        float _2763 = (log2(_1833 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2764 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
        uint _2767 = uint(isnan(14.0) ? _2764 : (isnan(_2764) ? 14.0 : min(_2764, 14.0)));
        uvec4 _2772 = texelFetch(g_lightClusterGridBuffer, int(((_2767 << 2u) + (_2753 << 6u)) >> 2u));
        uint _2773 = _2772.x;
        uint _2774 = _2741.z;
        float _2853;
        float _2855;
        float _2857;
        float _2859;
        float _2861;
        float _2863;
        if (((((1u << ((_2774 >> 4u) & 15u)) + 4294967295u) & _2773) == 0u) || ((_2774 & 240u) == 0u))
        {
            _2853 = 0.0;
            _2855 = 0.0;
            _2857 = 0.0;
            _2859 = 0.0;
            _2861 = 0.0;
            _2863 = 0.0;
        }
        else
        {
            float _2854;
            float _2856;
            float _2858;
            float _2860;
            float _2862;
            float _2864;
            float _3006 = 0.0;
            float _3007 = 0.0;
            float _3008 = 0.0;
            float _3009 = 0.0;
            float _3010 = 0.0;
            float _3011 = 0.0;
            uint _3012 = 0u;
            uint _3021;
            bool _3022;
            for (;;)
            {
                _3021 = texelFetch(g_lightClassification, int((((_2767 << 5u) + (_2753 << 9u)) + (_3012 << 2u)) >> 2u)).x;
                _3022 = _3021 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3022)
                {
                    frontier_phi_71_pred = _3011;
                    frontier_phi_71_pred_1 = _3010;
                    frontier_phi_71_pred_2 = _3009;
                    frontier_phi_71_pred_3 = _3008;
                    frontier_phi_71_pred_4 = _3007;
                    frontier_phi_71_pred_5 = _3006;
                }
                else
                {
                    float _3151;
                    float _3152;
                    float _3153;
                    float _3154;
                    float _3155;
                    float _3156;
                    uint _3157;
                    _3151 = _3006;
                    _3152 = _3007;
                    _3153 = _3008;
                    _3154 = _3009;
                    _3155 = _3010;
                    _3156 = _3011;
                    _3157 = _3021;
                    float _3078;
                    float _3079;
                    float _3080;
                    float _3081;
                    float _3082;
                    float _3083;
                    for (;;)
                    {
                        uint _3161 = uint(findLSB(_3157)) + (_3012 << 5u);
                        uint _3158 = (_3157 + 4294967295u) & _3157;
                        uint _3163 = _3161 * 48u;
                        vec4 _3177 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3163)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3163 + 3u)).x));
                        uint _3183 = (_3161 * 48u) + 4u;
                        vec4 _3196 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3183)).x, texelFetch(g_PointLightRenderingBuffer, int(_3183 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3183 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3183 + 3u)).x));
                        uint _3202 = (_3161 * 48u) + 8u;
                        vec3 _3213 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3202)).x, texelFetch(g_PointLightRenderingBuffer, int(_3202 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3202 + 2u)).x));
                        float _3217 = _3177.x - _1831;
                        float _3218 = _3177.y - _1832;
                        float _3219 = _3177.z - _1833;
                        float _3220 = dot(vec3(_3217, _3218, _3219), vec3(_3217, _3218, _3219));
                        float _3223 = inversesqrt(_3220);
                        float _3224 = _3223 * _3217;
                        float _3225 = _3223 * _3218;
                        float _3226 = _3223 * _3219;
                        float _3227 = dot(vec3(_667, _670, _673), vec3(_3224, _3225, _3226));
                        float _3232 = 1.0 - (_3220 * _3177.w);
                        float _4651 = isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0));
                        float _3233 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
                        float _3234 = sqrt(_3220) * _3196.w;
                        float _3237 = 1.39999997615814208984375 / (_3234 + 1.39999997615814208984375);
                        float _3238 = _3237 * _3237;
                        float _3241 = ((1.0 - _3238) * _3227) + _3238;
                        float _3244 = _3234 * _3234;
                        float _3248 = ((isnan(0.0) ? _3241 : (isnan(_3241) ? 0.0 : max(_3241, 0.0))) * _3233) / ((_3244 * 0.699999988079071044921875) + 1.0);
                        float _3252 = (-0.0) - _1831;
                        float _3253 = (-0.0) - _1832;
                        float _3254 = (-0.0) - _1833;
                        float _3258 = inversesqrt(dot(vec3(_3252, _3253, _3254), vec3(_3252, _3253, _3254)));
                        float _3259 = _3258 * _3252;
                        float _3260 = _3258 * _3253;
                        float _3261 = _3258 * _3254;
                        float _3268 = exp2(log2(1.0 / ((_3244 * 3.5) + 5.0)) * 0.25);
                        float _3269 = 1.0 - _742;
                        float _3276 = sqrt(1.0 - ((1.0 - (_3269 * _3269)) * (1.0 - (_3268 * _3268))));
                        float _3277 = _3276 * _3276;
                        float _3278 = _3277 * _3277;
                        float _3279 = _3259 + _3224;
                        float _3280 = _3260 + _3225;
                        float _3281 = _3261 + _3226;
                        float _3285 = inversesqrt(dot(vec3(_3279, _3280, _3281), vec3(_3279, _3280, _3281)));
                        float _3289 = dot(vec3(_667, _670, _673), vec3(_3259, _3260, _3261));
                        float _4667 = isnan(0.0) ? _3289 : (isnan(_3289) ? 0.0 : max(_3289, 0.0));
                        float _3292 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
                        float _3293 = dot(vec3(_667, _670, _673), vec3(_3285 * _3279, _3285 * _3280, _3285 * _3281));
                        float _4678 = isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : max(_3293, 0.0));
                        float _3296 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                        float _3300 = ((_3296 * _3296) * (_3278 + (-1.0))) + 1.0;
                        float _3301 = _3237 * _3277;
                        float _3302 = _3301 * _3301;
                        float _3305 = ((1.0 - _3302) * _3227) + _3302;
                        float _4689 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                        float _3306 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                        float _3307 = 1.0 - _3277;
                        float _3317 = (0.5 / (((_3306 * ((_3292 * _3307) + _3277)) + 9.9999999392252902907785028219223e-09) + (((_3306 * _3307) + _3277) * _3292))) * _3306;
                        float _4700 = isnan(0.0) ? _3317 : (isnan(_3317) ? 0.0 : max(_3317, 0.0));
                        float _3328 = (((_3278 * 3.1415927410125732421875) * (isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0)))) / ((_3300 * _3300) * ((_3244 * 2.1991131305694580078125) + 3.141590118408203125))) * _3233;
                        _3081 = (_3248 * _3196.x) + _3154;
                        _3082 = (_3248 * _3196.y) + _3155;
                        _3083 = (_3248 * _3196.z) + _3156;
                        _3078 = (_3328 * _3213.x) + _3151;
                        _3079 = (_3328 * _3213.y) + _3152;
                        _3080 = (_3328 * _3213.z) + _3153;
                        if (_3158 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3151 = _3078;
                            _3152 = _3079;
                            _3153 = _3080;
                            _3154 = _3081;
                            _3155 = _3082;
                            _3156 = _3083;
                            _3157 = _3158;
                        }
                    }
                    frontier_phi_71_pred = _3083;
                    frontier_phi_71_pred_1 = _3082;
                    frontier_phi_71_pred_2 = _3081;
                    frontier_phi_71_pred_3 = _3080;
                    frontier_phi_71_pred_4 = _3079;
                    frontier_phi_71_pred_5 = _3078;
                }
                _2864 = frontier_phi_71_pred;
                _2862 = frontier_phi_71_pred_1;
                _2860 = frontier_phi_71_pred_2;
                _2858 = frontier_phi_71_pred_3;
                _2856 = frontier_phi_71_pred_4;
                _2854 = frontier_phi_71_pred_5;
                uint _3013 = _3012 + 1u;
                if (_3013 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3006 = _2854;
                    _3007 = _2856;
                    _3008 = _2858;
                    _3009 = _2860;
                    _3010 = _2862;
                    _3011 = _2864;
                    _3012 = _3013;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2853 = _2854;
            _2855 = _2856;
            _2857 = _2858;
            _2859 = _2860;
            _2861 = _2862;
            _2863 = _2864;
        }
        uvec4 _2867 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2868 = _2867.z;
        uint _2870 = (_2868 >> 8u) & 15u;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        float _2984;
        if (((4294967295u << _2870) & _2773) == 0u)
        {
            _2974 = _2853;
            _2976 = _2855;
            _2978 = _2857;
            _2980 = _2859;
            _2982 = _2861;
            _2984 = _2863;
        }
        else
        {
            float _2999 = inversesqrt(dot(vec3(_1831, _1832, _1833), vec3(_1831, _1832, _1833)));
            float _3000 = _2999 * _1831;
            float _3001 = _2999 * _1832;
            float _3002 = _2999 * _1833;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2870 < ((_2868 >> 12u) & 15u))
            {
                float _2975;
                float _2977;
                float _2979;
                float _2981;
                float _2983;
                float _2985;
                float _3134 = _2853;
                float _3135 = _2855;
                float _3136 = _2857;
                float _3137 = _2859;
                float _3138 = _2861;
                float _3139 = _2863;
                uint _3140 = _2870;
                uint _3149;
                bool _3150;
                for (;;)
                {
                    _3149 = texelFetch(g_lightClassification, int((((_2767 << 5u) + (_2753 << 9u)) + (_3140 << 2u)) >> 2u)).x;
                    _3150 = _3149 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3150)
                    {
                        frontier_phi_82_pred = _3139;
                        frontier_phi_82_pred_1 = _3138;
                        frontier_phi_82_pred_2 = _3137;
                        frontier_phi_82_pred_3 = _3136;
                        frontier_phi_82_pred_4 = _3135;
                        frontier_phi_82_pred_5 = _3134;
                    }
                    else
                    {
                        float _3342;
                        float _3343;
                        float _3344;
                        float _3345;
                        float _3346;
                        float _3347;
                        float _3636;
                        float _3637;
                        float _3638;
                        float _3639;
                        float _3640;
                        float _3641;
                        float _3355 = _3134;
                        float _3356 = _3135;
                        float _3357 = _3136;
                        float _3358 = _3137;
                        float _3359 = _3138;
                        float _3360 = _3139;
                        uint _3361 = _3149;
                        uint _3362;
                        vec4 _3387;
                        float _3388;
                        vec4 _3403;
                        vec3 _3415;
                        vec4 _3431;
                        vec4 _3446;
                        float _3492;
                        bool _3493;
                        for (;;)
                        {
                            uint _3372 = ((_3140 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3361));
                            _3362 = (_3361 + 4294967295u) & _3361;
                            uint _3374 = _3372 * 40u;
                            _3387 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3374)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3374 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3374 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3374 + 3u)).x));
                            _3388 = _3387.w;
                            uint _3390 = (_3372 * 40u) + 4u;
                            _3403 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3390)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 3u)).x));
                            uint _3405 = (_3372 * 40u) + 8u;
                            _3415 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 2u)).x));
                            uint _3418 = (_3372 * 40u) + 16u;
                            _3431 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3418)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 3u)).x));
                            uint _3433 = (_3372 * 40u) + 20u;
                            _3446 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3433)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3433 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3433 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3433 + 3u)).x));
                            uint _3448 = (_3372 * 40u) + 24u;
                            vec4 _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            uint _3467 = (_3372 * 40u) + 28u;
                            vec4 _3480 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3467)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 3u)).x));
                            _3492 = fma(_1833, _3480.z, fma(_1832, _3480.y, _3480.x * _1831)) + _3480.w;
                            _3493 = !((fma(_1833, _3461.z, fma(_1832, _3461.y, _3461.x * _1831)) + _3461.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3493)
                            {
                                float _3520 = _3387.x - _1831;
                                float _3521 = _3387.y - _1832;
                                float _3522 = _3387.z - _1833;
                                float _3523 = dot(vec3(_3520, _3521, _3522), vec3(_3520, _3521, _3522));
                                float _3526 = inversesqrt(_3523);
                                float _3527 = _3526 * _3520;
                                float _3528 = _3526 * _3521;
                                float _3529 = _3526 * _3522;
                                float _3533 = 1.0 - (_3523 / (_3388 * _3388));
                                float _4711 = isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : max(_3533, 0.0));
                                float _3534 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
                                float _3538 = sqrt(_3523) * _3403.w;
                                float _3540 = 1.39999997615814208984375 / (_3538 + 1.39999997615814208984375);
                                float _3541 = _3540 * _3540;
                                float _3544 = ((1.0 - _3541) * dot(vec3(_3527, _3528, _3529), vec3(_667, _670, _673))) + _3541;
                                float _3547 = _3538 * _3538;
                                float _3551 = (fma(_1833, _3431.z, fma(_1832, _3431.y, _3431.x * _1831)) + _3431.w) / _3492;
                                float _3552 = (fma(_1833, _3446.z, fma(_1832, _3446.y, _3446.x * _1831)) + _3446.w) / _3492;
                                float _3556 = 1.0 - dot(vec2(_3551, _3552), vec2(_3551, _3552));
                                float _4727 = isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0));
                                float _3557 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                                float _3558 = _3557 * (((isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0))) * _3534) / ((_3547 * 0.699999988079071044921875) + 1.0));
                                float _3570 = exp2(log2(1.0 / ((_3547 * 3.5) + 5.0)) * 0.25);
                                float _3571 = 1.0 - _742;
                                float _3578 = sqrt(1.0 - ((1.0 - (_3571 * _3571)) * (1.0 - (_3570 * _3570))));
                                float _3579 = _3578 * _3578;
                                float _3580 = _3579 * _3579;
                                float _3581 = _3527 - _3000;
                                float _3582 = _3528 - _3001;
                                float _3583 = _3529 - _3002;
                                float _3587 = inversesqrt(dot(vec3(_3581, _3582, _3583), vec3(_3581, _3582, _3583)));
                                float _3591 = dot(vec3(_667, _670, _673), vec3((-0.0) - _3000, (-0.0) - _3001, (-0.0) - _3002));
                                float _4738 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0));
                                float _3594 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                                float _3595 = dot(vec3(_667, _670, _673), vec3(_3587 * _3581, _3587 * _3582, _3587 * _3583));
                                float _4749 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                                float _3598 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                                float _3602 = ((_3598 * _3598) * (_3580 + (-1.0))) + 1.0;
                                float _3603 = _3540 * _3579;
                                float _3604 = _3603 * _3603;
                                float _3610 = ((1.0 - _3604) * dot(vec3(_667, _670, _673), vec3(_3527, _3528, _3529))) + _3604;
                                float _4760 = isnan(0.0) ? _3610 : (isnan(_3610) ? 0.0 : max(_3610, 0.0));
                                float _3611 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                                float _3612 = 1.0 - _3579;
                                float _3622 = (0.5 / (((_3611 * ((_3594 * _3612) + _3579)) + 9.9999999392252902907785028219223e-09) + (((_3611 * _3612) + _3579) * _3594))) * _3611;
                                float _4771 = isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0));
                                float _3632 = (_3557 * _3534) * (((_3580 * 3.1415927410125732421875) * (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0)))) / ((_3602 * _3602) * ((_3547 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3558 * _3403.z;
                                frontier_phi_88_pred_1 = _3558 * _3403.y;
                                frontier_phi_88_pred_2 = _3558 * _3403.x;
                                frontier_phi_88_pred_3 = _3632 * _3415.z;
                                frontier_phi_88_pred_4 = _3632 * _3415.y;
                                frontier_phi_88_pred_5 = _3632 * _3415.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3641 = frontier_phi_88_pred;
                            _3640 = frontier_phi_88_pred_1;
                            _3639 = frontier_phi_88_pred_2;
                            _3638 = frontier_phi_88_pred_3;
                            _3637 = frontier_phi_88_pred_4;
                            _3636 = frontier_phi_88_pred_5;
                            _3345 = _3639 + _3358;
                            _3346 = _3640 + _3359;
                            _3347 = _3641 + _3360;
                            _3342 = _3636 + _3355;
                            _3343 = _3637 + _3356;
                            _3344 = _3638 + _3357;
                            if (_3362 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3355 = _3342;
                                _3356 = _3343;
                                _3357 = _3344;
                                _3358 = _3345;
                                _3359 = _3346;
                                _3360 = _3347;
                                _3361 = _3362;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3347;
                        frontier_phi_82_pred_1 = _3346;
                        frontier_phi_82_pred_2 = _3345;
                        frontier_phi_82_pred_3 = _3344;
                        frontier_phi_82_pred_4 = _3343;
                        frontier_phi_82_pred_5 = _3342;
                    }
                    _2985 = frontier_phi_82_pred;
                    _2983 = frontier_phi_82_pred_1;
                    _2981 = frontier_phi_82_pred_2;
                    _2979 = frontier_phi_82_pred_3;
                    _2977 = frontier_phi_82_pred_4;
                    _2975 = frontier_phi_82_pred_5;
                    uint _3141 = _3140 + 1u;
                    if (_3141 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3134 = _2975;
                        _3135 = _2977;
                        _3136 = _2979;
                        _3137 = _2981;
                        _3138 = _2983;
                        _3139 = _2985;
                        _3140 = _3141;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _2981;
                frontier_phi_63_64_ladder_1 = _2985;
                frontier_phi_63_64_ladder_2 = _2983;
                frontier_phi_63_64_ladder_3 = _2979;
                frontier_phi_63_64_ladder_4 = _2977;
                frontier_phi_63_64_ladder_5 = _2975;
            }
            else
            {
                frontier_phi_63_64_ladder = _2859;
                frontier_phi_63_64_ladder_1 = _2863;
                frontier_phi_63_64_ladder_2 = _2861;
                frontier_phi_63_64_ladder_3 = _2857;
                frontier_phi_63_64_ladder_4 = _2855;
                frontier_phi_63_64_ladder_5 = _2853;
            }
            _2974 = frontier_phi_63_64_ladder_5;
            _2976 = frontier_phi_63_64_ladder_4;
            _2978 = frontier_phi_63_64_ladder_3;
            _2980 = frontier_phi_63_64_ladder;
            _2982 = frontier_phi_63_64_ladder_2;
            _2984 = frontier_phi_63_64_ladder_1;
        }
        float _2989 = isnan(1.0) ? _726 : (isnan(_726) ? 1.0 : min(_726, 1.0));
        _2786 = (_2989 * _2980) + _2298;
        _2788 = (_2989 * _2982) + _2300;
        _2790 = (_2989 * _2984) + _2302;
        _2792 = ((_2974 * _710) * _2989) + _2636;
        _2794 = ((_2976 * _712) * _2989) + _2638;
        _2796 = ((_2978 * _713) * _2989) + _2640;
    }
    else
    {
        _2786 = _2298;
        _2788 = _2300;
        _2790 = _2302;
        _2792 = _2636;
        _2794 = _2638;
        _2796 = _2640;
    }
    float _4787 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _4798 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _4809 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _2813 = ((isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0))) * (_2786 + ((isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0))) * _726))) + ((_2792 + ((isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))) * _1565)) * cbPerFrame._m0[3u].x);
    float _2814 = ((isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0))) * (_2788 + ((isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0))) * _726))) + ((_2794 + ((isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))) * _1565)) * cbPerFrame._m0[3u].x);
    float _2815 = ((isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0))) * (_2790 + ((isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0))) * _726))) + ((_2796 + ((isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0))) * _1565)) * cbPerFrame._m0[3u].x);
    uint _2816 = _236 + 6u;
    float _2824 = _646 / cbSceneParam._m0[86u].x;
    float _2825 = _647 / cbSceneParam._m0[86u].y;
    vec4 _2839 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2824, _2825, (log2((isnan(cbSceneParam._m0[77u].w) ? _567 : (isnan(_567) ? cbSceneParam._m0[77u].w : min(_567, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2841 = _2839.x;
    float _2842 = _2839.y;
    float _2843 = _2839.z;
    float _2844 = _2839.w;
    float _2916;
    float _2918;
    float _2920;
    float _2922;
    if (_567 > cbSceneParam._m0[78u].w)
    {
        float _2878 = isnan(_567) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _567 : min(cbSceneParam._m0[80u].w, _567));
        float _2879 = _2878 / _567;
        float _2890 = _2879 * _618;
        float _2891 = _619 * _2879;
        float _2892 = (-0.0) - _2891;
        float _2894 = _2879 * _620;
        float _2896 = (cbSceneParam._m0[77u].w * _2892) / _2878;
        float _2897 = _2896 + cbSceneParam._m0[79u].w;
        float _2898 = cbSceneParam._m0[79u].w - _2891;
        float _2904 = sqrt(((_2890 * _2890) + (_2891 * _2891)) + (_2894 * _2894));
        float _2907 = (1.0 - (cbSceneParam._m0[77u].w / _2878)) * _2904;
        float _2912 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2914 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3091;
        if (abs((_2892 - _2896) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3091 = ((((_2897 > 0.0) ? exp2(_2912 * _2897) : (2.0 - exp2(_2914 * _2897))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2907;
        }
        else
        {
            float _3035 = 1.0 / cbSceneParam._m0[80u].x;
            float _3036 = isnan(_2898) ? _2897 : (isnan(_2897) ? _2898 : max(_2897, _2898));
            float _3037 = isnan(_2898) ? _2897 : (isnan(_2897) ? _2898 : min(_2897, _2898));
            float _3046 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : min(_3036, 0.0));
            float _3047 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : min(_3037, 0.0));
            _3091 = ((abs(_2904 / _2892) * cbSceneParam._m0[80u].y) * ((((_3046 - _3047) * 2.0) - ((exp2(_2912 * (isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0)))) - exp2(_2912 * (isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0))))) * _3035)) - ((exp2(_2914 * _3046) - exp2(_2914 * _3047)) * _3035))) + (_2907 * cbSceneParam._m0[80u].z);
        }
        vec4 _3093 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2824, _2825, 1.0), 0.0);
        float _3102 = exp2((_3091 * (-1.44269502162933349609375)) * (1.0 - _3093.w));
        float _3103 = log2(_3102);
        float _3119 = log2(_2844);
        _2916 = (exp2(_3119 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3103 * cbSceneParam._m0[78u].x)) * _3093.x) / cbSceneParam._m0[78u].x)) + _2841;
        _2918 = (exp2(_3119 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3103 * cbSceneParam._m0[78u].y)) * _3093.y) / cbSceneParam._m0[78u].y)) + _2842;
        _2920 = (exp2(_3119 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3103 * cbSceneParam._m0[78u].z)) * _3093.z) / cbSceneParam._m0[78u].z)) + _2843;
        _2922 = _3102 * _2844;
    }
    else
    {
        _2916 = _2841;
        _2918 = _2842;
        _2920 = _2843;
        _2922 = _2844;
    }
    bool _3129;
    vec4 _2932;
    vec4 _2954;
    float _2956;
    float _2960;
    float _2961;
    float _2962;
    float _2963;
    bool _2973;
    for (;;)
    {
        _2932 = cbMatDynParam._m0[0u];
        float _2934 = roundEven(_2932.y);
        bool _2935 = _2934 == 3.0;
        float _2936 = log2(_2922);
        float _2943 = exp2(_2936 * cbSceneParam._m0[78u].x) * _2813;
        float _2944 = exp2(_2936 * cbSceneParam._m0[78u].y) * _2814;
        float _2945 = exp2(_2936 * cbSceneParam._m0[78u].z) * _2815;
        float _2952 = _634 + (-0.5);
        _2954 = cbMtdParam._m0[1u];
        _2956 = _2954.y * _2952;
        float _2959 = (_2934 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2960 = _2959 * (_2935 ? _2943 : (_2943 + (cbSceneParam._m0[72u].w * _2916)));
        _2961 = _2959 * (_2935 ? _2944 : (_2944 + (cbSceneParam._m0[72u].w * _2918)));
        _2962 = _2959 * (_2935 ? _2945 : (_2945 + (cbSceneParam._m0[72u].w * _2920)));
        _2963 = _2952 * 0.999000012874603271484375;
        _2973 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2973)
        {
            if ((cbInstanceData._m0[_236 + 7u].x + _2963) < 0.5)
            {
                _3129 = true;
                break;
            }
        }
        uint _3070 = _686 + uint(_2932.w);
        if ((cbInstanceData._m0[_3070].w < 1.0) && ((cbInstanceData._m0[_3070].w + _2963) < 0.5))
        {
            _3129 = true;
            break;
        }
        if ((_2956 + 1.0) < _2954.x)
        {
            _3129 = true;
            break;
        }
        _3129 = false;
        break;
    }
    float _3333;
    if (_3129)
    {
        discard_state = true;
        _3333 = 0.0;
    }
    else
    {
        _3333 = cbInstanceData._m0[_2816].w;
    }
    SV_Target.x = _2960;
    SV_Target.y = _2961;
    SV_Target.z = _2962;
    SV_Target.w = _3333;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2816].w;
    discard_exit();
}


