#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1310;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _232 = _231 * _223;
    float _233 = _231 * _224;
    float _234 = _231 * _225;
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = _238 * NORMAL.x;
    float _240 = _238 * NORMAL.y;
    float _241 = _238 * NORMAL.z;
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _246 = _245 * TANGENT.x;
    float _247 = _245 * TANGENT.y;
    float _248 = _245 * TANGENT.z;
    float _259 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _261 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _262 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3918 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _3929 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _3940 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    uint _272 = uint(roundEven(NORMAL.w)) * 13u;
    uint _277 = _272 + 1u;
    uint _281 = _272 + 2u;
    float _290 = sqrt(((cbInstanceData._m0[_277].x * cbInstanceData._m0[_277].x) + (cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x)) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x));
    float _291 = _290 * TEXCOORD.z;
    float _292 = _290 * TEXCOORD.w;
    vec4 _305 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _291) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _292) + cbTextureTilingScale._m0[13u].w));
    vec4 _329 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _334 = _329.x * cbMtdParam._m0[11u].x;
    float _335 = _329.y * cbMtdParam._m0[11u].y;
    float _336 = _329.z * cbMtdParam._m0[11u].z;
    vec4 _355 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _291) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _292) + cbTextureTilingScale._m0[5u].w));
    vec4 _391 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _393 = _391.x;
    float _405 = dot(vec4(_393, _391.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _422 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_393 - _405) * cbMtdParam._m0[24u].y) + _405) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3951 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _423 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _430 = (_423 * ((_355.x * cbMtdParam._m0[12u].x) - _334)) + _334;
    float _431 = (_423 * ((_355.y * cbMtdParam._m0[12u].y) - _335)) + _335;
    float _432 = (_423 * ((_355.z * cbMtdParam._m0[12u].z) - _336)) + _336;
    float _436 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _305.x) * _430;
    float _439 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _305.y) * _431;
    float _442 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _305.z) * _432;
    float _449 = ((_430 - _436) * (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0)))) + _436;
    float _450 = ((_431 - _439) * (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0)))) + _439;
    float _451 = ((_432 - _442) * (isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0)))) + _442;
    vec4 _470 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _291) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _292) + cbTextureTilingScale._m0[14u].w));
    vec4 _490 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _291) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _292) + cbTextureTilingScale._m0[20u].w));
    vec4 _517 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _291) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _292) + cbTextureTilingScale._m0[4u].w));
    vec4 _534 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _536 = _534.x;
    float _537 = _534.y;
    float _538 = _534.z;
    float _547 = ((_517.z - _538) * _423) + _538;
    float _550 = ((((_517.x - _536) * _423) + _536) * 2.0) + (-1.0);
    float _551 = ((((_517.y - _537) * _423) + _537) * 2.0) + (-1.0);
    float _552 = dot(vec2(_550, _551), vec2(_550, _551));
    float _3962 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _557 = sqrt(1.0 - (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))));
    float _560 = _550 + ((((_490.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _561 = _551 + ((((_490.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _564 = fma(_557, _239, fma(_561, _246, _560 * _232));
    float _567 = fma(_557, _240, fma(_561, _247, _560 * _233));
    float _570 = fma(_557, _241, fma(_561, _248, _560 * _234));
    float _574 = inversesqrt(dot(vec3(_564, _567, _570), vec3(_564, _567, _570)));
    vec4 _590 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _616 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _291) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _292) + cbTextureTilingScale._m0[11u].w));
    float _618 = _616.x;
    float _619 = 1.0 - _618;
    float _623 = ((_618 - _619) * cbMtdParam._m0[24u].z) + _619;
    float _625 = (cbMtdParam._m0[19u].x + dot(vec4(_574 * _564, _574 * _567, _574 * _570, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_623 * cbMtdParam._m0[21u].z);
    float _3973 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _626 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    float _641 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_623 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3984 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _642 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
    float _646 = ((_626 * ((_470.x * cbMtdParam._m0[18u].x) - _449)) * _642) + _449;
    float _647 = ((_626 * ((_470.y * cbMtdParam._m0[18u].y) - _450)) * _642) + _450;
    float _648 = ((_626 * ((_470.z * cbMtdParam._m0[18u].z) - _451)) * _642) + _451;
    vec4 _660 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _674 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _676 = _674.x;
    float _694 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _291) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _292) + cbTextureTilingScale._m0[9u].w)).x - _676) * _423) + _676;
    float _698 = ((_660.x - _694) * cbMtdParam._m0[19u].z) + _694;
    float _701 = _698 - ((_642 * _626) * _698);
    float _706 = (((_490.z - _547) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _547;
    vec4 _719 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _291) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _292) + cbTextureTilingScale._m0[15u].w));
    float _726 = (_719.x * 2.0) + (-1.0);
    float _727 = (_719.y * 2.0) + (-1.0);
    float _728 = dot(vec2(_726, _727), vec2(_726, _727));
    float _3995 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _737 = (((_719.z - _706) * _626) * _642) + _706;
    float _752 = (((cbMtdParam._m0[21u].x * _560) + ((_726 - _560) * _626)) * _642) + _560;
    float _753 = (((cbMtdParam._m0[21u].x * _561) + ((_727 - _561) * _626)) * _642) + _561;
    float _754 = (((sqrt(1.0 - (isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0)))) - _557) * _626) * _642) + _557;
    float _756 = cbMtdParam._m0[22u].x + _590.w;
    float _759 = fma(_754, _239, fma(_753, _246, _752 * _232));
    float _762 = fma(_754, _240, fma(_753, _247, _752 * _233));
    float _765 = fma(_754, _241, fma(_753, _248, _752 * _234));
    float _769 = inversesqrt(dot(vec3(_759, _762, _765), vec3(_759, _762, _765)));
    float _770 = _769 * _759;
    float _771 = _769 * _762;
    float _772 = _769 * _765;
    float _4006 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _773 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _4017 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _4028 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _4039 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _4050 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _4061 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _778 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _792 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _833 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _843 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _833);
    float _844 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _833);
    float _845 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _833);
    float _849 = inversesqrt(dot(vec3(_843, _844, _845), vec3(_843, _844, _845)));
    float _850 = _843 * _849;
    float _851 = _844 * _849;
    float _852 = _845 * _849;
    float _858 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _859 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _877 = fma(_772, cbSceneParam._m0[5u].z, fma(_771, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _770));
    float _880 = fma(_772, cbSceneParam._m0[6u].z, fma(_771, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _770));
    float _883 = fma(_772, cbSceneParam._m0[7u].z, fma(_771, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _770));
    uint _897 = (_272 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _903 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0)))) * cbInstanceData._m0[_897].x;
    float _904 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0)))) * cbInstanceData._m0[_897].y;
    float _905 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0)))) * cbInstanceData._m0[_897].z;
    float _4072 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _906 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
    float _4083 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
    float _907 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _4094 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _908 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    float _909 = 1.0 - _778;
    float _910 = _906 * _909;
    float _911 = _907 * _909;
    float _912 = _908 * _909;
    float _917 = (_906 + (-0.039999999105930328369140625)) * _778;
    float _918 = (_907 + (-0.039999999105930328369140625)) * _778;
    float _919 = (_908 + (-0.039999999105930328369140625)) * _778;
    float _920 = _917 + 0.039999999105930328369140625;
    float _922 = _918 + 0.039999999105930328369140625;
    float _923 = _919 + 0.039999999105930328369140625;
    vec4 _932 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _858, cbSceneParam._m0[86u].y * _859));
    float _936 = ((isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * TEXCOORD_5.w) * _932.x;
    float _937 = dot(vec3(_770, _771, _772), vec3(_850, _851, _852));
    float _940 = _937 * 2.0;
    float _944 = (_940 * _770) - _850;
    float _945 = (_940 * _771) - _851;
    float _946 = (_940 * _772) - _852;
    float _950 = abs(dot(vec3(_850, _851, _852), vec3(_770, _771, _772)));
    float _4105 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _952 = sqrt(_773);
    float _965 = exp2((_952 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_952 * 3.0));
    float _971 = (1.0 - _965) * ((_952 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _972 = _965 * _952;
    float _1000 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1008 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1309;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1034 = fma(_1008, cbModelParam._m0[26u].z, fma(_1004, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1000));
        float _1038 = fma(_1008, cbModelParam._m0[27u].z, fma(_1004, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1000));
        float _1042 = fma(_1008, cbModelParam._m0[28u].z, fma(_1004, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1000));
        float _1067 = _1000 + _770;
        float _1068 = _1004 + _771;
        float _1069 = _1008 + _772;
        float _1079 = fma(_1069, cbModelParam._m0[26u].z, fma(_1068, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1067)) - _1034;
        float _1080 = fma(_1069, cbModelParam._m0[27u].z, fma(_1068, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1067)) - _1038;
        float _1081 = fma(_1069, cbModelParam._m0[28u].z, fma(_1068, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1067)) - _1042;
        float _1085 = inversesqrt(dot(vec3(_1079, _1080, _1081), vec3(_1079, _1080, _1081)));
        float _1098 = ((_1085 * _1079) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1034 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1099 = ((_1085 * _1080) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1038 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1100 = ((_1085 * _1081) / cbModelParam._m0[34u].z) + ((((((_1042 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1103 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1110 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1117 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1124 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        float _1137 = exp2((_1103.w + (-0.5)) * 20.0) * 2.0;
        float _1138 = _1137 * (_1103.x + (-0.5));
        float _1139 = _1137 * (_1103.y + (-0.5));
        float _1140 = _1137 * (_1103.z + (-0.5));
        float _1147 = exp2((_1110.w + (-0.5)) * 20.0) * 2.0;
        float _1148 = _1147 * (_1110.x + (-0.5));
        float _1149 = _1147 * (_1110.y + (-0.5));
        float _1150 = _1147 * (_1110.z + (-0.5));
        float _1157 = exp2((_1117.w + (-0.5)) * 20.0) * 2.0;
        float _1158 = _1157 * (_1117.x + (-0.5));
        float _1159 = _1157 * (_1117.y + (-0.5));
        float _1160 = _1157 * (_1117.z + (-0.5));
        float _1167 = exp2((_1124.w + (-0.5)) * 20.0) * 2.0;
        float _1168 = _1167 * (_1124.x + (-0.5));
        float _1169 = _1167 * (_1124.y + (-0.5));
        float _1170 = _1167 * (_1124.z + (-0.5));
        float _1171 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1172 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1173 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1174 = _1138 * 0.5;
        float _1175 = _1148 * 0.5;
        float _1176 = _1158 * 0.5;
        float _1177 = dot(vec3(_1174, _1175, _1176), vec3(_1174, _1175, _1176));
        float _1182 = (_1177 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1177);
        float _1191 = (dot(vec3(_770, _771, _772), vec3(_1182 * _1174, _1182 * _1175, _1182 * _1176)) + 1.0) * 0.5;
        float _4131 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1201 = sqrt(((_1175 * _1175) + (_1174 * _1174)) + (_1176 * _1176)) / (_1171 + 9.9999997473787516355514526367188e-06);
        float _4142 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1203 = _1202 * 2.0;
        float _1207 = (1.0 - _1202) / (_1202 + 1.0);
        float _4153 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1208 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1217 = ((((1.0 - _1208) * (_1203 + 2.0)) * exp2(log2(isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * (_1203 + 1.0))) + _1208) * _1171;
        float _1218 = _1139 * 0.5;
        float _1219 = _1149 * 0.5;
        float _1220 = _1159 * 0.5;
        float _1221 = dot(vec3(_1218, _1219, _1220), vec3(_1218, _1219, _1220));
        float _1226 = (_1221 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1221);
        float _1234 = (dot(vec3(_770, _771, _772), vec3(_1226 * _1218, _1226 * _1219, _1226 * _1220)) + 1.0) * 0.5;
        float _4164 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1243 = sqrt(((_1219 * _1219) + (_1218 * _1218)) + (_1220 * _1220)) / (_1172 + 9.9999997473787516355514526367188e-06);
        float _4175 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _1245 = _1244 * 2.0;
        float _1249 = (1.0 - _1244) / (_1244 + 1.0);
        float _4186 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1250 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1259 = ((((1.0 - _1250) * (_1245 + 2.0)) * exp2(log2(isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) * (_1245 + 1.0))) + _1250) * _1172;
        float _1260 = _1140 * 0.5;
        float _1261 = _1150 * 0.5;
        float _1262 = _1160 * 0.5;
        float _1263 = dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262));
        float _1268 = (_1263 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1263);
        float _1276 = (dot(vec3(_770, _771, _772), vec3(_1268 * _1260, _1268 * _1261, _1268 * _1262)) + 1.0) * 0.5;
        float _4197 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1285 = sqrt(((_1261 * _1261) + (_1260 * _1260)) + (_1262 * _1262)) / (_1173 + 9.9999997473787516355514526367188e-06);
        float _4208 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1286 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
        float _1287 = _1286 * 2.0;
        float _1291 = (1.0 - _1286) / (_1286 + 1.0);
        float _4219 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1292 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _1301 = ((((1.0 - _1292) * (_1287 + 2.0)) * exp2(log2(isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0))) * (_1287 + 1.0))) + _1292) * _1173;
        _1309 = _1140;
        _1311 = _1139;
        _1312 = _1138;
        _1313 = _1150;
        _1314 = _1149;
        _1315 = _1148;
        _1316 = _1160;
        _1317 = _1159;
        _1318 = _1158;
        _1319 = _1173;
        _1320 = _1172;
        _1321 = _1171;
        _1322 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0)));
        _1323 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0)));
        _1324 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0)));
    }
    else
    {
        _1309 = _1310;
        _1311 = _1310;
        _1312 = _1310;
        _1313 = _1310;
        _1314 = _1310;
        _1315 = _1310;
        _1316 = _1310;
        _1317 = _1310;
        _1318 = _1310;
        _1319 = _1310;
        _1320 = _1310;
        _1321 = _1310;
        _1322 = 0.0;
        _1323 = 0.0;
        _1324 = 0.0;
    }
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1349 = fma(_1008, cbModelParam._m0[30u].z, fma(_1004, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1000));
        float _1353 = fma(_1008, cbModelParam._m0[31u].z, fma(_1004, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1000));
        float _1357 = fma(_1008, cbModelParam._m0[32u].z, fma(_1004, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1000));
        float _1380 = _1000 + _770;
        float _1381 = _1004 + _771;
        float _1382 = _1008 + _772;
        float _1392 = fma(_1382, cbModelParam._m0[30u].z, fma(_1381, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1380)) - _1349;
        float _1393 = fma(_1382, cbModelParam._m0[31u].z, fma(_1381, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1380)) - _1353;
        float _1394 = fma(_1382, cbModelParam._m0[32u].z, fma(_1381, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1380)) - _1357;
        float _1398 = inversesqrt(dot(vec3(_1392, _1393, _1394), vec3(_1392, _1393, _1394)));
        float _1411 = ((_1398 * _1392) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1349 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1412 = ((_1398 * _1393) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1353 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1413 = ((_1398 * _1394) / cbModelParam._m0[35u].z) + ((((((_1357 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1415 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1411, _1412, _1413), 0.0);
        vec4 _1422 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1411, _1412, _1413), 0.0);
        vec4 _1429 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1411, _1412, _1413), 0.0);
        vec4 _1436 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1411, _1412, _1413), 0.0);
        float _1448 = exp2((_1415.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1415.x + (-0.5));
        float _1450 = _1448 * (_1415.y + (-0.5));
        float _1451 = _1448 * (_1415.z + (-0.5));
        float _1458 = exp2((_1422.w + (-0.5)) * 20.0) * 2.0;
        float _1459 = _1458 * (_1422.x + (-0.5));
        float _1460 = _1458 * (_1422.y + (-0.5));
        float _1461 = _1458 * (_1422.z + (-0.5));
        float _1468 = exp2((_1429.w + (-0.5)) * 20.0) * 2.0;
        float _1469 = _1468 * (_1429.x + (-0.5));
        float _1470 = _1468 * (_1429.y + (-0.5));
        float _1471 = _1468 * (_1429.z + (-0.5));
        float _1478 = exp2((_1436.w + (-0.5)) * 20.0) * 2.0;
        float _1479 = _1478 * (_1436.x + (-0.5));
        float _1480 = _1478 * (_1436.y + (-0.5));
        float _1481 = _1478 * (_1436.z + (-0.5));
        float _1482 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1483 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1484 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1485 = _1449 * 0.5;
        float _1486 = _1459 * 0.5;
        float _1487 = _1469 * 0.5;
        float _1488 = dot(vec3(_1485, _1486, _1487), vec3(_1485, _1486, _1487));
        float _1493 = (_1488 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1488);
        float _1501 = (dot(vec3(_770, _771, _772), vec3(_1493 * _1485, _1493 * _1486, _1493 * _1487)) + 1.0) * 0.5;
        float _4260 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1510 = sqrt(((_1486 * _1486) + (_1485 * _1485)) + (_1487 * _1487)) / (_1482 + 9.9999997473787516355514526367188e-06);
        float _4271 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1512 = _1511 * 2.0;
        float _1516 = (1.0 - _1511) / (_1511 + 1.0);
        float _4282 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1526 = ((((1.0 - _1517) * (_1512 + 2.0)) * exp2(log2(isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * (_1512 + 1.0))) + _1517) * _1482;
        float _1527 = _1450 * 0.5;
        float _1528 = _1460 * 0.5;
        float _1529 = _1470 * 0.5;
        float _1530 = dot(vec3(_1527, _1528, _1529), vec3(_1527, _1528, _1529));
        float _1535 = (_1530 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1530);
        float _1543 = (dot(vec3(_770, _771, _772), vec3(_1535 * _1527, _1535 * _1528, _1535 * _1529)) + 1.0) * 0.5;
        float _4293 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1552 = sqrt(((_1528 * _1528) + (_1527 * _1527)) + (_1529 * _1529)) / (_1483 + 9.9999997473787516355514526367188e-06);
        float _4304 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1553 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
        float _1554 = _1553 * 2.0;
        float _1558 = (1.0 - _1553) / (_1553 + 1.0);
        float _4315 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1568 = ((((1.0 - _1559) * (_1554 + 2.0)) * exp2(log2(isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0))) * (_1554 + 1.0))) + _1559) * _1483;
        float _1569 = _1451 * 0.5;
        float _1570 = _1461 * 0.5;
        float _1571 = _1471 * 0.5;
        float _1572 = dot(vec3(_1569, _1570, _1571), vec3(_1569, _1570, _1571));
        float _1577 = (_1572 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1572);
        float _1585 = (dot(vec3(_770, _771, _772), vec3(_1577 * _1569, _1577 * _1570, _1577 * _1571)) + 1.0) * 0.5;
        float _4326 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1594 = sqrt(((_1570 * _1570) + (_1569 * _1569)) + (_1571 * _1571)) / (_1484 + 9.9999997473787516355514526367188e-06);
        float _4337 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1595 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _1596 = _1595 * 2.0;
        float _1600 = (1.0 - _1595) / (_1595 + 1.0);
        float _4348 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1601 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _1610 = ((((1.0 - _1601) * (_1596 + 2.0)) * exp2(log2(isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0))) * (_1596 + 1.0))) + _1601) * _1484;
        _1618 = _1451;
        _1619 = _1450;
        _1620 = _1449;
        _1621 = _1461;
        _1622 = _1460;
        _1623 = _1459;
        _1624 = _1471;
        _1625 = _1470;
        _1626 = _1469;
        _1627 = _1484;
        _1628 = _1483;
        _1629 = _1482;
        _1630 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)));
        _1631 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0)));
        _1632 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)));
    }
    else
    {
        _1618 = _1310;
        _1619 = _1310;
        _1620 = _1310;
        _1621 = _1310;
        _1622 = _1310;
        _1623 = _1310;
        _1624 = _1310;
        _1625 = _1310;
        _1626 = _1310;
        _1627 = _1310;
        _1628 = _1310;
        _1629 = _1310;
        _1630 = 0.0;
        _1631 = 0.0;
        _1632 = 0.0;
    }
    float _1642 = (cbModelParam._m0[1u].x * (_1630 - _1322)) + _1322;
    float _1643 = (cbModelParam._m0[1u].x * (_1631 - _1323)) + _1323;
    float _1644 = (cbModelParam._m0[1u].x * (_1632 - _1324)) + _1324;
    float _1665 = fma(_1644, cbSceneParam._m0[89u].z, fma(_1643, cbSceneParam._m0[89u].y, _1642 * cbSceneParam._m0[89u].x));
    float _1668 = fma(_1644, cbSceneParam._m0[90u].z, fma(_1643, cbSceneParam._m0[90u].y, _1642 * cbSceneParam._m0[90u].x));
    float _1671 = fma(_1644, cbSceneParam._m0[91u].z, fma(_1643, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1642));
    float _1686 = _944 * 0.5;
    float _1687 = _945 * 0.5;
    float _1688 = _946 * 0.5;
    float _1689 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1620, _1623, _1626, _1629));
    float _1692 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1619, _1622, _1625, _1628));
    float _1695 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1618, _1621, _1624, _1627));
    float _1729;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1702 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1309, _1313, _1316, _1319));
        float _1706 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1311, _1314, _1317, _1320));
        float _1710 = dot(vec4(_1686, _1687, _1688, 1.0), vec4(_1312, _1315, _1318, _1321));
        float _1717 = dot(vec4(cbModelParam._m0[39u]), vec4(_1686, _1687, _1688, 1.0));
        _1729 = dot(vec3(isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)), isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0)), isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1717) ? 0.0 : (isnan(0.0) ? _1717 : max(0.0, _1717))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1729 = 1.0;
    }
    float _1740;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1731 = dot(vec4(cbModelParam._m0[40u]), vec4(_1686, _1687, _1688, 1.0));
        _1740 = dot(vec3(isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0)), isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0)), isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1731) ? 0.0 : (isnan(0.0) ? _1731 : max(0.0, _1731))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1740 = 1.0;
    }
    float _1744 = (_1740 * cbModelParam._m0[1u].x) + (_1729 * (1.0 - cbModelParam._m0[1u].x));
    float _1754 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _773);
    float _1755 = isnan(_1754) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1754 : min(cbModelParam._m0[25u].z, _1754));
    float _1835;
    float _1837;
    float _1839;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1802 = fma(_1008, cbModelParam._m0[13u].z, fma(_1004, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1000)) + cbModelParam._m0[13u].w;
        float _1806 = fma(_1008, cbModelParam._m0[14u].z, fma(_1004, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1000)) + cbModelParam._m0[14u].w;
        float _1810 = fma(_1008, cbModelParam._m0[15u].z, fma(_1004, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1000)) + cbModelParam._m0[15u].w;
        float _1813 = fma(_946, cbModelParam._m0[13u].z, fma(_945, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _944));
        float _1816 = fma(_946, cbModelParam._m0[14u].z, fma(_945, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _944));
        float _1819 = fma(_946, cbModelParam._m0[15u].z, fma(_945, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _944));
        float _1847;
        if (_1813 > 0.0)
        {
            _1847 = abs((1.0 - _1802) / _1813);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1813 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1802 + 1.0) / _1813);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1847 = frontier_phi_14_12_ladder;
        }
        float _2018;
        if (_1816 > 0.0)
        {
            _2018 = abs((1.0 - _1806) / _1816);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1816 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1806 + 1.0) / _1816);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2018 = frontier_phi_23_19_ladder;
        }
        float _2313;
        if (_1819 > 0.0)
        {
            _2313 = abs((1.0 - _1810) / _1819);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1819 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1810 + 1.0) / _1819);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2313 = frontier_phi_35_30_ladder;
        }
        float _2315 = isnan(_2018) ? _1847 : (isnan(_1847) ? _2018 : min(_1847, _2018));
        float _2316 = isnan(_2313) ? _2315 : (isnan(_2315) ? _2313 : min(_2315, _2313));
        float _2320 = (_2316 * _1813) + _1802;
        float _2321 = (_2316 * _1816) + _1806;
        float _2322 = (_2316 * _1819) + _1810;
        float _2323 = _2316 * 9.9999997473787516355514526367188e-05;
        float _2325 = (-1.0) - _2323;
        float _2327 = _2323 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2322 > _2327) || ((_2322 < _2325) || ((_2321 > _2327) || ((_2321 < _2325) || ((_2320 < _2325) || (_2320 > _2327))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2467 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2322, cbModelParam._m0[9u].z, fma(_2321, cbModelParam._m0[9u].y, _2320 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2322, cbModelParam._m0[10u].z, fma(_2321, cbModelParam._m0[10u].y, _2320 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2322, cbModelParam._m0[11u].z, fma(_2321, cbModelParam._m0[11u].y, _2320 * cbModelParam._m0[11u].x))), _1755);
            frontier_phi_13_35_ladder = _2467.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2467.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2467.x * cbModelParam._m0[1u].y;
        }
        _1835 = frontier_phi_13_35_ladder_2;
        _1837 = frontier_phi_13_35_ladder_1;
        _1839 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_944, _945, _946), _1755);
        _1835 = _1823.x * cbModelParam._m0[1u].y;
        _1837 = _1823.y * cbModelParam._m0[1u].y;
        _1839 = _1823.z * cbModelParam._m0[1u].y;
    }
    float _1843 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _773);
    float _1844 = isnan(_1843) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1843 : min(cbModelParam._m0[25u].w, _1843));
    float _1933;
    float _1935;
    float _1937;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1897 = fma(_1008, cbModelParam._m0[21u].z, fma(_1004, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1000)) + cbModelParam._m0[21u].w;
        float _1901 = fma(_1008, cbModelParam._m0[22u].z, fma(_1004, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1000)) + cbModelParam._m0[22u].w;
        float _1905 = fma(_1008, cbModelParam._m0[23u].z, fma(_1004, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1000)) + cbModelParam._m0[23u].w;
        float _1908 = fma(_946, cbModelParam._m0[21u].z, fma(_945, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _944));
        float _1911 = fma(_946, cbModelParam._m0[22u].z, fma(_945, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _944));
        float _1914 = fma(_946, cbModelParam._m0[23u].z, fma(_945, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _944));
        float _2023;
        if (_1908 > 0.0)
        {
            _2023 = abs((1.0 - _1897) / _1908);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1908 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1897 + 1.0) / _1908);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2023 = frontier_phi_25_21_ladder;
        }
        float _2340;
        if (_1911 > 0.0)
        {
            _2340 = abs((1.0 - _1901) / _1911);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1911 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1901 + 1.0) / _1911);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2340 = frontier_phi_37_32_ladder;
        }
        float _2678;
        if (_1914 > 0.0)
        {
            _2678 = abs((1.0 - _1905) / _1914);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1914 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1905 + 1.0) / _1914);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2678 = frontier_phi_47_44_ladder;
        }
        float _2680 = isnan(_2340) ? _2023 : (isnan(_2023) ? _2340 : min(_2023, _2340));
        float _2681 = isnan(_2678) ? _2680 : (isnan(_2680) ? _2678 : min(_2680, _2678));
        float _2685 = (_2681 * _1908) + _1897;
        float _2686 = (_2681 * _1911) + _1901;
        float _2687 = (_2681 * _1914) + _1905;
        float _2688 = _2681 * 9.9999997473787516355514526367188e-05;
        float _2689 = (-1.0) - _2688;
        float _2691 = _2688 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2687 > _2691) || ((_2687 < _2689) || ((_2686 > _2691) || ((_2686 < _2689) || ((_2685 < _2689) || (_2685 > _2691))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2809 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2687, cbModelParam._m0[17u].z, fma(_2686, cbModelParam._m0[17u].y, _2685 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2687, cbModelParam._m0[18u].z, fma(_2686, cbModelParam._m0[18u].y, _2685 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2687, cbModelParam._m0[19u].z, fma(_2686, cbModelParam._m0[19u].y, _2685 * cbModelParam._m0[19u].x))), _1844);
            frontier_phi_22_47_ladder = _2809.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2809.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2809.x * cbModelParam._m0[1u].z;
        }
        _1933 = frontier_phi_22_47_ladder_2;
        _1935 = frontier_phi_22_47_ladder_1;
        _1937 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1917 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_944, _945, _946), _1844);
        _1933 = _1917.x * cbModelParam._m0[1u].z;
        _1935 = _1917.y * cbModelParam._m0[1u].z;
        _1937 = _1917.z * cbModelParam._m0[1u].z;
    }
    float _1950 = (((_971 * _920) + _972) * _936) * ((cbModelParam._m0[1u].w * (_1933 - _1835)) + _1835);
    float _1952 = (((_971 * _922) + _972) * _936) * ((cbModelParam._m0[1u].w * (_1935 - _1837)) + _1837);
    float _1954 = (((_971 * _923) + _972) * _936) * ((cbModelParam._m0[1u].w * (_1937 - _1839)) + _1839);
    float _1957 = fma(_1954, cbSceneParam._m0[89u].z, fma(_1952, cbSceneParam._m0[89u].y, _1950 * cbSceneParam._m0[89u].x));
    float _1960 = fma(_1954, cbSceneParam._m0[90u].z, fma(_1952, cbSceneParam._m0[90u].y, _1950 * cbSceneParam._m0[90u].x));
    float _1963 = fma(_1954, cbSceneParam._m0[91u].z, fma(_1952, cbSceneParam._m0[91u].y, _1950 * cbSceneParam._m0[91u].x));
    float _1997 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2001 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2005 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2009 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2010 = _1997 / _2009;
    float _2011 = _2001 / _2009;
    float _2012 = _2005 / _2009;
    float _2159;
    float _2160;
    float _2161;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2039 = ((uint(_2012 > cbSceneParam._m0[59u].y) + uint(_2012 > cbSceneParam._m0[59u].x)) + uint(_2012 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2040 = _2039 + 43u;
        uint _2048 = _2039 + 44u;
        uint _2056 = _2039 + 45u;
        uint _2064 = _2039 + 46u;
        float _2075 = fma(_2009, cbSceneParam._m0[_2040].w, fma(_2005, cbSceneParam._m0[_2040].z, fma(_2001, cbSceneParam._m0[_2040].y, _1997 * cbSceneParam._m0[_2040].x)));
        float _2079 = fma(_2009, cbSceneParam._m0[_2048].w, fma(_2005, cbSceneParam._m0[_2048].z, fma(_2001, cbSceneParam._m0[_2048].y, _1997 * cbSceneParam._m0[_2048].x)));
        float _2087 = fma(_2009, cbSceneParam._m0[_2064].w, fma(_2005, cbSceneParam._m0[_2064].z, fma(_2001, cbSceneParam._m0[_2064].y, _1997 * cbSceneParam._m0[_2064].x)));
        float _2092 = cbSceneParam._m0[33u].z * _2087;
        float _2094 = cbSceneParam._m0[33u].w * _2087;
        float _2097 = fma(_2009, cbSceneParam._m0[_2056].w, fma(_2005, cbSceneParam._m0[_2056].z, fma(_2001, cbSceneParam._m0[_2056].y, _1997 * cbSceneParam._m0[_2056].x))) / _2087;
        float _2145 = (cbSceneParam._m0[33u].x - sqrt(((_2011 * _2011) + (_2010 * _2010)) + (_2012 * _2012))) * cbSceneParam._m0[33u].y;
        float _4474 = isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0));
        float _2152 = (isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2092 + _2075) / _2087, (_2094 + _2079) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2094 + _2075) / _2087, (_2079 - _2092) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2075 - _2092) / _2087, (_2079 - _2094) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2075 - _2094) / _2087, (_2092 + _2079) / _2087), _2097), 0.0)).x), vec4(0.25)));
        _2159 = 1.0 - (_2152 * cbSceneParam._m0[34u].x);
        _2160 = 1.0 - (_2152 * cbSceneParam._m0[34u].y);
        _2161 = 1.0 - (_2152 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2159 = 1.0;
        _2160 = 1.0;
        _2161 = 1.0;
    }
    float _2225;
    float _2227;
    float _2229;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2213 = fma(_2009, cbSceneParam._m0[63u].w, fma(_2005, cbSceneParam._m0[63u].z, fma(_2001, cbSceneParam._m0[63u].y, _1997 * cbSceneParam._m0[63u].x)));
        float _2214 = fma(_2009, cbSceneParam._m0[60u].w, fma(_2005, cbSceneParam._m0[60u].z, fma(_2001, cbSceneParam._m0[60u].y, _1997 * cbSceneParam._m0[60u].x))) / _2213;
        float _2215 = fma(_2009, cbSceneParam._m0[61u].w, fma(_2005, cbSceneParam._m0[61u].z, fma(_2001, cbSceneParam._m0[61u].y, _1997 * cbSceneParam._m0[61u].x))) / _2213;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2214 >= cbSceneParam._m0[64u].x) && (_2215 >= cbSceneParam._m0[64u].y)) && (_2214 <= cbSceneParam._m0[64u].z)) && (_2215 <= cbSceneParam._m0[64u].w))
        {
            float _2353 = fma(_2009, cbSceneParam._m0[62u].w, fma(_2005, cbSceneParam._m0[62u].z, fma(_2001, cbSceneParam._m0[62u].y, _1997 * cbSceneParam._m0[62u].x))) / _2213;
            float _2357 = isnan(cbSceneParam._m0[41u].w) ? _2353 : (isnan(_2353) ? cbSceneParam._m0[41u].w : max(_2353, cbSceneParam._m0[41u].w));
            float _2400 = (cbSceneParam._m0[33u].x - sqrt(((_2011 * _2011) + (_2010 * _2010)) + (_2012 * _2012))) * cbSceneParam._m0[33u].y;
            float _4490 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
            float _2407 = (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2214, cbSceneParam._m0[33u].w + _2215), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2214, _2215 - cbSceneParam._m0[33u].z), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2214 - cbSceneParam._m0[33u].z, _2215 - cbSceneParam._m0[33u].w), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2214 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2215), _2357), 0.0)).x), vec4(0.25)));
            float _2411 = 1.0 - (_2407 * cbSceneParam._m0[34u].x);
            float _2412 = 1.0 - (_2407 * cbSceneParam._m0[34u].y);
            float _2413 = 1.0 - (_2407 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2413) ? _2161 : (isnan(_2161) ? _2413 : min(_2161, _2413));
            frontier_phi_34_33_ladder_1 = isnan(_2412) ? _2160 : (isnan(_2160) ? _2412 : min(_2160, _2412));
            frontier_phi_34_33_ladder_2 = isnan(_2411) ? _2159 : (isnan(_2159) ? _2411 : min(_2159, _2411));
        }
        else
        {
            frontier_phi_34_33_ladder = _2161;
            frontier_phi_34_33_ladder_1 = _2160;
            frontier_phi_34_33_ladder_2 = _2159;
        }
        _2225 = frontier_phi_34_33_ladder_2;
        _2227 = frontier_phi_34_33_ladder_1;
        _2229 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2225 = _2159;
        _2227 = _2160;
        _2229 = _2161;
    }
    uvec4 _2234 = floatBitsToUint(cbInstanceData._m0[_272 + 5u]);
    uint _2236 = _2234.x * 14u;
    uint _2237 = _2236 + 13u;
    float _2244 = _936 + (-1.0);
    float _2249 = (cbLight._m0[_2237].x * _2244) + 1.0;
    float _2250 = (cbLight._m0[_2237].y * _2244) + 1.0;
    float _2251 = (cbLight._m0[_2237].z * _2244) + 1.0;
    float _2252 = (cbLight._m0[_2237].w * _2244) + 1.0;
    uint _2253 = _2236 + 5u;
    float _2259 = isnan(1.0) ? _2250 : (isnan(_2250) ? 1.0 : min(_2250, 1.0));
    uint _2263 = _2236 + 4u;
    float _2272 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
    uint _2276 = _2236 | 1u;
    float _2287 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_770, _771, _772));
    float _2290 = dot(vec3(cbLight._m0[_2276].xyz), vec3(_770, _771, _772));
    float _4526 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _4537 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _2295 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * 0.3183098733425140380859375;
    float _2297 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * 0.3183098733425140380859375;
    float _2304 = ((cbLight._m0[_2253].x * _2259) * _2297) + (((cbLight._m0[_2263].x * _2225) * _2272) * _2295);
    float _2305 = ((_2259 * cbLight._m0[_2253].y) * _2297) + (((cbLight._m0[_2263].y * _2227) * _2272) * _2295);
    float _2306 = ((_2259 * cbLight._m0[_2253].z) * _2297) + (((cbLight._m0[_2263].z * _2229) * _2272) * _2295);
    uvec4 _2310 = floatBitsToUint(cbLight._m0[_2236 + 12u]);
    bool _2312 = _2310.x == 0u;
    float _2414;
    float _2416;
    float _2418;
    if (_2312)
    {
        _2414 = _2304;
        _2416 = _2305;
        _2418 = _2306;
    }
    else
    {
        uint _2422 = _2236 + 6u;
        float _2438 = (dot(vec3(cbLight._m0[_2236 + 2u].xyz), vec3(_770, _771, _772)) * 0.5) + 0.5;
        float _2439 = _2438 * _2438;
        float _4548 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
        float _2440 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
        float _2441 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
        _2414 = (((cbLight._m0[_2422].x * 0.3183098733425140380859375) * _2440) * _2441) + _2304;
        _2416 = (((cbLight._m0[_2422].y * 0.3183098733425140380859375) * _2440) * _2441) + _2305;
        _2418 = (((cbLight._m0[_2422].z * 0.3183098733425140380859375) * _2440) * _2441) + _2306;
    }
    bool _2421 = _2310.y == 0u;
    float _2476;
    float _2478;
    float _2480;
    if (_2421)
    {
        _2476 = _2414;
        _2478 = _2416;
        _2480 = _2418;
    }
    else
    {
        uint _2649 = _2236 + 7u;
        float _2665 = (dot(vec3(cbLight._m0[_2236 + 3u].xyz), vec3(_770, _771, _772)) * 0.5) + 0.5;
        float _2666 = _2665 * _2665;
        float _4564 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2667 = isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0));
        float _2668 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
        _2476 = (((cbLight._m0[_2649].x * 0.3183098733425140380859375) * _2667) * _2668) + _2414;
        _2478 = (((cbLight._m0[_2649].y * 0.3183098733425140380859375) * _2667) * _2668) + _2416;
        _2480 = (((cbLight._m0[_2649].z * 0.3183098733425140380859375) * _2667) * _2668) + _2418;
    }
    uint _2483 = _2236 + 8u;
    float _2496 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2236].w)) * _773) * 0.949999988079071044921875);
    float _2497 = _2496 * _2496;
    float _2498 = cbLight._m0[_2236].x + _850;
    float _2499 = cbLight._m0[_2236].y + _851;
    float _2500 = cbLight._m0[_2236].z + _852;
    float _2504 = inversesqrt(dot(vec3(_2498, _2499, _2500), vec3(_2498, _2499, _2500)));
    float _2505 = _2504 * _2498;
    float _2506 = _2504 * _2499;
    float _2507 = _2504 * _2500;
    float _2508 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2236].xyz));
    float _4580 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
    float _4591 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _2512 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
    float _2513 = dot(vec3(_770, _771, _772), vec3(_2505, _2506, _2507));
    float _4602 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2516 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
    float _2517 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_2505, _2506, _2507));
    float _4613 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
    float _2521 = _2497 * _2497;
    float _2525 = ((_2516 * _2516) * (_2521 + (-1.0))) + 1.0;
    float _2533 = exp2(log2(1.0 - (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0)))) * 5.0);
    float _2534 = 0.959999978542327880859375 - _917;
    float _2536 = 0.959999978542327880859375 - _918;
    float _2537 = 0.959999978542327880859375 - _919;
    float _2544 = 1.0 - _2497;
    float _2555 = (0.5 / (((_2512 * ((_2511 * _2544) + _2497)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2544) + _2497) * _2511))) * _2511;
    float _4624 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
    float _2557 = (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * (_2521 / ((_2525 * _2525) * 3.141590118408203125));
    uint _2571 = _2236 + 9u;
    float _2582 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2276].w)) * _773) * 0.949999988079071044921875);
    float _2583 = _2582 * _2582;
    float _2584 = cbLight._m0[_2276].x + _850;
    float _2585 = cbLight._m0[_2276].y + _851;
    float _2586 = cbLight._m0[_2276].z + _852;
    float _2590 = inversesqrt(dot(vec3(_2584, _2585, _2586), vec3(_2584, _2585, _2586)));
    float _2591 = _2590 * _2584;
    float _2592 = _2590 * _2585;
    float _2593 = _2590 * _2586;
    float _2594 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2276].xyz));
    float _4635 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
    float _2597 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
    float _2598 = dot(vec3(_770, _771, _772), vec3(_2591, _2592, _2593));
    float _4646 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2601 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
    float _2602 = dot(vec3(cbLight._m0[_2276].xyz), vec3(_2591, _2592, _2593));
    float _4657 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
    float _2606 = _2583 * _2583;
    float _2610 = ((_2601 * _2601) * (_2606 + (-1.0))) + 1.0;
    float _2617 = exp2(log2(1.0 - (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0)))) * 5.0);
    float _2624 = 1.0 - _2583;
    float _2634 = (0.5 / (((_2512 * ((_2597 * _2624) + _2583)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2624) + _2583) * _2597))) * _2597;
    float _4668 = isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0));
    float _2636 = (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * (_2606 / ((_2610 * _2610) * 3.141590118408203125));
    float _2646 = (((((_2617 * _2534) + _920) * cbLight._m0[_2571].x) * _2636) * _2259) + ((((cbLight._m0[_2483].x * _2225) * ((_2533 * _2534) + _920)) * _2557) * _2272);
    float _2647 = (((((_2617 * _2536) + _922) * cbLight._m0[_2571].y) * _2636) * _2259) + ((((cbLight._m0[_2483].y * _2227) * ((_2533 * _2536) + _922)) * _2557) * _2272);
    float _2648 = (((((_2617 * _2537) + _923) * cbLight._m0[_2571].z) * _2636) * _2259) + ((((cbLight._m0[_2483].z * _2229) * ((_2533 * _2537) + _923)) * _2557) * _2272);
    float _2704;
    float _2706;
    float _2708;
    if (_2312)
    {
        _2704 = _2646;
        _2706 = _2647;
        _2708 = _2648;
    }
    else
    {
        uint _2710 = _2236 + 2u;
        uint _2714 = _2236 + 10u;
        float _2728 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2710].w)) * _773) * 0.949999988079071044921875);
        float _2729 = _2728 * _2728;
        float _2730 = cbLight._m0[_2710].x + _850;
        float _2731 = cbLight._m0[_2710].y + _851;
        float _2732 = cbLight._m0[_2710].z + _852;
        float _2736 = inversesqrt(dot(vec3(_2730, _2731, _2732), vec3(_2730, _2731, _2732)));
        float _2737 = _2736 * _2730;
        float _2738 = _2736 * _2731;
        float _2739 = _2736 * _2732;
        float _2740 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2710].xyz));
        float _4679 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2743 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _2744 = dot(vec3(_770, _771, _772), vec3(_2737, _2738, _2739));
        float _4690 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
        float _2747 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
        float _2748 = dot(vec3(cbLight._m0[_2710].xyz), vec3(_2737, _2738, _2739));
        float _4701 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2752 = _2729 * _2729;
        float _2756 = ((_2747 * _2747) * (_2752 + (-1.0))) + 1.0;
        float _2763 = exp2(log2(1.0 - (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0)))) * 5.0);
        float _2770 = 1.0 - _2729;
        float _2780 = (0.5 / (((_2512 * ((_2743 * _2770) + _2729)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2770) + _2729) * _2743))) * _2743;
        float _4712 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2782 = (isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0))) * (_2752 / ((_2756 * _2756) * 3.141590118408203125));
        float _2783 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
        _2704 = (((((_2763 * _2534) + _920) * cbLight._m0[_2714].x) * _2782) * _2783) + _2646;
        _2706 = (((((_2763 * _2536) + _922) * cbLight._m0[_2714].y) * _2782) * _2783) + _2647;
        _2708 = (((((_2763 * _2537) + _923) * cbLight._m0[_2714].z) * _2782) * _2783) + _2648;
    }
    float _2814;
    float _2816;
    float _2818;
    if (_2421)
    {
        _2814 = _2704;
        _2816 = _2706;
        _2818 = _2708;
    }
    else
    {
        uint _2825 = _2236 + 3u;
        uint _2829 = _2236 + 11u;
        float _2843 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2825].w)) * _773) * 0.949999988079071044921875);
        float _2844 = _2843 * _2843;
        float _2845 = cbLight._m0[_2825].x + _850;
        float _2846 = cbLight._m0[_2825].y + _851;
        float _2847 = cbLight._m0[_2825].z + _852;
        float _2851 = inversesqrt(dot(vec3(_2845, _2846, _2847), vec3(_2845, _2846, _2847)));
        float _2852 = _2851 * _2845;
        float _2853 = _2851 * _2846;
        float _2854 = _2851 * _2847;
        float _2855 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2825].xyz));
        float _4728 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        float _2858 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _2859 = dot(vec3(_770, _771, _772), vec3(_2852, _2853, _2854));
        float _4739 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2862 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
        float _2863 = dot(vec3(cbLight._m0[_2825].xyz), vec3(_2852, _2853, _2854));
        float _4750 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2867 = _2844 * _2844;
        float _2871 = ((_2862 * _2862) * (_2867 + (-1.0))) + 1.0;
        float _2878 = exp2(log2(1.0 - (isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0)))) * 5.0);
        float _2885 = 1.0 - _2844;
        float _2895 = (0.5 / (((_2512 * ((_2858 * _2885) + _2844)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2885) + _2844) * _2858))) * _2858;
        float _4761 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
        float _2897 = (isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0))) * (_2867 / ((_2871 * _2871) * 3.141590118408203125));
        float _2898 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
        _2814 = (((((_2878 * _2534) + _920) * cbLight._m0[_2829].x) * _2897) * _2898) + _2704;
        _2816 = (((((_2878 * _2536) + _922) * cbLight._m0[_2829].y) * _2897) * _2898) + _2706;
        _2818 = (((((_2878 * _2537) + _923) * cbLight._m0[_2829].z) * _2897) * _2898) + _2708;
    }
    float _2964;
    float _2966;
    float _2968;
    float _2970;
    float _2972;
    float _2974;
    if (_2234.y == 0u)
    {
        uvec4 _2919 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2920 = _2919.x;
        uint _2931 = uint((float(_2919.y) * floor(float(uint(cbSceneParam._m0[85u].y * _859) / _2920))) + floor(float(uint(cbSceneParam._m0[85u].x * _858) / _2920)));
        float _2941 = (log2(_2012 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2942 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
        uint _2945 = uint(isnan(14.0) ? _2942 : (isnan(_2942) ? 14.0 : min(_2942, 14.0)));
        uvec4 _2950 = texelFetch(g_lightClusterGridBuffer, int(((_2945 << 2u) + (_2931 << 6u)) >> 2u));
        uint _2951 = _2950.x;
        uint _2952 = _2919.z;
        float _3031;
        float _3033;
        float _3035;
        float _3037;
        float _3039;
        float _3041;
        if (((((1u << ((_2952 >> 4u) & 15u)) + 4294967295u) & _2951) == 0u) || ((_2952 & 240u) == 0u))
        {
            _3031 = 0.0;
            _3033 = 0.0;
            _3035 = 0.0;
            _3037 = 0.0;
            _3039 = 0.0;
            _3041 = 0.0;
        }
        else
        {
            float _3032;
            float _3034;
            float _3036;
            float _3038;
            float _3040;
            float _3042;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            uint _3182 = 0u;
            uint _3191;
            bool _3192;
            for (;;)
            {
                _3191 = texelFetch(g_lightClassification, int((((_2945 << 5u) + (_2931 << 9u)) + (_3182 << 2u)) >> 2u)).x;
                _3192 = _3191 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3192)
                {
                    frontier_phi_66_pred = _3181;
                    frontier_phi_66_pred_1 = _3180;
                    frontier_phi_66_pred_2 = _3179;
                    frontier_phi_66_pred_3 = _3178;
                    frontier_phi_66_pred_4 = _3177;
                    frontier_phi_66_pred_5 = _3176;
                }
                else
                {
                    float _3300;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    float _3305;
                    uint _3306;
                    _3300 = _3176;
                    _3301 = _3177;
                    _3302 = _3178;
                    _3303 = _3179;
                    _3304 = _3180;
                    _3305 = _3181;
                    _3306 = _3191;
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    float _3237;
                    for (;;)
                    {
                        uint _3310 = uint(findLSB(_3306)) + (_3182 << 5u);
                        uint _3307 = (_3306 + 4294967295u) & _3306;
                        uint _3312 = _3310 * 48u;
                        vec4 _3326 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3312)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 3u)).x));
                        uint _3332 = (_3310 * 48u) + 4u;
                        vec4 _3345 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3332)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 3u)).x));
                        uint _3351 = (_3310 * 48u) + 8u;
                        vec3 _3362 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3351)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 2u)).x));
                        float _3366 = _3326.x - _2010;
                        float _3367 = _3326.y - _2011;
                        float _3368 = _3326.z - _2012;
                        float _3369 = dot(vec3(_3366, _3367, _3368), vec3(_3366, _3367, _3368));
                        float _3372 = inversesqrt(_3369);
                        float _3373 = _3372 * _3366;
                        float _3374 = _3372 * _3367;
                        float _3375 = _3372 * _3368;
                        float _3376 = dot(vec3(_877, _880, _883), vec3(_3373, _3374, _3375));
                        float _3381 = 1.0 - (_3369 * _3326.w);
                        float _4787 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0));
                        float _3382 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                        float _3383 = sqrt(_3369) * _3345.w;
                        float _3386 = 1.39999997615814208984375 / (_3383 + 1.39999997615814208984375);
                        float _3387 = _3386 * _3386;
                        float _3390 = ((1.0 - _3387) * _3376) + _3387;
                        float _3393 = _3383 * _3383;
                        float _3397 = ((isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0))) * _3382) / ((_3393 * 0.699999988079071044921875) + 1.0);
                        float _3401 = (-0.0) - _2010;
                        float _3402 = (-0.0) - _2011;
                        float _3403 = (-0.0) - _2012;
                        float _3407 = inversesqrt(dot(vec3(_3401, _3402, _3403), vec3(_3401, _3402, _3403)));
                        float _3408 = _3407 * _3401;
                        float _3409 = _3407 * _3402;
                        float _3410 = _3407 * _3403;
                        float _3417 = exp2(log2(1.0 / ((_3393 * 3.5) + 5.0)) * 0.25);
                        float _3418 = 1.0 - _952;
                        float _3425 = sqrt(1.0 - ((1.0 - (_3418 * _3418)) * (1.0 - (_3417 * _3417))));
                        float _3426 = _3425 * _3425;
                        float _3427 = _3426 * _3426;
                        float _3428 = _3408 + _3373;
                        float _3429 = _3409 + _3374;
                        float _3430 = _3410 + _3375;
                        float _3434 = inversesqrt(dot(vec3(_3428, _3429, _3430), vec3(_3428, _3429, _3430)));
                        float _3438 = dot(vec3(_877, _880, _883), vec3(_3408, _3409, _3410));
                        float _4803 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                        float _3441 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
                        float _3442 = dot(vec3(_877, _880, _883), vec3(_3434 * _3428, _3434 * _3429, _3434 * _3430));
                        float _4814 = isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0));
                        float _3445 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
                        float _3449 = ((_3445 * _3445) * (_3427 + (-1.0))) + 1.0;
                        float _3450 = _3386 * _3426;
                        float _3451 = _3450 * _3450;
                        float _3454 = ((1.0 - _3451) * _3376) + _3451;
                        float _4825 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3455 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
                        float _3456 = 1.0 - _3426;
                        float _3466 = (0.5 / (((_3455 * ((_3441 * _3456) + _3426)) + 9.9999999392252902907785028219223e-09) + (((_3455 * _3456) + _3426) * _3441))) * _3455;
                        float _4836 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3477 = (((_3427 * 3.1415927410125732421875) * (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0)))) / ((_3449 * _3449) * ((_3393 * 2.1991131305694580078125) + 3.141590118408203125))) * _3382;
                        _3235 = (_3397 * _3345.x) + _3303;
                        _3236 = (_3397 * _3345.y) + _3304;
                        _3237 = (_3397 * _3345.z) + _3305;
                        _3232 = (_3477 * _3362.x) + _3300;
                        _3233 = (_3477 * _3362.y) + _3301;
                        _3234 = (_3477 * _3362.z) + _3302;
                        if (_3307 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3300 = _3232;
                            _3301 = _3233;
                            _3302 = _3234;
                            _3303 = _3235;
                            _3304 = _3236;
                            _3305 = _3237;
                            _3306 = _3307;
                        }
                    }
                    frontier_phi_66_pred = _3237;
                    frontier_phi_66_pred_1 = _3236;
                    frontier_phi_66_pred_2 = _3235;
                    frontier_phi_66_pred_3 = _3234;
                    frontier_phi_66_pred_4 = _3233;
                    frontier_phi_66_pred_5 = _3232;
                }
                _3042 = frontier_phi_66_pred;
                _3040 = frontier_phi_66_pred_1;
                _3038 = frontier_phi_66_pred_2;
                _3036 = frontier_phi_66_pred_3;
                _3034 = frontier_phi_66_pred_4;
                _3032 = frontier_phi_66_pred_5;
                uint _3183 = _3182 + 1u;
                if (_3183 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3176 = _3032;
                    _3177 = _3034;
                    _3178 = _3036;
                    _3179 = _3038;
                    _3180 = _3040;
                    _3181 = _3042;
                    _3182 = _3183;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3031 = _3032;
            _3033 = _3034;
            _3035 = _3036;
            _3037 = _3038;
            _3039 = _3040;
            _3041 = _3042;
        }
        uvec4 _3045 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3046 = _3045.z;
        uint _3048 = (_3046 >> 8u) & 15u;
        float _3144;
        float _3146;
        float _3148;
        float _3150;
        float _3152;
        float _3154;
        if (((4294967295u << _3048) & _2951) == 0u)
        {
            _3144 = _3031;
            _3146 = _3033;
            _3148 = _3035;
            _3150 = _3037;
            _3152 = _3039;
            _3154 = _3041;
        }
        else
        {
            float _3169 = inversesqrt(dot(vec3(_2010, _2011, _2012), vec3(_2010, _2011, _2012)));
            float _3170 = _3169 * _2010;
            float _3171 = _3169 * _2011;
            float _3172 = _3169 * _2012;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3048 < ((_3046 >> 12u) & 15u))
            {
                float _3145;
                float _3147;
                float _3149;
                float _3151;
                float _3153;
                float _3155;
                float _3283 = _3031;
                float _3284 = _3033;
                float _3285 = _3035;
                float _3286 = _3037;
                float _3287 = _3039;
                float _3288 = _3041;
                uint _3289 = _3048;
                uint _3298;
                bool _3299;
                for (;;)
                {
                    _3298 = texelFetch(g_lightClassification, int((((_2945 << 5u) + (_2931 << 9u)) + (_3289 << 2u)) >> 2u)).x;
                    _3299 = _3298 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3299)
                    {
                        frontier_phi_72_pred = _3288;
                        frontier_phi_72_pred_1 = _3287;
                        frontier_phi_72_pred_2 = _3286;
                        frontier_phi_72_pred_3 = _3285;
                        frontier_phi_72_pred_4 = _3284;
                        frontier_phi_72_pred_5 = _3283;
                    }
                    else
                    {
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3485;
                        float _3486;
                        float _3487;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _3778;
                        float _3779;
                        float _3780;
                        float _3495 = _3283;
                        float _3496 = _3284;
                        float _3497 = _3285;
                        float _3498 = _3286;
                        float _3499 = _3287;
                        float _3500 = _3288;
                        uint _3501 = _3298;
                        uint _3502;
                        vec4 _3527;
                        float _3528;
                        vec4 _3543;
                        vec3 _3555;
                        vec4 _3570;
                        vec4 _3585;
                        float _3631;
                        bool _3632;
                        for (;;)
                        {
                            uint _3512 = ((_3289 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3501));
                            _3502 = (_3501 + 4294967295u) & _3501;
                            uint _3514 = _3512 * 40u;
                            _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            _3528 = _3527.w;
                            uint _3530 = (_3512 * 40u) + 4u;
                            _3543 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3530)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 3u)).x));
                            uint _3545 = (_3512 * 40u) + 8u;
                            _3555 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x));
                            uint _3557 = (_3512 * 40u) + 16u;
                            _3570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 3u)).x));
                            uint _3572 = (_3512 * 40u) + 20u;
                            _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            uint _3587 = (_3512 * 40u) + 24u;
                            vec4 _3600 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 3u)).x));
                            uint _3606 = (_3512 * 40u) + 28u;
                            vec4 _3619 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3606)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 3u)).x));
                            _3631 = fma(_2012, _3619.z, fma(_2011, _3619.y, _3619.x * _2010)) + _3619.w;
                            _3632 = !((fma(_2012, _3600.z, fma(_2011, _3600.y, _3600.x * _2010)) + _3600.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3632)
                            {
                                float _3659 = _3527.x - _2010;
                                float _3660 = _3527.y - _2011;
                                float _3661 = _3527.z - _2012;
                                float _3662 = dot(vec3(_3659, _3660, _3661), vec3(_3659, _3660, _3661));
                                float _3665 = inversesqrt(_3662);
                                float _3666 = _3665 * _3659;
                                float _3667 = _3665 * _3660;
                                float _3668 = _3665 * _3661;
                                float _3672 = 1.0 - (_3662 / (_3528 * _3528));
                                float _4847 = isnan(0.0) ? _3672 : (isnan(_3672) ? 0.0 : max(_3672, 0.0));
                                float _3673 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
                                float _3677 = sqrt(_3662) * _3543.w;
                                float _3679 = 1.39999997615814208984375 / (_3677 + 1.39999997615814208984375);
                                float _3680 = _3679 * _3679;
                                float _3683 = ((1.0 - _3680) * dot(vec3(_3666, _3667, _3668), vec3(_877, _880, _883))) + _3680;
                                float _3686 = _3677 * _3677;
                                float _3690 = (fma(_2012, _3570.z, fma(_2011, _3570.y, _3570.x * _2010)) + _3570.w) / _3631;
                                float _3691 = (fma(_2012, _3585.z, fma(_2011, _3585.y, _3585.x * _2010)) + _3585.w) / _3631;
                                float _3695 = 1.0 - dot(vec2(_3690, _3691), vec2(_3690, _3691));
                                float _4863 = isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0));
                                float _3696 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
                                float _3697 = _3696 * (((isnan(0.0) ? _3683 : (isnan(_3683) ? 0.0 : max(_3683, 0.0))) * _3673) / ((_3686 * 0.699999988079071044921875) + 1.0));
                                float _3709 = exp2(log2(1.0 / ((_3686 * 3.5) + 5.0)) * 0.25);
                                float _3710 = 1.0 - _952;
                                float _3717 = sqrt(1.0 - ((1.0 - (_3710 * _3710)) * (1.0 - (_3709 * _3709))));
                                float _3718 = _3717 * _3717;
                                float _3719 = _3718 * _3718;
                                float _3720 = _3666 - _3170;
                                float _3721 = _3667 - _3171;
                                float _3722 = _3668 - _3172;
                                float _3726 = inversesqrt(dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722)));
                                float _3730 = dot(vec3(_877, _880, _883), vec3((-0.0) - _3170, (-0.0) - _3171, (-0.0) - _3172));
                                float _4874 = isnan(0.0) ? _3730 : (isnan(_3730) ? 0.0 : max(_3730, 0.0));
                                float _3733 = isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0));
                                float _3734 = dot(vec3(_877, _880, _883), vec3(_3726 * _3720, _3726 * _3721, _3726 * _3722));
                                float _4885 = isnan(0.0) ? _3734 : (isnan(_3734) ? 0.0 : max(_3734, 0.0));
                                float _3737 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
                                float _3741 = ((_3737 * _3737) * (_3719 + (-1.0))) + 1.0;
                                float _3742 = _3679 * _3718;
                                float _3743 = _3742 * _3742;
                                float _3749 = ((1.0 - _3743) * dot(vec3(_877, _880, _883), vec3(_3666, _3667, _3668))) + _3743;
                                float _4896 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                                float _3750 = isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0));
                                float _3751 = 1.0 - _3718;
                                float _3761 = (0.5 / (((_3750 * ((_3733 * _3751) + _3718)) + 9.9999999392252902907785028219223e-09) + (((_3750 * _3751) + _3718) * _3733))) * _3750;
                                float _4907 = isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0));
                                float _3771 = (_3696 * _3673) * (((_3719 * 3.1415927410125732421875) * (isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0)))) / ((_3741 * _3741) * ((_3686 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3697 * _3543.y;
                                frontier_phi_78_pred_1 = _3697 * _3543.x;
                                frontier_phi_78_pred_2 = _3771 * _3555.z;
                                frontier_phi_78_pred_3 = _3771 * _3555.y;
                                frontier_phi_78_pred_4 = _3771 * _3555.x;
                                frontier_phi_78_pred_5 = _3697 * _3543.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3779 = frontier_phi_78_pred;
                            _3778 = frontier_phi_78_pred_1;
                            _3777 = frontier_phi_78_pred_2;
                            _3776 = frontier_phi_78_pred_3;
                            _3775 = frontier_phi_78_pred_4;
                            _3780 = frontier_phi_78_pred_5;
                            _3485 = _3778 + _3498;
                            _3486 = _3779 + _3499;
                            _3487 = _3780 + _3500;
                            _3482 = _3775 + _3495;
                            _3483 = _3776 + _3496;
                            _3484 = _3777 + _3497;
                            if (_3502 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3495 = _3482;
                                _3496 = _3483;
                                _3497 = _3484;
                                _3498 = _3485;
                                _3499 = _3486;
                                _3500 = _3487;
                                _3501 = _3502;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3487;
                        frontier_phi_72_pred_1 = _3486;
                        frontier_phi_72_pred_2 = _3485;
                        frontier_phi_72_pred_3 = _3484;
                        frontier_phi_72_pred_4 = _3483;
                        frontier_phi_72_pred_5 = _3482;
                    }
                    _3155 = frontier_phi_72_pred;
                    _3153 = frontier_phi_72_pred_1;
                    _3151 = frontier_phi_72_pred_2;
                    _3149 = frontier_phi_72_pred_3;
                    _3147 = frontier_phi_72_pred_4;
                    _3145 = frontier_phi_72_pred_5;
                    uint _3290 = _3289 + 1u;
                    if (_3290 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3283 = _3145;
                        _3284 = _3147;
                        _3285 = _3149;
                        _3286 = _3151;
                        _3287 = _3153;
                        _3288 = _3155;
                        _3289 = _3290;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3155;
                frontier_phi_60_61_ladder_1 = _3153;
                frontier_phi_60_61_ladder_2 = _3149;
                frontier_phi_60_61_ladder_3 = _3147;
                frontier_phi_60_61_ladder_4 = _3145;
                frontier_phi_60_61_ladder_5 = _3151;
            }
            else
            {
                frontier_phi_60_61_ladder = _3041;
                frontier_phi_60_61_ladder_1 = _3039;
                frontier_phi_60_61_ladder_2 = _3035;
                frontier_phi_60_61_ladder_3 = _3033;
                frontier_phi_60_61_ladder_4 = _3031;
                frontier_phi_60_61_ladder_5 = _3037;
            }
            _3144 = frontier_phi_60_61_ladder_4;
            _3146 = frontier_phi_60_61_ladder_3;
            _3148 = frontier_phi_60_61_ladder_2;
            _3150 = frontier_phi_60_61_ladder_5;
            _3152 = frontier_phi_60_61_ladder_1;
            _3154 = frontier_phi_60_61_ladder;
        }
        float _3159 = isnan(1.0) ? _936 : (isnan(_936) ? 1.0 : min(_936, 1.0));
        _2964 = (_3159 * _3150) + _2476;
        _2966 = (_3159 * _3152) + _2478;
        _2968 = (_3159 * _3154) + _2480;
        _2970 = ((_3144 * _920) * _3159) + _2814;
        _2972 = ((_3146 * _922) * _3159) + _2816;
        _2974 = ((_3148 * _923) * _3159) + _2818;
    }
    else
    {
        _2964 = _2476;
        _2966 = _2478;
        _2968 = _2480;
        _2970 = _2814;
        _2972 = _2816;
        _2974 = _2818;
    }
    float _4923 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _4934 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _4945 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    uint _2994 = _272 + 6u;
    float _3002 = _858 / cbSceneParam._m0[86u].x;
    float _3003 = _859 / cbSceneParam._m0[86u].y;
    vec4 _3017 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3002, _3003, (log2((isnan(cbSceneParam._m0[77u].w) ? _792 : (isnan(_792) ? cbSceneParam._m0[77u].w : min(_792, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3019 = _3017.x;
    float _3020 = _3017.y;
    float _3021 = _3017.z;
    float _3022 = _3017.w;
    float _3094;
    float _3096;
    float _3098;
    float _3100;
    if (_792 > cbSceneParam._m0[78u].w)
    {
        float _3056 = isnan(_792) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _792 : min(cbSceneParam._m0[80u].w, _792));
        float _3057 = _3056 / _792;
        float _3068 = _3057 * _843;
        float _3069 = _844 * _3057;
        float _3070 = (-0.0) - _3069;
        float _3072 = _3057 * _845;
        float _3074 = (cbSceneParam._m0[77u].w * _3070) / _3056;
        float _3075 = _3074 + cbSceneParam._m0[79u].w;
        float _3076 = cbSceneParam._m0[79u].w - _3069;
        float _3082 = sqrt(((_3068 * _3068) + (_3069 * _3069)) + (_3072 * _3072));
        float _3085 = (1.0 - (cbSceneParam._m0[77u].w / _3056)) * _3082;
        float _3090 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3092 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3245;
        if (abs((_3070 - _3074) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3245 = ((((_3075 > 0.0) ? exp2(_3090 * _3075) : (2.0 - exp2(_3092 * _3075))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3085;
        }
        else
        {
            float _3205 = 1.0 / cbSceneParam._m0[80u].x;
            float _3206 = isnan(_3076) ? _3075 : (isnan(_3075) ? _3076 : max(_3075, _3076));
            float _3207 = isnan(_3076) ? _3075 : (isnan(_3075) ? _3076 : min(_3075, _3076));
            float _3216 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : min(_3206, 0.0));
            float _3217 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : min(_3207, 0.0));
            _3245 = ((abs(_3082 / _3070) * cbSceneParam._m0[80u].y) * ((((_3216 - _3217) * 2.0) - ((exp2(_3090 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0)))) - exp2(_3090 * (isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0))))) * _3205)) - ((exp2(_3092 * _3216) - exp2(_3092 * _3217)) * _3205))) + (_3085 * cbSceneParam._m0[80u].z);
        }
        vec4 _3247 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3002, _3003, 1.0), 0.0);
        float _3256 = exp2((_3245 * (-1.44269502162933349609375)) * (1.0 - _3247.w));
        float _3257 = log2(_3256);
        float _3273 = log2(_3022);
        _3094 = (exp2(_3273 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].x)) * _3247.x) / cbSceneParam._m0[78u].x)) + _3019;
        _3096 = (exp2(_3273 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].y)) * _3247.y) / cbSceneParam._m0[78u].y)) + _3020;
        _3098 = (exp2(_3273 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3257 * cbSceneParam._m0[78u].z)) * _3247.z) / cbSceneParam._m0[78u].z)) + _3021;
        _3100 = _3256 * _3022;
    }
    else
    {
        _3094 = _3019;
        _3096 = _3020;
        _3098 = _3021;
        _3100 = _3022;
    }
    float _3112 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3113 = _3112 == 3.0;
    float _3114 = log2(_3100);
    float _3121 = exp2(_3114 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0))) * (_2964 + ((isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0))) * _936))) + ((_2970 + ((isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))) * _1744)) * cbPerFrame._m0[3u].x));
    float _3122 = exp2(_3114 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0))) * (_2966 + ((isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))) * _936))) + ((_2972 + ((isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0))) * _1744)) * cbPerFrame._m0[3u].x));
    float _3123 = exp2(_3114 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0))) * (_2968 + ((isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0))) * _936))) + ((_2974 + ((isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))) * _1744)) * cbPerFrame._m0[3u].x));
    float _3132 = (_3112 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3132 * (_3113 ? _3121 : (_3121 + (cbSceneParam._m0[72u].w * _3094)));
    SV_Target.y = _3132 * (_3113 ? _3122 : (_3122 + (cbSceneParam._m0[72u].w * _3096)));
    SV_Target.z = _3132 * (_3113 ? _3123 : (_3123 + (cbSceneParam._m0[72u].w * _3098)));
    SV_Target.w = cbInstanceData._m0[_2994].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2994].w;
}


