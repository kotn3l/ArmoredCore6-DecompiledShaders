#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _190 = _189 * _181;
    float _191 = _189 * _182;
    float _192 = _189 * _183;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _215 = _209 + 1u;
    uint _219 = _209 + 2u;
    float _228 = sqrt(((cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x));
    float _229 = _228 * TEXCOORD.z;
    float _230 = _228 * TEXCOORD.w;
    vec4 _250 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _256 = _250.x * cbMtdParam._m0[11u].x;
    float _257 = _250.y * cbMtdParam._m0[11u].y;
    float _258 = _250.z * cbMtdParam._m0[11u].z;
    vec4 _277 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _229) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _230) + cbTextureTilingScale._m0[5u].w));
    vec4 _316 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _318 = _316.x;
    float _331 = dot(vec4(_318, _316.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _348 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_318 - _331) * cbMtdParam._m0[24u].y) + _331) * cbMtdParam._m0[23u].x))) + 1.0;
    float _899 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _349 = isnan(1.0) ? _899 : (isnan(_899) ? 1.0 : min(_899, 1.0));
    float _356 = (_349 * ((_277.x * cbMtdParam._m0[12u].x) - _256)) + _256;
    float _357 = (_349 * ((_277.y * cbMtdParam._m0[12u].y) - _257)) + _257;
    float _358 = (_349 * ((_277.z * cbMtdParam._m0[12u].z) - _258)) + _258;
    vec4 _377 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _229) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _230) + cbTextureTilingScale._m0[14u].w));
    vec4 _397 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _229) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _230) + cbTextureTilingScale._m0[20u].w));
    vec4 _424 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _229) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _230) + cbTextureTilingScale._m0[4u].w));
    vec4 _441 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _443 = _441.x;
    float _444 = _441.y;
    float _445 = _441.z;
    float _454 = ((_424.z - _445) * _349) + _445;
    float _457 = ((((_424.x - _443) * _349) + _443) * 2.0) + (-1.0);
    float _458 = ((((_424.y - _444) * _349) + _444) * 2.0) + (-1.0);
    float _459 = dot(vec2(_457, _458), vec2(_457, _458));
    float _910 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _464 = sqrt(1.0 - (isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0))));
    float _467 = _457 + ((((_397.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _468 = _458 + ((((_397.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _471 = fma(_464, _197, fma(_468, _204, _467 * _190));
    float _474 = fma(_464, _198, fma(_468, _205, _467 * _191));
    float _477 = fma(_464, _199, fma(_468, _206, _467 * _192));
    float _481 = inversesqrt(dot(vec3(_471, _474, _477), vec3(_471, _474, _477)));
    vec4 _497 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _523 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _229) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _230) + cbTextureTilingScale._m0[11u].w));
    float _525 = _523.x;
    float _526 = 1.0 - _525;
    float _532 = (cbMtdParam._m0[19u].x + dot(vec4(_481 * _471, _481 * _474, _481 * _477, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_525 - _526) * cbMtdParam._m0[24u].z) + _526) * cbMtdParam._m0[21u].z);
    float _921 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _533 = isnan(1.0) ? _921 : (isnan(_921) ? 1.0 : min(_921, 1.0));
    float _540 = (_533 * ((_377.x * cbMtdParam._m0[18u].x) - _356)) + _356;
    float _541 = (_533 * ((_377.y * cbMtdParam._m0[18u].y) - _357)) + _357;
    float _542 = (_533 * ((_377.z * cbMtdParam._m0[18u].z) - _358)) + _358;
    vec4 _554 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _568 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _570 = _568.x;
    float _588 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _229) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _230) + cbTextureTilingScale._m0[9u].w)).x - _570) * _349) + _570;
    float _592 = ((_554.x - _588) * cbMtdParam._m0[19u].z) + _588;
    float _594 = _592 - (_592 * _533);
    float _599 = (((_397.z - _454) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _454;
    vec4 _612 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _229) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _230) + cbTextureTilingScale._m0[15u].w));
    float _619 = (_612.x * 2.0) + (-1.0);
    float _620 = (_612.y * 2.0) + (-1.0);
    float _621 = dot(vec2(_619, _620), vec2(_619, _620));
    float _932 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _629 = ((_612.z - _599) * _533) + _599;
    float _639 = ((sqrt(1.0 - (isnan(1.0) ? _932 : (isnan(_932) ? 1.0 : min(_932, 1.0)))) - _464) * _533) + _464;
    float _642 = (((_619 - _467) * _533) + _467) + (cbMtdParam._m0[21u].x * _467);
    float _643 = (((_620 - _468) * _533) + _468) + (cbMtdParam._m0[21u].x * _468);
    float _648 = cbMtdParam._m0[22u].x + _497.w;
    float _651 = fma(_639, _197, fma(_643, _204, _642 * _190));
    float _654 = fma(_639, _198, fma(_643, _205, _642 * _191));
    float _657 = fma(_639, _199, fma(_643, _206, _642 * _192));
    float _661 = inversesqrt(dot(vec3(_651, _654, _657), vec3(_651, _654, _657)));
    float _943 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _954 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _663 = isnan(1.0) ? _954 : (isnan(_954) ? 1.0 : min(_954, 1.0));
    float _965 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _664 = isnan(1.0) ? _965 : (isnan(_965) ? 1.0 : min(_965, 1.0));
    float _976 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _665 = isnan(1.0) ? _976 : (isnan(_976) ? 1.0 : min(_976, 1.0));
    float _987 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _666 = isnan(1.0) ? _987 : (isnan(_987) ? 1.0 : min(_987, 1.0));
    float _998 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _708 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _718 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _708);
    float _719 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _708);
    float _720 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _708);
    vec4 _725 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _727 = _725.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _787 = sqrt(((_718 * _718) + (_719 * _719)) + (_720 * _720));
        float _793 = (cbMatDynParam._m0[5u].x * _787) + cbMatDynParam._m0[5u].y;
        float _1009 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
        float _794 = isnan(1.0) ? _1009 : (isnan(_1009) ? 1.0 : min(_1009, 1.0));
        float _798 = (cbMatDynParam._m0[5u].z * _787) + cbMatDynParam._m0[5u].w;
        float _1020 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1020 : (isnan(_1020) ? 1.0 : min(_1020, 1.0))) - _794)) + _794) < ((_727 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _826;
    vec4 _749;
    float _756;
    float _757;
    float _758;
    float _759;
    float _763;
    vec4 _767;
    float _769;
    float _770;
    bool _781;
    for (;;)
    {
        _749 = cbInstanceData._m0[(_209 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _753 = (cbMtdParam._m0[0u].x * _664) * _749.x;
        float _754 = (cbMtdParam._m0[0u].y * _665) * _749.y;
        float _755 = (cbMtdParam._m0[0u].z * _666) * _749.z;
        float _1031 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
        _756 = isnan(1.0) ? _1031 : (isnan(_1031) ? 1.0 : min(_1031, 1.0));
        float _1042 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
        _757 = isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0));
        float _1053 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
        _758 = isnan(1.0) ? _1053 : (isnan(_1053) ? 1.0 : min(_1053, 1.0));
        _759 = _663 * TEXCOORD_5.w;
        _763 = cbInstanceData._m0[_209 + 6u].w;
        float _764 = _727 + (-0.5);
        _767 = cbMtdParam._m0[1u];
        _769 = _767.y * _764;
        _770 = _764 * 0.999000012874603271484375;
        _781 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_781)
        {
            if ((cbInstanceData._m0[_209 + 7u].x + _770) < 0.5)
            {
                _826 = true;
                break;
            }
        }
        if ((_749.w < 1.0) && ((_749.w + _770) < 0.5))
        {
            _826 = true;
            break;
        }
        if ((_769 + 1.0) < _767.x)
        {
            _826 = true;
            break;
        }
        _826 = false;
        break;
    }
    if (_826)
    {
        discard_state = true;
    }
    bool _852 = cbMtdParam._m0[1u].z != 0.0;
    float _853 = _852 ? _763 : 0.0;
    SV_Target.x = ((_651 * 0.5) * _661) + 0.500488758087158203125;
    SV_Target.y = ((_654 * 0.5) * _661) + 0.500488758087158203125;
    SV_Target.z = ((_657 * 0.5) * _661) + 0.500488758087158203125;
    SV_Target.w = _853;
    SV_Target_1.x = isnan(1.0) ? _998 : (isnan(_998) ? 1.0 : min(_998, 1.0));
    SV_Target_1.y = isnan(1.0) ? _943 : (isnan(_943) ? 1.0 : min(_943, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _852 ? _763 : _759;
    SV_Target_2.x = _756;
    SV_Target_2.y = _757;
    SV_Target_2.z = _758;
    SV_Target_2.w = _852 ? _763 : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _853;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _853;
    discard_exit();
}


