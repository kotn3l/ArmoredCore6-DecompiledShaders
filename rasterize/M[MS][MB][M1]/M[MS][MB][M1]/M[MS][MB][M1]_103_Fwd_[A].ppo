#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1340;
float _3721;
float _3722;
float _3723;
float _3724;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _232 = _231 * _223;
    float _233 = _231 * _224;
    float _234 = _231 * _225;
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = _238 * NORMAL.x;
    float _240 = _238 * NORMAL.y;
    float _241 = _238 * NORMAL.z;
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _246 = _245 * TANGENT.x;
    float _247 = _245 * TANGENT.y;
    float _248 = _245 * TANGENT.z;
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _251 + 1u;
    uint _260 = _251 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_251].x * cbInstanceData._m0[_251].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _291.x * cbMtdParam._m0[11u].x;
    float _298 = _291.y * cbMtdParam._m0[11u].y;
    float _299 = _291.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _356 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _358 = _356.x;
    float _370 = dot(vec4(_358, _356.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _387 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_358 - _370) * cbMtdParam._m0[24u].y) + _370) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3733 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0));
    float _395 = (_388 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _396 = (_388 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _397 = (_388 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _415 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _432 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _434 = _432.x;
    float _435 = _432.y;
    float _436 = _432.z;
    float _445 = ((_415.z - _436) * _388) + _436;
    float _448 = ((((_415.x - _434) * _388) + _434) * 2.0) + (-1.0);
    float _450 = ((((_415.y - _435) * _388) + _435) * 2.0) + (-1.0);
    float _451 = dot(vec2(_448, _450), vec2(_448, _450));
    float _3744 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _456 = sqrt(1.0 - (isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0))));
    float _459 = fma(_456, _239, fma(_450, _246, _448 * _232));
    float _462 = fma(_456, _240, fma(_450, _247, _448 * _233));
    float _465 = fma(_456, _241, fma(_450, _248, _448 * _234));
    float _469 = inversesqrt(dot(vec3(_459, _462, _465), vec3(_459, _462, _465)));
    vec4 _485 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _511 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _513 = _511.x;
    float _514 = 1.0 - _513;
    float _520 = (cbMtdParam._m0[19u].x + dot(vec4(_469 * _459, _469 * _462, _469 * _465, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_513 - _514) * cbMtdParam._m0[24u].z) + _514) * cbMtdParam._m0[21u].z);
    float _3755 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0));
    float _523 = (-0.0) - cbMtdParam._m0[24u].x;
    float _525 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _526 = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    float _533 = _521 - ((_521 * TEXCOORD_8.x) * _526);
    float _534 = _521 - ((_521 * TEXCOORD_8.y) * _526);
    float _535 = _521 - ((_521 * TEXCOORD_8.z) * _526);
    float _542 = (_533 * (cbMtdParam._m0[17u].x - _395)) + _395;
    float _543 = (_534 * (cbMtdParam._m0[17u].y - _396)) + _396;
    float _544 = (_535 * (cbMtdParam._m0[17u].z - _397)) + _397;
    vec4 _556 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _270) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _271) + cbTextureTilingScale._m0[19u].w));
    float _558 = _556.x;
    float _559 = 1.0 - _558;
    float _587 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_558 - _559) * cbMtdParam._m0[24u].w) + _559) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3776 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _588 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
    float _596 = ((((cbMtdParam._m0[10u].x - _542) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _588) + _542;
    float _597 = ((((cbMtdParam._m0[10u].y - _543) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _588) + _543;
    float _598 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _544)) * _588) + _544;
    vec4 _624 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _626 = _624.x;
    float _644 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _270) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _271) + cbTextureTilingScale._m0[9u].w)).x - _626) * _388) + _626;
    float _648 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _644) * cbMtdParam._m0[19u].z) + _644;
    float _650 = _648 - (_648 * _533);
    float _652 = _650 - (_650 * _588);
    vec4 _666 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _673 = (_666.x * 2.0) + (-1.0);
    float _674 = (_666.y * 2.0) + (-1.0);
    float _675 = dot(vec2(_673, _674), vec2(_673, _674));
    float _3787 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _683 = ((_666.z - _445) * _533) + _445;
    float _686 = ((cbMtdParam._m0[23u].y - _683) * _588) + _683;
    vec4 _705 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _270) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _271) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _711 = (_705.x * 2.0) + (-1.0);
    float _712 = (_705.y * 2.0) + (-1.0);
    float _713 = dot(vec2(_711, _712), vec2(_711, _712));
    float _3798 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _728 = ((sqrt(1.0 - (isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0)))) - _456) * _535) + _456;
    float _731 = (((_673 - _448) * _533) + _448) + (cbMtdParam._m0[21u].x * _448);
    float _732 = (((_674 - _450) * _534) + _450) + (cbMtdParam._m0[21u].x * _450);
    float _743 = (((_711 - _731) + (_731 * cbMtdParam._m0[22u].z)) * _588) + _731;
    float _744 = (((_712 - _732) + (_732 * cbMtdParam._m0[22u].z)) * _588) + _732;
    float _745 = (_588 * (sqrt(1.0 - (isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0)))) - _728)) + _728;
    float _747 = cbMtdParam._m0[22u].x + _485.w;
    float _750 = fma(_745, _239, fma(_744, _246, _743 * _232));
    float _753 = fma(_745, _240, fma(_744, _247, _743 * _233));
    float _756 = fma(_745, _241, fma(_744, _248, _743 * _234));
    float _760 = inversesqrt(dot(vec3(_750, _753, _756), vec3(_750, _753, _756)));
    float _761 = _760 * _750;
    float _762 = _760 * _753;
    float _763 = _760 * _756;
    float _3809 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _764 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
    float _3820 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _3831 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _3842 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _3853 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _3864 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _769 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
    float _783 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _823 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _833 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _823);
    float _834 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _823);
    float _835 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _823);
    float _839 = inversesqrt(dot(vec3(_833, _834, _835), vec3(_833, _834, _835)));
    float _840 = _833 * _839;
    float _841 = _834 * _839;
    float _842 = _835 * _839;
    vec4 _847 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _849 = _847.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1021 = sqrt(((_833 * _833) + (_834 * _834)) + (_835 * _835));
        float _1027 = (cbMatDynParam._m0[5u].x * _1021) + cbMatDynParam._m0[5u].y;
        float _3875 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1028 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
        float _1032 = (cbMatDynParam._m0[5u].z * _1021) + cbMatDynParam._m0[5u].w;
        float _3886 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0))) - _1028)) + _1028) < ((_849 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _860 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _861 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _879 = fma(_763, cbSceneParam._m0[5u].z, fma(_762, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _761));
    float _882 = fma(_763, cbSceneParam._m0[6u].z, fma(_762, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _761));
    float _885 = fma(_763, cbSceneParam._m0[7u].z, fma(_762, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _761));
    uint _898 = _251 + 9u;
    uint _899 = _898 + uint(cbMatDynParam._m0[0u].w);
    float _905 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0)))) * cbInstanceData._m0[_899].x;
    float _906 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0)))) * cbInstanceData._m0[_899].y;
    float _907 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0)))) * cbInstanceData._m0[_899].z;
    float _3897 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _908 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    float _3908 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _909 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _3919 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _910 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _911 = 1.0 - _769;
    float _912 = _908 * _911;
    float _913 = _909 * _911;
    float _914 = _910 * _911;
    float _919 = (_908 + (-0.039999999105930328369140625)) * _769;
    float _920 = (_909 + (-0.039999999105930328369140625)) * _769;
    float _921 = (_910 + (-0.039999999105930328369140625)) * _769;
    float _922 = _919 + 0.039999999105930328369140625;
    float _924 = _920 + 0.039999999105930328369140625;
    float _925 = _921 + 0.039999999105930328369140625;
    vec4 _934 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _860, cbSceneParam._m0[86u].y * _861));
    float _938 = ((isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0))) * TEXCOORD_5.w) * _934.x;
    float _939 = dot(vec3(_761, _762, _763), vec3(_840, _841, _842));
    float _942 = _939 * 2.0;
    float _946 = (_942 * _761) - _840;
    float _947 = (_942 * _762) - _841;
    float _948 = (_942 * _763) - _842;
    float _952 = abs(dot(vec3(_840, _841, _842), vec3(_761, _762, _763)));
    float _3930 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _954 = sqrt(_764);
    float _967 = exp2((_954 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_954 * 3.0));
    float _973 = (1.0 - _967) * ((_954 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _974 = _967 * _954;
    float _1002 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1006 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1010 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1339;
    float _1341;
    float _1342;
    float _1343;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1064 = fma(_1010, cbModelParam._m0[26u].z, fma(_1006, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1002));
        float _1068 = fma(_1010, cbModelParam._m0[27u].z, fma(_1006, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1002));
        float _1072 = fma(_1010, cbModelParam._m0[28u].z, fma(_1006, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1002));
        float _1097 = _1002 + _761;
        float _1098 = _1006 + _762;
        float _1099 = _1010 + _763;
        float _1109 = fma(_1099, cbModelParam._m0[26u].z, fma(_1098, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1097)) - _1064;
        float _1110 = fma(_1099, cbModelParam._m0[27u].z, fma(_1098, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1097)) - _1068;
        float _1111 = fma(_1099, cbModelParam._m0[28u].z, fma(_1098, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1097)) - _1072;
        float _1115 = inversesqrt(dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111)));
        float _1128 = ((_1115 * _1109) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1064 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1129 = ((_1115 * _1110) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1068 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1130 = ((_1115 * _1111) / cbModelParam._m0[34u].z) + ((((((_1072 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1133 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1128, _1129, _1130), 0.0);
        vec4 _1140 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1128, _1129, _1130), 0.0);
        vec4 _1147 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1128, _1129, _1130), 0.0);
        vec4 _1154 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1128, _1129, _1130), 0.0);
        float _1167 = exp2((_1133.w + (-0.5)) * 20.0) * 2.0;
        float _1168 = _1167 * (_1133.x + (-0.5));
        float _1169 = _1167 * (_1133.y + (-0.5));
        float _1170 = _1167 * (_1133.z + (-0.5));
        float _1177 = exp2((_1140.w + (-0.5)) * 20.0) * 2.0;
        float _1178 = _1177 * (_1140.x + (-0.5));
        float _1179 = _1177 * (_1140.y + (-0.5));
        float _1180 = _1177 * (_1140.z + (-0.5));
        float _1187 = exp2((_1147.w + (-0.5)) * 20.0) * 2.0;
        float _1188 = _1187 * (_1147.x + (-0.5));
        float _1189 = _1187 * (_1147.y + (-0.5));
        float _1190 = _1187 * (_1147.z + (-0.5));
        float _1197 = exp2((_1154.w + (-0.5)) * 20.0) * 2.0;
        float _1198 = _1197 * (_1154.x + (-0.5));
        float _1199 = _1197 * (_1154.y + (-0.5));
        float _1200 = _1197 * (_1154.z + (-0.5));
        float _1201 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1202 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1203 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1204 = _1168 * 0.5;
        float _1205 = _1178 * 0.5;
        float _1206 = _1188 * 0.5;
        float _1207 = dot(vec3(_1204, _1205, _1206), vec3(_1204, _1205, _1206));
        float _1212 = (_1207 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1207);
        float _1221 = (dot(vec3(_761, _762, _763), vec3(_1212 * _1204, _1212 * _1205, _1212 * _1206)) + 1.0) * 0.5;
        float _3956 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1231 = sqrt(((_1205 * _1205) + (_1204 * _1204)) + (_1206 * _1206)) / (_1201 + 9.9999997473787516355514526367188e-06);
        float _3967 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1232 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
        float _1233 = _1232 * 2.0;
        float _1237 = (1.0 - _1232) / (_1232 + 1.0);
        float _3978 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1238 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
        float _1247 = ((((1.0 - _1238) * (_1233 + 2.0)) * exp2(log2(isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) * (_1233 + 1.0))) + _1238) * _1201;
        float _1248 = _1169 * 0.5;
        float _1249 = _1179 * 0.5;
        float _1250 = _1189 * 0.5;
        float _1251 = dot(vec3(_1248, _1249, _1250), vec3(_1248, _1249, _1250));
        float _1256 = (_1251 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1251);
        float _1264 = (dot(vec3(_761, _762, _763), vec3(_1256 * _1248, _1256 * _1249, _1256 * _1250)) + 1.0) * 0.5;
        float _3989 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1273 = sqrt(((_1249 * _1249) + (_1248 * _1248)) + (_1250 * _1250)) / (_1202 + 9.9999997473787516355514526367188e-06);
        float _4000 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1274 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
        float _1275 = _1274 * 2.0;
        float _1279 = (1.0 - _1274) / (_1274 + 1.0);
        float _4011 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1280 = isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0));
        float _1289 = ((((1.0 - _1280) * (_1275 + 2.0)) * exp2(log2(isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0))) * (_1275 + 1.0))) + _1280) * _1202;
        float _1290 = _1170 * 0.5;
        float _1291 = _1180 * 0.5;
        float _1292 = _1190 * 0.5;
        float _1293 = dot(vec3(_1290, _1291, _1292), vec3(_1290, _1291, _1292));
        float _1298 = (_1293 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1293);
        float _1306 = (dot(vec3(_761, _762, _763), vec3(_1298 * _1290, _1298 * _1291, _1298 * _1292)) + 1.0) * 0.5;
        float _4022 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1315 = sqrt(((_1291 * _1291) + (_1290 * _1290)) + (_1292 * _1292)) / (_1203 + 9.9999997473787516355514526367188e-06);
        float _4033 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1316 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1317 = _1316 * 2.0;
        float _1321 = (1.0 - _1316) / (_1316 + 1.0);
        float _4044 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1322 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1331 = ((((1.0 - _1322) * (_1317 + 2.0)) * exp2(log2(isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * (_1317 + 1.0))) + _1322) * _1203;
        _1339 = _1170;
        _1341 = _1169;
        _1342 = _1168;
        _1343 = _1180;
        _1344 = _1179;
        _1345 = _1178;
        _1346 = _1190;
        _1347 = _1189;
        _1348 = _1188;
        _1349 = _1203;
        _1350 = _1202;
        _1351 = _1201;
        _1352 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0)));
        _1353 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0)));
        _1354 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0)));
    }
    else
    {
        _1339 = _1340;
        _1341 = _1340;
        _1342 = _1340;
        _1343 = _1340;
        _1344 = _1340;
        _1345 = _1340;
        _1346 = _1340;
        _1347 = _1340;
        _1348 = _1340;
        _1349 = _1340;
        _1350 = _1340;
        _1351 = _1340;
        _1352 = 0.0;
        _1353 = 0.0;
        _1354 = 0.0;
    }
    float _1651;
    float _1652;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1382 = fma(_1010, cbModelParam._m0[30u].z, fma(_1006, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1002));
        float _1386 = fma(_1010, cbModelParam._m0[31u].z, fma(_1006, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1002));
        float _1390 = fma(_1010, cbModelParam._m0[32u].z, fma(_1006, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1002));
        float _1413 = _1002 + _761;
        float _1414 = _1006 + _762;
        float _1415 = _1010 + _763;
        float _1425 = fma(_1415, cbModelParam._m0[30u].z, fma(_1414, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1413)) - _1382;
        float _1426 = fma(_1415, cbModelParam._m0[31u].z, fma(_1414, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1413)) - _1386;
        float _1427 = fma(_1415, cbModelParam._m0[32u].z, fma(_1414, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1413)) - _1390;
        float _1431 = inversesqrt(dot(vec3(_1425, _1426, _1427), vec3(_1425, _1426, _1427)));
        float _1444 = ((_1431 * _1425) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1382 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1445 = ((_1431 * _1426) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1386 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1446 = ((_1431 * _1427) / cbModelParam._m0[35u].z) + ((((((_1390 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1448 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1444, _1445, _1446), 0.0);
        vec4 _1455 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1444, _1445, _1446), 0.0);
        vec4 _1462 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1444, _1445, _1446), 0.0);
        vec4 _1469 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1444, _1445, _1446), 0.0);
        float _1481 = exp2((_1448.w + (-0.5)) * 20.0) * 2.0;
        float _1482 = _1481 * (_1448.x + (-0.5));
        float _1483 = _1481 * (_1448.y + (-0.5));
        float _1484 = _1481 * (_1448.z + (-0.5));
        float _1491 = exp2((_1455.w + (-0.5)) * 20.0) * 2.0;
        float _1492 = _1491 * (_1455.x + (-0.5));
        float _1493 = _1491 * (_1455.y + (-0.5));
        float _1494 = _1491 * (_1455.z + (-0.5));
        float _1501 = exp2((_1462.w + (-0.5)) * 20.0) * 2.0;
        float _1502 = _1501 * (_1462.x + (-0.5));
        float _1503 = _1501 * (_1462.y + (-0.5));
        float _1504 = _1501 * (_1462.z + (-0.5));
        float _1511 = exp2((_1469.w + (-0.5)) * 20.0) * 2.0;
        float _1512 = _1511 * (_1469.x + (-0.5));
        float _1513 = _1511 * (_1469.y + (-0.5));
        float _1514 = _1511 * (_1469.z + (-0.5));
        float _1515 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1516 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1517 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1518 = _1482 * 0.5;
        float _1519 = _1492 * 0.5;
        float _1520 = _1502 * 0.5;
        float _1521 = dot(vec3(_1518, _1519, _1520), vec3(_1518, _1519, _1520));
        float _1526 = (_1521 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1521);
        float _1534 = (dot(vec3(_761, _762, _763), vec3(_1526 * _1518, _1526 * _1519, _1526 * _1520)) + 1.0) * 0.5;
        float _4085 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1543 = sqrt(((_1519 * _1519) + (_1518 * _1518)) + (_1520 * _1520)) / (_1515 + 9.9999997473787516355514526367188e-06);
        float _4096 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1544 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1545 = _1544 * 2.0;
        float _1549 = (1.0 - _1544) / (_1544 + 1.0);
        float _4107 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
        float _1559 = ((((1.0 - _1550) * (_1545 + 2.0)) * exp2(log2(isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * (_1545 + 1.0))) + _1550) * _1515;
        float _1560 = _1483 * 0.5;
        float _1561 = _1493 * 0.5;
        float _1562 = _1503 * 0.5;
        float _1563 = dot(vec3(_1560, _1561, _1562), vec3(_1560, _1561, _1562));
        float _1568 = (_1563 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1563);
        float _1576 = (dot(vec3(_761, _762, _763), vec3(_1568 * _1560, _1568 * _1561, _1568 * _1562)) + 1.0) * 0.5;
        float _4118 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1585 = sqrt(((_1561 * _1561) + (_1560 * _1560)) + (_1562 * _1562)) / (_1516 + 9.9999997473787516355514526367188e-06);
        float _4129 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1586 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _1587 = _1586 * 2.0;
        float _1591 = (1.0 - _1586) / (_1586 + 1.0);
        float _4140 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1592 = isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0));
        float _1601 = ((((1.0 - _1592) * (_1587 + 2.0)) * exp2(log2(isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0))) * (_1587 + 1.0))) + _1592) * _1516;
        float _1602 = _1484 * 0.5;
        float _1603 = _1494 * 0.5;
        float _1604 = _1504 * 0.5;
        float _1605 = dot(vec3(_1602, _1603, _1604), vec3(_1602, _1603, _1604));
        float _1610 = (_1605 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1605);
        float _1618 = (dot(vec3(_761, _762, _763), vec3(_1610 * _1602, _1610 * _1603, _1610 * _1604)) + 1.0) * 0.5;
        float _4151 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        float _1627 = sqrt(((_1603 * _1603) + (_1602 * _1602)) + (_1604 * _1604)) / (_1517 + 9.9999997473787516355514526367188e-06);
        float _4162 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1628 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1629 = _1628 * 2.0;
        float _1633 = (1.0 - _1628) / (_1628 + 1.0);
        float _4173 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1634 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1643 = ((((1.0 - _1634) * (_1629 + 2.0)) * exp2(log2(isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))) * (_1629 + 1.0))) + _1634) * _1517;
        _1651 = _1484;
        _1652 = _1483;
        _1653 = _1482;
        _1654 = _1494;
        _1655 = _1493;
        _1656 = _1492;
        _1657 = _1504;
        _1658 = _1503;
        _1659 = _1502;
        _1660 = _1517;
        _1661 = _1516;
        _1662 = _1515;
        _1663 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)));
        _1664 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)));
        _1665 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0)));
    }
    else
    {
        _1651 = _1340;
        _1652 = _1340;
        _1653 = _1340;
        _1654 = _1340;
        _1655 = _1340;
        _1656 = _1340;
        _1657 = _1340;
        _1658 = _1340;
        _1659 = _1340;
        _1660 = _1340;
        _1661 = _1340;
        _1662 = _1340;
        _1663 = 0.0;
        _1664 = 0.0;
        _1665 = 0.0;
    }
    float _1675 = (cbModelParam._m0[1u].x * (_1663 - _1352)) + _1352;
    float _1676 = (cbModelParam._m0[1u].x * (_1664 - _1353)) + _1353;
    float _1677 = (cbModelParam._m0[1u].x * (_1665 - _1354)) + _1354;
    float _1698 = fma(_1677, cbSceneParam._m0[89u].z, fma(_1676, cbSceneParam._m0[89u].y, _1675 * cbSceneParam._m0[89u].x));
    float _1701 = fma(_1677, cbSceneParam._m0[90u].z, fma(_1676, cbSceneParam._m0[90u].y, _1675 * cbSceneParam._m0[90u].x));
    float _1704 = fma(_1677, cbSceneParam._m0[91u].z, fma(_1676, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1675));
    float _1719 = _946 * 0.5;
    float _1720 = _947 * 0.5;
    float _1721 = _948 * 0.5;
    float _1722 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1653, _1656, _1659, _1662));
    float _1725 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1652, _1655, _1658, _1661));
    float _1728 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1651, _1654, _1657, _1660));
    float _1762;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1735 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1339, _1343, _1346, _1349));
        float _1739 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1341, _1344, _1347, _1350));
        float _1743 = dot(vec4(_1719, _1720, _1721, 1.0), vec4(_1342, _1345, _1348, _1351));
        float _1750 = dot(vec4(cbModelParam._m0[39u]), vec4(_1719, _1720, _1721, 1.0));
        _1762 = dot(vec3(isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0)), isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0)), isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1750) ? 0.0 : (isnan(0.0) ? _1750 : max(0.0, _1750))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1762 = 1.0;
    }
    float _1773;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1764 = dot(vec4(cbModelParam._m0[40u]), vec4(_1719, _1720, _1721, 1.0));
        _1773 = dot(vec3(isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)), isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)), isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1764) ? 0.0 : (isnan(0.0) ? _1764 : max(0.0, _1764))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1773 = 1.0;
    }
    float _1777 = (_1773 * cbModelParam._m0[1u].x) + (_1762 * (1.0 - cbModelParam._m0[1u].x));
    float _1787 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _764);
    float _1788 = isnan(_1787) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1787 : min(cbModelParam._m0[25u].z, _1787));
    float _1869;
    float _1871;
    float _1873;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1836 = fma(_1010, cbModelParam._m0[13u].z, fma(_1006, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1002)) + cbModelParam._m0[13u].w;
        float _1840 = fma(_1010, cbModelParam._m0[14u].z, fma(_1006, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1002)) + cbModelParam._m0[14u].w;
        float _1844 = fma(_1010, cbModelParam._m0[15u].z, fma(_1006, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1002)) + cbModelParam._m0[15u].w;
        float _1847 = fma(_948, cbModelParam._m0[13u].z, fma(_947, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _946));
        float _1850 = fma(_948, cbModelParam._m0[14u].z, fma(_947, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _946));
        float _1853 = fma(_948, cbModelParam._m0[15u].z, fma(_947, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _946));
        float _1881;
        if (_1847 > 0.0)
        {
            _1881 = abs((1.0 - _1836) / _1847);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1836 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1881 = frontier_phi_17_15_ladder;
        }
        float _2084;
        if (_1850 > 0.0)
        {
            _2084 = abs((1.0 - _1840) / _1850);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1840 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2084 = frontier_phi_26_22_ladder;
        }
        float _2338;
        if (_1853 > 0.0)
        {
            _2338 = abs((1.0 - _1844) / _1853);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1844 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2338 = frontier_phi_38_33_ladder;
        }
        float _2340 = isnan(_2084) ? _1881 : (isnan(_1881) ? _2084 : min(_1881, _2084));
        float _2341 = isnan(_2338) ? _2340 : (isnan(_2340) ? _2338 : min(_2340, _2338));
        float _2345 = (_2341 * _1847) + _1836;
        float _2346 = (_2341 * _1850) + _1840;
        float _2347 = (_2341 * _1853) + _1844;
        float _2348 = _2341 * 9.9999997473787516355514526367188e-05;
        float _2350 = (-1.0) - _2348;
        float _2352 = _2348 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2347 > _2352) || ((_2347 < _2350) || ((_2346 > _2352) || ((_2346 < _2350) || ((_2345 < _2350) || (_2345 > _2352))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2475 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2347, cbModelParam._m0[9u].z, fma(_2346, cbModelParam._m0[9u].y, _2345 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2347, cbModelParam._m0[10u].z, fma(_2346, cbModelParam._m0[10u].y, _2345 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2347, cbModelParam._m0[11u].z, fma(_2346, cbModelParam._m0[11u].y, _2345 * cbModelParam._m0[11u].x))), _1788);
            frontier_phi_16_38_ladder = _2475.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2475.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2475.x * cbModelParam._m0[1u].y;
        }
        _1869 = frontier_phi_16_38_ladder_2;
        _1871 = frontier_phi_16_38_ladder_1;
        _1873 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1857 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_946, _947, _948), _1788);
        _1869 = _1857.x * cbModelParam._m0[1u].y;
        _1871 = _1857.y * cbModelParam._m0[1u].y;
        _1873 = _1857.z * cbModelParam._m0[1u].y;
    }
    float _1877 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _764);
    float _1878 = isnan(_1877) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1877 : min(cbModelParam._m0[25u].w, _1877));
    float _1968;
    float _1970;
    float _1972;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1932 = fma(_1010, cbModelParam._m0[21u].z, fma(_1006, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1002)) + cbModelParam._m0[21u].w;
        float _1936 = fma(_1010, cbModelParam._m0[22u].z, fma(_1006, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1002)) + cbModelParam._m0[22u].w;
        float _1940 = fma(_1010, cbModelParam._m0[23u].z, fma(_1006, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1002)) + cbModelParam._m0[23u].w;
        float _1943 = fma(_948, cbModelParam._m0[21u].z, fma(_947, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _946));
        float _1946 = fma(_948, cbModelParam._m0[22u].z, fma(_947, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _946));
        float _1949 = fma(_948, cbModelParam._m0[23u].z, fma(_947, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _946));
        float _2089;
        if (_1943 > 0.0)
        {
            _2089 = abs((1.0 - _1932) / _1943);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1943 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1932 + 1.0) / _1943);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2089 = frontier_phi_28_24_ladder;
        }
        float _2365;
        if (_1946 > 0.0)
        {
            _2365 = abs((1.0 - _1936) / _1946);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1946 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1936 + 1.0) / _1946);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2365 = frontier_phi_40_35_ladder;
        }
        float _2578;
        if (_1949 > 0.0)
        {
            _2578 = abs((1.0 - _1940) / _1949);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1949 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1940 + 1.0) / _1949);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2578 = frontier_phi_49_46_ladder;
        }
        float _2580 = isnan(_2365) ? _2089 : (isnan(_2089) ? _2365 : min(_2089, _2365));
        float _2581 = isnan(_2578) ? _2580 : (isnan(_2580) ? _2578 : min(_2580, _2578));
        float _2585 = (_2581 * _1943) + _1932;
        float _2586 = (_2581 * _1946) + _1936;
        float _2587 = (_2581 * _1949) + _1940;
        float _2588 = _2581 * 9.9999997473787516355514526367188e-05;
        float _2589 = (-1.0) - _2588;
        float _2591 = _2588 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2587 > _2591) || ((_2587 < _2589) || ((_2586 > _2591) || ((_2586 < _2589) || ((_2585 < _2589) || (_2585 > _2591))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2786 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2587, cbModelParam._m0[17u].z, fma(_2586, cbModelParam._m0[17u].y, _2585 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2587, cbModelParam._m0[18u].z, fma(_2586, cbModelParam._m0[18u].y, _2585 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2587, cbModelParam._m0[19u].z, fma(_2586, cbModelParam._m0[19u].y, _2585 * cbModelParam._m0[19u].x))), _1878);
            frontier_phi_25_49_ladder = _2786.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2786.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2786.x * cbModelParam._m0[1u].z;
        }
        _1968 = frontier_phi_25_49_ladder_2;
        _1970 = frontier_phi_25_49_ladder_1;
        _1972 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1952 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_946, _947, _948), _1878);
        _1968 = _1952.x * cbModelParam._m0[1u].z;
        _1970 = _1952.y * cbModelParam._m0[1u].z;
        _1972 = _1952.z * cbModelParam._m0[1u].z;
    }
    float _1985 = (((_973 * _922) + _974) * _938) * ((cbModelParam._m0[1u].w * (_1968 - _1869)) + _1869);
    float _1987 = (((_973 * _924) + _974) * _938) * ((cbModelParam._m0[1u].w * (_1970 - _1871)) + _1871);
    float _1989 = (((_973 * _925) + _974) * _938) * ((cbModelParam._m0[1u].w * (_1972 - _1873)) + _1873);
    float _1992 = fma(_1989, cbSceneParam._m0[89u].z, fma(_1987, cbSceneParam._m0[89u].y, _1985 * cbSceneParam._m0[89u].x));
    float _1995 = fma(_1989, cbSceneParam._m0[90u].z, fma(_1987, cbSceneParam._m0[90u].y, _1985 * cbSceneParam._m0[90u].x));
    float _1998 = fma(_1989, cbSceneParam._m0[91u].z, fma(_1987, cbSceneParam._m0[91u].y, _1985 * cbSceneParam._m0[91u].x));
    uvec4 _2008 = floatBitsToUint(cbInstanceData._m0[_251 + 5u]);
    uint _2010 = _2008.x * 14u;
    uint _2011 = _2010 + 13u;
    float _2018 = _938 + (-1.0);
    float _2023 = (cbLight._m0[_2011].x * _2018) + 1.0;
    float _2024 = (cbLight._m0[_2011].y * _2018) + 1.0;
    float _2025 = (cbLight._m0[_2011].z * _2018) + 1.0;
    float _2026 = (cbLight._m0[_2011].w * _2018) + 1.0;
    uint _2027 = _2010 + 5u;
    float _2033 = isnan(1.0) ? _2024 : (isnan(_2024) ? 1.0 : min(_2024, 1.0));
    uint _2037 = _2010 + 4u;
    float _2043 = isnan(1.0) ? _2023 : (isnan(_2023) ? 1.0 : min(_2023, 1.0));
    uint _2047 = _2010 | 1u;
    float _2058 = dot(vec3(cbLight._m0[_2010].xyz), vec3(_761, _762, _763));
    float _2061 = dot(vec3(cbLight._m0[_2047].xyz), vec3(_761, _762, _763));
    float _4309 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _4320 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2066 = (isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * 0.3183098733425140380859375;
    float _2068 = (isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0))) * 0.3183098733425140380859375;
    float _2075 = ((cbLight._m0[_2027].x * _2033) * _2068) + ((cbLight._m0[_2037].x * _2043) * _2066);
    float _2076 = ((_2033 * cbLight._m0[_2027].y) * _2068) + ((_2043 * cbLight._m0[_2037].y) * _2066);
    float _2077 = ((_2033 * cbLight._m0[_2027].z) * _2068) + ((_2043 * cbLight._m0[_2037].z) * _2066);
    uvec4 _2081 = floatBitsToUint(cbLight._m0[_2010 + 12u]);
    bool _2083 = _2081.x == 0u;
    float _2094;
    float _2096;
    float _2098;
    if (_2083)
    {
        _2094 = _2075;
        _2096 = _2076;
        _2098 = _2077;
    }
    else
    {
        uint _2102 = _2010 + 6u;
        float _2118 = (dot(vec3(cbLight._m0[_2010 + 2u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2119 = _2118 * _2118;
        float _4331 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
        float _2120 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _2121 = isnan(1.0) ? _2025 : (isnan(_2025) ? 1.0 : min(_2025, 1.0));
        _2094 = (((cbLight._m0[_2102].x * 0.3183098733425140380859375) * _2120) * _2121) + _2075;
        _2096 = (((cbLight._m0[_2102].y * 0.3183098733425140380859375) * _2120) * _2121) + _2076;
        _2098 = (((cbLight._m0[_2102].z * 0.3183098733425140380859375) * _2120) * _2121) + _2077;
    }
    bool _2101 = _2081.y == 0u;
    float _2139;
    float _2141;
    float _2143;
    if (_2101)
    {
        _2139 = _2094;
        _2141 = _2096;
        _2143 = _2098;
    }
    else
    {
        uint _2309 = _2010 + 7u;
        float _2325 = (dot(vec3(cbLight._m0[_2010 + 3u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2326 = _2325 * _2325;
        float _4347 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
        float _2327 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _2328 = isnan(1.0) ? _2026 : (isnan(_2026) ? 1.0 : min(_2026, 1.0));
        _2139 = (((cbLight._m0[_2309].x * 0.3183098733425140380859375) * _2327) * _2328) + _2094;
        _2141 = (((cbLight._m0[_2309].y * 0.3183098733425140380859375) * _2327) * _2328) + _2096;
        _2143 = (((cbLight._m0[_2309].z * 0.3183098733425140380859375) * _2327) * _2328) + _2098;
    }
    uint _2146 = _2010 + 8u;
    float _2159 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2010].w)) * _764) * 0.949999988079071044921875);
    float _2160 = _2159 * _2159;
    float _2161 = cbLight._m0[_2010].x + _840;
    float _2162 = cbLight._m0[_2010].y + _841;
    float _2163 = cbLight._m0[_2010].z + _842;
    float _2167 = inversesqrt(dot(vec3(_2161, _2162, _2163), vec3(_2161, _2162, _2163)));
    float _2168 = _2167 * _2161;
    float _2169 = _2167 * _2162;
    float _2170 = _2167 * _2163;
    float _2171 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2010].xyz));
    float _4363 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _2174 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
    float _4374 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _2175 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
    float _2176 = dot(vec3(_761, _762, _763), vec3(_2168, _2169, _2170));
    float _4385 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    float _2179 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
    float _2180 = dot(vec3(cbLight._m0[_2010].xyz), vec3(_2168, _2169, _2170));
    float _4396 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
    float _2184 = _2160 * _2160;
    float _2188 = ((_2179 * _2179) * (_2184 + (-1.0))) + 1.0;
    float _2196 = exp2(log2(1.0 - (isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0)))) * 5.0);
    float _2197 = 0.959999978542327880859375 - _919;
    float _2199 = 0.959999978542327880859375 - _920;
    float _2200 = 0.959999978542327880859375 - _921;
    float _2207 = 1.0 - _2160;
    float _2218 = (0.5 / (((_2175 * ((_2174 * _2207) + _2160)) + 9.9999999392252902907785028219223e-09) + (((_2175 * _2207) + _2160) * _2174))) * _2174;
    float _4407 = isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0));
    float _2220 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * (_2184 / ((_2188 * _2188) * 3.141590118408203125));
    uint _2231 = _2010 + 9u;
    float _2242 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2047].w)) * _764) * 0.949999988079071044921875);
    float _2243 = _2242 * _2242;
    float _2244 = cbLight._m0[_2047].x + _840;
    float _2245 = cbLight._m0[_2047].y + _841;
    float _2246 = cbLight._m0[_2047].z + _842;
    float _2250 = inversesqrt(dot(vec3(_2244, _2245, _2246), vec3(_2244, _2245, _2246)));
    float _2251 = _2250 * _2244;
    float _2252 = _2250 * _2245;
    float _2253 = _2250 * _2246;
    float _2254 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2047].xyz));
    float _4418 = isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0));
    float _2257 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
    float _2258 = dot(vec3(_761, _762, _763), vec3(_2251, _2252, _2253));
    float _4429 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
    float _2261 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
    float _2262 = dot(vec3(cbLight._m0[_2047].xyz), vec3(_2251, _2252, _2253));
    float _4440 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2266 = _2243 * _2243;
    float _2270 = ((_2261 * _2261) * (_2266 + (-1.0))) + 1.0;
    float _2277 = exp2(log2(1.0 - (isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0)))) * 5.0);
    float _2284 = 1.0 - _2243;
    float _2294 = (0.5 / (((_2175 * ((_2257 * _2284) + _2243)) + 9.9999999392252902907785028219223e-09) + (((_2175 * _2284) + _2243) * _2257))) * _2257;
    float _4451 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
    float _2296 = (isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * (_2266 / ((_2270 * _2270) * 3.141590118408203125));
    float _2306 = (((((_2277 * _2197) + _922) * cbLight._m0[_2231].x) * _2296) * _2033) + (((((_2196 * _2197) + _922) * cbLight._m0[_2146].x) * _2220) * _2043);
    float _2307 = (((((_2277 * _2199) + _924) * cbLight._m0[_2231].y) * _2296) * _2033) + (((((_2196 * _2199) + _924) * cbLight._m0[_2146].y) * _2220) * _2043);
    float _2308 = (((((_2277 * _2200) + _925) * cbLight._m0[_2231].z) * _2296) * _2033) + (((((_2196 * _2200) + _925) * cbLight._m0[_2146].z) * _2220) * _2043);
    float _2370;
    float _2372;
    float _2374;
    if (_2083)
    {
        _2370 = _2306;
        _2372 = _2307;
        _2374 = _2308;
    }
    else
    {
        uint _2376 = _2010 + 2u;
        uint _2380 = _2010 + 10u;
        float _2394 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2376].w)) * _764) * 0.949999988079071044921875);
        float _2395 = _2394 * _2394;
        float _2396 = cbLight._m0[_2376].x + _840;
        float _2397 = cbLight._m0[_2376].y + _841;
        float _2398 = cbLight._m0[_2376].z + _842;
        float _2402 = inversesqrt(dot(vec3(_2396, _2397, _2398), vec3(_2396, _2397, _2398)));
        float _2403 = _2402 * _2396;
        float _2404 = _2402 * _2397;
        float _2405 = _2402 * _2398;
        float _2406 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2376].xyz));
        float _4462 = isnan(0.0) ? _2406 : (isnan(_2406) ? 0.0 : max(_2406, 0.0));
        float _2409 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _2410 = dot(vec3(_761, _762, _763), vec3(_2403, _2404, _2405));
        float _4473 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
        float _2413 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
        float _2414 = dot(vec3(cbLight._m0[_2376].xyz), vec3(_2403, _2404, _2405));
        float _4484 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
        float _2418 = _2395 * _2395;
        float _2422 = ((_2413 * _2413) * (_2418 + (-1.0))) + 1.0;
        float _2429 = exp2(log2(1.0 - (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0)))) * 5.0);
        float _2436 = 1.0 - _2395;
        float _2446 = (0.5 / (((_2175 * ((_2409 * _2436) + _2395)) + 9.9999999392252902907785028219223e-09) + (((_2175 * _2436) + _2395) * _2409))) * _2409;
        float _4495 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
        float _2448 = (isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0))) * (_2418 / ((_2422 * _2422) * 3.141590118408203125));
        float _2449 = isnan(1.0) ? _2025 : (isnan(_2025) ? 1.0 : min(_2025, 1.0));
        _2370 = (((((_2429 * _2197) + _922) * cbLight._m0[_2380].x) * _2448) * _2449) + _2306;
        _2372 = (((((_2429 * _2199) + _924) * cbLight._m0[_2380].y) * _2448) * _2449) + _2307;
        _2374 = (((((_2429 * _2200) + _925) * cbLight._m0[_2380].z) * _2448) * _2449) + _2308;
    }
    float _2484;
    float _2486;
    float _2488;
    if (_2101)
    {
        _2484 = _2370;
        _2486 = _2372;
        _2488 = _2374;
    }
    else
    {
        uint _2495 = _2010 + 3u;
        uint _2499 = _2010 + 11u;
        float _2513 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2495].w)) * _764) * 0.949999988079071044921875);
        float _2514 = _2513 * _2513;
        float _2515 = cbLight._m0[_2495].x + _840;
        float _2516 = cbLight._m0[_2495].y + _841;
        float _2517 = cbLight._m0[_2495].z + _842;
        float _2521 = inversesqrt(dot(vec3(_2515, _2516, _2517), vec3(_2515, _2516, _2517)));
        float _2522 = _2521 * _2515;
        float _2523 = _2521 * _2516;
        float _2524 = _2521 * _2517;
        float _2525 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2495].xyz));
        float _4511 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
        float _2528 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _2529 = dot(vec3(_761, _762, _763), vec3(_2522, _2523, _2524));
        float _4522 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
        float _2532 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _2533 = dot(vec3(cbLight._m0[_2495].xyz), vec3(_2522, _2523, _2524));
        float _4533 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
        float _2537 = _2514 * _2514;
        float _2541 = ((_2532 * _2532) * (_2537 + (-1.0))) + 1.0;
        float _2548 = exp2(log2(1.0 - (isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0)))) * 5.0);
        float _2555 = 1.0 - _2514;
        float _2565 = (0.5 / (((_2175 * ((_2528 * _2555) + _2514)) + 9.9999999392252902907785028219223e-09) + (((_2175 * _2555) + _2514) * _2528))) * _2528;
        float _4544 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
        float _2567 = (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * (_2537 / ((_2541 * _2541) * 3.141590118408203125));
        float _2568 = isnan(1.0) ? _2026 : (isnan(_2026) ? 1.0 : min(_2026, 1.0));
        _2484 = (((((_2548 * _2197) + _922) * cbLight._m0[_2499].x) * _2567) * _2568) + _2370;
        _2486 = (((((_2548 * _2199) + _924) * cbLight._m0[_2499].y) * _2567) * _2568) + _2372;
        _2488 = (((((_2548 * _2200) + _925) * cbLight._m0[_2499].z) * _2567) * _2568) + _2374;
    }
    float _2703;
    float _2705;
    float _2707;
    float _2709;
    float _2711;
    float _2713;
    if (_2008.y == 0u)
    {
        float _2643 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2644 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2643;
        float _2645 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2643;
        float _2646 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2643;
        uvec4 _2658 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2659 = _2658.x;
        uint _2670 = uint((float(_2658.y) * floor(float(uint(cbSceneParam._m0[85u].y * _861) / _2659))) + floor(float(uint(cbSceneParam._m0[85u].x * _860) / _2659)));
        float _2680 = (log2(_2646 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2681 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
        uint _2684 = uint(isnan(14.0) ? _2681 : (isnan(_2681) ? 14.0 : min(_2681, 14.0)));
        uvec4 _2689 = texelFetch(g_lightClusterGridBuffer, int(((_2684 << 2u) + (_2670 << 6u)) >> 2u));
        uint _2690 = _2689.x;
        uint _2691 = _2658.z;
        float _2791;
        float _2793;
        float _2795;
        float _2797;
        float _2799;
        float _2801;
        if (((((1u << ((_2691 >> 4u) & 15u)) + 4294967295u) & _2690) == 0u) || ((_2691 & 240u) == 0u))
        {
            _2791 = 0.0;
            _2793 = 0.0;
            _2795 = 0.0;
            _2797 = 0.0;
            _2799 = 0.0;
            _2801 = 0.0;
        }
        else
        {
            float _2792;
            float _2794;
            float _2796;
            float _2798;
            float _2800;
            float _2802;
            float _2943 = 0.0;
            float _2944 = 0.0;
            float _2945 = 0.0;
            float _2946 = 0.0;
            float _2947 = 0.0;
            float _2948 = 0.0;
            uint _2949 = 0u;
            uint _2958;
            bool _2959;
            for (;;)
            {
                _2958 = texelFetch(g_lightClassification, int((((_2684 << 5u) + (_2670 << 9u)) + (_2949 << 2u)) >> 2u)).x;
                _2959 = _2958 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2959)
                {
                    frontier_phi_66_pred = _2943;
                    frontier_phi_66_pred_1 = _2948;
                    frontier_phi_66_pred_2 = _2947;
                    frontier_phi_66_pred_3 = _2946;
                    frontier_phi_66_pred_4 = _2945;
                    frontier_phi_66_pred_5 = _2944;
                }
                else
                {
                    float _3088;
                    float _3089;
                    float _3090;
                    float _3091;
                    float _3092;
                    float _3093;
                    uint _3094;
                    _3088 = _2943;
                    _3089 = _2944;
                    _3090 = _2945;
                    _3091 = _2946;
                    _3092 = _2947;
                    _3093 = _2948;
                    _3094 = _2958;
                    float _3015;
                    float _3016;
                    float _3017;
                    float _3018;
                    float _3019;
                    float _3020;
                    for (;;)
                    {
                        uint _3098 = uint(findLSB(_3094)) + (_2949 << 5u);
                        uint _3095 = (_3094 + 4294967295u) & _3094;
                        uint _3100 = _3098 * 48u;
                        vec4 _3114 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3100)).x, texelFetch(g_PointLightRenderingBuffer, int(_3100 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3100 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3100 + 3u)).x));
                        uint _3120 = (_3098 * 48u) + 4u;
                        vec4 _3133 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3120)).x, texelFetch(g_PointLightRenderingBuffer, int(_3120 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3120 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3120 + 3u)).x));
                        uint _3139 = (_3098 * 48u) + 8u;
                        vec3 _3150 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3139)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3139 + 2u)).x));
                        float _3154 = _3114.x - _2644;
                        float _3155 = _3114.y - _2645;
                        float _3156 = _3114.z - _2646;
                        float _3157 = dot(vec3(_3154, _3155, _3156), vec3(_3154, _3155, _3156));
                        float _3160 = inversesqrt(_3157);
                        float _3161 = _3160 * _3154;
                        float _3162 = _3160 * _3155;
                        float _3163 = _3160 * _3156;
                        float _3164 = dot(vec3(_879, _882, _885), vec3(_3161, _3162, _3163));
                        float _3169 = 1.0 - (_3157 * _3114.w);
                        float _4570 = isnan(0.0) ? _3169 : (isnan(_3169) ? 0.0 : max(_3169, 0.0));
                        float _3170 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
                        float _3171 = sqrt(_3157) * _3133.w;
                        float _3174 = 1.39999997615814208984375 / (_3171 + 1.39999997615814208984375);
                        float _3175 = _3174 * _3174;
                        float _3178 = ((1.0 - _3175) * _3164) + _3175;
                        float _3181 = _3171 * _3171;
                        float _3185 = ((isnan(0.0) ? _3178 : (isnan(_3178) ? 0.0 : max(_3178, 0.0))) * _3170) / ((_3181 * 0.699999988079071044921875) + 1.0);
                        float _3189 = (-0.0) - _2644;
                        float _3190 = (-0.0) - _2645;
                        float _3191 = (-0.0) - _2646;
                        float _3195 = inversesqrt(dot(vec3(_3189, _3190, _3191), vec3(_3189, _3190, _3191)));
                        float _3196 = _3195 * _3189;
                        float _3197 = _3195 * _3190;
                        float _3198 = _3195 * _3191;
                        float _3206 = exp2(log2(1.0 / ((_3181 * 3.5) + 5.0)) * 0.25);
                        float _3207 = 1.0 - _954;
                        float _3214 = sqrt(1.0 - ((1.0 - (_3207 * _3207)) * (1.0 - (_3206 * _3206))));
                        float _3215 = _3214 * _3214;
                        float _3216 = _3215 * _3215;
                        float _3217 = _3196 + _3161;
                        float _3218 = _3197 + _3162;
                        float _3219 = _3198 + _3163;
                        float _3223 = inversesqrt(dot(vec3(_3217, _3218, _3219), vec3(_3217, _3218, _3219)));
                        float _3227 = dot(vec3(_879, _882, _885), vec3(_3196, _3197, _3198));
                        float _4586 = isnan(0.0) ? _3227 : (isnan(_3227) ? 0.0 : max(_3227, 0.0));
                        float _3230 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
                        float _3231 = dot(vec3(_879, _882, _885), vec3(_3223 * _3217, _3223 * _3218, _3223 * _3219));
                        float _4597 = isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : max(_3231, 0.0));
                        float _3234 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
                        float _3238 = ((_3234 * _3234) * (_3216 + (-1.0))) + 1.0;
                        float _3239 = _3174 * _3215;
                        float _3240 = _3239 * _3239;
                        float _3243 = ((1.0 - _3240) * _3164) + _3240;
                        float _4608 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0));
                        float _3244 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
                        float _3245 = 1.0 - _3215;
                        float _3255 = (0.5 / (((_3244 * ((_3230 * _3245) + _3215)) + 9.9999999392252902907785028219223e-09) + (((_3244 * _3245) + _3215) * _3230))) * _3244;
                        float _4619 = isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : max(_3255, 0.0));
                        float _3266 = (((_3216 * 3.1415927410125732421875) * (isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0)))) / ((_3238 * _3238) * ((_3181 * 2.1991131305694580078125) + 3.141590118408203125))) * _3170;
                        _3018 = (_3185 * _3133.x) + _3091;
                        _3019 = (_3185 * _3133.y) + _3092;
                        _3020 = (_3185 * _3133.z) + _3093;
                        _3015 = (_3266 * _3150.x) + _3088;
                        _3016 = (_3266 * _3150.y) + _3089;
                        _3017 = (_3266 * _3150.z) + _3090;
                        if (_3095 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3088 = _3015;
                            _3089 = _3016;
                            _3090 = _3017;
                            _3091 = _3018;
                            _3092 = _3019;
                            _3093 = _3020;
                            _3094 = _3095;
                        }
                    }
                    frontier_phi_66_pred = _3015;
                    frontier_phi_66_pred_1 = _3020;
                    frontier_phi_66_pred_2 = _3019;
                    frontier_phi_66_pred_3 = _3018;
                    frontier_phi_66_pred_4 = _3017;
                    frontier_phi_66_pred_5 = _3016;
                }
                _2792 = frontier_phi_66_pred;
                _2802 = frontier_phi_66_pred_1;
                _2800 = frontier_phi_66_pred_2;
                _2798 = frontier_phi_66_pred_3;
                _2796 = frontier_phi_66_pred_4;
                _2794 = frontier_phi_66_pred_5;
                uint _2950 = _2949 + 1u;
                if (_2950 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2943 = _2792;
                    _2944 = _2794;
                    _2945 = _2796;
                    _2946 = _2798;
                    _2947 = _2800;
                    _2948 = _2802;
                    _2949 = _2950;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2791 = _2792;
            _2793 = _2794;
            _2795 = _2796;
            _2797 = _2798;
            _2799 = _2800;
            _2801 = _2802;
        }
        uvec4 _2805 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2806 = _2805.z;
        uint _2808 = (_2806 >> 8u) & 15u;
        float _2911;
        float _2913;
        float _2915;
        float _2917;
        float _2919;
        float _2921;
        if (((4294967295u << _2808) & _2690) == 0u)
        {
            _2911 = _2791;
            _2913 = _2793;
            _2915 = _2795;
            _2917 = _2797;
            _2919 = _2799;
            _2921 = _2801;
        }
        else
        {
            float _2936 = inversesqrt(dot(vec3(_2644, _2645, _2646), vec3(_2644, _2645, _2646)));
            float _2937 = _2936 * _2644;
            float _2938 = _2936 * _2645;
            float _2939 = _2936 * _2646;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2808 < ((_2806 >> 12u) & 15u))
            {
                float _2912;
                float _2914;
                float _2916;
                float _2918;
                float _2920;
                float _2922;
                float _3071 = _2791;
                float _3072 = _2793;
                float _3073 = _2795;
                float _3074 = _2797;
                float _3075 = _2799;
                float _3076 = _2801;
                uint _3077 = _2808;
                uint _3086;
                bool _3087;
                for (;;)
                {
                    _3086 = texelFetch(g_lightClassification, int((((_2684 << 5u) + (_2670 << 9u)) + (_3077 << 2u)) >> 2u)).x;
                    _3087 = _3086 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3087)
                    {
                        frontier_phi_77_pred = _3076;
                        frontier_phi_77_pred_1 = _3075;
                        frontier_phi_77_pred_2 = _3074;
                        frontier_phi_77_pred_3 = _3073;
                        frontier_phi_77_pred_4 = _3072;
                        frontier_phi_77_pred_5 = _3071;
                    }
                    else
                    {
                        float _3280;
                        float _3281;
                        float _3282;
                        float _3283;
                        float _3284;
                        float _3285;
                        float _3574;
                        float _3575;
                        float _3576;
                        float _3577;
                        float _3578;
                        float _3579;
                        float _3293 = _3071;
                        float _3294 = _3072;
                        float _3295 = _3073;
                        float _3296 = _3074;
                        float _3297 = _3075;
                        float _3298 = _3076;
                        uint _3299 = _3086;
                        uint _3300;
                        vec4 _3325;
                        float _3326;
                        vec4 _3341;
                        vec3 _3353;
                        vec4 _3368;
                        vec4 _3384;
                        float _3430;
                        bool _3431;
                        for (;;)
                        {
                            uint _3310 = ((_3077 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3299));
                            _3300 = (_3299 + 4294967295u) & _3299;
                            uint _3312 = _3310 * 40u;
                            _3325 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3312)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 3u)).x));
                            _3326 = _3325.w;
                            uint _3328 = (_3310 * 40u) + 4u;
                            _3341 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3328)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 3u)).x));
                            uint _3343 = (_3310 * 40u) + 8u;
                            _3353 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3343)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 2u)).x));
                            uint _3355 = (_3310 * 40u) + 16u;
                            _3368 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3355)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3355 + 3u)).x));
                            uint _3371 = (_3310 * 40u) + 20u;
                            _3384 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3371)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3371 + 3u)).x));
                            uint _3386 = (_3310 * 40u) + 24u;
                            vec4 _3399 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3386)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 3u)).x));
                            uint _3405 = (_3310 * 40u) + 28u;
                            vec4 _3418 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 3u)).x));
                            _3430 = fma(_2646, _3418.z, fma(_2645, _3418.y, _3418.x * _2644)) + _3418.w;
                            _3431 = !((fma(_2646, _3399.z, fma(_2645, _3399.y, _3399.x * _2644)) + _3399.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3431)
                            {
                                float _3458 = _3325.x - _2644;
                                float _3459 = _3325.y - _2645;
                                float _3460 = _3325.z - _2646;
                                float _3461 = dot(vec3(_3458, _3459, _3460), vec3(_3458, _3459, _3460));
                                float _3464 = inversesqrt(_3461);
                                float _3465 = _3464 * _3458;
                                float _3466 = _3464 * _3459;
                                float _3467 = _3464 * _3460;
                                float _3471 = 1.0 - (_3461 / (_3326 * _3326));
                                float _4630 = isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0));
                                float _3472 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
                                float _3476 = sqrt(_3461) * _3341.w;
                                float _3478 = 1.39999997615814208984375 / (_3476 + 1.39999997615814208984375);
                                float _3479 = _3478 * _3478;
                                float _3482 = ((1.0 - _3479) * dot(vec3(_3465, _3466, _3467), vec3(_879, _882, _885))) + _3479;
                                float _3485 = _3476 * _3476;
                                float _3489 = (fma(_2646, _3368.z, fma(_2645, _3368.y, _3368.x * _2644)) + _3368.w) / _3430;
                                float _3490 = (fma(_2646, _3384.z, fma(_2645, _3384.y, _3384.x * _2644)) + _3384.w) / _3430;
                                float _3494 = 1.0 - dot(vec2(_3489, _3490), vec2(_3489, _3490));
                                float _4646 = isnan(0.0) ? _3494 : (isnan(_3494) ? 0.0 : max(_3494, 0.0));
                                float _3495 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
                                float _3496 = _3495 * (((isnan(0.0) ? _3482 : (isnan(_3482) ? 0.0 : max(_3482, 0.0))) * _3472) / ((_3485 * 0.699999988079071044921875) + 1.0));
                                float _3508 = exp2(log2(1.0 / ((_3485 * 3.5) + 5.0)) * 0.25);
                                float _3509 = 1.0 - _954;
                                float _3516 = sqrt(1.0 - ((1.0 - (_3509 * _3509)) * (1.0 - (_3508 * _3508))));
                                float _3517 = _3516 * _3516;
                                float _3518 = _3517 * _3517;
                                float _3519 = _3465 - _2937;
                                float _3520 = _3466 - _2938;
                                float _3521 = _3467 - _2939;
                                float _3525 = inversesqrt(dot(vec3(_3519, _3520, _3521), vec3(_3519, _3520, _3521)));
                                float _3529 = dot(vec3(_879, _882, _885), vec3((-0.0) - _2937, (-0.0) - _2938, (-0.0) - _2939));
                                float _4657 = isnan(0.0) ? _3529 : (isnan(_3529) ? 0.0 : max(_3529, 0.0));
                                float _3532 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
                                float _3533 = dot(vec3(_879, _882, _885), vec3(_3525 * _3519, _3525 * _3520, _3525 * _3521));
                                float _4668 = isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : max(_3533, 0.0));
                                float _3536 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
                                float _3540 = ((_3536 * _3536) * (_3518 + (-1.0))) + 1.0;
                                float _3541 = _3478 * _3517;
                                float _3542 = _3541 * _3541;
                                float _3548 = ((1.0 - _3542) * dot(vec3(_879, _882, _885), vec3(_3465, _3466, _3467))) + _3542;
                                float _4679 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                                float _3549 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
                                float _3550 = 1.0 - _3517;
                                float _3560 = (0.5 / (((_3549 * ((_3532 * _3550) + _3517)) + 9.9999999392252902907785028219223e-09) + (((_3549 * _3550) + _3517) * _3532))) * _3549;
                                float _4690 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0));
                                float _3570 = (_3495 * _3472) * (((_3518 * 3.1415927410125732421875) * (isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0)))) / ((_3540 * _3540) * ((_3485 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3496 * _3341.y;
                                frontier_phi_83_pred_1 = _3496 * _3341.x;
                                frontier_phi_83_pred_2 = _3570 * _3353.z;
                                frontier_phi_83_pred_3 = _3570 * _3353.y;
                                frontier_phi_83_pred_4 = _3570 * _3353.x;
                                frontier_phi_83_pred_5 = _3496 * _3341.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3578 = frontier_phi_83_pred;
                            _3577 = frontier_phi_83_pred_1;
                            _3576 = frontier_phi_83_pred_2;
                            _3575 = frontier_phi_83_pred_3;
                            _3574 = frontier_phi_83_pred_4;
                            _3579 = frontier_phi_83_pred_5;
                            _3283 = _3577 + _3296;
                            _3284 = _3578 + _3297;
                            _3285 = _3579 + _3298;
                            _3280 = _3574 + _3293;
                            _3281 = _3575 + _3294;
                            _3282 = _3576 + _3295;
                            if (_3300 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3293 = _3280;
                                _3294 = _3281;
                                _3295 = _3282;
                                _3296 = _3283;
                                _3297 = _3284;
                                _3298 = _3285;
                                _3299 = _3300;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3285;
                        frontier_phi_77_pred_1 = _3284;
                        frontier_phi_77_pred_2 = _3283;
                        frontier_phi_77_pred_3 = _3282;
                        frontier_phi_77_pred_4 = _3281;
                        frontier_phi_77_pred_5 = _3280;
                    }
                    _2922 = frontier_phi_77_pred;
                    _2920 = frontier_phi_77_pred_1;
                    _2918 = frontier_phi_77_pred_2;
                    _2916 = frontier_phi_77_pred_3;
                    _2914 = frontier_phi_77_pred_4;
                    _2912 = frontier_phi_77_pred_5;
                    uint _3078 = _3077 + 1u;
                    if (_3078 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3071 = _2912;
                        _3072 = _2914;
                        _3073 = _2916;
                        _3074 = _2918;
                        _3075 = _2920;
                        _3076 = _2922;
                        _3077 = _3078;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2916;
                frontier_phi_58_59_ladder_1 = _2922;
                frontier_phi_58_59_ladder_2 = _2920;
                frontier_phi_58_59_ladder_3 = _2918;
                frontier_phi_58_59_ladder_4 = _2914;
                frontier_phi_58_59_ladder_5 = _2912;
            }
            else
            {
                frontier_phi_58_59_ladder = _2795;
                frontier_phi_58_59_ladder_1 = _2801;
                frontier_phi_58_59_ladder_2 = _2799;
                frontier_phi_58_59_ladder_3 = _2797;
                frontier_phi_58_59_ladder_4 = _2793;
                frontier_phi_58_59_ladder_5 = _2791;
            }
            _2911 = frontier_phi_58_59_ladder_5;
            _2913 = frontier_phi_58_59_ladder_4;
            _2915 = frontier_phi_58_59_ladder;
            _2917 = frontier_phi_58_59_ladder_3;
            _2919 = frontier_phi_58_59_ladder_2;
            _2921 = frontier_phi_58_59_ladder_1;
        }
        float _2926 = isnan(1.0) ? _938 : (isnan(_938) ? 1.0 : min(_938, 1.0));
        _2703 = (_2926 * _2917) + _2139;
        _2705 = (_2926 * _2919) + _2141;
        _2707 = (_2926 * _2921) + _2143;
        _2709 = ((_2911 * _922) * _2926) + _2484;
        _2711 = ((_2913 * _924) * _2926) + _2486;
        _2713 = ((_2915 * _925) * _2926) + _2488;
    }
    else
    {
        _2703 = _2139;
        _2705 = _2141;
        _2707 = _2143;
        _2709 = _2484;
        _2711 = _2486;
        _2713 = _2488;
    }
    float _4706 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _4717 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    float _4728 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _2730 = ((isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0))) * (_2703 + ((isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0))) * _938))) + ((_2709 + ((isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))) * _1777)) * cbPerFrame._m0[3u].x);
    float _2731 = ((isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0))) * (_2705 + ((isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0))) * _938))) + ((_2711 + ((isnan(0.0) ? _1995 : (isnan(_1995) ? 0.0 : max(_1995, 0.0))) * _1777)) * cbPerFrame._m0[3u].x);
    float _2732 = ((isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0))) * (_2707 + ((isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0))) * _938))) + ((_2713 + ((isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0))) * _1777)) * cbPerFrame._m0[3u].x);
    uint _2733 = _251 + 6u;
    float _2741 = _860 / cbSceneParam._m0[86u].x;
    float _2742 = _861 / cbSceneParam._m0[86u].y;
    vec4 _2756 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2741, _2742, (log2((isnan(cbSceneParam._m0[77u].w) ? _783 : (isnan(_783) ? cbSceneParam._m0[77u].w : min(_783, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2758 = _2756.x;
    float _2759 = _2756.y;
    float _2760 = _2756.z;
    float _2761 = _2756.w;
    float _2853;
    float _2855;
    float _2857;
    float _2859;
    if (_783 > cbSceneParam._m0[78u].w)
    {
        float _2816 = isnan(_783) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _783 : min(cbSceneParam._m0[80u].w, _783));
        float _2817 = _2816 / _783;
        float _2828 = _2817 * _833;
        float _2829 = _834 * _2817;
        float _2830 = (-0.0) - _2829;
        float _2831 = _2817 * _835;
        float _2833 = (cbSceneParam._m0[77u].w * _2830) / _2816;
        float _2834 = _2833 + cbSceneParam._m0[79u].w;
        float _2835 = cbSceneParam._m0[79u].w - _2829;
        float _2841 = sqrt(((_2828 * _2828) + (_2829 * _2829)) + (_2831 * _2831));
        float _2844 = (1.0 - (cbSceneParam._m0[77u].w / _2816)) * _2841;
        float _2849 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2851 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3028;
        if (abs((_2830 - _2833) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3028 = ((((_2834 > 0.0) ? exp2(_2849 * _2834) : (2.0 - exp2(_2851 * _2834))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2844;
        }
        else
        {
            float _2972 = 1.0 / cbSceneParam._m0[80u].x;
            float _2973 = isnan(_2835) ? _2834 : (isnan(_2834) ? _2835 : max(_2834, _2835));
            float _2974 = isnan(_2835) ? _2834 : (isnan(_2834) ? _2835 : min(_2834, _2835));
            float _2983 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : min(_2973, 0.0));
            float _2984 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : min(_2974, 0.0));
            _3028 = ((abs(_2841 / _2830) * cbSceneParam._m0[80u].y) * ((((_2983 - _2984) * 2.0) - ((exp2(_2849 * (isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0)))) - exp2(_2849 * (isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0))))) * _2972)) - ((exp2(_2851 * _2983) - exp2(_2851 * _2984)) * _2972))) + (_2844 * cbSceneParam._m0[80u].z);
        }
        vec4 _3030 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2741, _2742, 1.0), 0.0);
        float _3039 = exp2((_3028 * (-1.44269502162933349609375)) * (1.0 - _3030.w));
        float _3040 = log2(_3039);
        float _3056 = log2(_2761);
        _2853 = (exp2(_3056 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3040 * cbSceneParam._m0[78u].x)) * _3030.x) / cbSceneParam._m0[78u].x)) + _2758;
        _2855 = (exp2(_3056 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3040 * cbSceneParam._m0[78u].y)) * _3030.y) / cbSceneParam._m0[78u].y)) + _2759;
        _2857 = (exp2(_3056 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3040 * cbSceneParam._m0[78u].z)) * _3030.z) / cbSceneParam._m0[78u].z)) + _2760;
        _2859 = _3039 * _2761;
    }
    else
    {
        _2853 = _2758;
        _2855 = _2759;
        _2857 = _2760;
        _2859 = _2761;
    }
    bool _3066;
    vec4 _2869;
    vec4 _2891;
    float _2893;
    float _2897;
    float _2898;
    float _2899;
    float _2900;
    bool _2910;
    for (;;)
    {
        _2869 = cbMatDynParam._m0[0u];
        float _2871 = roundEven(_2869.y);
        bool _2872 = _2871 == 3.0;
        float _2873 = log2(_2859);
        float _2880 = exp2(_2873 * cbSceneParam._m0[78u].x) * _2730;
        float _2881 = exp2(_2873 * cbSceneParam._m0[78u].y) * _2731;
        float _2882 = exp2(_2873 * cbSceneParam._m0[78u].z) * _2732;
        float _2889 = _849 + (-0.5);
        _2891 = cbMtdParam._m0[1u];
        _2893 = _2891.y * _2889;
        float _2896 = (_2871 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2897 = _2896 * (_2872 ? _2880 : (_2880 + (cbSceneParam._m0[72u].w * _2853)));
        _2898 = _2896 * (_2872 ? _2881 : (_2881 + (cbSceneParam._m0[72u].w * _2855)));
        _2899 = _2896 * (_2872 ? _2882 : (_2882 + (cbSceneParam._m0[72u].w * _2857)));
        _2900 = _2889 * 0.999000012874603271484375;
        _2910 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2910)
        {
            if ((cbInstanceData._m0[_251 + 7u].x + _2900) < 0.5)
            {
                _3066 = true;
                break;
            }
        }
        uint _3007 = _898 + uint(_2869.w);
        if ((cbInstanceData._m0[_3007].w < 1.0) && ((cbInstanceData._m0[_3007].w + _2900) < 0.5))
        {
            _3066 = true;
            break;
        }
        if ((_2893 + 1.0) < _2891.x)
        {
            _3066 = true;
            break;
        }
        _3066 = false;
        break;
    }
    float _3271;
    if (_3066)
    {
        discard_state = true;
        _3271 = 0.0;
    }
    else
    {
        _3271 = cbInstanceData._m0[_2733].w;
    }
    SV_Target.x = _2897;
    SV_Target.y = _2898;
    SV_Target.z = _2899;
    SV_Target.w = _3271;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2733].w;
    discard_exit();
}


