#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1413;
float _3818;
float _3819;
float _3820;
float _3821;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _275 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3830 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _3841 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _3852 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _290 = _285 + 1u;
    uint _294 = _285 + 2u;
    float _303 = sqrt(((cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x) + (cbInstanceData._m0[_285].x * cbInstanceData._m0[_285].x)) + (cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x));
    float _304 = _303 * TEXCOORD.z;
    float _305 = _303 * TEXCOORD.w;
    vec4 _318 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _304) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _305) + cbTextureTilingScale._m0[13u].w));
    vec4 _342 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _347 = _342.x * cbMtdParam._m0[11u].x;
    float _348 = _342.y * cbMtdParam._m0[11u].y;
    float _349 = _342.z * cbMtdParam._m0[11u].z;
    vec4 _368 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _304) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _305) + cbTextureTilingScale._m0[5u].w));
    vec4 _404 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _406 = _404.x;
    float _418 = dot(vec4(_406, _404.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _435 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_406 - _418) * cbMtdParam._m0[24u].y) + _418) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3863 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _436 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _443 = (_436 * ((_368.x * cbMtdParam._m0[12u].x) - _347)) + _347;
    float _444 = (_436 * ((_368.y * cbMtdParam._m0[12u].y) - _348)) + _348;
    float _445 = (_436 * ((_368.z * cbMtdParam._m0[12u].z) - _349)) + _349;
    float _449 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _318.x) * _443;
    float _452 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _318.y) * _444;
    float _455 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _318.z) * _445;
    float _462 = ((_443 - _449) * (isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0)))) + _449;
    float _463 = ((_444 - _452) * (isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0)))) + _452;
    float _464 = ((_445 - _455) * (isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0)))) + _455;
    vec4 _482 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _304) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _305) + cbTextureTilingScale._m0[20u].w));
    vec4 _507 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _304) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _305) + cbTextureTilingScale._m0[4u].w));
    vec4 _524 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _526 = _524.x;
    float _527 = _524.y;
    float _528 = _524.z;
    float _537 = ((_507.z - _528) * _436) + _528;
    float _540 = ((((_507.x - _526) * _436) + _526) * 2.0) + (-1.0);
    float _541 = ((((_507.y - _527) * _436) + _527) * 2.0) + (-1.0);
    float _542 = dot(vec2(_540, _541), vec2(_540, _541));
    float _3874 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _547 = sqrt(1.0 - (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))));
    vec4 _560 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _578 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _304) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _305) + cbTextureTilingScale._m0[11u].w));
    float _580 = _578.x;
    float _581 = 1.0 - _580;
    float _587 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _590 = ((isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : min(_587, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _599 = (_590 - ((((((_580 - _581) * cbMtdParam._m0[24u].z) + _581) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _590))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3895 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _600 = isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0));
    float _607 = (_600 * (cbMtdParam._m0[17u].x - _462)) + _462;
    float _608 = (_600 * (cbMtdParam._m0[17u].y - _463)) + _463;
    float _609 = (_600 * (cbMtdParam._m0[17u].z - _464)) + _464;
    vec4 _621 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _304) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _305) + cbTextureTilingScale._m0[19u].w));
    float _623 = _621.x;
    float _624 = 1.0 - _623;
    float _649 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_623 - _624) * cbMtdParam._m0[24u].w) + _624) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3906 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _650 = isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0));
    float _658 = ((((cbMtdParam._m0[10u].x - _607) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _650) + _607;
    float _659 = ((((cbMtdParam._m0[10u].y - _608) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _650) + _608;
    float _660 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _609)) * _650) + _609;
    vec4 _672 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _686 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _688 = _686.x;
    float _706 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _304) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _305) + cbTextureTilingScale._m0[9u].w)).x - _688) * _436) + _688;
    float _710 = ((_672.x - _706) * cbMtdParam._m0[19u].z) + _706;
    float _712 = _710 - (_710 * _600);
    float _714 = _712 - (_712 * _650);
    float _719 = (((_482.z - _537) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _537;
    vec4 _733 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _304) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _305) + cbTextureTilingScale._m0[15u].w));
    float _740 = (_733.x * 2.0) + (-1.0);
    float _741 = (_733.y * 2.0) + (-1.0);
    float _742 = dot(vec2(_740, _741), vec2(_740, _741));
    float _3917 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _750 = (_600 * (_733.z - _719)) + _719;
    float _753 = ((cbMtdParam._m0[23u].y - _750) * _650) + _750;
    vec4 _772 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _304) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _305) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _778 = (_772.x * 2.0) + (-1.0);
    float _779 = (_772.y * 2.0) + (-1.0);
    float _780 = dot(vec2(_778, _779), vec2(_778, _779));
    float _3928 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _790 = _540 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_482.x * 2.0) + (-1.0)));
    float _791 = _541 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_482.y * 2.0) + (-1.0)));
    float _803 = (((_740 - _790) + (cbMtdParam._m0[21u].x * _790)) * _600) + _790;
    float _804 = (((_741 - _791) + (cbMtdParam._m0[21u].x * _791)) * _600) + _791;
    float _805 = (_600 * (sqrt(1.0 - (isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0)))) - _547)) + _547;
    float _816 = (((_778 - _803) + (_803 * cbMtdParam._m0[22u].z)) * _650) + _803;
    float _817 = (((_779 - _804) + (_804 * cbMtdParam._m0[22u].z)) * _650) + _804;
    float _818 = ((sqrt(1.0 - (isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0)))) - _805) * _650) + _805;
    float _820 = cbMtdParam._m0[22u].x + _560.w;
    float _823 = fma(_818, _253 * NORMAL.x, fma(_817, _260 * TANGENT.x, (_246 * _238) * _816));
    float _826 = fma(_818, _253 * NORMAL.y, fma(_817, _260 * TANGENT.y, (_246 * _239) * _816));
    float _829 = fma(_818, _253 * NORMAL.z, fma(_817, _260 * TANGENT.z, (_246 * _240) * _816));
    float _833 = inversesqrt(dot(vec3(_823, _826, _829), vec3(_823, _826, _829)));
    float _834 = _833 * _823;
    float _835 = _833 * _826;
    float _836 = _833 * _829;
    float _3939 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _837 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    float _3950 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _3961 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _3972 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
    float _3983 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _3994 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    float _842 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
    float _856 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _896 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _906 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _896);
    float _907 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _896);
    float _908 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _896);
    float _912 = inversesqrt(dot(vec3(_906, _907, _908), vec3(_906, _907, _908)));
    float _913 = _906 * _912;
    float _914 = _907 * _912;
    float _915 = _908 * _912;
    vec4 _920 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _922 = _920.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1094 = sqrt(((_906 * _906) + (_907 * _907)) + (_908 * _908));
        float _1100 = (cbMatDynParam._m0[5u].x * _1094) + cbMatDynParam._m0[5u].y;
        float _4005 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1101 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
        float _1105 = (cbMatDynParam._m0[5u].z * _1094) + cbMatDynParam._m0[5u].w;
        float _4016 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0))) - _1101)) + _1101) < ((_922 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _933 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _934 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _952 = fma(_836, cbSceneParam._m0[5u].z, fma(_835, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _834));
    float _955 = fma(_836, cbSceneParam._m0[6u].z, fma(_835, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _834));
    float _958 = fma(_836, cbSceneParam._m0[7u].z, fma(_835, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _834));
    uint _971 = _285 + 9u;
    uint _972 = _971 + uint(cbMatDynParam._m0[0u].w);
    float _978 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0)))) * cbInstanceData._m0[_972].x;
    float _979 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0)))) * cbInstanceData._m0[_972].y;
    float _980 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) * cbInstanceData._m0[_972].z;
    float _4027 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _981 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    float _4038 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0));
    float _4049 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _983 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
    float _984 = 1.0 - _842;
    float _985 = _981 * _984;
    float _986 = _982 * _984;
    float _987 = _983 * _984;
    float _992 = (_981 + (-0.039999999105930328369140625)) * _842;
    float _993 = (_982 + (-0.039999999105930328369140625)) * _842;
    float _994 = (_983 + (-0.039999999105930328369140625)) * _842;
    float _995 = _992 + 0.039999999105930328369140625;
    float _997 = _993 + 0.039999999105930328369140625;
    float _998 = _994 + 0.039999999105930328369140625;
    vec4 _1007 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _933, cbSceneParam._m0[86u].y * _934));
    float _1011 = ((isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0))) * TEXCOORD_5.w) * _1007.x;
    float _1012 = dot(vec3(_834, _835, _836), vec3(_913, _914, _915));
    float _1015 = _1012 * 2.0;
    float _1019 = (_1015 * _834) - _913;
    float _1020 = (_1015 * _835) - _914;
    float _1021 = (_1015 * _836) - _915;
    float _1025 = abs(dot(vec3(_913, _914, _915), vec3(_834, _835, _836)));
    float _4060 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _1027 = sqrt(_837);
    float _1040 = exp2((_1027 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1027 * 3.0));
    float _1046 = (1.0 - _1040) * ((_1027 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1047 = _1040 * _1027;
    float _1075 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1079 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1412;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1137 = fma(_1083, cbModelParam._m0[26u].z, fma(_1079, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1075));
        float _1141 = fma(_1083, cbModelParam._m0[27u].z, fma(_1079, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1075));
        float _1145 = fma(_1083, cbModelParam._m0[28u].z, fma(_1079, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1075));
        float _1170 = _1075 + _834;
        float _1171 = _1079 + _835;
        float _1172 = _1083 + _836;
        float _1182 = fma(_1172, cbModelParam._m0[26u].z, fma(_1171, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1170)) - _1137;
        float _1183 = fma(_1172, cbModelParam._m0[27u].z, fma(_1171, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1170)) - _1141;
        float _1184 = fma(_1172, cbModelParam._m0[28u].z, fma(_1171, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1170)) - _1145;
        float _1188 = inversesqrt(dot(vec3(_1182, _1183, _1184), vec3(_1182, _1183, _1184)));
        float _1201 = ((_1188 * _1182) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1137 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1202 = ((_1188 * _1183) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1141 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1203 = ((_1188 * _1184) / cbModelParam._m0[34u].z) + ((((((_1145 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1206 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1213 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1220 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        vec4 _1227 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1201, _1202, _1203), 0.0);
        float _1240 = exp2((_1206.w + (-0.5)) * 20.0) * 2.0;
        float _1241 = _1240 * (_1206.x + (-0.5));
        float _1242 = _1240 * (_1206.y + (-0.5));
        float _1243 = _1240 * (_1206.z + (-0.5));
        float _1250 = exp2((_1213.w + (-0.5)) * 20.0) * 2.0;
        float _1251 = _1250 * (_1213.x + (-0.5));
        float _1252 = _1250 * (_1213.y + (-0.5));
        float _1253 = _1250 * (_1213.z + (-0.5));
        float _1260 = exp2((_1220.w + (-0.5)) * 20.0) * 2.0;
        float _1261 = _1260 * (_1220.x + (-0.5));
        float _1262 = _1260 * (_1220.y + (-0.5));
        float _1263 = _1260 * (_1220.z + (-0.5));
        float _1270 = exp2((_1227.w + (-0.5)) * 20.0) * 2.0;
        float _1271 = _1270 * (_1227.x + (-0.5));
        float _1272 = _1270 * (_1227.y + (-0.5));
        float _1273 = _1270 * (_1227.z + (-0.5));
        float _1274 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1275 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
        float _1276 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1277 = _1241 * 0.5;
        float _1278 = _1251 * 0.5;
        float _1279 = _1261 * 0.5;
        float _1280 = dot(vec3(_1277, _1278, _1279), vec3(_1277, _1278, _1279));
        float _1285 = (_1280 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1280);
        float _1294 = (dot(vec3(_834, _835, _836), vec3(_1285 * _1277, _1285 * _1278, _1285 * _1279)) + 1.0) * 0.5;
        float _4086 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1304 = sqrt(((_1278 * _1278) + (_1277 * _1277)) + (_1279 * _1279)) / (_1274 + 9.9999997473787516355514526367188e-06);
        float _4097 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1305 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
        float _1306 = _1305 * 2.0;
        float _1310 = (1.0 - _1305) / (_1305 + 1.0);
        float _4108 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1311 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
        float _1320 = ((((1.0 - _1311) * (_1306 + 2.0)) * exp2(log2(isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0))) * (_1306 + 1.0))) + _1311) * _1274;
        float _1321 = _1242 * 0.5;
        float _1322 = _1252 * 0.5;
        float _1323 = _1262 * 0.5;
        float _1324 = dot(vec3(_1321, _1322, _1323), vec3(_1321, _1322, _1323));
        float _1329 = (_1324 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1324);
        float _1337 = (dot(vec3(_834, _835, _836), vec3(_1329 * _1321, _1329 * _1322, _1329 * _1323)) + 1.0) * 0.5;
        float _4119 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1346 = sqrt(((_1322 * _1322) + (_1321 * _1321)) + (_1323 * _1323)) / (_1275 + 9.9999997473787516355514526367188e-06);
        float _4130 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4141 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0))) * (_1348 + 1.0))) + _1353) * _1275;
        float _1363 = _1243 * 0.5;
        float _1364 = _1253 * 0.5;
        float _1365 = _1263 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_834, _835, _836), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4152 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1276 + 9.9999997473787516355514526367188e-06);
        float _4163 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4174 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0))) * (_1390 + 1.0))) + _1395) * _1276;
        _1412 = _1243;
        _1414 = _1242;
        _1415 = _1241;
        _1416 = _1253;
        _1417 = _1252;
        _1418 = _1251;
        _1419 = _1263;
        _1420 = _1262;
        _1421 = _1261;
        _1422 = _1276;
        _1423 = _1275;
        _1424 = _1274;
        _1425 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0)));
        _1426 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1427 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
    }
    else
    {
        _1412 = _1413;
        _1414 = _1413;
        _1415 = _1413;
        _1416 = _1413;
        _1417 = _1413;
        _1418 = _1413;
        _1419 = _1413;
        _1420 = _1413;
        _1421 = _1413;
        _1422 = _1413;
        _1423 = _1413;
        _1424 = _1413;
        _1425 = 0.0;
        _1426 = 0.0;
        _1427 = 0.0;
    }
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1455 = fma(_1083, cbModelParam._m0[30u].z, fma(_1079, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1075));
        float _1459 = fma(_1083, cbModelParam._m0[31u].z, fma(_1079, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1075));
        float _1463 = fma(_1083, cbModelParam._m0[32u].z, fma(_1079, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1075));
        float _1486 = _1075 + _834;
        float _1487 = _1079 + _835;
        float _1488 = _1083 + _836;
        float _1498 = fma(_1488, cbModelParam._m0[30u].z, fma(_1487, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1486)) - _1455;
        float _1499 = fma(_1488, cbModelParam._m0[31u].z, fma(_1487, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1486)) - _1459;
        float _1500 = fma(_1488, cbModelParam._m0[32u].z, fma(_1487, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1486)) - _1463;
        float _1504 = inversesqrt(dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500)));
        float _1517 = ((_1504 * _1498) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1455 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1518 = ((_1504 * _1499) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1459 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1519 = ((_1504 * _1500) / cbModelParam._m0[35u].z) + ((((((_1463 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1521 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1535 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1542 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        float _1554 = exp2((_1521.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1521.x + (-0.5));
        float _1556 = _1554 * (_1521.y + (-0.5));
        float _1557 = _1554 * (_1521.z + (-0.5));
        float _1564 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1528.x + (-0.5));
        float _1566 = _1564 * (_1528.y + (-0.5));
        float _1567 = _1564 * (_1528.z + (-0.5));
        float _1574 = exp2((_1535.w + (-0.5)) * 20.0) * 2.0;
        float _1575 = _1574 * (_1535.x + (-0.5));
        float _1576 = _1574 * (_1535.y + (-0.5));
        float _1577 = _1574 * (_1535.z + (-0.5));
        float _1584 = exp2((_1542.w + (-0.5)) * 20.0) * 2.0;
        float _1585 = _1584 * (_1542.x + (-0.5));
        float _1586 = _1584 * (_1542.y + (-0.5));
        float _1587 = _1584 * (_1542.z + (-0.5));
        float _1588 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1589 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1590 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1591 = _1555 * 0.5;
        float _1592 = _1565 * 0.5;
        float _1593 = _1575 * 0.5;
        float _1594 = dot(vec3(_1591, _1592, _1593), vec3(_1591, _1592, _1593));
        float _1599 = (_1594 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1594);
        float _1607 = (dot(vec3(_834, _835, _836), vec3(_1599 * _1591, _1599 * _1592, _1599 * _1593)) + 1.0) * 0.5;
        float _4215 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1616 = sqrt(((_1592 * _1592) + (_1591 * _1591)) + (_1593 * _1593)) / (_1588 + 9.9999997473787516355514526367188e-06);
        float _4226 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1617 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
        float _1618 = _1617 * 2.0;
        float _1622 = (1.0 - _1617) / (_1617 + 1.0);
        float _4237 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
        float _1632 = ((((1.0 - _1623) * (_1618 + 2.0)) * exp2(log2(isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0))) * (_1618 + 1.0))) + _1623) * _1588;
        float _1633 = _1556 * 0.5;
        float _1634 = _1566 * 0.5;
        float _1635 = _1576 * 0.5;
        float _1636 = dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635));
        float _1641 = (_1636 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1636);
        float _1649 = (dot(vec3(_834, _835, _836), vec3(_1641 * _1633, _1641 * _1634, _1641 * _1635)) + 1.0) * 0.5;
        float _4248 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1658 = sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635)) / (_1589 + 9.9999997473787516355514526367188e-06);
        float _4259 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _1660 = _1659 * 2.0;
        float _1664 = (1.0 - _1659) / (_1659 + 1.0);
        float _4270 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1674 = ((((1.0 - _1665) * (_1660 + 2.0)) * exp2(log2(isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0))) * (_1660 + 1.0))) + _1665) * _1589;
        float _1675 = _1557 * 0.5;
        float _1676 = _1567 * 0.5;
        float _1677 = _1577 * 0.5;
        float _1678 = dot(vec3(_1675, _1676, _1677), vec3(_1675, _1676, _1677));
        float _1683 = (_1678 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1678);
        float _1691 = (dot(vec3(_834, _835, _836), vec3(_1683 * _1675, _1683 * _1676, _1683 * _1677)) + 1.0) * 0.5;
        float _4281 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1700 = sqrt(((_1676 * _1676) + (_1675 * _1675)) + (_1677 * _1677)) / (_1590 + 9.9999997473787516355514526367188e-06);
        float _4292 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _1702 = _1701 * 2.0;
        float _1706 = (1.0 - _1701) / (_1701 + 1.0);
        float _4303 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _1716 = ((((1.0 - _1707) * (_1702 + 2.0)) * exp2(log2(isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0))) * (_1702 + 1.0))) + _1707) * _1590;
        _1724 = _1557;
        _1725 = _1556;
        _1726 = _1555;
        _1727 = _1567;
        _1728 = _1566;
        _1729 = _1565;
        _1730 = _1577;
        _1731 = _1576;
        _1732 = _1575;
        _1733 = _1590;
        _1734 = _1589;
        _1735 = _1588;
        _1736 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)));
        _1737 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)));
        _1738 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)));
    }
    else
    {
        _1724 = _1413;
        _1725 = _1413;
        _1726 = _1413;
        _1727 = _1413;
        _1728 = _1413;
        _1729 = _1413;
        _1730 = _1413;
        _1731 = _1413;
        _1732 = _1413;
        _1733 = _1413;
        _1734 = _1413;
        _1735 = _1413;
        _1736 = 0.0;
        _1737 = 0.0;
        _1738 = 0.0;
    }
    float _1748 = (cbModelParam._m0[1u].x * (_1736 - _1425)) + _1425;
    float _1749 = (cbModelParam._m0[1u].x * (_1737 - _1426)) + _1426;
    float _1750 = (cbModelParam._m0[1u].x * (_1738 - _1427)) + _1427;
    float _1771 = fma(_1750, cbSceneParam._m0[89u].z, fma(_1749, cbSceneParam._m0[89u].y, _1748 * cbSceneParam._m0[89u].x));
    float _1774 = fma(_1750, cbSceneParam._m0[90u].z, fma(_1749, cbSceneParam._m0[90u].y, _1748 * cbSceneParam._m0[90u].x));
    float _1777 = fma(_1750, cbSceneParam._m0[91u].z, fma(_1749, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1748));
    float _1792 = _1019 * 0.5;
    float _1793 = _1020 * 0.5;
    float _1794 = _1021 * 0.5;
    float _1795 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1798 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1725, _1728, _1731, _1734));
    float _1801 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1724, _1727, _1730, _1733));
    float _1835;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1808 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1412, _1416, _1419, _1422));
        float _1812 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1414, _1417, _1420, _1423));
        float _1816 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1415, _1418, _1421, _1424));
        float _1823 = dot(vec4(cbModelParam._m0[39u]), vec4(_1792, _1793, _1794, 1.0));
        _1835 = dot(vec3(isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)), isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)), isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1823) ? 0.0 : (isnan(0.0) ? _1823 : max(0.0, _1823))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1835 = 1.0;
    }
    float _1846;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1837 = dot(vec4(cbModelParam._m0[40u]), vec4(_1792, _1793, _1794, 1.0));
        _1846 = dot(vec3(isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)), isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)), isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1837) ? 0.0 : (isnan(0.0) ? _1837 : max(0.0, _1837))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1846 = 1.0;
    }
    float _1850 = (_1846 * cbModelParam._m0[1u].x) + (_1835 * (1.0 - cbModelParam._m0[1u].x));
    float _1860 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _837);
    float _1861 = isnan(_1860) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1860 : min(cbModelParam._m0[25u].z, _1860));
    float _1942;
    float _1944;
    float _1946;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1909 = fma(_1083, cbModelParam._m0[13u].z, fma(_1079, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1075)) + cbModelParam._m0[13u].w;
        float _1913 = fma(_1083, cbModelParam._m0[14u].z, fma(_1079, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1075)) + cbModelParam._m0[14u].w;
        float _1917 = fma(_1083, cbModelParam._m0[15u].z, fma(_1079, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1075)) + cbModelParam._m0[15u].w;
        float _1920 = fma(_1021, cbModelParam._m0[13u].z, fma(_1020, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1019));
        float _1923 = fma(_1021, cbModelParam._m0[14u].z, fma(_1020, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1019));
        float _1926 = fma(_1021, cbModelParam._m0[15u].z, fma(_1020, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1019));
        float _1954;
        if (_1920 > 0.0)
        {
            _1954 = abs((1.0 - _1909) / _1920);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1920 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1909 + 1.0) / _1920);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1954 = frontier_phi_17_15_ladder;
        }
        float _2178;
        if (_1923 > 0.0)
        {
            _2178 = abs((1.0 - _1913) / _1923);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1923 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1913 + 1.0) / _1923);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2178 = frontier_phi_26_22_ladder;
        }
        float _2435;
        if (_1926 > 0.0)
        {
            _2435 = abs((1.0 - _1917) / _1926);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1926 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1917 + 1.0) / _1926);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2435 = frontier_phi_38_33_ladder;
        }
        float _2437 = isnan(_2178) ? _1954 : (isnan(_1954) ? _2178 : min(_1954, _2178));
        float _2438 = isnan(_2435) ? _2437 : (isnan(_2437) ? _2435 : min(_2437, _2435));
        float _2442 = (_2438 * _1920) + _1909;
        float _2443 = (_2438 * _1923) + _1913;
        float _2444 = (_2438 * _1926) + _1917;
        float _2445 = _2438 * 9.9999997473787516355514526367188e-05;
        float _2447 = (-1.0) - _2445;
        float _2449 = _2445 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2444 > _2449) || ((_2444 < _2447) || ((_2443 > _2449) || ((_2443 < _2447) || ((_2442 < _2447) || (_2442 > _2449))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2572 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2444, cbModelParam._m0[9u].z, fma(_2443, cbModelParam._m0[9u].y, _2442 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2444, cbModelParam._m0[10u].z, fma(_2443, cbModelParam._m0[10u].y, _2442 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2444, cbModelParam._m0[11u].z, fma(_2443, cbModelParam._m0[11u].y, _2442 * cbModelParam._m0[11u].x))), _1861);
            frontier_phi_16_38_ladder = _2572.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2572.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2572.x * cbModelParam._m0[1u].y;
        }
        _1942 = frontier_phi_16_38_ladder_2;
        _1944 = frontier_phi_16_38_ladder_1;
        _1946 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1930 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1019, _1020, _1021), _1861);
        _1942 = _1930.x * cbModelParam._m0[1u].y;
        _1944 = _1930.y * cbModelParam._m0[1u].y;
        _1946 = _1930.z * cbModelParam._m0[1u].y;
    }
    float _1950 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _837);
    float _1951 = isnan(_1950) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1950 : min(cbModelParam._m0[25u].w, _1950));
    float _2041;
    float _2043;
    float _2045;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2005 = fma(_1083, cbModelParam._m0[21u].z, fma(_1079, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1075)) + cbModelParam._m0[21u].w;
        float _2009 = fma(_1083, cbModelParam._m0[22u].z, fma(_1079, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1075)) + cbModelParam._m0[22u].w;
        float _2013 = fma(_1083, cbModelParam._m0[23u].z, fma(_1079, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1075)) + cbModelParam._m0[23u].w;
        float _2016 = fma(_1021, cbModelParam._m0[21u].z, fma(_1020, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1019));
        float _2019 = fma(_1021, cbModelParam._m0[22u].z, fma(_1020, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1019));
        float _2022 = fma(_1021, cbModelParam._m0[23u].z, fma(_1020, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1019));
        float _2183;
        if (_2016 > 0.0)
        {
            _2183 = abs((1.0 - _2005) / _2016);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2016 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2005 + 1.0) / _2016);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2183 = frontier_phi_28_24_ladder;
        }
        float _2462;
        if (_2019 > 0.0)
        {
            _2462 = abs((1.0 - _2009) / _2019);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2019 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2009 + 1.0) / _2019);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2462 = frontier_phi_40_35_ladder;
        }
        float _2675;
        if (_2022 > 0.0)
        {
            _2675 = abs((1.0 - _2013) / _2022);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2022 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2013 + 1.0) / _2022);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2675 = frontier_phi_49_46_ladder;
        }
        float _2677 = isnan(_2462) ? _2183 : (isnan(_2183) ? _2462 : min(_2183, _2462));
        float _2678 = isnan(_2675) ? _2677 : (isnan(_2677) ? _2675 : min(_2677, _2675));
        float _2682 = (_2678 * _2016) + _2005;
        float _2683 = (_2678 * _2019) + _2009;
        float _2684 = (_2678 * _2022) + _2013;
        float _2685 = _2678 * 9.9999997473787516355514526367188e-05;
        float _2686 = (-1.0) - _2685;
        float _2688 = _2685 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2684 > _2688) || ((_2684 < _2686) || ((_2683 > _2688) || ((_2683 < _2686) || ((_2682 < _2686) || (_2682 > _2688))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2883 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2684, cbModelParam._m0[17u].z, fma(_2683, cbModelParam._m0[17u].y, _2682 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2684, cbModelParam._m0[18u].z, fma(_2683, cbModelParam._m0[18u].y, _2682 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2684, cbModelParam._m0[19u].z, fma(_2683, cbModelParam._m0[19u].y, _2682 * cbModelParam._m0[19u].x))), _1951);
            frontier_phi_25_49_ladder = _2883.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2883.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2883.x * cbModelParam._m0[1u].z;
        }
        _2041 = frontier_phi_25_49_ladder_2;
        _2043 = frontier_phi_25_49_ladder_1;
        _2045 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2025 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1019, _1020, _1021), _1951);
        _2041 = _2025.x * cbModelParam._m0[1u].z;
        _2043 = _2025.y * cbModelParam._m0[1u].z;
        _2045 = _2025.z * cbModelParam._m0[1u].z;
    }
    float _2058 = (((_1046 * _995) + _1047) * _1011) * ((cbModelParam._m0[1u].w * (_2041 - _1942)) + _1942);
    float _2060 = (((_1046 * _997) + _1047) * _1011) * ((cbModelParam._m0[1u].w * (_2043 - _1944)) + _1944);
    float _2062 = (((_1046 * _998) + _1047) * _1011) * ((cbModelParam._m0[1u].w * (_2045 - _1946)) + _1946);
    float _2065 = fma(_2062, cbSceneParam._m0[89u].z, fma(_2060, cbSceneParam._m0[89u].y, _2058 * cbSceneParam._m0[89u].x));
    float _2068 = fma(_2062, cbSceneParam._m0[90u].z, fma(_2060, cbSceneParam._m0[90u].y, _2058 * cbSceneParam._m0[90u].x));
    float _2071 = fma(_2062, cbSceneParam._m0[91u].z, fma(_2060, cbSceneParam._m0[91u].y, _2058 * cbSceneParam._m0[91u].x));
    vec4 _2079 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_933, _934));
    float _2081 = _2079.w;
    float _2093 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2081);
    float _2094 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2081);
    float _2095 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2081);
    uvec4 _2099 = floatBitsToUint(cbInstanceData._m0[_285 + 5u]);
    uint _2101 = _2099.x * 14u;
    uint _2102 = _2101 + 13u;
    float _2109 = _1011 + (-1.0);
    float _2114 = (cbLight._m0[_2102].x * _2109) + 1.0;
    float _2115 = (cbLight._m0[_2102].y * _2109) + 1.0;
    float _2116 = (cbLight._m0[_2102].z * _2109) + 1.0;
    float _2117 = (cbLight._m0[_2102].w * _2109) + 1.0;
    uint _2118 = _2101 + 5u;
    float _2124 = isnan(1.0) ? _2115 : (isnan(_2115) ? 1.0 : min(_2115, 1.0));
    uint _2128 = _2101 + 4u;
    float _2137 = isnan(1.0) ? _2114 : (isnan(_2114) ? 1.0 : min(_2114, 1.0));
    uint _2141 = _2101 | 1u;
    float _2152 = dot(vec3(cbLight._m0[_2101].xyz), vec3(_834, _835, _836));
    float _2155 = dot(vec3(cbLight._m0[_2141].xyz), vec3(_834, _835, _836));
    float _4439 = isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0));
    float _4450 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _2160 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * 0.3183098733425140380859375;
    float _2162 = (isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0))) * 0.3183098733425140380859375;
    float _2169 = ((cbLight._m0[_2118].x * _2124) * _2162) + (((cbLight._m0[_2128].x * _2093) * _2137) * _2160);
    float _2170 = ((_2124 * cbLight._m0[_2118].y) * _2162) + (((cbLight._m0[_2128].y * _2094) * _2137) * _2160);
    float _2171 = ((_2124 * cbLight._m0[_2118].z) * _2162) + (((cbLight._m0[_2128].z * _2095) * _2137) * _2160);
    uvec4 _2175 = floatBitsToUint(cbLight._m0[_2101 + 12u]);
    bool _2177 = _2175.x == 0u;
    float _2188;
    float _2190;
    float _2192;
    if (_2177)
    {
        _2188 = _2169;
        _2190 = _2170;
        _2192 = _2171;
    }
    else
    {
        uint _2196 = _2101 + 6u;
        float _2212 = (dot(vec3(cbLight._m0[_2101 + 2u].xyz), vec3(_834, _835, _836)) * 0.5) + 0.5;
        float _2213 = _2212 * _2212;
        float _4461 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
        float _2214 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _2215 = isnan(1.0) ? _2116 : (isnan(_2116) ? 1.0 : min(_2116, 1.0));
        _2188 = (((cbLight._m0[_2196].x * 0.3183098733425140380859375) * _2214) * _2215) + _2169;
        _2190 = (((cbLight._m0[_2196].y * 0.3183098733425140380859375) * _2214) * _2215) + _2170;
        _2192 = (((cbLight._m0[_2196].z * 0.3183098733425140380859375) * _2214) * _2215) + _2171;
    }
    bool _2195 = _2175.y == 0u;
    float _2233;
    float _2235;
    float _2237;
    if (_2195)
    {
        _2233 = _2188;
        _2235 = _2190;
        _2237 = _2192;
    }
    else
    {
        uint _2406 = _2101 + 7u;
        float _2422 = (dot(vec3(cbLight._m0[_2101 + 3u].xyz), vec3(_834, _835, _836)) * 0.5) + 0.5;
        float _2423 = _2422 * _2422;
        float _4477 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
        float _2424 = isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0));
        float _2425 = isnan(1.0) ? _2117 : (isnan(_2117) ? 1.0 : min(_2117, 1.0));
        _2233 = (((cbLight._m0[_2406].x * 0.3183098733425140380859375) * _2424) * _2425) + _2188;
        _2235 = (((cbLight._m0[_2406].y * 0.3183098733425140380859375) * _2424) * _2425) + _2190;
        _2237 = (((cbLight._m0[_2406].z * 0.3183098733425140380859375) * _2424) * _2425) + _2192;
    }
    uint _2240 = _2101 + 8u;
    float _2253 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2101].w)) * _837) * 0.949999988079071044921875);
    float _2254 = _2253 * _2253;
    float _2255 = cbLight._m0[_2101].x + _913;
    float _2256 = cbLight._m0[_2101].y + _914;
    float _2257 = cbLight._m0[_2101].z + _915;
    float _2261 = inversesqrt(dot(vec3(_2255, _2256, _2257), vec3(_2255, _2256, _2257)));
    float _2262 = _2261 * _2255;
    float _2263 = _2261 * _2256;
    float _2264 = _2261 * _2257;
    float _2265 = dot(vec3(_834, _835, _836), vec3(cbLight._m0[_2101].xyz));
    float _4493 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _2268 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _4504 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _2269 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _2270 = dot(vec3(_834, _835, _836), vec3(_2262, _2263, _2264));
    float _4515 = isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0));
    float _2273 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
    float _2274 = dot(vec3(cbLight._m0[_2101].xyz), vec3(_2262, _2263, _2264));
    float _4526 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
    float _2278 = _2254 * _2254;
    float _2282 = ((_2273 * _2273) * (_2278 + (-1.0))) + 1.0;
    float _2290 = exp2(log2(1.0 - (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0)))) * 5.0);
    float _2291 = 0.959999978542327880859375 - _992;
    float _2293 = 0.959999978542327880859375 - _993;
    float _2294 = 0.959999978542327880859375 - _994;
    float _2301 = 1.0 - _2254;
    float _2312 = (0.5 / (((_2269 * ((_2268 * _2301) + _2254)) + 9.9999999392252902907785028219223e-09) + (((_2269 * _2301) + _2254) * _2268))) * _2268;
    float _4537 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2314 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * (_2278 / ((_2282 * _2282) * 3.141590118408203125));
    uint _2328 = _2101 + 9u;
    float _2339 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2141].w)) * _837) * 0.949999988079071044921875);
    float _2340 = _2339 * _2339;
    float _2341 = cbLight._m0[_2141].x + _913;
    float _2342 = cbLight._m0[_2141].y + _914;
    float _2343 = cbLight._m0[_2141].z + _915;
    float _2347 = inversesqrt(dot(vec3(_2341, _2342, _2343), vec3(_2341, _2342, _2343)));
    float _2348 = _2347 * _2341;
    float _2349 = _2347 * _2342;
    float _2350 = _2347 * _2343;
    float _2351 = dot(vec3(_834, _835, _836), vec3(cbLight._m0[_2141].xyz));
    float _4548 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    float _2354 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _2355 = dot(vec3(_834, _835, _836), vec3(_2348, _2349, _2350));
    float _4559 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
    float _2358 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
    float _2359 = dot(vec3(cbLight._m0[_2141].xyz), vec3(_2348, _2349, _2350));
    float _4570 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
    float _2363 = _2340 * _2340;
    float _2367 = ((_2358 * _2358) * (_2363 + (-1.0))) + 1.0;
    float _2374 = exp2(log2(1.0 - (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0)))) * 5.0);
    float _2381 = 1.0 - _2340;
    float _2391 = (0.5 / (((_2269 * ((_2354 * _2381) + _2340)) + 9.9999999392252902907785028219223e-09) + (((_2269 * _2381) + _2340) * _2354))) * _2354;
    float _4581 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
    float _2393 = (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0))) * (_2363 / ((_2367 * _2367) * 3.141590118408203125));
    float _2403 = (((((_2374 * _2291) + _995) * cbLight._m0[_2328].x) * _2393) * _2124) + ((((cbLight._m0[_2240].x * _2093) * ((_2290 * _2291) + _995)) * _2314) * _2137);
    float _2404 = (((((_2374 * _2293) + _997) * cbLight._m0[_2328].y) * _2393) * _2124) + ((((cbLight._m0[_2240].y * _2094) * ((_2290 * _2293) + _997)) * _2314) * _2137);
    float _2405 = (((((_2374 * _2294) + _998) * cbLight._m0[_2328].z) * _2393) * _2124) + ((((cbLight._m0[_2240].z * _2095) * ((_2290 * _2294) + _998)) * _2314) * _2137);
    float _2467;
    float _2469;
    float _2471;
    if (_2177)
    {
        _2467 = _2403;
        _2469 = _2404;
        _2471 = _2405;
    }
    else
    {
        uint _2473 = _2101 + 2u;
        uint _2477 = _2101 + 10u;
        float _2491 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2473].w)) * _837) * 0.949999988079071044921875);
        float _2492 = _2491 * _2491;
        float _2493 = cbLight._m0[_2473].x + _913;
        float _2494 = cbLight._m0[_2473].y + _914;
        float _2495 = cbLight._m0[_2473].z + _915;
        float _2499 = inversesqrt(dot(vec3(_2493, _2494, _2495), vec3(_2493, _2494, _2495)));
        float _2500 = _2499 * _2493;
        float _2501 = _2499 * _2494;
        float _2502 = _2499 * _2495;
        float _2503 = dot(vec3(_834, _835, _836), vec3(cbLight._m0[_2473].xyz));
        float _4592 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
        float _2506 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2507 = dot(vec3(_834, _835, _836), vec3(_2500, _2501, _2502));
        float _4603 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
        float _2510 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
        float _2511 = dot(vec3(cbLight._m0[_2473].xyz), vec3(_2500, _2501, _2502));
        float _4614 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
        float _2515 = _2492 * _2492;
        float _2519 = ((_2510 * _2510) * (_2515 + (-1.0))) + 1.0;
        float _2526 = exp2(log2(1.0 - (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0)))) * 5.0);
        float _2533 = 1.0 - _2492;
        float _2543 = (0.5 / (((_2269 * ((_2506 * _2533) + _2492)) + 9.9999999392252902907785028219223e-09) + (((_2269 * _2533) + _2492) * _2506))) * _2506;
        float _4625 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
        float _2545 = (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0))) * (_2515 / ((_2519 * _2519) * 3.141590118408203125));
        float _2546 = isnan(1.0) ? _2116 : (isnan(_2116) ? 1.0 : min(_2116, 1.0));
        _2467 = (((((_2526 * _2291) + _995) * cbLight._m0[_2477].x) * _2545) * _2546) + _2403;
        _2469 = (((((_2526 * _2293) + _997) * cbLight._m0[_2477].y) * _2545) * _2546) + _2404;
        _2471 = (((((_2526 * _2294) + _998) * cbLight._m0[_2477].z) * _2545) * _2546) + _2405;
    }
    float _2581;
    float _2583;
    float _2585;
    if (_2195)
    {
        _2581 = _2467;
        _2583 = _2469;
        _2585 = _2471;
    }
    else
    {
        uint _2592 = _2101 + 3u;
        uint _2596 = _2101 + 11u;
        float _2610 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2592].w)) * _837) * 0.949999988079071044921875);
        float _2611 = _2610 * _2610;
        float _2612 = cbLight._m0[_2592].x + _913;
        float _2613 = cbLight._m0[_2592].y + _914;
        float _2614 = cbLight._m0[_2592].z + _915;
        float _2618 = inversesqrt(dot(vec3(_2612, _2613, _2614), vec3(_2612, _2613, _2614)));
        float _2619 = _2618 * _2612;
        float _2620 = _2618 * _2613;
        float _2621 = _2618 * _2614;
        float _2622 = dot(vec3(_834, _835, _836), vec3(cbLight._m0[_2592].xyz));
        float _4641 = isnan(0.0) ? _2622 : (isnan(_2622) ? 0.0 : max(_2622, 0.0));
        float _2625 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _2626 = dot(vec3(_834, _835, _836), vec3(_2619, _2620, _2621));
        float _4652 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
        float _2629 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _2630 = dot(vec3(cbLight._m0[_2592].xyz), vec3(_2619, _2620, _2621));
        float _4663 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2634 = _2611 * _2611;
        float _2638 = ((_2629 * _2629) * (_2634 + (-1.0))) + 1.0;
        float _2645 = exp2(log2(1.0 - (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0)))) * 5.0);
        float _2652 = 1.0 - _2611;
        float _2662 = (0.5 / (((_2269 * ((_2625 * _2652) + _2611)) + 9.9999999392252902907785028219223e-09) + (((_2269 * _2652) + _2611) * _2625))) * _2625;
        float _4674 = isnan(0.0) ? _2662 : (isnan(_2662) ? 0.0 : max(_2662, 0.0));
        float _2664 = (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0))) * (_2634 / ((_2638 * _2638) * 3.141590118408203125));
        float _2665 = isnan(1.0) ? _2117 : (isnan(_2117) ? 1.0 : min(_2117, 1.0));
        _2581 = (((((_2645 * _2291) + _995) * cbLight._m0[_2596].x) * _2664) * _2665) + _2467;
        _2583 = (((((_2645 * _2293) + _997) * cbLight._m0[_2596].y) * _2664) * _2665) + _2469;
        _2585 = (((((_2645 * _2294) + _998) * cbLight._m0[_2596].z) * _2664) * _2665) + _2471;
    }
    float _2800;
    float _2802;
    float _2804;
    float _2806;
    float _2808;
    float _2810;
    if (_2099.y == 0u)
    {
        float _2740 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2741 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2740;
        float _2742 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2740;
        float _2743 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2740;
        uvec4 _2755 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2756 = _2755.x;
        uint _2767 = uint((float(_2755.y) * floor(float(uint(cbSceneParam._m0[85u].y * _934) / _2756))) + floor(float(uint(cbSceneParam._m0[85u].x * _933) / _2756)));
        float _2777 = (log2(_2743 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2778 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        uint _2781 = uint(isnan(14.0) ? _2778 : (isnan(_2778) ? 14.0 : min(_2778, 14.0)));
        uvec4 _2786 = texelFetch(g_lightClusterGridBuffer, int(((_2781 << 2u) + (_2767 << 6u)) >> 2u));
        uint _2787 = _2786.x;
        uint _2788 = _2755.z;
        float _2888;
        float _2890;
        float _2892;
        float _2894;
        float _2896;
        float _2898;
        if (((((1u << ((_2788 >> 4u) & 15u)) + 4294967295u) & _2787) == 0u) || ((_2788 & 240u) == 0u))
        {
            _2888 = 0.0;
            _2890 = 0.0;
            _2892 = 0.0;
            _2894 = 0.0;
            _2896 = 0.0;
            _2898 = 0.0;
        }
        else
        {
            float _2889;
            float _2891;
            float _2893;
            float _2895;
            float _2897;
            float _2899;
            float _3041 = 0.0;
            float _3042 = 0.0;
            float _3043 = 0.0;
            float _3044 = 0.0;
            float _3045 = 0.0;
            float _3046 = 0.0;
            uint _3047 = 0u;
            uint _3056;
            bool _3057;
            for (;;)
            {
                _3056 = texelFetch(g_lightClassification, int((((_2781 << 5u) + (_2767 << 9u)) + (_3047 << 2u)) >> 2u)).x;
                _3057 = _3056 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3057)
                {
                    frontier_phi_66_pred = _3041;
                    frontier_phi_66_pred_1 = _3046;
                    frontier_phi_66_pred_2 = _3045;
                    frontier_phi_66_pred_3 = _3044;
                    frontier_phi_66_pred_4 = _3043;
                    frontier_phi_66_pred_5 = _3042;
                }
                else
                {
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    float _3191;
                    uint _3192;
                    _3186 = _3041;
                    _3187 = _3042;
                    _3188 = _3043;
                    _3189 = _3044;
                    _3190 = _3045;
                    _3191 = _3046;
                    _3192 = _3056;
                    float _3113;
                    float _3114;
                    float _3115;
                    float _3116;
                    float _3117;
                    float _3118;
                    for (;;)
                    {
                        uint _3196 = uint(findLSB(_3192)) + (_3047 << 5u);
                        uint _3193 = (_3192 + 4294967295u) & _3192;
                        uint _3198 = _3196 * 48u;
                        vec4 _3212 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3198)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 3u)).x));
                        uint _3218 = (_3196 * 48u) + 4u;
                        vec4 _3231 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3218)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 3u)).x));
                        uint _3237 = (_3196 * 48u) + 8u;
                        vec3 _3248 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3237)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 2u)).x));
                        float _3252 = _3212.x - _2741;
                        float _3253 = _3212.y - _2742;
                        float _3254 = _3212.z - _2743;
                        float _3255 = dot(vec3(_3252, _3253, _3254), vec3(_3252, _3253, _3254));
                        float _3258 = inversesqrt(_3255);
                        float _3259 = _3258 * _3252;
                        float _3260 = _3258 * _3253;
                        float _3261 = _3258 * _3254;
                        float _3262 = dot(vec3(_952, _955, _958), vec3(_3259, _3260, _3261));
                        float _3267 = 1.0 - (_3255 * _3212.w);
                        float _4700 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0));
                        float _3268 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                        float _3269 = sqrt(_3255) * _3231.w;
                        float _3272 = 1.39999997615814208984375 / (_3269 + 1.39999997615814208984375);
                        float _3273 = _3272 * _3272;
                        float _3276 = ((1.0 - _3273) * _3262) + _3273;
                        float _3279 = _3269 * _3269;
                        float _3283 = ((isnan(0.0) ? _3276 : (isnan(_3276) ? 0.0 : max(_3276, 0.0))) * _3268) / ((_3279 * 0.699999988079071044921875) + 1.0);
                        float _3287 = (-0.0) - _2741;
                        float _3288 = (-0.0) - _2742;
                        float _3289 = (-0.0) - _2743;
                        float _3293 = inversesqrt(dot(vec3(_3287, _3288, _3289), vec3(_3287, _3288, _3289)));
                        float _3294 = _3293 * _3287;
                        float _3295 = _3293 * _3288;
                        float _3296 = _3293 * _3289;
                        float _3304 = exp2(log2(1.0 / ((_3279 * 3.5) + 5.0)) * 0.25);
                        float _3305 = 1.0 - _1027;
                        float _3312 = sqrt(1.0 - ((1.0 - (_3305 * _3305)) * (1.0 - (_3304 * _3304))));
                        float _3313 = _3312 * _3312;
                        float _3314 = _3313 * _3313;
                        float _3315 = _3294 + _3259;
                        float _3316 = _3295 + _3260;
                        float _3317 = _3296 + _3261;
                        float _3321 = inversesqrt(dot(vec3(_3315, _3316, _3317), vec3(_3315, _3316, _3317)));
                        float _3325 = dot(vec3(_952, _955, _958), vec3(_3294, _3295, _3296));
                        float _4716 = isnan(0.0) ? _3325 : (isnan(_3325) ? 0.0 : max(_3325, 0.0));
                        float _3328 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3329 = dot(vec3(_952, _955, _958), vec3(_3321 * _3315, _3321 * _3316, _3321 * _3317));
                        float _4727 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                        float _3332 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                        float _3336 = ((_3332 * _3332) * (_3314 + (-1.0))) + 1.0;
                        float _3337 = _3272 * _3313;
                        float _3338 = _3337 * _3337;
                        float _3341 = ((1.0 - _3338) * _3262) + _3338;
                        float _4738 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0));
                        float _3342 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                        float _3343 = 1.0 - _3313;
                        float _3353 = (0.5 / (((_3342 * ((_3328 * _3343) + _3313)) + 9.9999999392252902907785028219223e-09) + (((_3342 * _3343) + _3313) * _3328))) * _3342;
                        float _4749 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0));
                        float _3364 = (((_3314 * 3.1415927410125732421875) * (isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0)))) / ((_3336 * _3336) * ((_3279 * 2.1991131305694580078125) + 3.141590118408203125))) * _3268;
                        _3116 = (_3283 * _3231.x) + _3189;
                        _3117 = (_3283 * _3231.y) + _3190;
                        _3118 = (_3283 * _3231.z) + _3191;
                        _3113 = (_3364 * _3248.x) + _3186;
                        _3114 = (_3364 * _3248.y) + _3187;
                        _3115 = (_3364 * _3248.z) + _3188;
                        if (_3193 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3186 = _3113;
                            _3187 = _3114;
                            _3188 = _3115;
                            _3189 = _3116;
                            _3190 = _3117;
                            _3191 = _3118;
                            _3192 = _3193;
                        }
                    }
                    frontier_phi_66_pred = _3113;
                    frontier_phi_66_pred_1 = _3118;
                    frontier_phi_66_pred_2 = _3117;
                    frontier_phi_66_pred_3 = _3116;
                    frontier_phi_66_pred_4 = _3115;
                    frontier_phi_66_pred_5 = _3114;
                }
                _2889 = frontier_phi_66_pred;
                _2899 = frontier_phi_66_pred_1;
                _2897 = frontier_phi_66_pred_2;
                _2895 = frontier_phi_66_pred_3;
                _2893 = frontier_phi_66_pred_4;
                _2891 = frontier_phi_66_pred_5;
                uint _3048 = _3047 + 1u;
                if (_3048 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3041 = _2889;
                    _3042 = _2891;
                    _3043 = _2893;
                    _3044 = _2895;
                    _3045 = _2897;
                    _3046 = _2899;
                    _3047 = _3048;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2888 = _2889;
            _2890 = _2891;
            _2892 = _2893;
            _2894 = _2895;
            _2896 = _2897;
            _2898 = _2899;
        }
        uvec4 _2902 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2903 = _2902.z;
        uint _2905 = (_2903 >> 8u) & 15u;
        float _3009;
        float _3011;
        float _3013;
        float _3015;
        float _3017;
        float _3019;
        if (((4294967295u << _2905) & _2787) == 0u)
        {
            _3009 = _2888;
            _3011 = _2890;
            _3013 = _2892;
            _3015 = _2894;
            _3017 = _2896;
            _3019 = _2898;
        }
        else
        {
            float _3034 = inversesqrt(dot(vec3(_2741, _2742, _2743), vec3(_2741, _2742, _2743)));
            float _3035 = _3034 * _2741;
            float _3036 = _3034 * _2742;
            float _3037 = _3034 * _2743;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2905 < ((_2903 >> 12u) & 15u))
            {
                float _3010;
                float _3012;
                float _3014;
                float _3016;
                float _3018;
                float _3020;
                float _3169 = _2888;
                float _3170 = _2890;
                float _3171 = _2892;
                float _3172 = _2894;
                float _3173 = _2896;
                float _3174 = _2898;
                uint _3175 = _2905;
                uint _3184;
                bool _3185;
                for (;;)
                {
                    _3184 = texelFetch(g_lightClassification, int((((_2781 << 5u) + (_2767 << 9u)) + (_3175 << 2u)) >> 2u)).x;
                    _3185 = _3184 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3185)
                    {
                        frontier_phi_77_pred = _3174;
                        frontier_phi_77_pred_1 = _3173;
                        frontier_phi_77_pred_2 = _3172;
                        frontier_phi_77_pred_3 = _3171;
                        frontier_phi_77_pred_4 = _3170;
                        frontier_phi_77_pred_5 = _3169;
                    }
                    else
                    {
                        float _3378;
                        float _3379;
                        float _3380;
                        float _3381;
                        float _3382;
                        float _3383;
                        float _3671;
                        float _3672;
                        float _3673;
                        float _3674;
                        float _3675;
                        float _3676;
                        float _3391 = _3169;
                        float _3392 = _3170;
                        float _3393 = _3171;
                        float _3394 = _3172;
                        float _3395 = _3173;
                        float _3396 = _3174;
                        uint _3397 = _3184;
                        uint _3398;
                        vec4 _3423;
                        float _3424;
                        vec4 _3439;
                        vec3 _3451;
                        vec4 _3466;
                        vec4 _3481;
                        float _3527;
                        bool _3528;
                        for (;;)
                        {
                            uint _3408 = ((_3175 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3397));
                            _3398 = (_3397 + 4294967295u) & _3397;
                            uint _3410 = _3408 * 40u;
                            _3423 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3410)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 3u)).x));
                            _3424 = _3423.w;
                            uint _3426 = (_3408 * 40u) + 4u;
                            _3439 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3426)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 3u)).x));
                            uint _3441 = (_3408 * 40u) + 8u;
                            _3451 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3441)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 2u)).x));
                            uint _3453 = (_3408 * 40u) + 16u;
                            _3466 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3453)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 3u)).x));
                            uint _3468 = (_3408 * 40u) + 20u;
                            _3481 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3468)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 3u)).x));
                            uint _3483 = (_3408 * 40u) + 24u;
                            vec4 _3496 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3483)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 3u)).x));
                            uint _3502 = (_3408 * 40u) + 28u;
                            vec4 _3515 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3502)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 3u)).x));
                            _3527 = fma(_2743, _3515.z, fma(_2742, _3515.y, _3515.x * _2741)) + _3515.w;
                            _3528 = !((fma(_2743, _3496.z, fma(_2742, _3496.y, _3496.x * _2741)) + _3496.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3528)
                            {
                                float _3555 = _3423.x - _2741;
                                float _3556 = _3423.y - _2742;
                                float _3557 = _3423.z - _2743;
                                float _3558 = dot(vec3(_3555, _3556, _3557), vec3(_3555, _3556, _3557));
                                float _3561 = inversesqrt(_3558);
                                float _3562 = _3561 * _3555;
                                float _3563 = _3561 * _3556;
                                float _3564 = _3561 * _3557;
                                float _3568 = 1.0 - (_3558 / (_3424 * _3424));
                                float _4760 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                                float _3569 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                                float _3573 = sqrt(_3558) * _3439.w;
                                float _3575 = 1.39999997615814208984375 / (_3573 + 1.39999997615814208984375);
                                float _3576 = _3575 * _3575;
                                float _3579 = ((1.0 - _3576) * dot(vec3(_3562, _3563, _3564), vec3(_952, _955, _958))) + _3576;
                                float _3582 = _3573 * _3573;
                                float _3586 = (fma(_2743, _3466.z, fma(_2742, _3466.y, _3466.x * _2741)) + _3466.w) / _3527;
                                float _3587 = (fma(_2743, _3481.z, fma(_2742, _3481.y, _3481.x * _2741)) + _3481.w) / _3527;
                                float _3591 = 1.0 - dot(vec2(_3586, _3587), vec2(_3586, _3587));
                                float _4776 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0));
                                float _3592 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3593 = _3592 * (((isnan(0.0) ? _3579 : (isnan(_3579) ? 0.0 : max(_3579, 0.0))) * _3569) / ((_3582 * 0.699999988079071044921875) + 1.0));
                                float _3605 = exp2(log2(1.0 / ((_3582 * 3.5) + 5.0)) * 0.25);
                                float _3606 = 1.0 - _1027;
                                float _3613 = sqrt(1.0 - ((1.0 - (_3606 * _3606)) * (1.0 - (_3605 * _3605))));
                                float _3614 = _3613 * _3613;
                                float _3615 = _3614 * _3614;
                                float _3616 = _3562 - _3035;
                                float _3617 = _3563 - _3036;
                                float _3618 = _3564 - _3037;
                                float _3622 = inversesqrt(dot(vec3(_3616, _3617, _3618), vec3(_3616, _3617, _3618)));
                                float _3626 = dot(vec3(_952, _955, _958), vec3((-0.0) - _3035, (-0.0) - _3036, (-0.0) - _3037));
                                float _4787 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                                float _3629 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3630 = dot(vec3(_952, _955, _958), vec3(_3622 * _3616, _3622 * _3617, _3622 * _3618));
                                float _4798 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                                float _3633 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
                                float _3637 = ((_3633 * _3633) * (_3615 + (-1.0))) + 1.0;
                                float _3638 = _3575 * _3614;
                                float _3639 = _3638 * _3638;
                                float _3645 = ((1.0 - _3639) * dot(vec3(_952, _955, _958), vec3(_3562, _3563, _3564))) + _3639;
                                float _4809 = isnan(0.0) ? _3645 : (isnan(_3645) ? 0.0 : max(_3645, 0.0));
                                float _3646 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
                                float _3647 = 1.0 - _3614;
                                float _3657 = (0.5 / (((_3646 * ((_3629 * _3647) + _3614)) + 9.9999999392252902907785028219223e-09) + (((_3646 * _3647) + _3614) * _3629))) * _3646;
                                float _4820 = isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0));
                                float _3667 = (_3592 * _3569) * (((_3615 * 3.1415927410125732421875) * (isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0)))) / ((_3637 * _3637) * ((_3582 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3593 * _3439.y;
                                frontier_phi_83_pred_1 = _3593 * _3439.x;
                                frontier_phi_83_pred_2 = _3667 * _3451.z;
                                frontier_phi_83_pred_3 = _3667 * _3451.y;
                                frontier_phi_83_pred_4 = _3667 * _3451.x;
                                frontier_phi_83_pred_5 = _3593 * _3439.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3675 = frontier_phi_83_pred;
                            _3674 = frontier_phi_83_pred_1;
                            _3673 = frontier_phi_83_pred_2;
                            _3672 = frontier_phi_83_pred_3;
                            _3671 = frontier_phi_83_pred_4;
                            _3676 = frontier_phi_83_pred_5;
                            _3381 = _3674 + _3394;
                            _3382 = _3675 + _3395;
                            _3383 = _3676 + _3396;
                            _3378 = _3671 + _3391;
                            _3379 = _3672 + _3392;
                            _3380 = _3673 + _3393;
                            if (_3398 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3391 = _3378;
                                _3392 = _3379;
                                _3393 = _3380;
                                _3394 = _3381;
                                _3395 = _3382;
                                _3396 = _3383;
                                _3397 = _3398;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3383;
                        frontier_phi_77_pred_1 = _3382;
                        frontier_phi_77_pred_2 = _3381;
                        frontier_phi_77_pred_3 = _3380;
                        frontier_phi_77_pred_4 = _3379;
                        frontier_phi_77_pred_5 = _3378;
                    }
                    _3020 = frontier_phi_77_pred;
                    _3018 = frontier_phi_77_pred_1;
                    _3016 = frontier_phi_77_pred_2;
                    _3014 = frontier_phi_77_pred_3;
                    _3012 = frontier_phi_77_pred_4;
                    _3010 = frontier_phi_77_pred_5;
                    uint _3176 = _3175 + 1u;
                    if (_3176 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3169 = _3010;
                        _3170 = _3012;
                        _3171 = _3014;
                        _3172 = _3016;
                        _3173 = _3018;
                        _3174 = _3020;
                        _3175 = _3176;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3014;
                frontier_phi_58_59_ladder_1 = _3020;
                frontier_phi_58_59_ladder_2 = _3018;
                frontier_phi_58_59_ladder_3 = _3016;
                frontier_phi_58_59_ladder_4 = _3012;
                frontier_phi_58_59_ladder_5 = _3010;
            }
            else
            {
                frontier_phi_58_59_ladder = _2892;
                frontier_phi_58_59_ladder_1 = _2898;
                frontier_phi_58_59_ladder_2 = _2896;
                frontier_phi_58_59_ladder_3 = _2894;
                frontier_phi_58_59_ladder_4 = _2890;
                frontier_phi_58_59_ladder_5 = _2888;
            }
            _3009 = frontier_phi_58_59_ladder_5;
            _3011 = frontier_phi_58_59_ladder_4;
            _3013 = frontier_phi_58_59_ladder;
            _3015 = frontier_phi_58_59_ladder_3;
            _3017 = frontier_phi_58_59_ladder_2;
            _3019 = frontier_phi_58_59_ladder_1;
        }
        float _3024 = isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0));
        _2800 = (_3024 * _3015) + _2233;
        _2802 = (_3024 * _3017) + _2235;
        _2804 = (_3024 * _3019) + _2237;
        _2806 = ((_3009 * _995) * _3024) + _2581;
        _2808 = ((_3011 * _997) * _3024) + _2583;
        _2810 = ((_3013 * _998) * _3024) + _2585;
    }
    else
    {
        _2800 = _2233;
        _2802 = _2235;
        _2804 = _2237;
        _2806 = _2581;
        _2808 = _2583;
        _2810 = _2585;
    }
    float _4836 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _4847 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _4858 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _2827 = ((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2800 + ((isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0))) * _1011))) + ((_2806 + ((isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    float _2828 = ((isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2802 + ((isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))) * _1011))) + ((_2808 + ((isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    float _2829 = ((isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0))) * (_2804 + ((isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0))) * _1011))) + ((_2810 + ((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    uint _2830 = _285 + 6u;
    float _2838 = _933 / cbSceneParam._m0[86u].x;
    float _2839 = _934 / cbSceneParam._m0[86u].y;
    vec4 _2853 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2838, _2839, (log2((isnan(cbSceneParam._m0[77u].w) ? _856 : (isnan(_856) ? cbSceneParam._m0[77u].w : min(_856, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2855 = _2853.x;
    float _2856 = _2853.y;
    float _2857 = _2853.z;
    float _2858 = _2853.w;
    float _2951;
    float _2953;
    float _2955;
    float _2957;
    if (_856 > cbSceneParam._m0[78u].w)
    {
        float _2913 = isnan(_856) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _856 : min(cbSceneParam._m0[80u].w, _856));
        float _2914 = _2913 / _856;
        float _2925 = _2914 * _906;
        float _2926 = _907 * _2914;
        float _2927 = (-0.0) - _2926;
        float _2929 = _2914 * _908;
        float _2931 = (cbSceneParam._m0[77u].w * _2927) / _2913;
        float _2932 = _2931 + cbSceneParam._m0[79u].w;
        float _2933 = cbSceneParam._m0[79u].w - _2926;
        float _2939 = sqrt(((_2925 * _2925) + (_2926 * _2926)) + (_2929 * _2929));
        float _2942 = (1.0 - (cbSceneParam._m0[77u].w / _2913)) * _2939;
        float _2947 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2949 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3126;
        if (abs((_2927 - _2931) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3126 = ((((_2932 > 0.0) ? exp2(_2947 * _2932) : (2.0 - exp2(_2949 * _2932))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2942;
        }
        else
        {
            float _3070 = 1.0 / cbSceneParam._m0[80u].x;
            float _3071 = isnan(_2933) ? _2932 : (isnan(_2932) ? _2933 : max(_2932, _2933));
            float _3072 = isnan(_2933) ? _2932 : (isnan(_2932) ? _2933 : min(_2932, _2933));
            float _3081 = isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : min(_3071, 0.0));
            float _3082 = isnan(0.0) ? _3072 : (isnan(_3072) ? 0.0 : min(_3072, 0.0));
            _3126 = ((abs(_2939 / _2927) * cbSceneParam._m0[80u].y) * ((((_3081 - _3082) * 2.0) - ((exp2(_2947 * (isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : max(_3071, 0.0)))) - exp2(_2947 * (isnan(0.0) ? _3072 : (isnan(_3072) ? 0.0 : max(_3072, 0.0))))) * _3070)) - ((exp2(_2949 * _3081) - exp2(_2949 * _3082)) * _3070))) + (_2942 * cbSceneParam._m0[80u].z);
        }
        vec4 _3128 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2838, _2839, 1.0), 0.0);
        float _3137 = exp2((_3126 * (-1.44269502162933349609375)) * (1.0 - _3128.w));
        float _3138 = log2(_3137);
        float _3154 = log2(_2858);
        _2951 = (exp2(_3154 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].x)) * _3128.x) / cbSceneParam._m0[78u].x)) + _2855;
        _2953 = (exp2(_3154 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].y)) * _3128.y) / cbSceneParam._m0[78u].y)) + _2856;
        _2955 = (exp2(_3154 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].z)) * _3128.z) / cbSceneParam._m0[78u].z)) + _2857;
        _2957 = _3137 * _2858;
    }
    else
    {
        _2951 = _2855;
        _2953 = _2856;
        _2955 = _2857;
        _2957 = _2858;
    }
    bool _3164;
    vec4 _2967;
    vec4 _2989;
    float _2991;
    float _2995;
    float _2996;
    float _2997;
    float _2998;
    bool _3008;
    for (;;)
    {
        _2967 = cbMatDynParam._m0[0u];
        float _2969 = roundEven(_2967.y);
        bool _2970 = _2969 == 3.0;
        float _2971 = log2(_2957);
        float _2978 = exp2(_2971 * cbSceneParam._m0[78u].x) * _2827;
        float _2979 = exp2(_2971 * cbSceneParam._m0[78u].y) * _2828;
        float _2980 = exp2(_2971 * cbSceneParam._m0[78u].z) * _2829;
        float _2987 = _922 + (-0.5);
        _2989 = cbMtdParam._m0[1u];
        _2991 = _2989.y * _2987;
        float _2994 = (_2969 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2995 = _2994 * (_2970 ? _2978 : (_2978 + (cbSceneParam._m0[72u].w * _2951)));
        _2996 = _2994 * (_2970 ? _2979 : (_2979 + (cbSceneParam._m0[72u].w * _2953)));
        _2997 = _2994 * (_2970 ? _2980 : (_2980 + (cbSceneParam._m0[72u].w * _2955)));
        _2998 = _2987 * 0.999000012874603271484375;
        _3008 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3008)
        {
            if ((cbInstanceData._m0[_285 + 7u].x + _2998) < 0.5)
            {
                _3164 = true;
                break;
            }
        }
        uint _3105 = _971 + uint(_2967.w);
        if ((cbInstanceData._m0[_3105].w < 1.0) && ((cbInstanceData._m0[_3105].w + _2998) < 0.5))
        {
            _3164 = true;
            break;
        }
        if ((_2991 + 1.0) < _2989.x)
        {
            _3164 = true;
            break;
        }
        _3164 = false;
        break;
    }
    float _3369;
    if (_3164)
    {
        discard_state = true;
        _3369 = 0.0;
    }
    else
    {
        _3369 = cbInstanceData._m0[_2830].w;
    }
    SV_Target.x = _2995;
    SV_Target.y = _2996;
    SV_Target.z = _2997;
    SV_Target.w = _3369;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2830].w;
    discard_exit();
}


