#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1373;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _265 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _267 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3982 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _3993 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _4004 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    uint _278 = uint(roundEven(NORMAL.w)) * 13u;
    uint _283 = _278 + 1u;
    uint _287 = _278 + 2u;
    float _296 = sqrt(((cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x) + (cbInstanceData._m0[_278].x * cbInstanceData._m0[_278].x)) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x));
    float _297 = _296 * TEXCOORD.z;
    float _298 = _296 * TEXCOORD.w;
    vec4 _311 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _297) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _298) + cbTextureTilingScale._m0[13u].w));
    vec4 _335 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _340 = _335.x * cbMtdParam._m0[11u].x;
    float _341 = _335.y * cbMtdParam._m0[11u].y;
    float _342 = _335.z * cbMtdParam._m0[11u].z;
    vec4 _361 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _297) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _298) + cbTextureTilingScale._m0[5u].w));
    vec4 _398 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _400 = _398.x;
    float _412 = dot(vec4(_400, _398.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_400 - _412) * cbMtdParam._m0[24u].y) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4015 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
    float _437 = (_430 * ((_361.x * cbMtdParam._m0[12u].x) - _340)) + _340;
    float _438 = (_430 * ((_361.y * cbMtdParam._m0[12u].y) - _341)) + _341;
    float _439 = (_430 * ((_361.z * cbMtdParam._m0[12u].z) - _342)) + _342;
    vec4 _456 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _297) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _298) + cbTextureTilingScale._m0[3u].w));
    vec4 _476 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _478 = _476.x;
    float _488 = dot(vec4(_478, _476.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _502 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_478 - _488) * cbMtdParam._m0[24u].y) + _488) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4026 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _503 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _510 = (_503 * ((_456.x * cbMtdParam._m0[13u].x) - _437)) + _437;
    float _511 = (_503 * ((_456.y * cbMtdParam._m0[13u].y) - _438)) + _438;
    float _512 = (_503 * ((_456.z * cbMtdParam._m0[13u].z) - _439)) + _439;
    float _516 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _311.x) * _510;
    float _519 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _311.y) * _511;
    float _522 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _311.z) * _512;
    float _529 = ((_510 - _516) * (isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0)))) + _516;
    float _530 = ((_511 - _519) * (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) + _519;
    float _531 = ((_512 - _522) * (isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0)))) + _522;
    vec4 _548 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _297) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _298) + cbTextureTilingScale._m0[20u].w));
    vec4 _571 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _297) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _298) + cbTextureTilingScale._m0[4u].w));
    vec4 _588 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _590 = _588.x;
    float _591 = _588.y;
    float _592 = _588.z;
    float _599 = ((_571.x - _590) * _430) + _590;
    float _600 = ((_571.y - _591) * _430) + _591;
    float _601 = ((_571.z - _592) * _430) + _592;
    vec4 _613 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _297) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _298) + cbTextureTilingScale._m0[2u].w));
    float _626 = ((_613.z - _601) * _503) + _601;
    float _629 = ((((_613.x - _599) * _503) + _599) * 2.0) + (-1.0);
    float _630 = ((((_613.y - _600) * _503) + _600) * 2.0) + (-1.0);
    float _631 = dot(vec2(_629, _630), vec2(_629, _630));
    float _4037 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _636 = sqrt(1.0 - (isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0))));
    vec4 _649 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _667 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _297) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _298) + cbTextureTilingScale._m0[11u].w));
    float _669 = _667.x;
    float _670 = 1.0 - _669;
    float _683 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_669 - _670) * cbMtdParam._m0[24u].z) + _670) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4048 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _684 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    float _691 = (_684 * (cbMtdParam._m0[17u].x - _529)) + _529;
    float _692 = (_684 * (cbMtdParam._m0[17u].y - _530)) + _530;
    float _693 = (_684 * (cbMtdParam._m0[17u].z - _531)) + _531;
    vec4 _705 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _719 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _721 = _719.x;
    float _739 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _297) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _298) + cbTextureTilingScale._m0[9u].w)).x - _721) * _430) + _721;
    float _756 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _297) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _298) + cbTextureTilingScale._m0[21u].w)).x - _739) * _503) + _739;
    float _760 = ((_705.x - _756) * cbMtdParam._m0[19u].z) + _756;
    float _762 = _760 - (_760 * _684);
    float _767 = (((_548.z - _626) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _626;
    vec4 _780 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _297) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _298) + cbTextureTilingScale._m0[15u].w));
    float _787 = (_780.x * 2.0) + (-1.0);
    float _788 = (_780.y * 2.0) + (-1.0);
    float _789 = dot(vec2(_787, _788), vec2(_787, _788));
    float _4059 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _797 = (_684 * (_780.z - _767)) + _767;
    float _802 = _629 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_548.x * 2.0) + (-1.0)));
    float _803 = _630 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_548.y * 2.0) + (-1.0)));
    float _815 = (((_787 - _802) + (cbMtdParam._m0[21u].x * _802)) * _684) + _802;
    float _816 = (((_788 - _803) + (cbMtdParam._m0[21u].x * _803)) * _684) + _803;
    float _817 = (_684 * (sqrt(1.0 - (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0)))) - _636)) + _636;
    float _819 = cbMtdParam._m0[22u].x + _649.w;
    float _822 = fma(_817, _244 * NORMAL.x, fma(_816, _251 * TANGENT.x, (_237 * _229) * _815));
    float _825 = fma(_817, _244 * NORMAL.y, fma(_816, _251 * TANGENT.y, (_237 * _230) * _815));
    float _828 = fma(_817, _244 * NORMAL.z, fma(_816, _251 * TANGENT.z, (_237 * _231) * _815));
    float _832 = inversesqrt(dot(vec3(_822, _825, _828), vec3(_822, _825, _828)));
    float _833 = _832 * _822;
    float _834 = _832 * _825;
    float _835 = _832 * _828;
    float _4070 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _836 = isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0));
    float _4081 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _4092 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _4103 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _4114 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _4125 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _841 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
    float _855 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _896 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _906 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _896);
    float _907 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _896);
    float _908 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _896);
    float _912 = inversesqrt(dot(vec3(_906, _907, _908), vec3(_906, _907, _908)));
    float _913 = _906 * _912;
    float _914 = _907 * _912;
    float _915 = _908 * _912;
    float _921 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _922 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _940 = fma(_835, cbSceneParam._m0[5u].z, fma(_834, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _833));
    float _943 = fma(_835, cbSceneParam._m0[6u].z, fma(_834, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _833));
    float _946 = fma(_835, cbSceneParam._m0[7u].z, fma(_834, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _833));
    uint _960 = (_278 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _966 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0)))) * cbInstanceData._m0[_960].x;
    float _967 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0)))) * cbInstanceData._m0[_960].y;
    float _968 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0)))) * cbInstanceData._m0[_960].z;
    float _4136 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _969 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
    float _4147 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _970 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
    float _4158 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _971 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
    float _972 = 1.0 - _841;
    float _973 = _969 * _972;
    float _974 = _970 * _972;
    float _975 = _971 * _972;
    float _980 = (_969 + (-0.039999999105930328369140625)) * _841;
    float _981 = (_970 + (-0.039999999105930328369140625)) * _841;
    float _982 = (_971 + (-0.039999999105930328369140625)) * _841;
    float _983 = _980 + 0.039999999105930328369140625;
    float _985 = _981 + 0.039999999105930328369140625;
    float _986 = _982 + 0.039999999105930328369140625;
    vec4 _995 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _921, cbSceneParam._m0[86u].y * _922));
    float _999 = ((isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0))) * TEXCOORD_5.w) * _995.x;
    float _1000 = dot(vec3(_833, _834, _835), vec3(_913, _914, _915));
    float _1003 = _1000 * 2.0;
    float _1007 = (_1003 * _833) - _913;
    float _1008 = (_1003 * _834) - _914;
    float _1009 = (_1003 * _835) - _915;
    float _1013 = abs(dot(vec3(_913, _914, _915), vec3(_833, _834, _835)));
    float _4169 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    float _1015 = sqrt(_836);
    float _1028 = exp2((_1015 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1015 * 3.0));
    float _1034 = (1.0 - _1028) * ((_1015 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1035 = _1028 * _1015;
    float _1063 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1067 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1071 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1372;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    float _1378;
    float _1379;
    float _1380;
    float _1381;
    float _1382;
    float _1383;
    float _1384;
    float _1385;
    float _1386;
    float _1387;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1097 = fma(_1071, cbModelParam._m0[26u].z, fma(_1067, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1063));
        float _1101 = fma(_1071, cbModelParam._m0[27u].z, fma(_1067, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1063));
        float _1105 = fma(_1071, cbModelParam._m0[28u].z, fma(_1067, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1063));
        float _1130 = _1063 + _833;
        float _1131 = _1067 + _834;
        float _1132 = _1071 + _835;
        float _1142 = fma(_1132, cbModelParam._m0[26u].z, fma(_1131, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1130)) - _1097;
        float _1143 = fma(_1132, cbModelParam._m0[27u].z, fma(_1131, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1130)) - _1101;
        float _1144 = fma(_1132, cbModelParam._m0[28u].z, fma(_1131, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1130)) - _1105;
        float _1148 = inversesqrt(dot(vec3(_1142, _1143, _1144), vec3(_1142, _1143, _1144)));
        float _1161 = ((_1148 * _1142) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1097 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1162 = ((_1148 * _1143) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1101 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1163 = ((_1148 * _1144) / cbModelParam._m0[34u].z) + ((((((_1105 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1166 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1161, _1162, _1163), 0.0);
        vec4 _1173 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1161, _1162, _1163), 0.0);
        vec4 _1180 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1161, _1162, _1163), 0.0);
        vec4 _1187 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1161, _1162, _1163), 0.0);
        float _1200 = exp2((_1166.w + (-0.5)) * 20.0) * 2.0;
        float _1201 = _1200 * (_1166.x + (-0.5));
        float _1202 = _1200 * (_1166.y + (-0.5));
        float _1203 = _1200 * (_1166.z + (-0.5));
        float _1210 = exp2((_1173.w + (-0.5)) * 20.0) * 2.0;
        float _1211 = _1210 * (_1173.x + (-0.5));
        float _1212 = _1210 * (_1173.y + (-0.5));
        float _1213 = _1210 * (_1173.z + (-0.5));
        float _1220 = exp2((_1180.w + (-0.5)) * 20.0) * 2.0;
        float _1221 = _1220 * (_1180.x + (-0.5));
        float _1222 = _1220 * (_1180.y + (-0.5));
        float _1223 = _1220 * (_1180.z + (-0.5));
        float _1230 = exp2((_1187.w + (-0.5)) * 20.0) * 2.0;
        float _1231 = _1230 * (_1187.x + (-0.5));
        float _1232 = _1230 * (_1187.y + (-0.5));
        float _1233 = _1230 * (_1187.z + (-0.5));
        float _1234 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1235 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1236 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1237 = _1201 * 0.5;
        float _1238 = _1211 * 0.5;
        float _1239 = _1221 * 0.5;
        float _1240 = dot(vec3(_1237, _1238, _1239), vec3(_1237, _1238, _1239));
        float _1245 = (_1240 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1240);
        float _1254 = (dot(vec3(_833, _834, _835), vec3(_1245 * _1237, _1245 * _1238, _1245 * _1239)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1264 = sqrt(((_1238 * _1238) + (_1237 * _1237)) + (_1239 * _1239)) / (_1234 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1265 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1266 = _1265 * 2.0;
        float _1270 = (1.0 - _1265) / (_1265 + 1.0);
        float _4217 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1280 = ((((1.0 - _1271) * (_1266 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1266 + 1.0))) + _1271) * _1234;
        float _1281 = _1202 * 0.5;
        float _1282 = _1212 * 0.5;
        float _1283 = _1222 * 0.5;
        float _1284 = dot(vec3(_1281, _1282, _1283), vec3(_1281, _1282, _1283));
        float _1289 = (_1284 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1284);
        float _1297 = (dot(vec3(_833, _834, _835), vec3(_1289 * _1281, _1289 * _1282, _1289 * _1283)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1306 = sqrt(((_1282 * _1282) + (_1281 * _1281)) + (_1283 * _1283)) / (_1235 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1307 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1308 = _1307 * 2.0;
        float _1312 = (1.0 - _1307) / (_1307 + 1.0);
        float _4250 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1322 = ((((1.0 - _1313) * (_1308 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1308 + 1.0))) + _1313) * _1235;
        float _1323 = _1203 * 0.5;
        float _1324 = _1213 * 0.5;
        float _1325 = _1223 * 0.5;
        float _1326 = dot(vec3(_1323, _1324, _1325), vec3(_1323, _1324, _1325));
        float _1331 = (_1326 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1326);
        float _1339 = (dot(vec3(_833, _834, _835), vec3(_1331 * _1323, _1331 * _1324, _1331 * _1325)) + 1.0) * 0.5;
        float _4261 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1348 = sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325)) / (_1236 + 9.9999997473787516355514526367188e-06);
        float _4272 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0));
        float _1350 = _1349 * 2.0;
        float _1354 = (1.0 - _1349) / (_1349 + 1.0);
        float _4283 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1364 = ((((1.0 - _1355) * (_1350 + 2.0)) * exp2(log2(isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0))) * (_1350 + 1.0))) + _1355) * _1236;
        _1372 = _1203;
        _1374 = _1202;
        _1375 = _1201;
        _1376 = _1213;
        _1377 = _1212;
        _1378 = _1211;
        _1379 = _1223;
        _1380 = _1222;
        _1381 = _1221;
        _1382 = _1236;
        _1383 = _1235;
        _1384 = _1234;
        _1385 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0)));
        _1386 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0)));
        _1387 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0)));
    }
    else
    {
        _1372 = _1373;
        _1374 = _1373;
        _1375 = _1373;
        _1376 = _1373;
        _1377 = _1373;
        _1378 = _1373;
        _1379 = _1373;
        _1380 = _1373;
        _1381 = _1373;
        _1382 = _1373;
        _1383 = _1373;
        _1384 = _1373;
        _1385 = 0.0;
        _1386 = 0.0;
        _1387 = 0.0;
    }
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    float _1692;
    float _1693;
    float _1694;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1411 = fma(_1071, cbModelParam._m0[30u].z, fma(_1067, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1063));
        float _1415 = fma(_1071, cbModelParam._m0[31u].z, fma(_1067, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1063));
        float _1419 = fma(_1071, cbModelParam._m0[32u].z, fma(_1067, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1063));
        float _1442 = _1063 + _833;
        float _1443 = _1067 + _834;
        float _1444 = _1071 + _835;
        float _1454 = fma(_1444, cbModelParam._m0[30u].z, fma(_1443, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1442)) - _1411;
        float _1455 = fma(_1444, cbModelParam._m0[31u].z, fma(_1443, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1442)) - _1415;
        float _1456 = fma(_1444, cbModelParam._m0[32u].z, fma(_1443, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1442)) - _1419;
        float _1460 = inversesqrt(dot(vec3(_1454, _1455, _1456), vec3(_1454, _1455, _1456)));
        float _1473 = ((_1460 * _1454) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1411 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1474 = ((_1460 * _1455) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1415 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1475 = ((_1460 * _1456) / cbModelParam._m0[35u].z) + ((((((_1419 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1477 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1473, _1474, _1475), 0.0);
        vec4 _1484 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1473, _1474, _1475), 0.0);
        vec4 _1491 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1473, _1474, _1475), 0.0);
        vec4 _1498 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1473, _1474, _1475), 0.0);
        float _1510 = exp2((_1477.w + (-0.5)) * 20.0) * 2.0;
        float _1511 = _1510 * (_1477.x + (-0.5));
        float _1512 = _1510 * (_1477.y + (-0.5));
        float _1513 = _1510 * (_1477.z + (-0.5));
        float _1520 = exp2((_1484.w + (-0.5)) * 20.0) * 2.0;
        float _1521 = _1520 * (_1484.x + (-0.5));
        float _1522 = _1520 * (_1484.y + (-0.5));
        float _1523 = _1520 * (_1484.z + (-0.5));
        float _1530 = exp2((_1491.w + (-0.5)) * 20.0) * 2.0;
        float _1531 = _1530 * (_1491.x + (-0.5));
        float _1532 = _1530 * (_1491.y + (-0.5));
        float _1533 = _1530 * (_1491.z + (-0.5));
        float _1540 = exp2((_1498.w + (-0.5)) * 20.0) * 2.0;
        float _1541 = _1540 * (_1498.x + (-0.5));
        float _1542 = _1540 * (_1498.y + (-0.5));
        float _1543 = _1540 * (_1498.z + (-0.5));
        float _1544 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1545 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1546 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1547 = _1511 * 0.5;
        float _1548 = _1521 * 0.5;
        float _1549 = _1531 * 0.5;
        float _1550 = dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549));
        float _1555 = (_1550 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1550);
        float _1563 = (dot(vec3(_833, _834, _835), vec3(_1555 * _1547, _1555 * _1548, _1555 * _1549)) + 1.0) * 0.5;
        float _4324 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1572 = sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549)) / (_1544 + 9.9999997473787516355514526367188e-06);
        float _4335 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1574 = _1573 * 2.0;
        float _1578 = (1.0 - _1573) / (_1573 + 1.0);
        float _4346 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1588 = ((((1.0 - _1579) * (_1574 + 2.0)) * exp2(log2(isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_1574 + 1.0))) + _1579) * _1544;
        float _1589 = _1512 * 0.5;
        float _1590 = _1522 * 0.5;
        float _1591 = _1532 * 0.5;
        float _1592 = dot(vec3(_1589, _1590, _1591), vec3(_1589, _1590, _1591));
        float _1597 = (_1592 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1592);
        float _1605 = (dot(vec3(_833, _834, _835), vec3(_1597 * _1589, _1597 * _1590, _1597 * _1591)) + 1.0) * 0.5;
        float _4357 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
        float _1614 = sqrt(((_1590 * _1590) + (_1589 * _1589)) + (_1591 * _1591)) / (_1545 + 9.9999997473787516355514526367188e-06);
        float _4368 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1615 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _1616 = _1615 * 2.0;
        float _1620 = (1.0 - _1615) / (_1615 + 1.0);
        float _4379 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1621 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1630 = ((((1.0 - _1621) * (_1616 + 2.0)) * exp2(log2(isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (_1616 + 1.0))) + _1621) * _1545;
        float _1631 = _1513 * 0.5;
        float _1632 = _1523 * 0.5;
        float _1633 = _1533 * 0.5;
        float _1634 = dot(vec3(_1631, _1632, _1633), vec3(_1631, _1632, _1633));
        float _1639 = (_1634 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1634);
        float _1647 = (dot(vec3(_833, _834, _835), vec3(_1639 * _1631, _1639 * _1632, _1639 * _1633)) + 1.0) * 0.5;
        float _4390 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1656 = sqrt(((_1632 * _1632) + (_1631 * _1631)) + (_1633 * _1633)) / (_1546 + 9.9999997473787516355514526367188e-06);
        float _4401 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
        float _1657 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _1658 = _1657 * 2.0;
        float _1662 = (1.0 - _1657) / (_1657 + 1.0);
        float _4412 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1663 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1672 = ((((1.0 - _1663) * (_1658 + 2.0)) * exp2(log2(isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_1658 + 1.0))) + _1663) * _1546;
        _1680 = _1513;
        _1681 = _1512;
        _1682 = _1511;
        _1683 = _1523;
        _1684 = _1522;
        _1685 = _1521;
        _1686 = _1533;
        _1687 = _1532;
        _1688 = _1531;
        _1689 = _1546;
        _1690 = _1545;
        _1691 = _1544;
        _1692 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)));
        _1693 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)));
        _1694 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)));
    }
    else
    {
        _1680 = _1373;
        _1681 = _1373;
        _1682 = _1373;
        _1683 = _1373;
        _1684 = _1373;
        _1685 = _1373;
        _1686 = _1373;
        _1687 = _1373;
        _1688 = _1373;
        _1689 = _1373;
        _1690 = _1373;
        _1691 = _1373;
        _1692 = 0.0;
        _1693 = 0.0;
        _1694 = 0.0;
    }
    float _1704 = (cbModelParam._m0[1u].x * (_1692 - _1385)) + _1385;
    float _1705 = (cbModelParam._m0[1u].x * (_1693 - _1386)) + _1386;
    float _1706 = (cbModelParam._m0[1u].x * (_1694 - _1387)) + _1387;
    float _1727 = fma(_1706, cbSceneParam._m0[89u].z, fma(_1705, cbSceneParam._m0[89u].y, _1704 * cbSceneParam._m0[89u].x));
    float _1730 = fma(_1706, cbSceneParam._m0[90u].z, fma(_1705, cbSceneParam._m0[90u].y, _1704 * cbSceneParam._m0[90u].x));
    float _1733 = fma(_1706, cbSceneParam._m0[91u].z, fma(_1705, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1704));
    float _1748 = _1007 * 0.5;
    float _1749 = _1008 * 0.5;
    float _1750 = _1009 * 0.5;
    float _1751 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1682, _1685, _1688, _1691));
    float _1754 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1681, _1684, _1687, _1690));
    float _1757 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1680, _1683, _1686, _1689));
    float _1791;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1764 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1372, _1376, _1379, _1382));
        float _1768 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1374, _1377, _1380, _1383));
        float _1772 = dot(vec4(_1748, _1749, _1750, 1.0), vec4(_1375, _1378, _1381, _1384));
        float _1779 = dot(vec4(cbModelParam._m0[39u]), vec4(_1748, _1749, _1750, 1.0));
        _1791 = dot(vec3(isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)), isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)), isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1779) ? 0.0 : (isnan(0.0) ? _1779 : max(0.0, _1779))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1791 = 1.0;
    }
    float _1802;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1793 = dot(vec4(cbModelParam._m0[40u]), vec4(_1748, _1749, _1750, 1.0));
        _1802 = dot(vec3(isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0)), isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0)), isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1793) ? 0.0 : (isnan(0.0) ? _1793 : max(0.0, _1793))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1802 = 1.0;
    }
    float _1806 = (_1802 * cbModelParam._m0[1u].x) + (_1791 * (1.0 - cbModelParam._m0[1u].x));
    float _1816 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _836);
    float _1817 = isnan(_1816) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1816 : min(cbModelParam._m0[25u].z, _1816));
    float _1898;
    float _1900;
    float _1902;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1865 = fma(_1071, cbModelParam._m0[13u].z, fma(_1067, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1063)) + cbModelParam._m0[13u].w;
        float _1869 = fma(_1071, cbModelParam._m0[14u].z, fma(_1067, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1063)) + cbModelParam._m0[14u].w;
        float _1873 = fma(_1071, cbModelParam._m0[15u].z, fma(_1067, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1063)) + cbModelParam._m0[15u].w;
        float _1876 = fma(_1009, cbModelParam._m0[13u].z, fma(_1008, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1007));
        float _1879 = fma(_1009, cbModelParam._m0[14u].z, fma(_1008, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1007));
        float _1882 = fma(_1009, cbModelParam._m0[15u].z, fma(_1008, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1007));
        float _1910;
        if (_1876 > 0.0)
        {
            _1910 = abs((1.0 - _1865) / _1876);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1876 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1865 + 1.0) / _1876);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1910 = frontier_phi_14_12_ladder;
        }
        float _2082;
        if (_1879 > 0.0)
        {
            _2082 = abs((1.0 - _1869) / _1879);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1879 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1869 + 1.0) / _1879);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2082 = frontier_phi_23_19_ladder;
        }
        float _2377;
        if (_1882 > 0.0)
        {
            _2377 = abs((1.0 - _1873) / _1882);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1882 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1873 + 1.0) / _1882);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2377 = frontier_phi_35_30_ladder;
        }
        float _2379 = isnan(_2082) ? _1910 : (isnan(_1910) ? _2082 : min(_1910, _2082));
        float _2380 = isnan(_2377) ? _2379 : (isnan(_2379) ? _2377 : min(_2379, _2377));
        float _2384 = (_2380 * _1876) + _1865;
        float _2385 = (_2380 * _1879) + _1869;
        float _2386 = (_2380 * _1882) + _1873;
        float _2387 = _2380 * 9.9999997473787516355514526367188e-05;
        float _2389 = (-1.0) - _2387;
        float _2391 = _2387 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2386 > _2391) || ((_2386 < _2389) || ((_2385 > _2391) || ((_2385 < _2389) || ((_2384 < _2389) || (_2384 > _2391))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2531 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2386, cbModelParam._m0[9u].z, fma(_2385, cbModelParam._m0[9u].y, _2384 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2386, cbModelParam._m0[10u].z, fma(_2385, cbModelParam._m0[10u].y, _2384 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2386, cbModelParam._m0[11u].z, fma(_2385, cbModelParam._m0[11u].y, _2384 * cbModelParam._m0[11u].x))), _1817);
            frontier_phi_13_35_ladder = _2531.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2531.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2531.x * cbModelParam._m0[1u].y;
        }
        _1898 = frontier_phi_13_35_ladder_2;
        _1900 = frontier_phi_13_35_ladder_1;
        _1902 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1886 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1007, _1008, _1009), _1817);
        _1898 = _1886.x * cbModelParam._m0[1u].y;
        _1900 = _1886.y * cbModelParam._m0[1u].y;
        _1902 = _1886.z * cbModelParam._m0[1u].y;
    }
    float _1906 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _836);
    float _1907 = isnan(_1906) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1906 : min(cbModelParam._m0[25u].w, _1906));
    float _1997;
    float _1999;
    float _2001;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1961 = fma(_1071, cbModelParam._m0[21u].z, fma(_1067, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1063)) + cbModelParam._m0[21u].w;
        float _1965 = fma(_1071, cbModelParam._m0[22u].z, fma(_1067, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1063)) + cbModelParam._m0[22u].w;
        float _1969 = fma(_1071, cbModelParam._m0[23u].z, fma(_1067, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1063)) + cbModelParam._m0[23u].w;
        float _1972 = fma(_1009, cbModelParam._m0[21u].z, fma(_1008, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1007));
        float _1975 = fma(_1009, cbModelParam._m0[22u].z, fma(_1008, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1007));
        float _1978 = fma(_1009, cbModelParam._m0[23u].z, fma(_1008, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1007));
        float _2087;
        if (_1972 > 0.0)
        {
            _2087 = abs((1.0 - _1961) / _1972);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1961 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2087 = frontier_phi_25_21_ladder;
        }
        float _2404;
        if (_1975 > 0.0)
        {
            _2404 = abs((1.0 - _1965) / _1975);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1965 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2404 = frontier_phi_37_32_ladder;
        }
        float _2742;
        if (_1978 > 0.0)
        {
            _2742 = abs((1.0 - _1969) / _1978);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1978 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1969 + 1.0) / _1978);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2742 = frontier_phi_47_44_ladder;
        }
        float _2744 = isnan(_2404) ? _2087 : (isnan(_2087) ? _2404 : min(_2087, _2404));
        float _2745 = isnan(_2742) ? _2744 : (isnan(_2744) ? _2742 : min(_2744, _2742));
        float _2749 = (_2745 * _1972) + _1961;
        float _2750 = (_2745 * _1975) + _1965;
        float _2751 = (_2745 * _1978) + _1969;
        float _2752 = _2745 * 9.9999997473787516355514526367188e-05;
        float _2753 = (-1.0) - _2752;
        float _2755 = _2752 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2751 > _2755) || ((_2751 < _2753) || ((_2750 > _2755) || ((_2750 < _2753) || ((_2749 < _2753) || (_2749 > _2755))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2873 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2751, cbModelParam._m0[17u].z, fma(_2750, cbModelParam._m0[17u].y, _2749 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2751, cbModelParam._m0[18u].z, fma(_2750, cbModelParam._m0[18u].y, _2749 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2751, cbModelParam._m0[19u].z, fma(_2750, cbModelParam._m0[19u].y, _2749 * cbModelParam._m0[19u].x))), _1907);
            frontier_phi_22_47_ladder = _2873.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2873.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2873.x * cbModelParam._m0[1u].z;
        }
        _1997 = frontier_phi_22_47_ladder_2;
        _1999 = frontier_phi_22_47_ladder_1;
        _2001 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1981 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1007, _1008, _1009), _1907);
        _1997 = _1981.x * cbModelParam._m0[1u].z;
        _1999 = _1981.y * cbModelParam._m0[1u].z;
        _2001 = _1981.z * cbModelParam._m0[1u].z;
    }
    float _2014 = (((_1034 * _983) + _1035) * _999) * ((cbModelParam._m0[1u].w * (_1997 - _1898)) + _1898);
    float _2016 = (((_1034 * _985) + _1035) * _999) * ((cbModelParam._m0[1u].w * (_1999 - _1900)) + _1900);
    float _2018 = (((_1034 * _986) + _1035) * _999) * ((cbModelParam._m0[1u].w * (_2001 - _1902)) + _1902);
    float _2021 = fma(_2018, cbSceneParam._m0[89u].z, fma(_2016, cbSceneParam._m0[89u].y, _2014 * cbSceneParam._m0[89u].x));
    float _2024 = fma(_2018, cbSceneParam._m0[90u].z, fma(_2016, cbSceneParam._m0[90u].y, _2014 * cbSceneParam._m0[90u].x));
    float _2027 = fma(_2018, cbSceneParam._m0[91u].z, fma(_2016, cbSceneParam._m0[91u].y, _2014 * cbSceneParam._m0[91u].x));
    float _2061 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2065 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2069 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2073 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2074 = _2061 / _2073;
    float _2075 = _2065 / _2073;
    float _2076 = _2069 / _2073;
    float _2223;
    float _2224;
    float _2225;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2103 = ((uint(_2076 > cbSceneParam._m0[59u].y) + uint(_2076 > cbSceneParam._m0[59u].x)) + uint(_2076 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2104 = _2103 + 43u;
        uint _2112 = _2103 + 44u;
        uint _2120 = _2103 + 45u;
        uint _2128 = _2103 + 46u;
        float _2139 = fma(_2073, cbSceneParam._m0[_2104].w, fma(_2069, cbSceneParam._m0[_2104].z, fma(_2065, cbSceneParam._m0[_2104].y, _2061 * cbSceneParam._m0[_2104].x)));
        float _2143 = fma(_2073, cbSceneParam._m0[_2112].w, fma(_2069, cbSceneParam._m0[_2112].z, fma(_2065, cbSceneParam._m0[_2112].y, _2061 * cbSceneParam._m0[_2112].x)));
        float _2151 = fma(_2073, cbSceneParam._m0[_2128].w, fma(_2069, cbSceneParam._m0[_2128].z, fma(_2065, cbSceneParam._m0[_2128].y, _2061 * cbSceneParam._m0[_2128].x)));
        float _2156 = cbSceneParam._m0[33u].z * _2151;
        float _2158 = cbSceneParam._m0[33u].w * _2151;
        float _2161 = fma(_2073, cbSceneParam._m0[_2120].w, fma(_2069, cbSceneParam._m0[_2120].z, fma(_2065, cbSceneParam._m0[_2120].y, _2061 * cbSceneParam._m0[_2120].x))) / _2151;
        float _2209 = (cbSceneParam._m0[33u].x - sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076))) * cbSceneParam._m0[33u].y;
        float _4538 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
        float _2216 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2156 + _2139) / _2151, (_2158 + _2143) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2158 + _2139) / _2151, (_2143 - _2156) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2139 - _2156) / _2151, (_2143 - _2158) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2139 - _2158) / _2151, (_2156 + _2143) / _2151), _2161), 0.0)).x), vec4(0.25)));
        _2223 = 1.0 - (_2216 * cbSceneParam._m0[34u].x);
        _2224 = 1.0 - (_2216 * cbSceneParam._m0[34u].y);
        _2225 = 1.0 - (_2216 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2223 = 1.0;
        _2224 = 1.0;
        _2225 = 1.0;
    }
    float _2289;
    float _2291;
    float _2293;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2277 = fma(_2073, cbSceneParam._m0[63u].w, fma(_2069, cbSceneParam._m0[63u].z, fma(_2065, cbSceneParam._m0[63u].y, _2061 * cbSceneParam._m0[63u].x)));
        float _2278 = fma(_2073, cbSceneParam._m0[60u].w, fma(_2069, cbSceneParam._m0[60u].z, fma(_2065, cbSceneParam._m0[60u].y, _2061 * cbSceneParam._m0[60u].x))) / _2277;
        float _2279 = fma(_2073, cbSceneParam._m0[61u].w, fma(_2069, cbSceneParam._m0[61u].z, fma(_2065, cbSceneParam._m0[61u].y, _2061 * cbSceneParam._m0[61u].x))) / _2277;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2278 >= cbSceneParam._m0[64u].x) && (_2279 >= cbSceneParam._m0[64u].y)) && (_2278 <= cbSceneParam._m0[64u].z)) && (_2279 <= cbSceneParam._m0[64u].w))
        {
            float _2417 = fma(_2073, cbSceneParam._m0[62u].w, fma(_2069, cbSceneParam._m0[62u].z, fma(_2065, cbSceneParam._m0[62u].y, _2061 * cbSceneParam._m0[62u].x))) / _2277;
            float _2421 = isnan(cbSceneParam._m0[41u].w) ? _2417 : (isnan(_2417) ? cbSceneParam._m0[41u].w : max(_2417, cbSceneParam._m0[41u].w));
            float _2464 = (cbSceneParam._m0[33u].x - sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076))) * cbSceneParam._m0[33u].y;
            float _4554 = isnan(0.0) ? _2464 : (isnan(_2464) ? 0.0 : max(_2464, 0.0));
            float _2471 = (isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2278, cbSceneParam._m0[33u].w + _2279), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2278, _2279 - cbSceneParam._m0[33u].z), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2278 - cbSceneParam._m0[33u].z, _2279 - cbSceneParam._m0[33u].w), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2278 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2279), _2421), 0.0)).x), vec4(0.25)));
            float _2475 = 1.0 - (_2471 * cbSceneParam._m0[34u].x);
            float _2476 = 1.0 - (_2471 * cbSceneParam._m0[34u].y);
            float _2477 = 1.0 - (_2471 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2477) ? _2225 : (isnan(_2225) ? _2477 : min(_2225, _2477));
            frontier_phi_34_33_ladder_1 = isnan(_2476) ? _2224 : (isnan(_2224) ? _2476 : min(_2224, _2476));
            frontier_phi_34_33_ladder_2 = isnan(_2475) ? _2223 : (isnan(_2223) ? _2475 : min(_2223, _2475));
        }
        else
        {
            frontier_phi_34_33_ladder = _2225;
            frontier_phi_34_33_ladder_1 = _2224;
            frontier_phi_34_33_ladder_2 = _2223;
        }
        _2289 = frontier_phi_34_33_ladder_2;
        _2291 = frontier_phi_34_33_ladder_1;
        _2293 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2289 = _2223;
        _2291 = _2224;
        _2293 = _2225;
    }
    uvec4 _2298 = floatBitsToUint(cbInstanceData._m0[_278 + 5u]);
    uint _2300 = _2298.x * 14u;
    uint _2301 = _2300 + 13u;
    float _2308 = _999 + (-1.0);
    float _2313 = (cbLight._m0[_2301].x * _2308) + 1.0;
    float _2314 = (cbLight._m0[_2301].y * _2308) + 1.0;
    float _2315 = (cbLight._m0[_2301].z * _2308) + 1.0;
    float _2316 = (cbLight._m0[_2301].w * _2308) + 1.0;
    uint _2317 = _2300 + 5u;
    float _2323 = isnan(1.0) ? _2314 : (isnan(_2314) ? 1.0 : min(_2314, 1.0));
    uint _2327 = _2300 + 4u;
    float _2336 = isnan(1.0) ? _2313 : (isnan(_2313) ? 1.0 : min(_2313, 1.0));
    uint _2340 = _2300 | 1u;
    float _2351 = dot(vec3(cbLight._m0[_2300].xyz), vec3(_833, _834, _835));
    float _2354 = dot(vec3(cbLight._m0[_2340].xyz), vec3(_833, _834, _835));
    float _4590 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    float _4601 = isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0));
    float _2359 = (isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0))) * 0.3183098733425140380859375;
    float _2361 = (isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0))) * 0.3183098733425140380859375;
    float _2368 = ((cbLight._m0[_2317].x * _2323) * _2361) + (((cbLight._m0[_2327].x * _2289) * _2336) * _2359);
    float _2369 = ((_2323 * cbLight._m0[_2317].y) * _2361) + (((cbLight._m0[_2327].y * _2291) * _2336) * _2359);
    float _2370 = ((_2323 * cbLight._m0[_2317].z) * _2361) + (((cbLight._m0[_2327].z * _2293) * _2336) * _2359);
    uvec4 _2374 = floatBitsToUint(cbLight._m0[_2300 + 12u]);
    bool _2376 = _2374.x == 0u;
    float _2478;
    float _2480;
    float _2482;
    if (_2376)
    {
        _2478 = _2368;
        _2480 = _2369;
        _2482 = _2370;
    }
    else
    {
        uint _2486 = _2300 + 6u;
        float _2502 = (dot(vec3(cbLight._m0[_2300 + 2u].xyz), vec3(_833, _834, _835)) * 0.5) + 0.5;
        float _2503 = _2502 * _2502;
        float _4612 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
        float _2504 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
        float _2505 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
        _2478 = (((cbLight._m0[_2486].x * 0.3183098733425140380859375) * _2504) * _2505) + _2368;
        _2480 = (((cbLight._m0[_2486].y * 0.3183098733425140380859375) * _2504) * _2505) + _2369;
        _2482 = (((cbLight._m0[_2486].z * 0.3183098733425140380859375) * _2504) * _2505) + _2370;
    }
    bool _2485 = _2374.y == 0u;
    float _2540;
    float _2542;
    float _2544;
    if (_2485)
    {
        _2540 = _2478;
        _2542 = _2480;
        _2544 = _2482;
    }
    else
    {
        uint _2713 = _2300 + 7u;
        float _2729 = (dot(vec3(cbLight._m0[_2300 + 3u].xyz), vec3(_833, _834, _835)) * 0.5) + 0.5;
        float _2730 = _2729 * _2729;
        float _4628 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
        float _2731 = isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0));
        float _2732 = isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0));
        _2540 = (((cbLight._m0[_2713].x * 0.3183098733425140380859375) * _2731) * _2732) + _2478;
        _2542 = (((cbLight._m0[_2713].y * 0.3183098733425140380859375) * _2731) * _2732) + _2480;
        _2544 = (((cbLight._m0[_2713].z * 0.3183098733425140380859375) * _2731) * _2732) + _2482;
    }
    uint _2547 = _2300 + 8u;
    float _2560 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2300].w)) * _836) * 0.949999988079071044921875);
    float _2561 = _2560 * _2560;
    float _2562 = cbLight._m0[_2300].x + _913;
    float _2563 = cbLight._m0[_2300].y + _914;
    float _2564 = cbLight._m0[_2300].z + _915;
    float _2568 = inversesqrt(dot(vec3(_2562, _2563, _2564), vec3(_2562, _2563, _2564)));
    float _2569 = _2568 * _2562;
    float _2570 = _2568 * _2563;
    float _2571 = _2568 * _2564;
    float _2572 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2300].xyz));
    float _4644 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
    float _4655 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _2576 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
    float _2577 = dot(vec3(_833, _834, _835), vec3(_2569, _2570, _2571));
    float _4666 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
    float _2580 = isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0));
    float _2581 = dot(vec3(cbLight._m0[_2300].xyz), vec3(_2569, _2570, _2571));
    float _4677 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
    float _2585 = _2561 * _2561;
    float _2589 = ((_2580 * _2580) * (_2585 + (-1.0))) + 1.0;
    float _2597 = exp2(log2(1.0 - (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0)))) * 5.0);
    float _2598 = 0.959999978542327880859375 - _980;
    float _2600 = 0.959999978542327880859375 - _981;
    float _2601 = 0.959999978542327880859375 - _982;
    float _2608 = 1.0 - _2561;
    float _2619 = (0.5 / (((_2576 * ((_2575 * _2608) + _2561)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2608) + _2561) * _2575))) * _2575;
    float _4688 = isnan(0.0) ? _2619 : (isnan(_2619) ? 0.0 : max(_2619, 0.0));
    float _2621 = (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0))) * (_2585 / ((_2589 * _2589) * 3.141590118408203125));
    uint _2635 = _2300 + 9u;
    float _2646 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2340].w)) * _836) * 0.949999988079071044921875);
    float _2647 = _2646 * _2646;
    float _2648 = cbLight._m0[_2340].x + _913;
    float _2649 = cbLight._m0[_2340].y + _914;
    float _2650 = cbLight._m0[_2340].z + _915;
    float _2654 = inversesqrt(dot(vec3(_2648, _2649, _2650), vec3(_2648, _2649, _2650)));
    float _2655 = _2654 * _2648;
    float _2656 = _2654 * _2649;
    float _2657 = _2654 * _2650;
    float _2658 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2340].xyz));
    float _4699 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
    float _2661 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
    float _2662 = dot(vec3(_833, _834, _835), vec3(_2655, _2656, _2657));
    float _4710 = isnan(0.0) ? _2662 : (isnan(_2662) ? 0.0 : max(_2662, 0.0));
    float _2665 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
    float _2666 = dot(vec3(cbLight._m0[_2340].xyz), vec3(_2655, _2656, _2657));
    float _4721 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
    float _2670 = _2647 * _2647;
    float _2674 = ((_2665 * _2665) * (_2670 + (-1.0))) + 1.0;
    float _2681 = exp2(log2(1.0 - (isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0)))) * 5.0);
    float _2688 = 1.0 - _2647;
    float _2698 = (0.5 / (((_2576 * ((_2661 * _2688) + _2647)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2688) + _2647) * _2661))) * _2661;
    float _4732 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2700 = (isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0))) * (_2670 / ((_2674 * _2674) * 3.141590118408203125));
    float _2710 = (((((_2681 * _2598) + _983) * cbLight._m0[_2635].x) * _2700) * _2323) + ((((cbLight._m0[_2547].x * _2289) * ((_2597 * _2598) + _983)) * _2621) * _2336);
    float _2711 = (((((_2681 * _2600) + _985) * cbLight._m0[_2635].y) * _2700) * _2323) + ((((cbLight._m0[_2547].y * _2291) * ((_2597 * _2600) + _985)) * _2621) * _2336);
    float _2712 = (((((_2681 * _2601) + _986) * cbLight._m0[_2635].z) * _2700) * _2323) + ((((cbLight._m0[_2547].z * _2293) * ((_2597 * _2601) + _986)) * _2621) * _2336);
    float _2768;
    float _2770;
    float _2772;
    if (_2376)
    {
        _2768 = _2710;
        _2770 = _2711;
        _2772 = _2712;
    }
    else
    {
        uint _2774 = _2300 + 2u;
        uint _2778 = _2300 + 10u;
        float _2792 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2774].w)) * _836) * 0.949999988079071044921875);
        float _2793 = _2792 * _2792;
        float _2794 = cbLight._m0[_2774].x + _913;
        float _2795 = cbLight._m0[_2774].y + _914;
        float _2796 = cbLight._m0[_2774].z + _915;
        float _2800 = inversesqrt(dot(vec3(_2794, _2795, _2796), vec3(_2794, _2795, _2796)));
        float _2801 = _2800 * _2794;
        float _2802 = _2800 * _2795;
        float _2803 = _2800 * _2796;
        float _2804 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2774].xyz));
        float _4743 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2807 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
        float _2808 = dot(vec3(_833, _834, _835), vec3(_2801, _2802, _2803));
        float _4754 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2811 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
        float _2812 = dot(vec3(cbLight._m0[_2774].xyz), vec3(_2801, _2802, _2803));
        float _4765 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0));
        float _2816 = _2793 * _2793;
        float _2820 = ((_2811 * _2811) * (_2816 + (-1.0))) + 1.0;
        float _2827 = exp2(log2(1.0 - (isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0)))) * 5.0);
        float _2834 = 1.0 - _2793;
        float _2844 = (0.5 / (((_2576 * ((_2807 * _2834) + _2793)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2834) + _2793) * _2807))) * _2807;
        float _4776 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
        float _2846 = (isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0))) * (_2816 / ((_2820 * _2820) * 3.141590118408203125));
        float _2847 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
        _2768 = (((((_2827 * _2598) + _983) * cbLight._m0[_2778].x) * _2846) * _2847) + _2710;
        _2770 = (((((_2827 * _2600) + _985) * cbLight._m0[_2778].y) * _2846) * _2847) + _2711;
        _2772 = (((((_2827 * _2601) + _986) * cbLight._m0[_2778].z) * _2846) * _2847) + _2712;
    }
    float _2878;
    float _2880;
    float _2882;
    if (_2485)
    {
        _2878 = _2768;
        _2880 = _2770;
        _2882 = _2772;
    }
    else
    {
        uint _2889 = _2300 + 3u;
        uint _2893 = _2300 + 11u;
        float _2907 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2889].w)) * _836) * 0.949999988079071044921875);
        float _2908 = _2907 * _2907;
        float _2909 = cbLight._m0[_2889].x + _913;
        float _2910 = cbLight._m0[_2889].y + _914;
        float _2911 = cbLight._m0[_2889].z + _915;
        float _2915 = inversesqrt(dot(vec3(_2909, _2910, _2911), vec3(_2909, _2910, _2911)));
        float _2916 = _2915 * _2909;
        float _2917 = _2915 * _2910;
        float _2918 = _2915 * _2911;
        float _2919 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2889].xyz));
        float _4792 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
        float _2922 = isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0));
        float _2923 = dot(vec3(_833, _834, _835), vec3(_2916, _2917, _2918));
        float _4803 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
        float _2926 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
        float _2927 = dot(vec3(cbLight._m0[_2889].xyz), vec3(_2916, _2917, _2918));
        float _4814 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
        float _2931 = _2908 * _2908;
        float _2935 = ((_2926 * _2926) * (_2931 + (-1.0))) + 1.0;
        float _2942 = exp2(log2(1.0 - (isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0)))) * 5.0);
        float _2949 = 1.0 - _2908;
        float _2959 = (0.5 / (((_2576 * ((_2922 * _2949) + _2908)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2949) + _2908) * _2922))) * _2922;
        float _4825 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0));
        float _2961 = (isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2931 / ((_2935 * _2935) * 3.141590118408203125));
        float _2962 = isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0));
        _2878 = (((((_2942 * _2598) + _983) * cbLight._m0[_2893].x) * _2961) * _2962) + _2768;
        _2880 = (((((_2942 * _2600) + _985) * cbLight._m0[_2893].y) * _2961) * _2962) + _2770;
        _2882 = (((((_2942 * _2601) + _986) * cbLight._m0[_2893].z) * _2961) * _2962) + _2772;
    }
    float _3028;
    float _3030;
    float _3032;
    float _3034;
    float _3036;
    float _3038;
    if (_2298.y == 0u)
    {
        uvec4 _2983 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2984 = _2983.x;
        uint _2995 = uint((float(_2983.y) * floor(float(uint(cbSceneParam._m0[85u].y * _922) / _2984))) + floor(float(uint(cbSceneParam._m0[85u].x * _921) / _2984)));
        float _3005 = (log2(_2076 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3006 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        uint _3009 = uint(isnan(14.0) ? _3006 : (isnan(_3006) ? 14.0 : min(_3006, 14.0)));
        uvec4 _3014 = texelFetch(g_lightClusterGridBuffer, int(((_3009 << 2u) + (_2995 << 6u)) >> 2u));
        uint _3015 = _3014.x;
        uint _3016 = _2983.z;
        float _3095;
        float _3097;
        float _3099;
        float _3101;
        float _3103;
        float _3105;
        if (((((1u << ((_3016 >> 4u) & 15u)) + 4294967295u) & _3015) == 0u) || ((_3016 & 240u) == 0u))
        {
            _3095 = 0.0;
            _3097 = 0.0;
            _3099 = 0.0;
            _3101 = 0.0;
            _3103 = 0.0;
            _3105 = 0.0;
        }
        else
        {
            float _3096;
            float _3098;
            float _3100;
            float _3102;
            float _3104;
            float _3106;
            float _3240 = 0.0;
            float _3241 = 0.0;
            float _3242 = 0.0;
            float _3243 = 0.0;
            float _3244 = 0.0;
            float _3245 = 0.0;
            uint _3246 = 0u;
            uint _3255;
            bool _3256;
            for (;;)
            {
                _3255 = texelFetch(g_lightClassification, int((((_3009 << 5u) + (_2995 << 9u)) + (_3246 << 2u)) >> 2u)).x;
                _3256 = _3255 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3256)
                {
                    frontier_phi_66_pred = _3245;
                    frontier_phi_66_pred_1 = _3244;
                    frontier_phi_66_pred_2 = _3243;
                    frontier_phi_66_pred_3 = _3242;
                    frontier_phi_66_pred_4 = _3241;
                    frontier_phi_66_pred_5 = _3240;
                }
                else
                {
                    float _3364;
                    float _3365;
                    float _3366;
                    float _3367;
                    float _3368;
                    float _3369;
                    uint _3370;
                    _3364 = _3240;
                    _3365 = _3241;
                    _3366 = _3242;
                    _3367 = _3243;
                    _3368 = _3244;
                    _3369 = _3245;
                    _3370 = _3255;
                    float _3296;
                    float _3297;
                    float _3298;
                    float _3299;
                    float _3300;
                    float _3301;
                    for (;;)
                    {
                        uint _3374 = uint(findLSB(_3370)) + (_3246 << 5u);
                        uint _3371 = (_3370 + 4294967295u) & _3370;
                        uint _3376 = _3374 * 48u;
                        vec4 _3390 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3376)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 3u)).x));
                        uint _3396 = (_3374 * 48u) + 4u;
                        vec4 _3409 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3396)).x, texelFetch(g_PointLightRenderingBuffer, int(_3396 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3396 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3396 + 3u)).x));
                        uint _3415 = (_3374 * 48u) + 8u;
                        vec3 _3426 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3415)).x, texelFetch(g_PointLightRenderingBuffer, int(_3415 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3415 + 2u)).x));
                        float _3430 = _3390.x - _2074;
                        float _3431 = _3390.y - _2075;
                        float _3432 = _3390.z - _2076;
                        float _3433 = dot(vec3(_3430, _3431, _3432), vec3(_3430, _3431, _3432));
                        float _3436 = inversesqrt(_3433);
                        float _3437 = _3436 * _3430;
                        float _3438 = _3436 * _3431;
                        float _3439 = _3436 * _3432;
                        float _3440 = dot(vec3(_940, _943, _946), vec3(_3437, _3438, _3439));
                        float _3445 = 1.0 - (_3433 * _3390.w);
                        float _4851 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0));
                        float _3446 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
                        float _3447 = sqrt(_3433) * _3409.w;
                        float _3450 = 1.39999997615814208984375 / (_3447 + 1.39999997615814208984375);
                        float _3451 = _3450 * _3450;
                        float _3454 = ((1.0 - _3451) * _3440) + _3451;
                        float _3457 = _3447 * _3447;
                        float _3461 = ((isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0))) * _3446) / ((_3457 * 0.699999988079071044921875) + 1.0);
                        float _3465 = (-0.0) - _2074;
                        float _3466 = (-0.0) - _2075;
                        float _3467 = (-0.0) - _2076;
                        float _3471 = inversesqrt(dot(vec3(_3465, _3466, _3467), vec3(_3465, _3466, _3467)));
                        float _3472 = _3471 * _3465;
                        float _3473 = _3471 * _3466;
                        float _3474 = _3471 * _3467;
                        float _3481 = exp2(log2(1.0 / ((_3457 * 3.5) + 5.0)) * 0.25);
                        float _3482 = 1.0 - _1015;
                        float _3489 = sqrt(1.0 - ((1.0 - (_3482 * _3482)) * (1.0 - (_3481 * _3481))));
                        float _3490 = _3489 * _3489;
                        float _3491 = _3490 * _3490;
                        float _3492 = _3472 + _3437;
                        float _3493 = _3473 + _3438;
                        float _3494 = _3474 + _3439;
                        float _3498 = inversesqrt(dot(vec3(_3492, _3493, _3494), vec3(_3492, _3493, _3494)));
                        float _3502 = dot(vec3(_940, _943, _946), vec3(_3472, _3473, _3474));
                        float _4867 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0));
                        float _3505 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
                        float _3506 = dot(vec3(_940, _943, _946), vec3(_3498 * _3492, _3498 * _3493, _3498 * _3494));
                        float _4878 = isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0));
                        float _3509 = isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0));
                        float _3513 = ((_3509 * _3509) * (_3491 + (-1.0))) + 1.0;
                        float _3514 = _3450 * _3490;
                        float _3515 = _3514 * _3514;
                        float _3518 = ((1.0 - _3515) * _3440) + _3515;
                        float _4889 = isnan(0.0) ? _3518 : (isnan(_3518) ? 0.0 : max(_3518, 0.0));
                        float _3519 = isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0));
                        float _3520 = 1.0 - _3490;
                        float _3530 = (0.5 / (((_3519 * ((_3505 * _3520) + _3490)) + 9.9999999392252902907785028219223e-09) + (((_3519 * _3520) + _3490) * _3505))) * _3519;
                        float _4900 = isnan(0.0) ? _3530 : (isnan(_3530) ? 0.0 : max(_3530, 0.0));
                        float _3541 = (((_3491 * 3.1415927410125732421875) * (isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0)))) / ((_3513 * _3513) * ((_3457 * 2.1991131305694580078125) + 3.141590118408203125))) * _3446;
                        _3299 = (_3461 * _3409.x) + _3367;
                        _3300 = (_3461 * _3409.y) + _3368;
                        _3301 = (_3461 * _3409.z) + _3369;
                        _3296 = (_3541 * _3426.x) + _3364;
                        _3297 = (_3541 * _3426.y) + _3365;
                        _3298 = (_3541 * _3426.z) + _3366;
                        if (_3371 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3364 = _3296;
                            _3365 = _3297;
                            _3366 = _3298;
                            _3367 = _3299;
                            _3368 = _3300;
                            _3369 = _3301;
                            _3370 = _3371;
                        }
                    }
                    frontier_phi_66_pred = _3301;
                    frontier_phi_66_pred_1 = _3300;
                    frontier_phi_66_pred_2 = _3299;
                    frontier_phi_66_pred_3 = _3298;
                    frontier_phi_66_pred_4 = _3297;
                    frontier_phi_66_pred_5 = _3296;
                }
                _3106 = frontier_phi_66_pred;
                _3104 = frontier_phi_66_pred_1;
                _3102 = frontier_phi_66_pred_2;
                _3100 = frontier_phi_66_pred_3;
                _3098 = frontier_phi_66_pred_4;
                _3096 = frontier_phi_66_pred_5;
                uint _3247 = _3246 + 1u;
                if (_3247 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3240 = _3096;
                    _3241 = _3098;
                    _3242 = _3100;
                    _3243 = _3102;
                    _3244 = _3104;
                    _3245 = _3106;
                    _3246 = _3247;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3095 = _3096;
            _3097 = _3098;
            _3099 = _3100;
            _3101 = _3102;
            _3103 = _3104;
            _3105 = _3106;
        }
        uvec4 _3109 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3110 = _3109.z;
        uint _3112 = (_3110 >> 8u) & 15u;
        float _3208;
        float _3210;
        float _3212;
        float _3214;
        float _3216;
        float _3218;
        if (((4294967295u << _3112) & _3015) == 0u)
        {
            _3208 = _3095;
            _3210 = _3097;
            _3212 = _3099;
            _3214 = _3101;
            _3216 = _3103;
            _3218 = _3105;
        }
        else
        {
            float _3233 = inversesqrt(dot(vec3(_2074, _2075, _2076), vec3(_2074, _2075, _2076)));
            float _3234 = _3233 * _2074;
            float _3235 = _3233 * _2075;
            float _3236 = _3233 * _2076;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3112 < ((_3110 >> 12u) & 15u))
            {
                float _3209;
                float _3211;
                float _3213;
                float _3215;
                float _3217;
                float _3219;
                float _3347 = _3095;
                float _3348 = _3097;
                float _3349 = _3099;
                float _3350 = _3101;
                float _3351 = _3103;
                float _3352 = _3105;
                uint _3353 = _3112;
                uint _3362;
                bool _3363;
                for (;;)
                {
                    _3362 = texelFetch(g_lightClassification, int((((_3009 << 5u) + (_2995 << 9u)) + (_3353 << 2u)) >> 2u)).x;
                    _3363 = _3362 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3363)
                    {
                        frontier_phi_72_pred = _3352;
                        frontier_phi_72_pred_1 = _3351;
                        frontier_phi_72_pred_2 = _3350;
                        frontier_phi_72_pred_3 = _3349;
                        frontier_phi_72_pred_4 = _3348;
                        frontier_phi_72_pred_5 = _3347;
                    }
                    else
                    {
                        float _3546;
                        float _3547;
                        float _3548;
                        float _3549;
                        float _3550;
                        float _3551;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3842;
                        float _3843;
                        float _3844;
                        float _3559 = _3347;
                        float _3560 = _3348;
                        float _3561 = _3349;
                        float _3562 = _3350;
                        float _3563 = _3351;
                        float _3564 = _3352;
                        uint _3565 = _3362;
                        uint _3566;
                        vec4 _3591;
                        float _3592;
                        vec4 _3607;
                        vec3 _3619;
                        vec4 _3634;
                        vec4 _3649;
                        float _3695;
                        bool _3696;
                        for (;;)
                        {
                            uint _3576 = ((_3353 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3565));
                            _3566 = (_3565 + 4294967295u) & _3565;
                            uint _3578 = _3576 * 40u;
                            _3591 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3578)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 3u)).x));
                            _3592 = _3591.w;
                            uint _3594 = (_3576 * 40u) + 4u;
                            _3607 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3594)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 3u)).x));
                            uint _3609 = (_3576 * 40u) + 8u;
                            _3619 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3609)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 2u)).x));
                            uint _3621 = (_3576 * 40u) + 16u;
                            _3634 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3621)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 3u)).x));
                            uint _3636 = (_3576 * 40u) + 20u;
                            _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            uint _3651 = (_3576 * 40u) + 24u;
                            vec4 _3664 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3651)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 3u)).x));
                            uint _3670 = (_3576 * 40u) + 28u;
                            vec4 _3683 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3670)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 3u)).x));
                            _3695 = fma(_2076, _3683.z, fma(_2075, _3683.y, _3683.x * _2074)) + _3683.w;
                            _3696 = !((fma(_2076, _3664.z, fma(_2075, _3664.y, _3664.x * _2074)) + _3664.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3696)
                            {
                                float _3723 = _3591.x - _2074;
                                float _3724 = _3591.y - _2075;
                                float _3725 = _3591.z - _2076;
                                float _3726 = dot(vec3(_3723, _3724, _3725), vec3(_3723, _3724, _3725));
                                float _3729 = inversesqrt(_3726);
                                float _3730 = _3729 * _3723;
                                float _3731 = _3729 * _3724;
                                float _3732 = _3729 * _3725;
                                float _3736 = 1.0 - (_3726 / (_3592 * _3592));
                                float _4911 = isnan(0.0) ? _3736 : (isnan(_3736) ? 0.0 : max(_3736, 0.0));
                                float _3737 = isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0));
                                float _3741 = sqrt(_3726) * _3607.w;
                                float _3743 = 1.39999997615814208984375 / (_3741 + 1.39999997615814208984375);
                                float _3744 = _3743 * _3743;
                                float _3747 = ((1.0 - _3744) * dot(vec3(_3730, _3731, _3732), vec3(_940, _943, _946))) + _3744;
                                float _3750 = _3741 * _3741;
                                float _3754 = (fma(_2076, _3634.z, fma(_2075, _3634.y, _3634.x * _2074)) + _3634.w) / _3695;
                                float _3755 = (fma(_2076, _3649.z, fma(_2075, _3649.y, _3649.x * _2074)) + _3649.w) / _3695;
                                float _3759 = 1.0 - dot(vec2(_3754, _3755), vec2(_3754, _3755));
                                float _4927 = isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : max(_3759, 0.0));
                                float _3760 = isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0));
                                float _3761 = _3760 * (((isnan(0.0) ? _3747 : (isnan(_3747) ? 0.0 : max(_3747, 0.0))) * _3737) / ((_3750 * 0.699999988079071044921875) + 1.0));
                                float _3773 = exp2(log2(1.0 / ((_3750 * 3.5) + 5.0)) * 0.25);
                                float _3774 = 1.0 - _1015;
                                float _3781 = sqrt(1.0 - ((1.0 - (_3774 * _3774)) * (1.0 - (_3773 * _3773))));
                                float _3782 = _3781 * _3781;
                                float _3783 = _3782 * _3782;
                                float _3784 = _3730 - _3234;
                                float _3785 = _3731 - _3235;
                                float _3786 = _3732 - _3236;
                                float _3790 = inversesqrt(dot(vec3(_3784, _3785, _3786), vec3(_3784, _3785, _3786)));
                                float _3794 = dot(vec3(_940, _943, _946), vec3((-0.0) - _3234, (-0.0) - _3235, (-0.0) - _3236));
                                float _4938 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                                float _3797 = isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0));
                                float _3798 = dot(vec3(_940, _943, _946), vec3(_3790 * _3784, _3790 * _3785, _3790 * _3786));
                                float _4949 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                                float _3801 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
                                float _3805 = ((_3801 * _3801) * (_3783 + (-1.0))) + 1.0;
                                float _3806 = _3743 * _3782;
                                float _3807 = _3806 * _3806;
                                float _3813 = ((1.0 - _3807) * dot(vec3(_940, _943, _946), vec3(_3730, _3731, _3732))) + _3807;
                                float _4960 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3814 = isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0));
                                float _3815 = 1.0 - _3782;
                                float _3825 = (0.5 / (((_3814 * ((_3797 * _3815) + _3782)) + 9.9999999392252902907785028219223e-09) + (((_3814 * _3815) + _3782) * _3797))) * _3814;
                                float _4971 = isnan(0.0) ? _3825 : (isnan(_3825) ? 0.0 : max(_3825, 0.0));
                                float _3835 = (_3760 * _3737) * (((_3783 * 3.1415927410125732421875) * (isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0)))) / ((_3805 * _3805) * ((_3750 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3761 * _3607.y;
                                frontier_phi_78_pred_1 = _3761 * _3607.x;
                                frontier_phi_78_pred_2 = _3835 * _3619.z;
                                frontier_phi_78_pred_3 = _3835 * _3619.y;
                                frontier_phi_78_pred_4 = _3835 * _3619.x;
                                frontier_phi_78_pred_5 = _3761 * _3607.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3843 = frontier_phi_78_pred;
                            _3842 = frontier_phi_78_pred_1;
                            _3841 = frontier_phi_78_pred_2;
                            _3840 = frontier_phi_78_pred_3;
                            _3839 = frontier_phi_78_pred_4;
                            _3844 = frontier_phi_78_pred_5;
                            _3549 = _3842 + _3562;
                            _3550 = _3843 + _3563;
                            _3551 = _3844 + _3564;
                            _3546 = _3839 + _3559;
                            _3547 = _3840 + _3560;
                            _3548 = _3841 + _3561;
                            if (_3566 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3559 = _3546;
                                _3560 = _3547;
                                _3561 = _3548;
                                _3562 = _3549;
                                _3563 = _3550;
                                _3564 = _3551;
                                _3565 = _3566;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3551;
                        frontier_phi_72_pred_1 = _3550;
                        frontier_phi_72_pred_2 = _3549;
                        frontier_phi_72_pred_3 = _3548;
                        frontier_phi_72_pred_4 = _3547;
                        frontier_phi_72_pred_5 = _3546;
                    }
                    _3219 = frontier_phi_72_pred;
                    _3217 = frontier_phi_72_pred_1;
                    _3215 = frontier_phi_72_pred_2;
                    _3213 = frontier_phi_72_pred_3;
                    _3211 = frontier_phi_72_pred_4;
                    _3209 = frontier_phi_72_pred_5;
                    uint _3354 = _3353 + 1u;
                    if (_3354 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3347 = _3209;
                        _3348 = _3211;
                        _3349 = _3213;
                        _3350 = _3215;
                        _3351 = _3217;
                        _3352 = _3219;
                        _3353 = _3354;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3219;
                frontier_phi_60_61_ladder_1 = _3217;
                frontier_phi_60_61_ladder_2 = _3213;
                frontier_phi_60_61_ladder_3 = _3211;
                frontier_phi_60_61_ladder_4 = _3209;
                frontier_phi_60_61_ladder_5 = _3215;
            }
            else
            {
                frontier_phi_60_61_ladder = _3105;
                frontier_phi_60_61_ladder_1 = _3103;
                frontier_phi_60_61_ladder_2 = _3099;
                frontier_phi_60_61_ladder_3 = _3097;
                frontier_phi_60_61_ladder_4 = _3095;
                frontier_phi_60_61_ladder_5 = _3101;
            }
            _3208 = frontier_phi_60_61_ladder_4;
            _3210 = frontier_phi_60_61_ladder_3;
            _3212 = frontier_phi_60_61_ladder_2;
            _3214 = frontier_phi_60_61_ladder_5;
            _3216 = frontier_phi_60_61_ladder_1;
            _3218 = frontier_phi_60_61_ladder;
        }
        float _3223 = isnan(1.0) ? _999 : (isnan(_999) ? 1.0 : min(_999, 1.0));
        _3028 = (_3223 * _3214) + _2540;
        _3030 = (_3223 * _3216) + _2542;
        _3032 = (_3223 * _3218) + _2544;
        _3034 = ((_3208 * _983) * _3223) + _2878;
        _3036 = ((_3210 * _985) * _3223) + _2880;
        _3038 = ((_3212 * _986) * _3223) + _2882;
    }
    else
    {
        _3028 = _2540;
        _3030 = _2542;
        _3032 = _2544;
        _3034 = _2878;
        _3036 = _2880;
        _3038 = _2882;
    }
    float _4987 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _4998 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _5009 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    uint _3058 = _278 + 6u;
    float _3066 = _921 / cbSceneParam._m0[86u].x;
    float _3067 = _922 / cbSceneParam._m0[86u].y;
    vec4 _3081 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3066, _3067, (log2((isnan(cbSceneParam._m0[77u].w) ? _855 : (isnan(_855) ? cbSceneParam._m0[77u].w : min(_855, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3083 = _3081.x;
    float _3084 = _3081.y;
    float _3085 = _3081.z;
    float _3086 = _3081.w;
    float _3158;
    float _3160;
    float _3162;
    float _3164;
    if (_855 > cbSceneParam._m0[78u].w)
    {
        float _3120 = isnan(_855) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _855 : min(cbSceneParam._m0[80u].w, _855));
        float _3121 = _3120 / _855;
        float _3132 = _3121 * _906;
        float _3133 = _907 * _3121;
        float _3134 = (-0.0) - _3133;
        float _3136 = _3121 * _908;
        float _3138 = (cbSceneParam._m0[77u].w * _3134) / _3120;
        float _3139 = _3138 + cbSceneParam._m0[79u].w;
        float _3140 = cbSceneParam._m0[79u].w - _3133;
        float _3146 = sqrt(((_3132 * _3132) + (_3133 * _3133)) + (_3136 * _3136));
        float _3149 = (1.0 - (cbSceneParam._m0[77u].w / _3120)) * _3146;
        float _3154 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3156 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3309;
        if (abs((_3134 - _3138) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3309 = ((((_3139 > 0.0) ? exp2(_3154 * _3139) : (2.0 - exp2(_3156 * _3139))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3149;
        }
        else
        {
            float _3269 = 1.0 / cbSceneParam._m0[80u].x;
            float _3270 = isnan(_3140) ? _3139 : (isnan(_3139) ? _3140 : max(_3139, _3140));
            float _3271 = isnan(_3140) ? _3139 : (isnan(_3139) ? _3140 : min(_3139, _3140));
            float _3280 = isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : min(_3270, 0.0));
            float _3281 = isnan(0.0) ? _3271 : (isnan(_3271) ? 0.0 : min(_3271, 0.0));
            _3309 = ((abs(_3146 / _3134) * cbSceneParam._m0[80u].y) * ((((_3280 - _3281) * 2.0) - ((exp2(_3154 * (isnan(0.0) ? _3270 : (isnan(_3270) ? 0.0 : max(_3270, 0.0)))) - exp2(_3154 * (isnan(0.0) ? _3271 : (isnan(_3271) ? 0.0 : max(_3271, 0.0))))) * _3269)) - ((exp2(_3156 * _3280) - exp2(_3156 * _3281)) * _3269))) + (_3149 * cbSceneParam._m0[80u].z);
        }
        vec4 _3311 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3066, _3067, 1.0), 0.0);
        float _3320 = exp2((_3309 * (-1.44269502162933349609375)) * (1.0 - _3311.w));
        float _3321 = log2(_3320);
        float _3337 = log2(_3086);
        _3158 = (exp2(_3337 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].x)) * _3311.x) / cbSceneParam._m0[78u].x)) + _3083;
        _3160 = (exp2(_3337 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].y)) * _3311.y) / cbSceneParam._m0[78u].y)) + _3084;
        _3162 = (exp2(_3337 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3321 * cbSceneParam._m0[78u].z)) * _3311.z) / cbSceneParam._m0[78u].z)) + _3085;
        _3164 = _3320 * _3086;
    }
    else
    {
        _3158 = _3083;
        _3160 = _3084;
        _3162 = _3085;
        _3164 = _3086;
    }
    float _3176 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3177 = _3176 == 3.0;
    float _3178 = log2(_3164);
    float _3185 = exp2(_3178 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0))) * (_3028 + ((isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0))) * _999))) + ((_3034 + ((isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0))) * _1806)) * cbPerFrame._m0[3u].x));
    float _3186 = exp2(_3178 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0))) * (_3030 + ((isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0))) * _999))) + ((_3036 + ((isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0))) * _1806)) * cbPerFrame._m0[3u].x));
    float _3187 = exp2(_3178 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0))) * (_3032 + ((isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0))) * _999))) + ((_3038 + ((isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0))) * _1806)) * cbPerFrame._m0[3u].x));
    float _3196 = (_3176 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3196 * (_3177 ? _3185 : (_3185 + (cbSceneParam._m0[72u].w * _3158)));
    SV_Target.y = _3196 * (_3177 ? _3186 : (_3186 + (cbSceneParam._m0[72u].w * _3160)));
    SV_Target.z = _3196 * (_3177 ? _3187 : (_3187 + (cbSceneParam._m0[72u].w * _3162)));
    SV_Target.w = cbInstanceData._m0[_3058].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3058].w;
}


