#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _214 = _209 + 1u;
    uint _218 = _209 + 2u;
    float _227 = sqrt(((cbInstanceData._m0[_214].x * cbInstanceData._m0[_214].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_218].x * cbInstanceData._m0[_218].x));
    float _228 = _227 * TEXCOORD.z;
    float _229 = _227 * TEXCOORD.w;
    vec4 _248 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _254 = _248.x * cbMtdParam._m0[9u].x;
    float _255 = _248.y * cbMtdParam._m0[9u].y;
    float _256 = _248.z * cbMtdParam._m0[9u].z;
    vec4 _274 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _278 = _274.z;
    float _283 = (_274.x * 2.0) + (-1.0);
    float _285 = (_274.y * 2.0) + (-1.0);
    float _286 = dot(vec2(_283, _285), vec2(_283, _285));
    float _768 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _292 = sqrt(1.0 - (isnan(1.0) ? _768 : (isnan(_768) ? 1.0 : min(_768, 1.0))));
    vec4 _309 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _228) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _229) + cbTextureTilingScale._m0[11u].w));
    float _311 = _309.x;
    float _312 = 1.0 - _311;
    float _321 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _324 = ((isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : min(_321, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _333 = (_324 - ((((((_311 - _312) * cbMtdParam._m0[24u].z) + _312) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _324))) * (cbMtdParam._m0[21u].w + 1.0);
    float _789 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _334 = isnan(1.0) ? _789 : (isnan(_789) ? 1.0 : min(_789, 1.0));
    float _341 = (_334 * (cbMtdParam._m0[17u].x - _254)) + _254;
    float _342 = (_334 * (cbMtdParam._m0[17u].y - _255)) + _255;
    float _343 = (_334 * (cbMtdParam._m0[17u].z - _256)) + _256;
    vec4 _356 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _228) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _229) + cbTextureTilingScale._m0[19u].w));
    float _358 = _356.x;
    float _359 = 1.0 - _358;
    float _388 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_358 - _359) * cbMtdParam._m0[24u].w) + _359) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _800 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _389 = isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0));
    float _397 = ((((cbMtdParam._m0[10u].x - _341) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _389) + _341;
    float _398 = ((((cbMtdParam._m0[10u].y - _342) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _389) + _342;
    float _399 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _343)) * _389) + _343;
    vec4 _412 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _414 = _412.x;
    float _416 = _414 - (_414 * _334);
    float _418 = _416 - (_416 * _389);
    vec4 _432 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _228) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _229) + cbTextureTilingScale._m0[15u].w));
    float _439 = (_432.x * 2.0) + (-1.0);
    float _440 = (_432.y * 2.0) + (-1.0);
    float _441 = dot(vec2(_439, _440), vec2(_439, _440));
    float _811 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _449 = (_334 * (_432.z - _278)) + _278;
    float _452 = ((cbMtdParam._m0[23u].y - _449) * _389) + _449;
    vec4 _474 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _228) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _229) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _480 = (_474.x * 2.0) + (-1.0);
    float _481 = (_474.y * 2.0) + (-1.0);
    float _482 = dot(vec2(_480, _481), vec2(_480, _481));
    float _822 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _499 = (((_439 - _283) + (cbMtdParam._m0[21u].x * _283)) * _334) + _283;
    float _500 = (((_440 - _285) + (cbMtdParam._m0[21u].x * _285)) * _334) + _285;
    float _501 = (_334 * (sqrt(1.0 - (isnan(1.0) ? _811 : (isnan(_811) ? 1.0 : min(_811, 1.0)))) - _292)) + _292;
    float _512 = (((_480 - _499) + (_499 * cbMtdParam._m0[22u].z)) * _389) + _499;
    float _513 = (((_481 - _500) + (_500 * cbMtdParam._m0[22u].z)) * _389) + _500;
    float _514 = ((sqrt(1.0 - (isnan(1.0) ? _822 : (isnan(_822) ? 1.0 : min(_822, 1.0)))) - _501) * _389) + _501;
    float _516 = cbMtdParam._m0[22u].x + _274.w;
    float _519 = fma(_514, _196 * NORMAL.x, fma(_513, _203 * TANGENT.x, (_189 * _181) * _512));
    float _522 = fma(_514, _196 * NORMAL.y, fma(_513, _203 * TANGENT.y, (_189 * _182) * _512));
    float _525 = fma(_514, _196 * NORMAL.z, fma(_513, _203 * TANGENT.z, (_189 * _183) * _512));
    float _529 = inversesqrt(dot(vec3(_519, _522, _525), vec3(_519, _522, _525)));
    float _833 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _844 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _531 = isnan(1.0) ? _844 : (isnan(_844) ? 1.0 : min(_844, 1.0));
    float _855 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _532 = isnan(1.0) ? _855 : (isnan(_855) ? 1.0 : min(_855, 1.0));
    float _866 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _533 = isnan(1.0) ? _866 : (isnan(_866) ? 1.0 : min(_866, 1.0));
    float _877 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _534 = isnan(1.0) ? _877 : (isnan(_877) ? 1.0 : min(_877, 1.0));
    float _888 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _575 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _585 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _575);
    float _586 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _575);
    float _587 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _575);
    vec4 _592 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _594 = _592.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _655 = sqrt(((_585 * _585) + (_586 * _586)) + (_587 * _587));
        float _662 = (cbMatDynParam._m0[5u].x * _655) + cbMatDynParam._m0[5u].y;
        float _899 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
        float _663 = isnan(1.0) ? _899 : (isnan(_899) ? 1.0 : min(_899, 1.0));
        float _667 = (cbMatDynParam._m0[5u].z * _655) + cbMatDynParam._m0[5u].w;
        float _910 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0))) - _663)) + _663) < ((_594 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _695;
    vec4 _617;
    float _624;
    float _625;
    float _626;
    float _627;
    float _631;
    vec4 _635;
    float _637;
    float _638;
    bool _649;
    for (;;)
    {
        _617 = cbInstanceData._m0[(_209 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _621 = (cbMtdParam._m0[0u].x * _532) * _617.x;
        float _622 = (cbMtdParam._m0[0u].y * _533) * _617.y;
        float _623 = (cbMtdParam._m0[0u].z * _534) * _617.z;
        float _921 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
        _624 = isnan(1.0) ? _921 : (isnan(_921) ? 1.0 : min(_921, 1.0));
        float _932 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
        _625 = isnan(1.0) ? _932 : (isnan(_932) ? 1.0 : min(_932, 1.0));
        float _943 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
        _626 = isnan(1.0) ? _943 : (isnan(_943) ? 1.0 : min(_943, 1.0));
        _627 = _531 * TEXCOORD_5.w;
        _631 = cbInstanceData._m0[_209 + 6u].w;
        float _632 = _594 + (-0.5);
        _635 = cbMtdParam._m0[1u];
        _637 = _635.y * _632;
        _638 = _632 * 0.999000012874603271484375;
        _649 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_649)
        {
            if ((cbInstanceData._m0[_209 + 7u].x + _638) < 0.5)
            {
                _695 = true;
                break;
            }
        }
        if ((_617.w < 1.0) && ((_617.w + _638) < 0.5))
        {
            _695 = true;
            break;
        }
        if ((_637 + 1.0) < _635.x)
        {
            _695 = true;
            break;
        }
        _695 = false;
        break;
    }
    if (_695)
    {
        discard_state = true;
    }
    bool _721 = cbMtdParam._m0[1u].z != 0.0;
    float _722 = _721 ? _631 : 0.0;
    SV_Target.x = ((_519 * 0.5) * _529) + 0.500488758087158203125;
    SV_Target.y = ((_522 * 0.5) * _529) + 0.500488758087158203125;
    SV_Target.z = ((_525 * 0.5) * _529) + 0.500488758087158203125;
    SV_Target.w = _722;
    SV_Target_1.x = isnan(1.0) ? _888 : (isnan(_888) ? 1.0 : min(_888, 1.0));
    SV_Target_1.y = isnan(1.0) ? _833 : (isnan(_833) ? 1.0 : min(_833, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _721 ? _631 : _627;
    SV_Target_2.x = _624;
    SV_Target_2.y = _625;
    SV_Target_2.z = _626;
    SV_Target_2.w = _721 ? _631 : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _722;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _722;
    discard_exit();
}


