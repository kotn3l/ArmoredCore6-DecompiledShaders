#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1299;
float _3961;
float _3962;
float _3963;
float _3964;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _231 = _230 * _222;
    float _232 = _230 * _223;
    float _233 = _230 * _224;
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _238 = _237 * NORMAL.x;
    float _239 = _237 * NORMAL.y;
    float _240 = _237 * NORMAL.z;
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245 = _244 * TANGENT.x;
    float _246 = _244 * TANGENT.y;
    float _247 = _244 * TANGENT.z;
    uint _250 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _250 + 1u;
    uint _260 = _250 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _291.x * cbMtdParam._m0[11u].x;
    float _298 = _291.y * cbMtdParam._m0[11u].y;
    float _299 = _291.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _356 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _358 = _356.x;
    float _370 = dot(vec4(_358, _356.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _387 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_358 - _370) * cbMtdParam._m0[24u].y) + _370) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3973 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    float _395 = (_388 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _396 = (_388 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _397 = (_388 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _416 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _270) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _271) + cbTextureTilingScale._m0[14u].w));
    vec4 _436 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _270) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _271) + cbTextureTilingScale._m0[20u].w));
    vec4 _463 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _480 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _482 = _480.x;
    float _483 = _480.y;
    float _484 = _480.z;
    float _493 = ((_463.z - _484) * _388) + _484;
    float _496 = ((((_463.x - _482) * _388) + _482) * 2.0) + (-1.0);
    float _497 = ((((_463.y - _483) * _388) + _483) * 2.0) + (-1.0);
    float _498 = dot(vec2(_496, _497), vec2(_496, _497));
    float _3984 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _503 = sqrt(1.0 - (isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))));
    float _506 = _496 + ((((_436.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _507 = _497 + ((((_436.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _510 = fma(_503, _238, fma(_507, _245, _506 * _231));
    float _513 = fma(_503, _239, fma(_507, _246, _506 * _232));
    float _516 = fma(_503, _240, fma(_507, _247, _506 * _233));
    float _520 = inversesqrt(dot(vec3(_510, _513, _516), vec3(_510, _513, _516)));
    vec4 _536 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _562 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _564 = _562.x;
    float _565 = 1.0 - _564;
    float _569 = ((_564 - _565) * cbMtdParam._m0[24u].z) + _565;
    float _571 = (cbMtdParam._m0[19u].x + dot(vec4(_520 * _510, _520 * _513, _520 * _516, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_569 * cbMtdParam._m0[21u].z);
    float _3995 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _572 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _587 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_569 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4006 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _588 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _592 = ((_572 * ((_416.x * cbMtdParam._m0[18u].x) - _395)) * _588) + _395;
    float _593 = ((_572 * ((_416.y * cbMtdParam._m0[18u].y) - _396)) * _588) + _396;
    float _594 = ((_572 * ((_416.z * cbMtdParam._m0[18u].z) - _397)) * _588) + _397;
    vec4 _606 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _620 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _622 = _620.x;
    float _640 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _270) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _271) + cbTextureTilingScale._m0[9u].w)).x - _622) * _388) + _622;
    float _644 = ((_606.x - _640) * cbMtdParam._m0[19u].z) + _640;
    float _647 = _644 - ((_588 * _572) * _644);
    float _652 = (((_436.z - _493) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _493;
    vec4 _665 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _672 = (_665.x * 2.0) + (-1.0);
    float _673 = (_665.y * 2.0) + (-1.0);
    float _674 = dot(vec2(_672, _673), vec2(_672, _673));
    float _4017 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _683 = (((_665.z - _652) * _572) * _588) + _652;
    float _698 = (((cbMtdParam._m0[21u].x * _506) + ((_672 - _506) * _572)) * _588) + _506;
    float _699 = (((cbMtdParam._m0[21u].x * _507) + ((_673 - _507) * _572)) * _588) + _507;
    float _700 = (((sqrt(1.0 - (isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0)))) - _503) * _572) * _588) + _503;
    float _705 = cbMtdParam._m0[22u].x + _536.w;
    float _708 = fma(_700, _238, fma(_699, _245, _698 * _231));
    float _711 = fma(_700, _239, fma(_699, _246, _698 * _232));
    float _714 = fma(_700, _240, fma(_699, _247, _698 * _233));
    float _718 = inversesqrt(dot(vec3(_708, _711, _714), vec3(_708, _711, _714)));
    float _719 = _718 * _708;
    float _720 = _718 * _711;
    float _721 = _718 * _714;
    float _4028 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _722 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _4039 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _4050 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _4061 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _4072 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _4083 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _727 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _741 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _782 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _792 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _782);
    float _793 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _782);
    float _794 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _782);
    float _798 = inversesqrt(dot(vec3(_792, _793, _794), vec3(_792, _793, _794)));
    float _799 = _792 * _798;
    float _800 = _793 * _798;
    float _801 = _794 * _798;
    vec4 _806 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _808 = _806.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _980 = sqrt(((_792 * _792) + (_793 * _793)) + (_794 * _794));
        float _986 = (cbMatDynParam._m0[5u].x * _980) + cbMatDynParam._m0[5u].y;
        float _4094 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _987 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
        float _991 = (cbMatDynParam._m0[5u].z * _980) + cbMatDynParam._m0[5u].w;
        float _4105 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0))) - _987)) + _987) < ((_808 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _819 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _820 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _838 = fma(_721, cbSceneParam._m0[5u].z, fma(_720, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _719));
    float _841 = fma(_721, cbSceneParam._m0[6u].z, fma(_720, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _719));
    float _844 = fma(_721, cbSceneParam._m0[7u].z, fma(_720, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _719));
    uint _857 = _250 + 9u;
    uint _858 = _857 + uint(cbMatDynParam._m0[0u].w);
    float _864 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0)))) * cbInstanceData._m0[_858].x;
    float _865 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0)))) * cbInstanceData._m0[_858].y;
    float _866 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0)))) * cbInstanceData._m0[_858].z;
    float _4116 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _867 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
    float _4127 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _868 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
    float _4138 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _869 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
    float _870 = 1.0 - _727;
    float _871 = _867 * _870;
    float _872 = _868 * _870;
    float _873 = _869 * _870;
    float _878 = (_867 + (-0.039999999105930328369140625)) * _727;
    float _879 = (_868 + (-0.039999999105930328369140625)) * _727;
    float _880 = (_869 + (-0.039999999105930328369140625)) * _727;
    float _881 = _878 + 0.039999999105930328369140625;
    float _883 = _879 + 0.039999999105930328369140625;
    float _884 = _880 + 0.039999999105930328369140625;
    vec4 _893 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _819, cbSceneParam._m0[86u].y * _820));
    float _897 = ((isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) * TEXCOORD_5.w) * _893.x;
    float _898 = dot(vec3(_719, _720, _721), vec3(_799, _800, _801));
    float _901 = _898 * 2.0;
    float _905 = (_901 * _719) - _799;
    float _906 = (_901 * _720) - _800;
    float _907 = (_901 * _721) - _801;
    float _911 = abs(dot(vec3(_799, _800, _801), vec3(_719, _720, _721)));
    float _4149 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _913 = sqrt(_722);
    float _926 = exp2((_913 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_913 * 3.0));
    float _932 = (1.0 - _926) * ((_913 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _933 = _926 * _913;
    float _961 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _965 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _969 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1298;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1023 = fma(_969, cbModelParam._m0[26u].z, fma(_965, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _961));
        float _1027 = fma(_969, cbModelParam._m0[27u].z, fma(_965, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _961));
        float _1031 = fma(_969, cbModelParam._m0[28u].z, fma(_965, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _961));
        float _1056 = _961 + _719;
        float _1057 = _965 + _720;
        float _1058 = _969 + _721;
        float _1068 = fma(_1058, cbModelParam._m0[26u].z, fma(_1057, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1056)) - _1023;
        float _1069 = fma(_1058, cbModelParam._m0[27u].z, fma(_1057, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1056)) - _1027;
        float _1070 = fma(_1058, cbModelParam._m0[28u].z, fma(_1057, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1056)) - _1031;
        float _1074 = inversesqrt(dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070)));
        float _1087 = ((_1074 * _1068) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1023 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1088 = ((_1074 * _1069) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1027 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1089 = ((_1074 * _1070) / cbModelParam._m0[34u].z) + ((((((_1031 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1092 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        float _1126 = exp2((_1092.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1092.x + (-0.5));
        float _1128 = _1126 * (_1092.y + (-0.5));
        float _1129 = _1126 * (_1092.z + (-0.5));
        float _1136 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1099.x + (-0.5));
        float _1138 = _1136 * (_1099.y + (-0.5));
        float _1139 = _1136 * (_1099.z + (-0.5));
        float _1146 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1147 = _1146 * (_1106.x + (-0.5));
        float _1148 = _1146 * (_1106.y + (-0.5));
        float _1149 = _1146 * (_1106.z + (-0.5));
        float _1156 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1157 = _1156 * (_1113.x + (-0.5));
        float _1158 = _1156 * (_1113.y + (-0.5));
        float _1159 = _1156 * (_1113.z + (-0.5));
        float _1160 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1161 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1162 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1163 = _1127 * 0.5;
        float _1164 = _1137 * 0.5;
        float _1165 = _1147 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1180 = (dot(vec3(_719, _720, _721), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _4175 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1190 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1160 + 9.9999997473787516355514526367188e-06);
        float _4186 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1192 = _1191 * 2.0;
        float _1196 = (1.0 - _1191) / (_1191 + 1.0);
        float _4197 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
        float _1206 = ((((1.0 - _1197) * (_1192 + 2.0)) * exp2(log2(isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0))) * (_1192 + 1.0))) + _1197) * _1160;
        float _1207 = _1128 * 0.5;
        float _1208 = _1138 * 0.5;
        float _1209 = _1148 * 0.5;
        float _1210 = dot(vec3(_1207, _1208, _1209), vec3(_1207, _1208, _1209));
        float _1215 = (_1210 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1210);
        float _1223 = (dot(vec3(_719, _720, _721), vec3(_1215 * _1207, _1215 * _1208, _1215 * _1209)) + 1.0) * 0.5;
        float _4208 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1232 = sqrt(((_1208 * _1208) + (_1207 * _1207)) + (_1209 * _1209)) / (_1161 + 9.9999997473787516355514526367188e-06);
        float _4219 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _1234 = _1233 * 2.0;
        float _1238 = (1.0 - _1233) / (_1233 + 1.0);
        float _4230 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
        float _1248 = ((((1.0 - _1239) * (_1234 + 2.0)) * exp2(log2(isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0))) * (_1234 + 1.0))) + _1239) * _1161;
        float _1249 = _1129 * 0.5;
        float _1250 = _1139 * 0.5;
        float _1251 = _1149 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1265 = (dot(vec3(_719, _720, _721), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _4241 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1274 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1162 + 9.9999997473787516355514526367188e-06);
        float _4252 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
        float _1276 = _1275 * 2.0;
        float _1280 = (1.0 - _1275) / (_1275 + 1.0);
        float _4263 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
        float _1290 = ((((1.0 - _1281) * (_1276 + 2.0)) * exp2(log2(isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0))) * (_1276 + 1.0))) + _1281) * _1162;
        _1298 = _1129;
        _1300 = _1128;
        _1301 = _1127;
        _1302 = _1139;
        _1303 = _1138;
        _1304 = _1137;
        _1305 = _1149;
        _1306 = _1148;
        _1307 = _1147;
        _1308 = _1162;
        _1309 = _1161;
        _1310 = _1160;
        _1311 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)));
        _1312 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0)));
        _1313 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)));
    }
    else
    {
        _1298 = _1299;
        _1300 = _1299;
        _1301 = _1299;
        _1302 = _1299;
        _1303 = _1299;
        _1304 = _1299;
        _1305 = _1299;
        _1306 = _1299;
        _1307 = _1299;
        _1308 = _1299;
        _1309 = _1299;
        _1310 = _1299;
        _1311 = 0.0;
        _1312 = 0.0;
        _1313 = 0.0;
    }
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1341 = fma(_969, cbModelParam._m0[30u].z, fma(_965, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _961));
        float _1345 = fma(_969, cbModelParam._m0[31u].z, fma(_965, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _961));
        float _1349 = fma(_969, cbModelParam._m0[32u].z, fma(_965, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _961));
        float _1372 = _961 + _719;
        float _1373 = _965 + _720;
        float _1374 = _969 + _721;
        float _1384 = fma(_1374, cbModelParam._m0[30u].z, fma(_1373, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1372)) - _1341;
        float _1385 = fma(_1374, cbModelParam._m0[31u].z, fma(_1373, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1372)) - _1345;
        float _1386 = fma(_1374, cbModelParam._m0[32u].z, fma(_1373, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1372)) - _1349;
        float _1390 = inversesqrt(dot(vec3(_1384, _1385, _1386), vec3(_1384, _1385, _1386)));
        float _1403 = ((_1390 * _1384) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1341 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1404 = ((_1390 * _1385) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1345 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1405 = ((_1390 * _1386) / cbModelParam._m0[35u].z) + ((((((_1349 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1403, _1404, _1405), 0.0);
        vec4 _1414 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1403, _1404, _1405), 0.0);
        vec4 _1421 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1403, _1404, _1405), 0.0);
        vec4 _1428 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1403, _1404, _1405), 0.0);
        float _1440 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1441 = _1440 * (_1407.x + (-0.5));
        float _1442 = _1440 * (_1407.y + (-0.5));
        float _1443 = _1440 * (_1407.z + (-0.5));
        float _1450 = exp2((_1414.w + (-0.5)) * 20.0) * 2.0;
        float _1451 = _1450 * (_1414.x + (-0.5));
        float _1452 = _1450 * (_1414.y + (-0.5));
        float _1453 = _1450 * (_1414.z + (-0.5));
        float _1460 = exp2((_1421.w + (-0.5)) * 20.0) * 2.0;
        float _1461 = _1460 * (_1421.x + (-0.5));
        float _1462 = _1460 * (_1421.y + (-0.5));
        float _1463 = _1460 * (_1421.z + (-0.5));
        float _1470 = exp2((_1428.w + (-0.5)) * 20.0) * 2.0;
        float _1471 = _1470 * (_1428.x + (-0.5));
        float _1472 = _1470 * (_1428.y + (-0.5));
        float _1473 = _1470 * (_1428.z + (-0.5));
        float _1474 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1475 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1476 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1477 = _1441 * 0.5;
        float _1478 = _1451 * 0.5;
        float _1479 = _1461 * 0.5;
        float _1480 = dot(vec3(_1477, _1478, _1479), vec3(_1477, _1478, _1479));
        float _1485 = (_1480 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1480);
        float _1493 = (dot(vec3(_719, _720, _721), vec3(_1485 * _1477, _1485 * _1478, _1485 * _1479)) + 1.0) * 0.5;
        float _4304 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1502 = sqrt(((_1478 * _1478) + (_1477 * _1477)) + (_1479 * _1479)) / (_1474 + 9.9999997473787516355514526367188e-06);
        float _4315 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1504 = _1503 * 2.0;
        float _1508 = (1.0 - _1503) / (_1503 + 1.0);
        float _4326 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1518 = ((((1.0 - _1509) * (_1504 + 2.0)) * exp2(log2(isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0))) * (_1504 + 1.0))) + _1509) * _1474;
        float _1519 = _1442 * 0.5;
        float _1520 = _1452 * 0.5;
        float _1521 = _1462 * 0.5;
        float _1522 = dot(vec3(_1519, _1520, _1521), vec3(_1519, _1520, _1521));
        float _1527 = (_1522 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1522);
        float _1535 = (dot(vec3(_719, _720, _721), vec3(_1527 * _1519, _1527 * _1520, _1527 * _1521)) + 1.0) * 0.5;
        float _4337 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1544 = sqrt(((_1520 * _1520) + (_1519 * _1519)) + (_1521 * _1521)) / (_1475 + 9.9999997473787516355514526367188e-06);
        float _4348 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _1546 = _1545 * 2.0;
        float _1550 = (1.0 - _1545) / (_1545 + 1.0);
        float _4359 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1551 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
        float _1560 = ((((1.0 - _1551) * (_1546 + 2.0)) * exp2(log2(isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0))) * (_1546 + 1.0))) + _1551) * _1475;
        float _1561 = _1443 * 0.5;
        float _1562 = _1453 * 0.5;
        float _1563 = _1463 * 0.5;
        float _1564 = dot(vec3(_1561, _1562, _1563), vec3(_1561, _1562, _1563));
        float _1569 = (_1564 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1564);
        float _1577 = (dot(vec3(_719, _720, _721), vec3(_1569 * _1561, _1569 * _1562, _1569 * _1563)) + 1.0) * 0.5;
        float _4370 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1586 = sqrt(((_1562 * _1562) + (_1561 * _1561)) + (_1563 * _1563)) / (_1476 + 9.9999997473787516355514526367188e-06);
        float _4381 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1587 = isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0));
        float _1588 = _1587 * 2.0;
        float _1592 = (1.0 - _1587) / (_1587 + 1.0);
        float _4392 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1593 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
        float _1602 = ((((1.0 - _1593) * (_1588 + 2.0)) * exp2(log2(isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0))) * (_1588 + 1.0))) + _1593) * _1476;
        _1610 = _1443;
        _1611 = _1442;
        _1612 = _1441;
        _1613 = _1453;
        _1614 = _1452;
        _1615 = _1451;
        _1616 = _1463;
        _1617 = _1462;
        _1618 = _1461;
        _1619 = _1476;
        _1620 = _1475;
        _1621 = _1474;
        _1622 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0)));
        _1623 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0)));
        _1624 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)));
    }
    else
    {
        _1610 = _1299;
        _1611 = _1299;
        _1612 = _1299;
        _1613 = _1299;
        _1614 = _1299;
        _1615 = _1299;
        _1616 = _1299;
        _1617 = _1299;
        _1618 = _1299;
        _1619 = _1299;
        _1620 = _1299;
        _1621 = _1299;
        _1622 = 0.0;
        _1623 = 0.0;
        _1624 = 0.0;
    }
    float _1634 = (cbModelParam._m0[1u].x * (_1622 - _1311)) + _1311;
    float _1635 = (cbModelParam._m0[1u].x * (_1623 - _1312)) + _1312;
    float _1636 = (cbModelParam._m0[1u].x * (_1624 - _1313)) + _1313;
    float _1657 = fma(_1636, cbSceneParam._m0[89u].z, fma(_1635, cbSceneParam._m0[89u].y, _1634 * cbSceneParam._m0[89u].x));
    float _1660 = fma(_1636, cbSceneParam._m0[90u].z, fma(_1635, cbSceneParam._m0[90u].y, _1634 * cbSceneParam._m0[90u].x));
    float _1663 = fma(_1636, cbSceneParam._m0[91u].z, fma(_1635, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1634));
    float _1678 = _905 * 0.5;
    float _1679 = _906 * 0.5;
    float _1680 = _907 * 0.5;
    float _1681 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1612, _1615, _1618, _1621));
    float _1684 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1611, _1614, _1617, _1620));
    float _1687 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1610, _1613, _1616, _1619));
    float _1721;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1694 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1298, _1302, _1305, _1308));
        float _1698 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1300, _1303, _1306, _1309));
        float _1702 = dot(vec4(_1678, _1679, _1680, 1.0), vec4(_1301, _1304, _1307, _1310));
        float _1709 = dot(vec4(cbModelParam._m0[39u]), vec4(_1678, _1679, _1680, 1.0));
        _1721 = dot(vec3(isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0)), isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0)), isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1709) ? 0.0 : (isnan(0.0) ? _1709 : max(0.0, _1709))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1721 = 1.0;
    }
    float _1732;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1723 = dot(vec4(cbModelParam._m0[40u]), vec4(_1678, _1679, _1680, 1.0));
        _1732 = dot(vec3(isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1723) ? 0.0 : (isnan(0.0) ? _1723 : max(0.0, _1723))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1732 = 1.0;
    }
    float _1736 = (_1732 * cbModelParam._m0[1u].x) + (_1721 * (1.0 - cbModelParam._m0[1u].x));
    float _1746 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _722);
    float _1747 = isnan(_1746) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1746 : min(cbModelParam._m0[25u].z, _1746));
    float _1827;
    float _1829;
    float _1831;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1794 = fma(_969, cbModelParam._m0[13u].z, fma(_965, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _961)) + cbModelParam._m0[13u].w;
        float _1798 = fma(_969, cbModelParam._m0[14u].z, fma(_965, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _961)) + cbModelParam._m0[14u].w;
        float _1802 = fma(_969, cbModelParam._m0[15u].z, fma(_965, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _961)) + cbModelParam._m0[15u].w;
        float _1805 = fma(_907, cbModelParam._m0[13u].z, fma(_906, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _905));
        float _1808 = fma(_907, cbModelParam._m0[14u].z, fma(_906, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _905));
        float _1811 = fma(_907, cbModelParam._m0[15u].z, fma(_906, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _905));
        float _1839;
        if (_1805 > 0.0)
        {
            _1839 = abs((1.0 - _1794) / _1805);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1794 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1839 = frontier_phi_17_15_ladder;
        }
        float _2010;
        if (_1808 > 0.0)
        {
            _2010 = abs((1.0 - _1798) / _1808);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1798 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2010 = frontier_phi_26_22_ladder;
        }
        float _2305;
        if (_1811 > 0.0)
        {
            _2305 = abs((1.0 - _1802) / _1811);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1802 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2305 = frontier_phi_38_33_ladder;
        }
        float _2307 = isnan(_2010) ? _1839 : (isnan(_1839) ? _2010 : min(_1839, _2010));
        float _2308 = isnan(_2305) ? _2307 : (isnan(_2307) ? _2305 : min(_2307, _2305));
        float _2312 = (_2308 * _1805) + _1794;
        float _2313 = (_2308 * _1808) + _1798;
        float _2314 = (_2308 * _1811) + _1802;
        float _2315 = _2308 * 9.9999997473787516355514526367188e-05;
        float _2317 = (-1.0) - _2315;
        float _2319 = _2315 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2314 > _2319) || ((_2314 < _2317) || ((_2313 > _2319) || ((_2313 < _2317) || ((_2312 < _2317) || (_2312 > _2319))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2459 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2314, cbModelParam._m0[9u].z, fma(_2313, cbModelParam._m0[9u].y, _2312 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2314, cbModelParam._m0[10u].z, fma(_2313, cbModelParam._m0[10u].y, _2312 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2314, cbModelParam._m0[11u].z, fma(_2313, cbModelParam._m0[11u].y, _2312 * cbModelParam._m0[11u].x))), _1747);
            frontier_phi_16_38_ladder = _2459.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2459.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2459.x * cbModelParam._m0[1u].y;
        }
        _1827 = frontier_phi_16_38_ladder_2;
        _1829 = frontier_phi_16_38_ladder_1;
        _1831 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1815 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_905, _906, _907), _1747);
        _1827 = _1815.x * cbModelParam._m0[1u].y;
        _1829 = _1815.y * cbModelParam._m0[1u].y;
        _1831 = _1815.z * cbModelParam._m0[1u].y;
    }
    float _1835 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _722);
    float _1836 = isnan(_1835) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1835 : min(cbModelParam._m0[25u].w, _1835));
    float _1925;
    float _1927;
    float _1929;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1889 = fma(_969, cbModelParam._m0[21u].z, fma(_965, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _961)) + cbModelParam._m0[21u].w;
        float _1893 = fma(_969, cbModelParam._m0[22u].z, fma(_965, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _961)) + cbModelParam._m0[22u].w;
        float _1897 = fma(_969, cbModelParam._m0[23u].z, fma(_965, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _961)) + cbModelParam._m0[23u].w;
        float _1900 = fma(_907, cbModelParam._m0[21u].z, fma(_906, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _905));
        float _1903 = fma(_907, cbModelParam._m0[22u].z, fma(_906, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _905));
        float _1906 = fma(_907, cbModelParam._m0[23u].z, fma(_906, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _905));
        float _2015;
        if (_1900 > 0.0)
        {
            _2015 = abs((1.0 - _1889) / _1900);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1900 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1889 + 1.0) / _1900);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2015 = frontier_phi_28_24_ladder;
        }
        float _2332;
        if (_1903 > 0.0)
        {
            _2332 = abs((1.0 - _1893) / _1903);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1893 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2332 = frontier_phi_40_35_ladder;
        }
        float _2670;
        if (_1906 > 0.0)
        {
            _2670 = abs((1.0 - _1897) / _1906);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1897 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2670 = frontier_phi_50_47_ladder;
        }
        float _2672 = isnan(_2332) ? _2015 : (isnan(_2015) ? _2332 : min(_2015, _2332));
        float _2673 = isnan(_2670) ? _2672 : (isnan(_2672) ? _2670 : min(_2672, _2670));
        float _2677 = (_2673 * _1900) + _1889;
        float _2678 = (_2673 * _1903) + _1893;
        float _2679 = (_2673 * _1906) + _1897;
        float _2680 = _2673 * 9.9999997473787516355514526367188e-05;
        float _2681 = (-1.0) - _2680;
        float _2683 = _2680 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2679 > _2683) || ((_2679 < _2681) || ((_2678 > _2683) || ((_2678 < _2681) || ((_2677 < _2681) || (_2677 > _2683))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2801 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2679, cbModelParam._m0[17u].z, fma(_2678, cbModelParam._m0[17u].y, _2677 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2679, cbModelParam._m0[18u].z, fma(_2678, cbModelParam._m0[18u].y, _2677 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2679, cbModelParam._m0[19u].z, fma(_2678, cbModelParam._m0[19u].y, _2677 * cbModelParam._m0[19u].x))), _1836);
            frontier_phi_25_50_ladder = _2801.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2801.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2801.x * cbModelParam._m0[1u].z;
        }
        _1925 = frontier_phi_25_50_ladder_2;
        _1927 = frontier_phi_25_50_ladder_1;
        _1929 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1909 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_905, _906, _907), _1836);
        _1925 = _1909.x * cbModelParam._m0[1u].z;
        _1927 = _1909.y * cbModelParam._m0[1u].z;
        _1929 = _1909.z * cbModelParam._m0[1u].z;
    }
    float _1942 = (((_932 * _881) + _933) * _897) * ((cbModelParam._m0[1u].w * (_1925 - _1827)) + _1827);
    float _1944 = (((_932 * _883) + _933) * _897) * ((cbModelParam._m0[1u].w * (_1927 - _1829)) + _1829);
    float _1946 = (((_932 * _884) + _933) * _897) * ((cbModelParam._m0[1u].w * (_1929 - _1831)) + _1831);
    float _1949 = fma(_1946, cbSceneParam._m0[89u].z, fma(_1944, cbSceneParam._m0[89u].y, _1942 * cbSceneParam._m0[89u].x));
    float _1952 = fma(_1946, cbSceneParam._m0[90u].z, fma(_1944, cbSceneParam._m0[90u].y, _1942 * cbSceneParam._m0[90u].x));
    float _1955 = fma(_1946, cbSceneParam._m0[91u].z, fma(_1944, cbSceneParam._m0[91u].y, _1942 * cbSceneParam._m0[91u].x));
    float _1989 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1993 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1997 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2001 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2002 = _1989 / _2001;
    float _2003 = _1993 / _2001;
    float _2004 = _1997 / _2001;
    float _2151;
    float _2152;
    float _2153;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2031 = ((uint(_2004 > cbSceneParam._m0[59u].y) + uint(_2004 > cbSceneParam._m0[59u].x)) + uint(_2004 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2032 = _2031 + 43u;
        uint _2040 = _2031 + 44u;
        uint _2048 = _2031 + 45u;
        uint _2056 = _2031 + 46u;
        float _2067 = fma(_2001, cbSceneParam._m0[_2032].w, fma(_1997, cbSceneParam._m0[_2032].z, fma(_1993, cbSceneParam._m0[_2032].y, _1989 * cbSceneParam._m0[_2032].x)));
        float _2071 = fma(_2001, cbSceneParam._m0[_2040].w, fma(_1997, cbSceneParam._m0[_2040].z, fma(_1993, cbSceneParam._m0[_2040].y, _1989 * cbSceneParam._m0[_2040].x)));
        float _2079 = fma(_2001, cbSceneParam._m0[_2056].w, fma(_1997, cbSceneParam._m0[_2056].z, fma(_1993, cbSceneParam._m0[_2056].y, _1989 * cbSceneParam._m0[_2056].x)));
        float _2084 = cbSceneParam._m0[33u].z * _2079;
        float _2086 = cbSceneParam._m0[33u].w * _2079;
        float _2089 = fma(_2001, cbSceneParam._m0[_2048].w, fma(_1997, cbSceneParam._m0[_2048].z, fma(_1993, cbSceneParam._m0[_2048].y, _1989 * cbSceneParam._m0[_2048].x))) / _2079;
        float _2137 = (cbSceneParam._m0[33u].x - sqrt(((_2003 * _2003) + (_2002 * _2002)) + (_2004 * _2004))) * cbSceneParam._m0[33u].y;
        float _4518 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
        float _2144 = (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2084 + _2067) / _2079, (_2086 + _2071) / _2079), _2089), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2086 + _2067) / _2079, (_2071 - _2084) / _2079), _2089), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2067 - _2084) / _2079, (_2071 - _2086) / _2079), _2089), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2067 - _2086) / _2079, (_2084 + _2071) / _2079), _2089), 0.0)).x), vec4(0.25)));
        _2151 = 1.0 - (_2144 * cbSceneParam._m0[34u].x);
        _2152 = 1.0 - (_2144 * cbSceneParam._m0[34u].y);
        _2153 = 1.0 - (_2144 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2151 = 1.0;
        _2152 = 1.0;
        _2153 = 1.0;
    }
    float _2217;
    float _2219;
    float _2221;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2205 = fma(_2001, cbSceneParam._m0[63u].w, fma(_1997, cbSceneParam._m0[63u].z, fma(_1993, cbSceneParam._m0[63u].y, _1989 * cbSceneParam._m0[63u].x)));
        float _2206 = fma(_2001, cbSceneParam._m0[60u].w, fma(_1997, cbSceneParam._m0[60u].z, fma(_1993, cbSceneParam._m0[60u].y, _1989 * cbSceneParam._m0[60u].x))) / _2205;
        float _2207 = fma(_2001, cbSceneParam._m0[61u].w, fma(_1997, cbSceneParam._m0[61u].z, fma(_1993, cbSceneParam._m0[61u].y, _1989 * cbSceneParam._m0[61u].x))) / _2205;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2206 >= cbSceneParam._m0[64u].x) && (_2207 >= cbSceneParam._m0[64u].y)) && (_2206 <= cbSceneParam._m0[64u].z)) && (_2207 <= cbSceneParam._m0[64u].w))
        {
            float _2345 = fma(_2001, cbSceneParam._m0[62u].w, fma(_1997, cbSceneParam._m0[62u].z, fma(_1993, cbSceneParam._m0[62u].y, _1989 * cbSceneParam._m0[62u].x))) / _2205;
            float _2349 = isnan(cbSceneParam._m0[41u].w) ? _2345 : (isnan(_2345) ? cbSceneParam._m0[41u].w : max(_2345, cbSceneParam._m0[41u].w));
            float _2392 = (cbSceneParam._m0[33u].x - sqrt(((_2003 * _2003) + (_2002 * _2002)) + (_2004 * _2004))) * cbSceneParam._m0[33u].y;
            float _4534 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
            float _2399 = (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2206, cbSceneParam._m0[33u].w + _2207), _2349), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2206, _2207 - cbSceneParam._m0[33u].z), _2349), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2206 - cbSceneParam._m0[33u].z, _2207 - cbSceneParam._m0[33u].w), _2349), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2206 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2207), _2349), 0.0)).x), vec4(0.25)));
            float _2403 = 1.0 - (_2399 * cbSceneParam._m0[34u].x);
            float _2404 = 1.0 - (_2399 * cbSceneParam._m0[34u].y);
            float _2405 = 1.0 - (_2399 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2405) ? _2153 : (isnan(_2153) ? _2405 : min(_2153, _2405));
            frontier_phi_37_36_ladder_1 = isnan(_2404) ? _2152 : (isnan(_2152) ? _2404 : min(_2152, _2404));
            frontier_phi_37_36_ladder_2 = isnan(_2403) ? _2151 : (isnan(_2151) ? _2403 : min(_2151, _2403));
        }
        else
        {
            frontier_phi_37_36_ladder = _2153;
            frontier_phi_37_36_ladder_1 = _2152;
            frontier_phi_37_36_ladder_2 = _2151;
        }
        _2217 = frontier_phi_37_36_ladder_2;
        _2219 = frontier_phi_37_36_ladder_1;
        _2221 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2217 = _2151;
        _2219 = _2152;
        _2221 = _2153;
    }
    uvec4 _2226 = floatBitsToUint(cbInstanceData._m0[_250 + 5u]);
    uint _2228 = _2226.x * 14u;
    uint _2229 = _2228 + 13u;
    float _2236 = _897 + (-1.0);
    float _2241 = (cbLight._m0[_2229].x * _2236) + 1.0;
    float _2242 = (cbLight._m0[_2229].y * _2236) + 1.0;
    float _2243 = (cbLight._m0[_2229].z * _2236) + 1.0;
    float _2244 = (cbLight._m0[_2229].w * _2236) + 1.0;
    uint _2245 = _2228 + 5u;
    float _2251 = isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0));
    uint _2255 = _2228 + 4u;
    float _2264 = isnan(1.0) ? _2241 : (isnan(_2241) ? 1.0 : min(_2241, 1.0));
    uint _2268 = _2228 | 1u;
    float _2279 = dot(vec3(cbLight._m0[_2228].xyz), vec3(_719, _720, _721));
    float _2282 = dot(vec3(cbLight._m0[_2268].xyz), vec3(_719, _720, _721));
    float _4570 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
    float _4581 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
    float _2287 = (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * 0.3183098733425140380859375;
    float _2289 = (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0))) * 0.3183098733425140380859375;
    float _2296 = ((cbLight._m0[_2245].x * _2251) * _2289) + (((cbLight._m0[_2255].x * _2217) * _2264) * _2287);
    float _2297 = ((_2251 * cbLight._m0[_2245].y) * _2289) + (((cbLight._m0[_2255].y * _2219) * _2264) * _2287);
    float _2298 = ((_2251 * cbLight._m0[_2245].z) * _2289) + (((cbLight._m0[_2255].z * _2221) * _2264) * _2287);
    uvec4 _2302 = floatBitsToUint(cbLight._m0[_2228 + 12u]);
    bool _2304 = _2302.x == 0u;
    float _2406;
    float _2408;
    float _2410;
    if (_2304)
    {
        _2406 = _2296;
        _2408 = _2297;
        _2410 = _2298;
    }
    else
    {
        uint _2414 = _2228 + 6u;
        float _2430 = (dot(vec3(cbLight._m0[_2228 + 2u].xyz), vec3(_719, _720, _721)) * 0.5) + 0.5;
        float _2431 = _2430 * _2430;
        float _4592 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
        float _2432 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2433 = isnan(1.0) ? _2243 : (isnan(_2243) ? 1.0 : min(_2243, 1.0));
        _2406 = (((cbLight._m0[_2414].x * 0.3183098733425140380859375) * _2432) * _2433) + _2296;
        _2408 = (((cbLight._m0[_2414].y * 0.3183098733425140380859375) * _2432) * _2433) + _2297;
        _2410 = (((cbLight._m0[_2414].z * 0.3183098733425140380859375) * _2432) * _2433) + _2298;
    }
    bool _2413 = _2302.y == 0u;
    float _2468;
    float _2470;
    float _2472;
    if (_2413)
    {
        _2468 = _2406;
        _2470 = _2408;
        _2472 = _2410;
    }
    else
    {
        uint _2641 = _2228 + 7u;
        float _2657 = (dot(vec3(cbLight._m0[_2228 + 3u].xyz), vec3(_719, _720, _721)) * 0.5) + 0.5;
        float _2658 = _2657 * _2657;
        float _4608 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
        float _2659 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _2660 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2468 = (((cbLight._m0[_2641].x * 0.3183098733425140380859375) * _2659) * _2660) + _2406;
        _2470 = (((cbLight._m0[_2641].y * 0.3183098733425140380859375) * _2659) * _2660) + _2408;
        _2472 = (((cbLight._m0[_2641].z * 0.3183098733425140380859375) * _2659) * _2660) + _2410;
    }
    uint _2475 = _2228 + 8u;
    float _2488 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2228].w)) * _722) * 0.949999988079071044921875);
    float _2489 = _2488 * _2488;
    float _2490 = cbLight._m0[_2228].x + _799;
    float _2491 = cbLight._m0[_2228].y + _800;
    float _2492 = cbLight._m0[_2228].z + _801;
    float _2496 = inversesqrt(dot(vec3(_2490, _2491, _2492), vec3(_2490, _2491, _2492)));
    float _2497 = _2496 * _2490;
    float _2498 = _2496 * _2491;
    float _2499 = _2496 * _2492;
    float _2500 = dot(vec3(_719, _720, _721), vec3(cbLight._m0[_2228].xyz));
    float _4624 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
    float _4635 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _2504 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
    float _2505 = dot(vec3(_719, _720, _721), vec3(_2497, _2498, _2499));
    float _4646 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2508 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
    float _2509 = dot(vec3(cbLight._m0[_2228].xyz), vec3(_2497, _2498, _2499));
    float _4657 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
    float _2513 = _2489 * _2489;
    float _2517 = ((_2508 * _2508) * (_2513 + (-1.0))) + 1.0;
    float _2525 = exp2(log2(1.0 - (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0)))) * 5.0);
    float _2526 = 0.959999978542327880859375 - _878;
    float _2528 = 0.959999978542327880859375 - _879;
    float _2529 = 0.959999978542327880859375 - _880;
    float _2536 = 1.0 - _2489;
    float _2547 = (0.5 / (((_2504 * ((_2503 * _2536) + _2489)) + 9.9999999392252902907785028219223e-09) + (((_2504 * _2536) + _2489) * _2503))) * _2503;
    float _4668 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
    float _2549 = (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * (_2513 / ((_2517 * _2517) * 3.141590118408203125));
    uint _2563 = _2228 + 9u;
    float _2574 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2268].w)) * _722) * 0.949999988079071044921875);
    float _2575 = _2574 * _2574;
    float _2576 = cbLight._m0[_2268].x + _799;
    float _2577 = cbLight._m0[_2268].y + _800;
    float _2578 = cbLight._m0[_2268].z + _801;
    float _2582 = inversesqrt(dot(vec3(_2576, _2577, _2578), vec3(_2576, _2577, _2578)));
    float _2583 = _2582 * _2576;
    float _2584 = _2582 * _2577;
    float _2585 = _2582 * _2578;
    float _2586 = dot(vec3(_719, _720, _721), vec3(cbLight._m0[_2268].xyz));
    float _4679 = isnan(0.0) ? _2586 : (isnan(_2586) ? 0.0 : max(_2586, 0.0));
    float _2589 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
    float _2590 = dot(vec3(_719, _720, _721), vec3(_2583, _2584, _2585));
    float _4690 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
    float _2593 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
    float _2594 = dot(vec3(cbLight._m0[_2268].xyz), vec3(_2583, _2584, _2585));
    float _4701 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
    float _2598 = _2575 * _2575;
    float _2602 = ((_2593 * _2593) * (_2598 + (-1.0))) + 1.0;
    float _2609 = exp2(log2(1.0 - (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0)))) * 5.0);
    float _2616 = 1.0 - _2575;
    float _2626 = (0.5 / (((_2504 * ((_2589 * _2616) + _2575)) + 9.9999999392252902907785028219223e-09) + (((_2504 * _2616) + _2575) * _2589))) * _2589;
    float _4712 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2628 = (isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0))) * (_2598 / ((_2602 * _2602) * 3.141590118408203125));
    float _2638 = (((((_2609 * _2526) + _881) * cbLight._m0[_2563].x) * _2628) * _2251) + ((((cbLight._m0[_2475].x * _2217) * ((_2525 * _2526) + _881)) * _2549) * _2264);
    float _2639 = (((((_2609 * _2528) + _883) * cbLight._m0[_2563].y) * _2628) * _2251) + ((((cbLight._m0[_2475].y * _2219) * ((_2525 * _2528) + _883)) * _2549) * _2264);
    float _2640 = (((((_2609 * _2529) + _884) * cbLight._m0[_2563].z) * _2628) * _2251) + ((((cbLight._m0[_2475].z * _2221) * ((_2525 * _2529) + _884)) * _2549) * _2264);
    float _2696;
    float _2698;
    float _2700;
    if (_2304)
    {
        _2696 = _2638;
        _2698 = _2639;
        _2700 = _2640;
    }
    else
    {
        uint _2702 = _2228 + 2u;
        uint _2706 = _2228 + 10u;
        float _2720 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2702].w)) * _722) * 0.949999988079071044921875);
        float _2721 = _2720 * _2720;
        float _2722 = cbLight._m0[_2702].x + _799;
        float _2723 = cbLight._m0[_2702].y + _800;
        float _2724 = cbLight._m0[_2702].z + _801;
        float _2728 = inversesqrt(dot(vec3(_2722, _2723, _2724), vec3(_2722, _2723, _2724)));
        float _2729 = _2728 * _2722;
        float _2730 = _2728 * _2723;
        float _2731 = _2728 * _2724;
        float _2732 = dot(vec3(_719, _720, _721), vec3(cbLight._m0[_2702].xyz));
        float _4723 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
        float _2735 = isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0));
        float _2736 = dot(vec3(_719, _720, _721), vec3(_2729, _2730, _2731));
        float _4734 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
        float _2739 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
        float _2740 = dot(vec3(cbLight._m0[_2702].xyz), vec3(_2729, _2730, _2731));
        float _4745 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2744 = _2721 * _2721;
        float _2748 = ((_2739 * _2739) * (_2744 + (-1.0))) + 1.0;
        float _2755 = exp2(log2(1.0 - (isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0)))) * 5.0);
        float _2762 = 1.0 - _2721;
        float _2772 = (0.5 / (((_2504 * ((_2735 * _2762) + _2721)) + 9.9999999392252902907785028219223e-09) + (((_2504 * _2762) + _2721) * _2735))) * _2735;
        float _4756 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2774 = (isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0))) * (_2744 / ((_2748 * _2748) * 3.141590118408203125));
        float _2775 = isnan(1.0) ? _2243 : (isnan(_2243) ? 1.0 : min(_2243, 1.0));
        _2696 = (((((_2755 * _2526) + _881) * cbLight._m0[_2706].x) * _2774) * _2775) + _2638;
        _2698 = (((((_2755 * _2528) + _883) * cbLight._m0[_2706].y) * _2774) * _2775) + _2639;
        _2700 = (((((_2755 * _2529) + _884) * cbLight._m0[_2706].z) * _2774) * _2775) + _2640;
    }
    float _2806;
    float _2808;
    float _2810;
    if (_2413)
    {
        _2806 = _2696;
        _2808 = _2698;
        _2810 = _2700;
    }
    else
    {
        uint _2817 = _2228 + 3u;
        uint _2821 = _2228 + 11u;
        float _2835 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2817].w)) * _722) * 0.949999988079071044921875);
        float _2836 = _2835 * _2835;
        float _2837 = cbLight._m0[_2817].x + _799;
        float _2838 = cbLight._m0[_2817].y + _800;
        float _2839 = cbLight._m0[_2817].z + _801;
        float _2843 = inversesqrt(dot(vec3(_2837, _2838, _2839), vec3(_2837, _2838, _2839)));
        float _2844 = _2843 * _2837;
        float _2845 = _2843 * _2838;
        float _2846 = _2843 * _2839;
        float _2847 = dot(vec3(_719, _720, _721), vec3(cbLight._m0[_2817].xyz));
        float _4772 = isnan(0.0) ? _2847 : (isnan(_2847) ? 0.0 : max(_2847, 0.0));
        float _2850 = isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0));
        float _2851 = dot(vec3(_719, _720, _721), vec3(_2844, _2845, _2846));
        float _4783 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
        float _2854 = isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0));
        float _2855 = dot(vec3(cbLight._m0[_2817].xyz), vec3(_2844, _2845, _2846));
        float _4794 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        float _2859 = _2836 * _2836;
        float _2863 = ((_2854 * _2854) * (_2859 + (-1.0))) + 1.0;
        float _2870 = exp2(log2(1.0 - (isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0)))) * 5.0);
        float _2877 = 1.0 - _2836;
        float _2887 = (0.5 / (((_2504 * ((_2850 * _2877) + _2836)) + 9.9999999392252902907785028219223e-09) + (((_2504 * _2877) + _2836) * _2850))) * _2850;
        float _4805 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
        float _2889 = (isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0))) * (_2859 / ((_2863 * _2863) * 3.141590118408203125));
        float _2890 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2806 = (((((_2870 * _2526) + _881) * cbLight._m0[_2821].x) * _2889) * _2890) + _2696;
        _2808 = (((((_2870 * _2528) + _883) * cbLight._m0[_2821].y) * _2889) * _2890) + _2698;
        _2810 = (((((_2870 * _2529) + _884) * cbLight._m0[_2821].z) * _2889) * _2890) + _2700;
    }
    float _2956;
    float _2958;
    float _2960;
    float _2962;
    float _2964;
    float _2966;
    if (_2226.y == 0u)
    {
        uvec4 _2911 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2912 = _2911.x;
        uint _2923 = uint((float(_2911.y) * floor(float(uint(cbSceneParam._m0[85u].y * _820) / _2912))) + floor(float(uint(cbSceneParam._m0[85u].x * _819) / _2912)));
        float _2933 = (log2(_2004 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2934 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
        uint _2937 = uint(isnan(14.0) ? _2934 : (isnan(_2934) ? 14.0 : min(_2934, 14.0)));
        uvec4 _2942 = texelFetch(g_lightClusterGridBuffer, int(((_2937 << 2u) + (_2923 << 6u)) >> 2u));
        uint _2943 = _2942.x;
        uint _2944 = _2911.z;
        float _3023;
        float _3025;
        float _3027;
        float _3029;
        float _3031;
        float _3033;
        if (((((1u << ((_2944 >> 4u) & 15u)) + 4294967295u) & _2943) == 0u) || ((_2944 & 240u) == 0u))
        {
            _3023 = 0.0;
            _3025 = 0.0;
            _3027 = 0.0;
            _3029 = 0.0;
            _3031 = 0.0;
            _3033 = 0.0;
        }
        else
        {
            float _3024;
            float _3026;
            float _3028;
            float _3030;
            float _3032;
            float _3034;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            uint _3182 = 0u;
            uint _3191;
            bool _3192;
            for (;;)
            {
                _3191 = texelFetch(g_lightClassification, int((((_2937 << 5u) + (_2923 << 9u)) + (_3182 << 2u)) >> 2u)).x;
                _3192 = _3191 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3192)
                {
                    frontier_phi_71_pred = _3181;
                    frontier_phi_71_pred_1 = _3180;
                    frontier_phi_71_pred_2 = _3179;
                    frontier_phi_71_pred_3 = _3178;
                    frontier_phi_71_pred_4 = _3177;
                    frontier_phi_71_pred_5 = _3176;
                }
                else
                {
                    float _3321;
                    float _3322;
                    float _3323;
                    float _3324;
                    float _3325;
                    float _3326;
                    uint _3327;
                    _3321 = _3176;
                    _3322 = _3177;
                    _3323 = _3178;
                    _3324 = _3179;
                    _3325 = _3180;
                    _3326 = _3181;
                    _3327 = _3191;
                    float _3248;
                    float _3249;
                    float _3250;
                    float _3251;
                    float _3252;
                    float _3253;
                    for (;;)
                    {
                        uint _3331 = uint(findLSB(_3327)) + (_3182 << 5u);
                        uint _3328 = (_3327 + 4294967295u) & _3327;
                        uint _3333 = _3331 * 48u;
                        vec4 _3347 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3333)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 3u)).x));
                        uint _3353 = (_3331 * 48u) + 4u;
                        vec4 _3366 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3353)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 3u)).x));
                        uint _3372 = (_3331 * 48u) + 8u;
                        vec3 _3383 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3372)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 2u)).x));
                        float _3387 = _3347.x - _2002;
                        float _3388 = _3347.y - _2003;
                        float _3389 = _3347.z - _2004;
                        float _3390 = dot(vec3(_3387, _3388, _3389), vec3(_3387, _3388, _3389));
                        float _3393 = inversesqrt(_3390);
                        float _3394 = _3393 * _3387;
                        float _3395 = _3393 * _3388;
                        float _3396 = _3393 * _3389;
                        float _3397 = dot(vec3(_838, _841, _844), vec3(_3394, _3395, _3396));
                        float _3402 = 1.0 - (_3390 * _3347.w);
                        float _4831 = isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0));
                        float _3403 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                        float _3404 = sqrt(_3390) * _3366.w;
                        float _3407 = 1.39999997615814208984375 / (_3404 + 1.39999997615814208984375);
                        float _3408 = _3407 * _3407;
                        float _3411 = ((1.0 - _3408) * _3397) + _3408;
                        float _3414 = _3404 * _3404;
                        float _3418 = ((isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0))) * _3403) / ((_3414 * 0.699999988079071044921875) + 1.0);
                        float _3422 = (-0.0) - _2002;
                        float _3423 = (-0.0) - _2003;
                        float _3424 = (-0.0) - _2004;
                        float _3428 = inversesqrt(dot(vec3(_3422, _3423, _3424), vec3(_3422, _3423, _3424)));
                        float _3429 = _3428 * _3422;
                        float _3430 = _3428 * _3423;
                        float _3431 = _3428 * _3424;
                        float _3438 = exp2(log2(1.0 / ((_3414 * 3.5) + 5.0)) * 0.25);
                        float _3439 = 1.0 - _913;
                        float _3446 = sqrt(1.0 - ((1.0 - (_3439 * _3439)) * (1.0 - (_3438 * _3438))));
                        float _3447 = _3446 * _3446;
                        float _3448 = _3447 * _3447;
                        float _3449 = _3429 + _3394;
                        float _3450 = _3430 + _3395;
                        float _3451 = _3431 + _3396;
                        float _3455 = inversesqrt(dot(vec3(_3449, _3450, _3451), vec3(_3449, _3450, _3451)));
                        float _3459 = dot(vec3(_838, _841, _844), vec3(_3429, _3430, _3431));
                        float _4847 = isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0));
                        float _3462 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
                        float _3463 = dot(vec3(_838, _841, _844), vec3(_3455 * _3449, _3455 * _3450, _3455 * _3451));
                        float _4858 = isnan(0.0) ? _3463 : (isnan(_3463) ? 0.0 : max(_3463, 0.0));
                        float _3466 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
                        float _3470 = ((_3466 * _3466) * (_3448 + (-1.0))) + 1.0;
                        float _3471 = _3407 * _3447;
                        float _3472 = _3471 * _3471;
                        float _3475 = ((1.0 - _3472) * _3397) + _3472;
                        float _4869 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0));
                        float _3476 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
                        float _3477 = 1.0 - _3447;
                        float _3487 = (0.5 / (((_3476 * ((_3462 * _3477) + _3447)) + 9.9999999392252902907785028219223e-09) + (((_3476 * _3477) + _3447) * _3462))) * _3476;
                        float _4880 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                        float _3498 = (((_3448 * 3.1415927410125732421875) * (isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0)))) / ((_3470 * _3470) * ((_3414 * 2.1991131305694580078125) + 3.141590118408203125))) * _3403;
                        _3251 = (_3418 * _3366.x) + _3324;
                        _3252 = (_3418 * _3366.y) + _3325;
                        _3253 = (_3418 * _3366.z) + _3326;
                        _3248 = (_3498 * _3383.x) + _3321;
                        _3249 = (_3498 * _3383.y) + _3322;
                        _3250 = (_3498 * _3383.z) + _3323;
                        if (_3328 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3321 = _3248;
                            _3322 = _3249;
                            _3323 = _3250;
                            _3324 = _3251;
                            _3325 = _3252;
                            _3326 = _3253;
                            _3327 = _3328;
                        }
                    }
                    frontier_phi_71_pred = _3253;
                    frontier_phi_71_pred_1 = _3252;
                    frontier_phi_71_pred_2 = _3251;
                    frontier_phi_71_pred_3 = _3250;
                    frontier_phi_71_pred_4 = _3249;
                    frontier_phi_71_pred_5 = _3248;
                }
                _3034 = frontier_phi_71_pred;
                _3032 = frontier_phi_71_pred_1;
                _3030 = frontier_phi_71_pred_2;
                _3028 = frontier_phi_71_pred_3;
                _3026 = frontier_phi_71_pred_4;
                _3024 = frontier_phi_71_pred_5;
                uint _3183 = _3182 + 1u;
                if (_3183 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3176 = _3024;
                    _3177 = _3026;
                    _3178 = _3028;
                    _3179 = _3030;
                    _3180 = _3032;
                    _3181 = _3034;
                    _3182 = _3183;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3023 = _3024;
            _3025 = _3026;
            _3027 = _3028;
            _3029 = _3030;
            _3031 = _3032;
            _3033 = _3034;
        }
        uvec4 _3037 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3038 = _3037.z;
        uint _3040 = (_3038 >> 8u) & 15u;
        float _3144;
        float _3146;
        float _3148;
        float _3150;
        float _3152;
        float _3154;
        if (((4294967295u << _3040) & _2943) == 0u)
        {
            _3144 = _3023;
            _3146 = _3025;
            _3148 = _3027;
            _3150 = _3029;
            _3152 = _3031;
            _3154 = _3033;
        }
        else
        {
            float _3169 = inversesqrt(dot(vec3(_2002, _2003, _2004), vec3(_2002, _2003, _2004)));
            float _3170 = _3169 * _2002;
            float _3171 = _3169 * _2003;
            float _3172 = _3169 * _2004;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3040 < ((_3038 >> 12u) & 15u))
            {
                float _3145;
                float _3147;
                float _3149;
                float _3151;
                float _3153;
                float _3155;
                float _3304 = _3023;
                float _3305 = _3025;
                float _3306 = _3027;
                float _3307 = _3029;
                float _3308 = _3031;
                float _3309 = _3033;
                uint _3310 = _3040;
                uint _3319;
                bool _3320;
                for (;;)
                {
                    _3319 = texelFetch(g_lightClassification, int((((_2937 << 5u) + (_2923 << 9u)) + (_3310 << 2u)) >> 2u)).x;
                    _3320 = _3319 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3320)
                    {
                        frontier_phi_82_pred = _3309;
                        frontier_phi_82_pred_1 = _3308;
                        frontier_phi_82_pred_2 = _3307;
                        frontier_phi_82_pred_3 = _3306;
                        frontier_phi_82_pred_4 = _3305;
                        frontier_phi_82_pred_5 = _3304;
                    }
                    else
                    {
                        float _3512;
                        float _3513;
                        float _3514;
                        float _3515;
                        float _3516;
                        float _3517;
                        float _3805;
                        float _3806;
                        float _3807;
                        float _3808;
                        float _3809;
                        float _3810;
                        float _3525 = _3304;
                        float _3526 = _3305;
                        float _3527 = _3306;
                        float _3528 = _3307;
                        float _3529 = _3308;
                        float _3530 = _3309;
                        uint _3531 = _3319;
                        uint _3532;
                        vec4 _3557;
                        float _3558;
                        vec4 _3573;
                        vec3 _3585;
                        vec4 _3600;
                        vec4 _3615;
                        float _3661;
                        bool _3662;
                        for (;;)
                        {
                            uint _3542 = ((_3310 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3531));
                            _3532 = (_3531 + 4294967295u) & _3531;
                            uint _3544 = _3542 * 40u;
                            _3557 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3544)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 3u)).x));
                            _3558 = _3557.w;
                            uint _3560 = (_3542 * 40u) + 4u;
                            _3573 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3560)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 3u)).x));
                            uint _3575 = (_3542 * 40u) + 8u;
                            _3585 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3575)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 2u)).x));
                            uint _3587 = (_3542 * 40u) + 16u;
                            _3600 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 3u)).x));
                            uint _3602 = (_3542 * 40u) + 20u;
                            _3615 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3602)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 3u)).x));
                            uint _3617 = (_3542 * 40u) + 24u;
                            vec4 _3630 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3617)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 3u)).x));
                            uint _3636 = (_3542 * 40u) + 28u;
                            vec4 _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            _3661 = fma(_2004, _3649.z, fma(_2003, _3649.y, _3649.x * _2002)) + _3649.w;
                            _3662 = !((fma(_2004, _3630.z, fma(_2003, _3630.y, _3630.x * _2002)) + _3630.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3662)
                            {
                                float _3689 = _3557.x - _2002;
                                float _3690 = _3557.y - _2003;
                                float _3691 = _3557.z - _2004;
                                float _3692 = dot(vec3(_3689, _3690, _3691), vec3(_3689, _3690, _3691));
                                float _3695 = inversesqrt(_3692);
                                float _3696 = _3695 * _3689;
                                float _3697 = _3695 * _3690;
                                float _3698 = _3695 * _3691;
                                float _3702 = 1.0 - (_3692 / (_3558 * _3558));
                                float _4891 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                                float _3703 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
                                float _3707 = sqrt(_3692) * _3573.w;
                                float _3709 = 1.39999997615814208984375 / (_3707 + 1.39999997615814208984375);
                                float _3710 = _3709 * _3709;
                                float _3713 = ((1.0 - _3710) * dot(vec3(_3696, _3697, _3698), vec3(_838, _841, _844))) + _3710;
                                float _3716 = _3707 * _3707;
                                float _3720 = (fma(_2004, _3600.z, fma(_2003, _3600.y, _3600.x * _2002)) + _3600.w) / _3661;
                                float _3721 = (fma(_2004, _3615.z, fma(_2003, _3615.y, _3615.x * _2002)) + _3615.w) / _3661;
                                float _3725 = 1.0 - dot(vec2(_3720, _3721), vec2(_3720, _3721));
                                float _4907 = isnan(0.0) ? _3725 : (isnan(_3725) ? 0.0 : max(_3725, 0.0));
                                float _3726 = isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0));
                                float _3727 = _3726 * (((isnan(0.0) ? _3713 : (isnan(_3713) ? 0.0 : max(_3713, 0.0))) * _3703) / ((_3716 * 0.699999988079071044921875) + 1.0));
                                float _3739 = exp2(log2(1.0 / ((_3716 * 3.5) + 5.0)) * 0.25);
                                float _3740 = 1.0 - _913;
                                float _3747 = sqrt(1.0 - ((1.0 - (_3740 * _3740)) * (1.0 - (_3739 * _3739))));
                                float _3748 = _3747 * _3747;
                                float _3749 = _3748 * _3748;
                                float _3750 = _3696 - _3170;
                                float _3751 = _3697 - _3171;
                                float _3752 = _3698 - _3172;
                                float _3756 = inversesqrt(dot(vec3(_3750, _3751, _3752), vec3(_3750, _3751, _3752)));
                                float _3760 = dot(vec3(_838, _841, _844), vec3((-0.0) - _3170, (-0.0) - _3171, (-0.0) - _3172));
                                float _4918 = isnan(0.0) ? _3760 : (isnan(_3760) ? 0.0 : max(_3760, 0.0));
                                float _3763 = isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0));
                                float _3764 = dot(vec3(_838, _841, _844), vec3(_3756 * _3750, _3756 * _3751, _3756 * _3752));
                                float _4929 = isnan(0.0) ? _3764 : (isnan(_3764) ? 0.0 : max(_3764, 0.0));
                                float _3767 = isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0));
                                float _3771 = ((_3767 * _3767) * (_3749 + (-1.0))) + 1.0;
                                float _3772 = _3709 * _3748;
                                float _3773 = _3772 * _3772;
                                float _3779 = ((1.0 - _3773) * dot(vec3(_838, _841, _844), vec3(_3696, _3697, _3698))) + _3773;
                                float _4940 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                                float _3780 = isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0));
                                float _3781 = 1.0 - _3748;
                                float _3791 = (0.5 / (((_3780 * ((_3763 * _3781) + _3748)) + 9.9999999392252902907785028219223e-09) + (((_3780 * _3781) + _3748) * _3763))) * _3780;
                                float _4951 = isnan(0.0) ? _3791 : (isnan(_3791) ? 0.0 : max(_3791, 0.0));
                                float _3801 = (_3726 * _3703) * (((_3749 * 3.1415927410125732421875) * (isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0)))) / ((_3771 * _3771) * ((_3716 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3727 * _3573.z;
                                frontier_phi_88_pred_1 = _3727 * _3573.y;
                                frontier_phi_88_pred_2 = _3727 * _3573.x;
                                frontier_phi_88_pred_3 = _3801 * _3585.z;
                                frontier_phi_88_pred_4 = _3801 * _3585.y;
                                frontier_phi_88_pred_5 = _3801 * _3585.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3810 = frontier_phi_88_pred;
                            _3809 = frontier_phi_88_pred_1;
                            _3808 = frontier_phi_88_pred_2;
                            _3807 = frontier_phi_88_pred_3;
                            _3806 = frontier_phi_88_pred_4;
                            _3805 = frontier_phi_88_pred_5;
                            _3515 = _3808 + _3528;
                            _3516 = _3809 + _3529;
                            _3517 = _3810 + _3530;
                            _3512 = _3805 + _3525;
                            _3513 = _3806 + _3526;
                            _3514 = _3807 + _3527;
                            if (_3532 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3525 = _3512;
                                _3526 = _3513;
                                _3527 = _3514;
                                _3528 = _3515;
                                _3529 = _3516;
                                _3530 = _3517;
                                _3531 = _3532;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3517;
                        frontier_phi_82_pred_1 = _3516;
                        frontier_phi_82_pred_2 = _3515;
                        frontier_phi_82_pred_3 = _3514;
                        frontier_phi_82_pred_4 = _3513;
                        frontier_phi_82_pred_5 = _3512;
                    }
                    _3155 = frontier_phi_82_pred;
                    _3153 = frontier_phi_82_pred_1;
                    _3151 = frontier_phi_82_pred_2;
                    _3149 = frontier_phi_82_pred_3;
                    _3147 = frontier_phi_82_pred_4;
                    _3145 = frontier_phi_82_pred_5;
                    uint _3311 = _3310 + 1u;
                    if (_3311 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3304 = _3145;
                        _3305 = _3147;
                        _3306 = _3149;
                        _3307 = _3151;
                        _3308 = _3153;
                        _3309 = _3155;
                        _3310 = _3311;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3151;
                frontier_phi_63_64_ladder_1 = _3155;
                frontier_phi_63_64_ladder_2 = _3153;
                frontier_phi_63_64_ladder_3 = _3149;
                frontier_phi_63_64_ladder_4 = _3147;
                frontier_phi_63_64_ladder_5 = _3145;
            }
            else
            {
                frontier_phi_63_64_ladder = _3029;
                frontier_phi_63_64_ladder_1 = _3033;
                frontier_phi_63_64_ladder_2 = _3031;
                frontier_phi_63_64_ladder_3 = _3027;
                frontier_phi_63_64_ladder_4 = _3025;
                frontier_phi_63_64_ladder_5 = _3023;
            }
            _3144 = frontier_phi_63_64_ladder_5;
            _3146 = frontier_phi_63_64_ladder_4;
            _3148 = frontier_phi_63_64_ladder_3;
            _3150 = frontier_phi_63_64_ladder;
            _3152 = frontier_phi_63_64_ladder_2;
            _3154 = frontier_phi_63_64_ladder_1;
        }
        float _3159 = isnan(1.0) ? _897 : (isnan(_897) ? 1.0 : min(_897, 1.0));
        _2956 = (_3159 * _3150) + _2468;
        _2958 = (_3159 * _3152) + _2470;
        _2960 = (_3159 * _3154) + _2472;
        _2962 = ((_3144 * _881) * _3159) + _2806;
        _2964 = ((_3146 * _883) * _3159) + _2808;
        _2966 = ((_3148 * _884) * _3159) + _2810;
    }
    else
    {
        _2956 = _2468;
        _2958 = _2470;
        _2960 = _2472;
        _2962 = _2806;
        _2964 = _2808;
        _2966 = _2810;
    }
    float _4967 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _4978 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _4989 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _2983 = ((isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0))) * (_2956 + ((isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0))) * _897))) + ((_2962 + ((isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0))) * _1736)) * cbPerFrame._m0[3u].x);
    float _2984 = ((isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0))) * (_2958 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _897))) + ((_2964 + ((isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))) * _1736)) * cbPerFrame._m0[3u].x);
    float _2985 = ((isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0))) * (_2960 + ((isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))) * _897))) + ((_2966 + ((isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) * _1736)) * cbPerFrame._m0[3u].x);
    uint _2986 = _250 + 6u;
    float _2994 = _819 / cbSceneParam._m0[86u].x;
    float _2995 = _820 / cbSceneParam._m0[86u].y;
    vec4 _3009 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2994, _2995, (log2((isnan(cbSceneParam._m0[77u].w) ? _741 : (isnan(_741) ? cbSceneParam._m0[77u].w : min(_741, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3011 = _3009.x;
    float _3012 = _3009.y;
    float _3013 = _3009.z;
    float _3014 = _3009.w;
    float _3086;
    float _3088;
    float _3090;
    float _3092;
    if (_741 > cbSceneParam._m0[78u].w)
    {
        float _3048 = isnan(_741) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _741 : min(cbSceneParam._m0[80u].w, _741));
        float _3049 = _3048 / _741;
        float _3060 = _3049 * _792;
        float _3061 = _793 * _3049;
        float _3062 = (-0.0) - _3061;
        float _3064 = _3049 * _794;
        float _3066 = (cbSceneParam._m0[77u].w * _3062) / _3048;
        float _3067 = _3066 + cbSceneParam._m0[79u].w;
        float _3068 = cbSceneParam._m0[79u].w - _3061;
        float _3074 = sqrt(((_3060 * _3060) + (_3061 * _3061)) + (_3064 * _3064));
        float _3077 = (1.0 - (cbSceneParam._m0[77u].w / _3048)) * _3074;
        float _3082 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3084 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3261;
        if (abs((_3062 - _3066) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3261 = ((((_3067 > 0.0) ? exp2(_3082 * _3067) : (2.0 - exp2(_3084 * _3067))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3077;
        }
        else
        {
            float _3205 = 1.0 / cbSceneParam._m0[80u].x;
            float _3206 = isnan(_3068) ? _3067 : (isnan(_3067) ? _3068 : max(_3067, _3068));
            float _3207 = isnan(_3068) ? _3067 : (isnan(_3067) ? _3068 : min(_3067, _3068));
            float _3216 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : min(_3206, 0.0));
            float _3217 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : min(_3207, 0.0));
            _3261 = ((abs(_3074 / _3062) * cbSceneParam._m0[80u].y) * ((((_3216 - _3217) * 2.0) - ((exp2(_3082 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0)))) - exp2(_3082 * (isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0))))) * _3205)) - ((exp2(_3084 * _3216) - exp2(_3084 * _3217)) * _3205))) + (_3077 * cbSceneParam._m0[80u].z);
        }
        vec4 _3263 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2994, _2995, 1.0), 0.0);
        float _3272 = exp2((_3261 * (-1.44269502162933349609375)) * (1.0 - _3263.w));
        float _3273 = log2(_3272);
        float _3289 = log2(_3014);
        _3086 = (exp2(_3289 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].x)) * _3263.x) / cbSceneParam._m0[78u].x)) + _3011;
        _3088 = (exp2(_3289 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].y)) * _3263.y) / cbSceneParam._m0[78u].y)) + _3012;
        _3090 = (exp2(_3289 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].z)) * _3263.z) / cbSceneParam._m0[78u].z)) + _3013;
        _3092 = _3272 * _3014;
    }
    else
    {
        _3086 = _3011;
        _3088 = _3012;
        _3090 = _3013;
        _3092 = _3014;
    }
    bool _3299;
    vec4 _3102;
    vec4 _3124;
    float _3126;
    float _3130;
    float _3131;
    float _3132;
    float _3133;
    bool _3143;
    for (;;)
    {
        _3102 = cbMatDynParam._m0[0u];
        float _3104 = roundEven(_3102.y);
        bool _3105 = _3104 == 3.0;
        float _3106 = log2(_3092);
        float _3113 = exp2(_3106 * cbSceneParam._m0[78u].x) * _2983;
        float _3114 = exp2(_3106 * cbSceneParam._m0[78u].y) * _2984;
        float _3115 = exp2(_3106 * cbSceneParam._m0[78u].z) * _2985;
        float _3122 = _808 + (-0.5);
        _3124 = cbMtdParam._m0[1u];
        _3126 = _3124.y * _3122;
        float _3129 = (_3104 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3130 = _3129 * (_3105 ? _3113 : (_3113 + (cbSceneParam._m0[72u].w * _3086)));
        _3131 = _3129 * (_3105 ? _3114 : (_3114 + (cbSceneParam._m0[72u].w * _3088)));
        _3132 = _3129 * (_3105 ? _3115 : (_3115 + (cbSceneParam._m0[72u].w * _3090)));
        _3133 = _3122 * 0.999000012874603271484375;
        _3143 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3143)
        {
            if ((cbInstanceData._m0[_250 + 7u].x + _3133) < 0.5)
            {
                _3299 = true;
                break;
            }
        }
        uint _3240 = _857 + uint(_3102.w);
        if ((cbInstanceData._m0[_3240].w < 1.0) && ((cbInstanceData._m0[_3240].w + _3133) < 0.5))
        {
            _3299 = true;
            break;
        }
        if ((_3126 + 1.0) < _3124.x)
        {
            _3299 = true;
            break;
        }
        _3299 = false;
        break;
    }
    float _3503;
    if (_3299)
    {
        discard_state = true;
        _3503 = 0.0;
    }
    else
    {
        _3503 = cbInstanceData._m0[_2986].w;
    }
    SV_Target.x = _3130;
    SV_Target.y = _3131;
    SV_Target.z = _3132;
    SV_Target.w = _3503;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2986].w;
    discard_exit();
}


