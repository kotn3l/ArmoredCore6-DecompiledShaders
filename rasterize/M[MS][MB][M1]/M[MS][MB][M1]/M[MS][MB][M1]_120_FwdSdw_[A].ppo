#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1465;
float _4128;
float _4129;
float _4130;
float _4131;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _249 = _248 * _240;
    float _250 = _248 * _241;
    float _251 = _248 * _242;
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _256 = _255 * NORMAL.x;
    float _257 = _255 * NORMAL.y;
    float _258 = _255 * NORMAL.z;
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _263 = _262 * TANGENT.x;
    float _264 = _262 * TANGENT.y;
    float _265 = _262 * TANGENT.z;
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4140 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4151 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4162 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _344 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = _344.x * cbMtdParam._m0[11u].x;
    float _350 = _344.y * cbMtdParam._m0[11u].y;
    float _351 = _344.z * cbMtdParam._m0[11u].z;
    vec4 _370 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _406 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _408 = _406.x;
    float _420 = dot(vec4(_408, _406.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _437 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_408 - _420) * cbMtdParam._m0[24u].y) + _420) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4173 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _438 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
    float _445 = (_438 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349;
    float _446 = (_438 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350;
    float _447 = (_438 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351;
    float _451 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _445;
    float _454 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _446;
    float _457 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _447;
    float _464 = ((_445 - _451) * (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0)))) + _451;
    float _465 = ((_446 - _454) * (isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0)))) + _454;
    float _466 = ((_447 - _457) * (isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0)))) + _457;
    vec4 _484 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _511 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _528 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _530 = _528.x;
    float _531 = _528.y;
    float _532 = _528.z;
    float _541 = ((_511.z - _532) * _438) + _532;
    float _544 = ((((_511.x - _530) * _438) + _530) * 2.0) + (-1.0);
    float _545 = ((((_511.y - _531) * _438) + _531) * 2.0) + (-1.0);
    float _546 = dot(vec2(_544, _545), vec2(_544, _545));
    float _4184 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _551 = sqrt(1.0 - (isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0))));
    float _554 = _544 + ((((_484.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _555 = _545 + ((((_484.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _558 = fma(_551, _256, fma(_555, _263, _554 * _249));
    float _561 = fma(_551, _257, fma(_555, _264, _554 * _250));
    float _564 = fma(_551, _258, fma(_555, _265, _554 * _251));
    float _568 = inversesqrt(dot(vec3(_558, _561, _564), vec3(_558, _561, _564)));
    vec4 _584 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _610 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _612 = _610.x;
    float _613 = 1.0 - _612;
    float _617 = ((_612 - _613) * cbMtdParam._m0[24u].z) + _613;
    float _619 = (cbMtdParam._m0[19u].x + dot(vec4(_568 * _558, _568 * _561, _568 * _564, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_617 * cbMtdParam._m0[21u].z);
    float _4195 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _620 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
    float _622 = (-0.0) - cbMtdParam._m0[24u].x;
    float _624 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _625 = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
    float _632 = _620 - ((_620 * TEXCOORD_8.x) * _625);
    float _633 = _620 - ((_620 * TEXCOORD_8.y) * _625);
    float _634 = _620 - ((_620 * TEXCOORD_8.z) * _625);
    float _641 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _645 = ((isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : min(_641, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _653 = (_645 - (((_617 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _645))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4226 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _654 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _658 = ((_632 * (cbMtdParam._m0[17u].x - _464)) * _654) + _464;
    float _659 = ((_633 * (cbMtdParam._m0[17u].y - _465)) * _654) + _465;
    float _660 = ((_634 * (cbMtdParam._m0[17u].z - _466)) * _654) + _466;
    vec4 _672 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _674 = _672.x;
    float _675 = 1.0 - _674;
    float _700 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_674 - _675) * cbMtdParam._m0[24u].w) + _675) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4237 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _701 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _709 = ((((cbMtdParam._m0[10u].x - _658) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _701) + _658;
    float _710 = ((((cbMtdParam._m0[10u].y - _659) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _701) + _659;
    float _711 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _660)) * _701) + _660;
    vec4 _737 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _739 = _737.x;
    float _757 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _306) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _307) + cbTextureTilingScale._m0[9u].w)).x - _739) * _438) + _739;
    float _761 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _757) * cbMtdParam._m0[19u].z) + _757;
    float _764 = _761 - ((_654 * _632) * _761);
    float _766 = _764 - (_764 * _701);
    float _771 = (((_484.z - _541) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _541;
    vec4 _785 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _792 = (_785.x * 2.0) + (-1.0);
    float _793 = (_785.y * 2.0) + (-1.0);
    float _794 = dot(vec2(_792, _793), vec2(_792, _793));
    float _4248 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _803 = (((_785.z - _771) * _632) * _654) + _771;
    float _806 = ((cbMtdParam._m0[23u].y - _803) * _701) + _803;
    vec4 _825 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _831 = (_825.x * 2.0) + (-1.0);
    float _832 = (_825.y * 2.0) + (-1.0);
    float _833 = dot(vec2(_831, _832), vec2(_831, _832));
    float _4259 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _853 = (((cbMtdParam._m0[21u].x * _554) + ((_792 - _554) * _632)) * _654) + _554;
    float _854 = (((cbMtdParam._m0[21u].x * _555) + ((_793 - _555) * _633)) * _654) + _555;
    float _855 = (((sqrt(1.0 - (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0)))) - _551) * _634) * _654) + _551;
    float _866 = (((_831 - _853) + (_853 * cbMtdParam._m0[22u].z)) * _701) + _853;
    float _867 = (((_832 - _854) + (_854 * cbMtdParam._m0[22u].z)) * _701) + _854;
    float _868 = ((sqrt(1.0 - (isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0)))) - _855) * _701) + _855;
    float _872 = cbMtdParam._m0[22u].x + _584.w;
    float _875 = fma(_868, _256, fma(_867, _263, _866 * _249));
    float _878 = fma(_868, _257, fma(_867, _264, _866 * _250));
    float _881 = fma(_868, _258, fma(_867, _265, _866 * _251));
    float _885 = inversesqrt(dot(vec3(_875, _878, _881), vec3(_875, _878, _881)));
    float _886 = _885 * _875;
    float _887 = _885 * _878;
    float _888 = _885 * _881;
    float _4270 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _889 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
    float _4281 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _4292 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _4303 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _4314 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _4325 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _894 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
    float _908 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _958 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _948);
    float _959 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _948);
    float _960 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _948);
    float _964 = inversesqrt(dot(vec3(_958, _959, _960), vec3(_958, _959, _960)));
    float _965 = _958 * _964;
    float _966 = _959 * _964;
    float _967 = _960 * _964;
    vec4 _972 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _974 = _972.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1146 = sqrt(((_958 * _958) + (_959 * _959)) + (_960 * _960));
        float _1152 = (cbMatDynParam._m0[5u].x * _1146) + cbMatDynParam._m0[5u].y;
        float _4336 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1157 = (cbMatDynParam._m0[5u].z * _1146) + cbMatDynParam._m0[5u].w;
        float _4347 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0))) - _1153)) + _1153) < ((_974 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _985 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _986 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1004 = fma(_888, cbSceneParam._m0[5u].z, fma(_887, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _886));
    float _1007 = fma(_888, cbSceneParam._m0[6u].z, fma(_887, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _886));
    float _1010 = fma(_888, cbSceneParam._m0[7u].z, fma(_887, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _886));
    uint _1023 = _287 + 9u;
    uint _1024 = _1023 + uint(cbMatDynParam._m0[0u].w);
    float _1030 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0)))) * cbInstanceData._m0[_1024].x;
    float _1031 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)))) * cbInstanceData._m0[_1024].y;
    float _1032 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0)))) * cbInstanceData._m0[_1024].z;
    float _4358 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    float _1033 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
    float _4369 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    float _1034 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
    float _4380 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _1035 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
    float _1036 = 1.0 - _894;
    float _1037 = _1033 * _1036;
    float _1038 = _1034 * _1036;
    float _1039 = _1035 * _1036;
    float _1044 = (_1033 + (-0.039999999105930328369140625)) * _894;
    float _1045 = (_1034 + (-0.039999999105930328369140625)) * _894;
    float _1046 = (_1035 + (-0.039999999105930328369140625)) * _894;
    float _1047 = _1044 + 0.039999999105930328369140625;
    float _1049 = _1045 + 0.039999999105930328369140625;
    float _1050 = _1046 + 0.039999999105930328369140625;
    vec4 _1059 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _985, cbSceneParam._m0[86u].y * _986));
    float _1063 = ((isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0))) * TEXCOORD_5.w) * _1059.x;
    float _1064 = dot(vec3(_886, _887, _888), vec3(_965, _966, _967));
    float _1067 = _1064 * 2.0;
    float _1071 = (_1067 * _886) - _965;
    float _1072 = (_1067 * _887) - _966;
    float _1073 = (_1067 * _888) - _967;
    float _1077 = abs(dot(vec3(_965, _966, _967), vec3(_886, _887, _888)));
    float _4391 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1079 = sqrt(_889);
    float _1092 = exp2((_1079 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1079 * 3.0));
    float _1098 = (1.0 - _1092) * ((_1079 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1099 = _1092 * _1079;
    float _1127 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1131 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1135 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1464;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1189 = fma(_1135, cbModelParam._m0[26u].z, fma(_1131, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1127));
        float _1193 = fma(_1135, cbModelParam._m0[27u].z, fma(_1131, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1127));
        float _1197 = fma(_1135, cbModelParam._m0[28u].z, fma(_1131, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1127));
        float _1222 = _1127 + _886;
        float _1223 = _1131 + _887;
        float _1224 = _1135 + _888;
        float _1234 = fma(_1224, cbModelParam._m0[26u].z, fma(_1223, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1222)) - _1189;
        float _1235 = fma(_1224, cbModelParam._m0[27u].z, fma(_1223, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1222)) - _1193;
        float _1236 = fma(_1224, cbModelParam._m0[28u].z, fma(_1223, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1222)) - _1197;
        float _1240 = inversesqrt(dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236)));
        float _1253 = ((_1240 * _1234) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1189 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1240 * _1235) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1193 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1240 * _1236) / cbModelParam._m0[34u].z) + ((((((_1197 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        float _1292 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1258.x + (-0.5));
        float _1294 = _1292 * (_1258.y + (-0.5));
        float _1295 = _1292 * (_1258.z + (-0.5));
        float _1302 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1265.x + (-0.5));
        float _1304 = _1302 * (_1265.y + (-0.5));
        float _1305 = _1302 * (_1265.z + (-0.5));
        float _1312 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1272.x + (-0.5));
        float _1314 = _1312 * (_1272.y + (-0.5));
        float _1315 = _1312 * (_1272.z + (-0.5));
        float _1322 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1279.x + (-0.5));
        float _1324 = _1322 * (_1279.y + (-0.5));
        float _1325 = _1322 * (_1279.z + (-0.5));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = _1293 * 0.5;
        float _1330 = _1303 * 0.5;
        float _1331 = _1313 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1346 = (dot(vec3(_886, _887, _888), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4417 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1356 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _4428 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _4439 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * (_1358 + 1.0))) + _1363) * _1326;
        float _1373 = _1294 * 0.5;
        float _1374 = _1304 * 0.5;
        float _1375 = _1314 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_886, _887, _888), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _4450 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4461 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4472 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0))) * (_1400 + 1.0))) + _1405) * _1327;
        float _1415 = _1295 * 0.5;
        float _1416 = _1305 * 0.5;
        float _1417 = _1315 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_886, _887, _888), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _4483 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4494 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4505 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0))) * (_1442 + 1.0))) + _1447) * _1328;
        _1464 = _1295;
        _1466 = _1294;
        _1467 = _1293;
        _1468 = _1305;
        _1469 = _1304;
        _1470 = _1303;
        _1471 = _1315;
        _1472 = _1314;
        _1473 = _1313;
        _1474 = _1328;
        _1475 = _1327;
        _1476 = _1326;
        _1477 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
    }
    else
    {
        _1464 = _1465;
        _1466 = _1465;
        _1467 = _1465;
        _1468 = _1465;
        _1469 = _1465;
        _1470 = _1465;
        _1471 = _1465;
        _1472 = _1465;
        _1473 = _1465;
        _1474 = _1465;
        _1475 = _1465;
        _1476 = _1465;
        _1477 = 0.0;
        _1478 = 0.0;
        _1479 = 0.0;
    }
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1507 = fma(_1135, cbModelParam._m0[30u].z, fma(_1131, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1127));
        float _1511 = fma(_1135, cbModelParam._m0[31u].z, fma(_1131, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1127));
        float _1515 = fma(_1135, cbModelParam._m0[32u].z, fma(_1131, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1127));
        float _1538 = _1127 + _886;
        float _1539 = _1131 + _887;
        float _1540 = _1135 + _888;
        float _1550 = fma(_1540, cbModelParam._m0[30u].z, fma(_1539, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1538)) - _1507;
        float _1551 = fma(_1540, cbModelParam._m0[31u].z, fma(_1539, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1538)) - _1511;
        float _1552 = fma(_1540, cbModelParam._m0[32u].z, fma(_1539, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1538)) - _1515;
        float _1556 = inversesqrt(dot(vec3(_1550, _1551, _1552), vec3(_1550, _1551, _1552)));
        float _1569 = ((_1556 * _1550) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1507 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1570 = ((_1556 * _1551) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1511 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1571 = ((_1556 * _1552) / cbModelParam._m0[35u].z) + ((((((_1515 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1573 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1569, _1570, _1571), 0.0);
        vec4 _1580 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1569, _1570, _1571), 0.0);
        vec4 _1587 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1569, _1570, _1571), 0.0);
        vec4 _1594 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1569, _1570, _1571), 0.0);
        float _1606 = exp2((_1573.w + (-0.5)) * 20.0) * 2.0;
        float _1607 = _1606 * (_1573.x + (-0.5));
        float _1608 = _1606 * (_1573.y + (-0.5));
        float _1609 = _1606 * (_1573.z + (-0.5));
        float _1616 = exp2((_1580.w + (-0.5)) * 20.0) * 2.0;
        float _1617 = _1616 * (_1580.x + (-0.5));
        float _1618 = _1616 * (_1580.y + (-0.5));
        float _1619 = _1616 * (_1580.z + (-0.5));
        float _1626 = exp2((_1587.w + (-0.5)) * 20.0) * 2.0;
        float _1627 = _1626 * (_1587.x + (-0.5));
        float _1628 = _1626 * (_1587.y + (-0.5));
        float _1629 = _1626 * (_1587.z + (-0.5));
        float _1636 = exp2((_1594.w + (-0.5)) * 20.0) * 2.0;
        float _1637 = _1636 * (_1594.x + (-0.5));
        float _1638 = _1636 * (_1594.y + (-0.5));
        float _1639 = _1636 * (_1594.z + (-0.5));
        float _1640 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1643 = _1607 * 0.5;
        float _1644 = _1617 * 0.5;
        float _1645 = _1627 * 0.5;
        float _1646 = dot(vec3(_1643, _1644, _1645), vec3(_1643, _1644, _1645));
        float _1651 = (_1646 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1646);
        float _1659 = (dot(vec3(_886, _887, _888), vec3(_1651 * _1643, _1651 * _1644, _1651 * _1645)) + 1.0) * 0.5;
        float _4546 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1668 = sqrt(((_1644 * _1644) + (_1643 * _1643)) + (_1645 * _1645)) / (_1640 + 9.9999997473787516355514526367188e-06);
        float _4557 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1669 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
        float _1670 = _1669 * 2.0;
        float _1674 = (1.0 - _1669) / (_1669 + 1.0);
        float _4568 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1675 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
        float _1684 = ((((1.0 - _1675) * (_1670 + 2.0)) * exp2(log2(isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))) * (_1670 + 1.0))) + _1675) * _1640;
        float _1685 = _1608 * 0.5;
        float _1686 = _1618 * 0.5;
        float _1687 = _1628 * 0.5;
        float _1688 = dot(vec3(_1685, _1686, _1687), vec3(_1685, _1686, _1687));
        float _1693 = (_1688 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1688);
        float _1701 = (dot(vec3(_886, _887, _888), vec3(_1693 * _1685, _1693 * _1686, _1693 * _1687)) + 1.0) * 0.5;
        float _4579 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1710 = sqrt(((_1686 * _1686) + (_1685 * _1685)) + (_1687 * _1687)) / (_1641 + 9.9999997473787516355514526367188e-06);
        float _4590 = isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0));
        float _1711 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
        float _1712 = _1711 * 2.0;
        float _1716 = (1.0 - _1711) / (_1711 + 1.0);
        float _4601 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1717 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
        float _1726 = ((((1.0 - _1717) * (_1712 + 2.0)) * exp2(log2(isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))) * (_1712 + 1.0))) + _1717) * _1641;
        float _1727 = _1609 * 0.5;
        float _1728 = _1619 * 0.5;
        float _1729 = _1629 * 0.5;
        float _1730 = dot(vec3(_1727, _1728, _1729), vec3(_1727, _1728, _1729));
        float _1735 = (_1730 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1730);
        float _1743 = (dot(vec3(_886, _887, _888), vec3(_1735 * _1727, _1735 * _1728, _1735 * _1729)) + 1.0) * 0.5;
        float _4612 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1752 = sqrt(((_1728 * _1728) + (_1727 * _1727)) + (_1729 * _1729)) / (_1642 + 9.9999997473787516355514526367188e-06);
        float _4623 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1753 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
        float _1754 = _1753 * 2.0;
        float _1758 = (1.0 - _1753) / (_1753 + 1.0);
        float _4634 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1759 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
        float _1768 = ((((1.0 - _1759) * (_1754 + 2.0)) * exp2(log2(isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0))) * (_1754 + 1.0))) + _1759) * _1642;
        _1776 = _1609;
        _1777 = _1608;
        _1778 = _1607;
        _1779 = _1619;
        _1780 = _1618;
        _1781 = _1617;
        _1782 = _1629;
        _1783 = _1628;
        _1784 = _1627;
        _1785 = _1642;
        _1786 = _1641;
        _1787 = _1640;
        _1788 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)));
        _1789 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0)));
        _1790 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)));
    }
    else
    {
        _1776 = _1465;
        _1777 = _1465;
        _1778 = _1465;
        _1779 = _1465;
        _1780 = _1465;
        _1781 = _1465;
        _1782 = _1465;
        _1783 = _1465;
        _1784 = _1465;
        _1785 = _1465;
        _1786 = _1465;
        _1787 = _1465;
        _1788 = 0.0;
        _1789 = 0.0;
        _1790 = 0.0;
    }
    float _1800 = (cbModelParam._m0[1u].x * (_1788 - _1477)) + _1477;
    float _1801 = (cbModelParam._m0[1u].x * (_1789 - _1478)) + _1478;
    float _1802 = (cbModelParam._m0[1u].x * (_1790 - _1479)) + _1479;
    float _1823 = fma(_1802, cbSceneParam._m0[89u].z, fma(_1801, cbSceneParam._m0[89u].y, _1800 * cbSceneParam._m0[89u].x));
    float _1826 = fma(_1802, cbSceneParam._m0[90u].z, fma(_1801, cbSceneParam._m0[90u].y, _1800 * cbSceneParam._m0[90u].x));
    float _1829 = fma(_1802, cbSceneParam._m0[91u].z, fma(_1801, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1800));
    float _1844 = _1071 * 0.5;
    float _1845 = _1072 * 0.5;
    float _1846 = _1073 * 0.5;
    float _1847 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1778, _1781, _1784, _1787));
    float _1850 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1777, _1780, _1783, _1786));
    float _1853 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1776, _1779, _1782, _1785));
    float _1887;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1860 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1464, _1468, _1471, _1474));
        float _1864 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1466, _1469, _1472, _1475));
        float _1868 = dot(vec4(_1844, _1845, _1846, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1875 = dot(vec4(cbModelParam._m0[39u]), vec4(_1844, _1845, _1846, 1.0));
        _1887 = dot(vec3(isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0)), isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0)), isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1875) ? 0.0 : (isnan(0.0) ? _1875 : max(0.0, _1875))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1887 = 1.0;
    }
    float _1898;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1889 = dot(vec4(cbModelParam._m0[40u]), vec4(_1844, _1845, _1846, 1.0));
        _1898 = dot(vec3(isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0)), isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)), isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1889) ? 0.0 : (isnan(0.0) ? _1889 : max(0.0, _1889))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1898 = 1.0;
    }
    float _1902 = (_1898 * cbModelParam._m0[1u].x) + (_1887 * (1.0 - cbModelParam._m0[1u].x));
    float _1912 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _889);
    float _1913 = isnan(_1912) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1912 : min(cbModelParam._m0[25u].z, _1912));
    float _1994;
    float _1996;
    float _1998;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1961 = fma(_1135, cbModelParam._m0[13u].z, fma(_1131, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1127)) + cbModelParam._m0[13u].w;
        float _1965 = fma(_1135, cbModelParam._m0[14u].z, fma(_1131, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1127)) + cbModelParam._m0[14u].w;
        float _1969 = fma(_1135, cbModelParam._m0[15u].z, fma(_1131, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1127)) + cbModelParam._m0[15u].w;
        float _1972 = fma(_1073, cbModelParam._m0[13u].z, fma(_1072, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1071));
        float _1975 = fma(_1073, cbModelParam._m0[14u].z, fma(_1072, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1071));
        float _1978 = fma(_1073, cbModelParam._m0[15u].z, fma(_1072, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1071));
        float _2006;
        if (_1972 > 0.0)
        {
            _2006 = abs((1.0 - _1961) / _1972);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1961 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2006 = frontier_phi_17_15_ladder;
        }
        float _2178;
        if (_1975 > 0.0)
        {
            _2178 = abs((1.0 - _1965) / _1975);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1965 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2178 = frontier_phi_26_22_ladder;
        }
        float _2473;
        if (_1978 > 0.0)
        {
            _2473 = abs((1.0 - _1969) / _1978);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1978 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1969 + 1.0) / _1978);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2473 = frontier_phi_38_33_ladder;
        }
        float _2475 = isnan(_2178) ? _2006 : (isnan(_2006) ? _2178 : min(_2006, _2178));
        float _2476 = isnan(_2473) ? _2475 : (isnan(_2475) ? _2473 : min(_2475, _2473));
        float _2480 = (_2476 * _1972) + _1961;
        float _2481 = (_2476 * _1975) + _1965;
        float _2482 = (_2476 * _1978) + _1969;
        float _2483 = _2476 * 9.9999997473787516355514526367188e-05;
        float _2485 = (-1.0) - _2483;
        float _2487 = _2483 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2482 > _2487) || ((_2482 < _2485) || ((_2481 > _2487) || ((_2481 < _2485) || ((_2480 < _2485) || (_2480 > _2487))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2627 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2482, cbModelParam._m0[9u].z, fma(_2481, cbModelParam._m0[9u].y, _2480 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2482, cbModelParam._m0[10u].z, fma(_2481, cbModelParam._m0[10u].y, _2480 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2482, cbModelParam._m0[11u].z, fma(_2481, cbModelParam._m0[11u].y, _2480 * cbModelParam._m0[11u].x))), _1913);
            frontier_phi_16_38_ladder = _2627.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2627.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2627.x * cbModelParam._m0[1u].y;
        }
        _1994 = frontier_phi_16_38_ladder_2;
        _1996 = frontier_phi_16_38_ladder_1;
        _1998 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1982 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1071, _1072, _1073), _1913);
        _1994 = _1982.x * cbModelParam._m0[1u].y;
        _1996 = _1982.y * cbModelParam._m0[1u].y;
        _1998 = _1982.z * cbModelParam._m0[1u].y;
    }
    float _2002 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _889);
    float _2003 = isnan(_2002) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2002 : min(cbModelParam._m0[25u].w, _2002));
    float _2093;
    float _2095;
    float _2097;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2057 = fma(_1135, cbModelParam._m0[21u].z, fma(_1131, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1127)) + cbModelParam._m0[21u].w;
        float _2061 = fma(_1135, cbModelParam._m0[22u].z, fma(_1131, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1127)) + cbModelParam._m0[22u].w;
        float _2065 = fma(_1135, cbModelParam._m0[23u].z, fma(_1131, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1127)) + cbModelParam._m0[23u].w;
        float _2068 = fma(_1073, cbModelParam._m0[21u].z, fma(_1072, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1071));
        float _2071 = fma(_1073, cbModelParam._m0[22u].z, fma(_1072, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1071));
        float _2074 = fma(_1073, cbModelParam._m0[23u].z, fma(_1072, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1071));
        float _2183;
        if (_2068 > 0.0)
        {
            _2183 = abs((1.0 - _2057) / _2068);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2057 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2183 = frontier_phi_28_24_ladder;
        }
        float _2500;
        if (_2071 > 0.0)
        {
            _2500 = abs((1.0 - _2061) / _2071);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2061 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2500 = frontier_phi_40_35_ladder;
        }
        float _2838;
        if (_2074 > 0.0)
        {
            _2838 = abs((1.0 - _2065) / _2074);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2074 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2065 + 1.0) / _2074);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2838 = frontier_phi_50_47_ladder;
        }
        float _2840 = isnan(_2500) ? _2183 : (isnan(_2183) ? _2500 : min(_2183, _2500));
        float _2841 = isnan(_2838) ? _2840 : (isnan(_2840) ? _2838 : min(_2840, _2838));
        float _2845 = (_2841 * _2068) + _2057;
        float _2846 = (_2841 * _2071) + _2061;
        float _2847 = (_2841 * _2074) + _2065;
        float _2848 = _2841 * 9.9999997473787516355514526367188e-05;
        float _2849 = (-1.0) - _2848;
        float _2851 = _2848 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2847 > _2851) || ((_2847 < _2849) || ((_2846 > _2851) || ((_2846 < _2849) || ((_2845 < _2849) || (_2845 > _2851))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2969 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2847, cbModelParam._m0[17u].z, fma(_2846, cbModelParam._m0[17u].y, _2845 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2847, cbModelParam._m0[18u].z, fma(_2846, cbModelParam._m0[18u].y, _2845 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2847, cbModelParam._m0[19u].z, fma(_2846, cbModelParam._m0[19u].y, _2845 * cbModelParam._m0[19u].x))), _2003);
            frontier_phi_25_50_ladder = _2969.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2969.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2969.x * cbModelParam._m0[1u].z;
        }
        _2093 = frontier_phi_25_50_ladder_2;
        _2095 = frontier_phi_25_50_ladder_1;
        _2097 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2077 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1071, _1072, _1073), _2003);
        _2093 = _2077.x * cbModelParam._m0[1u].z;
        _2095 = _2077.y * cbModelParam._m0[1u].z;
        _2097 = _2077.z * cbModelParam._m0[1u].z;
    }
    float _2110 = (((_1098 * _1047) + _1099) * _1063) * ((cbModelParam._m0[1u].w * (_2093 - _1994)) + _1994);
    float _2112 = (((_1098 * _1049) + _1099) * _1063) * ((cbModelParam._m0[1u].w * (_2095 - _1996)) + _1996);
    float _2114 = (((_1098 * _1050) + _1099) * _1063) * ((cbModelParam._m0[1u].w * (_2097 - _1998)) + _1998);
    float _2117 = fma(_2114, cbSceneParam._m0[89u].z, fma(_2112, cbSceneParam._m0[89u].y, _2110 * cbSceneParam._m0[89u].x));
    float _2120 = fma(_2114, cbSceneParam._m0[90u].z, fma(_2112, cbSceneParam._m0[90u].y, _2110 * cbSceneParam._m0[90u].x));
    float _2123 = fma(_2114, cbSceneParam._m0[91u].z, fma(_2112, cbSceneParam._m0[91u].y, _2110 * cbSceneParam._m0[91u].x));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2161 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2165 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2169 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2170 = _2157 / _2169;
    float _2171 = _2161 / _2169;
    float _2172 = _2165 / _2169;
    float _2319;
    float _2320;
    float _2321;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2199 = ((uint(_2172 > cbSceneParam._m0[59u].y) + uint(_2172 > cbSceneParam._m0[59u].x)) + uint(_2172 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2200 = _2199 + 43u;
        uint _2208 = _2199 + 44u;
        uint _2216 = _2199 + 45u;
        uint _2224 = _2199 + 46u;
        float _2235 = fma(_2169, cbSceneParam._m0[_2200].w, fma(_2165, cbSceneParam._m0[_2200].z, fma(_2161, cbSceneParam._m0[_2200].y, _2157 * cbSceneParam._m0[_2200].x)));
        float _2239 = fma(_2169, cbSceneParam._m0[_2208].w, fma(_2165, cbSceneParam._m0[_2208].z, fma(_2161, cbSceneParam._m0[_2208].y, _2157 * cbSceneParam._m0[_2208].x)));
        float _2247 = fma(_2169, cbSceneParam._m0[_2224].w, fma(_2165, cbSceneParam._m0[_2224].z, fma(_2161, cbSceneParam._m0[_2224].y, _2157 * cbSceneParam._m0[_2224].x)));
        float _2252 = cbSceneParam._m0[33u].z * _2247;
        float _2254 = cbSceneParam._m0[33u].w * _2247;
        float _2257 = fma(_2169, cbSceneParam._m0[_2216].w, fma(_2165, cbSceneParam._m0[_2216].z, fma(_2161, cbSceneParam._m0[_2216].y, _2157 * cbSceneParam._m0[_2216].x))) / _2247;
        float _2305 = (cbSceneParam._m0[33u].x - sqrt(((_2171 * _2171) + (_2170 * _2170)) + (_2172 * _2172))) * cbSceneParam._m0[33u].y;
        float _4760 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
        float _2312 = (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2252 + _2235) / _2247, (_2254 + _2239) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2254 + _2235) / _2247, (_2239 - _2252) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2235 - _2252) / _2247, (_2239 - _2254) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2235 - _2254) / _2247, (_2252 + _2239) / _2247), _2257), 0.0)).x), vec4(0.25)));
        _2319 = 1.0 - (_2312 * cbSceneParam._m0[34u].x);
        _2320 = 1.0 - (_2312 * cbSceneParam._m0[34u].y);
        _2321 = 1.0 - (_2312 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2319 = 1.0;
        _2320 = 1.0;
        _2321 = 1.0;
    }
    float _2385;
    float _2387;
    float _2389;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2373 = fma(_2169, cbSceneParam._m0[63u].w, fma(_2165, cbSceneParam._m0[63u].z, fma(_2161, cbSceneParam._m0[63u].y, _2157 * cbSceneParam._m0[63u].x)));
        float _2374 = fma(_2169, cbSceneParam._m0[60u].w, fma(_2165, cbSceneParam._m0[60u].z, fma(_2161, cbSceneParam._m0[60u].y, _2157 * cbSceneParam._m0[60u].x))) / _2373;
        float _2375 = fma(_2169, cbSceneParam._m0[61u].w, fma(_2165, cbSceneParam._m0[61u].z, fma(_2161, cbSceneParam._m0[61u].y, _2157 * cbSceneParam._m0[61u].x))) / _2373;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2374 >= cbSceneParam._m0[64u].x) && (_2375 >= cbSceneParam._m0[64u].y)) && (_2374 <= cbSceneParam._m0[64u].z)) && (_2375 <= cbSceneParam._m0[64u].w))
        {
            float _2513 = fma(_2169, cbSceneParam._m0[62u].w, fma(_2165, cbSceneParam._m0[62u].z, fma(_2161, cbSceneParam._m0[62u].y, _2157 * cbSceneParam._m0[62u].x))) / _2373;
            float _2517 = isnan(cbSceneParam._m0[41u].w) ? _2513 : (isnan(_2513) ? cbSceneParam._m0[41u].w : max(_2513, cbSceneParam._m0[41u].w));
            float _2560 = (cbSceneParam._m0[33u].x - sqrt(((_2171 * _2171) + (_2170 * _2170)) + (_2172 * _2172))) * cbSceneParam._m0[33u].y;
            float _4776 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
            float _2567 = (isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2374, cbSceneParam._m0[33u].w + _2375), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2374, _2375 - cbSceneParam._m0[33u].z), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2374 - cbSceneParam._m0[33u].z, _2375 - cbSceneParam._m0[33u].w), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2374 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2375), _2517), 0.0)).x), vec4(0.25)));
            float _2571 = 1.0 - (_2567 * cbSceneParam._m0[34u].x);
            float _2572 = 1.0 - (_2567 * cbSceneParam._m0[34u].y);
            float _2573 = 1.0 - (_2567 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2573) ? _2321 : (isnan(_2321) ? _2573 : min(_2321, _2573));
            frontier_phi_37_36_ladder_1 = isnan(_2572) ? _2320 : (isnan(_2320) ? _2572 : min(_2320, _2572));
            frontier_phi_37_36_ladder_2 = isnan(_2571) ? _2319 : (isnan(_2319) ? _2571 : min(_2319, _2571));
        }
        else
        {
            frontier_phi_37_36_ladder = _2321;
            frontier_phi_37_36_ladder_1 = _2320;
            frontier_phi_37_36_ladder_2 = _2319;
        }
        _2385 = frontier_phi_37_36_ladder_2;
        _2387 = frontier_phi_37_36_ladder_1;
        _2389 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2385 = _2319;
        _2387 = _2320;
        _2389 = _2321;
    }
    uvec4 _2394 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2396 = _2394.x * 14u;
    uint _2397 = _2396 + 13u;
    float _2404 = _1063 + (-1.0);
    float _2409 = (cbLight._m0[_2397].x * _2404) + 1.0;
    float _2410 = (cbLight._m0[_2397].y * _2404) + 1.0;
    float _2411 = (cbLight._m0[_2397].z * _2404) + 1.0;
    float _2412 = (cbLight._m0[_2397].w * _2404) + 1.0;
    uint _2413 = _2396 + 5u;
    float _2419 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
    uint _2423 = _2396 + 4u;
    float _2432 = isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0));
    uint _2436 = _2396 | 1u;
    float _2447 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_886, _887, _888));
    float _2450 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_886, _887, _888));
    float _4812 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _4823 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2455 = (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0))) * 0.3183098733425140380859375;
    float _2457 = (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0))) * 0.3183098733425140380859375;
    float _2464 = ((cbLight._m0[_2413].x * _2419) * _2457) + (((cbLight._m0[_2423].x * _2385) * _2432) * _2455);
    float _2465 = ((_2419 * cbLight._m0[_2413].y) * _2457) + (((cbLight._m0[_2423].y * _2387) * _2432) * _2455);
    float _2466 = ((_2419 * cbLight._m0[_2413].z) * _2457) + (((cbLight._m0[_2423].z * _2389) * _2432) * _2455);
    uvec4 _2470 = floatBitsToUint(cbLight._m0[_2396 + 12u]);
    bool _2472 = _2470.x == 0u;
    float _2574;
    float _2576;
    float _2578;
    if (_2472)
    {
        _2574 = _2464;
        _2576 = _2465;
        _2578 = _2466;
    }
    else
    {
        uint _2582 = _2396 + 6u;
        float _2598 = (dot(vec3(cbLight._m0[_2396 + 2u].xyz), vec3(_886, _887, _888)) * 0.5) + 0.5;
        float _2599 = _2598 * _2598;
        float _4834 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2600 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
        float _2601 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2574 = (((cbLight._m0[_2582].x * 0.3183098733425140380859375) * _2600) * _2601) + _2464;
        _2576 = (((cbLight._m0[_2582].y * 0.3183098733425140380859375) * _2600) * _2601) + _2465;
        _2578 = (((cbLight._m0[_2582].z * 0.3183098733425140380859375) * _2600) * _2601) + _2466;
    }
    bool _2581 = _2470.y == 0u;
    float _2636;
    float _2638;
    float _2640;
    if (_2581)
    {
        _2636 = _2574;
        _2638 = _2576;
        _2640 = _2578;
    }
    else
    {
        uint _2809 = _2396 + 7u;
        float _2825 = (dot(vec3(cbLight._m0[_2396 + 3u].xyz), vec3(_886, _887, _888)) * 0.5) + 0.5;
        float _2826 = _2825 * _2825;
        float _4850 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        float _2827 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
        float _2828 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2636 = (((cbLight._m0[_2809].x * 0.3183098733425140380859375) * _2827) * _2828) + _2574;
        _2638 = (((cbLight._m0[_2809].y * 0.3183098733425140380859375) * _2827) * _2828) + _2576;
        _2640 = (((cbLight._m0[_2809].z * 0.3183098733425140380859375) * _2827) * _2828) + _2578;
    }
    uint _2643 = _2396 + 8u;
    float _2656 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2396].w)) * _889) * 0.949999988079071044921875);
    float _2657 = _2656 * _2656;
    float _2658 = cbLight._m0[_2396].x + _965;
    float _2659 = cbLight._m0[_2396].y + _966;
    float _2660 = cbLight._m0[_2396].z + _967;
    float _2664 = inversesqrt(dot(vec3(_2658, _2659, _2660), vec3(_2658, _2659, _2660)));
    float _2665 = _2664 * _2658;
    float _2666 = _2664 * _2659;
    float _2667 = _2664 * _2660;
    float _2668 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2396].xyz));
    float _4866 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2671 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
    float _4877 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    float _2672 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
    float _2673 = dot(vec3(_886, _887, _888), vec3(_2665, _2666, _2667));
    float _4888 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2676 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
    float _2677 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_2665, _2666, _2667));
    float _4899 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2681 = _2657 * _2657;
    float _2685 = ((_2676 * _2676) * (_2681 + (-1.0))) + 1.0;
    float _2693 = exp2(log2(1.0 - (isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0)))) * 5.0);
    float _2694 = 0.959999978542327880859375 - _1044;
    float _2696 = 0.959999978542327880859375 - _1045;
    float _2697 = 0.959999978542327880859375 - _1046;
    float _2704 = 1.0 - _2657;
    float _2715 = (0.5 / (((_2672 * ((_2671 * _2704) + _2657)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2704) + _2657) * _2671))) * _2671;
    float _4910 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
    float _2717 = (isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0))) * (_2681 / ((_2685 * _2685) * 3.141590118408203125));
    uint _2731 = _2396 + 9u;
    float _2742 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2436].w)) * _889) * 0.949999988079071044921875);
    float _2743 = _2742 * _2742;
    float _2744 = cbLight._m0[_2436].x + _965;
    float _2745 = cbLight._m0[_2436].y + _966;
    float _2746 = cbLight._m0[_2436].z + _967;
    float _2750 = inversesqrt(dot(vec3(_2744, _2745, _2746), vec3(_2744, _2745, _2746)));
    float _2751 = _2750 * _2744;
    float _2752 = _2750 * _2745;
    float _2753 = _2750 * _2746;
    float _2754 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2436].xyz));
    float _4921 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
    float _2757 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
    float _2758 = dot(vec3(_886, _887, _888), vec3(_2751, _2752, _2753));
    float _4932 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
    float _2761 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
    float _2762 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_2751, _2752, _2753));
    float _4943 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
    float _2766 = _2743 * _2743;
    float _2770 = ((_2761 * _2761) * (_2766 + (-1.0))) + 1.0;
    float _2777 = exp2(log2(1.0 - (isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0)))) * 5.0);
    float _2784 = 1.0 - _2743;
    float _2794 = (0.5 / (((_2672 * ((_2757 * _2784) + _2743)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2784) + _2743) * _2757))) * _2757;
    float _4954 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
    float _2796 = (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0))) * (_2766 / ((_2770 * _2770) * 3.141590118408203125));
    float _2806 = (((((_2777 * _2694) + _1047) * cbLight._m0[_2731].x) * _2796) * _2419) + ((((cbLight._m0[_2643].x * _2385) * ((_2693 * _2694) + _1047)) * _2717) * _2432);
    float _2807 = (((((_2777 * _2696) + _1049) * cbLight._m0[_2731].y) * _2796) * _2419) + ((((cbLight._m0[_2643].y * _2387) * ((_2693 * _2696) + _1049)) * _2717) * _2432);
    float _2808 = (((((_2777 * _2697) + _1050) * cbLight._m0[_2731].z) * _2796) * _2419) + ((((cbLight._m0[_2643].z * _2389) * ((_2693 * _2697) + _1050)) * _2717) * _2432);
    float _2864;
    float _2866;
    float _2868;
    if (_2472)
    {
        _2864 = _2806;
        _2866 = _2807;
        _2868 = _2808;
    }
    else
    {
        uint _2870 = _2396 + 2u;
        uint _2874 = _2396 + 10u;
        float _2888 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2870].w)) * _889) * 0.949999988079071044921875);
        float _2889 = _2888 * _2888;
        float _2890 = cbLight._m0[_2870].x + _965;
        float _2891 = cbLight._m0[_2870].y + _966;
        float _2892 = cbLight._m0[_2870].z + _967;
        float _2896 = inversesqrt(dot(vec3(_2890, _2891, _2892), vec3(_2890, _2891, _2892)));
        float _2897 = _2896 * _2890;
        float _2898 = _2896 * _2891;
        float _2899 = _2896 * _2892;
        float _2900 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2870].xyz));
        float _4965 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2903 = isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0));
        float _2904 = dot(vec3(_886, _887, _888), vec3(_2897, _2898, _2899));
        float _4976 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
        float _2907 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
        float _2908 = dot(vec3(cbLight._m0[_2870].xyz), vec3(_2897, _2898, _2899));
        float _4987 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
        float _2912 = _2889 * _2889;
        float _2916 = ((_2907 * _2907) * (_2912 + (-1.0))) + 1.0;
        float _2923 = exp2(log2(1.0 - (isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0)))) * 5.0);
        float _2930 = 1.0 - _2889;
        float _2940 = (0.5 / (((_2672 * ((_2903 * _2930) + _2889)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2930) + _2889) * _2903))) * _2903;
        float _4998 = isnan(0.0) ? _2940 : (isnan(_2940) ? 0.0 : max(_2940, 0.0));
        float _2942 = (isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0))) * (_2912 / ((_2916 * _2916) * 3.141590118408203125));
        float _2943 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2864 = (((((_2923 * _2694) + _1047) * cbLight._m0[_2874].x) * _2942) * _2943) + _2806;
        _2866 = (((((_2923 * _2696) + _1049) * cbLight._m0[_2874].y) * _2942) * _2943) + _2807;
        _2868 = (((((_2923 * _2697) + _1050) * cbLight._m0[_2874].z) * _2942) * _2943) + _2808;
    }
    float _2974;
    float _2976;
    float _2978;
    if (_2581)
    {
        _2974 = _2864;
        _2976 = _2866;
        _2978 = _2868;
    }
    else
    {
        uint _2985 = _2396 + 3u;
        uint _2989 = _2396 + 11u;
        float _3003 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2985].w)) * _889) * 0.949999988079071044921875);
        float _3004 = _3003 * _3003;
        float _3005 = cbLight._m0[_2985].x + _965;
        float _3006 = cbLight._m0[_2985].y + _966;
        float _3007 = cbLight._m0[_2985].z + _967;
        float _3011 = inversesqrt(dot(vec3(_3005, _3006, _3007), vec3(_3005, _3006, _3007)));
        float _3012 = _3011 * _3005;
        float _3013 = _3011 * _3006;
        float _3014 = _3011 * _3007;
        float _3015 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2985].xyz));
        float _5014 = isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0));
        float _3018 = isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0));
        float _3019 = dot(vec3(_886, _887, _888), vec3(_3012, _3013, _3014));
        float _5025 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
        float _3022 = isnan(1.0) ? _5025 : (isnan(_5025) ? 1.0 : min(_5025, 1.0));
        float _3023 = dot(vec3(cbLight._m0[_2985].xyz), vec3(_3012, _3013, _3014));
        float _5036 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
        float _3027 = _3004 * _3004;
        float _3031 = ((_3022 * _3022) * (_3027 + (-1.0))) + 1.0;
        float _3038 = exp2(log2(1.0 - (isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0)))) * 5.0);
        float _3045 = 1.0 - _3004;
        float _3055 = (0.5 / (((_2672 * ((_3018 * _3045) + _3004)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _3045) + _3004) * _3018))) * _3018;
        float _5047 = isnan(0.0) ? _3055 : (isnan(_3055) ? 0.0 : max(_3055, 0.0));
        float _3057 = (isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0))) * (_3027 / ((_3031 * _3031) * 3.141590118408203125));
        float _3058 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2974 = (((((_3038 * _2694) + _1047) * cbLight._m0[_2989].x) * _3057) * _3058) + _2864;
        _2976 = (((((_3038 * _2696) + _1049) * cbLight._m0[_2989].y) * _3057) * _3058) + _2866;
        _2978 = (((((_3038 * _2697) + _1050) * cbLight._m0[_2989].z) * _3057) * _3058) + _2868;
    }
    float _3124;
    float _3126;
    float _3128;
    float _3130;
    float _3132;
    float _3134;
    if (_2394.y == 0u)
    {
        uvec4 _3079 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3080 = _3079.x;
        uint _3091 = uint((float(_3079.y) * floor(float(uint(cbSceneParam._m0[85u].y * _986) / _3080))) + floor(float(uint(cbSceneParam._m0[85u].x * _985) / _3080)));
        float _3101 = (log2(_2172 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3102 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
        uint _3105 = uint(isnan(14.0) ? _3102 : (isnan(_3102) ? 14.0 : min(_3102, 14.0)));
        uvec4 _3110 = texelFetch(g_lightClusterGridBuffer, int(((_3105 << 2u) + (_3091 << 6u)) >> 2u));
        uint _3111 = _3110.x;
        uint _3112 = _3079.z;
        float _3191;
        float _3193;
        float _3195;
        float _3197;
        float _3199;
        float _3201;
        if (((((1u << ((_3112 >> 4u) & 15u)) + 4294967295u) & _3111) == 0u) || ((_3112 & 240u) == 0u))
        {
            _3191 = 0.0;
            _3193 = 0.0;
            _3195 = 0.0;
            _3197 = 0.0;
            _3199 = 0.0;
            _3201 = 0.0;
        }
        else
        {
            float _3192;
            float _3194;
            float _3196;
            float _3198;
            float _3200;
            float _3202;
            float _3343 = 0.0;
            float _3344 = 0.0;
            float _3345 = 0.0;
            float _3346 = 0.0;
            float _3347 = 0.0;
            float _3348 = 0.0;
            uint _3349 = 0u;
            uint _3358;
            bool _3359;
            for (;;)
            {
                _3358 = texelFetch(g_lightClassification, int((((_3105 << 5u) + (_3091 << 9u)) + (_3349 << 2u)) >> 2u)).x;
                _3359 = _3358 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3359)
                {
                    frontier_phi_71_pred = _3348;
                    frontier_phi_71_pred_1 = _3347;
                    frontier_phi_71_pred_2 = _3346;
                    frontier_phi_71_pred_3 = _3345;
                    frontier_phi_71_pred_4 = _3344;
                    frontier_phi_71_pred_5 = _3343;
                }
                else
                {
                    float _3488;
                    float _3489;
                    float _3490;
                    float _3491;
                    float _3492;
                    float _3493;
                    uint _3494;
                    _3488 = _3343;
                    _3489 = _3344;
                    _3490 = _3345;
                    _3491 = _3346;
                    _3492 = _3347;
                    _3493 = _3348;
                    _3494 = _3358;
                    float _3415;
                    float _3416;
                    float _3417;
                    float _3418;
                    float _3419;
                    float _3420;
                    for (;;)
                    {
                        uint _3498 = uint(findLSB(_3494)) + (_3349 << 5u);
                        uint _3495 = (_3494 + 4294967295u) & _3494;
                        uint _3500 = _3498 * 48u;
                        vec4 _3514 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3500)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3500 + 3u)).x));
                        uint _3520 = (_3498 * 48u) + 4u;
                        vec4 _3533 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3520)).x, texelFetch(g_PointLightRenderingBuffer, int(_3520 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3520 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3520 + 3u)).x));
                        uint _3539 = (_3498 * 48u) + 8u;
                        vec3 _3550 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3539)).x, texelFetch(g_PointLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3539 + 2u)).x));
                        float _3554 = _3514.x - _2170;
                        float _3555 = _3514.y - _2171;
                        float _3556 = _3514.z - _2172;
                        float _3557 = dot(vec3(_3554, _3555, _3556), vec3(_3554, _3555, _3556));
                        float _3560 = inversesqrt(_3557);
                        float _3561 = _3560 * _3554;
                        float _3562 = _3560 * _3555;
                        float _3563 = _3560 * _3556;
                        float _3564 = dot(vec3(_1004, _1007, _1010), vec3(_3561, _3562, _3563));
                        float _3569 = 1.0 - (_3557 * _3514.w);
                        float _5073 = isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0));
                        float _3570 = isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0));
                        float _3571 = sqrt(_3557) * _3533.w;
                        float _3574 = 1.39999997615814208984375 / (_3571 + 1.39999997615814208984375);
                        float _3575 = _3574 * _3574;
                        float _3578 = ((1.0 - _3575) * _3564) + _3575;
                        float _3581 = _3571 * _3571;
                        float _3585 = ((isnan(0.0) ? _3578 : (isnan(_3578) ? 0.0 : max(_3578, 0.0))) * _3570) / ((_3581 * 0.699999988079071044921875) + 1.0);
                        float _3589 = (-0.0) - _2170;
                        float _3590 = (-0.0) - _2171;
                        float _3591 = (-0.0) - _2172;
                        float _3595 = inversesqrt(dot(vec3(_3589, _3590, _3591), vec3(_3589, _3590, _3591)));
                        float _3596 = _3595 * _3589;
                        float _3597 = _3595 * _3590;
                        float _3598 = _3595 * _3591;
                        float _3605 = exp2(log2(1.0 / ((_3581 * 3.5) + 5.0)) * 0.25);
                        float _3606 = 1.0 - _1079;
                        float _3613 = sqrt(1.0 - ((1.0 - (_3606 * _3606)) * (1.0 - (_3605 * _3605))));
                        float _3614 = _3613 * _3613;
                        float _3615 = _3614 * _3614;
                        float _3616 = _3596 + _3561;
                        float _3617 = _3597 + _3562;
                        float _3618 = _3598 + _3563;
                        float _3622 = inversesqrt(dot(vec3(_3616, _3617, _3618), vec3(_3616, _3617, _3618)));
                        float _3626 = dot(vec3(_1004, _1007, _1010), vec3(_3596, _3597, _3598));
                        float _5089 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                        float _3629 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                        float _3630 = dot(vec3(_1004, _1007, _1010), vec3(_3622 * _3616, _3622 * _3617, _3622 * _3618));
                        float _5100 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                        float _3633 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
                        float _3637 = ((_3633 * _3633) * (_3615 + (-1.0))) + 1.0;
                        float _3638 = _3574 * _3614;
                        float _3639 = _3638 * _3638;
                        float _3642 = ((1.0 - _3639) * _3564) + _3639;
                        float _5111 = isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0));
                        float _3643 = isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0));
                        float _3644 = 1.0 - _3614;
                        float _3654 = (0.5 / (((_3643 * ((_3629 * _3644) + _3614)) + 9.9999999392252902907785028219223e-09) + (((_3643 * _3644) + _3614) * _3629))) * _3643;
                        float _5122 = isnan(0.0) ? _3654 : (isnan(_3654) ? 0.0 : max(_3654, 0.0));
                        float _3665 = (((_3615 * 3.1415927410125732421875) * (isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0)))) / ((_3637 * _3637) * ((_3581 * 2.1991131305694580078125) + 3.141590118408203125))) * _3570;
                        _3418 = (_3585 * _3533.x) + _3491;
                        _3419 = (_3585 * _3533.y) + _3492;
                        _3420 = (_3585 * _3533.z) + _3493;
                        _3415 = (_3665 * _3550.x) + _3488;
                        _3416 = (_3665 * _3550.y) + _3489;
                        _3417 = (_3665 * _3550.z) + _3490;
                        if (_3495 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3488 = _3415;
                            _3489 = _3416;
                            _3490 = _3417;
                            _3491 = _3418;
                            _3492 = _3419;
                            _3493 = _3420;
                            _3494 = _3495;
                        }
                    }
                    frontier_phi_71_pred = _3420;
                    frontier_phi_71_pred_1 = _3419;
                    frontier_phi_71_pred_2 = _3418;
                    frontier_phi_71_pred_3 = _3417;
                    frontier_phi_71_pred_4 = _3416;
                    frontier_phi_71_pred_5 = _3415;
                }
                _3202 = frontier_phi_71_pred;
                _3200 = frontier_phi_71_pred_1;
                _3198 = frontier_phi_71_pred_2;
                _3196 = frontier_phi_71_pred_3;
                _3194 = frontier_phi_71_pred_4;
                _3192 = frontier_phi_71_pred_5;
                uint _3350 = _3349 + 1u;
                if (_3350 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3343 = _3192;
                    _3344 = _3194;
                    _3345 = _3196;
                    _3346 = _3198;
                    _3347 = _3200;
                    _3348 = _3202;
                    _3349 = _3350;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3191 = _3192;
            _3193 = _3194;
            _3195 = _3196;
            _3197 = _3198;
            _3199 = _3200;
            _3201 = _3202;
        }
        uvec4 _3205 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3206 = _3205.z;
        uint _3208 = (_3206 >> 8u) & 15u;
        float _3311;
        float _3313;
        float _3315;
        float _3317;
        float _3319;
        float _3321;
        if (((4294967295u << _3208) & _3111) == 0u)
        {
            _3311 = _3191;
            _3313 = _3193;
            _3315 = _3195;
            _3317 = _3197;
            _3319 = _3199;
            _3321 = _3201;
        }
        else
        {
            float _3336 = inversesqrt(dot(vec3(_2170, _2171, _2172), vec3(_2170, _2171, _2172)));
            float _3337 = _3336 * _2170;
            float _3338 = _3336 * _2171;
            float _3339 = _3336 * _2172;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3208 < ((_3206 >> 12u) & 15u))
            {
                float _3312;
                float _3314;
                float _3316;
                float _3318;
                float _3320;
                float _3322;
                float _3471 = _3191;
                float _3472 = _3193;
                float _3473 = _3195;
                float _3474 = _3197;
                float _3475 = _3199;
                float _3476 = _3201;
                uint _3477 = _3208;
                uint _3486;
                bool _3487;
                for (;;)
                {
                    _3486 = texelFetch(g_lightClassification, int((((_3105 << 5u) + (_3091 << 9u)) + (_3477 << 2u)) >> 2u)).x;
                    _3487 = _3486 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3487)
                    {
                        frontier_phi_82_pred = _3476;
                        frontier_phi_82_pred_1 = _3475;
                        frontier_phi_82_pred_2 = _3474;
                        frontier_phi_82_pred_3 = _3473;
                        frontier_phi_82_pred_4 = _3472;
                        frontier_phi_82_pred_5 = _3471;
                    }
                    else
                    {
                        float _3679;
                        float _3680;
                        float _3681;
                        float _3682;
                        float _3683;
                        float _3684;
                        float _3972;
                        float _3973;
                        float _3974;
                        float _3975;
                        float _3976;
                        float _3977;
                        float _3692 = _3471;
                        float _3693 = _3472;
                        float _3694 = _3473;
                        float _3695 = _3474;
                        float _3696 = _3475;
                        float _3697 = _3476;
                        uint _3698 = _3486;
                        uint _3699;
                        vec4 _3724;
                        float _3725;
                        vec4 _3740;
                        vec3 _3752;
                        vec4 _3767;
                        vec4 _3782;
                        float _3828;
                        bool _3829;
                        for (;;)
                        {
                            uint _3709 = ((_3477 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3698));
                            _3699 = (_3698 + 4294967295u) & _3698;
                            uint _3711 = _3709 * 40u;
                            _3724 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3711)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 3u)).x));
                            _3725 = _3724.w;
                            uint _3727 = (_3709 * 40u) + 4u;
                            _3740 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3727)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 3u)).x));
                            uint _3742 = (_3709 * 40u) + 8u;
                            _3752 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3742)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 2u)).x));
                            uint _3754 = (_3709 * 40u) + 16u;
                            _3767 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3754)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 3u)).x));
                            uint _3769 = (_3709 * 40u) + 20u;
                            _3782 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3769)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 3u)).x));
                            uint _3784 = (_3709 * 40u) + 24u;
                            vec4 _3797 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3784)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 3u)).x));
                            uint _3803 = (_3709 * 40u) + 28u;
                            vec4 _3816 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3803)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3803 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3803 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3803 + 3u)).x));
                            _3828 = fma(_2172, _3816.z, fma(_2171, _3816.y, _3816.x * _2170)) + _3816.w;
                            _3829 = !((fma(_2172, _3797.z, fma(_2171, _3797.y, _3797.x * _2170)) + _3797.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3829)
                            {
                                float _3856 = _3724.x - _2170;
                                float _3857 = _3724.y - _2171;
                                float _3858 = _3724.z - _2172;
                                float _3859 = dot(vec3(_3856, _3857, _3858), vec3(_3856, _3857, _3858));
                                float _3862 = inversesqrt(_3859);
                                float _3863 = _3862 * _3856;
                                float _3864 = _3862 * _3857;
                                float _3865 = _3862 * _3858;
                                float _3869 = 1.0 - (_3859 / (_3725 * _3725));
                                float _5133 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                                float _3870 = isnan(1.0) ? _5133 : (isnan(_5133) ? 1.0 : min(_5133, 1.0));
                                float _3874 = sqrt(_3859) * _3740.w;
                                float _3876 = 1.39999997615814208984375 / (_3874 + 1.39999997615814208984375);
                                float _3877 = _3876 * _3876;
                                float _3880 = ((1.0 - _3877) * dot(vec3(_3863, _3864, _3865), vec3(_1004, _1007, _1010))) + _3877;
                                float _3883 = _3874 * _3874;
                                float _3887 = (fma(_2172, _3767.z, fma(_2171, _3767.y, _3767.x * _2170)) + _3767.w) / _3828;
                                float _3888 = (fma(_2172, _3782.z, fma(_2171, _3782.y, _3782.x * _2170)) + _3782.w) / _3828;
                                float _3892 = 1.0 - dot(vec2(_3887, _3888), vec2(_3887, _3888));
                                float _5149 = isnan(0.0) ? _3892 : (isnan(_3892) ? 0.0 : max(_3892, 0.0));
                                float _3893 = isnan(1.0) ? _5149 : (isnan(_5149) ? 1.0 : min(_5149, 1.0));
                                float _3894 = _3893 * (((isnan(0.0) ? _3880 : (isnan(_3880) ? 0.0 : max(_3880, 0.0))) * _3870) / ((_3883 * 0.699999988079071044921875) + 1.0));
                                float _3906 = exp2(log2(1.0 / ((_3883 * 3.5) + 5.0)) * 0.25);
                                float _3907 = 1.0 - _1079;
                                float _3914 = sqrt(1.0 - ((1.0 - (_3907 * _3907)) * (1.0 - (_3906 * _3906))));
                                float _3915 = _3914 * _3914;
                                float _3916 = _3915 * _3915;
                                float _3917 = _3863 - _3337;
                                float _3918 = _3864 - _3338;
                                float _3919 = _3865 - _3339;
                                float _3923 = inversesqrt(dot(vec3(_3917, _3918, _3919), vec3(_3917, _3918, _3919)));
                                float _3927 = dot(vec3(_1004, _1007, _1010), vec3((-0.0) - _3337, (-0.0) - _3338, (-0.0) - _3339));
                                float _5160 = isnan(0.0) ? _3927 : (isnan(_3927) ? 0.0 : max(_3927, 0.0));
                                float _3930 = isnan(1.0) ? _5160 : (isnan(_5160) ? 1.0 : min(_5160, 1.0));
                                float _3931 = dot(vec3(_1004, _1007, _1010), vec3(_3923 * _3917, _3923 * _3918, _3923 * _3919));
                                float _5171 = isnan(0.0) ? _3931 : (isnan(_3931) ? 0.0 : max(_3931, 0.0));
                                float _3934 = isnan(1.0) ? _5171 : (isnan(_5171) ? 1.0 : min(_5171, 1.0));
                                float _3938 = ((_3934 * _3934) * (_3916 + (-1.0))) + 1.0;
                                float _3939 = _3876 * _3915;
                                float _3940 = _3939 * _3939;
                                float _3946 = ((1.0 - _3940) * dot(vec3(_1004, _1007, _1010), vec3(_3863, _3864, _3865))) + _3940;
                                float _5182 = isnan(0.0) ? _3946 : (isnan(_3946) ? 0.0 : max(_3946, 0.0));
                                float _3947 = isnan(1.0) ? _5182 : (isnan(_5182) ? 1.0 : min(_5182, 1.0));
                                float _3948 = 1.0 - _3915;
                                float _3958 = (0.5 / (((_3947 * ((_3930 * _3948) + _3915)) + 9.9999999392252902907785028219223e-09) + (((_3947 * _3948) + _3915) * _3930))) * _3947;
                                float _5193 = isnan(0.0) ? _3958 : (isnan(_3958) ? 0.0 : max(_3958, 0.0));
                                float _3968 = (_3893 * _3870) * (((_3916 * 3.1415927410125732421875) * (isnan(1.0) ? _5193 : (isnan(_5193) ? 1.0 : min(_5193, 1.0)))) / ((_3938 * _3938) * ((_3883 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3894 * _3740.z;
                                frontier_phi_88_pred_1 = _3894 * _3740.y;
                                frontier_phi_88_pred_2 = _3894 * _3740.x;
                                frontier_phi_88_pred_3 = _3968 * _3752.z;
                                frontier_phi_88_pred_4 = _3968 * _3752.y;
                                frontier_phi_88_pred_5 = _3968 * _3752.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3977 = frontier_phi_88_pred;
                            _3976 = frontier_phi_88_pred_1;
                            _3975 = frontier_phi_88_pred_2;
                            _3974 = frontier_phi_88_pred_3;
                            _3973 = frontier_phi_88_pred_4;
                            _3972 = frontier_phi_88_pred_5;
                            _3682 = _3975 + _3695;
                            _3683 = _3976 + _3696;
                            _3684 = _3977 + _3697;
                            _3679 = _3972 + _3692;
                            _3680 = _3973 + _3693;
                            _3681 = _3974 + _3694;
                            if (_3699 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3692 = _3679;
                                _3693 = _3680;
                                _3694 = _3681;
                                _3695 = _3682;
                                _3696 = _3683;
                                _3697 = _3684;
                                _3698 = _3699;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3684;
                        frontier_phi_82_pred_1 = _3683;
                        frontier_phi_82_pred_2 = _3682;
                        frontier_phi_82_pred_3 = _3681;
                        frontier_phi_82_pred_4 = _3680;
                        frontier_phi_82_pred_5 = _3679;
                    }
                    _3322 = frontier_phi_82_pred;
                    _3320 = frontier_phi_82_pred_1;
                    _3318 = frontier_phi_82_pred_2;
                    _3316 = frontier_phi_82_pred_3;
                    _3314 = frontier_phi_82_pred_4;
                    _3312 = frontier_phi_82_pred_5;
                    uint _3478 = _3477 + 1u;
                    if (_3478 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3471 = _3312;
                        _3472 = _3314;
                        _3473 = _3316;
                        _3474 = _3318;
                        _3475 = _3320;
                        _3476 = _3322;
                        _3477 = _3478;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3318;
                frontier_phi_63_64_ladder_1 = _3322;
                frontier_phi_63_64_ladder_2 = _3320;
                frontier_phi_63_64_ladder_3 = _3316;
                frontier_phi_63_64_ladder_4 = _3314;
                frontier_phi_63_64_ladder_5 = _3312;
            }
            else
            {
                frontier_phi_63_64_ladder = _3197;
                frontier_phi_63_64_ladder_1 = _3201;
                frontier_phi_63_64_ladder_2 = _3199;
                frontier_phi_63_64_ladder_3 = _3195;
                frontier_phi_63_64_ladder_4 = _3193;
                frontier_phi_63_64_ladder_5 = _3191;
            }
            _3311 = frontier_phi_63_64_ladder_5;
            _3313 = frontier_phi_63_64_ladder_4;
            _3315 = frontier_phi_63_64_ladder_3;
            _3317 = frontier_phi_63_64_ladder;
            _3319 = frontier_phi_63_64_ladder_2;
            _3321 = frontier_phi_63_64_ladder_1;
        }
        float _3326 = isnan(1.0) ? _1063 : (isnan(_1063) ? 1.0 : min(_1063, 1.0));
        _3124 = (_3326 * _3317) + _2636;
        _3126 = (_3326 * _3319) + _2638;
        _3128 = (_3326 * _3321) + _2640;
        _3130 = ((_3311 * _1047) * _3326) + _2974;
        _3132 = ((_3313 * _1049) * _3326) + _2976;
        _3134 = ((_3315 * _1050) * _3326) + _2978;
    }
    else
    {
        _3124 = _2636;
        _3126 = _2638;
        _3128 = _2640;
        _3130 = _2974;
        _3132 = _2976;
        _3134 = _2978;
    }
    float _5209 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _5220 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _5231 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
    float _3151 = ((isnan(1.0) ? _5209 : (isnan(_5209) ? 1.0 : min(_5209, 1.0))) * (_3124 + ((isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))) * _1063))) + ((_3130 + ((isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0))) * _1902)) * cbPerFrame._m0[3u].x);
    float _3152 = ((isnan(1.0) ? _5220 : (isnan(_5220) ? 1.0 : min(_5220, 1.0))) * (_3126 + ((isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))) * _1063))) + ((_3132 + ((isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0))) * _1902)) * cbPerFrame._m0[3u].x);
    float _3153 = ((isnan(1.0) ? _5231 : (isnan(_5231) ? 1.0 : min(_5231, 1.0))) * (_3128 + ((isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))) * _1063))) + ((_3134 + ((isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0))) * _1902)) * cbPerFrame._m0[3u].x);
    uint _3154 = _287 + 6u;
    float _3162 = _985 / cbSceneParam._m0[86u].x;
    float _3163 = _986 / cbSceneParam._m0[86u].y;
    vec4 _3177 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3162, _3163, (log2((isnan(cbSceneParam._m0[77u].w) ? _908 : (isnan(_908) ? cbSceneParam._m0[77u].w : min(_908, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3179 = _3177.x;
    float _3180 = _3177.y;
    float _3181 = _3177.z;
    float _3182 = _3177.w;
    float _3253;
    float _3255;
    float _3257;
    float _3259;
    if (_908 > cbSceneParam._m0[78u].w)
    {
        float _3216 = isnan(_908) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _908 : min(cbSceneParam._m0[80u].w, _908));
        float _3217 = _3216 / _908;
        float _3228 = _3217 * _958;
        float _3229 = _959 * _3217;
        float _3230 = (-0.0) - _3229;
        float _3231 = _3217 * _960;
        float _3233 = (cbSceneParam._m0[77u].w * _3230) / _3216;
        float _3234 = _3233 + cbSceneParam._m0[79u].w;
        float _3235 = cbSceneParam._m0[79u].w - _3229;
        float _3241 = sqrt(((_3228 * _3228) + (_3229 * _3229)) + (_3231 * _3231));
        float _3244 = (1.0 - (cbSceneParam._m0[77u].w / _3216)) * _3241;
        float _3249 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3251 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3428;
        if (abs((_3230 - _3233) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3428 = ((((_3234 > 0.0) ? exp2(_3249 * _3234) : (2.0 - exp2(_3251 * _3234))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3244;
        }
        else
        {
            float _3372 = 1.0 / cbSceneParam._m0[80u].x;
            float _3373 = isnan(_3235) ? _3234 : (isnan(_3234) ? _3235 : max(_3234, _3235));
            float _3374 = isnan(_3235) ? _3234 : (isnan(_3234) ? _3235 : min(_3234, _3235));
            float _3383 = isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : min(_3373, 0.0));
            float _3384 = isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : min(_3374, 0.0));
            _3428 = ((abs(_3241 / _3230) * cbSceneParam._m0[80u].y) * ((((_3383 - _3384) * 2.0) - ((exp2(_3249 * (isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : max(_3373, 0.0)))) - exp2(_3249 * (isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : max(_3374, 0.0))))) * _3372)) - ((exp2(_3251 * _3383) - exp2(_3251 * _3384)) * _3372))) + (_3244 * cbSceneParam._m0[80u].z);
        }
        vec4 _3430 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3162, _3163, 1.0), 0.0);
        float _3439 = exp2((_3428 * (-1.44269502162933349609375)) * (1.0 - _3430.w));
        float _3440 = log2(_3439);
        float _3456 = log2(_3182);
        _3253 = (exp2(_3456 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3440 * cbSceneParam._m0[78u].x)) * _3430.x) / cbSceneParam._m0[78u].x)) + _3179;
        _3255 = (exp2(_3456 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3440 * cbSceneParam._m0[78u].y)) * _3430.y) / cbSceneParam._m0[78u].y)) + _3180;
        _3257 = (exp2(_3456 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3440 * cbSceneParam._m0[78u].z)) * _3430.z) / cbSceneParam._m0[78u].z)) + _3181;
        _3259 = _3439 * _3182;
    }
    else
    {
        _3253 = _3179;
        _3255 = _3180;
        _3257 = _3181;
        _3259 = _3182;
    }
    bool _3466;
    vec4 _3269;
    vec4 _3291;
    float _3293;
    float _3297;
    float _3298;
    float _3299;
    float _3300;
    bool _3310;
    for (;;)
    {
        _3269 = cbMatDynParam._m0[0u];
        float _3271 = roundEven(_3269.y);
        bool _3272 = _3271 == 3.0;
        float _3273 = log2(_3259);
        float _3280 = exp2(_3273 * cbSceneParam._m0[78u].x) * _3151;
        float _3281 = exp2(_3273 * cbSceneParam._m0[78u].y) * _3152;
        float _3282 = exp2(_3273 * cbSceneParam._m0[78u].z) * _3153;
        float _3289 = _974 + (-0.5);
        _3291 = cbMtdParam._m0[1u];
        _3293 = _3291.y * _3289;
        float _3296 = (_3271 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3297 = _3296 * (_3272 ? _3280 : (_3280 + (cbSceneParam._m0[72u].w * _3253)));
        _3298 = _3296 * (_3272 ? _3281 : (_3281 + (cbSceneParam._m0[72u].w * _3255)));
        _3299 = _3296 * (_3272 ? _3282 : (_3282 + (cbSceneParam._m0[72u].w * _3257)));
        _3300 = _3289 * 0.999000012874603271484375;
        _3310 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3310)
        {
            if ((cbInstanceData._m0[_287 + 7u].x + _3300) < 0.5)
            {
                _3466 = true;
                break;
            }
        }
        uint _3407 = _1023 + uint(_3269.w);
        if ((cbInstanceData._m0[_3407].w < 1.0) && ((cbInstanceData._m0[_3407].w + _3300) < 0.5))
        {
            _3466 = true;
            break;
        }
        if ((_3293 + 1.0) < _3291.x)
        {
            _3466 = true;
            break;
        }
        _3466 = false;
        break;
    }
    float _3670;
    if (_3466)
    {
        discard_state = true;
        _3670 = 0.0;
    }
    else
    {
        _3670 = cbInstanceData._m0[_3154].w;
    }
    SV_Target.x = _3297;
    SV_Target.y = _3298;
    SV_Target.z = _3299;
    SV_Target.w = _3670;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3154].w;
    discard_exit();
}


