#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _170 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _171 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _172 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _178 = inversesqrt(dot(vec3(_170, _171, _172), vec3(_170, _171, _172)));
    float _179 = _178 * _170;
    float _180 = _178 * _171;
    float _181 = _178 * _172;
    float _185 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _186 = _185 * NORMAL.x;
    float _187 = _185 * NORMAL.y;
    float _188 = _185 * NORMAL.z;
    float _192 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _193 = _192 * TANGENT.x;
    float _194 = _192 * TANGENT.y;
    float _195 = _192 * TANGENT.z;
    float _206 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _208 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _209 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _760 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _771 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _782 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    uint _219 = uint(roundEven(NORMAL.w)) * 13u;
    uint _224 = _219 + 1u;
    uint _228 = _219 + 2u;
    float _237 = sqrt(((cbInstanceData._m0[_224].x * cbInstanceData._m0[_224].x) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x)) + (cbInstanceData._m0[_228].x * cbInstanceData._m0[_228].x));
    float _238 = _237 * TEXCOORD.z;
    float _239 = _237 * TEXCOORD.w;
    vec4 _252 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _238) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _239) + cbTextureTilingScale._m0[13u].w));
    vec4 _275 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _280 = _275.x * cbMtdParam._m0[9u].x;
    float _281 = _275.y * cbMtdParam._m0[9u].y;
    float _282 = _275.z * cbMtdParam._m0[9u].z;
    float _286 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _252.x) * _280;
    float _289 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _252.y) * _281;
    float _292 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _252.z) * _282;
    float _299 = ((_280 - _286) * (isnan(1.0) ? _760 : (isnan(_760) ? 1.0 : min(_760, 1.0)))) + _286;
    float _300 = ((_281 - _289) * (isnan(1.0) ? _771 : (isnan(_771) ? 1.0 : min(_771, 1.0)))) + _289;
    float _301 = ((_282 - _292) * (isnan(1.0) ? _782 : (isnan(_782) ? 1.0 : min(_782, 1.0)))) + _292;
    vec4 _319 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _238) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _239) + cbTextureTilingScale._m0[20u].w));
    vec4 _345 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _349 = _345.z;
    float _353 = (_345.x * 2.0) + (-1.0);
    float _354 = (_345.y * 2.0) + (-1.0);
    float _355 = dot(vec2(_353, _354), vec2(_353, _354));
    float _793 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _360 = sqrt(1.0 - (isnan(1.0) ? _793 : (isnan(_793) ? 1.0 : min(_793, 1.0))));
    float _365 = _353 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_319.x * 2.0) + (-1.0)));
    float _366 = _354 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_319.y * 2.0) + (-1.0)));
    float _369 = fma(_360, _186, fma(_366, _193, _365 * _179));
    float _372 = fma(_360, _187, fma(_366, _194, _365 * _180));
    float _375 = fma(_360, _188, fma(_366, _195, _365 * _181));
    float _379 = inversesqrt(dot(vec3(_369, _372, _375), vec3(_369, _372, _375)));
    vec4 _416 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _238) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _239) + cbTextureTilingScale._m0[11u].w));
    float _418 = _416.x;
    float _419 = 1.0 - _418;
    float _428 = (cbMtdParam._m0[19u].x + dot(vec4(_379 * _369, _379 * _372, _379 * _375, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_418 - _419) * cbMtdParam._m0[24u].z) + _419) * cbMtdParam._m0[21u].z);
    float _804 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _804 : (isnan(_804) ? 1.0 : min(_804, 1.0));
    float _436 = (_429 * (cbMtdParam._m0[17u].x - _299)) + _299;
    float _437 = (_429 * (cbMtdParam._m0[17u].y - _300)) + _300;
    float _438 = (_429 * (cbMtdParam._m0[17u].z - _301)) + _301;
    vec4 _451 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _453 = _451.x;
    float _455 = _453 - (_453 * _429);
    float _460 = (((_319.z - _349) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _349;
    vec4 _473 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _238) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _239) + cbTextureTilingScale._m0[15u].w));
    float _480 = (_473.x * 2.0) + (-1.0);
    float _481 = (_473.y * 2.0) + (-1.0);
    float _482 = dot(vec2(_480, _481), vec2(_480, _481));
    float _815 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _490 = ((_473.z - _460) * _429) + _460;
    float _500 = ((sqrt(1.0 - (isnan(1.0) ? _815 : (isnan(_815) ? 1.0 : min(_815, 1.0)))) - _360) * _429) + _360;
    float _503 = (((_480 - _365) * _429) + _365) + (cbMtdParam._m0[21u].x * _365);
    float _504 = (((_481 - _366) * _429) + _366) + (cbMtdParam._m0[21u].x * _366);
    float _506 = cbMtdParam._m0[22u].x + _345.w;
    float _509 = fma(_500, _186, fma(_504, _193, _503 * _179));
    float _512 = fma(_500, _187, fma(_504, _194, _503 * _180));
    float _515 = fma(_500, _188, fma(_504, _195, _503 * _181));
    float _519 = inversesqrt(dot(vec3(_509, _512, _515), vec3(_509, _512, _515)));
    float _826 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _837 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _521 = isnan(1.0) ? _837 : (isnan(_837) ? 1.0 : min(_837, 1.0));
    float _848 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _522 = isnan(1.0) ? _848 : (isnan(_848) ? 1.0 : min(_848, 1.0));
    float _859 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _523 = isnan(1.0) ? _859 : (isnan(_859) ? 1.0 : min(_859, 1.0));
    float _870 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _524 = isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0));
    float _881 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _566 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _576 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _566);
    float _577 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _566);
    float _578 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _566);
    vec4 _583 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _585 = _583.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _646 = sqrt(((_576 * _576) + (_577 * _577)) + (_578 * _578));
        float _653 = (cbMatDynParam._m0[5u].x * _646) + cbMatDynParam._m0[5u].y;
        float _892 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
        float _654 = isnan(1.0) ? _892 : (isnan(_892) ? 1.0 : min(_892, 1.0));
        float _658 = (cbMatDynParam._m0[5u].z * _646) + cbMatDynParam._m0[5u].w;
        float _903 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _903 : (isnan(_903) ? 1.0 : min(_903, 1.0))) - _654)) + _654) < ((_585 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _687;
    vec4 _608;
    float _615;
    float _616;
    float _617;
    float _618;
    float _622;
    vec4 _626;
    float _628;
    float _629;
    bool _640;
    for (;;)
    {
        _608 = cbInstanceData._m0[(_219 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _612 = (cbMtdParam._m0[0u].x * _522) * _608.x;
        float _613 = (cbMtdParam._m0[0u].y * _523) * _608.y;
        float _614 = (cbMtdParam._m0[0u].z * _524) * _608.z;
        float _914 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
        _615 = isnan(1.0) ? _914 : (isnan(_914) ? 1.0 : min(_914, 1.0));
        float _925 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
        _616 = isnan(1.0) ? _925 : (isnan(_925) ? 1.0 : min(_925, 1.0));
        float _936 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
        _617 = isnan(1.0) ? _936 : (isnan(_936) ? 1.0 : min(_936, 1.0));
        _618 = _521 * TEXCOORD_5.w;
        _622 = cbInstanceData._m0[_219 + 6u].w;
        float _623 = _585 + (-0.5);
        _626 = cbMtdParam._m0[1u];
        _628 = _626.y * _623;
        _629 = _623 * 0.999000012874603271484375;
        _640 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_640)
        {
            if ((cbInstanceData._m0[_219 + 7u].x + _629) < 0.5)
            {
                _687 = true;
                break;
            }
        }
        if ((_608.w < 1.0) && ((_608.w + _629) < 0.5))
        {
            _687 = true;
            break;
        }
        if ((_628 + 1.0) < _626.x)
        {
            _687 = true;
            break;
        }
        _687 = false;
        break;
    }
    if (_687)
    {
        discard_state = true;
    }
    bool _713 = cbMtdParam._m0[1u].z != 0.0;
    float _714 = _713 ? _622 : 0.0;
    SV_Target.x = ((_509 * 0.5) * _519) + 0.500488758087158203125;
    SV_Target.y = ((_512 * 0.5) * _519) + 0.500488758087158203125;
    SV_Target.z = ((_515 * 0.5) * _519) + 0.500488758087158203125;
    SV_Target.w = _714;
    SV_Target_1.x = isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0));
    SV_Target_1.y = isnan(1.0) ? _826 : (isnan(_826) ? 1.0 : min(_826, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _713 ? _622 : _618;
    SV_Target_2.x = _615;
    SV_Target_2.y = _616;
    SV_Target_2.z = _617;
    SV_Target_2.w = _713 ? _622 : (float(floatBitsToUint(cbInstanceData._m0[_219 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _714;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _714;
    discard_exit();
}


