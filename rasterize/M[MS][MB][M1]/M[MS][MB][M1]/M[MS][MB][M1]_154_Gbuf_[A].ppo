#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _177 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _178 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _179 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_177, _178, _179), vec3(_177, _178, _179)));
    float _186 = _185 * _177;
    float _187 = _185 * _178;
    float _188 = _185 * _179;
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _193 = _192 * NORMAL.x;
    float _194 = _192 * NORMAL.y;
    float _195 = _192 * NORMAL.z;
    float _199 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _200 = _199 * TANGENT.x;
    float _201 = _199 * TANGENT.y;
    float _202 = _199 * TANGENT.z;
    uint _205 = uint(roundEven(NORMAL.w)) * 13u;
    uint _211 = _205 + 1u;
    uint _215 = _205 + 2u;
    float _224 = sqrt(((cbInstanceData._m0[_211].x * cbInstanceData._m0[_211].x) + (cbInstanceData._m0[_205].x * cbInstanceData._m0[_205].x)) + (cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x));
    float _225 = _224 * TEXCOORD.z;
    float _226 = _224 * TEXCOORD.w;
    vec4 _246 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _252 = _246.x * cbMtdParam._m0[11u].x;
    float _253 = _246.y * cbMtdParam._m0[11u].y;
    float _254 = _246.z * cbMtdParam._m0[11u].z;
    vec4 _273 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _225) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _226) + cbTextureTilingScale._m0[5u].w));
    vec4 _312 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _314 = _312.x;
    float _327 = dot(vec4(_314, _312.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _344 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_314 - _327) * cbMtdParam._m0[24u].y) + _327) * cbMtdParam._m0[23u].x))) + 1.0;
    float _895 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _345 = isnan(1.0) ? _895 : (isnan(_895) ? 1.0 : min(_895, 1.0));
    float _352 = (_345 * ((_273.x * cbMtdParam._m0[12u].x) - _252)) + _252;
    float _353 = (_345 * ((_273.y * cbMtdParam._m0[12u].y) - _253)) + _253;
    float _354 = (_345 * ((_273.z * cbMtdParam._m0[12u].z) - _254)) + _254;
    vec4 _373 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _225) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _226) + cbTextureTilingScale._m0[14u].w));
    vec4 _393 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _225) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _226) + cbTextureTilingScale._m0[4u].w));
    vec4 _410 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _412 = _410.x;
    float _413 = _410.y;
    float _414 = _410.z;
    float _423 = ((_393.z - _414) * _345) + _414;
    float _426 = ((((_393.x - _412) * _345) + _412) * 2.0) + (-1.0);
    float _428 = ((((_393.y - _413) * _345) + _413) * 2.0) + (-1.0);
    float _429 = dot(vec2(_426, _428), vec2(_426, _428));
    float _906 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _434 = sqrt(1.0 - (isnan(1.0) ? _906 : (isnan(_906) ? 1.0 : min(_906, 1.0))));
    vec4 _450 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _462 = (((_450.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _426;
    float _463 = (((_450.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _428;
    float _466 = fma(_434, _193, fma(_463, _200, _462 * _186));
    float _469 = fma(_434, _194, fma(_463, _201, _462 * _187));
    float _472 = fma(_434, _195, fma(_463, _202, _462 * _188));
    float _476 = inversesqrt(dot(vec3(_466, _469, _472), vec3(_466, _469, _472)));
    vec4 _503 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _225) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _226) + cbTextureTilingScale._m0[11u].w));
    float _505 = _503.x;
    float _506 = 1.0 - _505;
    float _510 = ((_505 - _506) * cbMtdParam._m0[24u].z) + _506;
    float _512 = (cbMtdParam._m0[19u].x + dot(vec4(_476 * _466, _476 * _469, _476 * _472, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_510 * cbMtdParam._m0[21u].z);
    float _917 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _513 = isnan(1.0) ? _917 : (isnan(_917) ? 1.0 : min(_917, 1.0));
    float _528 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_510 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _928 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _529 = isnan(1.0) ? _928 : (isnan(_928) ? 1.0 : min(_928, 1.0));
    float _533 = ((_513 * ((_373.x * cbMtdParam._m0[18u].x) - _352)) * _529) + _352;
    float _534 = ((_513 * ((_373.y * cbMtdParam._m0[18u].y) - _353)) * _529) + _353;
    float _535 = ((_513 * ((_373.z * cbMtdParam._m0[18u].z) - _354)) * _529) + _354;
    vec4 _547 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _561 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _563 = _561.x;
    float _581 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _225) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _226) + cbTextureTilingScale._m0[9u].w)).x - _563) * _345) + _563;
    float _585 = ((_547.x - _581) * cbMtdParam._m0[19u].z) + _581;
    float _588 = _585 - ((_529 * _513) * _585);
    float _592 = (cbMtdParam._m0[19u].w * (_450.z - _423)) + _423;
    vec4 _605 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _225) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _226) + cbTextureTilingScale._m0[15u].w));
    float _612 = (_605.x * 2.0) + (-1.0);
    float _613 = (_605.y * 2.0) + (-1.0);
    float _614 = dot(vec2(_612, _613), vec2(_612, _613));
    float _939 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _623 = (((_605.z - _592) * _513) * _529) + _592;
    float _638 = (((cbMtdParam._m0[21u].x * _462) + ((_612 - _462) * _513)) * _529) + _462;
    float _639 = (((cbMtdParam._m0[21u].x * _463) + ((_613 - _463) * _513)) * _529) + _463;
    float _640 = (((sqrt(1.0 - (isnan(1.0) ? _939 : (isnan(_939) ? 1.0 : min(_939, 1.0)))) - _434) * _513) * _529) + _434;
    float _645 = cbMtdParam._m0[22u].x + _450.w;
    float _648 = fma(_640, _193, fma(_639, _200, _638 * _186));
    float _651 = fma(_640, _194, fma(_639, _201, _638 * _187));
    float _654 = fma(_640, _195, fma(_639, _202, _638 * _188));
    float _658 = inversesqrt(dot(vec3(_648, _651, _654), vec3(_648, _651, _654)));
    float _950 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _961 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _660 = isnan(1.0) ? _961 : (isnan(_961) ? 1.0 : min(_961, 1.0));
    float _972 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _661 = isnan(1.0) ? _972 : (isnan(_972) ? 1.0 : min(_972, 1.0));
    float _983 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _662 = isnan(1.0) ? _983 : (isnan(_983) ? 1.0 : min(_983, 1.0));
    float _994 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _663 = isnan(1.0) ? _994 : (isnan(_994) ? 1.0 : min(_994, 1.0));
    float _1005 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _705 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _715 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _705);
    float _716 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _705);
    float _717 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _705);
    vec4 _722 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _724 = _722.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _784 = sqrt(((_715 * _715) + (_716 * _716)) + (_717 * _717));
        float _790 = (cbMatDynParam._m0[5u].x * _784) + cbMatDynParam._m0[5u].y;
        float _1016 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
        float _791 = isnan(1.0) ? _1016 : (isnan(_1016) ? 1.0 : min(_1016, 1.0));
        float _795 = (cbMatDynParam._m0[5u].z * _784) + cbMatDynParam._m0[5u].w;
        float _1027 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1027 : (isnan(_1027) ? 1.0 : min(_1027, 1.0))) - _791)) + _791) < ((_724 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _822;
    vec4 _746;
    float _753;
    float _754;
    float _755;
    float _756;
    float _760;
    vec4 _764;
    float _766;
    float _767;
    bool _778;
    for (;;)
    {
        _746 = cbInstanceData._m0[(_205 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _750 = (cbMtdParam._m0[0u].x * _661) * _746.x;
        float _751 = (cbMtdParam._m0[0u].y * _662) * _746.y;
        float _752 = (cbMtdParam._m0[0u].z * _663) * _746.z;
        float _1038 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        _753 = isnan(1.0) ? _1038 : (isnan(_1038) ? 1.0 : min(_1038, 1.0));
        float _1049 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
        _754 = isnan(1.0) ? _1049 : (isnan(_1049) ? 1.0 : min(_1049, 1.0));
        float _1060 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
        _755 = isnan(1.0) ? _1060 : (isnan(_1060) ? 1.0 : min(_1060, 1.0));
        _756 = _660 * TEXCOORD_5.w;
        _760 = cbInstanceData._m0[_205 + 6u].w;
        float _761 = _724 + (-0.5);
        _764 = cbMtdParam._m0[1u];
        _766 = _764.y * _761;
        _767 = _761 * 0.999000012874603271484375;
        _778 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_778)
        {
            if ((cbInstanceData._m0[_205 + 7u].x + _767) < 0.5)
            {
                _822 = true;
                break;
            }
        }
        if ((_746.w < 1.0) && ((_746.w + _767) < 0.5))
        {
            _822 = true;
            break;
        }
        if ((_766 + 1.0) < _764.x)
        {
            _822 = true;
            break;
        }
        _822 = false;
        break;
    }
    if (_822)
    {
        discard_state = true;
    }
    bool _848 = cbMtdParam._m0[1u].z != 0.0;
    float _849 = _848 ? _760 : 0.0;
    SV_Target.x = ((_648 * 0.5) * _658) + 0.500488758087158203125;
    SV_Target.y = ((_651 * 0.5) * _658) + 0.500488758087158203125;
    SV_Target.z = ((_654 * 0.5) * _658) + 0.500488758087158203125;
    SV_Target.w = _849;
    SV_Target_1.x = isnan(1.0) ? _1005 : (isnan(_1005) ? 1.0 : min(_1005, 1.0));
    SV_Target_1.y = isnan(1.0) ? _950 : (isnan(_950) ? 1.0 : min(_950, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _848 ? _760 : _756;
    SV_Target_2.x = _753;
    SV_Target_2.y = _754;
    SV_Target_2.z = _755;
    SV_Target_2.w = _848 ? _760 : (float(floatBitsToUint(cbInstanceData._m0[_205 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _849;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _849;
    discard_exit();
}


