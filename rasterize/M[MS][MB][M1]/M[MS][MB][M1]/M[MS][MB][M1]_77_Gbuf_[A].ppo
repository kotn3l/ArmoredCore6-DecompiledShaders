#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 18) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_28;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _191 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _192 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _193 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _199 = inversesqrt(dot(vec3(_191, _192, _193), vec3(_191, _192, _193)));
    float _206 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _207 = _206 * NORMAL.x;
    float _208 = _206 * NORMAL.y;
    float _209 = _206 * NORMAL.z;
    float _213 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _219 = uint(roundEven(NORMAL.w)) * 13u;
    uint _224 = _219 + 1u;
    uint _228 = _219 + 2u;
    float _237 = sqrt(((cbInstanceData._m0[_224].x * cbInstanceData._m0[_224].x) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x)) + (cbInstanceData._m0[_228].x * cbInstanceData._m0[_228].x));
    float _238 = _237 * TEXCOORD.z;
    float _239 = _237 * TEXCOORD.w;
    vec4 _259 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _265 = _259.x * cbMtdParam._m0[11u].x;
    float _266 = _259.y * cbMtdParam._m0[11u].y;
    float _267 = _259.z * cbMtdParam._m0[11u].z;
    vec4 _286 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _238) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _239) + cbTextureTilingScale._m0[5u].w));
    vec4 _324 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _326 = _324.x;
    float _339 = dot(vec4(_326, _324.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _356 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_326 - _339) * cbMtdParam._m0[24u].y) + _339) * cbMtdParam._m0[23u].x))) + 1.0;
    float _928 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _928 : (isnan(_928) ? 1.0 : min(_928, 1.0));
    float _364 = (_357 * ((_286.x * cbMtdParam._m0[12u].x) - _265)) + _265;
    float _365 = (_357 * ((_286.y * cbMtdParam._m0[12u].y) - _266)) + _266;
    float _366 = (_357 * ((_286.z * cbMtdParam._m0[12u].z) - _267)) + _267;
    vec4 _379 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _238) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _239) + cbTextureTilingScale._m0[4u].w));
    vec4 _396 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _398 = _396.x;
    float _399 = _396.y;
    float _400 = _396.z;
    float _409 = ((_379.z - _400) * _357) + _400;
    float _412 = ((((_379.x - _398) * _357) + _398) * 2.0) + (-1.0);
    float _414 = ((((_379.y - _399) * _357) + _399) * 2.0) + (-1.0);
    float _415 = dot(vec2(_412, _414), vec2(_412, _414));
    float _939 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _420 = sqrt(1.0 - (isnan(1.0) ? _939 : (isnan(_939) ? 1.0 : min(_939, 1.0))));
    vec4 _436 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _448 = (((_436.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _412;
    float _449 = (((_436.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _414;
    vec4 _461 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _238) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _239) + cbTextureTilingScale._m0[19u].w));
    float _463 = _461.x;
    float _464 = 1.0 - _463;
    float _492 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_463 - _464) * cbMtdParam._m0[24u].w) + _464) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _950 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _493 = isnan(1.0) ? _950 : (isnan(_950) ? 1.0 : min(_950, 1.0));
    float _501 = ((((cbMtdParam._m0[10u].x - _364) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _493) + _364;
    float _502 = ((((cbMtdParam._m0[10u].y - _365) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _493) + _365;
    float _503 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _366)) * _493) + _366;
    vec4 _515 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _529 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _531 = _529.x;
    float _549 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _238) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _239) + cbTextureTilingScale._m0[9u].w)).x - _531) * _357) + _531;
    float _553 = ((_515.x - _549) * cbMtdParam._m0[19u].z) + _549;
    float _555 = _553 - (_553 * _493);
    float _559 = (cbMtdParam._m0[19u].w * (_436.z - _409)) + _409;
    float _563 = ((cbMtdParam._m0[23u].y - _559) * _493) + _559;
    vec4 _582 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _238) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _239) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _584 = _582.x;
    float _585 = _582.y;
    float _589 = dot(vec4(cbMtdParam._m0[29u].yzw, 0.0), vec4(_207, _208, _209, 0.0));
    vec4 _604 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_28, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _238) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _239) + cbTextureTilingScale._m0[18u].w));
    float _606 = _604.x;
    float _611 = fract(_604.w + cbPerFrame._m0[22u].x);
    float _613 = (1.0 - _611) * _606;
    float _618 = ((_611 + (-1.0)) + _606) * 9.0;
    float _620 = ((_606 + (-1.0)) + _611) * 9.0;
    float _621 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _622 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _636 = (_613 * ((_604.y * 2.0) + (-1.0))) * sin((isnan(3.0) ? _621 : (isnan(_621) ? 3.0 : min(_621, 3.0))) * 3.1415927410125732421875);
    float _638 = (_613 * ((_604.z * 2.0) + (-1.0))) * sin((isnan(3.0) ? _622 : (isnan(_622) ? 3.0 : min(_622, 3.0))) * 3.1415927410125732421875);
    float _642 = inversesqrt(dot(vec3(_636, _638, 1.0), vec3(_636, _638, 1.0)));
    float _658 = (((((0.5 - _584) + ((_636 * 0.5) * _642)) * _589) + _584) * 2.0) + (-1.0);
    float _659 = (((((0.5 - _585) + ((_642 * 0.5) * _638)) * _589) + _585) * 2.0) + (-1.0);
    float _660 = dot(vec2(_658, _659), vec2(_658, _659));
    float _981 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _676 = ((((cbMtdParam._m0[22u].z * _448) - _448) + _658) * _493) + _448;
    float _677 = ((((cbMtdParam._m0[22u].z * _449) - _449) + _659) * _493) + _449;
    float _678 = (_493 * (sqrt(1.0 - (isnan(1.0) ? _981 : (isnan(_981) ? 1.0 : min(_981, 1.0)))) - _420)) + _420;
    float _680 = cbMtdParam._m0[22u].x + _436.w;
    float _683 = fma(_678, _207, fma(_677, _213 * TANGENT.x, (_199 * _191) * _676));
    float _686 = fma(_678, _208, fma(_677, _213 * TANGENT.y, (_199 * _192) * _676));
    float _689 = fma(_678, _209, fma(_677, _213 * TANGENT.z, (_199 * _193) * _676));
    float _693 = inversesqrt(dot(vec3(_683, _686, _689), vec3(_683, _686, _689)));
    float _992 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _1003 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _695 = isnan(1.0) ? _1003 : (isnan(_1003) ? 1.0 : min(_1003, 1.0));
    float _1014 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _696 = isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0));
    float _1025 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _697 = isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0));
    float _1036 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _698 = isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0));
    float _1047 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _739 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _749 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _739);
    float _750 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _739);
    float _751 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _739);
    vec4 _756 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _758 = _756.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _818 = sqrt(((_749 * _749) + (_750 * _750)) + (_751 * _751));
        float _824 = (cbMatDynParam._m0[5u].x * _818) + cbMatDynParam._m0[5u].y;
        float _1058 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
        float _825 = isnan(1.0) ? _1058 : (isnan(_1058) ? 1.0 : min(_1058, 1.0));
        float _829 = (cbMatDynParam._m0[5u].z * _818) + cbMatDynParam._m0[5u].w;
        float _1069 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1069 : (isnan(_1069) ? 1.0 : min(_1069, 1.0))) - _825)) + _825) < ((_758 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _855;
    vec4 _780;
    float _787;
    float _788;
    float _789;
    float _790;
    float _794;
    vec4 _798;
    float _800;
    float _801;
    bool _812;
    for (;;)
    {
        _780 = cbInstanceData._m0[(_219 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _784 = (cbMtdParam._m0[0u].x * _696) * _780.x;
        float _785 = (cbMtdParam._m0[0u].y * _697) * _780.y;
        float _786 = (cbMtdParam._m0[0u].z * _698) * _780.z;
        float _1080 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
        _787 = isnan(1.0) ? _1080 : (isnan(_1080) ? 1.0 : min(_1080, 1.0));
        float _1091 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
        _788 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
        float _1102 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
        _789 = isnan(1.0) ? _1102 : (isnan(_1102) ? 1.0 : min(_1102, 1.0));
        _790 = _695 * TEXCOORD_5.w;
        _794 = cbInstanceData._m0[_219 + 6u].w;
        float _795 = _758 + (-0.5);
        _798 = cbMtdParam._m0[1u];
        _800 = _798.y * _795;
        _801 = _795 * 0.999000012874603271484375;
        _812 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_812)
        {
            if ((cbInstanceData._m0[_219 + 7u].x + _801) < 0.5)
            {
                _855 = true;
                break;
            }
        }
        if ((_780.w < 1.0) && ((_780.w + _801) < 0.5))
        {
            _855 = true;
            break;
        }
        if ((_800 + 1.0) < _798.x)
        {
            _855 = true;
            break;
        }
        _855 = false;
        break;
    }
    if (_855)
    {
        discard_state = true;
    }
    bool _881 = cbMtdParam._m0[1u].z != 0.0;
    float _882 = _881 ? _794 : 0.0;
    SV_Target.x = ((_683 * 0.5) * _693) + 0.500488758087158203125;
    SV_Target.y = ((_686 * 0.5) * _693) + 0.500488758087158203125;
    SV_Target.z = ((_689 * 0.5) * _693) + 0.500488758087158203125;
    SV_Target.w = _882;
    SV_Target_1.x = isnan(1.0) ? _1047 : (isnan(_1047) ? 1.0 : min(_1047, 1.0));
    SV_Target_1.y = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _881 ? _794 : _790;
    SV_Target_2.x = _787;
    SV_Target_2.y = _788;
    SV_Target_2.z = _789;
    SV_Target_2.w = _881 ? _794 : (float(floatBitsToUint(cbInstanceData._m0[_219 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _882;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _882;
    discard_exit();
}


