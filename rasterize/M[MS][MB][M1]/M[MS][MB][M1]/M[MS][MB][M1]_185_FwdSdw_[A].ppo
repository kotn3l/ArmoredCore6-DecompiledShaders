#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1435;
float _4098;
float _4099;
float _4100;
float _4101;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4110 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _4121 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _4132 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _282 = uint(roundEven(NORMAL.w)) * 13u;
    uint _287 = _282 + 1u;
    uint _291 = _282 + 2u;
    float _300 = sqrt(((cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x) + (cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x)) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x));
    float _301 = _300 * TEXCOORD.z;
    float _302 = _300 * TEXCOORD.w;
    vec4 _315 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _301) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _302) + cbTextureTilingScale._m0[13u].w));
    vec4 _339 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _344 = _339.x * cbMtdParam._m0[11u].x;
    float _345 = _339.y * cbMtdParam._m0[11u].y;
    float _346 = _339.z * cbMtdParam._m0[11u].z;
    vec4 _365 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _301) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _302) + cbTextureTilingScale._m0[5u].w));
    vec4 _402 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _404 = _402.x;
    float _416 = dot(vec4(_404, _402.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _433 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_404 - _416) * cbMtdParam._m0[24u].y) + _416) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4143 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _434 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
    float _441 = (_434 * ((_365.x * cbMtdParam._m0[12u].x) - _344)) + _344;
    float _442 = (_434 * ((_365.y * cbMtdParam._m0[12u].y) - _345)) + _345;
    float _443 = (_434 * ((_365.z * cbMtdParam._m0[12u].z) - _346)) + _346;
    vec4 _460 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _301) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _302) + cbTextureTilingScale._m0[3u].w));
    vec4 _480 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _482 = _480.x;
    float _492 = dot(vec4(_482, _480.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _506 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_482 - _492) * cbMtdParam._m0[24u].y) + _492) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4154 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _507 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
    float _514 = (_507 * ((_460.x * cbMtdParam._m0[13u].x) - _441)) + _441;
    float _515 = (_507 * ((_460.y * cbMtdParam._m0[13u].y) - _442)) + _442;
    float _516 = (_507 * ((_460.z * cbMtdParam._m0[13u].z) - _443)) + _443;
    float _520 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _315.x) * _514;
    float _523 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _315.y) * _515;
    float _526 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _315.z) * _516;
    float _533 = ((_514 - _520) * (isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0)))) + _520;
    float _534 = ((_515 - _523) * (isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0)))) + _523;
    float _535 = ((_516 - _526) * (isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0)))) + _526;
    vec4 _552 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _301) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _302) + cbTextureTilingScale._m0[20u].w));
    vec4 _575 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _301) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _302) + cbTextureTilingScale._m0[4u].w));
    vec4 _592 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _594 = _592.x;
    float _595 = _592.y;
    float _596 = _592.z;
    float _603 = ((_575.x - _594) * _434) + _594;
    float _604 = ((_575.y - _595) * _434) + _595;
    float _605 = ((_575.z - _596) * _434) + _596;
    vec4 _617 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _301) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _302) + cbTextureTilingScale._m0[2u].w));
    float _630 = ((_617.z - _605) * _507) + _605;
    float _633 = ((((_617.x - _603) * _507) + _603) * 2.0) + (-1.0);
    float _634 = ((((_617.y - _604) * _507) + _604) * 2.0) + (-1.0);
    float _635 = dot(vec2(_633, _634), vec2(_633, _634));
    float _4165 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _640 = sqrt(1.0 - (isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0))));
    vec4 _654 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _679 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _301) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _302) + cbTextureTilingScale._m0[11u].w));
    float _681 = _679.x;
    float _682 = 1.0 - _681;
    float _695 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_681 - _682) * cbMtdParam._m0[24u].z) + _682) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4176 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _696 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
    float _703 = (_696 * (cbMtdParam._m0[17u].x - _533)) + _533;
    float _704 = (_696 * (cbMtdParam._m0[17u].y - _534)) + _534;
    float _705 = (_696 * (cbMtdParam._m0[17u].z - _535)) + _535;
    vec4 _717 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _731 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _733 = _731.x;
    float _751 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _301) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _302) + cbTextureTilingScale._m0[9u].w)).x - _733) * _434) + _733;
    float _768 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _301) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _302) + cbTextureTilingScale._m0[21u].w)).x - _751) * _507) + _751;
    float _772 = ((_717.x - _768) * cbMtdParam._m0[19u].z) + _768;
    float _774 = _772 - (_772 * _696);
    float _779 = (((_552.z - _630) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _630;
    float _783 = ((_654.z - _779) * cbMtdParam._m0[19u].w) + _779;
    vec4 _796 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _301) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _302) + cbTextureTilingScale._m0[15u].w));
    float _803 = (_796.x * 2.0) + (-1.0);
    float _804 = (_796.y * 2.0) + (-1.0);
    float _805 = dot(vec2(_803, _804), vec2(_803, _804));
    float _4187 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _813 = (_696 * (_796.z - _783)) + _783;
    float _822 = (_633 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_552.x * 2.0) + (-1.0)))) + (((_654.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _823 = (_634 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_552.y * 2.0) + (-1.0)))) + (((_654.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _835 = (((_803 - _822) + (cbMtdParam._m0[21u].x * _822)) * _696) + _822;
    float _836 = (((_804 - _823) + (cbMtdParam._m0[21u].x * _823)) * _696) + _823;
    float _837 = (_696 * (sqrt(1.0 - (isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0)))) - _640)) + _640;
    float _841 = cbMtdParam._m0[22u].x + _654.w;
    float _844 = fma(_837, _248 * NORMAL.x, fma(_836, _255 * TANGENT.x, (_241 * _233) * _835));
    float _847 = fma(_837, _248 * NORMAL.y, fma(_836, _255 * TANGENT.y, (_241 * _234) * _835));
    float _850 = fma(_837, _248 * NORMAL.z, fma(_836, _255 * TANGENT.z, (_241 * _235) * _835));
    float _854 = inversesqrt(dot(vec3(_844, _847, _850), vec3(_844, _847, _850)));
    float _855 = _854 * _844;
    float _856 = _854 * _847;
    float _857 = _854 * _850;
    float _4198 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _858 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
    float _4209 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _4220 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _4231 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _4242 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _4253 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _863 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
    float _877 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _918 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _928 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _918);
    float _929 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _918);
    float _930 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _918);
    float _934 = inversesqrt(dot(vec3(_928, _929, _930), vec3(_928, _929, _930)));
    float _935 = _928 * _934;
    float _936 = _929 * _934;
    float _937 = _930 * _934;
    vec4 _942 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _944 = _942.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1116 = sqrt(((_928 * _928) + (_929 * _929)) + (_930 * _930));
        float _1122 = (cbMatDynParam._m0[5u].x * _1116) + cbMatDynParam._m0[5u].y;
        float _4264 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1123 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1127 = (cbMatDynParam._m0[5u].z * _1116) + cbMatDynParam._m0[5u].w;
        float _4275 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) - _1123)) + _1123) < ((_944 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _955 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _956 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _974 = fma(_857, cbSceneParam._m0[5u].z, fma(_856, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _855));
    float _977 = fma(_857, cbSceneParam._m0[6u].z, fma(_856, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _855));
    float _980 = fma(_857, cbSceneParam._m0[7u].z, fma(_856, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _855));
    uint _993 = _282 + 9u;
    uint _994 = _993 + uint(cbMatDynParam._m0[0u].w);
    float _1000 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0)))) * cbInstanceData._m0[_994].x;
    float _1001 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0)))) * cbInstanceData._m0[_994].y;
    float _1002 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0)))) * cbInstanceData._m0[_994].z;
    float _4286 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _1003 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
    float _4297 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1004 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
    float _4308 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1005 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
    float _1006 = 1.0 - _863;
    float _1007 = _1003 * _1006;
    float _1008 = _1004 * _1006;
    float _1009 = _1005 * _1006;
    float _1014 = (_1003 + (-0.039999999105930328369140625)) * _863;
    float _1015 = (_1004 + (-0.039999999105930328369140625)) * _863;
    float _1016 = (_1005 + (-0.039999999105930328369140625)) * _863;
    float _1017 = _1014 + 0.039999999105930328369140625;
    float _1019 = _1015 + 0.039999999105930328369140625;
    float _1020 = _1016 + 0.039999999105930328369140625;
    vec4 _1029 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _955, cbSceneParam._m0[86u].y * _956));
    float _1033 = ((isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * TEXCOORD_5.w) * _1029.x;
    float _1034 = dot(vec3(_855, _856, _857), vec3(_935, _936, _937));
    float _1037 = _1034 * 2.0;
    float _1041 = (_1037 * _855) - _935;
    float _1042 = (_1037 * _856) - _936;
    float _1043 = (_1037 * _857) - _937;
    float _1047 = abs(dot(vec3(_935, _936, _937), vec3(_855, _856, _857)));
    float _4319 = isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0));
    float _1049 = sqrt(_858);
    float _1062 = exp2((_1049 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1049 * 3.0));
    float _1068 = (1.0 - _1062) * ((_1049 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1069 = _1062 * _1049;
    float _1097 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1101 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1105 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1434;
    float _1436;
    float _1437;
    float _1438;
    float _1439;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1159 = fma(_1105, cbModelParam._m0[26u].z, fma(_1101, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1097));
        float _1163 = fma(_1105, cbModelParam._m0[27u].z, fma(_1101, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1097));
        float _1167 = fma(_1105, cbModelParam._m0[28u].z, fma(_1101, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1097));
        float _1192 = _1097 + _855;
        float _1193 = _1101 + _856;
        float _1194 = _1105 + _857;
        float _1204 = fma(_1194, cbModelParam._m0[26u].z, fma(_1193, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1192)) - _1159;
        float _1205 = fma(_1194, cbModelParam._m0[27u].z, fma(_1193, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1192)) - _1163;
        float _1206 = fma(_1194, cbModelParam._m0[28u].z, fma(_1193, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1192)) - _1167;
        float _1210 = inversesqrt(dot(vec3(_1204, _1205, _1206), vec3(_1204, _1205, _1206)));
        float _1223 = ((_1210 * _1204) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1159 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1224 = ((_1210 * _1205) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1163 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1225 = ((_1210 * _1206) / cbModelParam._m0[34u].z) + ((((((_1167 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1228 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1223, _1224, _1225), 0.0);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1223, _1224, _1225), 0.0);
        vec4 _1242 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1223, _1224, _1225), 0.0);
        vec4 _1249 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1223, _1224, _1225), 0.0);
        float _1262 = exp2((_1228.w + (-0.5)) * 20.0) * 2.0;
        float _1263 = _1262 * (_1228.x + (-0.5));
        float _1264 = _1262 * (_1228.y + (-0.5));
        float _1265 = _1262 * (_1228.z + (-0.5));
        float _1272 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1273 = _1272 * (_1235.x + (-0.5));
        float _1274 = _1272 * (_1235.y + (-0.5));
        float _1275 = _1272 * (_1235.z + (-0.5));
        float _1282 = exp2((_1242.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1242.x + (-0.5));
        float _1284 = _1282 * (_1242.y + (-0.5));
        float _1285 = _1282 * (_1242.z + (-0.5));
        float _1292 = exp2((_1249.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1249.x + (-0.5));
        float _1294 = _1292 * (_1249.y + (-0.5));
        float _1295 = _1292 * (_1249.z + (-0.5));
        float _1296 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
        float _1297 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1298 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1299 = _1263 * 0.5;
        float _1300 = _1273 * 0.5;
        float _1301 = _1283 * 0.5;
        float _1302 = dot(vec3(_1299, _1300, _1301), vec3(_1299, _1300, _1301));
        float _1307 = (_1302 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1302);
        float _1316 = (dot(vec3(_855, _856, _857), vec3(_1307 * _1299, _1307 * _1300, _1307 * _1301)) + 1.0) * 0.5;
        float _4345 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1326 = sqrt(((_1300 * _1300) + (_1299 * _1299)) + (_1301 * _1301)) / (_1296 + 9.9999997473787516355514526367188e-06);
        float _4356 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1327 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1328 = _1327 * 2.0;
        float _1332 = (1.0 - _1327) / (_1327 + 1.0);
        float _4367 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1333 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1342 = ((((1.0 - _1333) * (_1328 + 2.0)) * exp2(log2(isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_1328 + 1.0))) + _1333) * _1296;
        float _1343 = _1264 * 0.5;
        float _1344 = _1274 * 0.5;
        float _1345 = _1284 * 0.5;
        float _1346 = dot(vec3(_1343, _1344, _1345), vec3(_1343, _1344, _1345));
        float _1351 = (_1346 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1346);
        float _1359 = (dot(vec3(_855, _856, _857), vec3(_1351 * _1343, _1351 * _1344, _1351 * _1345)) + 1.0) * 0.5;
        float _4378 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1368 = sqrt(((_1344 * _1344) + (_1343 * _1343)) + (_1345 * _1345)) / (_1297 + 9.9999997473787516355514526367188e-06);
        float _4389 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1369 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
        float _1370 = _1369 * 2.0;
        float _1374 = (1.0 - _1369) / (_1369 + 1.0);
        float _4400 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1375 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
        float _1384 = ((((1.0 - _1375) * (_1370 + 2.0)) * exp2(log2(isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0))) * (_1370 + 1.0))) + _1375) * _1297;
        float _1385 = _1265 * 0.5;
        float _1386 = _1275 * 0.5;
        float _1387 = _1285 * 0.5;
        float _1388 = dot(vec3(_1385, _1386, _1387), vec3(_1385, _1386, _1387));
        float _1393 = (_1388 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1388);
        float _1401 = (dot(vec3(_855, _856, _857), vec3(_1393 * _1385, _1393 * _1386, _1393 * _1387)) + 1.0) * 0.5;
        float _4411 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1410 = sqrt(((_1386 * _1386) + (_1385 * _1385)) + (_1387 * _1387)) / (_1298 + 9.9999997473787516355514526367188e-06);
        float _4422 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
        float _1412 = _1411 * 2.0;
        float _1416 = (1.0 - _1411) / (_1411 + 1.0);
        float _4433 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0));
        float _1426 = ((((1.0 - _1417) * (_1412 + 2.0)) * exp2(log2(isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0))) * (_1412 + 1.0))) + _1417) * _1298;
        _1434 = _1265;
        _1436 = _1264;
        _1437 = _1263;
        _1438 = _1275;
        _1439 = _1274;
        _1440 = _1273;
        _1441 = _1285;
        _1442 = _1284;
        _1443 = _1283;
        _1444 = _1298;
        _1445 = _1297;
        _1446 = _1296;
        _1447 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0)));
        _1448 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0)));
        _1449 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0)));
    }
    else
    {
        _1434 = _1435;
        _1436 = _1435;
        _1437 = _1435;
        _1438 = _1435;
        _1439 = _1435;
        _1440 = _1435;
        _1441 = _1435;
        _1442 = _1435;
        _1443 = _1435;
        _1444 = _1435;
        _1445 = _1435;
        _1446 = _1435;
        _1447 = 0.0;
        _1448 = 0.0;
        _1449 = 0.0;
    }
    float _1745;
    float _1746;
    float _1747;
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1476 = fma(_1105, cbModelParam._m0[30u].z, fma(_1101, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1097));
        float _1480 = fma(_1105, cbModelParam._m0[31u].z, fma(_1101, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1097));
        float _1484 = fma(_1105, cbModelParam._m0[32u].z, fma(_1101, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1097));
        float _1507 = _1097 + _855;
        float _1508 = _1101 + _856;
        float _1509 = _1105 + _857;
        float _1519 = fma(_1509, cbModelParam._m0[30u].z, fma(_1508, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1507)) - _1476;
        float _1520 = fma(_1509, cbModelParam._m0[31u].z, fma(_1508, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1507)) - _1480;
        float _1521 = fma(_1509, cbModelParam._m0[32u].z, fma(_1508, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1507)) - _1484;
        float _1525 = inversesqrt(dot(vec3(_1519, _1520, _1521), vec3(_1519, _1520, _1521)));
        float _1538 = ((_1525 * _1519) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1476 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1539 = ((_1525 * _1520) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1480 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1540 = ((_1525 * _1521) / cbModelParam._m0[35u].z) + ((((((_1484 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1542 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1538, _1539, _1540), 0.0);
        vec4 _1549 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1538, _1539, _1540), 0.0);
        vec4 _1556 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1538, _1539, _1540), 0.0);
        vec4 _1563 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1538, _1539, _1540), 0.0);
        float _1575 = exp2((_1542.w + (-0.5)) * 20.0) * 2.0;
        float _1576 = _1575 * (_1542.x + (-0.5));
        float _1577 = _1575 * (_1542.y + (-0.5));
        float _1578 = _1575 * (_1542.z + (-0.5));
        float _1585 = exp2((_1549.w + (-0.5)) * 20.0) * 2.0;
        float _1586 = _1585 * (_1549.x + (-0.5));
        float _1587 = _1585 * (_1549.y + (-0.5));
        float _1588 = _1585 * (_1549.z + (-0.5));
        float _1595 = exp2((_1556.w + (-0.5)) * 20.0) * 2.0;
        float _1596 = _1595 * (_1556.x + (-0.5));
        float _1597 = _1595 * (_1556.y + (-0.5));
        float _1598 = _1595 * (_1556.z + (-0.5));
        float _1605 = exp2((_1563.w + (-0.5)) * 20.0) * 2.0;
        float _1606 = _1605 * (_1563.x + (-0.5));
        float _1607 = _1605 * (_1563.y + (-0.5));
        float _1608 = _1605 * (_1563.z + (-0.5));
        float _1609 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1610 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1611 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1612 = _1576 * 0.5;
        float _1613 = _1586 * 0.5;
        float _1614 = _1596 * 0.5;
        float _1615 = dot(vec3(_1612, _1613, _1614), vec3(_1612, _1613, _1614));
        float _1620 = (_1615 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1615);
        float _1628 = (dot(vec3(_855, _856, _857), vec3(_1620 * _1612, _1620 * _1613, _1620 * _1614)) + 1.0) * 0.5;
        float _4474 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1637 = sqrt(((_1613 * _1613) + (_1612 * _1612)) + (_1614 * _1614)) / (_1609 + 9.9999997473787516355514526367188e-06);
        float _4485 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1638 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
        float _1639 = _1638 * 2.0;
        float _1643 = (1.0 - _1638) / (_1638 + 1.0);
        float _4496 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1644 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
        float _1653 = ((((1.0 - _1644) * (_1639 + 2.0)) * exp2(log2(isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (_1639 + 1.0))) + _1644) * _1609;
        float _1654 = _1577 * 0.5;
        float _1655 = _1587 * 0.5;
        float _1656 = _1597 * 0.5;
        float _1657 = dot(vec3(_1654, _1655, _1656), vec3(_1654, _1655, _1656));
        float _1662 = (_1657 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1657);
        float _1670 = (dot(vec3(_855, _856, _857), vec3(_1662 * _1654, _1662 * _1655, _1662 * _1656)) + 1.0) * 0.5;
        float _4507 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1679 = sqrt(((_1655 * _1655) + (_1654 * _1654)) + (_1656 * _1656)) / (_1610 + 9.9999997473787516355514526367188e-06);
        float _4518 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1680 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
        float _1681 = _1680 * 2.0;
        float _1685 = (1.0 - _1680) / (_1680 + 1.0);
        float _4529 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1686 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _1695 = ((((1.0 - _1686) * (_1681 + 2.0)) * exp2(log2(isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * (_1681 + 1.0))) + _1686) * _1610;
        float _1696 = _1578 * 0.5;
        float _1697 = _1588 * 0.5;
        float _1698 = _1598 * 0.5;
        float _1699 = dot(vec3(_1696, _1697, _1698), vec3(_1696, _1697, _1698));
        float _1704 = (_1699 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1699);
        float _1712 = (dot(vec3(_855, _856, _857), vec3(_1704 * _1696, _1704 * _1697, _1704 * _1698)) + 1.0) * 0.5;
        float _4540 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1721 = sqrt(((_1697 * _1697) + (_1696 * _1696)) + (_1698 * _1698)) / (_1611 + 9.9999997473787516355514526367188e-06);
        float _4551 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1722 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
        float _1723 = _1722 * 2.0;
        float _1727 = (1.0 - _1722) / (_1722 + 1.0);
        float _4562 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1728 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
        float _1737 = ((((1.0 - _1728) * (_1723 + 2.0)) * exp2(log2(isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0))) * (_1723 + 1.0))) + _1728) * _1611;
        _1745 = _1578;
        _1746 = _1577;
        _1747 = _1576;
        _1748 = _1588;
        _1749 = _1587;
        _1750 = _1586;
        _1751 = _1598;
        _1752 = _1597;
        _1753 = _1596;
        _1754 = _1611;
        _1755 = _1610;
        _1756 = _1609;
        _1757 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0)));
        _1758 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)));
        _1759 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0)));
    }
    else
    {
        _1745 = _1435;
        _1746 = _1435;
        _1747 = _1435;
        _1748 = _1435;
        _1749 = _1435;
        _1750 = _1435;
        _1751 = _1435;
        _1752 = _1435;
        _1753 = _1435;
        _1754 = _1435;
        _1755 = _1435;
        _1756 = _1435;
        _1757 = 0.0;
        _1758 = 0.0;
        _1759 = 0.0;
    }
    float _1769 = (cbModelParam._m0[1u].x * (_1757 - _1447)) + _1447;
    float _1770 = (cbModelParam._m0[1u].x * (_1758 - _1448)) + _1448;
    float _1771 = (cbModelParam._m0[1u].x * (_1759 - _1449)) + _1449;
    float _1792 = fma(_1771, cbSceneParam._m0[89u].z, fma(_1770, cbSceneParam._m0[89u].y, _1769 * cbSceneParam._m0[89u].x));
    float _1795 = fma(_1771, cbSceneParam._m0[90u].z, fma(_1770, cbSceneParam._m0[90u].y, _1769 * cbSceneParam._m0[90u].x));
    float _1798 = fma(_1771, cbSceneParam._m0[91u].z, fma(_1770, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1769));
    float _1813 = _1041 * 0.5;
    float _1814 = _1042 * 0.5;
    float _1815 = _1043 * 0.5;
    float _1816 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1747, _1750, _1753, _1756));
    float _1819 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1746, _1749, _1752, _1755));
    float _1822 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1745, _1748, _1751, _1754));
    float _1856;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1829 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1434, _1438, _1441, _1444));
        float _1833 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1436, _1439, _1442, _1445));
        float _1837 = dot(vec4(_1813, _1814, _1815, 1.0), vec4(_1437, _1440, _1443, _1446));
        float _1844 = dot(vec4(cbModelParam._m0[39u]), vec4(_1813, _1814, _1815, 1.0));
        _1856 = dot(vec3(isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)), isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0)), isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1844) ? 0.0 : (isnan(0.0) ? _1844 : max(0.0, _1844))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1856 = 1.0;
    }
    float _1867;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1858 = dot(vec4(cbModelParam._m0[40u]), vec4(_1813, _1814, _1815, 1.0));
        _1867 = dot(vec3(isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)), isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0)), isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1858) ? 0.0 : (isnan(0.0) ? _1858 : max(0.0, _1858))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1867 = 1.0;
    }
    float _1871 = (_1867 * cbModelParam._m0[1u].x) + (_1856 * (1.0 - cbModelParam._m0[1u].x));
    float _1881 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _858);
    float _1882 = isnan(_1881) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1881 : min(cbModelParam._m0[25u].z, _1881));
    float _1963;
    float _1965;
    float _1967;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1930 = fma(_1105, cbModelParam._m0[13u].z, fma(_1101, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1097)) + cbModelParam._m0[13u].w;
        float _1934 = fma(_1105, cbModelParam._m0[14u].z, fma(_1101, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1097)) + cbModelParam._m0[14u].w;
        float _1938 = fma(_1105, cbModelParam._m0[15u].z, fma(_1101, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1097)) + cbModelParam._m0[15u].w;
        float _1941 = fma(_1043, cbModelParam._m0[13u].z, fma(_1042, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1041));
        float _1944 = fma(_1043, cbModelParam._m0[14u].z, fma(_1042, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1041));
        float _1947 = fma(_1043, cbModelParam._m0[15u].z, fma(_1042, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1041));
        float _1975;
        if (_1941 > 0.0)
        {
            _1975 = abs((1.0 - _1930) / _1941);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1941 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1930 + 1.0) / _1941);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1975 = frontier_phi_17_15_ladder;
        }
        float _2147;
        if (_1944 > 0.0)
        {
            _2147 = abs((1.0 - _1934) / _1944);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1944 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1934 + 1.0) / _1944);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2147 = frontier_phi_26_22_ladder;
        }
        float _2442;
        if (_1947 > 0.0)
        {
            _2442 = abs((1.0 - _1938) / _1947);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1947 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1938 + 1.0) / _1947);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2442 = frontier_phi_38_33_ladder;
        }
        float _2444 = isnan(_2147) ? _1975 : (isnan(_1975) ? _2147 : min(_1975, _2147));
        float _2445 = isnan(_2442) ? _2444 : (isnan(_2444) ? _2442 : min(_2444, _2442));
        float _2449 = (_2445 * _1941) + _1930;
        float _2450 = (_2445 * _1944) + _1934;
        float _2451 = (_2445 * _1947) + _1938;
        float _2452 = _2445 * 9.9999997473787516355514526367188e-05;
        float _2454 = (-1.0) - _2452;
        float _2456 = _2452 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2451 > _2456) || ((_2451 < _2454) || ((_2450 > _2456) || ((_2450 < _2454) || ((_2449 < _2454) || (_2449 > _2456))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2596 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2451, cbModelParam._m0[9u].z, fma(_2450, cbModelParam._m0[9u].y, _2449 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2451, cbModelParam._m0[10u].z, fma(_2450, cbModelParam._m0[10u].y, _2449 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2451, cbModelParam._m0[11u].z, fma(_2450, cbModelParam._m0[11u].y, _2449 * cbModelParam._m0[11u].x))), _1882);
            frontier_phi_16_38_ladder = _2596.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2596.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2596.x * cbModelParam._m0[1u].y;
        }
        _1963 = frontier_phi_16_38_ladder_2;
        _1965 = frontier_phi_16_38_ladder_1;
        _1967 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1951 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1041, _1042, _1043), _1882);
        _1963 = _1951.x * cbModelParam._m0[1u].y;
        _1965 = _1951.y * cbModelParam._m0[1u].y;
        _1967 = _1951.z * cbModelParam._m0[1u].y;
    }
    float _1971 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _858);
    float _1972 = isnan(_1971) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1971 : min(cbModelParam._m0[25u].w, _1971));
    float _2062;
    float _2064;
    float _2066;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2026 = fma(_1105, cbModelParam._m0[21u].z, fma(_1101, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1097)) + cbModelParam._m0[21u].w;
        float _2030 = fma(_1105, cbModelParam._m0[22u].z, fma(_1101, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1097)) + cbModelParam._m0[22u].w;
        float _2034 = fma(_1105, cbModelParam._m0[23u].z, fma(_1101, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1097)) + cbModelParam._m0[23u].w;
        float _2037 = fma(_1043, cbModelParam._m0[21u].z, fma(_1042, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1041));
        float _2040 = fma(_1043, cbModelParam._m0[22u].z, fma(_1042, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1041));
        float _2043 = fma(_1043, cbModelParam._m0[23u].z, fma(_1042, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1041));
        float _2152;
        if (_2037 > 0.0)
        {
            _2152 = abs((1.0 - _2026) / _2037);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2037 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2026 + 1.0) / _2037);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2152 = frontier_phi_28_24_ladder;
        }
        float _2469;
        if (_2040 > 0.0)
        {
            _2469 = abs((1.0 - _2030) / _2040);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2040 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2030 + 1.0) / _2040);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2469 = frontier_phi_40_35_ladder;
        }
        float _2807;
        if (_2043 > 0.0)
        {
            _2807 = abs((1.0 - _2034) / _2043);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2043 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2034 + 1.0) / _2043);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2807 = frontier_phi_50_47_ladder;
        }
        float _2809 = isnan(_2469) ? _2152 : (isnan(_2152) ? _2469 : min(_2152, _2469));
        float _2810 = isnan(_2807) ? _2809 : (isnan(_2809) ? _2807 : min(_2809, _2807));
        float _2814 = (_2810 * _2037) + _2026;
        float _2815 = (_2810 * _2040) + _2030;
        float _2816 = (_2810 * _2043) + _2034;
        float _2817 = _2810 * 9.9999997473787516355514526367188e-05;
        float _2818 = (-1.0) - _2817;
        float _2820 = _2817 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2816 > _2820) || ((_2816 < _2818) || ((_2815 > _2820) || ((_2815 < _2818) || ((_2814 < _2818) || (_2814 > _2820))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2938 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2816, cbModelParam._m0[17u].z, fma(_2815, cbModelParam._m0[17u].y, _2814 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2816, cbModelParam._m0[18u].z, fma(_2815, cbModelParam._m0[18u].y, _2814 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2816, cbModelParam._m0[19u].z, fma(_2815, cbModelParam._m0[19u].y, _2814 * cbModelParam._m0[19u].x))), _1972);
            frontier_phi_25_50_ladder = _2938.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2938.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2938.x * cbModelParam._m0[1u].z;
        }
        _2062 = frontier_phi_25_50_ladder_2;
        _2064 = frontier_phi_25_50_ladder_1;
        _2066 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2046 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1041, _1042, _1043), _1972);
        _2062 = _2046.x * cbModelParam._m0[1u].z;
        _2064 = _2046.y * cbModelParam._m0[1u].z;
        _2066 = _2046.z * cbModelParam._m0[1u].z;
    }
    float _2079 = (((_1068 * _1017) + _1069) * _1033) * ((cbModelParam._m0[1u].w * (_2062 - _1963)) + _1963);
    float _2081 = (((_1068 * _1019) + _1069) * _1033) * ((cbModelParam._m0[1u].w * (_2064 - _1965)) + _1965);
    float _2083 = (((_1068 * _1020) + _1069) * _1033) * ((cbModelParam._m0[1u].w * (_2066 - _1967)) + _1967);
    float _2086 = fma(_2083, cbSceneParam._m0[89u].z, fma(_2081, cbSceneParam._m0[89u].y, _2079 * cbSceneParam._m0[89u].x));
    float _2089 = fma(_2083, cbSceneParam._m0[90u].z, fma(_2081, cbSceneParam._m0[90u].y, _2079 * cbSceneParam._m0[90u].x));
    float _2092 = fma(_2083, cbSceneParam._m0[91u].z, fma(_2081, cbSceneParam._m0[91u].y, _2079 * cbSceneParam._m0[91u].x));
    float _2126 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2130 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2134 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2138 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2139 = _2126 / _2138;
    float _2140 = _2130 / _2138;
    float _2141 = _2134 / _2138;
    float _2288;
    float _2289;
    float _2290;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2168 = ((uint(_2141 > cbSceneParam._m0[59u].y) + uint(_2141 > cbSceneParam._m0[59u].x)) + uint(_2141 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2169 = _2168 + 43u;
        uint _2177 = _2168 + 44u;
        uint _2185 = _2168 + 45u;
        uint _2193 = _2168 + 46u;
        float _2204 = fma(_2138, cbSceneParam._m0[_2169].w, fma(_2134, cbSceneParam._m0[_2169].z, fma(_2130, cbSceneParam._m0[_2169].y, _2126 * cbSceneParam._m0[_2169].x)));
        float _2208 = fma(_2138, cbSceneParam._m0[_2177].w, fma(_2134, cbSceneParam._m0[_2177].z, fma(_2130, cbSceneParam._m0[_2177].y, _2126 * cbSceneParam._m0[_2177].x)));
        float _2216 = fma(_2138, cbSceneParam._m0[_2193].w, fma(_2134, cbSceneParam._m0[_2193].z, fma(_2130, cbSceneParam._m0[_2193].y, _2126 * cbSceneParam._m0[_2193].x)));
        float _2221 = cbSceneParam._m0[33u].z * _2216;
        float _2223 = cbSceneParam._m0[33u].w * _2216;
        float _2226 = fma(_2138, cbSceneParam._m0[_2185].w, fma(_2134, cbSceneParam._m0[_2185].z, fma(_2130, cbSceneParam._m0[_2185].y, _2126 * cbSceneParam._m0[_2185].x))) / _2216;
        float _2274 = (cbSceneParam._m0[33u].x - sqrt(((_2140 * _2140) + (_2139 * _2139)) + (_2141 * _2141))) * cbSceneParam._m0[33u].y;
        float _4688 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
        float _2281 = (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2221 + _2204) / _2216, (_2223 + _2208) / _2216), _2226), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2223 + _2204) / _2216, (_2208 - _2221) / _2216), _2226), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2204 - _2221) / _2216, (_2208 - _2223) / _2216), _2226), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2204 - _2223) / _2216, (_2221 + _2208) / _2216), _2226), 0.0)).x), vec4(0.25)));
        _2288 = 1.0 - (_2281 * cbSceneParam._m0[34u].x);
        _2289 = 1.0 - (_2281 * cbSceneParam._m0[34u].y);
        _2290 = 1.0 - (_2281 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2288 = 1.0;
        _2289 = 1.0;
        _2290 = 1.0;
    }
    float _2354;
    float _2356;
    float _2358;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2342 = fma(_2138, cbSceneParam._m0[63u].w, fma(_2134, cbSceneParam._m0[63u].z, fma(_2130, cbSceneParam._m0[63u].y, _2126 * cbSceneParam._m0[63u].x)));
        float _2343 = fma(_2138, cbSceneParam._m0[60u].w, fma(_2134, cbSceneParam._m0[60u].z, fma(_2130, cbSceneParam._m0[60u].y, _2126 * cbSceneParam._m0[60u].x))) / _2342;
        float _2344 = fma(_2138, cbSceneParam._m0[61u].w, fma(_2134, cbSceneParam._m0[61u].z, fma(_2130, cbSceneParam._m0[61u].y, _2126 * cbSceneParam._m0[61u].x))) / _2342;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2343 >= cbSceneParam._m0[64u].x) && (_2344 >= cbSceneParam._m0[64u].y)) && (_2343 <= cbSceneParam._m0[64u].z)) && (_2344 <= cbSceneParam._m0[64u].w))
        {
            float _2482 = fma(_2138, cbSceneParam._m0[62u].w, fma(_2134, cbSceneParam._m0[62u].z, fma(_2130, cbSceneParam._m0[62u].y, _2126 * cbSceneParam._m0[62u].x))) / _2342;
            float _2486 = isnan(cbSceneParam._m0[41u].w) ? _2482 : (isnan(_2482) ? cbSceneParam._m0[41u].w : max(_2482, cbSceneParam._m0[41u].w));
            float _2529 = (cbSceneParam._m0[33u].x - sqrt(((_2140 * _2140) + (_2139 * _2139)) + (_2141 * _2141))) * cbSceneParam._m0[33u].y;
            float _4704 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
            float _2536 = (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2343, cbSceneParam._m0[33u].w + _2344), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2343, _2344 - cbSceneParam._m0[33u].z), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2343 - cbSceneParam._m0[33u].z, _2344 - cbSceneParam._m0[33u].w), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2343 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2344), _2486), 0.0)).x), vec4(0.25)));
            float _2540 = 1.0 - (_2536 * cbSceneParam._m0[34u].x);
            float _2541 = 1.0 - (_2536 * cbSceneParam._m0[34u].y);
            float _2542 = 1.0 - (_2536 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2542) ? _2290 : (isnan(_2290) ? _2542 : min(_2290, _2542));
            frontier_phi_37_36_ladder_1 = isnan(_2541) ? _2289 : (isnan(_2289) ? _2541 : min(_2289, _2541));
            frontier_phi_37_36_ladder_2 = isnan(_2540) ? _2288 : (isnan(_2288) ? _2540 : min(_2288, _2540));
        }
        else
        {
            frontier_phi_37_36_ladder = _2290;
            frontier_phi_37_36_ladder_1 = _2289;
            frontier_phi_37_36_ladder_2 = _2288;
        }
        _2354 = frontier_phi_37_36_ladder_2;
        _2356 = frontier_phi_37_36_ladder_1;
        _2358 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2354 = _2288;
        _2356 = _2289;
        _2358 = _2290;
    }
    uvec4 _2363 = floatBitsToUint(cbInstanceData._m0[_282 + 5u]);
    uint _2365 = _2363.x * 14u;
    uint _2366 = _2365 + 13u;
    float _2373 = _1033 + (-1.0);
    float _2378 = (cbLight._m0[_2366].x * _2373) + 1.0;
    float _2379 = (cbLight._m0[_2366].y * _2373) + 1.0;
    float _2380 = (cbLight._m0[_2366].z * _2373) + 1.0;
    float _2381 = (cbLight._m0[_2366].w * _2373) + 1.0;
    uint _2382 = _2365 + 5u;
    float _2388 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
    uint _2392 = _2365 + 4u;
    float _2401 = isnan(1.0) ? _2378 : (isnan(_2378) ? 1.0 : min(_2378, 1.0));
    uint _2405 = _2365 | 1u;
    float _2416 = dot(vec3(cbLight._m0[_2365].xyz), vec3(_855, _856, _857));
    float _2419 = dot(vec3(cbLight._m0[_2405].xyz), vec3(_855, _856, _857));
    float _4740 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _4751 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2424 = (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * 0.3183098733425140380859375;
    float _2426 = (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0))) * 0.3183098733425140380859375;
    float _2433 = ((cbLight._m0[_2382].x * _2388) * _2426) + (((cbLight._m0[_2392].x * _2354) * _2401) * _2424);
    float _2434 = ((_2388 * cbLight._m0[_2382].y) * _2426) + (((cbLight._m0[_2392].y * _2356) * _2401) * _2424);
    float _2435 = ((_2388 * cbLight._m0[_2382].z) * _2426) + (((cbLight._m0[_2392].z * _2358) * _2401) * _2424);
    uvec4 _2439 = floatBitsToUint(cbLight._m0[_2365 + 12u]);
    bool _2441 = _2439.x == 0u;
    float _2543;
    float _2545;
    float _2547;
    if (_2441)
    {
        _2543 = _2433;
        _2545 = _2434;
        _2547 = _2435;
    }
    else
    {
        uint _2551 = _2365 + 6u;
        float _2567 = (dot(vec3(cbLight._m0[_2365 + 2u].xyz), vec3(_855, _856, _857)) * 0.5) + 0.5;
        float _2568 = _2567 * _2567;
        float _4762 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
        float _2569 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
        float _2570 = isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0));
        _2543 = (((cbLight._m0[_2551].x * 0.3183098733425140380859375) * _2569) * _2570) + _2433;
        _2545 = (((cbLight._m0[_2551].y * 0.3183098733425140380859375) * _2569) * _2570) + _2434;
        _2547 = (((cbLight._m0[_2551].z * 0.3183098733425140380859375) * _2569) * _2570) + _2435;
    }
    bool _2550 = _2439.y == 0u;
    float _2605;
    float _2607;
    float _2609;
    if (_2550)
    {
        _2605 = _2543;
        _2607 = _2545;
        _2609 = _2547;
    }
    else
    {
        uint _2778 = _2365 + 7u;
        float _2794 = (dot(vec3(cbLight._m0[_2365 + 3u].xyz), vec3(_855, _856, _857)) * 0.5) + 0.5;
        float _2795 = _2794 * _2794;
        float _4778 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2796 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
        float _2797 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2605 = (((cbLight._m0[_2778].x * 0.3183098733425140380859375) * _2796) * _2797) + _2543;
        _2607 = (((cbLight._m0[_2778].y * 0.3183098733425140380859375) * _2796) * _2797) + _2545;
        _2609 = (((cbLight._m0[_2778].z * 0.3183098733425140380859375) * _2796) * _2797) + _2547;
    }
    uint _2612 = _2365 + 8u;
    float _2625 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2365].w)) * _858) * 0.949999988079071044921875);
    float _2626 = _2625 * _2625;
    float _2627 = cbLight._m0[_2365].x + _935;
    float _2628 = cbLight._m0[_2365].y + _936;
    float _2629 = cbLight._m0[_2365].z + _937;
    float _2633 = inversesqrt(dot(vec3(_2627, _2628, _2629), vec3(_2627, _2628, _2629)));
    float _2634 = _2633 * _2627;
    float _2635 = _2633 * _2628;
    float _2636 = _2633 * _2629;
    float _2637 = dot(vec3(_855, _856, _857), vec3(cbLight._m0[_2365].xyz));
    float _4794 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
    float _2640 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
    float _4805 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _2641 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
    float _2642 = dot(vec3(_855, _856, _857), vec3(_2634, _2635, _2636));
    float _4816 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
    float _2645 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
    float _2646 = dot(vec3(cbLight._m0[_2365].xyz), vec3(_2634, _2635, _2636));
    float _4827 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
    float _2650 = _2626 * _2626;
    float _2654 = ((_2645 * _2645) * (_2650 + (-1.0))) + 1.0;
    float _2662 = exp2(log2(1.0 - (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0)))) * 5.0);
    float _2663 = 0.959999978542327880859375 - _1014;
    float _2665 = 0.959999978542327880859375 - _1015;
    float _2666 = 0.959999978542327880859375 - _1016;
    float _2673 = 1.0 - _2626;
    float _2684 = (0.5 / (((_2641 * ((_2640 * _2673) + _2626)) + 9.9999999392252902907785028219223e-09) + (((_2641 * _2673) + _2626) * _2640))) * _2640;
    float _4838 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
    float _2686 = (isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0))) * (_2650 / ((_2654 * _2654) * 3.141590118408203125));
    uint _2700 = _2365 + 9u;
    float _2711 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2405].w)) * _858) * 0.949999988079071044921875);
    float _2712 = _2711 * _2711;
    float _2713 = cbLight._m0[_2405].x + _935;
    float _2714 = cbLight._m0[_2405].y + _936;
    float _2715 = cbLight._m0[_2405].z + _937;
    float _2719 = inversesqrt(dot(vec3(_2713, _2714, _2715), vec3(_2713, _2714, _2715)));
    float _2720 = _2719 * _2713;
    float _2721 = _2719 * _2714;
    float _2722 = _2719 * _2715;
    float _2723 = dot(vec3(_855, _856, _857), vec3(cbLight._m0[_2405].xyz));
    float _4849 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0));
    float _2726 = isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0));
    float _2727 = dot(vec3(_855, _856, _857), vec3(_2720, _2721, _2722));
    float _4860 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
    float _2730 = isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0));
    float _2731 = dot(vec3(cbLight._m0[_2405].xyz), vec3(_2720, _2721, _2722));
    float _4871 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
    float _2735 = _2712 * _2712;
    float _2739 = ((_2730 * _2730) * (_2735 + (-1.0))) + 1.0;
    float _2746 = exp2(log2(1.0 - (isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0)))) * 5.0);
    float _2753 = 1.0 - _2712;
    float _2763 = (0.5 / (((_2641 * ((_2726 * _2753) + _2712)) + 9.9999999392252902907785028219223e-09) + (((_2641 * _2753) + _2712) * _2726))) * _2726;
    float _4882 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
    float _2765 = (isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0))) * (_2735 / ((_2739 * _2739) * 3.141590118408203125));
    float _2775 = (((((_2746 * _2663) + _1017) * cbLight._m0[_2700].x) * _2765) * _2388) + ((((cbLight._m0[_2612].x * _2354) * ((_2662 * _2663) + _1017)) * _2686) * _2401);
    float _2776 = (((((_2746 * _2665) + _1019) * cbLight._m0[_2700].y) * _2765) * _2388) + ((((cbLight._m0[_2612].y * _2356) * ((_2662 * _2665) + _1019)) * _2686) * _2401);
    float _2777 = (((((_2746 * _2666) + _1020) * cbLight._m0[_2700].z) * _2765) * _2388) + ((((cbLight._m0[_2612].z * _2358) * ((_2662 * _2666) + _1020)) * _2686) * _2401);
    float _2833;
    float _2835;
    float _2837;
    if (_2441)
    {
        _2833 = _2775;
        _2835 = _2776;
        _2837 = _2777;
    }
    else
    {
        uint _2839 = _2365 + 2u;
        uint _2843 = _2365 + 10u;
        float _2857 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2839].w)) * _858) * 0.949999988079071044921875);
        float _2858 = _2857 * _2857;
        float _2859 = cbLight._m0[_2839].x + _935;
        float _2860 = cbLight._m0[_2839].y + _936;
        float _2861 = cbLight._m0[_2839].z + _937;
        float _2865 = inversesqrt(dot(vec3(_2859, _2860, _2861), vec3(_2859, _2860, _2861)));
        float _2866 = _2865 * _2859;
        float _2867 = _2865 * _2860;
        float _2868 = _2865 * _2861;
        float _2869 = dot(vec3(_855, _856, _857), vec3(cbLight._m0[_2839].xyz));
        float _4893 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
        float _2872 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
        float _2873 = dot(vec3(_855, _856, _857), vec3(_2866, _2867, _2868));
        float _4904 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
        float _2876 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
        float _2877 = dot(vec3(cbLight._m0[_2839].xyz), vec3(_2866, _2867, _2868));
        float _4915 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        float _2881 = _2858 * _2858;
        float _2885 = ((_2876 * _2876) * (_2881 + (-1.0))) + 1.0;
        float _2892 = exp2(log2(1.0 - (isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0)))) * 5.0);
        float _2899 = 1.0 - _2858;
        float _2909 = (0.5 / (((_2641 * ((_2872 * _2899) + _2858)) + 9.9999999392252902907785028219223e-09) + (((_2641 * _2899) + _2858) * _2872))) * _2872;
        float _4926 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        float _2911 = (isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0))) * (_2881 / ((_2885 * _2885) * 3.141590118408203125));
        float _2912 = isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0));
        _2833 = (((((_2892 * _2663) + _1017) * cbLight._m0[_2843].x) * _2911) * _2912) + _2775;
        _2835 = (((((_2892 * _2665) + _1019) * cbLight._m0[_2843].y) * _2911) * _2912) + _2776;
        _2837 = (((((_2892 * _2666) + _1020) * cbLight._m0[_2843].z) * _2911) * _2912) + _2777;
    }
    float _2943;
    float _2945;
    float _2947;
    if (_2550)
    {
        _2943 = _2833;
        _2945 = _2835;
        _2947 = _2837;
    }
    else
    {
        uint _2954 = _2365 + 3u;
        uint _2958 = _2365 + 11u;
        float _2972 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2954].w)) * _858) * 0.949999988079071044921875);
        float _2973 = _2972 * _2972;
        float _2974 = cbLight._m0[_2954].x + _935;
        float _2975 = cbLight._m0[_2954].y + _936;
        float _2976 = cbLight._m0[_2954].z + _937;
        float _2980 = inversesqrt(dot(vec3(_2974, _2975, _2976), vec3(_2974, _2975, _2976)));
        float _2981 = _2980 * _2974;
        float _2982 = _2980 * _2975;
        float _2983 = _2980 * _2976;
        float _2984 = dot(vec3(_855, _856, _857), vec3(cbLight._m0[_2954].xyz));
        float _4942 = isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0));
        float _2987 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
        float _2988 = dot(vec3(_855, _856, _857), vec3(_2981, _2982, _2983));
        float _4953 = isnan(0.0) ? _2988 : (isnan(_2988) ? 0.0 : max(_2988, 0.0));
        float _2991 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
        float _2992 = dot(vec3(cbLight._m0[_2954].xyz), vec3(_2981, _2982, _2983));
        float _4964 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
        float _2996 = _2973 * _2973;
        float _3000 = ((_2991 * _2991) * (_2996 + (-1.0))) + 1.0;
        float _3007 = exp2(log2(1.0 - (isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0)))) * 5.0);
        float _3014 = 1.0 - _2973;
        float _3024 = (0.5 / (((_2641 * ((_2987 * _3014) + _2973)) + 9.9999999392252902907785028219223e-09) + (((_2641 * _3014) + _2973) * _2987))) * _2987;
        float _4975 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0));
        float _3026 = (isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0))) * (_2996 / ((_3000 * _3000) * 3.141590118408203125));
        float _3027 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2943 = (((((_3007 * _2663) + _1017) * cbLight._m0[_2958].x) * _3026) * _3027) + _2833;
        _2945 = (((((_3007 * _2665) + _1019) * cbLight._m0[_2958].y) * _3026) * _3027) + _2835;
        _2947 = (((((_3007 * _2666) + _1020) * cbLight._m0[_2958].z) * _3026) * _3027) + _2837;
    }
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    float _3101;
    float _3103;
    if (_2363.y == 0u)
    {
        uvec4 _3048 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3049 = _3048.x;
        uint _3060 = uint((float(_3048.y) * floor(float(uint(cbSceneParam._m0[85u].y * _956) / _3049))) + floor(float(uint(cbSceneParam._m0[85u].x * _955) / _3049)));
        float _3070 = (log2(_2141 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3071 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
        uint _3074 = uint(isnan(14.0) ? _3071 : (isnan(_3071) ? 14.0 : min(_3071, 14.0)));
        uvec4 _3079 = texelFetch(g_lightClusterGridBuffer, int(((_3074 << 2u) + (_3060 << 6u)) >> 2u));
        uint _3080 = _3079.x;
        uint _3081 = _3048.z;
        float _3160;
        float _3162;
        float _3164;
        float _3166;
        float _3168;
        float _3170;
        if (((((1u << ((_3081 >> 4u) & 15u)) + 4294967295u) & _3080) == 0u) || ((_3081 & 240u) == 0u))
        {
            _3160 = 0.0;
            _3162 = 0.0;
            _3164 = 0.0;
            _3166 = 0.0;
            _3168 = 0.0;
            _3170 = 0.0;
        }
        else
        {
            float _3161;
            float _3163;
            float _3165;
            float _3167;
            float _3169;
            float _3171;
            float _3313 = 0.0;
            float _3314 = 0.0;
            float _3315 = 0.0;
            float _3316 = 0.0;
            float _3317 = 0.0;
            float _3318 = 0.0;
            uint _3319 = 0u;
            uint _3328;
            bool _3329;
            for (;;)
            {
                _3328 = texelFetch(g_lightClassification, int((((_3074 << 5u) + (_3060 << 9u)) + (_3319 << 2u)) >> 2u)).x;
                _3329 = _3328 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3329)
                {
                    frontier_phi_71_pred = _3318;
                    frontier_phi_71_pred_1 = _3317;
                    frontier_phi_71_pred_2 = _3316;
                    frontier_phi_71_pred_3 = _3315;
                    frontier_phi_71_pred_4 = _3314;
                    frontier_phi_71_pred_5 = _3313;
                }
                else
                {
                    float _3458;
                    float _3459;
                    float _3460;
                    float _3461;
                    float _3462;
                    float _3463;
                    uint _3464;
                    _3458 = _3313;
                    _3459 = _3314;
                    _3460 = _3315;
                    _3461 = _3316;
                    _3462 = _3317;
                    _3463 = _3318;
                    _3464 = _3328;
                    float _3385;
                    float _3386;
                    float _3387;
                    float _3388;
                    float _3389;
                    float _3390;
                    for (;;)
                    {
                        uint _3468 = uint(findLSB(_3464)) + (_3319 << 5u);
                        uint _3465 = (_3464 + 4294967295u) & _3464;
                        uint _3470 = _3468 * 48u;
                        vec4 _3484 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3470)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 3u)).x));
                        uint _3490 = (_3468 * 48u) + 4u;
                        vec4 _3503 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3490)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 3u)).x));
                        uint _3509 = (_3468 * 48u) + 8u;
                        vec3 _3520 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3509)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 2u)).x));
                        float _3524 = _3484.x - _2139;
                        float _3525 = _3484.y - _2140;
                        float _3526 = _3484.z - _2141;
                        float _3527 = dot(vec3(_3524, _3525, _3526), vec3(_3524, _3525, _3526));
                        float _3530 = inversesqrt(_3527);
                        float _3531 = _3530 * _3524;
                        float _3532 = _3530 * _3525;
                        float _3533 = _3530 * _3526;
                        float _3534 = dot(vec3(_974, _977, _980), vec3(_3531, _3532, _3533));
                        float _3539 = 1.0 - (_3527 * _3484.w);
                        float _5001 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                        float _3540 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
                        float _3541 = sqrt(_3527) * _3503.w;
                        float _3544 = 1.39999997615814208984375 / (_3541 + 1.39999997615814208984375);
                        float _3545 = _3544 * _3544;
                        float _3548 = ((1.0 - _3545) * _3534) + _3545;
                        float _3551 = _3541 * _3541;
                        float _3555 = ((isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0))) * _3540) / ((_3551 * 0.699999988079071044921875) + 1.0);
                        float _3559 = (-0.0) - _2139;
                        float _3560 = (-0.0) - _2140;
                        float _3561 = (-0.0) - _2141;
                        float _3565 = inversesqrt(dot(vec3(_3559, _3560, _3561), vec3(_3559, _3560, _3561)));
                        float _3566 = _3565 * _3559;
                        float _3567 = _3565 * _3560;
                        float _3568 = _3565 * _3561;
                        float _3575 = exp2(log2(1.0 / ((_3551 * 3.5) + 5.0)) * 0.25);
                        float _3576 = 1.0 - _1049;
                        float _3583 = sqrt(1.0 - ((1.0 - (_3576 * _3576)) * (1.0 - (_3575 * _3575))));
                        float _3584 = _3583 * _3583;
                        float _3585 = _3584 * _3584;
                        float _3586 = _3566 + _3531;
                        float _3587 = _3567 + _3532;
                        float _3588 = _3568 + _3533;
                        float _3592 = inversesqrt(dot(vec3(_3586, _3587, _3588), vec3(_3586, _3587, _3588)));
                        float _3596 = dot(vec3(_974, _977, _980), vec3(_3566, _3567, _3568));
                        float _5017 = isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : max(_3596, 0.0));
                        float _3599 = isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0));
                        float _3600 = dot(vec3(_974, _977, _980), vec3(_3592 * _3586, _3592 * _3587, _3592 * _3588));
                        float _5028 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                        float _3603 = isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0));
                        float _3607 = ((_3603 * _3603) * (_3585 + (-1.0))) + 1.0;
                        float _3608 = _3544 * _3584;
                        float _3609 = _3608 * _3608;
                        float _3612 = ((1.0 - _3609) * _3534) + _3609;
                        float _5039 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                        float _3613 = isnan(1.0) ? _5039 : (isnan(_5039) ? 1.0 : min(_5039, 1.0));
                        float _3614 = 1.0 - _3584;
                        float _3624 = (0.5 / (((_3613 * ((_3599 * _3614) + _3584)) + 9.9999999392252902907785028219223e-09) + (((_3613 * _3614) + _3584) * _3599))) * _3613;
                        float _5050 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                        float _3635 = (((_3585 * 3.1415927410125732421875) * (isnan(1.0) ? _5050 : (isnan(_5050) ? 1.0 : min(_5050, 1.0)))) / ((_3607 * _3607) * ((_3551 * 2.1991131305694580078125) + 3.141590118408203125))) * _3540;
                        _3388 = (_3555 * _3503.x) + _3461;
                        _3389 = (_3555 * _3503.y) + _3462;
                        _3390 = (_3555 * _3503.z) + _3463;
                        _3385 = (_3635 * _3520.x) + _3458;
                        _3386 = (_3635 * _3520.y) + _3459;
                        _3387 = (_3635 * _3520.z) + _3460;
                        if (_3465 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3458 = _3385;
                            _3459 = _3386;
                            _3460 = _3387;
                            _3461 = _3388;
                            _3462 = _3389;
                            _3463 = _3390;
                            _3464 = _3465;
                        }
                    }
                    frontier_phi_71_pred = _3390;
                    frontier_phi_71_pred_1 = _3389;
                    frontier_phi_71_pred_2 = _3388;
                    frontier_phi_71_pred_3 = _3387;
                    frontier_phi_71_pred_4 = _3386;
                    frontier_phi_71_pred_5 = _3385;
                }
                _3171 = frontier_phi_71_pred;
                _3169 = frontier_phi_71_pred_1;
                _3167 = frontier_phi_71_pred_2;
                _3165 = frontier_phi_71_pred_3;
                _3163 = frontier_phi_71_pred_4;
                _3161 = frontier_phi_71_pred_5;
                uint _3320 = _3319 + 1u;
                if (_3320 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3313 = _3161;
                    _3314 = _3163;
                    _3315 = _3165;
                    _3316 = _3167;
                    _3317 = _3169;
                    _3318 = _3171;
                    _3319 = _3320;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3160 = _3161;
            _3162 = _3163;
            _3164 = _3165;
            _3166 = _3167;
            _3168 = _3169;
            _3170 = _3171;
        }
        uvec4 _3174 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3175 = _3174.z;
        uint _3177 = (_3175 >> 8u) & 15u;
        float _3281;
        float _3283;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        if (((4294967295u << _3177) & _3080) == 0u)
        {
            _3281 = _3160;
            _3283 = _3162;
            _3285 = _3164;
            _3287 = _3166;
            _3289 = _3168;
            _3291 = _3170;
        }
        else
        {
            float _3306 = inversesqrt(dot(vec3(_2139, _2140, _2141), vec3(_2139, _2140, _2141)));
            float _3307 = _3306 * _2139;
            float _3308 = _3306 * _2140;
            float _3309 = _3306 * _2141;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3177 < ((_3175 >> 12u) & 15u))
            {
                float _3282;
                float _3284;
                float _3286;
                float _3288;
                float _3290;
                float _3292;
                float _3441 = _3160;
                float _3442 = _3162;
                float _3443 = _3164;
                float _3444 = _3166;
                float _3445 = _3168;
                float _3446 = _3170;
                uint _3447 = _3177;
                uint _3456;
                bool _3457;
                for (;;)
                {
                    _3456 = texelFetch(g_lightClassification, int((((_3074 << 5u) + (_3060 << 9u)) + (_3447 << 2u)) >> 2u)).x;
                    _3457 = _3456 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3457)
                    {
                        frontier_phi_82_pred = _3446;
                        frontier_phi_82_pred_1 = _3445;
                        frontier_phi_82_pred_2 = _3444;
                        frontier_phi_82_pred_3 = _3443;
                        frontier_phi_82_pred_4 = _3442;
                        frontier_phi_82_pred_5 = _3441;
                    }
                    else
                    {
                        float _3649;
                        float _3650;
                        float _3651;
                        float _3652;
                        float _3653;
                        float _3654;
                        float _3942;
                        float _3943;
                        float _3944;
                        float _3945;
                        float _3946;
                        float _3947;
                        float _3662 = _3441;
                        float _3663 = _3442;
                        float _3664 = _3443;
                        float _3665 = _3444;
                        float _3666 = _3445;
                        float _3667 = _3446;
                        uint _3668 = _3456;
                        uint _3669;
                        vec4 _3694;
                        float _3695;
                        vec4 _3710;
                        vec3 _3722;
                        vec4 _3737;
                        vec4 _3752;
                        float _3798;
                        bool _3799;
                        for (;;)
                        {
                            uint _3679 = ((_3447 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3668));
                            _3669 = (_3668 + 4294967295u) & _3668;
                            uint _3681 = _3679 * 40u;
                            _3694 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3681)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 3u)).x));
                            _3695 = _3694.w;
                            uint _3697 = (_3679 * 40u) + 4u;
                            _3710 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3697)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 3u)).x));
                            uint _3712 = (_3679 * 40u) + 8u;
                            _3722 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3712)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3712 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3712 + 2u)).x));
                            uint _3724 = (_3679 * 40u) + 16u;
                            _3737 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3724)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 3u)).x));
                            uint _3739 = (_3679 * 40u) + 20u;
                            _3752 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3739)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 3u)).x));
                            uint _3754 = (_3679 * 40u) + 24u;
                            vec4 _3767 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3754)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3754 + 3u)).x));
                            uint _3773 = (_3679 * 40u) + 28u;
                            vec4 _3786 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3773)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 3u)).x));
                            _3798 = fma(_2141, _3786.z, fma(_2140, _3786.y, _3786.x * _2139)) + _3786.w;
                            _3799 = !((fma(_2141, _3767.z, fma(_2140, _3767.y, _3767.x * _2139)) + _3767.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3799)
                            {
                                float _3826 = _3694.x - _2139;
                                float _3827 = _3694.y - _2140;
                                float _3828 = _3694.z - _2141;
                                float _3829 = dot(vec3(_3826, _3827, _3828), vec3(_3826, _3827, _3828));
                                float _3832 = inversesqrt(_3829);
                                float _3833 = _3832 * _3826;
                                float _3834 = _3832 * _3827;
                                float _3835 = _3832 * _3828;
                                float _3839 = 1.0 - (_3829 / (_3695 * _3695));
                                float _5061 = isnan(0.0) ? _3839 : (isnan(_3839) ? 0.0 : max(_3839, 0.0));
                                float _3840 = isnan(1.0) ? _5061 : (isnan(_5061) ? 1.0 : min(_5061, 1.0));
                                float _3844 = sqrt(_3829) * _3710.w;
                                float _3846 = 1.39999997615814208984375 / (_3844 + 1.39999997615814208984375);
                                float _3847 = _3846 * _3846;
                                float _3850 = ((1.0 - _3847) * dot(vec3(_3833, _3834, _3835), vec3(_974, _977, _980))) + _3847;
                                float _3853 = _3844 * _3844;
                                float _3857 = (fma(_2141, _3737.z, fma(_2140, _3737.y, _3737.x * _2139)) + _3737.w) / _3798;
                                float _3858 = (fma(_2141, _3752.z, fma(_2140, _3752.y, _3752.x * _2139)) + _3752.w) / _3798;
                                float _3862 = 1.0 - dot(vec2(_3857, _3858), vec2(_3857, _3858));
                                float _5077 = isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0));
                                float _3863 = isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0));
                                float _3864 = _3863 * (((isnan(0.0) ? _3850 : (isnan(_3850) ? 0.0 : max(_3850, 0.0))) * _3840) / ((_3853 * 0.699999988079071044921875) + 1.0));
                                float _3876 = exp2(log2(1.0 / ((_3853 * 3.5) + 5.0)) * 0.25);
                                float _3877 = 1.0 - _1049;
                                float _3884 = sqrt(1.0 - ((1.0 - (_3877 * _3877)) * (1.0 - (_3876 * _3876))));
                                float _3885 = _3884 * _3884;
                                float _3886 = _3885 * _3885;
                                float _3887 = _3833 - _3307;
                                float _3888 = _3834 - _3308;
                                float _3889 = _3835 - _3309;
                                float _3893 = inversesqrt(dot(vec3(_3887, _3888, _3889), vec3(_3887, _3888, _3889)));
                                float _3897 = dot(vec3(_974, _977, _980), vec3((-0.0) - _3307, (-0.0) - _3308, (-0.0) - _3309));
                                float _5088 = isnan(0.0) ? _3897 : (isnan(_3897) ? 0.0 : max(_3897, 0.0));
                                float _3900 = isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0));
                                float _3901 = dot(vec3(_974, _977, _980), vec3(_3893 * _3887, _3893 * _3888, _3893 * _3889));
                                float _5099 = isnan(0.0) ? _3901 : (isnan(_3901) ? 0.0 : max(_3901, 0.0));
                                float _3904 = isnan(1.0) ? _5099 : (isnan(_5099) ? 1.0 : min(_5099, 1.0));
                                float _3908 = ((_3904 * _3904) * (_3886 + (-1.0))) + 1.0;
                                float _3909 = _3846 * _3885;
                                float _3910 = _3909 * _3909;
                                float _3916 = ((1.0 - _3910) * dot(vec3(_974, _977, _980), vec3(_3833, _3834, _3835))) + _3910;
                                float _5110 = isnan(0.0) ? _3916 : (isnan(_3916) ? 0.0 : max(_3916, 0.0));
                                float _3917 = isnan(1.0) ? _5110 : (isnan(_5110) ? 1.0 : min(_5110, 1.0));
                                float _3918 = 1.0 - _3885;
                                float _3928 = (0.5 / (((_3917 * ((_3900 * _3918) + _3885)) + 9.9999999392252902907785028219223e-09) + (((_3917 * _3918) + _3885) * _3900))) * _3917;
                                float _5121 = isnan(0.0) ? _3928 : (isnan(_3928) ? 0.0 : max(_3928, 0.0));
                                float _3938 = (_3863 * _3840) * (((_3886 * 3.1415927410125732421875) * (isnan(1.0) ? _5121 : (isnan(_5121) ? 1.0 : min(_5121, 1.0)))) / ((_3908 * _3908) * ((_3853 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3864 * _3710.z;
                                frontier_phi_88_pred_1 = _3864 * _3710.y;
                                frontier_phi_88_pred_2 = _3864 * _3710.x;
                                frontier_phi_88_pred_3 = _3938 * _3722.z;
                                frontier_phi_88_pred_4 = _3938 * _3722.y;
                                frontier_phi_88_pred_5 = _3938 * _3722.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3947 = frontier_phi_88_pred;
                            _3946 = frontier_phi_88_pred_1;
                            _3945 = frontier_phi_88_pred_2;
                            _3944 = frontier_phi_88_pred_3;
                            _3943 = frontier_phi_88_pred_4;
                            _3942 = frontier_phi_88_pred_5;
                            _3652 = _3945 + _3665;
                            _3653 = _3946 + _3666;
                            _3654 = _3947 + _3667;
                            _3649 = _3942 + _3662;
                            _3650 = _3943 + _3663;
                            _3651 = _3944 + _3664;
                            if (_3669 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3662 = _3649;
                                _3663 = _3650;
                                _3664 = _3651;
                                _3665 = _3652;
                                _3666 = _3653;
                                _3667 = _3654;
                                _3668 = _3669;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3654;
                        frontier_phi_82_pred_1 = _3653;
                        frontier_phi_82_pred_2 = _3652;
                        frontier_phi_82_pred_3 = _3651;
                        frontier_phi_82_pred_4 = _3650;
                        frontier_phi_82_pred_5 = _3649;
                    }
                    _3292 = frontier_phi_82_pred;
                    _3290 = frontier_phi_82_pred_1;
                    _3288 = frontier_phi_82_pred_2;
                    _3286 = frontier_phi_82_pred_3;
                    _3284 = frontier_phi_82_pred_4;
                    _3282 = frontier_phi_82_pred_5;
                    uint _3448 = _3447 + 1u;
                    if (_3448 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3441 = _3282;
                        _3442 = _3284;
                        _3443 = _3286;
                        _3444 = _3288;
                        _3445 = _3290;
                        _3446 = _3292;
                        _3447 = _3448;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3288;
                frontier_phi_63_64_ladder_1 = _3292;
                frontier_phi_63_64_ladder_2 = _3290;
                frontier_phi_63_64_ladder_3 = _3286;
                frontier_phi_63_64_ladder_4 = _3284;
                frontier_phi_63_64_ladder_5 = _3282;
            }
            else
            {
                frontier_phi_63_64_ladder = _3166;
                frontier_phi_63_64_ladder_1 = _3170;
                frontier_phi_63_64_ladder_2 = _3168;
                frontier_phi_63_64_ladder_3 = _3164;
                frontier_phi_63_64_ladder_4 = _3162;
                frontier_phi_63_64_ladder_5 = _3160;
            }
            _3281 = frontier_phi_63_64_ladder_5;
            _3283 = frontier_phi_63_64_ladder_4;
            _3285 = frontier_phi_63_64_ladder_3;
            _3287 = frontier_phi_63_64_ladder;
            _3289 = frontier_phi_63_64_ladder_2;
            _3291 = frontier_phi_63_64_ladder_1;
        }
        float _3296 = isnan(1.0) ? _1033 : (isnan(_1033) ? 1.0 : min(_1033, 1.0));
        _3093 = (_3296 * _3287) + _2605;
        _3095 = (_3296 * _3289) + _2607;
        _3097 = (_3296 * _3291) + _2609;
        _3099 = ((_3281 * _1017) * _3296) + _2943;
        _3101 = ((_3283 * _1019) * _3296) + _2945;
        _3103 = ((_3285 * _1020) * _3296) + _2947;
    }
    else
    {
        _3093 = _2605;
        _3095 = _2607;
        _3097 = _2609;
        _3099 = _2943;
        _3101 = _2945;
        _3103 = _2947;
    }
    float _5137 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
    float _5148 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _5159 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _3120 = ((isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0))) * (_3093 + ((isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0))) * _1033))) + ((_3099 + ((isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0))) * _1871)) * cbPerFrame._m0[3u].x);
    float _3121 = ((isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0))) * (_3095 + ((isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0))) * _1033))) + ((_3101 + ((isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0))) * _1871)) * cbPerFrame._m0[3u].x);
    float _3122 = ((isnan(1.0) ? _5159 : (isnan(_5159) ? 1.0 : min(_5159, 1.0))) * (_3097 + ((isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))) * _1033))) + ((_3103 + ((isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0))) * _1871)) * cbPerFrame._m0[3u].x);
    uint _3123 = _282 + 6u;
    float _3131 = _955 / cbSceneParam._m0[86u].x;
    float _3132 = _956 / cbSceneParam._m0[86u].y;
    vec4 _3146 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3131, _3132, (log2((isnan(cbSceneParam._m0[77u].w) ? _877 : (isnan(_877) ? cbSceneParam._m0[77u].w : min(_877, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3148 = _3146.x;
    float _3149 = _3146.y;
    float _3150 = _3146.z;
    float _3151 = _3146.w;
    float _3223;
    float _3225;
    float _3227;
    float _3229;
    if (_877 > cbSceneParam._m0[78u].w)
    {
        float _3185 = isnan(_877) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _877 : min(cbSceneParam._m0[80u].w, _877));
        float _3186 = _3185 / _877;
        float _3197 = _3186 * _928;
        float _3198 = _929 * _3186;
        float _3199 = (-0.0) - _3198;
        float _3201 = _3186 * _930;
        float _3203 = (cbSceneParam._m0[77u].w * _3199) / _3185;
        float _3204 = _3203 + cbSceneParam._m0[79u].w;
        float _3205 = cbSceneParam._m0[79u].w - _3198;
        float _3211 = sqrt(((_3197 * _3197) + (_3198 * _3198)) + (_3201 * _3201));
        float _3214 = (1.0 - (cbSceneParam._m0[77u].w / _3185)) * _3211;
        float _3219 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3221 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3398;
        if (abs((_3199 - _3203) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3398 = ((((_3204 > 0.0) ? exp2(_3219 * _3204) : (2.0 - exp2(_3221 * _3204))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3214;
        }
        else
        {
            float _3342 = 1.0 / cbSceneParam._m0[80u].x;
            float _3343 = isnan(_3205) ? _3204 : (isnan(_3204) ? _3205 : max(_3204, _3205));
            float _3344 = isnan(_3205) ? _3204 : (isnan(_3204) ? _3205 : min(_3204, _3205));
            float _3353 = isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : min(_3343, 0.0));
            float _3354 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : min(_3344, 0.0));
            _3398 = ((abs(_3211 / _3199) * cbSceneParam._m0[80u].y) * ((((_3353 - _3354) * 2.0) - ((exp2(_3219 * (isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : max(_3343, 0.0)))) - exp2(_3219 * (isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0))))) * _3342)) - ((exp2(_3221 * _3353) - exp2(_3221 * _3354)) * _3342))) + (_3214 * cbSceneParam._m0[80u].z);
        }
        vec4 _3400 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3131, _3132, 1.0), 0.0);
        float _3409 = exp2((_3398 * (-1.44269502162933349609375)) * (1.0 - _3400.w));
        float _3410 = log2(_3409);
        float _3426 = log2(_3151);
        _3223 = (exp2(_3426 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3410 * cbSceneParam._m0[78u].x)) * _3400.x) / cbSceneParam._m0[78u].x)) + _3148;
        _3225 = (exp2(_3426 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3410 * cbSceneParam._m0[78u].y)) * _3400.y) / cbSceneParam._m0[78u].y)) + _3149;
        _3227 = (exp2(_3426 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3410 * cbSceneParam._m0[78u].z)) * _3400.z) / cbSceneParam._m0[78u].z)) + _3150;
        _3229 = _3409 * _3151;
    }
    else
    {
        _3223 = _3148;
        _3225 = _3149;
        _3227 = _3150;
        _3229 = _3151;
    }
    bool _3436;
    vec4 _3239;
    vec4 _3261;
    float _3263;
    float _3267;
    float _3268;
    float _3269;
    float _3270;
    bool _3280;
    for (;;)
    {
        _3239 = cbMatDynParam._m0[0u];
        float _3241 = roundEven(_3239.y);
        bool _3242 = _3241 == 3.0;
        float _3243 = log2(_3229);
        float _3250 = exp2(_3243 * cbSceneParam._m0[78u].x) * _3120;
        float _3251 = exp2(_3243 * cbSceneParam._m0[78u].y) * _3121;
        float _3252 = exp2(_3243 * cbSceneParam._m0[78u].z) * _3122;
        float _3259 = _944 + (-0.5);
        _3261 = cbMtdParam._m0[1u];
        _3263 = _3261.y * _3259;
        float _3266 = (_3241 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3267 = _3266 * (_3242 ? _3250 : (_3250 + (cbSceneParam._m0[72u].w * _3223)));
        _3268 = _3266 * (_3242 ? _3251 : (_3251 + (cbSceneParam._m0[72u].w * _3225)));
        _3269 = _3266 * (_3242 ? _3252 : (_3252 + (cbSceneParam._m0[72u].w * _3227)));
        _3270 = _3259 * 0.999000012874603271484375;
        _3280 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3280)
        {
            if ((cbInstanceData._m0[_282 + 7u].x + _3270) < 0.5)
            {
                _3436 = true;
                break;
            }
        }
        uint _3377 = _993 + uint(_3239.w);
        if ((cbInstanceData._m0[_3377].w < 1.0) && ((cbInstanceData._m0[_3377].w + _3270) < 0.5))
        {
            _3436 = true;
            break;
        }
        if ((_3263 + 1.0) < _3261.x)
        {
            _3436 = true;
            break;
        }
        _3436 = false;
        break;
    }
    float _3640;
    if (_3436)
    {
        discard_state = true;
        _3640 = 0.0;
    }
    else
    {
        _3640 = cbInstanceData._m0[_3123].w;
    }
    SV_Target.x = _3267;
    SV_Target.y = _3268;
    SV_Target.z = _3269;
    SV_Target.w = _3640;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3123].w;
    discard_exit();
}


