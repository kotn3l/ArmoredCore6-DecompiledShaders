#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1390;
float _4052;
float _4053;
float _4054;
float _4055;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _240 = _239 * _231;
    float _241 = _239 * _232;
    float _242 = _239 * _233;
    float _246 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _247 = _246 * NORMAL.x;
    float _248 = _246 * NORMAL.y;
    float _249 = _246 * NORMAL.z;
    float _253 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _254 = _253 * TANGENT.x;
    float _255 = _253 * TANGENT.y;
    float _256 = _253 * TANGENT.z;
    uint _259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _259 + 1u;
    uint _268 = _259 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_259].x * cbInstanceData._m0[_259].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _305 = _299.x * cbMtdParam._m0[11u].x;
    float _306 = _299.y * cbMtdParam._m0[11u].y;
    float _307 = _299.z * cbMtdParam._m0[11u].z;
    vec4 _326 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _364 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _366 = _364.x;
    float _378 = dot(vec4(_366, _364.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _395 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_366 - _378) * cbMtdParam._m0[24u].y) + _378) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4064 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
    float _403 = (_396 * ((_326.x * cbMtdParam._m0[12u].x) - _305)) + _305;
    float _404 = (_396 * ((_326.y * cbMtdParam._m0[12u].y) - _306)) + _306;
    float _405 = (_396 * ((_326.z * cbMtdParam._m0[12u].z) - _307)) + _307;
    vec4 _424 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _278) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _279) + cbTextureTilingScale._m0[14u].w));
    vec4 _444 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _461 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _463 = _461.x;
    float _464 = _461.y;
    float _465 = _461.z;
    float _474 = ((_444.z - _465) * _396) + _465;
    float _477 = ((((_444.x - _463) * _396) + _463) * 2.0) + (-1.0);
    float _479 = ((((_444.y - _464) * _396) + _464) * 2.0) + (-1.0);
    float _480 = dot(vec2(_477, _479), vec2(_477, _479));
    float _4075 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _485 = sqrt(1.0 - (isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0))));
    float _488 = fma(_485, _247, fma(_479, _254, _477 * _240));
    float _491 = fma(_485, _248, fma(_479, _255, _477 * _241));
    float _494 = fma(_485, _249, fma(_479, _256, _477 * _242));
    float _498 = inversesqrt(dot(vec3(_488, _491, _494), vec3(_488, _491, _494)));
    vec4 _514 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _540 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _542 = _540.x;
    float _543 = 1.0 - _542;
    float _547 = ((_542 - _543) * cbMtdParam._m0[24u].z) + _543;
    float _549 = (cbMtdParam._m0[19u].x + dot(vec4(_498 * _488, _498 * _491, _498 * _494, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_547 * cbMtdParam._m0[21u].z);
    float _4086 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _550 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
    float _552 = (-0.0) - cbMtdParam._m0[24u].x;
    float _554 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _555 = isnan(1.0) ? _554 : (isnan(_554) ? 1.0 : min(_554, 1.0));
    float _562 = _550 - ((_550 * TEXCOORD_8.x) * _555);
    float _563 = _550 - ((_550 * TEXCOORD_8.y) * _555);
    float _564 = _550 - ((_550 * TEXCOORD_8.z) * _555);
    float _571 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _575 = ((isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : min(_571, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _583 = (_575 - (((_547 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _575))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4117 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _584 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _588 = ((_562 * ((_424.x * cbMtdParam._m0[18u].x) - _403)) * _584) + _403;
    float _589 = ((_563 * ((_424.y * cbMtdParam._m0[18u].y) - _404)) * _584) + _404;
    float _590 = ((_564 * ((_424.z * cbMtdParam._m0[18u].z) - _405)) * _584) + _405;
    vec4 _602 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _278) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _279) + cbTextureTilingScale._m0[19u].w));
    float _604 = _602.x;
    float _605 = 1.0 - _604;
    float _632 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_604 - _605) * cbMtdParam._m0[24u].w) + _605) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4128 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _633 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
    float _641 = ((((cbMtdParam._m0[10u].x - _588) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _633) + _588;
    float _642 = ((((cbMtdParam._m0[10u].y - _589) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _633) + _589;
    float _643 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _590)) * _633) + _590;
    vec4 _669 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _671 = _669.x;
    float _689 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _278) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _279) + cbTextureTilingScale._m0[9u].w)).x - _671) * _396) + _671;
    float _693 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _689) * cbMtdParam._m0[19u].z) + _689;
    float _696 = _693 - ((_584 * _562) * _693);
    float _698 = _696 - (_696 * _633);
    vec4 _712 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _719 = (_712.x * 2.0) + (-1.0);
    float _720 = (_712.y * 2.0) + (-1.0);
    float _721 = dot(vec2(_719, _720), vec2(_719, _720));
    float _4139 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _730 = (((_712.z - _474) * _562) * _584) + _474;
    float _733 = ((cbMtdParam._m0[23u].y - _730) * _633) + _730;
    vec4 _752 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _278) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _279) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _758 = (_752.x * 2.0) + (-1.0);
    float _759 = (_752.y * 2.0) + (-1.0);
    float _760 = dot(vec2(_758, _759), vec2(_758, _759));
    float _4150 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _780 = (((cbMtdParam._m0[21u].x * _477) + ((_719 - _477) * _562)) * _584) + _477;
    float _781 = (((cbMtdParam._m0[21u].x * _479) + ((_720 - _479) * _563)) * _584) + _479;
    float _782 = (((sqrt(1.0 - (isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0)))) - _485) * _564) * _584) + _485;
    float _793 = (((_758 - _780) + (_780 * cbMtdParam._m0[22u].z)) * _633) + _780;
    float _794 = (((_759 - _781) + (_781 * cbMtdParam._m0[22u].z)) * _633) + _781;
    float _795 = ((sqrt(1.0 - (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0)))) - _782) * _633) + _782;
    float _797 = cbMtdParam._m0[22u].x + _514.w;
    float _800 = fma(_795, _247, fma(_794, _254, _793 * _240));
    float _803 = fma(_795, _248, fma(_794, _255, _793 * _241));
    float _806 = fma(_795, _249, fma(_794, _256, _793 * _242));
    float _810 = inversesqrt(dot(vec3(_800, _803, _806), vec3(_800, _803, _806)));
    float _811 = _810 * _800;
    float _812 = _810 * _803;
    float _813 = _810 * _806;
    float _4161 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _814 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _4183 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _4194 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _4205 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _4216 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _819 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
    float _833 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _873 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _883 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _873);
    float _884 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _873);
    float _885 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _873);
    float _889 = inversesqrt(dot(vec3(_883, _884, _885), vec3(_883, _884, _885)));
    float _890 = _883 * _889;
    float _891 = _884 * _889;
    float _892 = _885 * _889;
    vec4 _897 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _899 = _897.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1071 = sqrt(((_883 * _883) + (_884 * _884)) + (_885 * _885));
        float _1077 = (cbMatDynParam._m0[5u].x * _1071) + cbMatDynParam._m0[5u].y;
        float _4227 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1078 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1082 = (cbMatDynParam._m0[5u].z * _1071) + cbMatDynParam._m0[5u].w;
        float _4238 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) - _1078)) + _1078) < ((_899 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _910 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _911 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _929 = fma(_813, cbSceneParam._m0[5u].z, fma(_812, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _811));
    float _932 = fma(_813, cbSceneParam._m0[6u].z, fma(_812, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _811));
    float _935 = fma(_813, cbSceneParam._m0[7u].z, fma(_812, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _811));
    uint _948 = _259 + 9u;
    uint _949 = _948 + uint(cbMatDynParam._m0[0u].w);
    float _955 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_949].x;
    float _956 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)))) * cbInstanceData._m0[_949].y;
    float _957 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0)))) * cbInstanceData._m0[_949].z;
    float _4249 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _958 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
    float _4260 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _959 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
    float _4271 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _960 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
    float _961 = 1.0 - _819;
    float _962 = _958 * _961;
    float _963 = _959 * _961;
    float _964 = _960 * _961;
    float _969 = (_958 + (-0.039999999105930328369140625)) * _819;
    float _970 = (_959 + (-0.039999999105930328369140625)) * _819;
    float _971 = (_960 + (-0.039999999105930328369140625)) * _819;
    float _972 = _969 + 0.039999999105930328369140625;
    float _974 = _970 + 0.039999999105930328369140625;
    float _975 = _971 + 0.039999999105930328369140625;
    vec4 _984 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _910, cbSceneParam._m0[86u].y * _911));
    float _988 = ((isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * TEXCOORD_5.w) * _984.x;
    float _989 = dot(vec3(_811, _812, _813), vec3(_890, _891, _892));
    float _992 = _989 * 2.0;
    float _996 = (_992 * _811) - _890;
    float _997 = (_992 * _812) - _891;
    float _998 = (_992 * _813) - _892;
    float _1002 = abs(dot(vec3(_890, _891, _892), vec3(_811, _812, _813)));
    float _4282 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1004 = sqrt(_814);
    float _1017 = exp2((_1004 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1004 * 3.0));
    float _1023 = (1.0 - _1017) * ((_1004 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1024 = _1017 * _1004;
    float _1052 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1056 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1060 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1389;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1114 = fma(_1060, cbModelParam._m0[26u].z, fma(_1056, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1052));
        float _1118 = fma(_1060, cbModelParam._m0[27u].z, fma(_1056, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1052));
        float _1122 = fma(_1060, cbModelParam._m0[28u].z, fma(_1056, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1052));
        float _1147 = _1052 + _811;
        float _1148 = _1056 + _812;
        float _1149 = _1060 + _813;
        float _1159 = fma(_1149, cbModelParam._m0[26u].z, fma(_1148, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1147)) - _1114;
        float _1160 = fma(_1149, cbModelParam._m0[27u].z, fma(_1148, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1147)) - _1118;
        float _1161 = fma(_1149, cbModelParam._m0[28u].z, fma(_1148, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1147)) - _1122;
        float _1165 = inversesqrt(dot(vec3(_1159, _1160, _1161), vec3(_1159, _1160, _1161)));
        float _1178 = ((_1165 * _1159) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1114 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1179 = ((_1165 * _1160) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1118 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1180 = ((_1165 * _1161) / cbModelParam._m0[34u].z) + ((((((_1122 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1183 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1178, _1179, _1180), 0.0);
        vec4 _1190 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1178, _1179, _1180), 0.0);
        vec4 _1197 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1178, _1179, _1180), 0.0);
        vec4 _1204 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1178, _1179, _1180), 0.0);
        float _1217 = exp2((_1183.w + (-0.5)) * 20.0) * 2.0;
        float _1218 = _1217 * (_1183.x + (-0.5));
        float _1219 = _1217 * (_1183.y + (-0.5));
        float _1220 = _1217 * (_1183.z + (-0.5));
        float _1227 = exp2((_1190.w + (-0.5)) * 20.0) * 2.0;
        float _1228 = _1227 * (_1190.x + (-0.5));
        float _1229 = _1227 * (_1190.y + (-0.5));
        float _1230 = _1227 * (_1190.z + (-0.5));
        float _1237 = exp2((_1197.w + (-0.5)) * 20.0) * 2.0;
        float _1238 = _1237 * (_1197.x + (-0.5));
        float _1239 = _1237 * (_1197.y + (-0.5));
        float _1240 = _1237 * (_1197.z + (-0.5));
        float _1247 = exp2((_1204.w + (-0.5)) * 20.0) * 2.0;
        float _1248 = _1247 * (_1204.x + (-0.5));
        float _1249 = _1247 * (_1204.y + (-0.5));
        float _1250 = _1247 * (_1204.z + (-0.5));
        float _1251 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1252 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1253 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1254 = _1218 * 0.5;
        float _1255 = _1228 * 0.5;
        float _1256 = _1238 * 0.5;
        float _1257 = dot(vec3(_1254, _1255, _1256), vec3(_1254, _1255, _1256));
        float _1262 = (_1257 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1257);
        float _1271 = (dot(vec3(_811, _812, _813), vec3(_1262 * _1254, _1262 * _1255, _1262 * _1256)) + 1.0) * 0.5;
        float _4308 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1281 = sqrt(((_1255 * _1255) + (_1254 * _1254)) + (_1256 * _1256)) / (_1251 + 9.9999997473787516355514526367188e-06);
        float _4319 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1282 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1283 = _1282 * 2.0;
        float _1287 = (1.0 - _1282) / (_1282 + 1.0);
        float _4330 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1288 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
        float _1297 = ((((1.0 - _1288) * (_1283 + 2.0)) * exp2(log2(isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0))) * (_1283 + 1.0))) + _1288) * _1251;
        float _1298 = _1219 * 0.5;
        float _1299 = _1229 * 0.5;
        float _1300 = _1239 * 0.5;
        float _1301 = dot(vec3(_1298, _1299, _1300), vec3(_1298, _1299, _1300));
        float _1306 = (_1301 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1301);
        float _1314 = (dot(vec3(_811, _812, _813), vec3(_1306 * _1298, _1306 * _1299, _1306 * _1300)) + 1.0) * 0.5;
        float _4341 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1323 = sqrt(((_1299 * _1299) + (_1298 * _1298)) + (_1300 * _1300)) / (_1252 + 9.9999997473787516355514526367188e-06);
        float _4352 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1324 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1325 = _1324 * 2.0;
        float _1329 = (1.0 - _1324) / (_1324 + 1.0);
        float _4363 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1330 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
        float _1339 = ((((1.0 - _1330) * (_1325 + 2.0)) * exp2(log2(isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) * (_1325 + 1.0))) + _1330) * _1252;
        float _1340 = _1220 * 0.5;
        float _1341 = _1230 * 0.5;
        float _1342 = _1240 * 0.5;
        float _1343 = dot(vec3(_1340, _1341, _1342), vec3(_1340, _1341, _1342));
        float _1348 = (_1343 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1343);
        float _1356 = (dot(vec3(_811, _812, _813), vec3(_1348 * _1340, _1348 * _1341, _1348 * _1342)) + 1.0) * 0.5;
        float _4374 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1365 = sqrt(((_1341 * _1341) + (_1340 * _1340)) + (_1342 * _1342)) / (_1253 + 9.9999997473787516355514526367188e-06);
        float _4385 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1366 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
        float _1367 = _1366 * 2.0;
        float _1371 = (1.0 - _1366) / (_1366 + 1.0);
        float _4396 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1372 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
        float _1381 = ((((1.0 - _1372) * (_1367 + 2.0)) * exp2(log2(isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0))) * (_1367 + 1.0))) + _1372) * _1253;
        _1389 = _1220;
        _1391 = _1219;
        _1392 = _1218;
        _1393 = _1230;
        _1394 = _1229;
        _1395 = _1228;
        _1396 = _1240;
        _1397 = _1239;
        _1398 = _1238;
        _1399 = _1253;
        _1400 = _1252;
        _1401 = _1251;
        _1402 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0)));
        _1403 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0)));
        _1404 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0)));
    }
    else
    {
        _1389 = _1390;
        _1391 = _1390;
        _1392 = _1390;
        _1393 = _1390;
        _1394 = _1390;
        _1395 = _1390;
        _1396 = _1390;
        _1397 = _1390;
        _1398 = _1390;
        _1399 = _1390;
        _1400 = _1390;
        _1401 = _1390;
        _1402 = 0.0;
        _1403 = 0.0;
        _1404 = 0.0;
    }
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1432 = fma(_1060, cbModelParam._m0[30u].z, fma(_1056, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1052));
        float _1436 = fma(_1060, cbModelParam._m0[31u].z, fma(_1056, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1052));
        float _1440 = fma(_1060, cbModelParam._m0[32u].z, fma(_1056, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1052));
        float _1463 = _1052 + _811;
        float _1464 = _1056 + _812;
        float _1465 = _1060 + _813;
        float _1475 = fma(_1465, cbModelParam._m0[30u].z, fma(_1464, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1463)) - _1432;
        float _1476 = fma(_1465, cbModelParam._m0[31u].z, fma(_1464, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1463)) - _1436;
        float _1477 = fma(_1465, cbModelParam._m0[32u].z, fma(_1464, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1463)) - _1440;
        float _1481 = inversesqrt(dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477)));
        float _1494 = ((_1481 * _1475) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1432 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1495 = ((_1481 * _1476) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1436 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1496 = ((_1481 * _1477) / cbModelParam._m0[35u].z) + ((((((_1440 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1498 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1505 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1512 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1519 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        float _1531 = exp2((_1498.w + (-0.5)) * 20.0) * 2.0;
        float _1532 = _1531 * (_1498.x + (-0.5));
        float _1533 = _1531 * (_1498.y + (-0.5));
        float _1534 = _1531 * (_1498.z + (-0.5));
        float _1541 = exp2((_1505.w + (-0.5)) * 20.0) * 2.0;
        float _1542 = _1541 * (_1505.x + (-0.5));
        float _1543 = _1541 * (_1505.y + (-0.5));
        float _1544 = _1541 * (_1505.z + (-0.5));
        float _1551 = exp2((_1512.w + (-0.5)) * 20.0) * 2.0;
        float _1552 = _1551 * (_1512.x + (-0.5));
        float _1553 = _1551 * (_1512.y + (-0.5));
        float _1554 = _1551 * (_1512.z + (-0.5));
        float _1561 = exp2((_1519.w + (-0.5)) * 20.0) * 2.0;
        float _1562 = _1561 * (_1519.x + (-0.5));
        float _1563 = _1561 * (_1519.y + (-0.5));
        float _1564 = _1561 * (_1519.z + (-0.5));
        float _1565 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1566 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1567 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1568 = _1532 * 0.5;
        float _1569 = _1542 * 0.5;
        float _1570 = _1552 * 0.5;
        float _1571 = dot(vec3(_1568, _1569, _1570), vec3(_1568, _1569, _1570));
        float _1576 = (_1571 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1571);
        float _1584 = (dot(vec3(_811, _812, _813), vec3(_1576 * _1568, _1576 * _1569, _1576 * _1570)) + 1.0) * 0.5;
        float _4437 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1593 = sqrt(((_1569 * _1569) + (_1568 * _1568)) + (_1570 * _1570)) / (_1565 + 9.9999997473787516355514526367188e-06);
        float _4448 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1595 = _1594 * 2.0;
        float _1599 = (1.0 - _1594) / (_1594 + 1.0);
        float _4459 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1600 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1609 = ((((1.0 - _1600) * (_1595 + 2.0)) * exp2(log2(isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_1595 + 1.0))) + _1600) * _1565;
        float _1610 = _1533 * 0.5;
        float _1611 = _1543 * 0.5;
        float _1612 = _1553 * 0.5;
        float _1613 = dot(vec3(_1610, _1611, _1612), vec3(_1610, _1611, _1612));
        float _1618 = (_1613 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1613);
        float _1626 = (dot(vec3(_811, _812, _813), vec3(_1618 * _1610, _1618 * _1611, _1618 * _1612)) + 1.0) * 0.5;
        float _4470 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1635 = sqrt(((_1611 * _1611) + (_1610 * _1610)) + (_1612 * _1612)) / (_1566 + 9.9999997473787516355514526367188e-06);
        float _4481 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1637 = _1636 * 2.0;
        float _1641 = (1.0 - _1636) / (_1636 + 1.0);
        float _4492 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _1651 = ((((1.0 - _1642) * (_1637 + 2.0)) * exp2(log2(isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_1637 + 1.0))) + _1642) * _1566;
        float _1652 = _1534 * 0.5;
        float _1653 = _1544 * 0.5;
        float _1654 = _1554 * 0.5;
        float _1655 = dot(vec3(_1652, _1653, _1654), vec3(_1652, _1653, _1654));
        float _1660 = (_1655 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1655);
        float _1668 = (dot(vec3(_811, _812, _813), vec3(_1660 * _1652, _1660 * _1653, _1660 * _1654)) + 1.0) * 0.5;
        float _4503 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1677 = sqrt(((_1653 * _1653) + (_1652 * _1652)) + (_1654 * _1654)) / (_1567 + 9.9999997473787516355514526367188e-06);
        float _4514 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _1679 = _1678 * 2.0;
        float _1683 = (1.0 - _1678) / (_1678 + 1.0);
        float _4525 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1684 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _1693 = ((((1.0 - _1684) * (_1679 + 2.0)) * exp2(log2(isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0))) * (_1679 + 1.0))) + _1684) * _1567;
        _1701 = _1534;
        _1702 = _1533;
        _1703 = _1532;
        _1704 = _1544;
        _1705 = _1543;
        _1706 = _1542;
        _1707 = _1554;
        _1708 = _1553;
        _1709 = _1552;
        _1710 = _1567;
        _1711 = _1566;
        _1712 = _1565;
        _1713 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)));
        _1714 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)));
        _1715 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)));
    }
    else
    {
        _1701 = _1390;
        _1702 = _1390;
        _1703 = _1390;
        _1704 = _1390;
        _1705 = _1390;
        _1706 = _1390;
        _1707 = _1390;
        _1708 = _1390;
        _1709 = _1390;
        _1710 = _1390;
        _1711 = _1390;
        _1712 = _1390;
        _1713 = 0.0;
        _1714 = 0.0;
        _1715 = 0.0;
    }
    float _1725 = (cbModelParam._m0[1u].x * (_1713 - _1402)) + _1402;
    float _1726 = (cbModelParam._m0[1u].x * (_1714 - _1403)) + _1403;
    float _1727 = (cbModelParam._m0[1u].x * (_1715 - _1404)) + _1404;
    float _1748 = fma(_1727, cbSceneParam._m0[89u].z, fma(_1726, cbSceneParam._m0[89u].y, _1725 * cbSceneParam._m0[89u].x));
    float _1751 = fma(_1727, cbSceneParam._m0[90u].z, fma(_1726, cbSceneParam._m0[90u].y, _1725 * cbSceneParam._m0[90u].x));
    float _1754 = fma(_1727, cbSceneParam._m0[91u].z, fma(_1726, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1725));
    float _1769 = _996 * 0.5;
    float _1770 = _997 * 0.5;
    float _1771 = _998 * 0.5;
    float _1772 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1703, _1706, _1709, _1712));
    float _1775 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1702, _1705, _1708, _1711));
    float _1778 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1701, _1704, _1707, _1710));
    float _1812;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1785 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1389, _1393, _1396, _1399));
        float _1789 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1391, _1394, _1397, _1400));
        float _1793 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1392, _1395, _1398, _1401));
        float _1800 = dot(vec4(cbModelParam._m0[39u]), vec4(_1769, _1770, _1771, 1.0));
        _1812 = dot(vec3(isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0)), isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)), isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1800) ? 0.0 : (isnan(0.0) ? _1800 : max(0.0, _1800))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1812 = 1.0;
    }
    float _1823;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1814 = dot(vec4(cbModelParam._m0[40u]), vec4(_1769, _1770, _1771, 1.0));
        _1823 = dot(vec3(isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)), isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0)), isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1814) ? 0.0 : (isnan(0.0) ? _1814 : max(0.0, _1814))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1823 = 1.0;
    }
    float _1827 = (_1823 * cbModelParam._m0[1u].x) + (_1812 * (1.0 - cbModelParam._m0[1u].x));
    float _1837 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _814);
    float _1838 = isnan(_1837) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1837 : min(cbModelParam._m0[25u].z, _1837));
    float _1918;
    float _1920;
    float _1922;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1885 = fma(_1060, cbModelParam._m0[13u].z, fma(_1056, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1052)) + cbModelParam._m0[13u].w;
        float _1889 = fma(_1060, cbModelParam._m0[14u].z, fma(_1056, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1052)) + cbModelParam._m0[14u].w;
        float _1893 = fma(_1060, cbModelParam._m0[15u].z, fma(_1056, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1052)) + cbModelParam._m0[15u].w;
        float _1896 = fma(_998, cbModelParam._m0[13u].z, fma(_997, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _996));
        float _1899 = fma(_998, cbModelParam._m0[14u].z, fma(_997, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _996));
        float _1902 = fma(_998, cbModelParam._m0[15u].z, fma(_997, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _996));
        float _1930;
        if (_1896 > 0.0)
        {
            _1930 = abs((1.0 - _1885) / _1896);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1896 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1885 + 1.0) / _1896);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1930 = frontier_phi_17_15_ladder;
        }
        float _2101;
        if (_1899 > 0.0)
        {
            _2101 = abs((1.0 - _1889) / _1899);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1899 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1889 + 1.0) / _1899);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2101 = frontier_phi_26_22_ladder;
        }
        float _2396;
        if (_1902 > 0.0)
        {
            _2396 = abs((1.0 - _1893) / _1902);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1902 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1893 + 1.0) / _1902);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2396 = frontier_phi_38_33_ladder;
        }
        float _2398 = isnan(_2101) ? _1930 : (isnan(_1930) ? _2101 : min(_1930, _2101));
        float _2399 = isnan(_2396) ? _2398 : (isnan(_2398) ? _2396 : min(_2398, _2396));
        float _2403 = (_2399 * _1896) + _1885;
        float _2404 = (_2399 * _1899) + _1889;
        float _2405 = (_2399 * _1902) + _1893;
        float _2406 = _2399 * 9.9999997473787516355514526367188e-05;
        float _2408 = (-1.0) - _2406;
        float _2410 = _2406 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2405 > _2410) || ((_2405 < _2408) || ((_2404 > _2410) || ((_2404 < _2408) || ((_2403 < _2408) || (_2403 > _2410))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2550 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2405, cbModelParam._m0[9u].z, fma(_2404, cbModelParam._m0[9u].y, _2403 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2405, cbModelParam._m0[10u].z, fma(_2404, cbModelParam._m0[10u].y, _2403 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2405, cbModelParam._m0[11u].z, fma(_2404, cbModelParam._m0[11u].y, _2403 * cbModelParam._m0[11u].x))), _1838);
            frontier_phi_16_38_ladder = _2550.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2550.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2550.x * cbModelParam._m0[1u].y;
        }
        _1918 = frontier_phi_16_38_ladder_2;
        _1920 = frontier_phi_16_38_ladder_1;
        _1922 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1906 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_996, _997, _998), _1838);
        _1918 = _1906.x * cbModelParam._m0[1u].y;
        _1920 = _1906.y * cbModelParam._m0[1u].y;
        _1922 = _1906.z * cbModelParam._m0[1u].y;
    }
    float _1926 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _814);
    float _1927 = isnan(_1926) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1926 : min(cbModelParam._m0[25u].w, _1926));
    float _2016;
    float _2018;
    float _2020;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1980 = fma(_1060, cbModelParam._m0[21u].z, fma(_1056, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1052)) + cbModelParam._m0[21u].w;
        float _1984 = fma(_1060, cbModelParam._m0[22u].z, fma(_1056, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1052)) + cbModelParam._m0[22u].w;
        float _1988 = fma(_1060, cbModelParam._m0[23u].z, fma(_1056, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1052)) + cbModelParam._m0[23u].w;
        float _1991 = fma(_998, cbModelParam._m0[21u].z, fma(_997, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _996));
        float _1994 = fma(_998, cbModelParam._m0[22u].z, fma(_997, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _996));
        float _1997 = fma(_998, cbModelParam._m0[23u].z, fma(_997, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _996));
        float _2106;
        if (_1991 > 0.0)
        {
            _2106 = abs((1.0 - _1980) / _1991);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1991 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1980 + 1.0) / _1991);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2106 = frontier_phi_28_24_ladder;
        }
        float _2423;
        if (_1994 > 0.0)
        {
            _2423 = abs((1.0 - _1984) / _1994);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1994 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1984 + 1.0) / _1994);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2423 = frontier_phi_40_35_ladder;
        }
        float _2761;
        if (_1997 > 0.0)
        {
            _2761 = abs((1.0 - _1988) / _1997);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1997 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1988 + 1.0) / _1997);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2761 = frontier_phi_50_47_ladder;
        }
        float _2763 = isnan(_2423) ? _2106 : (isnan(_2106) ? _2423 : min(_2106, _2423));
        float _2764 = isnan(_2761) ? _2763 : (isnan(_2763) ? _2761 : min(_2763, _2761));
        float _2768 = (_2764 * _1991) + _1980;
        float _2769 = (_2764 * _1994) + _1984;
        float _2770 = (_2764 * _1997) + _1988;
        float _2771 = _2764 * 9.9999997473787516355514526367188e-05;
        float _2772 = (-1.0) - _2771;
        float _2774 = _2771 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2770 > _2774) || ((_2770 < _2772) || ((_2769 > _2774) || ((_2769 < _2772) || ((_2768 < _2772) || (_2768 > _2774))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2892 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2770, cbModelParam._m0[17u].z, fma(_2769, cbModelParam._m0[17u].y, _2768 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2770, cbModelParam._m0[18u].z, fma(_2769, cbModelParam._m0[18u].y, _2768 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2770, cbModelParam._m0[19u].z, fma(_2769, cbModelParam._m0[19u].y, _2768 * cbModelParam._m0[19u].x))), _1927);
            frontier_phi_25_50_ladder = _2892.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2892.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2892.x * cbModelParam._m0[1u].z;
        }
        _2016 = frontier_phi_25_50_ladder_2;
        _2018 = frontier_phi_25_50_ladder_1;
        _2020 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2000 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_996, _997, _998), _1927);
        _2016 = _2000.x * cbModelParam._m0[1u].z;
        _2018 = _2000.y * cbModelParam._m0[1u].z;
        _2020 = _2000.z * cbModelParam._m0[1u].z;
    }
    float _2033 = (((_1023 * _972) + _1024) * _988) * ((cbModelParam._m0[1u].w * (_2016 - _1918)) + _1918);
    float _2035 = (((_1023 * _974) + _1024) * _988) * ((cbModelParam._m0[1u].w * (_2018 - _1920)) + _1920);
    float _2037 = (((_1023 * _975) + _1024) * _988) * ((cbModelParam._m0[1u].w * (_2020 - _1922)) + _1922);
    float _2040 = fma(_2037, cbSceneParam._m0[89u].z, fma(_2035, cbSceneParam._m0[89u].y, _2033 * cbSceneParam._m0[89u].x));
    float _2043 = fma(_2037, cbSceneParam._m0[90u].z, fma(_2035, cbSceneParam._m0[90u].y, _2033 * cbSceneParam._m0[90u].x));
    float _2046 = fma(_2037, cbSceneParam._m0[91u].z, fma(_2035, cbSceneParam._m0[91u].y, _2033 * cbSceneParam._m0[91u].x));
    float _2080 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2084 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2088 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2092 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2093 = _2080 / _2092;
    float _2094 = _2084 / _2092;
    float _2095 = _2088 / _2092;
    float _2242;
    float _2243;
    float _2244;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2122 = ((uint(_2095 > cbSceneParam._m0[59u].y) + uint(_2095 > cbSceneParam._m0[59u].x)) + uint(_2095 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2123 = _2122 + 43u;
        uint _2131 = _2122 + 44u;
        uint _2139 = _2122 + 45u;
        uint _2147 = _2122 + 46u;
        float _2158 = fma(_2092, cbSceneParam._m0[_2123].w, fma(_2088, cbSceneParam._m0[_2123].z, fma(_2084, cbSceneParam._m0[_2123].y, _2080 * cbSceneParam._m0[_2123].x)));
        float _2162 = fma(_2092, cbSceneParam._m0[_2131].w, fma(_2088, cbSceneParam._m0[_2131].z, fma(_2084, cbSceneParam._m0[_2131].y, _2080 * cbSceneParam._m0[_2131].x)));
        float _2170 = fma(_2092, cbSceneParam._m0[_2147].w, fma(_2088, cbSceneParam._m0[_2147].z, fma(_2084, cbSceneParam._m0[_2147].y, _2080 * cbSceneParam._m0[_2147].x)));
        float _2175 = cbSceneParam._m0[33u].z * _2170;
        float _2177 = cbSceneParam._m0[33u].w * _2170;
        float _2180 = fma(_2092, cbSceneParam._m0[_2139].w, fma(_2088, cbSceneParam._m0[_2139].z, fma(_2084, cbSceneParam._m0[_2139].y, _2080 * cbSceneParam._m0[_2139].x))) / _2170;
        float _2228 = (cbSceneParam._m0[33u].x - sqrt(((_2094 * _2094) + (_2093 * _2093)) + (_2095 * _2095))) * cbSceneParam._m0[33u].y;
        float _4651 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
        float _2235 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2175 + _2158) / _2170, (_2177 + _2162) / _2170), _2180), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2177 + _2158) / _2170, (_2162 - _2175) / _2170), _2180), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2158 - _2175) / _2170, (_2162 - _2177) / _2170), _2180), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2158 - _2177) / _2170, (_2175 + _2162) / _2170), _2180), 0.0)).x), vec4(0.25)));
        _2242 = 1.0 - (_2235 * cbSceneParam._m0[34u].x);
        _2243 = 1.0 - (_2235 * cbSceneParam._m0[34u].y);
        _2244 = 1.0 - (_2235 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2242 = 1.0;
        _2243 = 1.0;
        _2244 = 1.0;
    }
    float _2308;
    float _2310;
    float _2312;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2296 = fma(_2092, cbSceneParam._m0[63u].w, fma(_2088, cbSceneParam._m0[63u].z, fma(_2084, cbSceneParam._m0[63u].y, _2080 * cbSceneParam._m0[63u].x)));
        float _2297 = fma(_2092, cbSceneParam._m0[60u].w, fma(_2088, cbSceneParam._m0[60u].z, fma(_2084, cbSceneParam._m0[60u].y, _2080 * cbSceneParam._m0[60u].x))) / _2296;
        float _2298 = fma(_2092, cbSceneParam._m0[61u].w, fma(_2088, cbSceneParam._m0[61u].z, fma(_2084, cbSceneParam._m0[61u].y, _2080 * cbSceneParam._m0[61u].x))) / _2296;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2297 >= cbSceneParam._m0[64u].x) && (_2298 >= cbSceneParam._m0[64u].y)) && (_2297 <= cbSceneParam._m0[64u].z)) && (_2298 <= cbSceneParam._m0[64u].w))
        {
            float _2436 = fma(_2092, cbSceneParam._m0[62u].w, fma(_2088, cbSceneParam._m0[62u].z, fma(_2084, cbSceneParam._m0[62u].y, _2080 * cbSceneParam._m0[62u].x))) / _2296;
            float _2440 = isnan(cbSceneParam._m0[41u].w) ? _2436 : (isnan(_2436) ? cbSceneParam._m0[41u].w : max(_2436, cbSceneParam._m0[41u].w));
            float _2483 = (cbSceneParam._m0[33u].x - sqrt(((_2094 * _2094) + (_2093 * _2093)) + (_2095 * _2095))) * cbSceneParam._m0[33u].y;
            float _4667 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
            float _2490 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2297, cbSceneParam._m0[33u].w + _2298), _2440), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2297, _2298 - cbSceneParam._m0[33u].z), _2440), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2297 - cbSceneParam._m0[33u].z, _2298 - cbSceneParam._m0[33u].w), _2440), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2297 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2298), _2440), 0.0)).x), vec4(0.25)));
            float _2494 = 1.0 - (_2490 * cbSceneParam._m0[34u].x);
            float _2495 = 1.0 - (_2490 * cbSceneParam._m0[34u].y);
            float _2496 = 1.0 - (_2490 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2496) ? _2244 : (isnan(_2244) ? _2496 : min(_2244, _2496));
            frontier_phi_37_36_ladder_1 = isnan(_2495) ? _2243 : (isnan(_2243) ? _2495 : min(_2243, _2495));
            frontier_phi_37_36_ladder_2 = isnan(_2494) ? _2242 : (isnan(_2242) ? _2494 : min(_2242, _2494));
        }
        else
        {
            frontier_phi_37_36_ladder = _2244;
            frontier_phi_37_36_ladder_1 = _2243;
            frontier_phi_37_36_ladder_2 = _2242;
        }
        _2308 = frontier_phi_37_36_ladder_2;
        _2310 = frontier_phi_37_36_ladder_1;
        _2312 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2308 = _2242;
        _2310 = _2243;
        _2312 = _2244;
    }
    uvec4 _2317 = floatBitsToUint(cbInstanceData._m0[_259 + 5u]);
    uint _2319 = _2317.x * 14u;
    uint _2320 = _2319 + 13u;
    float _2327 = _988 + (-1.0);
    float _2332 = (cbLight._m0[_2320].x * _2327) + 1.0;
    float _2333 = (cbLight._m0[_2320].y * _2327) + 1.0;
    float _2334 = (cbLight._m0[_2320].z * _2327) + 1.0;
    float _2335 = (cbLight._m0[_2320].w * _2327) + 1.0;
    uint _2336 = _2319 + 5u;
    float _2342 = isnan(1.0) ? _2333 : (isnan(_2333) ? 1.0 : min(_2333, 1.0));
    uint _2346 = _2319 + 4u;
    float _2355 = isnan(1.0) ? _2332 : (isnan(_2332) ? 1.0 : min(_2332, 1.0));
    uint _2359 = _2319 | 1u;
    float _2370 = dot(vec3(cbLight._m0[_2319].xyz), vec3(_811, _812, _813));
    float _2373 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_811, _812, _813));
    float _4703 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
    float _4714 = isnan(0.0) ? _2373 : (isnan(_2373) ? 0.0 : max(_2373, 0.0));
    float _2378 = (isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * 0.3183098733425140380859375;
    float _2380 = (isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * 0.3183098733425140380859375;
    float _2387 = ((cbLight._m0[_2336].x * _2342) * _2380) + (((cbLight._m0[_2346].x * _2308) * _2355) * _2378);
    float _2388 = ((_2342 * cbLight._m0[_2336].y) * _2380) + (((cbLight._m0[_2346].y * _2310) * _2355) * _2378);
    float _2389 = ((_2342 * cbLight._m0[_2336].z) * _2380) + (((cbLight._m0[_2346].z * _2312) * _2355) * _2378);
    uvec4 _2393 = floatBitsToUint(cbLight._m0[_2319 + 12u]);
    bool _2395 = _2393.x == 0u;
    float _2497;
    float _2499;
    float _2501;
    if (_2395)
    {
        _2497 = _2387;
        _2499 = _2388;
        _2501 = _2389;
    }
    else
    {
        uint _2505 = _2319 + 6u;
        float _2521 = (dot(vec3(cbLight._m0[_2319 + 2u].xyz), vec3(_811, _812, _813)) * 0.5) + 0.5;
        float _2522 = _2521 * _2521;
        float _4725 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0));
        float _2523 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
        float _2524 = isnan(1.0) ? _2334 : (isnan(_2334) ? 1.0 : min(_2334, 1.0));
        _2497 = (((cbLight._m0[_2505].x * 0.3183098733425140380859375) * _2523) * _2524) + _2387;
        _2499 = (((cbLight._m0[_2505].y * 0.3183098733425140380859375) * _2523) * _2524) + _2388;
        _2501 = (((cbLight._m0[_2505].z * 0.3183098733425140380859375) * _2523) * _2524) + _2389;
    }
    bool _2504 = _2393.y == 0u;
    float _2559;
    float _2561;
    float _2563;
    if (_2504)
    {
        _2559 = _2497;
        _2561 = _2499;
        _2563 = _2501;
    }
    else
    {
        uint _2732 = _2319 + 7u;
        float _2748 = (dot(vec3(cbLight._m0[_2319 + 3u].xyz), vec3(_811, _812, _813)) * 0.5) + 0.5;
        float _2749 = _2748 * _2748;
        float _4741 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
        float _2750 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2751 = isnan(1.0) ? _2335 : (isnan(_2335) ? 1.0 : min(_2335, 1.0));
        _2559 = (((cbLight._m0[_2732].x * 0.3183098733425140380859375) * _2750) * _2751) + _2497;
        _2561 = (((cbLight._m0[_2732].y * 0.3183098733425140380859375) * _2750) * _2751) + _2499;
        _2563 = (((cbLight._m0[_2732].z * 0.3183098733425140380859375) * _2750) * _2751) + _2501;
    }
    uint _2566 = _2319 + 8u;
    float _2579 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2319].w)) * _814) * 0.949999988079071044921875);
    float _2580 = _2579 * _2579;
    float _2581 = cbLight._m0[_2319].x + _890;
    float _2582 = cbLight._m0[_2319].y + _891;
    float _2583 = cbLight._m0[_2319].z + _892;
    float _2587 = inversesqrt(dot(vec3(_2581, _2582, _2583), vec3(_2581, _2582, _2583)));
    float _2588 = _2587 * _2581;
    float _2589 = _2587 * _2582;
    float _2590 = _2587 * _2583;
    float _2591 = dot(vec3(_811, _812, _813), vec3(cbLight._m0[_2319].xyz));
    float _4757 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2594 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _4768 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _2595 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2596 = dot(vec3(_811, _812, _813), vec3(_2588, _2589, _2590));
    float _4779 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
    float _2599 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
    float _2600 = dot(vec3(cbLight._m0[_2319].xyz), vec3(_2588, _2589, _2590));
    float _4790 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
    float _2604 = _2580 * _2580;
    float _2608 = ((_2599 * _2599) * (_2604 + (-1.0))) + 1.0;
    float _2616 = exp2(log2(1.0 - (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) * 5.0);
    float _2617 = 0.959999978542327880859375 - _969;
    float _2619 = 0.959999978542327880859375 - _970;
    float _2620 = 0.959999978542327880859375 - _971;
    float _2627 = 1.0 - _2580;
    float _2638 = (0.5 / (((_2595 * ((_2594 * _2627) + _2580)) + 9.9999999392252902907785028219223e-09) + (((_2595 * _2627) + _2580) * _2594))) * _2594;
    float _4801 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2640 = (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2604 / ((_2608 * _2608) * 3.141590118408203125));
    uint _2654 = _2319 + 9u;
    float _2665 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2359].w)) * _814) * 0.949999988079071044921875);
    float _2666 = _2665 * _2665;
    float _2667 = cbLight._m0[_2359].x + _890;
    float _2668 = cbLight._m0[_2359].y + _891;
    float _2669 = cbLight._m0[_2359].z + _892;
    float _2673 = inversesqrt(dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669)));
    float _2674 = _2673 * _2667;
    float _2675 = _2673 * _2668;
    float _2676 = _2673 * _2669;
    float _2677 = dot(vec3(_811, _812, _813), vec3(cbLight._m0[_2359].xyz));
    float _4812 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2680 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
    float _2681 = dot(vec3(_811, _812, _813), vec3(_2674, _2675, _2676));
    float _4823 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
    float _2684 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
    float _2685 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_2674, _2675, _2676));
    float _4834 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2689 = _2666 * _2666;
    float _2693 = ((_2684 * _2684) * (_2689 + (-1.0))) + 1.0;
    float _2700 = exp2(log2(1.0 - (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0)))) * 5.0);
    float _2707 = 1.0 - _2666;
    float _2717 = (0.5 / (((_2595 * ((_2680 * _2707) + _2666)) + 9.9999999392252902907785028219223e-09) + (((_2595 * _2707) + _2666) * _2680))) * _2680;
    float _4845 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
    float _2719 = (isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0))) * (_2689 / ((_2693 * _2693) * 3.141590118408203125));
    float _2729 = (((((_2700 * _2617) + _972) * cbLight._m0[_2654].x) * _2719) * _2342) + ((((cbLight._m0[_2566].x * _2308) * ((_2616 * _2617) + _972)) * _2640) * _2355);
    float _2730 = (((((_2700 * _2619) + _974) * cbLight._m0[_2654].y) * _2719) * _2342) + ((((cbLight._m0[_2566].y * _2310) * ((_2616 * _2619) + _974)) * _2640) * _2355);
    float _2731 = (((((_2700 * _2620) + _975) * cbLight._m0[_2654].z) * _2719) * _2342) + ((((cbLight._m0[_2566].z * _2312) * ((_2616 * _2620) + _975)) * _2640) * _2355);
    float _2787;
    float _2789;
    float _2791;
    if (_2395)
    {
        _2787 = _2729;
        _2789 = _2730;
        _2791 = _2731;
    }
    else
    {
        uint _2793 = _2319 + 2u;
        uint _2797 = _2319 + 10u;
        float _2811 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2793].w)) * _814) * 0.949999988079071044921875);
        float _2812 = _2811 * _2811;
        float _2813 = cbLight._m0[_2793].x + _890;
        float _2814 = cbLight._m0[_2793].y + _891;
        float _2815 = cbLight._m0[_2793].z + _892;
        float _2819 = inversesqrt(dot(vec3(_2813, _2814, _2815), vec3(_2813, _2814, _2815)));
        float _2820 = _2819 * _2813;
        float _2821 = _2819 * _2814;
        float _2822 = _2819 * _2815;
        float _2823 = dot(vec3(_811, _812, _813), vec3(cbLight._m0[_2793].xyz));
        float _4856 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2826 = isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0));
        float _2827 = dot(vec3(_811, _812, _813), vec3(_2820, _2821, _2822));
        float _4867 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2830 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
        float _2831 = dot(vec3(cbLight._m0[_2793].xyz), vec3(_2820, _2821, _2822));
        float _4878 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2835 = _2812 * _2812;
        float _2839 = ((_2830 * _2830) * (_2835 + (-1.0))) + 1.0;
        float _2846 = exp2(log2(1.0 - (isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0)))) * 5.0);
        float _2853 = 1.0 - _2812;
        float _2863 = (0.5 / (((_2595 * ((_2826 * _2853) + _2812)) + 9.9999999392252902907785028219223e-09) + (((_2595 * _2853) + _2812) * _2826))) * _2826;
        float _4889 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2865 = (isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0))) * (_2835 / ((_2839 * _2839) * 3.141590118408203125));
        float _2866 = isnan(1.0) ? _2334 : (isnan(_2334) ? 1.0 : min(_2334, 1.0));
        _2787 = (((((_2846 * _2617) + _972) * cbLight._m0[_2797].x) * _2865) * _2866) + _2729;
        _2789 = (((((_2846 * _2619) + _974) * cbLight._m0[_2797].y) * _2865) * _2866) + _2730;
        _2791 = (((((_2846 * _2620) + _975) * cbLight._m0[_2797].z) * _2865) * _2866) + _2731;
    }
    float _2897;
    float _2899;
    float _2901;
    if (_2504)
    {
        _2897 = _2787;
        _2899 = _2789;
        _2901 = _2791;
    }
    else
    {
        uint _2908 = _2319 + 3u;
        uint _2912 = _2319 + 11u;
        float _2926 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2908].w)) * _814) * 0.949999988079071044921875);
        float _2927 = _2926 * _2926;
        float _2928 = cbLight._m0[_2908].x + _890;
        float _2929 = cbLight._m0[_2908].y + _891;
        float _2930 = cbLight._m0[_2908].z + _892;
        float _2934 = inversesqrt(dot(vec3(_2928, _2929, _2930), vec3(_2928, _2929, _2930)));
        float _2935 = _2934 * _2928;
        float _2936 = _2934 * _2929;
        float _2937 = _2934 * _2930;
        float _2938 = dot(vec3(_811, _812, _813), vec3(cbLight._m0[_2908].xyz));
        float _4905 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
        float _2941 = isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0));
        float _2942 = dot(vec3(_811, _812, _813), vec3(_2935, _2936, _2937));
        float _4916 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
        float _2945 = isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0));
        float _2946 = dot(vec3(cbLight._m0[_2908].xyz), vec3(_2935, _2936, _2937));
        float _4927 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        float _2950 = _2927 * _2927;
        float _2954 = ((_2945 * _2945) * (_2950 + (-1.0))) + 1.0;
        float _2961 = exp2(log2(1.0 - (isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0)))) * 5.0);
        float _2968 = 1.0 - _2927;
        float _2978 = (0.5 / (((_2595 * ((_2941 * _2968) + _2927)) + 9.9999999392252902907785028219223e-09) + (((_2595 * _2968) + _2927) * _2941))) * _2941;
        float _4938 = isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : max(_2978, 0.0));
        float _2980 = (isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0))) * (_2950 / ((_2954 * _2954) * 3.141590118408203125));
        float _2981 = isnan(1.0) ? _2335 : (isnan(_2335) ? 1.0 : min(_2335, 1.0));
        _2897 = (((((_2961 * _2617) + _972) * cbLight._m0[_2912].x) * _2980) * _2981) + _2787;
        _2899 = (((((_2961 * _2619) + _974) * cbLight._m0[_2912].y) * _2980) * _2981) + _2789;
        _2901 = (((((_2961 * _2620) + _975) * cbLight._m0[_2912].z) * _2980) * _2981) + _2791;
    }
    float _3047;
    float _3049;
    float _3051;
    float _3053;
    float _3055;
    float _3057;
    if (_2317.y == 0u)
    {
        uvec4 _3002 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3003 = _3002.x;
        uint _3014 = uint((float(_3002.y) * floor(float(uint(cbSceneParam._m0[85u].y * _911) / _3003))) + floor(float(uint(cbSceneParam._m0[85u].x * _910) / _3003)));
        float _3024 = (log2(_2095 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3025 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0));
        uint _3028 = uint(isnan(14.0) ? _3025 : (isnan(_3025) ? 14.0 : min(_3025, 14.0)));
        uvec4 _3033 = texelFetch(g_lightClusterGridBuffer, int(((_3028 << 2u) + (_3014 << 6u)) >> 2u));
        uint _3034 = _3033.x;
        uint _3035 = _3002.z;
        float _3114;
        float _3116;
        float _3118;
        float _3120;
        float _3122;
        float _3124;
        if (((((1u << ((_3035 >> 4u) & 15u)) + 4294967295u) & _3034) == 0u) || ((_3035 & 240u) == 0u))
        {
            _3114 = 0.0;
            _3116 = 0.0;
            _3118 = 0.0;
            _3120 = 0.0;
            _3122 = 0.0;
            _3124 = 0.0;
        }
        else
        {
            float _3115;
            float _3117;
            float _3119;
            float _3121;
            float _3123;
            float _3125;
            float _3266 = 0.0;
            float _3267 = 0.0;
            float _3268 = 0.0;
            float _3269 = 0.0;
            float _3270 = 0.0;
            float _3271 = 0.0;
            uint _3272 = 0u;
            uint _3281;
            bool _3282;
            for (;;)
            {
                _3281 = texelFetch(g_lightClassification, int((((_3028 << 5u) + (_3014 << 9u)) + (_3272 << 2u)) >> 2u)).x;
                _3282 = _3281 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3282)
                {
                    frontier_phi_71_pred = _3271;
                    frontier_phi_71_pred_1 = _3270;
                    frontier_phi_71_pred_2 = _3269;
                    frontier_phi_71_pred_3 = _3268;
                    frontier_phi_71_pred_4 = _3267;
                    frontier_phi_71_pred_5 = _3266;
                }
                else
                {
                    float _3411;
                    float _3412;
                    float _3413;
                    float _3414;
                    float _3415;
                    float _3416;
                    uint _3417;
                    _3411 = _3266;
                    _3412 = _3267;
                    _3413 = _3268;
                    _3414 = _3269;
                    _3415 = _3270;
                    _3416 = _3271;
                    _3417 = _3281;
                    float _3338;
                    float _3339;
                    float _3340;
                    float _3341;
                    float _3342;
                    float _3343;
                    for (;;)
                    {
                        uint _3421 = uint(findLSB(_3417)) + (_3272 << 5u);
                        uint _3418 = (_3417 + 4294967295u) & _3417;
                        uint _3423 = _3421 * 48u;
                        vec4 _3437 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3423)).x, texelFetch(g_PointLightRenderingBuffer, int(_3423 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3423 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3423 + 3u)).x));
                        uint _3443 = (_3421 * 48u) + 4u;
                        vec4 _3456 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3443)).x, texelFetch(g_PointLightRenderingBuffer, int(_3443 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3443 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3443 + 3u)).x));
                        uint _3462 = (_3421 * 48u) + 8u;
                        vec3 _3473 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3462)).x, texelFetch(g_PointLightRenderingBuffer, int(_3462 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3462 + 2u)).x));
                        float _3477 = _3437.x - _2093;
                        float _3478 = _3437.y - _2094;
                        float _3479 = _3437.z - _2095;
                        float _3480 = dot(vec3(_3477, _3478, _3479), vec3(_3477, _3478, _3479));
                        float _3483 = inversesqrt(_3480);
                        float _3484 = _3483 * _3477;
                        float _3485 = _3483 * _3478;
                        float _3486 = _3483 * _3479;
                        float _3487 = dot(vec3(_929, _932, _935), vec3(_3484, _3485, _3486));
                        float _3492 = 1.0 - (_3480 * _3437.w);
                        float _4964 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                        float _3493 = isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0));
                        float _3494 = sqrt(_3480) * _3456.w;
                        float _3497 = 1.39999997615814208984375 / (_3494 + 1.39999997615814208984375);
                        float _3498 = _3497 * _3497;
                        float _3501 = ((1.0 - _3498) * _3487) + _3498;
                        float _3504 = _3494 * _3494;
                        float _3508 = ((isnan(0.0) ? _3501 : (isnan(_3501) ? 0.0 : max(_3501, 0.0))) * _3493) / ((_3504 * 0.699999988079071044921875) + 1.0);
                        float _3512 = (-0.0) - _2093;
                        float _3513 = (-0.0) - _2094;
                        float _3514 = (-0.0) - _2095;
                        float _3518 = inversesqrt(dot(vec3(_3512, _3513, _3514), vec3(_3512, _3513, _3514)));
                        float _3519 = _3518 * _3512;
                        float _3520 = _3518 * _3513;
                        float _3521 = _3518 * _3514;
                        float _3528 = exp2(log2(1.0 / ((_3504 * 3.5) + 5.0)) * 0.25);
                        float _3529 = 1.0 - _1004;
                        float _3536 = sqrt(1.0 - ((1.0 - (_3529 * _3529)) * (1.0 - (_3528 * _3528))));
                        float _3537 = _3536 * _3536;
                        float _3538 = _3537 * _3537;
                        float _3539 = _3519 + _3484;
                        float _3540 = _3520 + _3485;
                        float _3541 = _3521 + _3486;
                        float _3545 = inversesqrt(dot(vec3(_3539, _3540, _3541), vec3(_3539, _3540, _3541)));
                        float _3549 = dot(vec3(_929, _932, _935), vec3(_3519, _3520, _3521));
                        float _4980 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0));
                        float _3552 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3553 = dot(vec3(_929, _932, _935), vec3(_3545 * _3539, _3545 * _3540, _3545 * _3541));
                        float _4991 = isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0));
                        float _3556 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                        float _3560 = ((_3556 * _3556) * (_3538 + (-1.0))) + 1.0;
                        float _3561 = _3497 * _3537;
                        float _3562 = _3561 * _3561;
                        float _3565 = ((1.0 - _3562) * _3487) + _3562;
                        float _5002 = isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0));
                        float _3566 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                        float _3567 = 1.0 - _3537;
                        float _3577 = (0.5 / (((_3566 * ((_3552 * _3567) + _3537)) + 9.9999999392252902907785028219223e-09) + (((_3566 * _3567) + _3537) * _3552))) * _3566;
                        float _5013 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                        float _3588 = (((_3538 * 3.1415927410125732421875) * (isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0)))) / ((_3560 * _3560) * ((_3504 * 2.1991131305694580078125) + 3.141590118408203125))) * _3493;
                        _3341 = (_3508 * _3456.x) + _3414;
                        _3342 = (_3508 * _3456.y) + _3415;
                        _3343 = (_3508 * _3456.z) + _3416;
                        _3338 = (_3588 * _3473.x) + _3411;
                        _3339 = (_3588 * _3473.y) + _3412;
                        _3340 = (_3588 * _3473.z) + _3413;
                        if (_3418 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3411 = _3338;
                            _3412 = _3339;
                            _3413 = _3340;
                            _3414 = _3341;
                            _3415 = _3342;
                            _3416 = _3343;
                            _3417 = _3418;
                        }
                    }
                    frontier_phi_71_pred = _3343;
                    frontier_phi_71_pred_1 = _3342;
                    frontier_phi_71_pred_2 = _3341;
                    frontier_phi_71_pred_3 = _3340;
                    frontier_phi_71_pred_4 = _3339;
                    frontier_phi_71_pred_5 = _3338;
                }
                _3125 = frontier_phi_71_pred;
                _3123 = frontier_phi_71_pred_1;
                _3121 = frontier_phi_71_pred_2;
                _3119 = frontier_phi_71_pred_3;
                _3117 = frontier_phi_71_pred_4;
                _3115 = frontier_phi_71_pred_5;
                uint _3273 = _3272 + 1u;
                if (_3273 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3266 = _3115;
                    _3267 = _3117;
                    _3268 = _3119;
                    _3269 = _3121;
                    _3270 = _3123;
                    _3271 = _3125;
                    _3272 = _3273;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3114 = _3115;
            _3116 = _3117;
            _3118 = _3119;
            _3120 = _3121;
            _3122 = _3123;
            _3124 = _3125;
        }
        uvec4 _3128 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3129 = _3128.z;
        uint _3131 = (_3129 >> 8u) & 15u;
        float _3234;
        float _3236;
        float _3238;
        float _3240;
        float _3242;
        float _3244;
        if (((4294967295u << _3131) & _3034) == 0u)
        {
            _3234 = _3114;
            _3236 = _3116;
            _3238 = _3118;
            _3240 = _3120;
            _3242 = _3122;
            _3244 = _3124;
        }
        else
        {
            float _3259 = inversesqrt(dot(vec3(_2093, _2094, _2095), vec3(_2093, _2094, _2095)));
            float _3260 = _3259 * _2093;
            float _3261 = _3259 * _2094;
            float _3262 = _3259 * _2095;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3131 < ((_3129 >> 12u) & 15u))
            {
                float _3235;
                float _3237;
                float _3239;
                float _3241;
                float _3243;
                float _3245;
                float _3394 = _3114;
                float _3395 = _3116;
                float _3396 = _3118;
                float _3397 = _3120;
                float _3398 = _3122;
                float _3399 = _3124;
                uint _3400 = _3131;
                uint _3409;
                bool _3410;
                for (;;)
                {
                    _3409 = texelFetch(g_lightClassification, int((((_3028 << 5u) + (_3014 << 9u)) + (_3400 << 2u)) >> 2u)).x;
                    _3410 = _3409 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3410)
                    {
                        frontier_phi_82_pred = _3399;
                        frontier_phi_82_pred_1 = _3398;
                        frontier_phi_82_pred_2 = _3397;
                        frontier_phi_82_pred_3 = _3396;
                        frontier_phi_82_pred_4 = _3395;
                        frontier_phi_82_pred_5 = _3394;
                    }
                    else
                    {
                        float _3602;
                        float _3603;
                        float _3604;
                        float _3605;
                        float _3606;
                        float _3607;
                        float _3896;
                        float _3897;
                        float _3898;
                        float _3899;
                        float _3900;
                        float _3901;
                        float _3615 = _3394;
                        float _3616 = _3395;
                        float _3617 = _3396;
                        float _3618 = _3397;
                        float _3619 = _3398;
                        float _3620 = _3399;
                        uint _3621 = _3409;
                        uint _3622;
                        vec4 _3647;
                        float _3648;
                        vec4 _3663;
                        vec3 _3675;
                        vec4 _3690;
                        vec4 _3706;
                        float _3752;
                        bool _3753;
                        for (;;)
                        {
                            uint _3632 = ((_3400 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3621));
                            _3622 = (_3621 + 4294967295u) & _3621;
                            uint _3634 = _3632 * 40u;
                            _3647 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3634)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 3u)).x));
                            _3648 = _3647.w;
                            uint _3650 = (_3632 * 40u) + 4u;
                            _3663 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3650)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 3u)).x));
                            uint _3665 = (_3632 * 40u) + 8u;
                            _3675 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3665)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 2u)).x));
                            uint _3677 = (_3632 * 40u) + 16u;
                            _3690 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 3u)).x));
                            uint _3693 = (_3632 * 40u) + 20u;
                            _3706 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3693)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 3u)).x));
                            uint _3708 = (_3632 * 40u) + 24u;
                            vec4 _3721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 3u)).x));
                            uint _3727 = (_3632 * 40u) + 28u;
                            vec4 _3740 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3727)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3727 + 3u)).x));
                            _3752 = fma(_2095, _3740.z, fma(_2094, _3740.y, _3740.x * _2093)) + _3740.w;
                            _3753 = !((fma(_2095, _3721.z, fma(_2094, _3721.y, _3721.x * _2093)) + _3721.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3753)
                            {
                                float _3780 = _3647.x - _2093;
                                float _3781 = _3647.y - _2094;
                                float _3782 = _3647.z - _2095;
                                float _3783 = dot(vec3(_3780, _3781, _3782), vec3(_3780, _3781, _3782));
                                float _3786 = inversesqrt(_3783);
                                float _3787 = _3786 * _3780;
                                float _3788 = _3786 * _3781;
                                float _3789 = _3786 * _3782;
                                float _3793 = 1.0 - (_3783 / (_3648 * _3648));
                                float _5024 = isnan(0.0) ? _3793 : (isnan(_3793) ? 0.0 : max(_3793, 0.0));
                                float _3794 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
                                float _3798 = sqrt(_3783) * _3663.w;
                                float _3800 = 1.39999997615814208984375 / (_3798 + 1.39999997615814208984375);
                                float _3801 = _3800 * _3800;
                                float _3804 = ((1.0 - _3801) * dot(vec3(_3787, _3788, _3789), vec3(_929, _932, _935))) + _3801;
                                float _3807 = _3798 * _3798;
                                float _3811 = (fma(_2095, _3690.z, fma(_2094, _3690.y, _3690.x * _2093)) + _3690.w) / _3752;
                                float _3812 = (fma(_2095, _3706.z, fma(_2094, _3706.y, _3706.x * _2093)) + _3706.w) / _3752;
                                float _3816 = 1.0 - dot(vec2(_3811, _3812), vec2(_3811, _3812));
                                float _5040 = isnan(0.0) ? _3816 : (isnan(_3816) ? 0.0 : max(_3816, 0.0));
                                float _3817 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3818 = _3817 * (((isnan(0.0) ? _3804 : (isnan(_3804) ? 0.0 : max(_3804, 0.0))) * _3794) / ((_3807 * 0.699999988079071044921875) + 1.0));
                                float _3830 = exp2(log2(1.0 / ((_3807 * 3.5) + 5.0)) * 0.25);
                                float _3831 = 1.0 - _1004;
                                float _3838 = sqrt(1.0 - ((1.0 - (_3831 * _3831)) * (1.0 - (_3830 * _3830))));
                                float _3839 = _3838 * _3838;
                                float _3840 = _3839 * _3839;
                                float _3841 = _3787 - _3260;
                                float _3842 = _3788 - _3261;
                                float _3843 = _3789 - _3262;
                                float _3847 = inversesqrt(dot(vec3(_3841, _3842, _3843), vec3(_3841, _3842, _3843)));
                                float _3851 = dot(vec3(_929, _932, _935), vec3((-0.0) - _3260, (-0.0) - _3261, (-0.0) - _3262));
                                float _5051 = isnan(0.0) ? _3851 : (isnan(_3851) ? 0.0 : max(_3851, 0.0));
                                float _3854 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
                                float _3855 = dot(vec3(_929, _932, _935), vec3(_3847 * _3841, _3847 * _3842, _3847 * _3843));
                                float _5062 = isnan(0.0) ? _3855 : (isnan(_3855) ? 0.0 : max(_3855, 0.0));
                                float _3858 = isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0));
                                float _3862 = ((_3858 * _3858) * (_3840 + (-1.0))) + 1.0;
                                float _3863 = _3800 * _3839;
                                float _3864 = _3863 * _3863;
                                float _3870 = ((1.0 - _3864) * dot(vec3(_929, _932, _935), vec3(_3787, _3788, _3789))) + _3864;
                                float _5073 = isnan(0.0) ? _3870 : (isnan(_3870) ? 0.0 : max(_3870, 0.0));
                                float _3871 = isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0));
                                float _3872 = 1.0 - _3839;
                                float _3882 = (0.5 / (((_3871 * ((_3854 * _3872) + _3839)) + 9.9999999392252902907785028219223e-09) + (((_3871 * _3872) + _3839) * _3854))) * _3871;
                                float _5084 = isnan(0.0) ? _3882 : (isnan(_3882) ? 0.0 : max(_3882, 0.0));
                                float _3892 = (_3817 * _3794) * (((_3840 * 3.1415927410125732421875) * (isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0)))) / ((_3862 * _3862) * ((_3807 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3818 * _3663.z;
                                frontier_phi_88_pred_1 = _3818 * _3663.y;
                                frontier_phi_88_pred_2 = _3818 * _3663.x;
                                frontier_phi_88_pred_3 = _3892 * _3675.z;
                                frontier_phi_88_pred_4 = _3892 * _3675.y;
                                frontier_phi_88_pred_5 = _3892 * _3675.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3901 = frontier_phi_88_pred;
                            _3900 = frontier_phi_88_pred_1;
                            _3899 = frontier_phi_88_pred_2;
                            _3898 = frontier_phi_88_pred_3;
                            _3897 = frontier_phi_88_pred_4;
                            _3896 = frontier_phi_88_pred_5;
                            _3605 = _3899 + _3618;
                            _3606 = _3900 + _3619;
                            _3607 = _3901 + _3620;
                            _3602 = _3896 + _3615;
                            _3603 = _3897 + _3616;
                            _3604 = _3898 + _3617;
                            if (_3622 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3615 = _3602;
                                _3616 = _3603;
                                _3617 = _3604;
                                _3618 = _3605;
                                _3619 = _3606;
                                _3620 = _3607;
                                _3621 = _3622;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3607;
                        frontier_phi_82_pred_1 = _3606;
                        frontier_phi_82_pred_2 = _3605;
                        frontier_phi_82_pred_3 = _3604;
                        frontier_phi_82_pred_4 = _3603;
                        frontier_phi_82_pred_5 = _3602;
                    }
                    _3245 = frontier_phi_82_pred;
                    _3243 = frontier_phi_82_pred_1;
                    _3241 = frontier_phi_82_pred_2;
                    _3239 = frontier_phi_82_pred_3;
                    _3237 = frontier_phi_82_pred_4;
                    _3235 = frontier_phi_82_pred_5;
                    uint _3401 = _3400 + 1u;
                    if (_3401 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3394 = _3235;
                        _3395 = _3237;
                        _3396 = _3239;
                        _3397 = _3241;
                        _3398 = _3243;
                        _3399 = _3245;
                        _3400 = _3401;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3241;
                frontier_phi_63_64_ladder_1 = _3245;
                frontier_phi_63_64_ladder_2 = _3243;
                frontier_phi_63_64_ladder_3 = _3239;
                frontier_phi_63_64_ladder_4 = _3237;
                frontier_phi_63_64_ladder_5 = _3235;
            }
            else
            {
                frontier_phi_63_64_ladder = _3120;
                frontier_phi_63_64_ladder_1 = _3124;
                frontier_phi_63_64_ladder_2 = _3122;
                frontier_phi_63_64_ladder_3 = _3118;
                frontier_phi_63_64_ladder_4 = _3116;
                frontier_phi_63_64_ladder_5 = _3114;
            }
            _3234 = frontier_phi_63_64_ladder_5;
            _3236 = frontier_phi_63_64_ladder_4;
            _3238 = frontier_phi_63_64_ladder_3;
            _3240 = frontier_phi_63_64_ladder;
            _3242 = frontier_phi_63_64_ladder_2;
            _3244 = frontier_phi_63_64_ladder_1;
        }
        float _3249 = isnan(1.0) ? _988 : (isnan(_988) ? 1.0 : min(_988, 1.0));
        _3047 = (_3249 * _3240) + _2559;
        _3049 = (_3249 * _3242) + _2561;
        _3051 = (_3249 * _3244) + _2563;
        _3053 = ((_3234 * _972) * _3249) + _2897;
        _3055 = ((_3236 * _974) * _3249) + _2899;
        _3057 = ((_3238 * _975) * _3249) + _2901;
    }
    else
    {
        _3047 = _2559;
        _3049 = _2561;
        _3051 = _2563;
        _3053 = _2897;
        _3055 = _2899;
        _3057 = _2901;
    }
    float _5100 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _5111 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _5122 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _3074 = ((isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0))) * (_3047 + ((isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))) * _988))) + ((_3053 + ((isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    float _3075 = ((isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0))) * (_3049 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _988))) + ((_3055 + ((isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    float _3076 = ((isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0))) * (_3051 + ((isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))) * _988))) + ((_3057 + ((isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    uint _3077 = _259 + 6u;
    float _3085 = _910 / cbSceneParam._m0[86u].x;
    float _3086 = _911 / cbSceneParam._m0[86u].y;
    vec4 _3100 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3085, _3086, (log2((isnan(cbSceneParam._m0[77u].w) ? _833 : (isnan(_833) ? cbSceneParam._m0[77u].w : min(_833, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3102 = _3100.x;
    float _3103 = _3100.y;
    float _3104 = _3100.z;
    float _3105 = _3100.w;
    float _3176;
    float _3178;
    float _3180;
    float _3182;
    if (_833 > cbSceneParam._m0[78u].w)
    {
        float _3139 = isnan(_833) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _833 : min(cbSceneParam._m0[80u].w, _833));
        float _3140 = _3139 / _833;
        float _3151 = _3140 * _883;
        float _3152 = _884 * _3140;
        float _3153 = (-0.0) - _3152;
        float _3154 = _3140 * _885;
        float _3156 = (cbSceneParam._m0[77u].w * _3153) / _3139;
        float _3157 = _3156 + cbSceneParam._m0[79u].w;
        float _3158 = cbSceneParam._m0[79u].w - _3152;
        float _3164 = sqrt(((_3151 * _3151) + (_3152 * _3152)) + (_3154 * _3154));
        float _3167 = (1.0 - (cbSceneParam._m0[77u].w / _3139)) * _3164;
        float _3172 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3174 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3351;
        if (abs((_3153 - _3156) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3351 = ((((_3157 > 0.0) ? exp2(_3172 * _3157) : (2.0 - exp2(_3174 * _3157))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3167;
        }
        else
        {
            float _3295 = 1.0 / cbSceneParam._m0[80u].x;
            float _3296 = isnan(_3158) ? _3157 : (isnan(_3157) ? _3158 : max(_3157, _3158));
            float _3297 = isnan(_3158) ? _3157 : (isnan(_3157) ? _3158 : min(_3157, _3158));
            float _3306 = isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : min(_3296, 0.0));
            float _3307 = isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : min(_3297, 0.0));
            _3351 = ((abs(_3164 / _3153) * cbSceneParam._m0[80u].y) * ((((_3306 - _3307) * 2.0) - ((exp2(_3172 * (isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0)))) - exp2(_3172 * (isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : max(_3297, 0.0))))) * _3295)) - ((exp2(_3174 * _3306) - exp2(_3174 * _3307)) * _3295))) + (_3167 * cbSceneParam._m0[80u].z);
        }
        vec4 _3353 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3085, _3086, 1.0), 0.0);
        float _3362 = exp2((_3351 * (-1.44269502162933349609375)) * (1.0 - _3353.w));
        float _3363 = log2(_3362);
        float _3379 = log2(_3105);
        _3176 = (exp2(_3379 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3363 * cbSceneParam._m0[78u].x)) * _3353.x) / cbSceneParam._m0[78u].x)) + _3102;
        _3178 = (exp2(_3379 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3363 * cbSceneParam._m0[78u].y)) * _3353.y) / cbSceneParam._m0[78u].y)) + _3103;
        _3180 = (exp2(_3379 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3363 * cbSceneParam._m0[78u].z)) * _3353.z) / cbSceneParam._m0[78u].z)) + _3104;
        _3182 = _3362 * _3105;
    }
    else
    {
        _3176 = _3102;
        _3178 = _3103;
        _3180 = _3104;
        _3182 = _3105;
    }
    bool _3389;
    vec4 _3192;
    vec4 _3214;
    float _3216;
    float _3220;
    float _3221;
    float _3222;
    float _3223;
    bool _3233;
    for (;;)
    {
        _3192 = cbMatDynParam._m0[0u];
        float _3194 = roundEven(_3192.y);
        bool _3195 = _3194 == 3.0;
        float _3196 = log2(_3182);
        float _3203 = exp2(_3196 * cbSceneParam._m0[78u].x) * _3074;
        float _3204 = exp2(_3196 * cbSceneParam._m0[78u].y) * _3075;
        float _3205 = exp2(_3196 * cbSceneParam._m0[78u].z) * _3076;
        float _3212 = _899 + (-0.5);
        _3214 = cbMtdParam._m0[1u];
        _3216 = _3214.y * _3212;
        float _3219 = (_3194 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3220 = _3219 * (_3195 ? _3203 : (_3203 + (cbSceneParam._m0[72u].w * _3176)));
        _3221 = _3219 * (_3195 ? _3204 : (_3204 + (cbSceneParam._m0[72u].w * _3178)));
        _3222 = _3219 * (_3195 ? _3205 : (_3205 + (cbSceneParam._m0[72u].w * _3180)));
        _3223 = _3212 * 0.999000012874603271484375;
        _3233 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3233)
        {
            if ((cbInstanceData._m0[_259 + 7u].x + _3223) < 0.5)
            {
                _3389 = true;
                break;
            }
        }
        uint _3330 = _948 + uint(_3192.w);
        if ((cbInstanceData._m0[_3330].w < 1.0) && ((cbInstanceData._m0[_3330].w + _3223) < 0.5))
        {
            _3389 = true;
            break;
        }
        if ((_3216 + 1.0) < _3214.x)
        {
            _3389 = true;
            break;
        }
        _3389 = false;
        break;
    }
    float _3593;
    if (_3389)
    {
        discard_state = true;
        _3593 = 0.0;
    }
    else
    {
        _3593 = cbInstanceData._m0[_3077].w;
    }
    SV_Target.x = _3220;
    SV_Target.y = _3221;
    SV_Target.z = _3222;
    SV_Target.w = _3593;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3077].w;
    discard_exit();
}


