#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1212;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _214 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _215 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _216 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _222 = inversesqrt(dot(vec3(_214, _215, _216), vec3(_214, _215, _216)));
    float _223 = _222 * _214;
    float _224 = _222 * _215;
    float _225 = _222 * _216;
    float _229 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _230 = _229 * NORMAL.x;
    float _231 = _229 * NORMAL.y;
    float _232 = _229 * NORMAL.z;
    float _236 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _237 = _236 * TANGENT.x;
    float _238 = _236 * TANGENT.y;
    float _239 = _236 * TANGENT.z;
    uint _242 = uint(roundEven(NORMAL.w)) * 13u;
    uint _248 = _242 + 1u;
    uint _252 = _242 + 2u;
    float _261 = sqrt(((cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x) + (cbInstanceData._m0[_242].x * cbInstanceData._m0[_242].x)) + (cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x));
    float _262 = _261 * TEXCOORD.z;
    float _263 = _261 * TEXCOORD.w;
    vec4 _283 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _289 = _283.x * cbMtdParam._m0[11u].x;
    float _290 = _283.y * cbMtdParam._m0[11u].y;
    float _291 = _283.z * cbMtdParam._m0[11u].z;
    vec4 _310 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _262) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _263) + cbTextureTilingScale._m0[5u].w));
    vec4 _348 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _350 = _348.x;
    float _362 = dot(vec4(_350, _348.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _379 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_350 - _362) * cbMtdParam._m0[24u].y) + _362) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3822 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _380 = isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0));
    float _387 = (_380 * ((_310.x * cbMtdParam._m0[12u].x) - _289)) + _289;
    float _388 = (_380 * ((_310.y * cbMtdParam._m0[12u].y) - _290)) + _290;
    float _389 = (_380 * ((_310.z * cbMtdParam._m0[12u].z) - _291)) + _291;
    vec4 _407 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _262) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _263) + cbTextureTilingScale._m0[20u].w));
    vec4 _434 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _262) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _263) + cbTextureTilingScale._m0[4u].w));
    vec4 _451 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _453 = _451.x;
    float _454 = _451.y;
    float _455 = _451.z;
    float _464 = ((_434.z - _455) * _380) + _455;
    float _467 = ((((_434.x - _453) * _380) + _453) * 2.0) + (-1.0);
    float _468 = ((((_434.y - _454) * _380) + _454) * 2.0) + (-1.0);
    float _469 = dot(vec2(_467, _468), vec2(_467, _468));
    float _3833 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _474 = sqrt(1.0 - (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0))));
    float _477 = _467 + ((((_407.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _478 = _468 + ((((_407.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _481 = fma(_474, _230, fma(_478, _237, _477 * _223));
    float _484 = fma(_474, _231, fma(_478, _238, _477 * _224));
    float _487 = fma(_474, _232, fma(_478, _239, _477 * _225));
    float _491 = inversesqrt(dot(vec3(_481, _484, _487), vec3(_481, _484, _487)));
    vec4 _507 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _533 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _262) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _263) + cbTextureTilingScale._m0[11u].w));
    float _535 = _533.x;
    float _536 = 1.0 - _535;
    float _542 = (cbMtdParam._m0[19u].x + dot(vec4(_491 * _481, _491 * _484, _491 * _487, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_535 - _536) * cbMtdParam._m0[24u].z) + _536) * cbMtdParam._m0[21u].z);
    float _3844 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _543 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
    float _550 = (_543 * (cbMtdParam._m0[17u].x - _387)) + _387;
    float _551 = (_543 * (cbMtdParam._m0[17u].y - _388)) + _388;
    float _552 = (_543 * (cbMtdParam._m0[17u].z - _389)) + _389;
    vec4 _564 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _578 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _580 = _578.x;
    float _598 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _262) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _263) + cbTextureTilingScale._m0[9u].w)).x - _580) * _380) + _580;
    float _602 = ((_564.x - _598) * cbMtdParam._m0[19u].z) + _598;
    float _604 = _602 - (_602 * _543);
    float _609 = (((_407.z - _464) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _464;
    vec4 _622 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _262) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _263) + cbTextureTilingScale._m0[15u].w));
    float _629 = (_622.x * 2.0) + (-1.0);
    float _630 = (_622.y * 2.0) + (-1.0);
    float _631 = dot(vec2(_629, _630), vec2(_629, _630));
    float _3855 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _639 = ((_622.z - _609) * _543) + _609;
    float _649 = ((sqrt(1.0 - (isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0)))) - _474) * _543) + _474;
    float _652 = (((_629 - _477) * _543) + _477) + (cbMtdParam._m0[21u].x * _477);
    float _653 = (((_630 - _478) * _543) + _478) + (cbMtdParam._m0[21u].x * _478);
    float _658 = cbMtdParam._m0[22u].x + _507.w;
    float _661 = fma(_649, _230, fma(_653, _237, _652 * _223));
    float _664 = fma(_649, _231, fma(_653, _238, _652 * _224));
    float _667 = fma(_649, _232, fma(_653, _239, _652 * _225));
    float _671 = inversesqrt(dot(vec3(_661, _664, _667), vec3(_661, _664, _667)));
    float _672 = _671 * _661;
    float _673 = _671 * _664;
    float _674 = _671 * _667;
    float _3866 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _675 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
    float _3877 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _3888 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _3899 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _3910 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _3921 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _680 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
    float _694 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _735 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _745 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _735);
    float _746 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _735);
    float _747 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _735);
    float _751 = inversesqrt(dot(vec3(_745, _746, _747), vec3(_745, _746, _747)));
    float _752 = _745 * _751;
    float _753 = _746 * _751;
    float _754 = _747 * _751;
    float _760 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _761 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _779 = fma(_674, cbSceneParam._m0[5u].z, fma(_673, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _672));
    float _782 = fma(_674, cbSceneParam._m0[6u].z, fma(_673, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _672));
    float _785 = fma(_674, cbSceneParam._m0[7u].z, fma(_673, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _672));
    uint _799 = (_242 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _805 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0)))) * cbInstanceData._m0[_799].x;
    float _806 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0)))) * cbInstanceData._m0[_799].y;
    float _807 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0)))) * cbInstanceData._m0[_799].z;
    float _3932 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _808 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
    float _3943 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
    float _3954 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _810 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
    float _811 = 1.0 - _680;
    float _812 = _808 * _811;
    float _813 = _809 * _811;
    float _814 = _810 * _811;
    float _819 = (_808 + (-0.039999999105930328369140625)) * _680;
    float _820 = (_809 + (-0.039999999105930328369140625)) * _680;
    float _821 = (_810 + (-0.039999999105930328369140625)) * _680;
    float _822 = _819 + 0.039999999105930328369140625;
    float _824 = _820 + 0.039999999105930328369140625;
    float _825 = _821 + 0.039999999105930328369140625;
    vec4 _834 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _760, cbSceneParam._m0[86u].y * _761));
    float _838 = ((isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0))) * TEXCOORD_5.w) * _834.x;
    float _839 = dot(vec3(_672, _673, _674), vec3(_752, _753, _754));
    float _842 = _839 * 2.0;
    float _846 = (_842 * _672) - _752;
    float _847 = (_842 * _673) - _753;
    float _848 = (_842 * _674) - _754;
    float _852 = abs(dot(vec3(_752, _753, _754), vec3(_672, _673, _674)));
    float _3965 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _854 = sqrt(_675);
    float _867 = exp2((_854 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_854 * 3.0));
    float _873 = (1.0 - _867) * ((_854 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _874 = _867 * _854;
    float _902 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1211;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _936 = fma(_910, cbModelParam._m0[26u].z, fma(_906, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _902));
        float _940 = fma(_910, cbModelParam._m0[27u].z, fma(_906, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _902));
        float _944 = fma(_910, cbModelParam._m0[28u].z, fma(_906, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _902));
        float _969 = _902 + _672;
        float _970 = _906 + _673;
        float _971 = _910 + _674;
        float _981 = fma(_971, cbModelParam._m0[26u].z, fma(_970, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _969)) - _936;
        float _982 = fma(_971, cbModelParam._m0[27u].z, fma(_970, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _969)) - _940;
        float _983 = fma(_971, cbModelParam._m0[28u].z, fma(_970, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _969)) - _944;
        float _987 = inversesqrt(dot(vec3(_981, _982, _983), vec3(_981, _982, _983)));
        float _1000 = ((_987 * _981) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_936 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1001 = ((_987 * _982) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_940 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1002 = ((_987 * _983) / cbModelParam._m0[34u].z) + ((((((_944 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1005 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1012 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1019 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        vec4 _1026 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1000, _1001, _1002), 0.0);
        float _1039 = exp2((_1005.w + (-0.5)) * 20.0) * 2.0;
        float _1040 = _1039 * (_1005.x + (-0.5));
        float _1041 = _1039 * (_1005.y + (-0.5));
        float _1042 = _1039 * (_1005.z + (-0.5));
        float _1049 = exp2((_1012.w + (-0.5)) * 20.0) * 2.0;
        float _1050 = _1049 * (_1012.x + (-0.5));
        float _1051 = _1049 * (_1012.y + (-0.5));
        float _1052 = _1049 * (_1012.z + (-0.5));
        float _1059 = exp2((_1019.w + (-0.5)) * 20.0) * 2.0;
        float _1060 = _1059 * (_1019.x + (-0.5));
        float _1061 = _1059 * (_1019.y + (-0.5));
        float _1062 = _1059 * (_1019.z + (-0.5));
        float _1069 = exp2((_1026.w + (-0.5)) * 20.0) * 2.0;
        float _1070 = _1069 * (_1026.x + (-0.5));
        float _1071 = _1069 * (_1026.y + (-0.5));
        float _1072 = _1069 * (_1026.z + (-0.5));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1076 = _1040 * 0.5;
        float _1077 = _1050 * 0.5;
        float _1078 = _1060 * 0.5;
        float _1079 = dot(vec3(_1076, _1077, _1078), vec3(_1076, _1077, _1078));
        float _1084 = (_1079 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1079);
        float _1093 = (dot(vec3(_672, _673, _674), vec3(_1084 * _1076, _1084 * _1077, _1084 * _1078)) + 1.0) * 0.5;
        float _3991 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1103 = sqrt(((_1077 * _1077) + (_1076 * _1076)) + (_1078 * _1078)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4002 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1104 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
        float _1105 = _1104 * 2.0;
        float _1109 = (1.0 - _1104) / (_1104 + 1.0);
        float _4013 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0));
        float _1119 = ((((1.0 - _1110) * (_1105 + 2.0)) * exp2(log2(isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0))) * (_1105 + 1.0))) + _1110) * _1073;
        float _1120 = _1041 * 0.5;
        float _1121 = _1051 * 0.5;
        float _1122 = _1061 * 0.5;
        float _1123 = dot(vec3(_1120, _1121, _1122), vec3(_1120, _1121, _1122));
        float _1128 = (_1123 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1123);
        float _1136 = (dot(vec3(_672, _673, _674), vec3(_1128 * _1120, _1128 * _1121, _1128 * _1122)) + 1.0) * 0.5;
        float _4024 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1145 = sqrt(((_1121 * _1121) + (_1120 * _1120)) + (_1122 * _1122)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _4035 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
        float _1147 = _1146 * 2.0;
        float _1151 = (1.0 - _1146) / (_1146 + 1.0);
        float _4046 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1152 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
        float _1161 = ((((1.0 - _1152) * (_1147 + 2.0)) * exp2(log2(isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0))) * (_1147 + 1.0))) + _1152) * _1074;
        float _1162 = _1042 * 0.5;
        float _1163 = _1052 * 0.5;
        float _1164 = _1062 * 0.5;
        float _1165 = dot(vec3(_1162, _1163, _1164), vec3(_1162, _1163, _1164));
        float _1170 = (_1165 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1165);
        float _1178 = (dot(vec3(_672, _673, _674), vec3(_1170 * _1162, _1170 * _1163, _1170 * _1164)) + 1.0) * 0.5;
        float _4057 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1187 = sqrt(((_1163 * _1163) + (_1162 * _1162)) + (_1164 * _1164)) / (_1075 + 9.9999997473787516355514526367188e-06);
        float _4068 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0));
        float _1189 = _1188 * 2.0;
        float _1193 = (1.0 - _1188) / (_1188 + 1.0);
        float _4079 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1194 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
        float _1203 = ((((1.0 - _1194) * (_1189 + 2.0)) * exp2(log2(isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0))) * (_1189 + 1.0))) + _1194) * _1075;
        _1211 = _1042;
        _1213 = _1041;
        _1214 = _1040;
        _1215 = _1052;
        _1216 = _1051;
        _1217 = _1050;
        _1218 = _1062;
        _1219 = _1061;
        _1220 = _1060;
        _1221 = _1075;
        _1222 = _1074;
        _1223 = _1073;
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)));
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0)));
        _1226 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0)));
    }
    else
    {
        _1211 = _1212;
        _1213 = _1212;
        _1214 = _1212;
        _1215 = _1212;
        _1216 = _1212;
        _1217 = _1212;
        _1218 = _1212;
        _1219 = _1212;
        _1220 = _1212;
        _1221 = _1212;
        _1222 = _1212;
        _1223 = _1212;
        _1224 = 0.0;
        _1225 = 0.0;
        _1226 = 0.0;
    }
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1251 = fma(_910, cbModelParam._m0[30u].z, fma(_906, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _902));
        float _1255 = fma(_910, cbModelParam._m0[31u].z, fma(_906, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _902));
        float _1259 = fma(_910, cbModelParam._m0[32u].z, fma(_906, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _902));
        float _1282 = _902 + _672;
        float _1283 = _906 + _673;
        float _1284 = _910 + _674;
        float _1294 = fma(_1284, cbModelParam._m0[30u].z, fma(_1283, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1282)) - _1251;
        float _1295 = fma(_1284, cbModelParam._m0[31u].z, fma(_1283, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1282)) - _1255;
        float _1296 = fma(_1284, cbModelParam._m0[32u].z, fma(_1283, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1282)) - _1259;
        float _1300 = inversesqrt(dot(vec3(_1294, _1295, _1296), vec3(_1294, _1295, _1296)));
        float _1313 = ((_1300 * _1294) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1251 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1300 * _1295) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1255 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1300 * _1296) / cbModelParam._m0[35u].z) + ((((((_1259 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        float _1350 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1317.x + (-0.5));
        float _1352 = _1350 * (_1317.y + (-0.5));
        float _1353 = _1350 * (_1317.z + (-0.5));
        float _1360 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1324.x + (-0.5));
        float _1362 = _1360 * (_1324.y + (-0.5));
        float _1363 = _1360 * (_1324.z + (-0.5));
        float _1370 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1331.x + (-0.5));
        float _1372 = _1370 * (_1331.y + (-0.5));
        float _1373 = _1370 * (_1331.z + (-0.5));
        float _1380 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1338.x + (-0.5));
        float _1382 = _1380 * (_1338.y + (-0.5));
        float _1383 = _1380 * (_1338.z + (-0.5));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = _1351 * 0.5;
        float _1388 = _1361 * 0.5;
        float _1389 = _1371 * 0.5;
        float _1390 = dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389));
        float _1395 = (_1390 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1390);
        float _1403 = (dot(vec3(_672, _673, _674), vec3(_1395 * _1387, _1395 * _1388, _1395 * _1389)) + 1.0) * 0.5;
        float _4120 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1412 = sqrt(((_1388 * _1388) + (_1387 * _1387)) + (_1389 * _1389)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _4131 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1414 = _1413 * 2.0;
        float _1418 = (1.0 - _1413) / (_1413 + 1.0);
        float _4142 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1428 = ((((1.0 - _1419) * (_1414 + 2.0)) * exp2(log2(isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * (_1414 + 1.0))) + _1419) * _1384;
        float _1429 = _1352 * 0.5;
        float _1430 = _1362 * 0.5;
        float _1431 = _1372 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1445 = (dot(vec3(_672, _673, _674), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _4153 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1454 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _4164 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _4175 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0))) * (_1456 + 1.0))) + _1461) * _1385;
        float _1471 = _1353 * 0.5;
        float _1472 = _1363 * 0.5;
        float _1473 = _1373 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_672, _673, _674), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _4186 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _4197 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _4208 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0))) * (_1498 + 1.0))) + _1503) * _1386;
        _1520 = _1353;
        _1521 = _1352;
        _1522 = _1351;
        _1523 = _1363;
        _1524 = _1362;
        _1525 = _1361;
        _1526 = _1373;
        _1527 = _1372;
        _1528 = _1371;
        _1529 = _1386;
        _1530 = _1385;
        _1531 = _1384;
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
    }
    else
    {
        _1520 = _1212;
        _1521 = _1212;
        _1522 = _1212;
        _1523 = _1212;
        _1524 = _1212;
        _1525 = _1212;
        _1526 = _1212;
        _1527 = _1212;
        _1528 = _1212;
        _1529 = _1212;
        _1530 = _1212;
        _1531 = _1212;
        _1532 = 0.0;
        _1533 = 0.0;
        _1534 = 0.0;
    }
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1224)) + _1224;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1225)) + _1225;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1226)) + _1226;
    float _1567 = fma(_1546, cbSceneParam._m0[89u].z, fma(_1545, cbSceneParam._m0[89u].y, _1544 * cbSceneParam._m0[89u].x));
    float _1570 = fma(_1546, cbSceneParam._m0[90u].z, fma(_1545, cbSceneParam._m0[90u].y, _1544 * cbSceneParam._m0[90u].x));
    float _1573 = fma(_1546, cbSceneParam._m0[91u].z, fma(_1545, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1544));
    float _1588 = _846 * 0.5;
    float _1589 = _847 * 0.5;
    float _1590 = _848 * 0.5;
    float _1591 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1594 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1597 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1631;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1604 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1211, _1215, _1218, _1221));
        float _1608 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1213, _1216, _1219, _1222));
        float _1612 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1214, _1217, _1220, _1223));
        float _1619 = dot(vec4(cbModelParam._m0[39u]), vec4(_1588, _1589, _1590, 1.0));
        _1631 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1619) ? 0.0 : (isnan(0.0) ? _1619 : max(0.0, _1619))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1631 = 1.0;
    }
    float _1642;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1633 = dot(vec4(cbModelParam._m0[40u]), vec4(_1588, _1589, _1590, 1.0));
        _1642 = dot(vec3(isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)), isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1642 = 1.0;
    }
    float _1646 = (_1642 * cbModelParam._m0[1u].x) + (_1631 * (1.0 - cbModelParam._m0[1u].x));
    float _1656 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _675);
    float _1657 = isnan(_1656) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1656 : min(cbModelParam._m0[25u].z, _1656));
    float _1738;
    float _1740;
    float _1742;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1705 = fma(_910, cbModelParam._m0[13u].z, fma(_906, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _902)) + cbModelParam._m0[13u].w;
        float _1709 = fma(_910, cbModelParam._m0[14u].z, fma(_906, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _902)) + cbModelParam._m0[14u].w;
        float _1713 = fma(_910, cbModelParam._m0[15u].z, fma(_906, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _902)) + cbModelParam._m0[15u].w;
        float _1716 = fma(_848, cbModelParam._m0[13u].z, fma(_847, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _846));
        float _1719 = fma(_848, cbModelParam._m0[14u].z, fma(_847, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _846));
        float _1722 = fma(_848, cbModelParam._m0[15u].z, fma(_847, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _846));
        float _1750;
        if (_1716 > 0.0)
        {
            _1750 = abs((1.0 - _1705) / _1716);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1716 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1705 + 1.0) / _1716);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1750 = frontier_phi_14_12_ladder;
        }
        float _1922;
        if (_1719 > 0.0)
        {
            _1922 = abs((1.0 - _1709) / _1719);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1719 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1709 + 1.0) / _1719);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1922 = frontier_phi_23_19_ladder;
        }
        float _2217;
        if (_1722 > 0.0)
        {
            _2217 = abs((1.0 - _1713) / _1722);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1722 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1713 + 1.0) / _1722);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2217 = frontier_phi_35_30_ladder;
        }
        float _2219 = isnan(_1922) ? _1750 : (isnan(_1750) ? _1922 : min(_1750, _1922));
        float _2220 = isnan(_2217) ? _2219 : (isnan(_2219) ? _2217 : min(_2219, _2217));
        float _2224 = (_2220 * _1716) + _1705;
        float _2225 = (_2220 * _1719) + _1709;
        float _2226 = (_2220 * _1722) + _1713;
        float _2227 = _2220 * 9.9999997473787516355514526367188e-05;
        float _2229 = (-1.0) - _2227;
        float _2231 = _2227 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2226 > _2231) || ((_2226 < _2229) || ((_2225 > _2231) || ((_2225 < _2229) || ((_2224 < _2229) || (_2224 > _2231))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2371 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2226, cbModelParam._m0[9u].z, fma(_2225, cbModelParam._m0[9u].y, _2224 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2226, cbModelParam._m0[10u].z, fma(_2225, cbModelParam._m0[10u].y, _2224 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2226, cbModelParam._m0[11u].z, fma(_2225, cbModelParam._m0[11u].y, _2224 * cbModelParam._m0[11u].x))), _1657);
            frontier_phi_13_35_ladder = _2371.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2371.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2371.x * cbModelParam._m0[1u].y;
        }
        _1738 = frontier_phi_13_35_ladder_2;
        _1740 = frontier_phi_13_35_ladder_1;
        _1742 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1726 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_846, _847, _848), _1657);
        _1738 = _1726.x * cbModelParam._m0[1u].y;
        _1740 = _1726.y * cbModelParam._m0[1u].y;
        _1742 = _1726.z * cbModelParam._m0[1u].y;
    }
    float _1746 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _675);
    float _1747 = isnan(_1746) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1746 : min(cbModelParam._m0[25u].w, _1746));
    float _1837;
    float _1839;
    float _1841;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1801 = fma(_910, cbModelParam._m0[21u].z, fma(_906, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _902)) + cbModelParam._m0[21u].w;
        float _1805 = fma(_910, cbModelParam._m0[22u].z, fma(_906, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _902)) + cbModelParam._m0[22u].w;
        float _1809 = fma(_910, cbModelParam._m0[23u].z, fma(_906, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _902)) + cbModelParam._m0[23u].w;
        float _1812 = fma(_848, cbModelParam._m0[21u].z, fma(_847, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _846));
        float _1815 = fma(_848, cbModelParam._m0[22u].z, fma(_847, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _846));
        float _1818 = fma(_848, cbModelParam._m0[23u].z, fma(_847, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _846));
        float _1927;
        if (_1812 > 0.0)
        {
            _1927 = abs((1.0 - _1801) / _1812);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1801 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1927 = frontier_phi_25_21_ladder;
        }
        float _2244;
        if (_1815 > 0.0)
        {
            _2244 = abs((1.0 - _1805) / _1815);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1805 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2244 = frontier_phi_37_32_ladder;
        }
        float _2582;
        if (_1818 > 0.0)
        {
            _2582 = abs((1.0 - _1809) / _1818);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1818 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1809 + 1.0) / _1818);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2582 = frontier_phi_47_44_ladder;
        }
        float _2584 = isnan(_2244) ? _1927 : (isnan(_1927) ? _2244 : min(_1927, _2244));
        float _2585 = isnan(_2582) ? _2584 : (isnan(_2584) ? _2582 : min(_2584, _2582));
        float _2589 = (_2585 * _1812) + _1801;
        float _2590 = (_2585 * _1815) + _1805;
        float _2591 = (_2585 * _1818) + _1809;
        float _2592 = _2585 * 9.9999997473787516355514526367188e-05;
        float _2593 = (-1.0) - _2592;
        float _2595 = _2592 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2591 > _2595) || ((_2591 < _2593) || ((_2590 > _2595) || ((_2590 < _2593) || ((_2589 < _2593) || (_2589 > _2595))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2713 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2591, cbModelParam._m0[17u].z, fma(_2590, cbModelParam._m0[17u].y, _2589 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2591, cbModelParam._m0[18u].z, fma(_2590, cbModelParam._m0[18u].y, _2589 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2591, cbModelParam._m0[19u].z, fma(_2590, cbModelParam._m0[19u].y, _2589 * cbModelParam._m0[19u].x))), _1747);
            frontier_phi_22_47_ladder = _2713.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2713.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2713.x * cbModelParam._m0[1u].z;
        }
        _1837 = frontier_phi_22_47_ladder_2;
        _1839 = frontier_phi_22_47_ladder_1;
        _1841 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1821 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_846, _847, _848), _1747);
        _1837 = _1821.x * cbModelParam._m0[1u].z;
        _1839 = _1821.y * cbModelParam._m0[1u].z;
        _1841 = _1821.z * cbModelParam._m0[1u].z;
    }
    float _1854 = (((_873 * _822) + _874) * _838) * ((cbModelParam._m0[1u].w * (_1837 - _1738)) + _1738);
    float _1856 = (((_873 * _824) + _874) * _838) * ((cbModelParam._m0[1u].w * (_1839 - _1740)) + _1740);
    float _1858 = (((_873 * _825) + _874) * _838) * ((cbModelParam._m0[1u].w * (_1841 - _1742)) + _1742);
    float _1861 = fma(_1858, cbSceneParam._m0[89u].z, fma(_1856, cbSceneParam._m0[89u].y, _1854 * cbSceneParam._m0[89u].x));
    float _1864 = fma(_1858, cbSceneParam._m0[90u].z, fma(_1856, cbSceneParam._m0[90u].y, _1854 * cbSceneParam._m0[90u].x));
    float _1867 = fma(_1858, cbSceneParam._m0[91u].z, fma(_1856, cbSceneParam._m0[91u].y, _1854 * cbSceneParam._m0[91u].x));
    float _1901 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1905 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1913 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1914 = _1901 / _1913;
    float _1915 = _1905 / _1913;
    float _1916 = _1909 / _1913;
    float _2063;
    float _2064;
    float _2065;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1943 = ((uint(_1916 > cbSceneParam._m0[59u].y) + uint(_1916 > cbSceneParam._m0[59u].x)) + uint(_1916 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1944 = _1943 + 43u;
        uint _1952 = _1943 + 44u;
        uint _1960 = _1943 + 45u;
        uint _1968 = _1943 + 46u;
        float _1979 = fma(_1913, cbSceneParam._m0[_1944].w, fma(_1909, cbSceneParam._m0[_1944].z, fma(_1905, cbSceneParam._m0[_1944].y, _1901 * cbSceneParam._m0[_1944].x)));
        float _1983 = fma(_1913, cbSceneParam._m0[_1952].w, fma(_1909, cbSceneParam._m0[_1952].z, fma(_1905, cbSceneParam._m0[_1952].y, _1901 * cbSceneParam._m0[_1952].x)));
        float _1991 = fma(_1913, cbSceneParam._m0[_1968].w, fma(_1909, cbSceneParam._m0[_1968].z, fma(_1905, cbSceneParam._m0[_1968].y, _1901 * cbSceneParam._m0[_1968].x)));
        float _1996 = cbSceneParam._m0[33u].z * _1991;
        float _1998 = cbSceneParam._m0[33u].w * _1991;
        float _2001 = fma(_1913, cbSceneParam._m0[_1960].w, fma(_1909, cbSceneParam._m0[_1960].z, fma(_1905, cbSceneParam._m0[_1960].y, _1901 * cbSceneParam._m0[_1960].x))) / _1991;
        float _2049 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
        float _4334 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2056 = (isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 + _1979) / _1991, (_1998 + _1983) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 + _1979) / _1991, (_1983 - _1996) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1996) / _1991, (_1983 - _1998) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1998) / _1991, (_1996 + _1983) / _1991), _2001), 0.0)).x), vec4(0.25)));
        _2063 = 1.0 - (_2056 * cbSceneParam._m0[34u].x);
        _2064 = 1.0 - (_2056 * cbSceneParam._m0[34u].y);
        _2065 = 1.0 - (_2056 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2063 = 1.0;
        _2064 = 1.0;
        _2065 = 1.0;
    }
    float _2129;
    float _2131;
    float _2133;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2117 = fma(_1913, cbSceneParam._m0[63u].w, fma(_1909, cbSceneParam._m0[63u].z, fma(_1905, cbSceneParam._m0[63u].y, _1901 * cbSceneParam._m0[63u].x)));
        float _2118 = fma(_1913, cbSceneParam._m0[60u].w, fma(_1909, cbSceneParam._m0[60u].z, fma(_1905, cbSceneParam._m0[60u].y, _1901 * cbSceneParam._m0[60u].x))) / _2117;
        float _2119 = fma(_1913, cbSceneParam._m0[61u].w, fma(_1909, cbSceneParam._m0[61u].z, fma(_1905, cbSceneParam._m0[61u].y, _1901 * cbSceneParam._m0[61u].x))) / _2117;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2118 >= cbSceneParam._m0[64u].x) && (_2119 >= cbSceneParam._m0[64u].y)) && (_2118 <= cbSceneParam._m0[64u].z)) && (_2119 <= cbSceneParam._m0[64u].w))
        {
            float _2257 = fma(_1913, cbSceneParam._m0[62u].w, fma(_1909, cbSceneParam._m0[62u].z, fma(_1905, cbSceneParam._m0[62u].y, _1901 * cbSceneParam._m0[62u].x))) / _2117;
            float _2261 = isnan(cbSceneParam._m0[41u].w) ? _2257 : (isnan(_2257) ? cbSceneParam._m0[41u].w : max(_2257, cbSceneParam._m0[41u].w));
            float _2304 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
            float _4350 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
            float _2311 = (isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2118, cbSceneParam._m0[33u].w + _2119), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2118, _2119 - cbSceneParam._m0[33u].z), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].z, _2119 - cbSceneParam._m0[33u].w), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2119), _2261), 0.0)).x), vec4(0.25)));
            float _2315 = 1.0 - (_2311 * cbSceneParam._m0[34u].x);
            float _2316 = 1.0 - (_2311 * cbSceneParam._m0[34u].y);
            float _2317 = 1.0 - (_2311 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2317) ? _2065 : (isnan(_2065) ? _2317 : min(_2065, _2317));
            frontier_phi_34_33_ladder_1 = isnan(_2316) ? _2064 : (isnan(_2064) ? _2316 : min(_2064, _2316));
            frontier_phi_34_33_ladder_2 = isnan(_2315) ? _2063 : (isnan(_2063) ? _2315 : min(_2063, _2315));
        }
        else
        {
            frontier_phi_34_33_ladder = _2065;
            frontier_phi_34_33_ladder_1 = _2064;
            frontier_phi_34_33_ladder_2 = _2063;
        }
        _2129 = frontier_phi_34_33_ladder_2;
        _2131 = frontier_phi_34_33_ladder_1;
        _2133 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2129 = _2063;
        _2131 = _2064;
        _2133 = _2065;
    }
    uvec4 _2138 = floatBitsToUint(cbInstanceData._m0[_242 + 5u]);
    uint _2140 = _2138.x * 14u;
    uint _2141 = _2140 + 13u;
    float _2148 = _838 + (-1.0);
    float _2153 = (cbLight._m0[_2141].x * _2148) + 1.0;
    float _2154 = (cbLight._m0[_2141].y * _2148) + 1.0;
    float _2155 = (cbLight._m0[_2141].z * _2148) + 1.0;
    float _2156 = (cbLight._m0[_2141].w * _2148) + 1.0;
    uint _2157 = _2140 + 5u;
    float _2163 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
    uint _2167 = _2140 + 4u;
    float _2176 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
    uint _2180 = _2140 | 1u;
    float _2191 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_672, _673, _674));
    float _2194 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_672, _673, _674));
    float _4386 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _4397 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2199 = (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0))) * 0.3183098733425140380859375;
    float _2201 = (isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0))) * 0.3183098733425140380859375;
    float _2208 = ((cbLight._m0[_2157].x * _2163) * _2201) + (((cbLight._m0[_2167].x * _2129) * _2176) * _2199);
    float _2209 = ((_2163 * cbLight._m0[_2157].y) * _2201) + (((cbLight._m0[_2167].y * _2131) * _2176) * _2199);
    float _2210 = ((_2163 * cbLight._m0[_2157].z) * _2201) + (((cbLight._m0[_2167].z * _2133) * _2176) * _2199);
    uvec4 _2214 = floatBitsToUint(cbLight._m0[_2140 + 12u]);
    bool _2216 = _2214.x == 0u;
    float _2318;
    float _2320;
    float _2322;
    if (_2216)
    {
        _2318 = _2208;
        _2320 = _2209;
        _2322 = _2210;
    }
    else
    {
        uint _2326 = _2140 + 6u;
        float _2342 = (dot(vec3(cbLight._m0[_2140 + 2u].xyz), vec3(_672, _673, _674)) * 0.5) + 0.5;
        float _2343 = _2342 * _2342;
        float _4408 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
        float _2344 = isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0));
        float _2345 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2318 = (((cbLight._m0[_2326].x * 0.3183098733425140380859375) * _2344) * _2345) + _2208;
        _2320 = (((cbLight._m0[_2326].y * 0.3183098733425140380859375) * _2344) * _2345) + _2209;
        _2322 = (((cbLight._m0[_2326].z * 0.3183098733425140380859375) * _2344) * _2345) + _2210;
    }
    bool _2325 = _2214.y == 0u;
    float _2380;
    float _2382;
    float _2384;
    if (_2325)
    {
        _2380 = _2318;
        _2382 = _2320;
        _2384 = _2322;
    }
    else
    {
        uint _2553 = _2140 + 7u;
        float _2569 = (dot(vec3(cbLight._m0[_2140 + 3u].xyz), vec3(_672, _673, _674)) * 0.5) + 0.5;
        float _2570 = _2569 * _2569;
        float _4424 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
        float _2571 = isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0));
        float _2572 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2380 = (((cbLight._m0[_2553].x * 0.3183098733425140380859375) * _2571) * _2572) + _2318;
        _2382 = (((cbLight._m0[_2553].y * 0.3183098733425140380859375) * _2571) * _2572) + _2320;
        _2384 = (((cbLight._m0[_2553].z * 0.3183098733425140380859375) * _2571) * _2572) + _2322;
    }
    uint _2387 = _2140 + 8u;
    float _2400 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2140].w)) * _675) * 0.949999988079071044921875);
    float _2401 = _2400 * _2400;
    float _2402 = cbLight._m0[_2140].x + _752;
    float _2403 = cbLight._m0[_2140].y + _753;
    float _2404 = cbLight._m0[_2140].z + _754;
    float _2408 = inversesqrt(dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404)));
    float _2409 = _2408 * _2402;
    float _2410 = _2408 * _2403;
    float _2411 = _2408 * _2404;
    float _2412 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2140].xyz));
    float _4440 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
    float _4451 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _2416 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
    float _2417 = dot(vec3(_672, _673, _674), vec3(_2409, _2410, _2411));
    float _4462 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2420 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
    float _2421 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_2409, _2410, _2411));
    float _4473 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2425 = _2401 * _2401;
    float _2429 = ((_2420 * _2420) * (_2425 + (-1.0))) + 1.0;
    float _2437 = exp2(log2(1.0 - (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0)))) * 5.0);
    float _2438 = 0.959999978542327880859375 - _819;
    float _2440 = 0.959999978542327880859375 - _820;
    float _2441 = 0.959999978542327880859375 - _821;
    float _2448 = 1.0 - _2401;
    float _2459 = (0.5 / (((_2416 * ((_2415 * _2448) + _2401)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2448) + _2401) * _2415))) * _2415;
    float _4484 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2461 = (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0))) * (_2425 / ((_2429 * _2429) * 3.141590118408203125));
    uint _2475 = _2140 + 9u;
    float _2486 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2180].w)) * _675) * 0.949999988079071044921875);
    float _2487 = _2486 * _2486;
    float _2488 = cbLight._m0[_2180].x + _752;
    float _2489 = cbLight._m0[_2180].y + _753;
    float _2490 = cbLight._m0[_2180].z + _754;
    float _2494 = inversesqrt(dot(vec3(_2488, _2489, _2490), vec3(_2488, _2489, _2490)));
    float _2495 = _2494 * _2488;
    float _2496 = _2494 * _2489;
    float _2497 = _2494 * _2490;
    float _2498 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2180].xyz));
    float _4495 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
    float _2501 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
    float _2502 = dot(vec3(_672, _673, _674), vec3(_2495, _2496, _2497));
    float _4506 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _2505 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
    float _2506 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_2495, _2496, _2497));
    float _4517 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
    float _2510 = _2487 * _2487;
    float _2514 = ((_2505 * _2505) * (_2510 + (-1.0))) + 1.0;
    float _2521 = exp2(log2(1.0 - (isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0)))) * 5.0);
    float _2528 = 1.0 - _2487;
    float _2538 = (0.5 / (((_2416 * ((_2501 * _2528) + _2487)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2528) + _2487) * _2501))) * _2501;
    float _4528 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2540 = (isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0))) * (_2510 / ((_2514 * _2514) * 3.141590118408203125));
    float _2550 = (((((_2521 * _2438) + _822) * cbLight._m0[_2475].x) * _2540) * _2163) + ((((cbLight._m0[_2387].x * _2129) * ((_2437 * _2438) + _822)) * _2461) * _2176);
    float _2551 = (((((_2521 * _2440) + _824) * cbLight._m0[_2475].y) * _2540) * _2163) + ((((cbLight._m0[_2387].y * _2131) * ((_2437 * _2440) + _824)) * _2461) * _2176);
    float _2552 = (((((_2521 * _2441) + _825) * cbLight._m0[_2475].z) * _2540) * _2163) + ((((cbLight._m0[_2387].z * _2133) * ((_2437 * _2441) + _825)) * _2461) * _2176);
    float _2608;
    float _2610;
    float _2612;
    if (_2216)
    {
        _2608 = _2550;
        _2610 = _2551;
        _2612 = _2552;
    }
    else
    {
        uint _2614 = _2140 + 2u;
        uint _2618 = _2140 + 10u;
        float _2632 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2614].w)) * _675) * 0.949999988079071044921875);
        float _2633 = _2632 * _2632;
        float _2634 = cbLight._m0[_2614].x + _752;
        float _2635 = cbLight._m0[_2614].y + _753;
        float _2636 = cbLight._m0[_2614].z + _754;
        float _2640 = inversesqrt(dot(vec3(_2634, _2635, _2636), vec3(_2634, _2635, _2636)));
        float _2641 = _2640 * _2634;
        float _2642 = _2640 * _2635;
        float _2643 = _2640 * _2636;
        float _2644 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2614].xyz));
        float _4539 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
        float _2647 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
        float _2648 = dot(vec3(_672, _673, _674), vec3(_2641, _2642, _2643));
        float _4550 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
        float _2651 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
        float _2652 = dot(vec3(cbLight._m0[_2614].xyz), vec3(_2641, _2642, _2643));
        float _4561 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
        float _2656 = _2633 * _2633;
        float _2660 = ((_2651 * _2651) * (_2656 + (-1.0))) + 1.0;
        float _2667 = exp2(log2(1.0 - (isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0)))) * 5.0);
        float _2674 = 1.0 - _2633;
        float _2684 = (0.5 / (((_2416 * ((_2647 * _2674) + _2633)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2674) + _2633) * _2647))) * _2647;
        float _4572 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2686 = (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0))) * (_2656 / ((_2660 * _2660) * 3.141590118408203125));
        float _2687 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2608 = (((((_2667 * _2438) + _822) * cbLight._m0[_2618].x) * _2686) * _2687) + _2550;
        _2610 = (((((_2667 * _2440) + _824) * cbLight._m0[_2618].y) * _2686) * _2687) + _2551;
        _2612 = (((((_2667 * _2441) + _825) * cbLight._m0[_2618].z) * _2686) * _2687) + _2552;
    }
    float _2718;
    float _2720;
    float _2722;
    if (_2325)
    {
        _2718 = _2608;
        _2720 = _2610;
        _2722 = _2612;
    }
    else
    {
        uint _2729 = _2140 + 3u;
        uint _2733 = _2140 + 11u;
        float _2747 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2729].w)) * _675) * 0.949999988079071044921875);
        float _2748 = _2747 * _2747;
        float _2749 = cbLight._m0[_2729].x + _752;
        float _2750 = cbLight._m0[_2729].y + _753;
        float _2751 = cbLight._m0[_2729].z + _754;
        float _2755 = inversesqrt(dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751)));
        float _2756 = _2755 * _2749;
        float _2757 = _2755 * _2750;
        float _2758 = _2755 * _2751;
        float _2759 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2729].xyz));
        float _4588 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
        float _2762 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
        float _2763 = dot(vec3(_672, _673, _674), vec3(_2756, _2757, _2758));
        float _4599 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
        float _2766 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
        float _2767 = dot(vec3(cbLight._m0[_2729].xyz), vec3(_2756, _2757, _2758));
        float _4610 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
        float _2771 = _2748 * _2748;
        float _2775 = ((_2766 * _2766) * (_2771 + (-1.0))) + 1.0;
        float _2782 = exp2(log2(1.0 - (isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0)))) * 5.0);
        float _2789 = 1.0 - _2748;
        float _2799 = (0.5 / (((_2416 * ((_2762 * _2789) + _2748)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2789) + _2748) * _2762))) * _2762;
        float _4621 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2801 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_2771 / ((_2775 * _2775) * 3.141590118408203125));
        float _2802 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2718 = (((((_2782 * _2438) + _822) * cbLight._m0[_2733].x) * _2801) * _2802) + _2608;
        _2720 = (((((_2782 * _2440) + _824) * cbLight._m0[_2733].y) * _2801) * _2802) + _2610;
        _2722 = (((((_2782 * _2441) + _825) * cbLight._m0[_2733].z) * _2801) * _2802) + _2612;
    }
    float _2868;
    float _2870;
    float _2872;
    float _2874;
    float _2876;
    float _2878;
    if (_2138.y == 0u)
    {
        uvec4 _2823 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2824 = _2823.x;
        uint _2835 = uint((float(_2823.y) * floor(float(uint(cbSceneParam._m0[85u].y * _761) / _2824))) + floor(float(uint(cbSceneParam._m0[85u].x * _760) / _2824)));
        float _2845 = (log2(_1916 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2846 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
        uint _2849 = uint(isnan(14.0) ? _2846 : (isnan(_2846) ? 14.0 : min(_2846, 14.0)));
        uvec4 _2854 = texelFetch(g_lightClusterGridBuffer, int(((_2849 << 2u) + (_2835 << 6u)) >> 2u));
        uint _2855 = _2854.x;
        uint _2856 = _2823.z;
        float _2935;
        float _2937;
        float _2939;
        float _2941;
        float _2943;
        float _2945;
        if (((((1u << ((_2856 >> 4u) & 15u)) + 4294967295u) & _2855) == 0u) || ((_2856 & 240u) == 0u))
        {
            _2935 = 0.0;
            _2937 = 0.0;
            _2939 = 0.0;
            _2941 = 0.0;
            _2943 = 0.0;
            _2945 = 0.0;
        }
        else
        {
            float _2936;
            float _2938;
            float _2940;
            float _2942;
            float _2944;
            float _2946;
            float _3080 = 0.0;
            float _3081 = 0.0;
            float _3082 = 0.0;
            float _3083 = 0.0;
            float _3084 = 0.0;
            float _3085 = 0.0;
            uint _3086 = 0u;
            uint _3095;
            bool _3096;
            for (;;)
            {
                _3095 = texelFetch(g_lightClassification, int((((_2849 << 5u) + (_2835 << 9u)) + (_3086 << 2u)) >> 2u)).x;
                _3096 = _3095 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3096)
                {
                    frontier_phi_66_pred = _3085;
                    frontier_phi_66_pred_1 = _3084;
                    frontier_phi_66_pred_2 = _3083;
                    frontier_phi_66_pred_3 = _3082;
                    frontier_phi_66_pred_4 = _3081;
                    frontier_phi_66_pred_5 = _3080;
                }
                else
                {
                    float _3204;
                    float _3205;
                    float _3206;
                    float _3207;
                    float _3208;
                    float _3209;
                    uint _3210;
                    _3204 = _3080;
                    _3205 = _3081;
                    _3206 = _3082;
                    _3207 = _3083;
                    _3208 = _3084;
                    _3209 = _3085;
                    _3210 = _3095;
                    float _3136;
                    float _3137;
                    float _3138;
                    float _3139;
                    float _3140;
                    float _3141;
                    for (;;)
                    {
                        uint _3214 = uint(findLSB(_3210)) + (_3086 << 5u);
                        uint _3211 = (_3210 + 4294967295u) & _3210;
                        uint _3216 = _3214 * 48u;
                        vec4 _3230 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3216)).x, texelFetch(g_PointLightRenderingBuffer, int(_3216 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3216 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3216 + 3u)).x));
                        uint _3236 = (_3214 * 48u) + 4u;
                        vec4 _3249 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3236)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 3u)).x));
                        uint _3255 = (_3214 * 48u) + 8u;
                        vec3 _3266 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3255)).x, texelFetch(g_PointLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3255 + 2u)).x));
                        float _3270 = _3230.x - _1914;
                        float _3271 = _3230.y - _1915;
                        float _3272 = _3230.z - _1916;
                        float _3273 = dot(vec3(_3270, _3271, _3272), vec3(_3270, _3271, _3272));
                        float _3276 = inversesqrt(_3273);
                        float _3277 = _3276 * _3270;
                        float _3278 = _3276 * _3271;
                        float _3279 = _3276 * _3272;
                        float _3280 = dot(vec3(_779, _782, _785), vec3(_3277, _3278, _3279));
                        float _3285 = 1.0 - (_3273 * _3230.w);
                        float _4647 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
                        float _3286 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
                        float _3287 = sqrt(_3273) * _3249.w;
                        float _3290 = 1.39999997615814208984375 / (_3287 + 1.39999997615814208984375);
                        float _3291 = _3290 * _3290;
                        float _3294 = ((1.0 - _3291) * _3280) + _3291;
                        float _3297 = _3287 * _3287;
                        float _3301 = ((isnan(0.0) ? _3294 : (isnan(_3294) ? 0.0 : max(_3294, 0.0))) * _3286) / ((_3297 * 0.699999988079071044921875) + 1.0);
                        float _3305 = (-0.0) - _1914;
                        float _3306 = (-0.0) - _1915;
                        float _3307 = (-0.0) - _1916;
                        float _3311 = inversesqrt(dot(vec3(_3305, _3306, _3307), vec3(_3305, _3306, _3307)));
                        float _3312 = _3311 * _3305;
                        float _3313 = _3311 * _3306;
                        float _3314 = _3311 * _3307;
                        float _3321 = exp2(log2(1.0 / ((_3297 * 3.5) + 5.0)) * 0.25);
                        float _3322 = 1.0 - _854;
                        float _3329 = sqrt(1.0 - ((1.0 - (_3322 * _3322)) * (1.0 - (_3321 * _3321))));
                        float _3330 = _3329 * _3329;
                        float _3331 = _3330 * _3330;
                        float _3332 = _3312 + _3277;
                        float _3333 = _3313 + _3278;
                        float _3334 = _3314 + _3279;
                        float _3338 = inversesqrt(dot(vec3(_3332, _3333, _3334), vec3(_3332, _3333, _3334)));
                        float _3342 = dot(vec3(_779, _782, _785), vec3(_3312, _3313, _3314));
                        float _4663 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0));
                        float _3345 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
                        float _3346 = dot(vec3(_779, _782, _785), vec3(_3338 * _3332, _3338 * _3333, _3338 * _3334));
                        float _4674 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3349 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
                        float _3353 = ((_3349 * _3349) * (_3331 + (-1.0))) + 1.0;
                        float _3354 = _3290 * _3330;
                        float _3355 = _3354 * _3354;
                        float _3358 = ((1.0 - _3355) * _3280) + _3355;
                        float _4685 = isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : max(_3358, 0.0));
                        float _3359 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
                        float _3360 = 1.0 - _3330;
                        float _3370 = (0.5 / (((_3359 * ((_3345 * _3360) + _3330)) + 9.9999999392252902907785028219223e-09) + (((_3359 * _3360) + _3330) * _3345))) * _3359;
                        float _4696 = isnan(0.0) ? _3370 : (isnan(_3370) ? 0.0 : max(_3370, 0.0));
                        float _3381 = (((_3331 * 3.1415927410125732421875) * (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0)))) / ((_3353 * _3353) * ((_3297 * 2.1991131305694580078125) + 3.141590118408203125))) * _3286;
                        _3139 = (_3301 * _3249.x) + _3207;
                        _3140 = (_3301 * _3249.y) + _3208;
                        _3141 = (_3301 * _3249.z) + _3209;
                        _3136 = (_3381 * _3266.x) + _3204;
                        _3137 = (_3381 * _3266.y) + _3205;
                        _3138 = (_3381 * _3266.z) + _3206;
                        if (_3211 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3204 = _3136;
                            _3205 = _3137;
                            _3206 = _3138;
                            _3207 = _3139;
                            _3208 = _3140;
                            _3209 = _3141;
                            _3210 = _3211;
                        }
                    }
                    frontier_phi_66_pred = _3141;
                    frontier_phi_66_pred_1 = _3140;
                    frontier_phi_66_pred_2 = _3139;
                    frontier_phi_66_pred_3 = _3138;
                    frontier_phi_66_pred_4 = _3137;
                    frontier_phi_66_pred_5 = _3136;
                }
                _2946 = frontier_phi_66_pred;
                _2944 = frontier_phi_66_pred_1;
                _2942 = frontier_phi_66_pred_2;
                _2940 = frontier_phi_66_pred_3;
                _2938 = frontier_phi_66_pred_4;
                _2936 = frontier_phi_66_pred_5;
                uint _3087 = _3086 + 1u;
                if (_3087 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3080 = _2936;
                    _3081 = _2938;
                    _3082 = _2940;
                    _3083 = _2942;
                    _3084 = _2944;
                    _3085 = _2946;
                    _3086 = _3087;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2935 = _2936;
            _2937 = _2938;
            _2939 = _2940;
            _2941 = _2942;
            _2943 = _2944;
            _2945 = _2946;
        }
        uvec4 _2949 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2950 = _2949.z;
        uint _2952 = (_2950 >> 8u) & 15u;
        float _3048;
        float _3050;
        float _3052;
        float _3054;
        float _3056;
        float _3058;
        if (((4294967295u << _2952) & _2855) == 0u)
        {
            _3048 = _2935;
            _3050 = _2937;
            _3052 = _2939;
            _3054 = _2941;
            _3056 = _2943;
            _3058 = _2945;
        }
        else
        {
            float _3073 = inversesqrt(dot(vec3(_1914, _1915, _1916), vec3(_1914, _1915, _1916)));
            float _3074 = _3073 * _1914;
            float _3075 = _3073 * _1915;
            float _3076 = _3073 * _1916;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2952 < ((_2950 >> 12u) & 15u))
            {
                float _3049;
                float _3051;
                float _3053;
                float _3055;
                float _3057;
                float _3059;
                float _3187 = _2935;
                float _3188 = _2937;
                float _3189 = _2939;
                float _3190 = _2941;
                float _3191 = _2943;
                float _3192 = _2945;
                uint _3193 = _2952;
                uint _3202;
                bool _3203;
                for (;;)
                {
                    _3202 = texelFetch(g_lightClassification, int((((_2849 << 5u) + (_2835 << 9u)) + (_3193 << 2u)) >> 2u)).x;
                    _3203 = _3202 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3203)
                    {
                        frontier_phi_72_pred = _3192;
                        frontier_phi_72_pred_1 = _3191;
                        frontier_phi_72_pred_2 = _3190;
                        frontier_phi_72_pred_3 = _3189;
                        frontier_phi_72_pred_4 = _3188;
                        frontier_phi_72_pred_5 = _3187;
                    }
                    else
                    {
                        float _3386;
                        float _3387;
                        float _3388;
                        float _3389;
                        float _3390;
                        float _3391;
                        float _3679;
                        float _3680;
                        float _3681;
                        float _3682;
                        float _3683;
                        float _3684;
                        float _3399 = _3187;
                        float _3400 = _3188;
                        float _3401 = _3189;
                        float _3402 = _3190;
                        float _3403 = _3191;
                        float _3404 = _3192;
                        uint _3405 = _3202;
                        uint _3406;
                        vec4 _3431;
                        float _3432;
                        vec4 _3447;
                        vec3 _3459;
                        vec4 _3474;
                        vec4 _3489;
                        float _3535;
                        bool _3536;
                        for (;;)
                        {
                            uint _3416 = ((_3193 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3405));
                            _3406 = (_3405 + 4294967295u) & _3405;
                            uint _3418 = _3416 * 40u;
                            _3431 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3418)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 3u)).x));
                            _3432 = _3431.w;
                            uint _3434 = (_3416 * 40u) + 4u;
                            _3447 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3434)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3434 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3434 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3434 + 3u)).x));
                            uint _3449 = (_3416 * 40u) + 8u;
                            _3459 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3449)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 2u)).x));
                            uint _3461 = (_3416 * 40u) + 16u;
                            _3474 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3461)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 3u)).x));
                            uint _3476 = (_3416 * 40u) + 20u;
                            _3489 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3476)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 3u)).x));
                            uint _3491 = (_3416 * 40u) + 24u;
                            vec4 _3504 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3491)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 3u)).x));
                            uint _3510 = (_3416 * 40u) + 28u;
                            vec4 _3523 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 3u)).x));
                            _3535 = fma(_1916, _3523.z, fma(_1915, _3523.y, _3523.x * _1914)) + _3523.w;
                            _3536 = !((fma(_1916, _3504.z, fma(_1915, _3504.y, _3504.x * _1914)) + _3504.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3536)
                            {
                                float _3563 = _3431.x - _1914;
                                float _3564 = _3431.y - _1915;
                                float _3565 = _3431.z - _1916;
                                float _3566 = dot(vec3(_3563, _3564, _3565), vec3(_3563, _3564, _3565));
                                float _3569 = inversesqrt(_3566);
                                float _3570 = _3569 * _3563;
                                float _3571 = _3569 * _3564;
                                float _3572 = _3569 * _3565;
                                float _3576 = 1.0 - (_3566 / (_3432 * _3432));
                                float _4707 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                                float _3577 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
                                float _3581 = sqrt(_3566) * _3447.w;
                                float _3583 = 1.39999997615814208984375 / (_3581 + 1.39999997615814208984375);
                                float _3584 = _3583 * _3583;
                                float _3587 = ((1.0 - _3584) * dot(vec3(_3570, _3571, _3572), vec3(_779, _782, _785))) + _3584;
                                float _3590 = _3581 * _3581;
                                float _3594 = (fma(_1916, _3474.z, fma(_1915, _3474.y, _3474.x * _1914)) + _3474.w) / _3535;
                                float _3595 = (fma(_1916, _3489.z, fma(_1915, _3489.y, _3489.x * _1914)) + _3489.w) / _3535;
                                float _3599 = 1.0 - dot(vec2(_3594, _3595), vec2(_3594, _3595));
                                float _4723 = isnan(0.0) ? _3599 : (isnan(_3599) ? 0.0 : max(_3599, 0.0));
                                float _3600 = isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0));
                                float _3601 = _3600 * (((isnan(0.0) ? _3587 : (isnan(_3587) ? 0.0 : max(_3587, 0.0))) * _3577) / ((_3590 * 0.699999988079071044921875) + 1.0));
                                float _3613 = exp2(log2(1.0 / ((_3590 * 3.5) + 5.0)) * 0.25);
                                float _3614 = 1.0 - _854;
                                float _3621 = sqrt(1.0 - ((1.0 - (_3614 * _3614)) * (1.0 - (_3613 * _3613))));
                                float _3622 = _3621 * _3621;
                                float _3623 = _3622 * _3622;
                                float _3624 = _3570 - _3074;
                                float _3625 = _3571 - _3075;
                                float _3626 = _3572 - _3076;
                                float _3630 = inversesqrt(dot(vec3(_3624, _3625, _3626), vec3(_3624, _3625, _3626)));
                                float _3634 = dot(vec3(_779, _782, _785), vec3((-0.0) - _3074, (-0.0) - _3075, (-0.0) - _3076));
                                float _4734 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                                float _3637 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
                                float _3638 = dot(vec3(_779, _782, _785), vec3(_3630 * _3624, _3630 * _3625, _3630 * _3626));
                                float _4745 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0));
                                float _3641 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
                                float _3645 = ((_3641 * _3641) * (_3623 + (-1.0))) + 1.0;
                                float _3646 = _3583 * _3622;
                                float _3647 = _3646 * _3646;
                                float _3653 = ((1.0 - _3647) * dot(vec3(_779, _782, _785), vec3(_3570, _3571, _3572))) + _3647;
                                float _4756 = isnan(0.0) ? _3653 : (isnan(_3653) ? 0.0 : max(_3653, 0.0));
                                float _3654 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
                                float _3655 = 1.0 - _3622;
                                float _3665 = (0.5 / (((_3654 * ((_3637 * _3655) + _3622)) + 9.9999999392252902907785028219223e-09) + (((_3654 * _3655) + _3622) * _3637))) * _3654;
                                float _4767 = isnan(0.0) ? _3665 : (isnan(_3665) ? 0.0 : max(_3665, 0.0));
                                float _3675 = (_3600 * _3577) * (((_3623 * 3.1415927410125732421875) * (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0)))) / ((_3645 * _3645) * ((_3590 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3601 * _3447.y;
                                frontier_phi_78_pred_1 = _3601 * _3447.x;
                                frontier_phi_78_pred_2 = _3675 * _3459.z;
                                frontier_phi_78_pred_3 = _3675 * _3459.y;
                                frontier_phi_78_pred_4 = _3675 * _3459.x;
                                frontier_phi_78_pred_5 = _3601 * _3447.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3683 = frontier_phi_78_pred;
                            _3682 = frontier_phi_78_pred_1;
                            _3681 = frontier_phi_78_pred_2;
                            _3680 = frontier_phi_78_pred_3;
                            _3679 = frontier_phi_78_pred_4;
                            _3684 = frontier_phi_78_pred_5;
                            _3389 = _3682 + _3402;
                            _3390 = _3683 + _3403;
                            _3391 = _3684 + _3404;
                            _3386 = _3679 + _3399;
                            _3387 = _3680 + _3400;
                            _3388 = _3681 + _3401;
                            if (_3406 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3399 = _3386;
                                _3400 = _3387;
                                _3401 = _3388;
                                _3402 = _3389;
                                _3403 = _3390;
                                _3404 = _3391;
                                _3405 = _3406;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3391;
                        frontier_phi_72_pred_1 = _3390;
                        frontier_phi_72_pred_2 = _3389;
                        frontier_phi_72_pred_3 = _3388;
                        frontier_phi_72_pred_4 = _3387;
                        frontier_phi_72_pred_5 = _3386;
                    }
                    _3059 = frontier_phi_72_pred;
                    _3057 = frontier_phi_72_pred_1;
                    _3055 = frontier_phi_72_pred_2;
                    _3053 = frontier_phi_72_pred_3;
                    _3051 = frontier_phi_72_pred_4;
                    _3049 = frontier_phi_72_pred_5;
                    uint _3194 = _3193 + 1u;
                    if (_3194 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3187 = _3049;
                        _3188 = _3051;
                        _3189 = _3053;
                        _3190 = _3055;
                        _3191 = _3057;
                        _3192 = _3059;
                        _3193 = _3194;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3059;
                frontier_phi_60_61_ladder_1 = _3057;
                frontier_phi_60_61_ladder_2 = _3053;
                frontier_phi_60_61_ladder_3 = _3051;
                frontier_phi_60_61_ladder_4 = _3049;
                frontier_phi_60_61_ladder_5 = _3055;
            }
            else
            {
                frontier_phi_60_61_ladder = _2945;
                frontier_phi_60_61_ladder_1 = _2943;
                frontier_phi_60_61_ladder_2 = _2939;
                frontier_phi_60_61_ladder_3 = _2937;
                frontier_phi_60_61_ladder_4 = _2935;
                frontier_phi_60_61_ladder_5 = _2941;
            }
            _3048 = frontier_phi_60_61_ladder_4;
            _3050 = frontier_phi_60_61_ladder_3;
            _3052 = frontier_phi_60_61_ladder_2;
            _3054 = frontier_phi_60_61_ladder_5;
            _3056 = frontier_phi_60_61_ladder_1;
            _3058 = frontier_phi_60_61_ladder;
        }
        float _3063 = isnan(1.0) ? _838 : (isnan(_838) ? 1.0 : min(_838, 1.0));
        _2868 = (_3063 * _3054) + _2380;
        _2870 = (_3063 * _3056) + _2382;
        _2872 = (_3063 * _3058) + _2384;
        _2874 = ((_3048 * _822) * _3063) + _2718;
        _2876 = ((_3050 * _824) * _3063) + _2720;
        _2878 = ((_3052 * _825) * _3063) + _2722;
    }
    else
    {
        _2868 = _2380;
        _2870 = _2382;
        _2872 = _2384;
        _2874 = _2718;
        _2876 = _2720;
        _2878 = _2722;
    }
    float _4783 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _4794 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _4805 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    uint _2898 = _242 + 6u;
    float _2906 = _760 / cbSceneParam._m0[86u].x;
    float _2907 = _761 / cbSceneParam._m0[86u].y;
    vec4 _2921 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2906, _2907, (log2((isnan(cbSceneParam._m0[77u].w) ? _694 : (isnan(_694) ? cbSceneParam._m0[77u].w : min(_694, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2923 = _2921.x;
    float _2924 = _2921.y;
    float _2925 = _2921.z;
    float _2926 = _2921.w;
    float _2998;
    float _3000;
    float _3002;
    float _3004;
    if (_694 > cbSceneParam._m0[78u].w)
    {
        float _2960 = isnan(_694) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _694 : min(cbSceneParam._m0[80u].w, _694));
        float _2961 = _2960 / _694;
        float _2972 = _2961 * _745;
        float _2973 = _746 * _2961;
        float _2974 = (-0.0) - _2973;
        float _2976 = _2961 * _747;
        float _2978 = (cbSceneParam._m0[77u].w * _2974) / _2960;
        float _2979 = _2978 + cbSceneParam._m0[79u].w;
        float _2980 = cbSceneParam._m0[79u].w - _2973;
        float _2986 = sqrt(((_2972 * _2972) + (_2973 * _2973)) + (_2976 * _2976));
        float _2989 = (1.0 - (cbSceneParam._m0[77u].w / _2960)) * _2986;
        float _2994 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2996 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3149;
        if (abs((_2974 - _2978) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3149 = ((((_2979 > 0.0) ? exp2(_2994 * _2979) : (2.0 - exp2(_2996 * _2979))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2989;
        }
        else
        {
            float _3109 = 1.0 / cbSceneParam._m0[80u].x;
            float _3110 = isnan(_2980) ? _2979 : (isnan(_2979) ? _2980 : max(_2979, _2980));
            float _3111 = isnan(_2980) ? _2979 : (isnan(_2979) ? _2980 : min(_2979, _2980));
            float _3120 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : min(_3110, 0.0));
            float _3121 = isnan(0.0) ? _3111 : (isnan(_3111) ? 0.0 : min(_3111, 0.0));
            _3149 = ((abs(_2986 / _2974) * cbSceneParam._m0[80u].y) * ((((_3120 - _3121) * 2.0) - ((exp2(_2994 * (isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0)))) - exp2(_2994 * (isnan(0.0) ? _3111 : (isnan(_3111) ? 0.0 : max(_3111, 0.0))))) * _3109)) - ((exp2(_2996 * _3120) - exp2(_2996 * _3121)) * _3109))) + (_2989 * cbSceneParam._m0[80u].z);
        }
        vec4 _3151 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2906, _2907, 1.0), 0.0);
        float _3160 = exp2((_3149 * (-1.44269502162933349609375)) * (1.0 - _3151.w));
        float _3161 = log2(_3160);
        float _3177 = log2(_2926);
        _2998 = (exp2(_3177 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3161 * cbSceneParam._m0[78u].x)) * _3151.x) / cbSceneParam._m0[78u].x)) + _2923;
        _3000 = (exp2(_3177 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3161 * cbSceneParam._m0[78u].y)) * _3151.y) / cbSceneParam._m0[78u].y)) + _2924;
        _3002 = (exp2(_3177 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3161 * cbSceneParam._m0[78u].z)) * _3151.z) / cbSceneParam._m0[78u].z)) + _2925;
        _3004 = _3160 * _2926;
    }
    else
    {
        _2998 = _2923;
        _3000 = _2924;
        _3002 = _2925;
        _3004 = _2926;
    }
    float _3016 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3017 = _3016 == 3.0;
    float _3018 = log2(_3004);
    float _3025 = exp2(_3018 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0))) * (_2868 + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _838))) + ((_2874 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3026 = exp2(_3018 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0))) * (_2870 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _838))) + ((_2876 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3027 = exp2(_3018 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0))) * (_2872 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _838))) + ((_2878 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3036 = (_3016 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3036 * (_3017 ? _3025 : (_3025 + (cbSceneParam._m0[72u].w * _2998)));
    SV_Target.y = _3036 * (_3017 ? _3026 : (_3026 + (cbSceneParam._m0[72u].w * _3000)));
    SV_Target.z = _3036 * (_3017 ? _3027 : (_3027 + (cbSceneParam._m0[72u].w * _3002)));
    SV_Target.w = cbInstanceData._m0[_2898].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2898].w;
}


