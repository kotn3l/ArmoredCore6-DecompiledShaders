#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1492;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _242 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _243 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _244 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _250 = inversesqrt(dot(vec3(_242, _243, _244), vec3(_242, _243, _244)));
    float _257 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _264 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _279 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3842 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _3853 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _3864 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    uint _289 = uint(roundEven(NORMAL.w)) * 13u;
    uint _294 = _289 + 1u;
    uint _298 = _289 + 2u;
    float _307 = sqrt(((cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x) + (cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x)) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x));
    float _308 = _307 * TEXCOORD.z;
    float _309 = _307 * TEXCOORD.w;
    vec4 _322 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _308) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _309) + cbTextureTilingScale._m0[13u].w));
    vec4 _346 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _351 = _346.x * cbMtdParam._m0[11u].x;
    float _352 = _346.y * cbMtdParam._m0[11u].y;
    float _353 = _346.z * cbMtdParam._m0[11u].z;
    vec4 _372 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _308) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _309) + cbTextureTilingScale._m0[5u].w));
    vec4 _409 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _411 = _409.x;
    float _423 = dot(vec4(_411, _409.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _440 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_411 - _423) * cbMtdParam._m0[24u].y) + _423) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3875 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _441 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _448 = (_441 * ((_372.x * cbMtdParam._m0[12u].x) - _351)) + _351;
    float _449 = (_441 * ((_372.y * cbMtdParam._m0[12u].y) - _352)) + _352;
    float _450 = (_441 * ((_372.z * cbMtdParam._m0[12u].z) - _353)) + _353;
    vec4 _467 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _308) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _309) + cbTextureTilingScale._m0[3u].w));
    vec4 _487 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _489 = _487.x;
    float _499 = dot(vec4(_489, _487.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _513 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_489 - _499) * cbMtdParam._m0[24u].y) + _499) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3886 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _514 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _521 = (_514 * ((_467.x * cbMtdParam._m0[13u].x) - _448)) + _448;
    float _522 = (_514 * ((_467.y * cbMtdParam._m0[13u].y) - _449)) + _449;
    float _523 = (_514 * ((_467.z * cbMtdParam._m0[13u].z) - _450)) + _450;
    float _527 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _322.x) * _521;
    float _530 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _322.y) * _522;
    float _533 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _322.z) * _523;
    float _540 = ((_521 - _527) * (isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0)))) + _527;
    float _541 = ((_522 - _530) * (isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0)))) + _530;
    float _542 = ((_523 - _533) * (isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0)))) + _533;
    vec4 _559 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _308) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _309) + cbTextureTilingScale._m0[20u].w));
    vec4 _582 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _308) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _309) + cbTextureTilingScale._m0[4u].w));
    vec4 _599 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _601 = _599.x;
    float _602 = _599.y;
    float _603 = _599.z;
    float _610 = ((_582.x - _601) * _441) + _601;
    float _611 = ((_582.y - _602) * _441) + _602;
    float _612 = ((_582.z - _603) * _441) + _603;
    vec4 _624 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _308) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _309) + cbTextureTilingScale._m0[2u].w));
    float _637 = ((_624.z - _612) * _514) + _612;
    float _640 = ((((_624.x - _610) * _514) + _610) * 2.0) + (-1.0);
    float _641 = ((((_624.y - _611) * _514) + _611) * 2.0) + (-1.0);
    float _642 = dot(vec2(_640, _641), vec2(_640, _641));
    float _3897 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _647 = sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0))));
    vec4 _660 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _678 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _308) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _309) + cbTextureTilingScale._m0[11u].w));
    float _680 = _678.x;
    float _681 = 1.0 - _680;
    float _687 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _690 = ((isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : min(_687, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _699 = (_690 - ((((((_680 - _681) * cbMtdParam._m0[24u].z) + _681) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _690))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3918 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _700 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _707 = (_700 * (cbMtdParam._m0[17u].x - _540)) + _540;
    float _708 = (_700 * (cbMtdParam._m0[17u].y - _541)) + _541;
    float _709 = (_700 * (cbMtdParam._m0[17u].z - _542)) + _542;
    vec4 _721 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _308) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _309) + cbTextureTilingScale._m0[19u].w));
    float _723 = _721.x;
    float _724 = 1.0 - _723;
    float _749 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_723 - _724) * cbMtdParam._m0[24u].w) + _724) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3929 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _758 = ((((cbMtdParam._m0[10u].x - _707) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _750) + _707;
    float _759 = ((((cbMtdParam._m0[10u].y - _708) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _750) + _708;
    float _760 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _709)) * _750) + _709;
    vec4 _786 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _788 = _786.x;
    float _806 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _308) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _309) + cbTextureTilingScale._m0[9u].w)).x - _788) * _441) + _788;
    float _823 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _308) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _309) + cbTextureTilingScale._m0[21u].w)).x - _806) * _514) + _806;
    float _827 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _823) * cbMtdParam._m0[19u].z) + _823;
    float _829 = _827 - (_827 * _700);
    float _831 = _829 - (_829 * _750);
    float _836 = (((_559.z - _637) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _637;
    vec4 _850 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _308) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _309) + cbTextureTilingScale._m0[15u].w));
    float _857 = (_850.x * 2.0) + (-1.0);
    float _858 = (_850.y * 2.0) + (-1.0);
    float _859 = dot(vec2(_857, _858), vec2(_857, _858));
    float _3940 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _867 = (_700 * (_850.z - _836)) + _836;
    float _870 = ((cbMtdParam._m0[23u].y - _867) * _750) + _867;
    vec4 _891 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _308) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _309) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _897 = (_891.x * 2.0) + (-1.0);
    float _898 = (_891.y * 2.0) + (-1.0);
    float _899 = dot(vec2(_897, _898), vec2(_897, _898));
    float _3951 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _909 = _640 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_559.x * 2.0) + (-1.0)));
    float _910 = _641 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_559.y * 2.0) + (-1.0)));
    float _922 = (((_857 - _909) + (cbMtdParam._m0[21u].x * _909)) * _700) + _909;
    float _923 = (((_858 - _910) + (cbMtdParam._m0[21u].x * _910)) * _700) + _910;
    float _924 = (_700 * (sqrt(1.0 - (isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0)))) - _647)) + _647;
    float _935 = (((_897 - _922) + (_922 * cbMtdParam._m0[22u].z)) * _750) + _922;
    float _936 = (((_898 - _923) + (_923 * cbMtdParam._m0[22u].z)) * _750) + _923;
    float _937 = ((sqrt(1.0 - (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)))) - _924) * _750) + _924;
    float _939 = cbMtdParam._m0[22u].x + _660.w;
    float _942 = fma(_937, _257 * NORMAL.x, fma(_936, _264 * TANGENT.x, (_250 * _242) * _935));
    float _945 = fma(_937, _257 * NORMAL.y, fma(_936, _264 * TANGENT.y, (_250 * _243) * _935));
    float _948 = fma(_937, _257 * NORMAL.z, fma(_936, _264 * TANGENT.z, (_250 * _244) * _935));
    float _952 = inversesqrt(dot(vec3(_942, _945, _948), vec3(_942, _945, _948)));
    float _953 = _952 * _942;
    float _954 = _952 * _945;
    float _955 = _952 * _948;
    float _3962 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _956 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
    float _3973 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _3984 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _3995 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _4006 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _4017 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _961 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _975 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1015 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1025 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1015);
    float _1026 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1015);
    float _1027 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1015);
    float _1031 = inversesqrt(dot(vec3(_1025, _1026, _1027), vec3(_1025, _1026, _1027)));
    float _1032 = _1025 * _1031;
    float _1033 = _1026 * _1031;
    float _1034 = _1027 * _1031;
    float _1040 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1041 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1059 = fma(_955, cbSceneParam._m0[5u].z, fma(_954, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _953));
    float _1062 = fma(_955, cbSceneParam._m0[6u].z, fma(_954, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _953));
    float _1065 = fma(_955, cbSceneParam._m0[7u].z, fma(_954, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _953));
    uint _1079 = (_289 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1085 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0)))) * cbInstanceData._m0[_1079].x;
    float _1086 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0)))) * cbInstanceData._m0[_1079].y;
    float _1087 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0)))) * cbInstanceData._m0[_1079].z;
    float _4028 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1088 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _4039 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1089 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
    float _4050 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _1090 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    float _1091 = 1.0 - _961;
    float _1092 = _1088 * _1091;
    float _1093 = _1089 * _1091;
    float _1094 = _1090 * _1091;
    float _1099 = (_1088 + (-0.039999999105930328369140625)) * _961;
    float _1100 = (_1089 + (-0.039999999105930328369140625)) * _961;
    float _1101 = (_1090 + (-0.039999999105930328369140625)) * _961;
    float _1102 = _1099 + 0.039999999105930328369140625;
    float _1104 = _1100 + 0.039999999105930328369140625;
    float _1105 = _1101 + 0.039999999105930328369140625;
    vec4 _1114 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1040, cbSceneParam._m0[86u].y * _1041));
    float _1118 = ((isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0))) * TEXCOORD_5.w) * _1114.x;
    float _1119 = dot(vec3(_953, _954, _955), vec3(_1032, _1033, _1034));
    float _1122 = _1119 * 2.0;
    float _1126 = (_1122 * _953) - _1032;
    float _1127 = (_1122 * _954) - _1033;
    float _1128 = (_1122 * _955) - _1034;
    float _1132 = abs(dot(vec3(_1032, _1033, _1034), vec3(_953, _954, _955)));
    float _4061 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1134 = sqrt(_956);
    float _1147 = exp2((_1134 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1134 * 3.0));
    float _1153 = (1.0 - _1147) * ((_1134 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1154 = _1147 * _1134;
    float _1182 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1186 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1190 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1491;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1216 = fma(_1190, cbModelParam._m0[26u].z, fma(_1186, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1182));
        float _1220 = fma(_1190, cbModelParam._m0[27u].z, fma(_1186, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1182));
        float _1224 = fma(_1190, cbModelParam._m0[28u].z, fma(_1186, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1182));
        float _1249 = _1182 + _953;
        float _1250 = _1186 + _954;
        float _1251 = _1190 + _955;
        float _1261 = fma(_1251, cbModelParam._m0[26u].z, fma(_1250, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1249)) - _1216;
        float _1262 = fma(_1251, cbModelParam._m0[27u].z, fma(_1250, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1249)) - _1220;
        float _1263 = fma(_1251, cbModelParam._m0[28u].z, fma(_1250, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1249)) - _1224;
        float _1267 = inversesqrt(dot(vec3(_1261, _1262, _1263), vec3(_1261, _1262, _1263)));
        float _1280 = ((_1267 * _1261) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1216 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1281 = ((_1267 * _1262) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1220 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1282 = ((_1267 * _1263) / cbModelParam._m0[34u].z) + ((((((_1224 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1285 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1280, _1281, _1282), 0.0);
        vec4 _1292 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1280, _1281, _1282), 0.0);
        vec4 _1299 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1280, _1281, _1282), 0.0);
        vec4 _1306 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1280, _1281, _1282), 0.0);
        float _1319 = exp2((_1285.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1285.x + (-0.5));
        float _1321 = _1319 * (_1285.y + (-0.5));
        float _1322 = _1319 * (_1285.z + (-0.5));
        float _1329 = exp2((_1292.w + (-0.5)) * 20.0) * 2.0;
        float _1330 = _1329 * (_1292.x + (-0.5));
        float _1331 = _1329 * (_1292.y + (-0.5));
        float _1332 = _1329 * (_1292.z + (-0.5));
        float _1339 = exp2((_1299.w + (-0.5)) * 20.0) * 2.0;
        float _1340 = _1339 * (_1299.x + (-0.5));
        float _1341 = _1339 * (_1299.y + (-0.5));
        float _1342 = _1339 * (_1299.z + (-0.5));
        float _1349 = exp2((_1306.w + (-0.5)) * 20.0) * 2.0;
        float _1350 = _1349 * (_1306.x + (-0.5));
        float _1351 = _1349 * (_1306.y + (-0.5));
        float _1352 = _1349 * (_1306.z + (-0.5));
        float _1353 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1354 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1355 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1356 = _1320 * 0.5;
        float _1357 = _1330 * 0.5;
        float _1358 = _1340 * 0.5;
        float _1359 = dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358));
        float _1364 = (_1359 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1359);
        float _1373 = (dot(vec3(_953, _954, _955), vec3(_1364 * _1356, _1364 * _1357, _1364 * _1358)) + 1.0) * 0.5;
        float _4087 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1383 = sqrt(((_1357 * _1357) + (_1356 * _1356)) + (_1358 * _1358)) / (_1353 + 9.9999997473787516355514526367188e-06);
        float _4098 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1384 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1385 = _1384 * 2.0;
        float _1389 = (1.0 - _1384) / (_1384 + 1.0);
        float _4109 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1390 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
        float _1399 = ((((1.0 - _1390) * (_1385 + 2.0)) * exp2(log2(isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0))) * (_1385 + 1.0))) + _1390) * _1353;
        float _1400 = _1321 * 0.5;
        float _1401 = _1331 * 0.5;
        float _1402 = _1341 * 0.5;
        float _1403 = dot(vec3(_1400, _1401, _1402), vec3(_1400, _1401, _1402));
        float _1408 = (_1403 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1403);
        float _1416 = (dot(vec3(_953, _954, _955), vec3(_1408 * _1400, _1408 * _1401, _1408 * _1402)) + 1.0) * 0.5;
        float _4120 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1425 = sqrt(((_1401 * _1401) + (_1400 * _1400)) + (_1402 * _1402)) / (_1354 + 9.9999997473787516355514526367188e-06);
        float _4131 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1426 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1427 = _1426 * 2.0;
        float _1431 = (1.0 - _1426) / (_1426 + 1.0);
        float _4142 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1432 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1441 = ((((1.0 - _1432) * (_1427 + 2.0)) * exp2(log2(isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * (_1427 + 1.0))) + _1432) * _1354;
        float _1442 = _1322 * 0.5;
        float _1443 = _1332 * 0.5;
        float _1444 = _1342 * 0.5;
        float _1445 = dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444));
        float _1450 = (_1445 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1445);
        float _1458 = (dot(vec3(_953, _954, _955), vec3(_1450 * _1442, _1450 * _1443, _1450 * _1444)) + 1.0) * 0.5;
        float _4153 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1467 = sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444)) / (_1355 + 9.9999997473787516355514526367188e-06);
        float _4164 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
        float _1469 = _1468 * 2.0;
        float _1473 = (1.0 - _1468) / (_1468 + 1.0);
        float _4175 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _1483 = ((((1.0 - _1474) * (_1469 + 2.0)) * exp2(log2(isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0))) * (_1469 + 1.0))) + _1474) * _1355;
        _1491 = _1322;
        _1493 = _1321;
        _1494 = _1320;
        _1495 = _1332;
        _1496 = _1331;
        _1497 = _1330;
        _1498 = _1342;
        _1499 = _1341;
        _1500 = _1340;
        _1501 = _1355;
        _1502 = _1354;
        _1503 = _1353;
        _1504 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0)));
        _1505 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0)));
        _1506 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0)));
    }
    else
    {
        _1491 = _1492;
        _1493 = _1492;
        _1494 = _1492;
        _1495 = _1492;
        _1496 = _1492;
        _1497 = _1492;
        _1498 = _1492;
        _1499 = _1492;
        _1500 = _1492;
        _1501 = _1492;
        _1502 = _1492;
        _1503 = _1492;
        _1504 = 0.0;
        _1505 = 0.0;
        _1506 = 0.0;
    }
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1530 = fma(_1190, cbModelParam._m0[30u].z, fma(_1186, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1182));
        float _1534 = fma(_1190, cbModelParam._m0[31u].z, fma(_1186, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1182));
        float _1538 = fma(_1190, cbModelParam._m0[32u].z, fma(_1186, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1182));
        float _1561 = _1182 + _953;
        float _1562 = _1186 + _954;
        float _1563 = _1190 + _955;
        float _1573 = fma(_1563, cbModelParam._m0[30u].z, fma(_1562, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1561)) - _1530;
        float _1574 = fma(_1563, cbModelParam._m0[31u].z, fma(_1562, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1561)) - _1534;
        float _1575 = fma(_1563, cbModelParam._m0[32u].z, fma(_1562, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1561)) - _1538;
        float _1579 = inversesqrt(dot(vec3(_1573, _1574, _1575), vec3(_1573, _1574, _1575)));
        float _1592 = ((_1579 * _1573) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1530 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1593 = ((_1579 * _1574) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1534 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1594 = ((_1579 * _1575) / cbModelParam._m0[35u].z) + ((((((_1538 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1592, _1593, _1594), 0.0);
        vec4 _1603 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1592, _1593, _1594), 0.0);
        vec4 _1610 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1592, _1593, _1594), 0.0);
        vec4 _1617 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1592, _1593, _1594), 0.0);
        float _1629 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1630 = _1629 * (_1596.x + (-0.5));
        float _1631 = _1629 * (_1596.y + (-0.5));
        float _1632 = _1629 * (_1596.z + (-0.5));
        float _1639 = exp2((_1603.w + (-0.5)) * 20.0) * 2.0;
        float _1640 = _1639 * (_1603.x + (-0.5));
        float _1641 = _1639 * (_1603.y + (-0.5));
        float _1642 = _1639 * (_1603.z + (-0.5));
        float _1649 = exp2((_1610.w + (-0.5)) * 20.0) * 2.0;
        float _1650 = _1649 * (_1610.x + (-0.5));
        float _1651 = _1649 * (_1610.y + (-0.5));
        float _1652 = _1649 * (_1610.z + (-0.5));
        float _1659 = exp2((_1617.w + (-0.5)) * 20.0) * 2.0;
        float _1660 = _1659 * (_1617.x + (-0.5));
        float _1661 = _1659 * (_1617.y + (-0.5));
        float _1662 = _1659 * (_1617.z + (-0.5));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1664 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1665 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1666 = _1630 * 0.5;
        float _1667 = _1640 * 0.5;
        float _1668 = _1650 * 0.5;
        float _1669 = dot(vec3(_1666, _1667, _1668), vec3(_1666, _1667, _1668));
        float _1674 = (_1669 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1669);
        float _1682 = (dot(vec3(_953, _954, _955), vec3(_1674 * _1666, _1674 * _1667, _1674 * _1668)) + 1.0) * 0.5;
        float _4216 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1691 = sqrt(((_1667 * _1667) + (_1666 * _1666)) + (_1668 * _1668)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4227 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1692 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1693 = _1692 * 2.0;
        float _1697 = (1.0 - _1692) / (_1692 + 1.0);
        float _4238 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1707 = ((((1.0 - _1698) * (_1693 + 2.0)) * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * (_1693 + 1.0))) + _1698) * _1663;
        float _1708 = _1631 * 0.5;
        float _1709 = _1641 * 0.5;
        float _1710 = _1651 * 0.5;
        float _1711 = dot(vec3(_1708, _1709, _1710), vec3(_1708, _1709, _1710));
        float _1716 = (_1711 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1711);
        float _1724 = (dot(vec3(_953, _954, _955), vec3(_1716 * _1708, _1716 * _1709, _1716 * _1710)) + 1.0) * 0.5;
        float _4249 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1733 = sqrt(((_1709 * _1709) + (_1708 * _1708)) + (_1710 * _1710)) / (_1664 + 9.9999997473787516355514526367188e-06);
        float _4260 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1734 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1735 = _1734 * 2.0;
        float _1739 = (1.0 - _1734) / (_1734 + 1.0);
        float _4271 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1749 = ((((1.0 - _1740) * (_1735 + 2.0)) * exp2(log2(isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) * (_1735 + 1.0))) + _1740) * _1664;
        float _1750 = _1632 * 0.5;
        float _1751 = _1642 * 0.5;
        float _1752 = _1652 * 0.5;
        float _1753 = dot(vec3(_1750, _1751, _1752), vec3(_1750, _1751, _1752));
        float _1758 = (_1753 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1753);
        float _1766 = (dot(vec3(_953, _954, _955), vec3(_1758 * _1750, _1758 * _1751, _1758 * _1752)) + 1.0) * 0.5;
        float _4282 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
        float _1775 = sqrt(((_1751 * _1751) + (_1750 * _1750)) + (_1752 * _1752)) / (_1665 + 9.9999997473787516355514526367188e-06);
        float _4293 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1776 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1777 = _1776 * 2.0;
        float _1781 = (1.0 - _1776) / (_1776 + 1.0);
        float _4304 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
        float _1782 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
        float _1791 = ((((1.0 - _1782) * (_1777 + 2.0)) * exp2(log2(isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * (_1777 + 1.0))) + _1782) * _1665;
        _1799 = _1632;
        _1800 = _1631;
        _1801 = _1630;
        _1802 = _1642;
        _1803 = _1641;
        _1804 = _1640;
        _1805 = _1652;
        _1806 = _1651;
        _1807 = _1650;
        _1808 = _1665;
        _1809 = _1664;
        _1810 = _1663;
        _1811 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)));
        _1812 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
        _1813 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0)));
    }
    else
    {
        _1799 = _1492;
        _1800 = _1492;
        _1801 = _1492;
        _1802 = _1492;
        _1803 = _1492;
        _1804 = _1492;
        _1805 = _1492;
        _1806 = _1492;
        _1807 = _1492;
        _1808 = _1492;
        _1809 = _1492;
        _1810 = _1492;
        _1811 = 0.0;
        _1812 = 0.0;
        _1813 = 0.0;
    }
    float _1823 = (cbModelParam._m0[1u].x * (_1811 - _1504)) + _1504;
    float _1824 = (cbModelParam._m0[1u].x * (_1812 - _1505)) + _1505;
    float _1825 = (cbModelParam._m0[1u].x * (_1813 - _1506)) + _1506;
    float _1846 = fma(_1825, cbSceneParam._m0[89u].z, fma(_1824, cbSceneParam._m0[89u].y, _1823 * cbSceneParam._m0[89u].x));
    float _1849 = fma(_1825, cbSceneParam._m0[90u].z, fma(_1824, cbSceneParam._m0[90u].y, _1823 * cbSceneParam._m0[90u].x));
    float _1852 = fma(_1825, cbSceneParam._m0[91u].z, fma(_1824, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1823));
    float _1867 = _1126 * 0.5;
    float _1868 = _1127 * 0.5;
    float _1869 = _1128 * 0.5;
    float _1870 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1801, _1804, _1807, _1810));
    float _1873 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1800, _1803, _1806, _1809));
    float _1876 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1799, _1802, _1805, _1808));
    float _1910;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1883 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1491, _1495, _1498, _1501));
        float _1887 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1493, _1496, _1499, _1502));
        float _1891 = dot(vec4(_1867, _1868, _1869, 1.0), vec4(_1494, _1497, _1500, _1503));
        float _1898 = dot(vec4(cbModelParam._m0[39u]), vec4(_1867, _1868, _1869, 1.0));
        _1910 = dot(vec3(isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0)), isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0)), isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1898) ? 0.0 : (isnan(0.0) ? _1898 : max(0.0, _1898))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1910 = 1.0;
    }
    float _1921;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1912 = dot(vec4(cbModelParam._m0[40u]), vec4(_1867, _1868, _1869, 1.0));
        _1921 = dot(vec3(isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0)), isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0)), isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1912) ? 0.0 : (isnan(0.0) ? _1912 : max(0.0, _1912))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1921 = 1.0;
    }
    float _1925 = (_1921 * cbModelParam._m0[1u].x) + (_1910 * (1.0 - cbModelParam._m0[1u].x));
    float _1935 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _956);
    float _1936 = isnan(_1935) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1935 : min(cbModelParam._m0[25u].z, _1935));
    float _2017;
    float _2019;
    float _2021;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1984 = fma(_1190, cbModelParam._m0[13u].z, fma(_1186, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1182)) + cbModelParam._m0[13u].w;
        float _1988 = fma(_1190, cbModelParam._m0[14u].z, fma(_1186, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1182)) + cbModelParam._m0[14u].w;
        float _1992 = fma(_1190, cbModelParam._m0[15u].z, fma(_1186, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1182)) + cbModelParam._m0[15u].w;
        float _1995 = fma(_1128, cbModelParam._m0[13u].z, fma(_1127, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1126));
        float _1998 = fma(_1128, cbModelParam._m0[14u].z, fma(_1127, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1126));
        float _2001 = fma(_1128, cbModelParam._m0[15u].z, fma(_1127, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1126));
        float _2029;
        if (_1995 > 0.0)
        {
            _2029 = abs((1.0 - _1984) / _1995);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1995 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1984 + 1.0) / _1995);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2029 = frontier_phi_14_12_ladder;
        }
        float _2253;
        if (_1998 > 0.0)
        {
            _2253 = abs((1.0 - _1988) / _1998);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1998 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1988 + 1.0) / _1998);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2253 = frontier_phi_23_19_ladder;
        }
        float _2510;
        if (_2001 > 0.0)
        {
            _2510 = abs((1.0 - _1992) / _2001);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2001 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1992 + 1.0) / _2001);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2510 = frontier_phi_35_30_ladder;
        }
        float _2512 = isnan(_2253) ? _2029 : (isnan(_2029) ? _2253 : min(_2029, _2253));
        float _2513 = isnan(_2510) ? _2512 : (isnan(_2512) ? _2510 : min(_2512, _2510));
        float _2517 = (_2513 * _1995) + _1984;
        float _2518 = (_2513 * _1998) + _1988;
        float _2519 = (_2513 * _2001) + _1992;
        float _2520 = _2513 * 9.9999997473787516355514526367188e-05;
        float _2522 = (-1.0) - _2520;
        float _2524 = _2520 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2519 > _2524) || ((_2519 < _2522) || ((_2518 > _2524) || ((_2518 < _2522) || ((_2517 < _2522) || (_2517 > _2524))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2647 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2519, cbModelParam._m0[9u].z, fma(_2518, cbModelParam._m0[9u].y, _2517 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2519, cbModelParam._m0[10u].z, fma(_2518, cbModelParam._m0[10u].y, _2517 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2519, cbModelParam._m0[11u].z, fma(_2518, cbModelParam._m0[11u].y, _2517 * cbModelParam._m0[11u].x))), _1936);
            frontier_phi_13_35_ladder = _2647.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2647.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2647.x * cbModelParam._m0[1u].y;
        }
        _2017 = frontier_phi_13_35_ladder_2;
        _2019 = frontier_phi_13_35_ladder_1;
        _2021 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2005 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1126, _1127, _1128), _1936);
        _2017 = _2005.x * cbModelParam._m0[1u].y;
        _2019 = _2005.y * cbModelParam._m0[1u].y;
        _2021 = _2005.z * cbModelParam._m0[1u].y;
    }
    float _2025 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _956);
    float _2026 = isnan(_2025) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2025 : min(cbModelParam._m0[25u].w, _2025));
    float _2116;
    float _2118;
    float _2120;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2080 = fma(_1190, cbModelParam._m0[21u].z, fma(_1186, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1182)) + cbModelParam._m0[21u].w;
        float _2084 = fma(_1190, cbModelParam._m0[22u].z, fma(_1186, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1182)) + cbModelParam._m0[22u].w;
        float _2088 = fma(_1190, cbModelParam._m0[23u].z, fma(_1186, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1182)) + cbModelParam._m0[23u].w;
        float _2091 = fma(_1128, cbModelParam._m0[21u].z, fma(_1127, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1126));
        float _2094 = fma(_1128, cbModelParam._m0[22u].z, fma(_1127, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1126));
        float _2097 = fma(_1128, cbModelParam._m0[23u].z, fma(_1127, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1126));
        float _2258;
        if (_2091 > 0.0)
        {
            _2258 = abs((1.0 - _2080) / _2091);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2091 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2080 + 1.0) / _2091);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2258 = frontier_phi_25_21_ladder;
        }
        float _2537;
        if (_2094 > 0.0)
        {
            _2537 = abs((1.0 - _2084) / _2094);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2094 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2084 + 1.0) / _2094);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2537 = frontier_phi_37_32_ladder;
        }
        float _2750;
        if (_2097 > 0.0)
        {
            _2750 = abs((1.0 - _2088) / _2097);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2097 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2088 + 1.0) / _2097);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2750 = frontier_phi_46_43_ladder;
        }
        float _2752 = isnan(_2537) ? _2258 : (isnan(_2258) ? _2537 : min(_2258, _2537));
        float _2753 = isnan(_2750) ? _2752 : (isnan(_2752) ? _2750 : min(_2752, _2750));
        float _2757 = (_2753 * _2091) + _2080;
        float _2758 = (_2753 * _2094) + _2084;
        float _2759 = (_2753 * _2097) + _2088;
        float _2760 = _2753 * 9.9999997473787516355514526367188e-05;
        float _2761 = (-1.0) - _2760;
        float _2763 = _2760 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2759 > _2763) || ((_2759 < _2761) || ((_2758 > _2763) || ((_2758 < _2761) || ((_2757 < _2761) || (_2757 > _2763))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2958 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2759, cbModelParam._m0[17u].z, fma(_2758, cbModelParam._m0[17u].y, _2757 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2759, cbModelParam._m0[18u].z, fma(_2758, cbModelParam._m0[18u].y, _2757 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2759, cbModelParam._m0[19u].z, fma(_2758, cbModelParam._m0[19u].y, _2757 * cbModelParam._m0[19u].x))), _2026);
            frontier_phi_22_46_ladder = _2958.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2958.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2958.x * cbModelParam._m0[1u].z;
        }
        _2116 = frontier_phi_22_46_ladder_2;
        _2118 = frontier_phi_22_46_ladder_1;
        _2120 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2100 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1126, _1127, _1128), _2026);
        _2116 = _2100.x * cbModelParam._m0[1u].z;
        _2118 = _2100.y * cbModelParam._m0[1u].z;
        _2120 = _2100.z * cbModelParam._m0[1u].z;
    }
    float _2133 = (((_1153 * _1102) + _1154) * _1118) * ((cbModelParam._m0[1u].w * (_2116 - _2017)) + _2017);
    float _2135 = (((_1153 * _1104) + _1154) * _1118) * ((cbModelParam._m0[1u].w * (_2118 - _2019)) + _2019);
    float _2137 = (((_1153 * _1105) + _1154) * _1118) * ((cbModelParam._m0[1u].w * (_2120 - _2021)) + _2021);
    float _2140 = fma(_2137, cbSceneParam._m0[89u].z, fma(_2135, cbSceneParam._m0[89u].y, _2133 * cbSceneParam._m0[89u].x));
    float _2143 = fma(_2137, cbSceneParam._m0[90u].z, fma(_2135, cbSceneParam._m0[90u].y, _2133 * cbSceneParam._m0[90u].x));
    float _2146 = fma(_2137, cbSceneParam._m0[91u].z, fma(_2135, cbSceneParam._m0[91u].y, _2133 * cbSceneParam._m0[91u].x));
    vec4 _2154 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1040, _1041));
    float _2156 = _2154.w;
    float _2168 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2156);
    float _2169 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2156);
    float _2170 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2156);
    uvec4 _2174 = floatBitsToUint(cbInstanceData._m0[_289 + 5u]);
    uint _2176 = _2174.x * 14u;
    uint _2177 = _2176 + 13u;
    float _2184 = _1118 + (-1.0);
    float _2189 = (cbLight._m0[_2177].x * _2184) + 1.0;
    float _2190 = (cbLight._m0[_2177].y * _2184) + 1.0;
    float _2191 = (cbLight._m0[_2177].z * _2184) + 1.0;
    float _2192 = (cbLight._m0[_2177].w * _2184) + 1.0;
    uint _2193 = _2176 + 5u;
    float _2199 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2203 = _2176 + 4u;
    float _2212 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
    uint _2216 = _2176 | 1u;
    float _2227 = dot(vec3(cbLight._m0[_2176].xyz), vec3(_953, _954, _955));
    float _2230 = dot(vec3(cbLight._m0[_2216].xyz), vec3(_953, _954, _955));
    float _4440 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
    float _4451 = isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0));
    float _2235 = (isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0))) * 0.3183098733425140380859375;
    float _2237 = (isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * 0.3183098733425140380859375;
    float _2244 = ((cbLight._m0[_2193].x * _2199) * _2237) + (((cbLight._m0[_2203].x * _2168) * _2212) * _2235);
    float _2245 = ((_2199 * cbLight._m0[_2193].y) * _2237) + (((cbLight._m0[_2203].y * _2169) * _2212) * _2235);
    float _2246 = ((_2199 * cbLight._m0[_2193].z) * _2237) + (((cbLight._m0[_2203].z * _2170) * _2212) * _2235);
    uvec4 _2250 = floatBitsToUint(cbLight._m0[_2176 + 12u]);
    bool _2252 = _2250.x == 0u;
    float _2263;
    float _2265;
    float _2267;
    if (_2252)
    {
        _2263 = _2244;
        _2265 = _2245;
        _2267 = _2246;
    }
    else
    {
        uint _2271 = _2176 + 6u;
        float _2287 = (dot(vec3(cbLight._m0[_2176 + 2u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2288 = _2287 * _2287;
        float _4462 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
        float _2289 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _2290 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
        _2263 = (((cbLight._m0[_2271].x * 0.3183098733425140380859375) * _2289) * _2290) + _2244;
        _2265 = (((cbLight._m0[_2271].y * 0.3183098733425140380859375) * _2289) * _2290) + _2245;
        _2267 = (((cbLight._m0[_2271].z * 0.3183098733425140380859375) * _2289) * _2290) + _2246;
    }
    bool _2270 = _2250.y == 0u;
    float _2308;
    float _2310;
    float _2312;
    if (_2270)
    {
        _2308 = _2263;
        _2310 = _2265;
        _2312 = _2267;
    }
    else
    {
        uint _2481 = _2176 + 7u;
        float _2497 = (dot(vec3(cbLight._m0[_2176 + 3u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2498 = _2497 * _2497;
        float _4478 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
        float _2499 = isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0));
        float _2500 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2308 = (((cbLight._m0[_2481].x * 0.3183098733425140380859375) * _2499) * _2500) + _2263;
        _2310 = (((cbLight._m0[_2481].y * 0.3183098733425140380859375) * _2499) * _2500) + _2265;
        _2312 = (((cbLight._m0[_2481].z * 0.3183098733425140380859375) * _2499) * _2500) + _2267;
    }
    uint _2315 = _2176 + 8u;
    float _2328 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2176].w)) * _956) * 0.949999988079071044921875);
    float _2329 = _2328 * _2328;
    float _2330 = cbLight._m0[_2176].x + _1032;
    float _2331 = cbLight._m0[_2176].y + _1033;
    float _2332 = cbLight._m0[_2176].z + _1034;
    float _2336 = inversesqrt(dot(vec3(_2330, _2331, _2332), vec3(_2330, _2331, _2332)));
    float _2337 = _2336 * _2330;
    float _2338 = _2336 * _2331;
    float _2339 = _2336 * _2332;
    float _2340 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2176].xyz));
    float _4494 = isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0));
    float _2343 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
    float _4505 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _2344 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
    float _2345 = dot(vec3(_953, _954, _955), vec3(_2337, _2338, _2339));
    float _4516 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
    float _2348 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
    float _2349 = dot(vec3(cbLight._m0[_2176].xyz), vec3(_2337, _2338, _2339));
    float _4527 = isnan(0.0) ? _2349 : (isnan(_2349) ? 0.0 : max(_2349, 0.0));
    float _2353 = _2329 * _2329;
    float _2357 = ((_2348 * _2348) * (_2353 + (-1.0))) + 1.0;
    float _2365 = exp2(log2(1.0 - (isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0)))) * 5.0);
    float _2366 = 0.959999978542327880859375 - _1099;
    float _2368 = 0.959999978542327880859375 - _1100;
    float _2369 = 0.959999978542327880859375 - _1101;
    float _2376 = 1.0 - _2329;
    float _2387 = (0.5 / (((_2344 * ((_2343 * _2376) + _2329)) + 9.9999999392252902907785028219223e-09) + (((_2344 * _2376) + _2329) * _2343))) * _2343;
    float _4538 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    float _2389 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * (_2353 / ((_2357 * _2357) * 3.141590118408203125));
    uint _2403 = _2176 + 9u;
    float _2414 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2216].w)) * _956) * 0.949999988079071044921875);
    float _2415 = _2414 * _2414;
    float _2416 = cbLight._m0[_2216].x + _1032;
    float _2417 = cbLight._m0[_2216].y + _1033;
    float _2418 = cbLight._m0[_2216].z + _1034;
    float _2422 = inversesqrt(dot(vec3(_2416, _2417, _2418), vec3(_2416, _2417, _2418)));
    float _2423 = _2422 * _2416;
    float _2424 = _2422 * _2417;
    float _2425 = _2422 * _2418;
    float _2426 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2216].xyz));
    float _4549 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
    float _2429 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
    float _2430 = dot(vec3(_953, _954, _955), vec3(_2423, _2424, _2425));
    float _4560 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _2433 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
    float _2434 = dot(vec3(cbLight._m0[_2216].xyz), vec3(_2423, _2424, _2425));
    float _4571 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
    float _2438 = _2415 * _2415;
    float _2442 = ((_2433 * _2433) * (_2438 + (-1.0))) + 1.0;
    float _2449 = exp2(log2(1.0 - (isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0)))) * 5.0);
    float _2456 = 1.0 - _2415;
    float _2466 = (0.5 / (((_2344 * ((_2429 * _2456) + _2415)) + 9.9999999392252902907785028219223e-09) + (((_2344 * _2456) + _2415) * _2429))) * _2429;
    float _4582 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
    float _2468 = (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0))) * (_2438 / ((_2442 * _2442) * 3.141590118408203125));
    float _2478 = (((((_2449 * _2366) + _1102) * cbLight._m0[_2403].x) * _2468) * _2199) + ((((cbLight._m0[_2315].x * _2168) * ((_2365 * _2366) + _1102)) * _2389) * _2212);
    float _2479 = (((((_2449 * _2368) + _1104) * cbLight._m0[_2403].y) * _2468) * _2199) + ((((cbLight._m0[_2315].y * _2169) * ((_2365 * _2368) + _1104)) * _2389) * _2212);
    float _2480 = (((((_2449 * _2369) + _1105) * cbLight._m0[_2403].z) * _2468) * _2199) + ((((cbLight._m0[_2315].z * _2170) * ((_2365 * _2369) + _1105)) * _2389) * _2212);
    float _2542;
    float _2544;
    float _2546;
    if (_2252)
    {
        _2542 = _2478;
        _2544 = _2479;
        _2546 = _2480;
    }
    else
    {
        uint _2548 = _2176 + 2u;
        uint _2552 = _2176 + 10u;
        float _2566 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2548].w)) * _956) * 0.949999988079071044921875);
        float _2567 = _2566 * _2566;
        float _2568 = cbLight._m0[_2548].x + _1032;
        float _2569 = cbLight._m0[_2548].y + _1033;
        float _2570 = cbLight._m0[_2548].z + _1034;
        float _2574 = inversesqrt(dot(vec3(_2568, _2569, _2570), vec3(_2568, _2569, _2570)));
        float _2575 = _2574 * _2568;
        float _2576 = _2574 * _2569;
        float _2577 = _2574 * _2570;
        float _2578 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2548].xyz));
        float _4593 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
        float _2581 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
        float _2582 = dot(vec3(_953, _954, _955), vec3(_2575, _2576, _2577));
        float _4604 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
        float _2585 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
        float _2586 = dot(vec3(cbLight._m0[_2548].xyz), vec3(_2575, _2576, _2577));
        float _4615 = isnan(0.0) ? _2586 : (isnan(_2586) ? 0.0 : max(_2586, 0.0));
        float _2590 = _2567 * _2567;
        float _2594 = ((_2585 * _2585) * (_2590 + (-1.0))) + 1.0;
        float _2601 = exp2(log2(1.0 - (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0)))) * 5.0);
        float _2608 = 1.0 - _2567;
        float _2618 = (0.5 / (((_2344 * ((_2581 * _2608) + _2567)) + 9.9999999392252902907785028219223e-09) + (((_2344 * _2608) + _2567) * _2581))) * _2581;
        float _4626 = isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0));
        float _2620 = (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))) * (_2590 / ((_2594 * _2594) * 3.141590118408203125));
        float _2621 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
        _2542 = (((((_2601 * _2366) + _1102) * cbLight._m0[_2552].x) * _2620) * _2621) + _2478;
        _2544 = (((((_2601 * _2368) + _1104) * cbLight._m0[_2552].y) * _2620) * _2621) + _2479;
        _2546 = (((((_2601 * _2369) + _1105) * cbLight._m0[_2552].z) * _2620) * _2621) + _2480;
    }
    float _2656;
    float _2658;
    float _2660;
    if (_2270)
    {
        _2656 = _2542;
        _2658 = _2544;
        _2660 = _2546;
    }
    else
    {
        uint _2667 = _2176 + 3u;
        uint _2671 = _2176 + 11u;
        float _2685 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2667].w)) * _956) * 0.949999988079071044921875);
        float _2686 = _2685 * _2685;
        float _2687 = cbLight._m0[_2667].x + _1032;
        float _2688 = cbLight._m0[_2667].y + _1033;
        float _2689 = cbLight._m0[_2667].z + _1034;
        float _2693 = inversesqrt(dot(vec3(_2687, _2688, _2689), vec3(_2687, _2688, _2689)));
        float _2694 = _2693 * _2687;
        float _2695 = _2693 * _2688;
        float _2696 = _2693 * _2689;
        float _2697 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2667].xyz));
        float _4642 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
        float _2700 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
        float _2701 = dot(vec3(_953, _954, _955), vec3(_2694, _2695, _2696));
        float _4653 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
        float _2704 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
        float _2705 = dot(vec3(cbLight._m0[_2667].xyz), vec3(_2694, _2695, _2696));
        float _4664 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
        float _2709 = _2686 * _2686;
        float _2713 = ((_2704 * _2704) * (_2709 + (-1.0))) + 1.0;
        float _2720 = exp2(log2(1.0 - (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0)))) * 5.0);
        float _2727 = 1.0 - _2686;
        float _2737 = (0.5 / (((_2344 * ((_2700 * _2727) + _2686)) + 9.9999999392252902907785028219223e-09) + (((_2344 * _2727) + _2686) * _2700))) * _2700;
        float _4675 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
        float _2739 = (isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0))) * (_2709 / ((_2713 * _2713) * 3.141590118408203125));
        float _2740 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2656 = (((((_2720 * _2366) + _1102) * cbLight._m0[_2671].x) * _2739) * _2740) + _2542;
        _2658 = (((((_2720 * _2368) + _1104) * cbLight._m0[_2671].y) * _2739) * _2740) + _2544;
        _2660 = (((((_2720 * _2369) + _1105) * cbLight._m0[_2671].z) * _2739) * _2740) + _2546;
    }
    float _2875;
    float _2877;
    float _2879;
    float _2881;
    float _2883;
    float _2885;
    if (_2174.y == 0u)
    {
        float _2815 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2816 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2815;
        float _2817 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2815;
        float _2818 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2815;
        uvec4 _2830 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2831 = _2830.x;
        uint _2842 = uint((float(_2830.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1041) / _2831))) + floor(float(uint(cbSceneParam._m0[85u].x * _1040) / _2831)));
        float _2852 = (log2(_2818 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2853 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        uint _2856 = uint(isnan(14.0) ? _2853 : (isnan(_2853) ? 14.0 : min(_2853, 14.0)));
        uvec4 _2861 = texelFetch(g_lightClusterGridBuffer, int(((_2856 << 2u) + (_2842 << 6u)) >> 2u));
        uint _2862 = _2861.x;
        uint _2863 = _2830.z;
        float _2963;
        float _2965;
        float _2967;
        float _2969;
        float _2971;
        float _2973;
        if (((((1u << ((_2863 >> 4u) & 15u)) + 4294967295u) & _2862) == 0u) || ((_2863 & 240u) == 0u))
        {
            _2963 = 0.0;
            _2965 = 0.0;
            _2967 = 0.0;
            _2969 = 0.0;
            _2971 = 0.0;
            _2973 = 0.0;
        }
        else
        {
            float _2964;
            float _2966;
            float _2968;
            float _2970;
            float _2972;
            float _2974;
            float _3108 = 0.0;
            float _3109 = 0.0;
            float _3110 = 0.0;
            float _3111 = 0.0;
            float _3112 = 0.0;
            float _3113 = 0.0;
            uint _3114 = 0u;
            uint _3123;
            bool _3124;
            for (;;)
            {
                _3123 = texelFetch(g_lightClassification, int((((_2856 << 5u) + (_2842 << 9u)) + (_3114 << 2u)) >> 2u)).x;
                _3124 = _3123 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3124)
                {
                    frontier_phi_61_pred = _3108;
                    frontier_phi_61_pred_1 = _3113;
                    frontier_phi_61_pred_2 = _3112;
                    frontier_phi_61_pred_3 = _3111;
                    frontier_phi_61_pred_4 = _3110;
                    frontier_phi_61_pred_5 = _3109;
                }
                else
                {
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    float _3237;
                    uint _3238;
                    _3232 = _3108;
                    _3233 = _3109;
                    _3234 = _3110;
                    _3235 = _3111;
                    _3236 = _3112;
                    _3237 = _3113;
                    _3238 = _3123;
                    float _3164;
                    float _3165;
                    float _3166;
                    float _3167;
                    float _3168;
                    float _3169;
                    for (;;)
                    {
                        uint _3242 = uint(findLSB(_3238)) + (_3114 << 5u);
                        uint _3239 = (_3238 + 4294967295u) & _3238;
                        uint _3244 = _3242 * 48u;
                        vec4 _3258 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3244)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3244 + 3u)).x));
                        uint _3264 = (_3242 * 48u) + 4u;
                        vec4 _3277 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3264)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 3u)).x));
                        uint _3283 = (_3242 * 48u) + 8u;
                        vec3 _3294 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3283)).x, texelFetch(g_PointLightRenderingBuffer, int(_3283 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3283 + 2u)).x));
                        float _3298 = _3258.x - _2816;
                        float _3299 = _3258.y - _2817;
                        float _3300 = _3258.z - _2818;
                        float _3301 = dot(vec3(_3298, _3299, _3300), vec3(_3298, _3299, _3300));
                        float _3304 = inversesqrt(_3301);
                        float _3305 = _3304 * _3298;
                        float _3306 = _3304 * _3299;
                        float _3307 = _3304 * _3300;
                        float _3308 = dot(vec3(_1059, _1062, _1065), vec3(_3305, _3306, _3307));
                        float _3313 = 1.0 - (_3301 * _3258.w);
                        float _4701 = isnan(0.0) ? _3313 : (isnan(_3313) ? 0.0 : max(_3313, 0.0));
                        float _3314 = isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0));
                        float _3315 = sqrt(_3301) * _3277.w;
                        float _3318 = 1.39999997615814208984375 / (_3315 + 1.39999997615814208984375);
                        float _3319 = _3318 * _3318;
                        float _3322 = ((1.0 - _3319) * _3308) + _3319;
                        float _3325 = _3315 * _3315;
                        float _3329 = ((isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0))) * _3314) / ((_3325 * 0.699999988079071044921875) + 1.0);
                        float _3333 = (-0.0) - _2816;
                        float _3334 = (-0.0) - _2817;
                        float _3335 = (-0.0) - _2818;
                        float _3339 = inversesqrt(dot(vec3(_3333, _3334, _3335), vec3(_3333, _3334, _3335)));
                        float _3340 = _3339 * _3333;
                        float _3341 = _3339 * _3334;
                        float _3342 = _3339 * _3335;
                        float _3350 = exp2(log2(1.0 / ((_3325 * 3.5) + 5.0)) * 0.25);
                        float _3351 = 1.0 - _1134;
                        float _3358 = sqrt(1.0 - ((1.0 - (_3351 * _3351)) * (1.0 - (_3350 * _3350))));
                        float _3359 = _3358 * _3358;
                        float _3360 = _3359 * _3359;
                        float _3361 = _3340 + _3305;
                        float _3362 = _3341 + _3306;
                        float _3363 = _3342 + _3307;
                        float _3367 = inversesqrt(dot(vec3(_3361, _3362, _3363), vec3(_3361, _3362, _3363)));
                        float _3371 = dot(vec3(_1059, _1062, _1065), vec3(_3340, _3341, _3342));
                        float _4717 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0));
                        float _3374 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
                        float _3375 = dot(vec3(_1059, _1062, _1065), vec3(_3367 * _3361, _3367 * _3362, _3367 * _3363));
                        float _4728 = isnan(0.0) ? _3375 : (isnan(_3375) ? 0.0 : max(_3375, 0.0));
                        float _3378 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
                        float _3382 = ((_3378 * _3378) * (_3360 + (-1.0))) + 1.0;
                        float _3383 = _3318 * _3359;
                        float _3384 = _3383 * _3383;
                        float _3387 = ((1.0 - _3384) * _3308) + _3384;
                        float _4739 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0));
                        float _3388 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
                        float _3389 = 1.0 - _3359;
                        float _3399 = (0.5 / (((_3388 * ((_3374 * _3389) + _3359)) + 9.9999999392252902907785028219223e-09) + (((_3388 * _3389) + _3359) * _3374))) * _3388;
                        float _4750 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                        float _3410 = (((_3360 * 3.1415927410125732421875) * (isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0)))) / ((_3382 * _3382) * ((_3325 * 2.1991131305694580078125) + 3.141590118408203125))) * _3314;
                        _3167 = (_3329 * _3277.x) + _3235;
                        _3168 = (_3329 * _3277.y) + _3236;
                        _3169 = (_3329 * _3277.z) + _3237;
                        _3164 = (_3410 * _3294.x) + _3232;
                        _3165 = (_3410 * _3294.y) + _3233;
                        _3166 = (_3410 * _3294.z) + _3234;
                        if (_3239 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3232 = _3164;
                            _3233 = _3165;
                            _3234 = _3166;
                            _3235 = _3167;
                            _3236 = _3168;
                            _3237 = _3169;
                            _3238 = _3239;
                        }
                    }
                    frontier_phi_61_pred = _3164;
                    frontier_phi_61_pred_1 = _3169;
                    frontier_phi_61_pred_2 = _3168;
                    frontier_phi_61_pred_3 = _3167;
                    frontier_phi_61_pred_4 = _3166;
                    frontier_phi_61_pred_5 = _3165;
                }
                _2964 = frontier_phi_61_pred;
                _2974 = frontier_phi_61_pred_1;
                _2972 = frontier_phi_61_pred_2;
                _2970 = frontier_phi_61_pred_3;
                _2968 = frontier_phi_61_pred_4;
                _2966 = frontier_phi_61_pred_5;
                uint _3115 = _3114 + 1u;
                if (_3115 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3108 = _2964;
                    _3109 = _2966;
                    _3110 = _2968;
                    _3111 = _2970;
                    _3112 = _2972;
                    _3113 = _2974;
                    _3114 = _3115;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2963 = _2964;
            _2965 = _2966;
            _2967 = _2968;
            _2969 = _2970;
            _2971 = _2972;
            _2973 = _2974;
        }
        uvec4 _2977 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2978 = _2977.z;
        uint _2980 = (_2978 >> 8u) & 15u;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        float _3084;
        float _3086;
        if (((4294967295u << _2980) & _2862) == 0u)
        {
            _3076 = _2963;
            _3078 = _2965;
            _3080 = _2967;
            _3082 = _2969;
            _3084 = _2971;
            _3086 = _2973;
        }
        else
        {
            float _3101 = inversesqrt(dot(vec3(_2816, _2817, _2818), vec3(_2816, _2817, _2818)));
            float _3102 = _3101 * _2816;
            float _3103 = _3101 * _2817;
            float _3104 = _3101 * _2818;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2980 < ((_2978 >> 12u) & 15u))
            {
                float _3077;
                float _3079;
                float _3081;
                float _3083;
                float _3085;
                float _3087;
                float _3215 = _2963;
                float _3216 = _2965;
                float _3217 = _2967;
                float _3218 = _2969;
                float _3219 = _2971;
                float _3220 = _2973;
                uint _3221 = _2980;
                uint _3230;
                bool _3231;
                for (;;)
                {
                    _3230 = texelFetch(g_lightClassification, int((((_2856 << 5u) + (_2842 << 9u)) + (_3221 << 2u)) >> 2u)).x;
                    _3231 = _3230 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3231)
                    {
                        frontier_phi_67_pred = _3218;
                        frontier_phi_67_pred_1 = _3219;
                        frontier_phi_67_pred_2 = _3220;
                        frontier_phi_67_pred_3 = _3217;
                        frontier_phi_67_pred_4 = _3216;
                        frontier_phi_67_pred_5 = _3215;
                    }
                    else
                    {
                        float _3415;
                        float _3416;
                        float _3417;
                        float _3418;
                        float _3419;
                        float _3420;
                        float _3708;
                        float _3709;
                        float _3710;
                        float _3711;
                        float _3712;
                        float _3713;
                        float _3428 = _3215;
                        float _3429 = _3216;
                        float _3430 = _3217;
                        float _3431 = _3218;
                        float _3432 = _3219;
                        float _3433 = _3220;
                        uint _3434 = _3230;
                        uint _3435;
                        vec4 _3460;
                        float _3461;
                        vec4 _3476;
                        vec3 _3488;
                        vec4 _3503;
                        vec4 _3518;
                        float _3564;
                        bool _3565;
                        for (;;)
                        {
                            uint _3445 = ((_3221 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3434));
                            _3435 = (_3434 + 4294967295u) & _3434;
                            uint _3447 = _3445 * 40u;
                            _3460 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3447)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 3u)).x));
                            _3461 = _3460.w;
                            uint _3463 = (_3445 * 40u) + 4u;
                            _3476 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 3u)).x));
                            uint _3478 = (_3445 * 40u) + 8u;
                            _3488 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3478)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 2u)).x));
                            uint _3490 = (_3445 * 40u) + 16u;
                            _3503 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3490)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 3u)).x));
                            uint _3505 = (_3445 * 40u) + 20u;
                            _3518 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3505)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 3u)).x));
                            uint _3520 = (_3445 * 40u) + 24u;
                            vec4 _3533 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3520)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3520 + 3u)).x));
                            uint _3539 = (_3445 * 40u) + 28u;
                            vec4 _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            _3564 = fma(_2818, _3552.z, fma(_2817, _3552.y, _3552.x * _2816)) + _3552.w;
                            _3565 = !((fma(_2818, _3533.z, fma(_2817, _3533.y, _3533.x * _2816)) + _3533.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3565)
                            {
                                float _3592 = _3460.x - _2816;
                                float _3593 = _3460.y - _2817;
                                float _3594 = _3460.z - _2818;
                                float _3595 = dot(vec3(_3592, _3593, _3594), vec3(_3592, _3593, _3594));
                                float _3598 = inversesqrt(_3595);
                                float _3599 = _3598 * _3592;
                                float _3600 = _3598 * _3593;
                                float _3601 = _3598 * _3594;
                                float _3605 = 1.0 - (_3595 / (_3461 * _3461));
                                float _4761 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                                float _3606 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
                                float _3610 = sqrt(_3595) * _3476.w;
                                float _3612 = 1.39999997615814208984375 / (_3610 + 1.39999997615814208984375);
                                float _3613 = _3612 * _3612;
                                float _3616 = ((1.0 - _3613) * dot(vec3(_3599, _3600, _3601), vec3(_1059, _1062, _1065))) + _3613;
                                float _3619 = _3610 * _3610;
                                float _3623 = (fma(_2818, _3503.z, fma(_2817, _3503.y, _3503.x * _2816)) + _3503.w) / _3564;
                                float _3624 = (fma(_2818, _3518.z, fma(_2817, _3518.y, _3518.x * _2816)) + _3518.w) / _3564;
                                float _3628 = 1.0 - dot(vec2(_3623, _3624), vec2(_3623, _3624));
                                float _4777 = isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0));
                                float _3629 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
                                float _3630 = _3629 * (((isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0))) * _3606) / ((_3619 * 0.699999988079071044921875) + 1.0));
                                float _3642 = exp2(log2(1.0 / ((_3619 * 3.5) + 5.0)) * 0.25);
                                float _3643 = 1.0 - _1134;
                                float _3650 = sqrt(1.0 - ((1.0 - (_3643 * _3643)) * (1.0 - (_3642 * _3642))));
                                float _3651 = _3650 * _3650;
                                float _3652 = _3651 * _3651;
                                float _3653 = _3599 - _3102;
                                float _3654 = _3600 - _3103;
                                float _3655 = _3601 - _3104;
                                float _3659 = inversesqrt(dot(vec3(_3653, _3654, _3655), vec3(_3653, _3654, _3655)));
                                float _3663 = dot(vec3(_1059, _1062, _1065), vec3((-0.0) - _3102, (-0.0) - _3103, (-0.0) - _3104));
                                float _4788 = isnan(0.0) ? _3663 : (isnan(_3663) ? 0.0 : max(_3663, 0.0));
                                float _3666 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
                                float _3667 = dot(vec3(_1059, _1062, _1065), vec3(_3659 * _3653, _3659 * _3654, _3659 * _3655));
                                float _4799 = isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0));
                                float _3670 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
                                float _3674 = ((_3670 * _3670) * (_3652 + (-1.0))) + 1.0;
                                float _3675 = _3612 * _3651;
                                float _3676 = _3675 * _3675;
                                float _3682 = ((1.0 - _3676) * dot(vec3(_1059, _1062, _1065), vec3(_3599, _3600, _3601))) + _3676;
                                float _4810 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3683 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
                                float _3684 = 1.0 - _3651;
                                float _3694 = (0.5 / (((_3683 * ((_3666 * _3684) + _3651)) + 9.9999999392252902907785028219223e-09) + (((_3683 * _3684) + _3651) * _3666))) * _3683;
                                float _4821 = isnan(0.0) ? _3694 : (isnan(_3694) ? 0.0 : max(_3694, 0.0));
                                float _3704 = (_3629 * _3606) * (((_3652 * 3.1415927410125732421875) * (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0)))) / ((_3674 * _3674) * ((_3619 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3704 * _3488.x;
                                frontier_phi_73_pred_1 = _3704 * _3488.y;
                                frontier_phi_73_pred_2 = _3630 * _3476.z;
                                frontier_phi_73_pred_3 = _3630 * _3476.y;
                                frontier_phi_73_pred_4 = _3630 * _3476.x;
                                frontier_phi_73_pred_5 = _3704 * _3488.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3708 = frontier_phi_73_pred;
                            _3709 = frontier_phi_73_pred_1;
                            _3713 = frontier_phi_73_pred_2;
                            _3712 = frontier_phi_73_pred_3;
                            _3711 = frontier_phi_73_pred_4;
                            _3710 = frontier_phi_73_pred_5;
                            _3418 = _3711 + _3431;
                            _3419 = _3712 + _3432;
                            _3420 = _3713 + _3433;
                            _3415 = _3708 + _3428;
                            _3416 = _3709 + _3429;
                            _3417 = _3710 + _3430;
                            if (_3435 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3428 = _3415;
                                _3429 = _3416;
                                _3430 = _3417;
                                _3431 = _3418;
                                _3432 = _3419;
                                _3433 = _3420;
                                _3434 = _3435;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3418;
                        frontier_phi_67_pred_1 = _3419;
                        frontier_phi_67_pred_2 = _3420;
                        frontier_phi_67_pred_3 = _3417;
                        frontier_phi_67_pred_4 = _3416;
                        frontier_phi_67_pred_5 = _3415;
                    }
                    _3083 = frontier_phi_67_pred;
                    _3085 = frontier_phi_67_pred_1;
                    _3087 = frontier_phi_67_pred_2;
                    _3081 = frontier_phi_67_pred_3;
                    _3079 = frontier_phi_67_pred_4;
                    _3077 = frontier_phi_67_pred_5;
                    uint _3222 = _3221 + 1u;
                    if (_3222 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3215 = _3077;
                        _3216 = _3079;
                        _3217 = _3081;
                        _3218 = _3083;
                        _3219 = _3085;
                        _3220 = _3087;
                        _3221 = _3222;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3085;
                frontier_phi_55_56_ladder_1 = _3087;
                frontier_phi_55_56_ladder_2 = _3083;
                frontier_phi_55_56_ladder_3 = _3081;
                frontier_phi_55_56_ladder_4 = _3079;
                frontier_phi_55_56_ladder_5 = _3077;
            }
            else
            {
                frontier_phi_55_56_ladder = _2971;
                frontier_phi_55_56_ladder_1 = _2973;
                frontier_phi_55_56_ladder_2 = _2969;
                frontier_phi_55_56_ladder_3 = _2967;
                frontier_phi_55_56_ladder_4 = _2965;
                frontier_phi_55_56_ladder_5 = _2963;
            }
            _3076 = frontier_phi_55_56_ladder_5;
            _3078 = frontier_phi_55_56_ladder_4;
            _3080 = frontier_phi_55_56_ladder_3;
            _3082 = frontier_phi_55_56_ladder_2;
            _3084 = frontier_phi_55_56_ladder;
            _3086 = frontier_phi_55_56_ladder_1;
        }
        float _3091 = isnan(1.0) ? _1118 : (isnan(_1118) ? 1.0 : min(_1118, 1.0));
        _2875 = (_3091 * _3082) + _2308;
        _2877 = (_3091 * _3084) + _2310;
        _2879 = (_3091 * _3086) + _2312;
        _2881 = ((_3076 * _1102) * _3091) + _2656;
        _2883 = ((_3078 * _1104) * _3091) + _2658;
        _2885 = ((_3080 * _1105) * _3091) + _2660;
    }
    else
    {
        _2875 = _2308;
        _2877 = _2310;
        _2879 = _2312;
        _2881 = _2656;
        _2883 = _2658;
        _2885 = _2660;
    }
    float _4837 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    float _4848 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
    float _4859 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    uint _2905 = _289 + 6u;
    float _2913 = _1040 / cbSceneParam._m0[86u].x;
    float _2914 = _1041 / cbSceneParam._m0[86u].y;
    vec4 _2928 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2913, _2914, (log2((isnan(cbSceneParam._m0[77u].w) ? _975 : (isnan(_975) ? cbSceneParam._m0[77u].w : min(_975, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2930 = _2928.x;
    float _2931 = _2928.y;
    float _2932 = _2928.z;
    float _2933 = _2928.w;
    float _3026;
    float _3028;
    float _3030;
    float _3032;
    if (_975 > cbSceneParam._m0[78u].w)
    {
        float _2988 = isnan(_975) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _975 : min(cbSceneParam._m0[80u].w, _975));
        float _2989 = _2988 / _975;
        float _3000 = _2989 * _1025;
        float _3001 = _1026 * _2989;
        float _3002 = (-0.0) - _3001;
        float _3004 = _2989 * _1027;
        float _3006 = (cbSceneParam._m0[77u].w * _3002) / _2988;
        float _3007 = _3006 + cbSceneParam._m0[79u].w;
        float _3008 = cbSceneParam._m0[79u].w - _3001;
        float _3014 = sqrt(((_3000 * _3000) + (_3001 * _3001)) + (_3004 * _3004));
        float _3017 = (1.0 - (cbSceneParam._m0[77u].w / _2988)) * _3014;
        float _3022 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3024 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3177;
        if (abs((_3002 - _3006) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3177 = ((((_3007 > 0.0) ? exp2(_3022 * _3007) : (2.0 - exp2(_3024 * _3007))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3017;
        }
        else
        {
            float _3137 = 1.0 / cbSceneParam._m0[80u].x;
            float _3138 = isnan(_3008) ? _3007 : (isnan(_3007) ? _3008 : max(_3007, _3008));
            float _3139 = isnan(_3008) ? _3007 : (isnan(_3007) ? _3008 : min(_3007, _3008));
            float _3148 = isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : min(_3138, 0.0));
            float _3149 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : min(_3139, 0.0));
            _3177 = ((abs(_3014 / _3002) * cbSceneParam._m0[80u].y) * ((((_3148 - _3149) * 2.0) - ((exp2(_3022 * (isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0)))) - exp2(_3022 * (isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0))))) * _3137)) - ((exp2(_3024 * _3148) - exp2(_3024 * _3149)) * _3137))) + (_3017 * cbSceneParam._m0[80u].z);
        }
        vec4 _3179 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2913, _2914, 1.0), 0.0);
        float _3188 = exp2((_3177 * (-1.44269502162933349609375)) * (1.0 - _3179.w));
        float _3189 = log2(_3188);
        float _3205 = log2(_2933);
        _3026 = (exp2(_3205 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].x)) * _3179.x) / cbSceneParam._m0[78u].x)) + _2930;
        _3028 = (exp2(_3205 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].y)) * _3179.y) / cbSceneParam._m0[78u].y)) + _2931;
        _3030 = (exp2(_3205 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3189 * cbSceneParam._m0[78u].z)) * _3179.z) / cbSceneParam._m0[78u].z)) + _2932;
        _3032 = _3188 * _2933;
    }
    else
    {
        _3026 = _2930;
        _3028 = _2931;
        _3030 = _2932;
        _3032 = _2933;
    }
    float _3044 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3045 = _3044 == 3.0;
    float _3046 = log2(_3032);
    float _3053 = exp2(_3046 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0))) * (_2875 + ((isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))) * _1118))) + ((_2881 + ((isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0))) * _1925)) * cbPerFrame._m0[3u].x));
    float _3054 = exp2(_3046 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0))) * (_2877 + ((isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))) * _1118))) + ((_2883 + ((isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0))) * _1925)) * cbPerFrame._m0[3u].x));
    float _3055 = exp2(_3046 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0))) * (_2879 + ((isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))) * _1118))) + ((_2885 + ((isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0))) * _1925)) * cbPerFrame._m0[3u].x));
    float _3064 = (_3044 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3064 * (_3045 ? _3053 : (_3053 + (cbSceneParam._m0[72u].w * _3026)));
    SV_Target.y = _3064 * (_3045 ? _3054 : (_3054 + (cbSceneParam._m0[72u].w * _3028)));
    SV_Target.z = _3064 * (_3045 ? _3055 : (_3055 + (cbSceneParam._m0[72u].w * _3030)));
    SV_Target.w = cbInstanceData._m0[_2905].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2905].w;
}


