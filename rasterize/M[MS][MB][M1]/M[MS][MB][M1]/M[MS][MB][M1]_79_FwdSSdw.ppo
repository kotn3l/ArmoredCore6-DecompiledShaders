#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 18) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_28;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1299;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = _240 * NORMAL.x;
    float _242 = _240 * NORMAL.y;
    float _243 = _240 * NORMAL.z;
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _253 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = _253 + 1u;
    uint _262 = _253 + 2u;
    float _271 = sqrt(((cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x) + (cbInstanceData._m0[_253].x * cbInstanceData._m0[_253].x)) + (cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x));
    float _272 = _271 * TEXCOORD.z;
    float _273 = _271 * TEXCOORD.w;
    vec4 _293 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _299 = _293.x * cbMtdParam._m0[11u].x;
    float _300 = _293.y * cbMtdParam._m0[11u].y;
    float _301 = _293.z * cbMtdParam._m0[11u].z;
    vec4 _320 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _272) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _273) + cbTextureTilingScale._m0[5u].w));
    vec4 _358 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _360 = _358.x;
    float _372 = dot(vec4(_360, _358.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _389 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_360 - _372) * cbMtdParam._m0[24u].y) + _372) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3650 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0));
    float _397 = (_390 * ((_320.x * cbMtdParam._m0[12u].x) - _299)) + _299;
    float _398 = (_390 * ((_320.y * cbMtdParam._m0[12u].y) - _300)) + _300;
    float _399 = (_390 * ((_320.z * cbMtdParam._m0[12u].z) - _301)) + _301;
    vec4 _412 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _272) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _273) + cbTextureTilingScale._m0[20u].w));
    vec4 _437 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _272) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _273) + cbTextureTilingScale._m0[4u].w));
    vec4 _454 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _456 = _454.x;
    float _457 = _454.y;
    float _458 = _454.z;
    float _467 = ((_437.z - _458) * _390) + _458;
    float _470 = ((((_437.x - _456) * _390) + _456) * 2.0) + (-1.0);
    float _471 = ((((_437.y - _457) * _390) + _457) * 2.0) + (-1.0);
    float _472 = dot(vec2(_470, _471), vec2(_470, _471));
    float _3661 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _477 = sqrt(1.0 - (isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0))));
    vec4 _499 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _511 = (_470 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_412.x * 2.0) + (-1.0)))) + (((_499.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _512 = (_471 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_412.y * 2.0) + (-1.0)))) + (((_499.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _524 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _272) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _273) + cbTextureTilingScale._m0[19u].w));
    float _526 = _524.x;
    float _527 = 1.0 - _526;
    float _555 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_526 - _527) * cbMtdParam._m0[24u].w) + _527) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3672 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _556 = isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0));
    float _564 = ((((cbMtdParam._m0[10u].x - _397) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _556) + _397;
    float _565 = ((((cbMtdParam._m0[10u].y - _398) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _556) + _398;
    float _566 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _399)) * _556) + _399;
    vec4 _578 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _592 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _594 = _592.x;
    float _612 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _272) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _273) + cbTextureTilingScale._m0[9u].w)).x - _594) * _390) + _594;
    float _616 = ((_578.x - _612) * cbMtdParam._m0[19u].z) + _612;
    float _618 = _616 - (_616 * _556);
    float _623 = (((_412.z - _467) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _467;
    float _627 = ((_499.z - _623) * cbMtdParam._m0[19u].w) + _623;
    float _631 = ((cbMtdParam._m0[23u].y - _627) * _556) + _627;
    vec4 _650 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _272) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _273) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _652 = _650.x;
    float _653 = _650.y;
    float _657 = dot(vec4(cbMtdParam._m0[29u].yzw, 0.0), vec4(_241, _242, _243, 0.0));
    vec4 _672 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_28, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _272) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _273) + cbTextureTilingScale._m0[18u].w));
    float _674 = _672.x;
    float _679 = fract(_672.w + cbPerFrame._m0[22u].x);
    float _681 = (1.0 - _679) * _674;
    float _686 = ((_679 + (-1.0)) + _674) * 9.0;
    float _688 = ((_674 + (-1.0)) + _679) * 9.0;
    float _689 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _690 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _704 = (_681 * ((_672.y * 2.0) + (-1.0))) * sin((isnan(3.0) ? _689 : (isnan(_689) ? 3.0 : min(_689, 3.0))) * 3.1415927410125732421875);
    float _706 = (_681 * ((_672.z * 2.0) + (-1.0))) * sin((isnan(3.0) ? _690 : (isnan(_690) ? 3.0 : min(_690, 3.0))) * 3.1415927410125732421875);
    float _710 = inversesqrt(dot(vec3(_704, _706, 1.0), vec3(_704, _706, 1.0)));
    float _726 = (((((0.5 - _652) + ((_704 * 0.5) * _710)) * _657) + _652) * 2.0) + (-1.0);
    float _727 = (((((0.5 - _653) + ((_710 * 0.5) * _706)) * _657) + _653) * 2.0) + (-1.0);
    float _728 = dot(vec2(_726, _727), vec2(_726, _727));
    float _3703 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _744 = ((((cbMtdParam._m0[22u].z * _511) - _511) + _726) * _556) + _511;
    float _745 = ((((cbMtdParam._m0[22u].z * _512) - _512) + _727) * _556) + _512;
    float _746 = (_556 * (sqrt(1.0 - (isnan(1.0) ? _3703 : (isnan(_3703) ? 1.0 : min(_3703, 1.0)))) - _477)) + _477;
    float _748 = cbMtdParam._m0[22u].x + _499.w;
    float _751 = fma(_746, _241, fma(_745, _247 * TANGENT.x, (_233 * _225) * _744));
    float _754 = fma(_746, _242, fma(_745, _247 * TANGENT.y, (_233 * _226) * _744));
    float _757 = fma(_746, _243, fma(_745, _247 * TANGENT.z, (_233 * _227) * _744));
    float _761 = inversesqrt(dot(vec3(_751, _754, _757), vec3(_751, _754, _757)));
    float _762 = _761 * _751;
    float _763 = _761 * _754;
    float _764 = _761 * _757;
    float _3714 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _765 = isnan(1.0) ? _3714 : (isnan(_3714) ? 1.0 : min(_3714, 1.0));
    float _3725 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _3736 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _3747 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _3758 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _3769 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _770 = isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0));
    float _784 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _824 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _834 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _824);
    float _835 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _824);
    float _836 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _824);
    float _840 = inversesqrt(dot(vec3(_834, _835, _836), vec3(_834, _835, _836)));
    float _841 = _834 * _840;
    float _842 = _835 * _840;
    float _843 = _836 * _840;
    float _849 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _850 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _868 = fma(_764, cbSceneParam._m0[5u].z, fma(_763, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _762));
    float _871 = fma(_764, cbSceneParam._m0[6u].z, fma(_763, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _762));
    float _874 = fma(_764, cbSceneParam._m0[7u].z, fma(_763, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _762));
    uint _888 = (_253 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _894 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0)))) * cbInstanceData._m0[_888].x;
    float _895 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0)))) * cbInstanceData._m0[_888].y;
    float _896 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0)))) * cbInstanceData._m0[_888].z;
    float _3780 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _897 = isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0));
    float _3791 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _898 = isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0));
    float _3802 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _899 = isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0));
    float _900 = 1.0 - _770;
    float _901 = _897 * _900;
    float _902 = _898 * _900;
    float _903 = _899 * _900;
    float _908 = (_897 + (-0.039999999105930328369140625)) * _770;
    float _909 = (_898 + (-0.039999999105930328369140625)) * _770;
    float _910 = (_899 + (-0.039999999105930328369140625)) * _770;
    float _911 = _908 + 0.039999999105930328369140625;
    float _913 = _909 + 0.039999999105930328369140625;
    float _914 = _910 + 0.039999999105930328369140625;
    vec4 _923 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _849, cbSceneParam._m0[86u].y * _850));
    float _927 = ((isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0))) * TEXCOORD_5.w) * _923.x;
    float _928 = dot(vec3(_762, _763, _764), vec3(_841, _842, _843));
    float _931 = _928 * 2.0;
    float _935 = (_931 * _762) - _841;
    float _936 = (_931 * _763) - _842;
    float _937 = (_931 * _764) - _843;
    float _941 = abs(dot(vec3(_841, _842, _843), vec3(_762, _763, _764)));
    float _3813 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    float _943 = sqrt(_765);
    float _955 = exp2((_943 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_943 * 3.0));
    float _961 = (1.0 - _955) * ((_943 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _962 = _955 * _943;
    float _990 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _994 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _998 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1298;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1024 = fma(_998, cbModelParam._m0[26u].z, fma(_994, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _990));
        float _1028 = fma(_998, cbModelParam._m0[27u].z, fma(_994, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _990));
        float _1032 = fma(_998, cbModelParam._m0[28u].z, fma(_994, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _990));
        float _1056 = _990 + _762;
        float _1057 = _994 + _763;
        float _1058 = _998 + _764;
        float _1068 = fma(_1058, cbModelParam._m0[26u].z, fma(_1057, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1056)) - _1024;
        float _1069 = fma(_1058, cbModelParam._m0[27u].z, fma(_1057, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1056)) - _1028;
        float _1070 = fma(_1058, cbModelParam._m0[28u].z, fma(_1057, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1056)) - _1032;
        float _1074 = inversesqrt(dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070)));
        float _1087 = ((_1074 * _1068) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1024 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1088 = ((_1074 * _1069) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1028 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1089 = ((_1074 * _1070) / cbModelParam._m0[34u].z) + ((((((_1032 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1092 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1087, _1088, _1089), 0.0);
        float _1126 = exp2((_1092.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1092.x + (-0.5));
        float _1128 = _1126 * (_1092.y + (-0.5));
        float _1129 = _1126 * (_1092.z + (-0.5));
        float _1136 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1099.x + (-0.5));
        float _1138 = _1136 * (_1099.y + (-0.5));
        float _1139 = _1136 * (_1099.z + (-0.5));
        float _1146 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1147 = _1146 * (_1106.x + (-0.5));
        float _1148 = _1146 * (_1106.y + (-0.5));
        float _1149 = _1146 * (_1106.z + (-0.5));
        float _1156 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1157 = _1156 * (_1113.x + (-0.5));
        float _1158 = _1156 * (_1113.y + (-0.5));
        float _1159 = _1156 * (_1113.z + (-0.5));
        float _1160 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1161 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1162 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1163 = _1127 * 0.5;
        float _1164 = _1137 * 0.5;
        float _1165 = _1147 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1180 = (dot(vec3(_762, _763, _764), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _3839 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1190 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1160 + 9.9999997473787516355514526367188e-06);
        float _3850 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
        float _1192 = _1191 * 2.0;
        float _1196 = (1.0 - _1191) / (_1191 + 1.0);
        float _3861 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
        float _1206 = ((((1.0 - _1197) * (_1192 + 2.0)) * exp2(log2(isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0))) * (_1192 + 1.0))) + _1197) * _1160;
        float _1207 = _1128 * 0.5;
        float _1208 = _1138 * 0.5;
        float _1209 = _1148 * 0.5;
        float _1210 = dot(vec3(_1207, _1208, _1209), vec3(_1207, _1208, _1209));
        float _1215 = (_1210 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1210);
        float _1223 = (dot(vec3(_762, _763, _764), vec3(_1215 * _1207, _1215 * _1208, _1215 * _1209)) + 1.0) * 0.5;
        float _3872 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1232 = sqrt(((_1208 * _1208) + (_1207 * _1207)) + (_1209 * _1209)) / (_1161 + 9.9999997473787516355514526367188e-06);
        float _3883 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
        float _1234 = _1233 * 2.0;
        float _1238 = (1.0 - _1233) / (_1233 + 1.0);
        float _3894 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
        float _1248 = ((((1.0 - _1239) * (_1234 + 2.0)) * exp2(log2(isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0))) * (_1234 + 1.0))) + _1239) * _1161;
        float _1249 = _1129 * 0.5;
        float _1250 = _1139 * 0.5;
        float _1251 = _1149 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1265 = (dot(vec3(_762, _763, _764), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _3905 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1274 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1162 + 9.9999997473787516355514526367188e-06);
        float _3916 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
        float _1276 = _1275 * 2.0;
        float _1280 = (1.0 - _1275) / (_1275 + 1.0);
        float _3927 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
        float _1290 = ((((1.0 - _1281) * (_1276 + 2.0)) * exp2(log2(isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0))) * (_1276 + 1.0))) + _1281) * _1162;
        _1298 = _1129;
        _1300 = _1128;
        _1301 = _1127;
        _1302 = _1139;
        _1303 = _1138;
        _1304 = _1137;
        _1305 = _1149;
        _1306 = _1148;
        _1307 = _1147;
        _1308 = _1162;
        _1309 = _1161;
        _1310 = _1160;
        _1311 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)));
        _1312 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0)));
        _1313 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)));
    }
    else
    {
        _1298 = _1299;
        _1300 = _1299;
        _1301 = _1299;
        _1302 = _1299;
        _1303 = _1299;
        _1304 = _1299;
        _1305 = _1299;
        _1306 = _1299;
        _1307 = _1299;
        _1308 = _1299;
        _1309 = _1299;
        _1310 = _1299;
        _1311 = 0.0;
        _1312 = 0.0;
        _1313 = 0.0;
    }
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1338 = fma(_998, cbModelParam._m0[30u].z, fma(_994, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _990));
        float _1342 = fma(_998, cbModelParam._m0[31u].z, fma(_994, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _990));
        float _1346 = fma(_998, cbModelParam._m0[32u].z, fma(_994, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _990));
        float _1369 = _990 + _762;
        float _1370 = _994 + _763;
        float _1371 = _998 + _764;
        float _1381 = fma(_1371, cbModelParam._m0[30u].z, fma(_1370, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1369)) - _1338;
        float _1382 = fma(_1371, cbModelParam._m0[31u].z, fma(_1370, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1369)) - _1342;
        float _1383 = fma(_1371, cbModelParam._m0[32u].z, fma(_1370, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1369)) - _1346;
        float _1387 = inversesqrt(dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383)));
        float _1400 = ((_1387 * _1381) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1338 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1401 = ((_1387 * _1382) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1342 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1402 = ((_1387 * _1383) / cbModelParam._m0[35u].z) + ((((((_1346 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        float _1437 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1404.x + (-0.5));
        float _1439 = _1437 * (_1404.y + (-0.5));
        float _1440 = _1437 * (_1404.z + (-0.5));
        float _1447 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1411.x + (-0.5));
        float _1449 = _1447 * (_1411.y + (-0.5));
        float _1450 = _1447 * (_1411.z + (-0.5));
        float _1457 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1418.x + (-0.5));
        float _1459 = _1457 * (_1418.y + (-0.5));
        float _1460 = _1457 * (_1418.z + (-0.5));
        float _1467 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1468 = _1467 * (_1425.x + (-0.5));
        float _1469 = _1467 * (_1425.y + (-0.5));
        float _1470 = _1467 * (_1425.z + (-0.5));
        float _1471 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1474 = _1438 * 0.5;
        float _1475 = _1448 * 0.5;
        float _1476 = _1458 * 0.5;
        float _1477 = dot(vec3(_1474, _1475, _1476), vec3(_1474, _1475, _1476));
        float _1482 = (_1477 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1477);
        float _1490 = (dot(vec3(_762, _763, _764), vec3(_1482 * _1474, _1482 * _1475, _1482 * _1476)) + 1.0) * 0.5;
        float _3968 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1499 = sqrt(((_1475 * _1475) + (_1474 * _1474)) + (_1476 * _1476)) / (_1471 + 9.9999997473787516355514526367188e-06);
        float _3979 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
        float _1501 = _1500 * 2.0;
        float _1505 = (1.0 - _1500) / (_1500 + 1.0);
        float _3990 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
        float _1515 = ((((1.0 - _1506) * (_1501 + 2.0)) * exp2(log2(isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0))) * (_1501 + 1.0))) + _1506) * _1471;
        float _1516 = _1439 * 0.5;
        float _1517 = _1449 * 0.5;
        float _1518 = _1459 * 0.5;
        float _1519 = dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518));
        float _1524 = (_1519 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1519);
        float _1532 = (dot(vec3(_762, _763, _764), vec3(_1524 * _1516, _1524 * _1517, _1524 * _1518)) + 1.0) * 0.5;
        float _4001 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1541 = sqrt(((_1517 * _1517) + (_1516 * _1516)) + (_1518 * _1518)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4012 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
        float _1543 = _1542 * 2.0;
        float _1547 = (1.0 - _1542) / (_1542 + 1.0);
        float _4023 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
        float _1557 = ((((1.0 - _1548) * (_1543 + 2.0)) * exp2(log2(isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0))) * (_1543 + 1.0))) + _1548) * _1472;
        float _1558 = _1440 * 0.5;
        float _1559 = _1450 * 0.5;
        float _1560 = _1460 * 0.5;
        float _1561 = dot(vec3(_1558, _1559, _1560), vec3(_1558, _1559, _1560));
        float _1566 = (_1561 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1561);
        float _1574 = (dot(vec3(_762, _763, _764), vec3(_1566 * _1558, _1566 * _1559, _1566 * _1560)) + 1.0) * 0.5;
        float _4034 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1583 = sqrt(((_1559 * _1559) + (_1558 * _1558)) + (_1560 * _1560)) / (_1473 + 9.9999997473787516355514526367188e-06);
        float _4045 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
        float _1585 = _1584 * 2.0;
        float _1589 = (1.0 - _1584) / (_1584 + 1.0);
        float _4056 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
        float _1599 = ((((1.0 - _1590) * (_1585 + 2.0)) * exp2(log2(isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0))) * (_1585 + 1.0))) + _1590) * _1473;
        _1607 = _1440;
        _1608 = _1439;
        _1609 = _1438;
        _1610 = _1450;
        _1611 = _1449;
        _1612 = _1448;
        _1613 = _1460;
        _1614 = _1459;
        _1615 = _1458;
        _1616 = _1473;
        _1617 = _1472;
        _1618 = _1471;
        _1619 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0)));
        _1620 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0)));
        _1621 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)));
    }
    else
    {
        _1607 = _1299;
        _1608 = _1299;
        _1609 = _1299;
        _1610 = _1299;
        _1611 = _1299;
        _1612 = _1299;
        _1613 = _1299;
        _1614 = _1299;
        _1615 = _1299;
        _1616 = _1299;
        _1617 = _1299;
        _1618 = _1299;
        _1619 = 0.0;
        _1620 = 0.0;
        _1621 = 0.0;
    }
    float _1631 = (cbModelParam._m0[1u].x * (_1619 - _1311)) + _1311;
    float _1632 = (cbModelParam._m0[1u].x * (_1620 - _1312)) + _1312;
    float _1633 = (cbModelParam._m0[1u].x * (_1621 - _1313)) + _1313;
    float _1654 = fma(_1633, cbSceneParam._m0[89u].z, fma(_1632, cbSceneParam._m0[89u].y, _1631 * cbSceneParam._m0[89u].x));
    float _1657 = fma(_1633, cbSceneParam._m0[90u].z, fma(_1632, cbSceneParam._m0[90u].y, _1631 * cbSceneParam._m0[90u].x));
    float _1660 = fma(_1633, cbSceneParam._m0[91u].z, fma(_1632, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1631));
    float _1675 = _935 * 0.5;
    float _1676 = _936 * 0.5;
    float _1677 = _937 * 0.5;
    float _1678 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1609, _1612, _1615, _1618));
    float _1681 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1608, _1611, _1614, _1617));
    float _1684 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1607, _1610, _1613, _1616));
    float _1718;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1691 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1298, _1302, _1305, _1308));
        float _1695 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1300, _1303, _1306, _1309));
        float _1699 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1301, _1304, _1307, _1310));
        float _1706 = dot(vec4(cbModelParam._m0[39u]), vec4(_1675, _1676, _1677, 1.0));
        _1718 = dot(vec3(isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0)), isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)), isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1718 = 1.0;
    }
    float _1729;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1720 = dot(vec4(cbModelParam._m0[40u]), vec4(_1675, _1676, _1677, 1.0));
        _1729 = dot(vec3(isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1720) ? 0.0 : (isnan(0.0) ? _1720 : max(0.0, _1720))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1729 = 1.0;
    }
    float _1733 = (_1729 * cbModelParam._m0[1u].x) + (_1718 * (1.0 - cbModelParam._m0[1u].x));
    float _1743 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _765);
    float _1744 = isnan(_1743) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1743 : min(cbModelParam._m0[25u].z, _1743));
    float _1826;
    float _1828;
    float _1830;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1793 = fma(_998, cbModelParam._m0[13u].z, fma(_994, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _990)) + cbModelParam._m0[13u].w;
        float _1797 = fma(_998, cbModelParam._m0[14u].z, fma(_994, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _990)) + cbModelParam._m0[14u].w;
        float _1801 = fma(_998, cbModelParam._m0[15u].z, fma(_994, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _990)) + cbModelParam._m0[15u].w;
        float _1804 = fma(_937, cbModelParam._m0[13u].z, fma(_936, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _935));
        float _1807 = fma(_937, cbModelParam._m0[14u].z, fma(_936, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _935));
        float _1810 = fma(_937, cbModelParam._m0[15u].z, fma(_936, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _935));
        float _1838;
        if (_1804 > 0.0)
        {
            _1838 = abs((1.0 - _1793) / _1804);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1804 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1793 + 1.0) / _1804);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1838 = frontier_phi_14_12_ladder;
        }
        float _2062;
        if (_1807 > 0.0)
        {
            _2062 = abs((1.0 - _1797) / _1807);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1807 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1797 + 1.0) / _1807);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2062 = frontier_phi_23_19_ladder;
        }
        float _2319;
        if (_1810 > 0.0)
        {
            _2319 = abs((1.0 - _1801) / _1810);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1810 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1801 + 1.0) / _1810);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2319 = frontier_phi_35_30_ladder;
        }
        float _2321 = isnan(_2062) ? _1838 : (isnan(_1838) ? _2062 : min(_1838, _2062));
        float _2322 = isnan(_2319) ? _2321 : (isnan(_2321) ? _2319 : min(_2321, _2319));
        float _2326 = (_2322 * _1804) + _1793;
        float _2327 = (_2322 * _1807) + _1797;
        float _2328 = (_2322 * _1810) + _1801;
        float _2329 = _2322 * 9.9999997473787516355514526367188e-05;
        float _2331 = (-1.0) - _2329;
        float _2333 = _2329 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2328 > _2333) || ((_2328 < _2331) || ((_2327 > _2333) || ((_2327 < _2331) || ((_2326 < _2331) || (_2326 > _2333))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2456 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2328, cbModelParam._m0[9u].z, fma(_2327, cbModelParam._m0[9u].y, _2326 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2328, cbModelParam._m0[10u].z, fma(_2327, cbModelParam._m0[10u].y, _2326 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2328, cbModelParam._m0[11u].z, fma(_2327, cbModelParam._m0[11u].y, _2326 * cbModelParam._m0[11u].x))), _1744);
            frontier_phi_13_35_ladder = _2456.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2456.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2456.x * cbModelParam._m0[1u].y;
        }
        _1826 = frontier_phi_13_35_ladder_2;
        _1828 = frontier_phi_13_35_ladder_1;
        _1830 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1814 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_935, _936, _937), _1744);
        _1826 = _1814.x * cbModelParam._m0[1u].y;
        _1828 = _1814.y * cbModelParam._m0[1u].y;
        _1830 = _1814.z * cbModelParam._m0[1u].y;
    }
    float _1834 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _765);
    float _1835 = isnan(_1834) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1834 : min(cbModelParam._m0[25u].w, _1834));
    float _1925;
    float _1927;
    float _1929;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1889 = fma(_998, cbModelParam._m0[21u].z, fma(_994, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _990)) + cbModelParam._m0[21u].w;
        float _1893 = fma(_998, cbModelParam._m0[22u].z, fma(_994, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _990)) + cbModelParam._m0[22u].w;
        float _1897 = fma(_998, cbModelParam._m0[23u].z, fma(_994, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _990)) + cbModelParam._m0[23u].w;
        float _1900 = fma(_937, cbModelParam._m0[21u].z, fma(_936, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _935));
        float _1903 = fma(_937, cbModelParam._m0[22u].z, fma(_936, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _935));
        float _1906 = fma(_937, cbModelParam._m0[23u].z, fma(_936, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _935));
        float _2067;
        if (_1900 > 0.0)
        {
            _2067 = abs((1.0 - _1889) / _1900);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1900 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1889 + 1.0) / _1900);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2067 = frontier_phi_25_21_ladder;
        }
        float _2346;
        if (_1903 > 0.0)
        {
            _2346 = abs((1.0 - _1893) / _1903);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1893 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2346 = frontier_phi_37_32_ladder;
        }
        float _2559;
        if (_1906 > 0.0)
        {
            _2559 = abs((1.0 - _1897) / _1906);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1897 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2559 = frontier_phi_46_43_ladder;
        }
        float _2561 = isnan(_2346) ? _2067 : (isnan(_2067) ? _2346 : min(_2067, _2346));
        float _2562 = isnan(_2559) ? _2561 : (isnan(_2561) ? _2559 : min(_2561, _2559));
        float _2566 = (_2562 * _1900) + _1889;
        float _2567 = (_2562 * _1903) + _1893;
        float _2568 = (_2562 * _1906) + _1897;
        float _2569 = _2562 * 9.9999997473787516355514526367188e-05;
        float _2570 = (-1.0) - _2569;
        float _2572 = _2569 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2568 > _2572) || ((_2568 < _2570) || ((_2567 > _2572) || ((_2567 < _2570) || ((_2566 < _2570) || (_2566 > _2572))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2767 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2568, cbModelParam._m0[17u].z, fma(_2567, cbModelParam._m0[17u].y, _2566 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2568, cbModelParam._m0[18u].z, fma(_2567, cbModelParam._m0[18u].y, _2566 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2568, cbModelParam._m0[19u].z, fma(_2567, cbModelParam._m0[19u].y, _2566 * cbModelParam._m0[19u].x))), _1835);
            frontier_phi_22_46_ladder = _2767.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2767.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2767.x * cbModelParam._m0[1u].z;
        }
        _1925 = frontier_phi_22_46_ladder_2;
        _1927 = frontier_phi_22_46_ladder_1;
        _1929 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1909 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_935, _936, _937), _1835);
        _1925 = _1909.x * cbModelParam._m0[1u].z;
        _1927 = _1909.y * cbModelParam._m0[1u].z;
        _1929 = _1909.z * cbModelParam._m0[1u].z;
    }
    float _1942 = (((_961 * _911) + _962) * _927) * ((cbModelParam._m0[1u].w * (_1925 - _1826)) + _1826);
    float _1944 = (((_961 * _913) + _962) * _927) * ((cbModelParam._m0[1u].w * (_1927 - _1828)) + _1828);
    float _1946 = (((_961 * _914) + _962) * _927) * ((cbModelParam._m0[1u].w * (_1929 - _1830)) + _1830);
    float _1949 = fma(_1946, cbSceneParam._m0[89u].z, fma(_1944, cbSceneParam._m0[89u].y, _1942 * cbSceneParam._m0[89u].x));
    float _1952 = fma(_1946, cbSceneParam._m0[90u].z, fma(_1944, cbSceneParam._m0[90u].y, _1942 * cbSceneParam._m0[90u].x));
    float _1955 = fma(_1946, cbSceneParam._m0[91u].z, fma(_1944, cbSceneParam._m0[91u].y, _1942 * cbSceneParam._m0[91u].x));
    vec4 _1963 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_849, _850));
    float _1965 = _1963.w;
    float _1977 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1965);
    float _1978 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1965);
    float _1979 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1965);
    uvec4 _1983 = floatBitsToUint(cbInstanceData._m0[_253 + 5u]);
    uint _1985 = _1983.x * 14u;
    uint _1986 = _1985 + 13u;
    float _1993 = _927 + (-1.0);
    float _1998 = (cbLight._m0[_1986].x * _1993) + 1.0;
    float _1999 = (cbLight._m0[_1986].y * _1993) + 1.0;
    float _2000 = (cbLight._m0[_1986].z * _1993) + 1.0;
    float _2001 = (cbLight._m0[_1986].w * _1993) + 1.0;
    uint _2002 = _1985 + 5u;
    float _2008 = isnan(1.0) ? _1999 : (isnan(_1999) ? 1.0 : min(_1999, 1.0));
    uint _2012 = _1985 + 4u;
    float _2021 = isnan(1.0) ? _1998 : (isnan(_1998) ? 1.0 : min(_1998, 1.0));
    uint _2025 = _1985 | 1u;
    float _2036 = dot(vec3(cbLight._m0[_1985].xyz), vec3(_762, _763, _764));
    float _2039 = dot(vec3(cbLight._m0[_2025].xyz), vec3(_762, _763, _764));
    float _4192 = isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0));
    float _4203 = isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0));
    float _2044 = (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0))) * 0.3183098733425140380859375;
    float _2046 = (isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * 0.3183098733425140380859375;
    float _2053 = ((cbLight._m0[_2002].x * _2008) * _2046) + (((cbLight._m0[_2012].x * _1977) * _2021) * _2044);
    float _2054 = ((_2008 * cbLight._m0[_2002].y) * _2046) + (((cbLight._m0[_2012].y * _1978) * _2021) * _2044);
    float _2055 = ((_2008 * cbLight._m0[_2002].z) * _2046) + (((cbLight._m0[_2012].z * _1979) * _2021) * _2044);
    uvec4 _2059 = floatBitsToUint(cbLight._m0[_1985 + 12u]);
    bool _2061 = _2059.x == 0u;
    float _2072;
    float _2074;
    float _2076;
    if (_2061)
    {
        _2072 = _2053;
        _2074 = _2054;
        _2076 = _2055;
    }
    else
    {
        uint _2080 = _1985 + 6u;
        float _2096 = (dot(vec3(cbLight._m0[_1985 + 2u].xyz), vec3(_762, _763, _764)) * 0.5) + 0.5;
        float _2097 = _2096 * _2096;
        float _4214 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
        float _2098 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _2099 = isnan(1.0) ? _2000 : (isnan(_2000) ? 1.0 : min(_2000, 1.0));
        _2072 = (((cbLight._m0[_2080].x * 0.3183098733425140380859375) * _2098) * _2099) + _2053;
        _2074 = (((cbLight._m0[_2080].y * 0.3183098733425140380859375) * _2098) * _2099) + _2054;
        _2076 = (((cbLight._m0[_2080].z * 0.3183098733425140380859375) * _2098) * _2099) + _2055;
    }
    bool _2079 = _2059.y == 0u;
    float _2117;
    float _2119;
    float _2121;
    if (_2079)
    {
        _2117 = _2072;
        _2119 = _2074;
        _2121 = _2076;
    }
    else
    {
        uint _2290 = _1985 + 7u;
        float _2306 = (dot(vec3(cbLight._m0[_1985 + 3u].xyz), vec3(_762, _763, _764)) * 0.5) + 0.5;
        float _2307 = _2306 * _2306;
        float _4230 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
        float _2308 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
        float _2309 = isnan(1.0) ? _2001 : (isnan(_2001) ? 1.0 : min(_2001, 1.0));
        _2117 = (((cbLight._m0[_2290].x * 0.3183098733425140380859375) * _2308) * _2309) + _2072;
        _2119 = (((cbLight._m0[_2290].y * 0.3183098733425140380859375) * _2308) * _2309) + _2074;
        _2121 = (((cbLight._m0[_2290].z * 0.3183098733425140380859375) * _2308) * _2309) + _2076;
    }
    uint _2124 = _1985 + 8u;
    float _2137 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1985].w)) * _765) * 0.949999988079071044921875);
    float _2138 = _2137 * _2137;
    float _2139 = cbLight._m0[_1985].x + _841;
    float _2140 = cbLight._m0[_1985].y + _842;
    float _2141 = cbLight._m0[_1985].z + _843;
    float _2145 = inversesqrt(dot(vec3(_2139, _2140, _2141), vec3(_2139, _2140, _2141)));
    float _2146 = _2145 * _2139;
    float _2147 = _2145 * _2140;
    float _2148 = _2145 * _2141;
    float _2149 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_1985].xyz));
    float _4246 = isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0));
    float _2152 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
    float _4257 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _2153 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
    float _2154 = dot(vec3(_762, _763, _764), vec3(_2146, _2147, _2148));
    float _4268 = isnan(0.0) ? _2154 : (isnan(_2154) ? 0.0 : max(_2154, 0.0));
    float _2157 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _2158 = dot(vec3(cbLight._m0[_1985].xyz), vec3(_2146, _2147, _2148));
    float _4279 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _2162 = _2138 * _2138;
    float _2166 = ((_2157 * _2157) * (_2162 + (-1.0))) + 1.0;
    float _2174 = exp2(log2(1.0 - (isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0)))) * 5.0);
    float _2175 = 0.959999978542327880859375 - _908;
    float _2177 = 0.959999978542327880859375 - _909;
    float _2178 = 0.959999978542327880859375 - _910;
    float _2185 = 1.0 - _2138;
    float _2196 = (0.5 / (((_2153 * ((_2152 * _2185) + _2138)) + 9.9999999392252902907785028219223e-09) + (((_2153 * _2185) + _2138) * _2152))) * _2152;
    float _4290 = isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0));
    float _2198 = (isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))) * (_2162 / ((_2166 * _2166) * 3.141590118408203125));
    uint _2212 = _1985 + 9u;
    float _2223 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2025].w)) * _765) * 0.949999988079071044921875);
    float _2224 = _2223 * _2223;
    float _2225 = cbLight._m0[_2025].x + _841;
    float _2226 = cbLight._m0[_2025].y + _842;
    float _2227 = cbLight._m0[_2025].z + _843;
    float _2231 = inversesqrt(dot(vec3(_2225, _2226, _2227), vec3(_2225, _2226, _2227)));
    float _2232 = _2231 * _2225;
    float _2233 = _2231 * _2226;
    float _2234 = _2231 * _2227;
    float _2235 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_2025].xyz));
    float _4301 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
    float _2238 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
    float _2239 = dot(vec3(_762, _763, _764), vec3(_2232, _2233, _2234));
    float _4312 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
    float _2242 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
    float _2243 = dot(vec3(cbLight._m0[_2025].xyz), vec3(_2232, _2233, _2234));
    float _4323 = isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0));
    float _2247 = _2224 * _2224;
    float _2251 = ((_2242 * _2242) * (_2247 + (-1.0))) + 1.0;
    float _2258 = exp2(log2(1.0 - (isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0)))) * 5.0);
    float _2265 = 1.0 - _2224;
    float _2275 = (0.5 / (((_2153 * ((_2238 * _2265) + _2224)) + 9.9999999392252902907785028219223e-09) + (((_2153 * _2265) + _2224) * _2238))) * _2238;
    float _4334 = isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0));
    float _2277 = (isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0))) * (_2247 / ((_2251 * _2251) * 3.141590118408203125));
    float _2287 = (((((_2258 * _2175) + _911) * cbLight._m0[_2212].x) * _2277) * _2008) + ((((cbLight._m0[_2124].x * _1977) * ((_2174 * _2175) + _911)) * _2198) * _2021);
    float _2288 = (((((_2258 * _2177) + _913) * cbLight._m0[_2212].y) * _2277) * _2008) + ((((cbLight._m0[_2124].y * _1978) * ((_2174 * _2177) + _913)) * _2198) * _2021);
    float _2289 = (((((_2258 * _2178) + _914) * cbLight._m0[_2212].z) * _2277) * _2008) + ((((cbLight._m0[_2124].z * _1979) * ((_2174 * _2178) + _914)) * _2198) * _2021);
    float _2351;
    float _2353;
    float _2355;
    if (_2061)
    {
        _2351 = _2287;
        _2353 = _2288;
        _2355 = _2289;
    }
    else
    {
        uint _2357 = _1985 + 2u;
        uint _2361 = _1985 + 10u;
        float _2375 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2357].w)) * _765) * 0.949999988079071044921875);
        float _2376 = _2375 * _2375;
        float _2377 = cbLight._m0[_2357].x + _841;
        float _2378 = cbLight._m0[_2357].y + _842;
        float _2379 = cbLight._m0[_2357].z + _843;
        float _2383 = inversesqrt(dot(vec3(_2377, _2378, _2379), vec3(_2377, _2378, _2379)));
        float _2384 = _2383 * _2377;
        float _2385 = _2383 * _2378;
        float _2386 = _2383 * _2379;
        float _2387 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_2357].xyz));
        float _4345 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
        float _2390 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _2391 = dot(vec3(_762, _763, _764), vec3(_2384, _2385, _2386));
        float _4356 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
        float _2394 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _2395 = dot(vec3(cbLight._m0[_2357].xyz), vec3(_2384, _2385, _2386));
        float _4367 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
        float _2399 = _2376 * _2376;
        float _2403 = ((_2394 * _2394) * (_2399 + (-1.0))) + 1.0;
        float _2410 = exp2(log2(1.0 - (isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0)))) * 5.0);
        float _2417 = 1.0 - _2376;
        float _2427 = (0.5 / (((_2153 * ((_2390 * _2417) + _2376)) + 9.9999999392252902907785028219223e-09) + (((_2153 * _2417) + _2376) * _2390))) * _2390;
        float _4378 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
        float _2429 = (isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0))) * (_2399 / ((_2403 * _2403) * 3.141590118408203125));
        float _2430 = isnan(1.0) ? _2000 : (isnan(_2000) ? 1.0 : min(_2000, 1.0));
        _2351 = (((((_2410 * _2175) + _911) * cbLight._m0[_2361].x) * _2429) * _2430) + _2287;
        _2353 = (((((_2410 * _2177) + _913) * cbLight._m0[_2361].y) * _2429) * _2430) + _2288;
        _2355 = (((((_2410 * _2178) + _914) * cbLight._m0[_2361].z) * _2429) * _2430) + _2289;
    }
    float _2465;
    float _2467;
    float _2469;
    if (_2079)
    {
        _2465 = _2351;
        _2467 = _2353;
        _2469 = _2355;
    }
    else
    {
        uint _2476 = _1985 + 3u;
        uint _2480 = _1985 + 11u;
        float _2494 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2476].w)) * _765) * 0.949999988079071044921875);
        float _2495 = _2494 * _2494;
        float _2496 = cbLight._m0[_2476].x + _841;
        float _2497 = cbLight._m0[_2476].y + _842;
        float _2498 = cbLight._m0[_2476].z + _843;
        float _2502 = inversesqrt(dot(vec3(_2496, _2497, _2498), vec3(_2496, _2497, _2498)));
        float _2503 = _2502 * _2496;
        float _2504 = _2502 * _2497;
        float _2505 = _2502 * _2498;
        float _2506 = dot(vec3(_762, _763, _764), vec3(cbLight._m0[_2476].xyz));
        float _4394 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
        float _2509 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
        float _2510 = dot(vec3(_762, _763, _764), vec3(_2503, _2504, _2505));
        float _4405 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
        float _2513 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
        float _2514 = dot(vec3(cbLight._m0[_2476].xyz), vec3(_2503, _2504, _2505));
        float _4416 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
        float _2518 = _2495 * _2495;
        float _2522 = ((_2513 * _2513) * (_2518 + (-1.0))) + 1.0;
        float _2529 = exp2(log2(1.0 - (isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0)))) * 5.0);
        float _2536 = 1.0 - _2495;
        float _2546 = (0.5 / (((_2153 * ((_2509 * _2536) + _2495)) + 9.9999999392252902907785028219223e-09) + (((_2153 * _2536) + _2495) * _2509))) * _2509;
        float _4427 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
        float _2548 = (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (_2518 / ((_2522 * _2522) * 3.141590118408203125));
        float _2549 = isnan(1.0) ? _2001 : (isnan(_2001) ? 1.0 : min(_2001, 1.0));
        _2465 = (((((_2529 * _2175) + _911) * cbLight._m0[_2480].x) * _2548) * _2549) + _2351;
        _2467 = (((((_2529 * _2177) + _913) * cbLight._m0[_2480].y) * _2548) * _2549) + _2353;
        _2469 = (((((_2529 * _2178) + _914) * cbLight._m0[_2480].z) * _2548) * _2549) + _2355;
    }
    float _2684;
    float _2686;
    float _2688;
    float _2690;
    float _2692;
    float _2694;
    if (_1983.y == 0u)
    {
        float _2624 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2625 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2624;
        float _2626 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2624;
        float _2627 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2624;
        uvec4 _2639 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2640 = _2639.x;
        uint _2651 = uint((float(_2639.y) * floor(float(uint(cbSceneParam._m0[85u].y * _850) / _2640))) + floor(float(uint(cbSceneParam._m0[85u].x * _849) / _2640)));
        float _2661 = (log2(_2627 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2662 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
        uint _2665 = uint(isnan(14.0) ? _2662 : (isnan(_2662) ? 14.0 : min(_2662, 14.0)));
        uvec4 _2670 = texelFetch(g_lightClusterGridBuffer, int(((_2665 << 2u) + (_2651 << 6u)) >> 2u));
        uint _2671 = _2670.x;
        uint _2672 = _2639.z;
        float _2772;
        float _2774;
        float _2776;
        float _2778;
        float _2780;
        float _2782;
        if (((((1u << ((_2672 >> 4u) & 15u)) + 4294967295u) & _2671) == 0u) || ((_2672 & 240u) == 0u))
        {
            _2772 = 0.0;
            _2774 = 0.0;
            _2776 = 0.0;
            _2778 = 0.0;
            _2780 = 0.0;
            _2782 = 0.0;
        }
        else
        {
            float _2773;
            float _2775;
            float _2777;
            float _2779;
            float _2781;
            float _2783;
            float _2917 = 0.0;
            float _2918 = 0.0;
            float _2919 = 0.0;
            float _2920 = 0.0;
            float _2921 = 0.0;
            float _2922 = 0.0;
            uint _2923 = 0u;
            uint _2932;
            bool _2933;
            for (;;)
            {
                _2932 = texelFetch(g_lightClassification, int((((_2665 << 5u) + (_2651 << 9u)) + (_2923 << 2u)) >> 2u)).x;
                _2933 = _2932 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2933)
                {
                    frontier_phi_61_pred = _2917;
                    frontier_phi_61_pred_1 = _2922;
                    frontier_phi_61_pred_2 = _2921;
                    frontier_phi_61_pred_3 = _2920;
                    frontier_phi_61_pred_4 = _2919;
                    frontier_phi_61_pred_5 = _2918;
                }
                else
                {
                    float _3041;
                    float _3042;
                    float _3043;
                    float _3044;
                    float _3045;
                    float _3046;
                    uint _3047;
                    _3041 = _2917;
                    _3042 = _2918;
                    _3043 = _2919;
                    _3044 = _2920;
                    _3045 = _2921;
                    _3046 = _2922;
                    _3047 = _2932;
                    float _2973;
                    float _2974;
                    float _2975;
                    float _2976;
                    float _2977;
                    float _2978;
                    for (;;)
                    {
                        uint _3051 = uint(findLSB(_3047)) + (_2923 << 5u);
                        uint _3048 = (_3047 + 4294967295u) & _3047;
                        uint _3053 = _3051 * 48u;
                        vec4 _3067 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3053)).x, texelFetch(g_PointLightRenderingBuffer, int(_3053 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3053 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3053 + 3u)).x));
                        uint _3073 = (_3051 * 48u) + 4u;
                        vec4 _3086 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3073)).x, texelFetch(g_PointLightRenderingBuffer, int(_3073 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3073 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3073 + 3u)).x));
                        uint _3092 = (_3051 * 48u) + 8u;
                        vec3 _3103 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3092)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 2u)).x));
                        float _3107 = _3067.x - _2625;
                        float _3108 = _3067.y - _2626;
                        float _3109 = _3067.z - _2627;
                        float _3110 = dot(vec3(_3107, _3108, _3109), vec3(_3107, _3108, _3109));
                        float _3113 = inversesqrt(_3110);
                        float _3114 = _3113 * _3107;
                        float _3115 = _3113 * _3108;
                        float _3116 = _3113 * _3109;
                        float _3117 = dot(vec3(_868, _871, _874), vec3(_3114, _3115, _3116));
                        float _3122 = 1.0 - (_3110 * _3067.w);
                        float _4453 = isnan(0.0) ? _3122 : (isnan(_3122) ? 0.0 : max(_3122, 0.0));
                        float _3123 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
                        float _3124 = sqrt(_3110) * _3086.w;
                        float _3127 = 1.39999997615814208984375 / (_3124 + 1.39999997615814208984375);
                        float _3128 = _3127 * _3127;
                        float _3131 = ((1.0 - _3128) * _3117) + _3128;
                        float _3134 = _3124 * _3124;
                        float _3138 = ((isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0))) * _3123) / ((_3134 * 0.699999988079071044921875) + 1.0);
                        float _3142 = (-0.0) - _2625;
                        float _3143 = (-0.0) - _2626;
                        float _3144 = (-0.0) - _2627;
                        float _3148 = inversesqrt(dot(vec3(_3142, _3143, _3144), vec3(_3142, _3143, _3144)));
                        float _3149 = _3148 * _3142;
                        float _3150 = _3148 * _3143;
                        float _3151 = _3148 * _3144;
                        float _3159 = exp2(log2(1.0 / ((_3134 * 3.5) + 5.0)) * 0.25);
                        float _3160 = 1.0 - _943;
                        float _3167 = sqrt(1.0 - ((1.0 - (_3160 * _3160)) * (1.0 - (_3159 * _3159))));
                        float _3168 = _3167 * _3167;
                        float _3169 = _3168 * _3168;
                        float _3170 = _3149 + _3114;
                        float _3171 = _3150 + _3115;
                        float _3172 = _3151 + _3116;
                        float _3176 = inversesqrt(dot(vec3(_3170, _3171, _3172), vec3(_3170, _3171, _3172)));
                        float _3180 = dot(vec3(_868, _871, _874), vec3(_3149, _3150, _3151));
                        float _4469 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0));
                        float _3183 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
                        float _3184 = dot(vec3(_868, _871, _874), vec3(_3176 * _3170, _3176 * _3171, _3176 * _3172));
                        float _4480 = isnan(0.0) ? _3184 : (isnan(_3184) ? 0.0 : max(_3184, 0.0));
                        float _3187 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
                        float _3191 = ((_3187 * _3187) * (_3169 + (-1.0))) + 1.0;
                        float _3192 = _3127 * _3168;
                        float _3193 = _3192 * _3192;
                        float _3196 = ((1.0 - _3193) * _3117) + _3193;
                        float _4491 = isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0));
                        float _3197 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
                        float _3198 = 1.0 - _3168;
                        float _3208 = (0.5 / (((_3197 * ((_3183 * _3198) + _3168)) + 9.9999999392252902907785028219223e-09) + (((_3197 * _3198) + _3168) * _3183))) * _3197;
                        float _4502 = isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0));
                        float _3218 = (((_3169 * 3.1415927410125732421875) * (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0)))) / ((_3191 * _3191) * ((_3134 * 2.1991131305694580078125) + 3.141590118408203125))) * _3123;
                        _2976 = (_3138 * _3086.x) + _3044;
                        _2977 = (_3138 * _3086.y) + _3045;
                        _2978 = (_3138 * _3086.z) + _3046;
                        _2973 = (_3218 * _3103.x) + _3041;
                        _2974 = (_3218 * _3103.y) + _3042;
                        _2975 = (_3218 * _3103.z) + _3043;
                        if (_3048 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3041 = _2973;
                            _3042 = _2974;
                            _3043 = _2975;
                            _3044 = _2976;
                            _3045 = _2977;
                            _3046 = _2978;
                            _3047 = _3048;
                        }
                    }
                    frontier_phi_61_pred = _2973;
                    frontier_phi_61_pred_1 = _2978;
                    frontier_phi_61_pred_2 = _2977;
                    frontier_phi_61_pred_3 = _2976;
                    frontier_phi_61_pred_4 = _2975;
                    frontier_phi_61_pred_5 = _2974;
                }
                _2773 = frontier_phi_61_pred;
                _2783 = frontier_phi_61_pred_1;
                _2781 = frontier_phi_61_pred_2;
                _2779 = frontier_phi_61_pred_3;
                _2777 = frontier_phi_61_pred_4;
                _2775 = frontier_phi_61_pred_5;
                uint _2924 = _2923 + 1u;
                if (_2924 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2917 = _2773;
                    _2918 = _2775;
                    _2919 = _2777;
                    _2920 = _2779;
                    _2921 = _2781;
                    _2922 = _2783;
                    _2923 = _2924;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2772 = _2773;
            _2774 = _2775;
            _2776 = _2777;
            _2778 = _2779;
            _2780 = _2781;
            _2782 = _2783;
        }
        uvec4 _2786 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2787 = _2786.z;
        uint _2789 = (_2787 >> 8u) & 15u;
        float _2885;
        float _2887;
        float _2889;
        float _2891;
        float _2893;
        float _2895;
        if (((4294967295u << _2789) & _2671) == 0u)
        {
            _2885 = _2772;
            _2887 = _2774;
            _2889 = _2776;
            _2891 = _2778;
            _2893 = _2780;
            _2895 = _2782;
        }
        else
        {
            float _2910 = inversesqrt(dot(vec3(_2625, _2626, _2627), vec3(_2625, _2626, _2627)));
            float _2911 = _2910 * _2625;
            float _2912 = _2910 * _2626;
            float _2913 = _2910 * _2627;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2789 < ((_2787 >> 12u) & 15u))
            {
                float _2886;
                float _2888;
                float _2890;
                float _2892;
                float _2894;
                float _2896;
                float _3024 = _2772;
                float _3025 = _2774;
                float _3026 = _2776;
                float _3027 = _2778;
                float _3028 = _2780;
                float _3029 = _2782;
                uint _3030 = _2789;
                uint _3039;
                bool _3040;
                for (;;)
                {
                    _3039 = texelFetch(g_lightClassification, int((((_2665 << 5u) + (_2651 << 9u)) + (_3030 << 2u)) >> 2u)).x;
                    _3040 = _3039 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3040)
                    {
                        frontier_phi_67_pred = _3027;
                        frontier_phi_67_pred_1 = _3028;
                        frontier_phi_67_pred_2 = _3029;
                        frontier_phi_67_pred_3 = _3026;
                        frontier_phi_67_pred_4 = _3025;
                        frontier_phi_67_pred_5 = _3024;
                    }
                    else
                    {
                        float _3223;
                        float _3224;
                        float _3225;
                        float _3226;
                        float _3227;
                        float _3228;
                        float _3516;
                        float _3517;
                        float _3518;
                        float _3519;
                        float _3520;
                        float _3521;
                        float _3236 = _3024;
                        float _3237 = _3025;
                        float _3238 = _3026;
                        float _3239 = _3027;
                        float _3240 = _3028;
                        float _3241 = _3029;
                        uint _3242 = _3039;
                        uint _3243;
                        vec4 _3268;
                        float _3269;
                        vec4 _3284;
                        vec3 _3296;
                        vec4 _3311;
                        vec4 _3326;
                        float _3372;
                        bool _3373;
                        for (;;)
                        {
                            uint _3253 = ((_3030 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3242));
                            _3243 = (_3242 + 4294967295u) & _3242;
                            uint _3255 = _3253 * 40u;
                            _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            _3269 = _3268.w;
                            uint _3271 = (_3253 * 40u) + 4u;
                            _3284 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3271)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 3u)).x));
                            uint _3286 = (_3253 * 40u) + 8u;
                            _3296 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3286)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3286 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3286 + 2u)).x));
                            uint _3298 = (_3253 * 40u) + 16u;
                            _3311 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3298)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 3u)).x));
                            uint _3313 = (_3253 * 40u) + 20u;
                            _3326 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3313)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3313 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3313 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3313 + 3u)).x));
                            uint _3328 = (_3253 * 40u) + 24u;
                            vec4 _3341 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3328)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3328 + 3u)).x));
                            uint _3347 = (_3253 * 40u) + 28u;
                            vec4 _3360 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3347)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3347 + 3u)).x));
                            _3372 = fma(_2627, _3360.z, fma(_2626, _3360.y, _3360.x * _2625)) + _3360.w;
                            _3373 = !((fma(_2627, _3341.z, fma(_2626, _3341.y, _3341.x * _2625)) + _3341.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3373)
                            {
                                float _3400 = _3268.x - _2625;
                                float _3401 = _3268.y - _2626;
                                float _3402 = _3268.z - _2627;
                                float _3403 = dot(vec3(_3400, _3401, _3402), vec3(_3400, _3401, _3402));
                                float _3406 = inversesqrt(_3403);
                                float _3407 = _3406 * _3400;
                                float _3408 = _3406 * _3401;
                                float _3409 = _3406 * _3402;
                                float _3413 = 1.0 - (_3403 / (_3269 * _3269));
                                float _4513 = isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0));
                                float _3414 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
                                float _3418 = sqrt(_3403) * _3284.w;
                                float _3420 = 1.39999997615814208984375 / (_3418 + 1.39999997615814208984375);
                                float _3421 = _3420 * _3420;
                                float _3424 = ((1.0 - _3421) * dot(vec3(_3407, _3408, _3409), vec3(_868, _871, _874))) + _3421;
                                float _3427 = _3418 * _3418;
                                float _3431 = (fma(_2627, _3311.z, fma(_2626, _3311.y, _3311.x * _2625)) + _3311.w) / _3372;
                                float _3432 = (fma(_2627, _3326.z, fma(_2626, _3326.y, _3326.x * _2625)) + _3326.w) / _3372;
                                float _3436 = 1.0 - dot(vec2(_3431, _3432), vec2(_3431, _3432));
                                float _4529 = isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : max(_3436, 0.0));
                                float _3437 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
                                float _3438 = _3437 * (((isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : max(_3424, 0.0))) * _3414) / ((_3427 * 0.699999988079071044921875) + 1.0));
                                float _3450 = exp2(log2(1.0 / ((_3427 * 3.5) + 5.0)) * 0.25);
                                float _3451 = 1.0 - _943;
                                float _3458 = sqrt(1.0 - ((1.0 - (_3451 * _3451)) * (1.0 - (_3450 * _3450))));
                                float _3459 = _3458 * _3458;
                                float _3460 = _3459 * _3459;
                                float _3461 = _3407 - _2911;
                                float _3462 = _3408 - _2912;
                                float _3463 = _3409 - _2913;
                                float _3467 = inversesqrt(dot(vec3(_3461, _3462, _3463), vec3(_3461, _3462, _3463)));
                                float _3471 = dot(vec3(_868, _871, _874), vec3((-0.0) - _2911, (-0.0) - _2912, (-0.0) - _2913));
                                float _4540 = isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0));
                                float _3474 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
                                float _3475 = dot(vec3(_868, _871, _874), vec3(_3467 * _3461, _3467 * _3462, _3467 * _3463));
                                float _4551 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0));
                                float _3478 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
                                float _3482 = ((_3478 * _3478) * (_3460 + (-1.0))) + 1.0;
                                float _3483 = _3420 * _3459;
                                float _3484 = _3483 * _3483;
                                float _3490 = ((1.0 - _3484) * dot(vec3(_868, _871, _874), vec3(_3407, _3408, _3409))) + _3484;
                                float _4562 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                                float _3491 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
                                float _3492 = 1.0 - _3459;
                                float _3502 = (0.5 / (((_3491 * ((_3474 * _3492) + _3459)) + 9.9999999392252902907785028219223e-09) + (((_3491 * _3492) + _3459) * _3474))) * _3491;
                                float _4573 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0));
                                float _3512 = (_3437 * _3414) * (((_3460 * 3.1415927410125732421875) * (isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0)))) / ((_3482 * _3482) * ((_3427 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3512 * _3296.x;
                                frontier_phi_73_pred_1 = _3512 * _3296.y;
                                frontier_phi_73_pred_2 = _3438 * _3284.z;
                                frontier_phi_73_pred_3 = _3438 * _3284.y;
                                frontier_phi_73_pred_4 = _3438 * _3284.x;
                                frontier_phi_73_pred_5 = _3512 * _3296.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3516 = frontier_phi_73_pred;
                            _3517 = frontier_phi_73_pred_1;
                            _3521 = frontier_phi_73_pred_2;
                            _3520 = frontier_phi_73_pred_3;
                            _3519 = frontier_phi_73_pred_4;
                            _3518 = frontier_phi_73_pred_5;
                            _3226 = _3519 + _3239;
                            _3227 = _3520 + _3240;
                            _3228 = _3521 + _3241;
                            _3223 = _3516 + _3236;
                            _3224 = _3517 + _3237;
                            _3225 = _3518 + _3238;
                            if (_3243 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3236 = _3223;
                                _3237 = _3224;
                                _3238 = _3225;
                                _3239 = _3226;
                                _3240 = _3227;
                                _3241 = _3228;
                                _3242 = _3243;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3226;
                        frontier_phi_67_pred_1 = _3227;
                        frontier_phi_67_pred_2 = _3228;
                        frontier_phi_67_pred_3 = _3225;
                        frontier_phi_67_pred_4 = _3224;
                        frontier_phi_67_pred_5 = _3223;
                    }
                    _2892 = frontier_phi_67_pred;
                    _2894 = frontier_phi_67_pred_1;
                    _2896 = frontier_phi_67_pred_2;
                    _2890 = frontier_phi_67_pred_3;
                    _2888 = frontier_phi_67_pred_4;
                    _2886 = frontier_phi_67_pred_5;
                    uint _3031 = _3030 + 1u;
                    if (_3031 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3024 = _2886;
                        _3025 = _2888;
                        _3026 = _2890;
                        _3027 = _2892;
                        _3028 = _2894;
                        _3029 = _2896;
                        _3030 = _3031;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2894;
                frontier_phi_55_56_ladder_1 = _2896;
                frontier_phi_55_56_ladder_2 = _2892;
                frontier_phi_55_56_ladder_3 = _2890;
                frontier_phi_55_56_ladder_4 = _2888;
                frontier_phi_55_56_ladder_5 = _2886;
            }
            else
            {
                frontier_phi_55_56_ladder = _2780;
                frontier_phi_55_56_ladder_1 = _2782;
                frontier_phi_55_56_ladder_2 = _2778;
                frontier_phi_55_56_ladder_3 = _2776;
                frontier_phi_55_56_ladder_4 = _2774;
                frontier_phi_55_56_ladder_5 = _2772;
            }
            _2885 = frontier_phi_55_56_ladder_5;
            _2887 = frontier_phi_55_56_ladder_4;
            _2889 = frontier_phi_55_56_ladder_3;
            _2891 = frontier_phi_55_56_ladder_2;
            _2893 = frontier_phi_55_56_ladder;
            _2895 = frontier_phi_55_56_ladder_1;
        }
        float _2900 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
        _2684 = (_2900 * _2891) + _2117;
        _2686 = (_2900 * _2893) + _2119;
        _2688 = (_2900 * _2895) + _2121;
        _2690 = ((_2885 * _911) * _2900) + _2465;
        _2692 = ((_2887 * _913) * _2900) + _2467;
        _2694 = ((_2889 * _914) * _2900) + _2469;
    }
    else
    {
        _2684 = _2117;
        _2686 = _2119;
        _2688 = _2121;
        _2690 = _2465;
        _2692 = _2467;
        _2694 = _2469;
    }
    float _4589 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _4600 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _4611 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    uint _2714 = _253 + 6u;
    float _2722 = _849 / cbSceneParam._m0[86u].x;
    float _2723 = _850 / cbSceneParam._m0[86u].y;
    vec4 _2737 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2722, _2723, (log2((isnan(cbSceneParam._m0[77u].w) ? _784 : (isnan(_784) ? cbSceneParam._m0[77u].w : min(_784, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2739 = _2737.x;
    float _2740 = _2737.y;
    float _2741 = _2737.z;
    float _2742 = _2737.w;
    float _2835;
    float _2837;
    float _2839;
    float _2841;
    if (_784 > cbSceneParam._m0[78u].w)
    {
        float _2797 = isnan(_784) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _784 : min(cbSceneParam._m0[80u].w, _784));
        float _2798 = _2797 / _784;
        float _2809 = _2798 * _834;
        float _2810 = _835 * _2798;
        float _2811 = (-0.0) - _2810;
        float _2813 = _2798 * _836;
        float _2815 = (cbSceneParam._m0[77u].w * _2811) / _2797;
        float _2816 = _2815 + cbSceneParam._m0[79u].w;
        float _2817 = cbSceneParam._m0[79u].w - _2810;
        float _2823 = sqrt(((_2809 * _2809) + (_2810 * _2810)) + (_2813 * _2813));
        float _2826 = (1.0 - (cbSceneParam._m0[77u].w / _2797)) * _2823;
        float _2831 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2833 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2986;
        if (abs((_2811 - _2815) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2986 = ((((_2816 > 0.0) ? exp2(_2831 * _2816) : (2.0 - exp2(_2833 * _2816))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2826;
        }
        else
        {
            float _2946 = 1.0 / cbSceneParam._m0[80u].x;
            float _2947 = isnan(_2817) ? _2816 : (isnan(_2816) ? _2817 : max(_2816, _2817));
            float _2948 = isnan(_2817) ? _2816 : (isnan(_2816) ? _2817 : min(_2816, _2817));
            float _2957 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : min(_2947, 0.0));
            float _2958 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : min(_2948, 0.0));
            _2986 = ((abs(_2823 / _2811) * cbSceneParam._m0[80u].y) * ((((_2957 - _2958) * 2.0) - ((exp2(_2831 * (isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0)))) - exp2(_2831 * (isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0))))) * _2946)) - ((exp2(_2833 * _2957) - exp2(_2833 * _2958)) * _2946))) + (_2826 * cbSceneParam._m0[80u].z);
        }
        vec4 _2988 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2722, _2723, 1.0), 0.0);
        float _2997 = exp2((_2986 * (-1.44269502162933349609375)) * (1.0 - _2988.w));
        float _2998 = log2(_2997);
        float _3014 = log2(_2742);
        _2835 = (exp2(_3014 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2998 * cbSceneParam._m0[78u].x)) * _2988.x) / cbSceneParam._m0[78u].x)) + _2739;
        _2837 = (exp2(_3014 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2998 * cbSceneParam._m0[78u].y)) * _2988.y) / cbSceneParam._m0[78u].y)) + _2740;
        _2839 = (exp2(_3014 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2998 * cbSceneParam._m0[78u].z)) * _2988.z) / cbSceneParam._m0[78u].z)) + _2741;
        _2841 = _2997 * _2742;
    }
    else
    {
        _2835 = _2739;
        _2837 = _2740;
        _2839 = _2741;
        _2841 = _2742;
    }
    float _2853 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2854 = _2853 == 3.0;
    float _2855 = log2(_2841);
    float _2862 = exp2(_2855 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0))) * (_2684 + ((isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))) * _927))) + ((_2690 + ((isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0))) * _1733)) * cbPerFrame._m0[3u].x));
    float _2863 = exp2(_2855 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * (_2686 + ((isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0))) * _927))) + ((_2692 + ((isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))) * _1733)) * cbPerFrame._m0[3u].x));
    float _2864 = exp2(_2855 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * (_2688 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _927))) + ((_2694 + ((isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) * _1733)) * cbPerFrame._m0[3u].x));
    float _2873 = (_2853 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2873 * (_2854 ? _2862 : (_2862 + (cbSceneParam._m0[72u].w * _2835)));
    SV_Target.y = _2873 * (_2854 ? _2863 : (_2863 + (cbSceneParam._m0[72u].w * _2837)));
    SV_Target.z = _2873 * (_2854 ? _2864 : (_2864 + (cbSceneParam._m0[72u].w * _2839)));
    SV_Target.w = cbInstanceData._m0[_2714].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2714].w;
}


