#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1416;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _243 = _242 * _234;
    float _244 = _242 * _235;
    float _245 = _242 * _236;
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = _249 * NORMAL.x;
    float _251 = _249 * NORMAL.y;
    float _252 = _249 * NORMAL.z;
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = _256 * TANGENT.x;
    float _258 = _256 * TANGENT.y;
    float _259 = _256 * TANGENT.z;
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4025 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _4036 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _4047 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    uint _281 = uint(roundEven(NORMAL.w)) * 13u;
    uint _286 = _281 + 1u;
    uint _290 = _281 + 2u;
    float _299 = sqrt(((cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x));
    float _300 = _299 * TEXCOORD.z;
    float _301 = _299 * TEXCOORD.w;
    vec4 _314 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _300) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _301) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = _338.x * cbMtdParam._m0[11u].x;
    float _344 = _338.y * cbMtdParam._m0[11u].y;
    float _345 = _338.z * cbMtdParam._m0[11u].z;
    vec4 _364 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _300) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _301) + cbTextureTilingScale._m0[5u].w));
    vec4 _400 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _402 = _400.x;
    float _414 = dot(vec4(_402, _400.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _431 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_402 - _414) * cbMtdParam._m0[24u].y) + _414) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4058 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _432 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _439 = (_432 * ((_364.x * cbMtdParam._m0[12u].x) - _343)) + _343;
    float _440 = (_432 * ((_364.y * cbMtdParam._m0[12u].y) - _344)) + _344;
    float _441 = (_432 * ((_364.z * cbMtdParam._m0[12u].z) - _345)) + _345;
    float _445 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _314.x) * _439;
    float _448 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _314.y) * _440;
    float _451 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _314.z) * _441;
    float _458 = ((_439 - _445) * (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) + _445;
    float _459 = ((_440 - _448) * (isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0)))) + _448;
    float _460 = ((_441 - _451) * (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) + _451;
    vec4 _478 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _300) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _301) + cbTextureTilingScale._m0[20u].w));
    vec4 _505 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    vec4 _522 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _524 = _522.x;
    float _525 = _522.y;
    float _526 = _522.z;
    float _535 = ((_505.z - _526) * _432) + _526;
    float _538 = ((((_505.x - _524) * _432) + _524) * 2.0) + (-1.0);
    float _539 = ((((_505.y - _525) * _432) + _525) * 2.0) + (-1.0);
    float _540 = dot(vec2(_538, _539), vec2(_538, _539));
    float _4069 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _545 = sqrt(1.0 - (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))));
    vec4 _565 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _577 = (_538 + ((((_478.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_565.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _578 = (_539 + ((((_478.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_565.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _581 = fma(_545, _250, fma(_578, _257, _577 * _243));
    float _584 = fma(_545, _251, fma(_578, _258, _577 * _244));
    float _587 = fma(_545, _252, fma(_578, _259, _577 * _245));
    float _591 = inversesqrt(dot(vec3(_581, _584, _587), vec3(_581, _584, _587)));
    vec4 _618 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _300) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _301) + cbTextureTilingScale._m0[11u].w));
    float _620 = _618.x;
    float _621 = 1.0 - _620;
    float _627 = (cbMtdParam._m0[19u].x + dot(vec4(_591 * _581, _591 * _584, _591 * _587, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_620 - _621) * cbMtdParam._m0[24u].z) + _621) * cbMtdParam._m0[21u].z);
    float _4080 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _628 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _630 = (-0.0) - cbMtdParam._m0[24u].x;
    float _632 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _633 = isnan(1.0) ? _632 : (isnan(_632) ? 1.0 : min(_632, 1.0));
    float _640 = _628 - ((_628 * TEXCOORD_8.x) * _633);
    float _641 = _628 - ((_628 * TEXCOORD_8.y) * _633);
    float _642 = _628 - ((_628 * TEXCOORD_8.z) * _633);
    float _649 = (_640 * (cbMtdParam._m0[17u].x - _458)) + _458;
    float _650 = (_641 * (cbMtdParam._m0[17u].y - _459)) + _459;
    float _651 = (_642 * (cbMtdParam._m0[17u].z - _460)) + _460;
    vec4 _663 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _300) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _301) + cbTextureTilingScale._m0[19u].w));
    float _665 = _663.x;
    float _666 = 1.0 - _665;
    float _692 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_665 - _666) * cbMtdParam._m0[24u].w) + _666) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4101 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _693 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _701 = ((((cbMtdParam._m0[10u].x - _649) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _693) + _649;
    float _702 = ((((cbMtdParam._m0[10u].y - _650) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _693) + _650;
    float _703 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _651)) * _693) + _651;
    vec4 _729 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _731 = _729.x;
    float _749 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _300) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _301) + cbTextureTilingScale._m0[9u].w)).x - _731) * _432) + _731;
    float _753 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _749) * cbMtdParam._m0[19u].z) + _749;
    float _755 = _753 - (_753 * _640);
    float _757 = _755 - (_755 * _693);
    float _762 = (((_478.z - _535) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _535;
    float _766 = ((_565.z - _762) * cbMtdParam._m0[19u].w) + _762;
    vec4 _780 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _300) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _301) + cbTextureTilingScale._m0[15u].w));
    float _787 = (_780.x * 2.0) + (-1.0);
    float _788 = (_780.y * 2.0) + (-1.0);
    float _789 = dot(vec2(_787, _788), vec2(_787, _788));
    float _4112 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _797 = ((_780.z - _766) * _640) + _766;
    float _800 = ((cbMtdParam._m0[23u].y - _797) * _693) + _797;
    vec4 _819 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _300) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _301) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _825 = (_819.x * 2.0) + (-1.0);
    float _826 = (_819.y * 2.0) + (-1.0);
    float _827 = dot(vec2(_825, _826), vec2(_825, _826));
    float _4123 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _842 = ((sqrt(1.0 - (isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0)))) - _545) * _642) + _545;
    float _845 = (((_787 - _577) * _640) + _577) + (cbMtdParam._m0[21u].x * _577);
    float _846 = (((_788 - _578) * _641) + _578) + (cbMtdParam._m0[21u].x * _578);
    float _857 = (((_825 - _845) + (_845 * cbMtdParam._m0[22u].z)) * _693) + _845;
    float _858 = (((_826 - _846) + (_846 * cbMtdParam._m0[22u].z)) * _693) + _846;
    float _859 = (_693 * (sqrt(1.0 - (isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0)))) - _842)) + _842;
    float _863 = cbMtdParam._m0[22u].x + _565.w;
    float _866 = fma(_859, _250, fma(_858, _257, _857 * _243));
    float _869 = fma(_859, _251, fma(_858, _258, _857 * _244));
    float _872 = fma(_859, _252, fma(_858, _259, _857 * _245));
    float _876 = inversesqrt(dot(vec3(_866, _869, _872), vec3(_866, _869, _872)));
    float _877 = _876 * _866;
    float _878 = _876 * _869;
    float _879 = _876 * _872;
    float _4134 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _880 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _4145 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _4156 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _4167 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _4178 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _4189 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _885 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
    float _899 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _939 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _949 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _939);
    float _950 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _939);
    float _951 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _939);
    float _955 = inversesqrt(dot(vec3(_949, _950, _951), vec3(_949, _950, _951)));
    float _956 = _949 * _955;
    float _957 = _950 * _955;
    float _958 = _951 * _955;
    float _964 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _965 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _983 = fma(_879, cbSceneParam._m0[5u].z, fma(_878, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _877));
    float _986 = fma(_879, cbSceneParam._m0[6u].z, fma(_878, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _877));
    float _989 = fma(_879, cbSceneParam._m0[7u].z, fma(_878, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _877));
    uint _1003 = (_281 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1009 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0)))) * cbInstanceData._m0[_1003].x;
    float _1010 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0)))) * cbInstanceData._m0[_1003].y;
    float _1011 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0)))) * cbInstanceData._m0[_1003].z;
    float _4200 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1012 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
    float _4211 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1013 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
    float _4222 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1014 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
    float _1015 = 1.0 - _885;
    float _1016 = _1012 * _1015;
    float _1017 = _1013 * _1015;
    float _1018 = _1014 * _1015;
    float _1023 = (_1012 + (-0.039999999105930328369140625)) * _885;
    float _1024 = (_1013 + (-0.039999999105930328369140625)) * _885;
    float _1025 = (_1014 + (-0.039999999105930328369140625)) * _885;
    float _1026 = _1023 + 0.039999999105930328369140625;
    float _1028 = _1024 + 0.039999999105930328369140625;
    float _1029 = _1025 + 0.039999999105930328369140625;
    vec4 _1038 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _964, cbSceneParam._m0[86u].y * _965));
    float _1042 = ((isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0))) * TEXCOORD_5.w) * _1038.x;
    float _1043 = dot(vec3(_877, _878, _879), vec3(_956, _957, _958));
    float _1046 = _1043 * 2.0;
    float _1050 = (_1046 * _877) - _956;
    float _1051 = (_1046 * _878) - _957;
    float _1052 = (_1046 * _879) - _958;
    float _1056 = abs(dot(vec3(_956, _957, _958), vec3(_877, _878, _879)));
    float _4233 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _1058 = sqrt(_880);
    float _1071 = exp2((_1058 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1058 * 3.0));
    float _1077 = (1.0 - _1071) * ((_1058 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1078 = _1071 * _1058;
    float _1106 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1110 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1114 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1415;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1140 = fma(_1114, cbModelParam._m0[26u].z, fma(_1110, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1106));
        float _1144 = fma(_1114, cbModelParam._m0[27u].z, fma(_1110, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1106));
        float _1148 = fma(_1114, cbModelParam._m0[28u].z, fma(_1110, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1106));
        float _1173 = _1106 + _877;
        float _1174 = _1110 + _878;
        float _1175 = _1114 + _879;
        float _1185 = fma(_1175, cbModelParam._m0[26u].z, fma(_1174, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1173)) - _1140;
        float _1186 = fma(_1175, cbModelParam._m0[27u].z, fma(_1174, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1173)) - _1144;
        float _1187 = fma(_1175, cbModelParam._m0[28u].z, fma(_1174, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1173)) - _1148;
        float _1191 = inversesqrt(dot(vec3(_1185, _1186, _1187), vec3(_1185, _1186, _1187)));
        float _1204 = ((_1191 * _1185) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1140 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1205 = ((_1191 * _1186) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1144 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1206 = ((_1191 * _1187) / cbModelParam._m0[34u].z) + ((((((_1148 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1209 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1204, _1205, _1206), 0.0);
        vec4 _1216 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1204, _1205, _1206), 0.0);
        vec4 _1223 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1204, _1205, _1206), 0.0);
        vec4 _1230 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1204, _1205, _1206), 0.0);
        float _1243 = exp2((_1209.w + (-0.5)) * 20.0) * 2.0;
        float _1244 = _1243 * (_1209.x + (-0.5));
        float _1245 = _1243 * (_1209.y + (-0.5));
        float _1246 = _1243 * (_1209.z + (-0.5));
        float _1253 = exp2((_1216.w + (-0.5)) * 20.0) * 2.0;
        float _1254 = _1253 * (_1216.x + (-0.5));
        float _1255 = _1253 * (_1216.y + (-0.5));
        float _1256 = _1253 * (_1216.z + (-0.5));
        float _1263 = exp2((_1223.w + (-0.5)) * 20.0) * 2.0;
        float _1264 = _1263 * (_1223.x + (-0.5));
        float _1265 = _1263 * (_1223.y + (-0.5));
        float _1266 = _1263 * (_1223.z + (-0.5));
        float _1273 = exp2((_1230.w + (-0.5)) * 20.0) * 2.0;
        float _1274 = _1273 * (_1230.x + (-0.5));
        float _1275 = _1273 * (_1230.y + (-0.5));
        float _1276 = _1273 * (_1230.z + (-0.5));
        float _1277 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1278 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1279 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1280 = _1244 * 0.5;
        float _1281 = _1254 * 0.5;
        float _1282 = _1264 * 0.5;
        float _1283 = dot(vec3(_1280, _1281, _1282), vec3(_1280, _1281, _1282));
        float _1288 = (_1283 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1283);
        float _1297 = (dot(vec3(_877, _878, _879), vec3(_1288 * _1280, _1288 * _1281, _1288 * _1282)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1307 = sqrt(((_1281 * _1281) + (_1280 * _1280)) + (_1282 * _1282)) / (_1277 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1308 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1309 = _1308 * 2.0;
        float _1313 = (1.0 - _1308) / (_1308 + 1.0);
        float _4281 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1314 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1323 = ((((1.0 - _1314) * (_1309 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1309 + 1.0))) + _1314) * _1277;
        float _1324 = _1245 * 0.5;
        float _1325 = _1255 * 0.5;
        float _1326 = _1265 * 0.5;
        float _1327 = dot(vec3(_1324, _1325, _1326), vec3(_1324, _1325, _1326));
        float _1332 = (_1327 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1327);
        float _1340 = (dot(vec3(_877, _878, _879), vec3(_1332 * _1324, _1332 * _1325, _1332 * _1326)) + 1.0) * 0.5;
        float _4292 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1349 = sqrt(((_1325 * _1325) + (_1324 * _1324)) + (_1326 * _1326)) / (_1278 + 9.9999997473787516355514526367188e-06);
        float _4303 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1350 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _1351 = _1350 * 2.0;
        float _1355 = (1.0 - _1350) / (_1350 + 1.0);
        float _4314 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1356 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1365 = ((((1.0 - _1356) * (_1351 + 2.0)) * exp2(log2(isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * (_1351 + 1.0))) + _1356) * _1278;
        float _1366 = _1246 * 0.5;
        float _1367 = _1256 * 0.5;
        float _1368 = _1266 * 0.5;
        float _1369 = dot(vec3(_1366, _1367, _1368), vec3(_1366, _1367, _1368));
        float _1374 = (_1369 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1369);
        float _1382 = (dot(vec3(_877, _878, _879), vec3(_1374 * _1366, _1374 * _1367, _1374 * _1368)) + 1.0) * 0.5;
        float _4325 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1391 = sqrt(((_1367 * _1367) + (_1366 * _1366)) + (_1368 * _1368)) / (_1279 + 9.9999997473787516355514526367188e-06);
        float _4336 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1392 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1393 = _1392 * 2.0;
        float _1397 = (1.0 - _1392) / (_1392 + 1.0);
        float _4347 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1398 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1407 = ((((1.0 - _1398) * (_1393 + 2.0)) * exp2(log2(isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0))) * (_1393 + 1.0))) + _1398) * _1279;
        _1415 = _1246;
        _1417 = _1245;
        _1418 = _1244;
        _1419 = _1256;
        _1420 = _1255;
        _1421 = _1254;
        _1422 = _1266;
        _1423 = _1265;
        _1424 = _1264;
        _1425 = _1279;
        _1426 = _1278;
        _1427 = _1277;
        _1428 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0)));
        _1429 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0)));
        _1430 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0)));
    }
    else
    {
        _1415 = _1416;
        _1417 = _1416;
        _1418 = _1416;
        _1419 = _1416;
        _1420 = _1416;
        _1421 = _1416;
        _1422 = _1416;
        _1423 = _1416;
        _1424 = _1416;
        _1425 = _1416;
        _1426 = _1416;
        _1427 = _1416;
        _1428 = 0.0;
        _1429 = 0.0;
        _1430 = 0.0;
    }
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1455 = fma(_1114, cbModelParam._m0[30u].z, fma(_1110, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1106));
        float _1459 = fma(_1114, cbModelParam._m0[31u].z, fma(_1110, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1106));
        float _1463 = fma(_1114, cbModelParam._m0[32u].z, fma(_1110, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1106));
        float _1486 = _1106 + _877;
        float _1487 = _1110 + _878;
        float _1488 = _1114 + _879;
        float _1498 = fma(_1488, cbModelParam._m0[30u].z, fma(_1487, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1486)) - _1455;
        float _1499 = fma(_1488, cbModelParam._m0[31u].z, fma(_1487, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1486)) - _1459;
        float _1500 = fma(_1488, cbModelParam._m0[32u].z, fma(_1487, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1486)) - _1463;
        float _1504 = inversesqrt(dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500)));
        float _1517 = ((_1504 * _1498) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1455 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1518 = ((_1504 * _1499) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1459 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1519 = ((_1504 * _1500) / cbModelParam._m0[35u].z) + ((((((_1463 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1521 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1535 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1542 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        float _1554 = exp2((_1521.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1521.x + (-0.5));
        float _1556 = _1554 * (_1521.y + (-0.5));
        float _1557 = _1554 * (_1521.z + (-0.5));
        float _1564 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1528.x + (-0.5));
        float _1566 = _1564 * (_1528.y + (-0.5));
        float _1567 = _1564 * (_1528.z + (-0.5));
        float _1574 = exp2((_1535.w + (-0.5)) * 20.0) * 2.0;
        float _1575 = _1574 * (_1535.x + (-0.5));
        float _1576 = _1574 * (_1535.y + (-0.5));
        float _1577 = _1574 * (_1535.z + (-0.5));
        float _1584 = exp2((_1542.w + (-0.5)) * 20.0) * 2.0;
        float _1585 = _1584 * (_1542.x + (-0.5));
        float _1586 = _1584 * (_1542.y + (-0.5));
        float _1587 = _1584 * (_1542.z + (-0.5));
        float _1588 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1589 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1590 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1591 = _1555 * 0.5;
        float _1592 = _1565 * 0.5;
        float _1593 = _1575 * 0.5;
        float _1594 = dot(vec3(_1591, _1592, _1593), vec3(_1591, _1592, _1593));
        float _1599 = (_1594 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1594);
        float _1607 = (dot(vec3(_877, _878, _879), vec3(_1599 * _1591, _1599 * _1592, _1599 * _1593)) + 1.0) * 0.5;
        float _4388 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1616 = sqrt(((_1592 * _1592) + (_1591 * _1591)) + (_1593 * _1593)) / (_1588 + 9.9999997473787516355514526367188e-06);
        float _4399 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1617 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
        float _1618 = _1617 * 2.0;
        float _1622 = (1.0 - _1617) / (_1617 + 1.0);
        float _4410 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1632 = ((((1.0 - _1623) * (_1618 + 2.0)) * exp2(log2(isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0))) * (_1618 + 1.0))) + _1623) * _1588;
        float _1633 = _1556 * 0.5;
        float _1634 = _1566 * 0.5;
        float _1635 = _1576 * 0.5;
        float _1636 = dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635));
        float _1641 = (_1636 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1636);
        float _1649 = (dot(vec3(_877, _878, _879), vec3(_1641 * _1633, _1641 * _1634, _1641 * _1635)) + 1.0) * 0.5;
        float _4421 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1658 = sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635)) / (_1589 + 9.9999997473787516355514526367188e-06);
        float _4432 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
        float _1660 = _1659 * 2.0;
        float _1664 = (1.0 - _1659) / (_1659 + 1.0);
        float _4443 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1674 = ((((1.0 - _1665) * (_1660 + 2.0)) * exp2(log2(isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_1660 + 1.0))) + _1665) * _1589;
        float _1675 = _1557 * 0.5;
        float _1676 = _1567 * 0.5;
        float _1677 = _1577 * 0.5;
        float _1678 = dot(vec3(_1675, _1676, _1677), vec3(_1675, _1676, _1677));
        float _1683 = (_1678 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1678);
        float _1691 = (dot(vec3(_877, _878, _879), vec3(_1683 * _1675, _1683 * _1676, _1683 * _1677)) + 1.0) * 0.5;
        float _4454 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1700 = sqrt(((_1676 * _1676) + (_1675 * _1675)) + (_1677 * _1677)) / (_1590 + 9.9999997473787516355514526367188e-06);
        float _4465 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _1702 = _1701 * 2.0;
        float _1706 = (1.0 - _1701) / (_1701 + 1.0);
        float _4476 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1716 = ((((1.0 - _1707) * (_1702 + 2.0)) * exp2(log2(isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_1702 + 1.0))) + _1707) * _1590;
        _1724 = _1557;
        _1725 = _1556;
        _1726 = _1555;
        _1727 = _1567;
        _1728 = _1566;
        _1729 = _1565;
        _1730 = _1577;
        _1731 = _1576;
        _1732 = _1575;
        _1733 = _1590;
        _1734 = _1589;
        _1735 = _1588;
        _1736 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)));
        _1737 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)));
        _1738 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)));
    }
    else
    {
        _1724 = _1416;
        _1725 = _1416;
        _1726 = _1416;
        _1727 = _1416;
        _1728 = _1416;
        _1729 = _1416;
        _1730 = _1416;
        _1731 = _1416;
        _1732 = _1416;
        _1733 = _1416;
        _1734 = _1416;
        _1735 = _1416;
        _1736 = 0.0;
        _1737 = 0.0;
        _1738 = 0.0;
    }
    float _1748 = (cbModelParam._m0[1u].x * (_1736 - _1428)) + _1428;
    float _1749 = (cbModelParam._m0[1u].x * (_1737 - _1429)) + _1429;
    float _1750 = (cbModelParam._m0[1u].x * (_1738 - _1430)) + _1430;
    float _1771 = fma(_1750, cbSceneParam._m0[89u].z, fma(_1749, cbSceneParam._m0[89u].y, _1748 * cbSceneParam._m0[89u].x));
    float _1774 = fma(_1750, cbSceneParam._m0[90u].z, fma(_1749, cbSceneParam._m0[90u].y, _1748 * cbSceneParam._m0[90u].x));
    float _1777 = fma(_1750, cbSceneParam._m0[91u].z, fma(_1749, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1748));
    float _1792 = _1050 * 0.5;
    float _1793 = _1051 * 0.5;
    float _1794 = _1052 * 0.5;
    float _1795 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1798 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1725, _1728, _1731, _1734));
    float _1801 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1724, _1727, _1730, _1733));
    float _1835;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1808 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1415, _1419, _1422, _1425));
        float _1812 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1417, _1420, _1423, _1426));
        float _1816 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1418, _1421, _1424, _1427));
        float _1823 = dot(vec4(cbModelParam._m0[39u]), vec4(_1792, _1793, _1794, 1.0));
        _1835 = dot(vec3(isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)), isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)), isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1823) ? 0.0 : (isnan(0.0) ? _1823 : max(0.0, _1823))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1835 = 1.0;
    }
    float _1846;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1837 = dot(vec4(cbModelParam._m0[40u]), vec4(_1792, _1793, _1794, 1.0));
        _1846 = dot(vec3(isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)), isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)), isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1837) ? 0.0 : (isnan(0.0) ? _1837 : max(0.0, _1837))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1846 = 1.0;
    }
    float _1850 = (_1846 * cbModelParam._m0[1u].x) + (_1835 * (1.0 - cbModelParam._m0[1u].x));
    float _1860 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _880);
    float _1861 = isnan(_1860) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1860 : min(cbModelParam._m0[25u].z, _1860));
    float _1942;
    float _1944;
    float _1946;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1909 = fma(_1114, cbModelParam._m0[13u].z, fma(_1110, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1106)) + cbModelParam._m0[13u].w;
        float _1913 = fma(_1114, cbModelParam._m0[14u].z, fma(_1110, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1106)) + cbModelParam._m0[14u].w;
        float _1917 = fma(_1114, cbModelParam._m0[15u].z, fma(_1110, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1106)) + cbModelParam._m0[15u].w;
        float _1920 = fma(_1052, cbModelParam._m0[13u].z, fma(_1051, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1050));
        float _1923 = fma(_1052, cbModelParam._m0[14u].z, fma(_1051, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1050));
        float _1926 = fma(_1052, cbModelParam._m0[15u].z, fma(_1051, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1050));
        float _1954;
        if (_1920 > 0.0)
        {
            _1954 = abs((1.0 - _1909) / _1920);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1920 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1909 + 1.0) / _1920);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1954 = frontier_phi_14_12_ladder;
        }
        float _2126;
        if (_1923 > 0.0)
        {
            _2126 = abs((1.0 - _1913) / _1923);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1923 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1913 + 1.0) / _1923);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2126 = frontier_phi_23_19_ladder;
        }
        float _2421;
        if (_1926 > 0.0)
        {
            _2421 = abs((1.0 - _1917) / _1926);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1926 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1917 + 1.0) / _1926);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2421 = frontier_phi_35_30_ladder;
        }
        float _2423 = isnan(_2126) ? _1954 : (isnan(_1954) ? _2126 : min(_1954, _2126));
        float _2424 = isnan(_2421) ? _2423 : (isnan(_2423) ? _2421 : min(_2423, _2421));
        float _2428 = (_2424 * _1920) + _1909;
        float _2429 = (_2424 * _1923) + _1913;
        float _2430 = (_2424 * _1926) + _1917;
        float _2431 = _2424 * 9.9999997473787516355514526367188e-05;
        float _2433 = (-1.0) - _2431;
        float _2435 = _2431 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2430 > _2435) || ((_2430 < _2433) || ((_2429 > _2435) || ((_2429 < _2433) || ((_2428 < _2433) || (_2428 > _2435))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2575 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2430, cbModelParam._m0[9u].z, fma(_2429, cbModelParam._m0[9u].y, _2428 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2430, cbModelParam._m0[10u].z, fma(_2429, cbModelParam._m0[10u].y, _2428 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2430, cbModelParam._m0[11u].z, fma(_2429, cbModelParam._m0[11u].y, _2428 * cbModelParam._m0[11u].x))), _1861);
            frontier_phi_13_35_ladder = _2575.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2575.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2575.x * cbModelParam._m0[1u].y;
        }
        _1942 = frontier_phi_13_35_ladder_2;
        _1944 = frontier_phi_13_35_ladder_1;
        _1946 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1930 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1050, _1051, _1052), _1861);
        _1942 = _1930.x * cbModelParam._m0[1u].y;
        _1944 = _1930.y * cbModelParam._m0[1u].y;
        _1946 = _1930.z * cbModelParam._m0[1u].y;
    }
    float _1950 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _880);
    float _1951 = isnan(_1950) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1950 : min(cbModelParam._m0[25u].w, _1950));
    float _2041;
    float _2043;
    float _2045;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2005 = fma(_1114, cbModelParam._m0[21u].z, fma(_1110, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1106)) + cbModelParam._m0[21u].w;
        float _2009 = fma(_1114, cbModelParam._m0[22u].z, fma(_1110, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1106)) + cbModelParam._m0[22u].w;
        float _2013 = fma(_1114, cbModelParam._m0[23u].z, fma(_1110, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1106)) + cbModelParam._m0[23u].w;
        float _2016 = fma(_1052, cbModelParam._m0[21u].z, fma(_1051, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1050));
        float _2019 = fma(_1052, cbModelParam._m0[22u].z, fma(_1051, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1050));
        float _2022 = fma(_1052, cbModelParam._m0[23u].z, fma(_1051, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1050));
        float _2131;
        if (_2016 > 0.0)
        {
            _2131 = abs((1.0 - _2005) / _2016);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2016 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2005 + 1.0) / _2016);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2131 = frontier_phi_25_21_ladder;
        }
        float _2448;
        if (_2019 > 0.0)
        {
            _2448 = abs((1.0 - _2009) / _2019);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2019 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2009 + 1.0) / _2019);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2448 = frontier_phi_37_32_ladder;
        }
        float _2786;
        if (_2022 > 0.0)
        {
            _2786 = abs((1.0 - _2013) / _2022);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2022 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2013 + 1.0) / _2022);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2786 = frontier_phi_47_44_ladder;
        }
        float _2788 = isnan(_2448) ? _2131 : (isnan(_2131) ? _2448 : min(_2131, _2448));
        float _2789 = isnan(_2786) ? _2788 : (isnan(_2788) ? _2786 : min(_2788, _2786));
        float _2793 = (_2789 * _2016) + _2005;
        float _2794 = (_2789 * _2019) + _2009;
        float _2795 = (_2789 * _2022) + _2013;
        float _2796 = _2789 * 9.9999997473787516355514526367188e-05;
        float _2797 = (-1.0) - _2796;
        float _2799 = _2796 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2795 > _2799) || ((_2795 < _2797) || ((_2794 > _2799) || ((_2794 < _2797) || ((_2793 < _2797) || (_2793 > _2799))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2917 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2795, cbModelParam._m0[17u].z, fma(_2794, cbModelParam._m0[17u].y, _2793 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2795, cbModelParam._m0[18u].z, fma(_2794, cbModelParam._m0[18u].y, _2793 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2795, cbModelParam._m0[19u].z, fma(_2794, cbModelParam._m0[19u].y, _2793 * cbModelParam._m0[19u].x))), _1951);
            frontier_phi_22_47_ladder = _2917.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2917.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2917.x * cbModelParam._m0[1u].z;
        }
        _2041 = frontier_phi_22_47_ladder_2;
        _2043 = frontier_phi_22_47_ladder_1;
        _2045 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2025 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1050, _1051, _1052), _1951);
        _2041 = _2025.x * cbModelParam._m0[1u].z;
        _2043 = _2025.y * cbModelParam._m0[1u].z;
        _2045 = _2025.z * cbModelParam._m0[1u].z;
    }
    float _2058 = (((_1077 * _1026) + _1078) * _1042) * ((cbModelParam._m0[1u].w * (_2041 - _1942)) + _1942);
    float _2060 = (((_1077 * _1028) + _1078) * _1042) * ((cbModelParam._m0[1u].w * (_2043 - _1944)) + _1944);
    float _2062 = (((_1077 * _1029) + _1078) * _1042) * ((cbModelParam._m0[1u].w * (_2045 - _1946)) + _1946);
    float _2065 = fma(_2062, cbSceneParam._m0[89u].z, fma(_2060, cbSceneParam._m0[89u].y, _2058 * cbSceneParam._m0[89u].x));
    float _2068 = fma(_2062, cbSceneParam._m0[90u].z, fma(_2060, cbSceneParam._m0[90u].y, _2058 * cbSceneParam._m0[90u].x));
    float _2071 = fma(_2062, cbSceneParam._m0[91u].z, fma(_2060, cbSceneParam._m0[91u].y, _2058 * cbSceneParam._m0[91u].x));
    float _2105 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2109 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2113 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2117 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2118 = _2105 / _2117;
    float _2119 = _2109 / _2117;
    float _2120 = _2113 / _2117;
    float _2267;
    float _2268;
    float _2269;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2147 = ((uint(_2120 > cbSceneParam._m0[59u].y) + uint(_2120 > cbSceneParam._m0[59u].x)) + uint(_2120 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2148 = _2147 + 43u;
        uint _2156 = _2147 + 44u;
        uint _2164 = _2147 + 45u;
        uint _2172 = _2147 + 46u;
        float _2183 = fma(_2117, cbSceneParam._m0[_2148].w, fma(_2113, cbSceneParam._m0[_2148].z, fma(_2109, cbSceneParam._m0[_2148].y, _2105 * cbSceneParam._m0[_2148].x)));
        float _2187 = fma(_2117, cbSceneParam._m0[_2156].w, fma(_2113, cbSceneParam._m0[_2156].z, fma(_2109, cbSceneParam._m0[_2156].y, _2105 * cbSceneParam._m0[_2156].x)));
        float _2195 = fma(_2117, cbSceneParam._m0[_2172].w, fma(_2113, cbSceneParam._m0[_2172].z, fma(_2109, cbSceneParam._m0[_2172].y, _2105 * cbSceneParam._m0[_2172].x)));
        float _2200 = cbSceneParam._m0[33u].z * _2195;
        float _2202 = cbSceneParam._m0[33u].w * _2195;
        float _2205 = fma(_2117, cbSceneParam._m0[_2164].w, fma(_2113, cbSceneParam._m0[_2164].z, fma(_2109, cbSceneParam._m0[_2164].y, _2105 * cbSceneParam._m0[_2164].x))) / _2195;
        float _2253 = (cbSceneParam._m0[33u].x - sqrt(((_2119 * _2119) + (_2118 * _2118)) + (_2120 * _2120))) * cbSceneParam._m0[33u].y;
        float _4602 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
        float _2260 = (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2200 + _2183) / _2195, (_2202 + _2187) / _2195), _2205), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2202 + _2183) / _2195, (_2187 - _2200) / _2195), _2205), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2183 - _2200) / _2195, (_2187 - _2202) / _2195), _2205), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2183 - _2202) / _2195, (_2200 + _2187) / _2195), _2205), 0.0)).x), vec4(0.25)));
        _2267 = 1.0 - (_2260 * cbSceneParam._m0[34u].x);
        _2268 = 1.0 - (_2260 * cbSceneParam._m0[34u].y);
        _2269 = 1.0 - (_2260 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2267 = 1.0;
        _2268 = 1.0;
        _2269 = 1.0;
    }
    float _2333;
    float _2335;
    float _2337;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2321 = fma(_2117, cbSceneParam._m0[63u].w, fma(_2113, cbSceneParam._m0[63u].z, fma(_2109, cbSceneParam._m0[63u].y, _2105 * cbSceneParam._m0[63u].x)));
        float _2322 = fma(_2117, cbSceneParam._m0[60u].w, fma(_2113, cbSceneParam._m0[60u].z, fma(_2109, cbSceneParam._m0[60u].y, _2105 * cbSceneParam._m0[60u].x))) / _2321;
        float _2323 = fma(_2117, cbSceneParam._m0[61u].w, fma(_2113, cbSceneParam._m0[61u].z, fma(_2109, cbSceneParam._m0[61u].y, _2105 * cbSceneParam._m0[61u].x))) / _2321;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2322 >= cbSceneParam._m0[64u].x) && (_2323 >= cbSceneParam._m0[64u].y)) && (_2322 <= cbSceneParam._m0[64u].z)) && (_2323 <= cbSceneParam._m0[64u].w))
        {
            float _2461 = fma(_2117, cbSceneParam._m0[62u].w, fma(_2113, cbSceneParam._m0[62u].z, fma(_2109, cbSceneParam._m0[62u].y, _2105 * cbSceneParam._m0[62u].x))) / _2321;
            float _2465 = isnan(cbSceneParam._m0[41u].w) ? _2461 : (isnan(_2461) ? cbSceneParam._m0[41u].w : max(_2461, cbSceneParam._m0[41u].w));
            float _2508 = (cbSceneParam._m0[33u].x - sqrt(((_2119 * _2119) + (_2118 * _2118)) + (_2120 * _2120))) * cbSceneParam._m0[33u].y;
            float _4618 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
            float _2515 = (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2322, cbSceneParam._m0[33u].w + _2323), _2465), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2322, _2323 - cbSceneParam._m0[33u].z), _2465), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2322 - cbSceneParam._m0[33u].z, _2323 - cbSceneParam._m0[33u].w), _2465), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2322 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2323), _2465), 0.0)).x), vec4(0.25)));
            float _2519 = 1.0 - (_2515 * cbSceneParam._m0[34u].x);
            float _2520 = 1.0 - (_2515 * cbSceneParam._m0[34u].y);
            float _2521 = 1.0 - (_2515 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2521) ? _2269 : (isnan(_2269) ? _2521 : min(_2269, _2521));
            frontier_phi_34_33_ladder_1 = isnan(_2520) ? _2268 : (isnan(_2268) ? _2520 : min(_2268, _2520));
            frontier_phi_34_33_ladder_2 = isnan(_2519) ? _2267 : (isnan(_2267) ? _2519 : min(_2267, _2519));
        }
        else
        {
            frontier_phi_34_33_ladder = _2269;
            frontier_phi_34_33_ladder_1 = _2268;
            frontier_phi_34_33_ladder_2 = _2267;
        }
        _2333 = frontier_phi_34_33_ladder_2;
        _2335 = frontier_phi_34_33_ladder_1;
        _2337 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2333 = _2267;
        _2335 = _2268;
        _2337 = _2269;
    }
    uvec4 _2342 = floatBitsToUint(cbInstanceData._m0[_281 + 5u]);
    uint _2344 = _2342.x * 14u;
    uint _2345 = _2344 + 13u;
    float _2352 = _1042 + (-1.0);
    float _2357 = (cbLight._m0[_2345].x * _2352) + 1.0;
    float _2358 = (cbLight._m0[_2345].y * _2352) + 1.0;
    float _2359 = (cbLight._m0[_2345].z * _2352) + 1.0;
    float _2360 = (cbLight._m0[_2345].w * _2352) + 1.0;
    uint _2361 = _2344 + 5u;
    float _2367 = isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0));
    uint _2371 = _2344 + 4u;
    float _2380 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
    uint _2384 = _2344 | 1u;
    float _2395 = dot(vec3(cbLight._m0[_2344].xyz), vec3(_877, _878, _879));
    float _2398 = dot(vec3(cbLight._m0[_2384].xyz), vec3(_877, _878, _879));
    float _4654 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
    float _4665 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _2403 = (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0))) * 0.3183098733425140380859375;
    float _2405 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * 0.3183098733425140380859375;
    float _2412 = ((cbLight._m0[_2361].x * _2367) * _2405) + (((cbLight._m0[_2371].x * _2333) * _2380) * _2403);
    float _2413 = ((_2367 * cbLight._m0[_2361].y) * _2405) + (((cbLight._m0[_2371].y * _2335) * _2380) * _2403);
    float _2414 = ((_2367 * cbLight._m0[_2361].z) * _2405) + (((cbLight._m0[_2371].z * _2337) * _2380) * _2403);
    uvec4 _2418 = floatBitsToUint(cbLight._m0[_2344 + 12u]);
    bool _2420 = _2418.x == 0u;
    float _2522;
    float _2524;
    float _2526;
    if (_2420)
    {
        _2522 = _2412;
        _2524 = _2413;
        _2526 = _2414;
    }
    else
    {
        uint _2530 = _2344 + 6u;
        float _2546 = (dot(vec3(cbLight._m0[_2344 + 2u].xyz), vec3(_877, _878, _879)) * 0.5) + 0.5;
        float _2547 = _2546 * _2546;
        float _4676 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
        float _2548 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
        float _2549 = isnan(1.0) ? _2359 : (isnan(_2359) ? 1.0 : min(_2359, 1.0));
        _2522 = (((cbLight._m0[_2530].x * 0.3183098733425140380859375) * _2548) * _2549) + _2412;
        _2524 = (((cbLight._m0[_2530].y * 0.3183098733425140380859375) * _2548) * _2549) + _2413;
        _2526 = (((cbLight._m0[_2530].z * 0.3183098733425140380859375) * _2548) * _2549) + _2414;
    }
    bool _2529 = _2418.y == 0u;
    float _2584;
    float _2586;
    float _2588;
    if (_2529)
    {
        _2584 = _2522;
        _2586 = _2524;
        _2588 = _2526;
    }
    else
    {
        uint _2757 = _2344 + 7u;
        float _2773 = (dot(vec3(cbLight._m0[_2344 + 3u].xyz), vec3(_877, _878, _879)) * 0.5) + 0.5;
        float _2774 = _2773 * _2773;
        float _4692 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2775 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _2776 = isnan(1.0) ? _2360 : (isnan(_2360) ? 1.0 : min(_2360, 1.0));
        _2584 = (((cbLight._m0[_2757].x * 0.3183098733425140380859375) * _2775) * _2776) + _2522;
        _2586 = (((cbLight._m0[_2757].y * 0.3183098733425140380859375) * _2775) * _2776) + _2524;
        _2588 = (((cbLight._m0[_2757].z * 0.3183098733425140380859375) * _2775) * _2776) + _2526;
    }
    uint _2591 = _2344 + 8u;
    float _2604 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2344].w)) * _880) * 0.949999988079071044921875);
    float _2605 = _2604 * _2604;
    float _2606 = cbLight._m0[_2344].x + _956;
    float _2607 = cbLight._m0[_2344].y + _957;
    float _2608 = cbLight._m0[_2344].z + _958;
    float _2612 = inversesqrt(dot(vec3(_2606, _2607, _2608), vec3(_2606, _2607, _2608)));
    float _2613 = _2612 * _2606;
    float _2614 = _2612 * _2607;
    float _2615 = _2612 * _2608;
    float _2616 = dot(vec3(_877, _878, _879), vec3(cbLight._m0[_2344].xyz));
    float _4708 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
    float _2619 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
    float _4719 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    float _2620 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
    float _2621 = dot(vec3(_877, _878, _879), vec3(_2613, _2614, _2615));
    float _4730 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
    float _2624 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
    float _2625 = dot(vec3(cbLight._m0[_2344].xyz), vec3(_2613, _2614, _2615));
    float _4741 = isnan(0.0) ? _2625 : (isnan(_2625) ? 0.0 : max(_2625, 0.0));
    float _2629 = _2605 * _2605;
    float _2633 = ((_2624 * _2624) * (_2629 + (-1.0))) + 1.0;
    float _2641 = exp2(log2(1.0 - (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0)))) * 5.0);
    float _2642 = 0.959999978542327880859375 - _1023;
    float _2644 = 0.959999978542327880859375 - _1024;
    float _2645 = 0.959999978542327880859375 - _1025;
    float _2652 = 1.0 - _2605;
    float _2663 = (0.5 / (((_2620 * ((_2619 * _2652) + _2605)) + 9.9999999392252902907785028219223e-09) + (((_2620 * _2652) + _2605) * _2619))) * _2619;
    float _4752 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2665 = (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0))) * (_2629 / ((_2633 * _2633) * 3.141590118408203125));
    uint _2679 = _2344 + 9u;
    float _2690 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2384].w)) * _880) * 0.949999988079071044921875);
    float _2691 = _2690 * _2690;
    float _2692 = cbLight._m0[_2384].x + _956;
    float _2693 = cbLight._m0[_2384].y + _957;
    float _2694 = cbLight._m0[_2384].z + _958;
    float _2698 = inversesqrt(dot(vec3(_2692, _2693, _2694), vec3(_2692, _2693, _2694)));
    float _2699 = _2698 * _2692;
    float _2700 = _2698 * _2693;
    float _2701 = _2698 * _2694;
    float _2702 = dot(vec3(_877, _878, _879), vec3(cbLight._m0[_2384].xyz));
    float _4763 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
    float _2705 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
    float _2706 = dot(vec3(_877, _878, _879), vec3(_2699, _2700, _2701));
    float _4774 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
    float _2709 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    float _2710 = dot(vec3(cbLight._m0[_2384].xyz), vec3(_2699, _2700, _2701));
    float _4785 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
    float _2714 = _2691 * _2691;
    float _2718 = ((_2709 * _2709) * (_2714 + (-1.0))) + 1.0;
    float _2725 = exp2(log2(1.0 - (isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0)))) * 5.0);
    float _2732 = 1.0 - _2691;
    float _2742 = (0.5 / (((_2620 * ((_2705 * _2732) + _2691)) + 9.9999999392252902907785028219223e-09) + (((_2620 * _2732) + _2691) * _2705))) * _2705;
    float _4796 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
    float _2744 = (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0))) * (_2714 / ((_2718 * _2718) * 3.141590118408203125));
    float _2754 = (((((_2725 * _2642) + _1026) * cbLight._m0[_2679].x) * _2744) * _2367) + ((((cbLight._m0[_2591].x * _2333) * ((_2641 * _2642) + _1026)) * _2665) * _2380);
    float _2755 = (((((_2725 * _2644) + _1028) * cbLight._m0[_2679].y) * _2744) * _2367) + ((((cbLight._m0[_2591].y * _2335) * ((_2641 * _2644) + _1028)) * _2665) * _2380);
    float _2756 = (((((_2725 * _2645) + _1029) * cbLight._m0[_2679].z) * _2744) * _2367) + ((((cbLight._m0[_2591].z * _2337) * ((_2641 * _2645) + _1029)) * _2665) * _2380);
    float _2812;
    float _2814;
    float _2816;
    if (_2420)
    {
        _2812 = _2754;
        _2814 = _2755;
        _2816 = _2756;
    }
    else
    {
        uint _2818 = _2344 + 2u;
        uint _2822 = _2344 + 10u;
        float _2836 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2818].w)) * _880) * 0.949999988079071044921875);
        float _2837 = _2836 * _2836;
        float _2838 = cbLight._m0[_2818].x + _956;
        float _2839 = cbLight._m0[_2818].y + _957;
        float _2840 = cbLight._m0[_2818].z + _958;
        float _2844 = inversesqrt(dot(vec3(_2838, _2839, _2840), vec3(_2838, _2839, _2840)));
        float _2845 = _2844 * _2838;
        float _2846 = _2844 * _2839;
        float _2847 = _2844 * _2840;
        float _2848 = dot(vec3(_877, _878, _879), vec3(cbLight._m0[_2818].xyz));
        float _4807 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
        float _2851 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
        float _2852 = dot(vec3(_877, _878, _879), vec3(_2845, _2846, _2847));
        float _4818 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        float _2855 = isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0));
        float _2856 = dot(vec3(cbLight._m0[_2818].xyz), vec3(_2845, _2846, _2847));
        float _4829 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2860 = _2837 * _2837;
        float _2864 = ((_2855 * _2855) * (_2860 + (-1.0))) + 1.0;
        float _2871 = exp2(log2(1.0 - (isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0)))) * 5.0);
        float _2878 = 1.0 - _2837;
        float _2888 = (0.5 / (((_2620 * ((_2851 * _2878) + _2837)) + 9.9999999392252902907785028219223e-09) + (((_2620 * _2878) + _2837) * _2851))) * _2851;
        float _4840 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
        float _2890 = (isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0))) * (_2860 / ((_2864 * _2864) * 3.141590118408203125));
        float _2891 = isnan(1.0) ? _2359 : (isnan(_2359) ? 1.0 : min(_2359, 1.0));
        _2812 = (((((_2871 * _2642) + _1026) * cbLight._m0[_2822].x) * _2890) * _2891) + _2754;
        _2814 = (((((_2871 * _2644) + _1028) * cbLight._m0[_2822].y) * _2890) * _2891) + _2755;
        _2816 = (((((_2871 * _2645) + _1029) * cbLight._m0[_2822].z) * _2890) * _2891) + _2756;
    }
    float _2922;
    float _2924;
    float _2926;
    if (_2529)
    {
        _2922 = _2812;
        _2924 = _2814;
        _2926 = _2816;
    }
    else
    {
        uint _2933 = _2344 + 3u;
        uint _2937 = _2344 + 11u;
        float _2951 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2933].w)) * _880) * 0.949999988079071044921875);
        float _2952 = _2951 * _2951;
        float _2953 = cbLight._m0[_2933].x + _956;
        float _2954 = cbLight._m0[_2933].y + _957;
        float _2955 = cbLight._m0[_2933].z + _958;
        float _2959 = inversesqrt(dot(vec3(_2953, _2954, _2955), vec3(_2953, _2954, _2955)));
        float _2960 = _2959 * _2953;
        float _2961 = _2959 * _2954;
        float _2962 = _2959 * _2955;
        float _2963 = dot(vec3(_877, _878, _879), vec3(cbLight._m0[_2933].xyz));
        float _4856 = isnan(0.0) ? _2963 : (isnan(_2963) ? 0.0 : max(_2963, 0.0));
        float _2966 = isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0));
        float _2967 = dot(vec3(_877, _878, _879), vec3(_2960, _2961, _2962));
        float _4867 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
        float _2970 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
        float _2971 = dot(vec3(cbLight._m0[_2933].xyz), vec3(_2960, _2961, _2962));
        float _4878 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
        float _2975 = _2952 * _2952;
        float _2979 = ((_2970 * _2970) * (_2975 + (-1.0))) + 1.0;
        float _2986 = exp2(log2(1.0 - (isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0)))) * 5.0);
        float _2993 = 1.0 - _2952;
        float _3003 = (0.5 / (((_2620 * ((_2966 * _2993) + _2952)) + 9.9999999392252902907785028219223e-09) + (((_2620 * _2993) + _2952) * _2966))) * _2966;
        float _4889 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
        float _3005 = (isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0))) * (_2975 / ((_2979 * _2979) * 3.141590118408203125));
        float _3006 = isnan(1.0) ? _2360 : (isnan(_2360) ? 1.0 : min(_2360, 1.0));
        _2922 = (((((_2986 * _2642) + _1026) * cbLight._m0[_2937].x) * _3005) * _3006) + _2812;
        _2924 = (((((_2986 * _2644) + _1028) * cbLight._m0[_2937].y) * _3005) * _3006) + _2814;
        _2926 = (((((_2986 * _2645) + _1029) * cbLight._m0[_2937].z) * _3005) * _3006) + _2816;
    }
    float _3072;
    float _3074;
    float _3076;
    float _3078;
    float _3080;
    float _3082;
    if (_2342.y == 0u)
    {
        uvec4 _3027 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3028 = _3027.x;
        uint _3039 = uint((float(_3027.y) * floor(float(uint(cbSceneParam._m0[85u].y * _965) / _3028))) + floor(float(uint(cbSceneParam._m0[85u].x * _964) / _3028)));
        float _3049 = (log2(_2120 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3050 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
        uint _3053 = uint(isnan(14.0) ? _3050 : (isnan(_3050) ? 14.0 : min(_3050, 14.0)));
        uvec4 _3058 = texelFetch(g_lightClusterGridBuffer, int(((_3053 << 2u) + (_3039 << 6u)) >> 2u));
        uint _3059 = _3058.x;
        uint _3060 = _3027.z;
        float _3139;
        float _3141;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        if (((((1u << ((_3060 >> 4u) & 15u)) + 4294967295u) & _3059) == 0u) || ((_3060 & 240u) == 0u))
        {
            _3139 = 0.0;
            _3141 = 0.0;
            _3143 = 0.0;
            _3145 = 0.0;
            _3147 = 0.0;
            _3149 = 0.0;
        }
        else
        {
            float _3140;
            float _3142;
            float _3144;
            float _3146;
            float _3148;
            float _3150;
            float _3283 = 0.0;
            float _3284 = 0.0;
            float _3285 = 0.0;
            float _3286 = 0.0;
            float _3287 = 0.0;
            float _3288 = 0.0;
            uint _3289 = 0u;
            uint _3298;
            bool _3299;
            for (;;)
            {
                _3298 = texelFetch(g_lightClassification, int((((_3053 << 5u) + (_3039 << 9u)) + (_3289 << 2u)) >> 2u)).x;
                _3299 = _3298 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3299)
                {
                    frontier_phi_66_pred = _3288;
                    frontier_phi_66_pred_1 = _3287;
                    frontier_phi_66_pred_2 = _3286;
                    frontier_phi_66_pred_3 = _3285;
                    frontier_phi_66_pred_4 = _3284;
                    frontier_phi_66_pred_5 = _3283;
                }
                else
                {
                    float _3407;
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    uint _3413;
                    _3407 = _3283;
                    _3408 = _3284;
                    _3409 = _3285;
                    _3410 = _3286;
                    _3411 = _3287;
                    _3412 = _3288;
                    _3413 = _3298;
                    float _3339;
                    float _3340;
                    float _3341;
                    float _3342;
                    float _3343;
                    float _3344;
                    for (;;)
                    {
                        uint _3417 = uint(findLSB(_3413)) + (_3289 << 5u);
                        uint _3414 = (_3413 + 4294967295u) & _3413;
                        uint _3419 = _3417 * 48u;
                        vec4 _3433 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3419)).x, texelFetch(g_PointLightRenderingBuffer, int(_3419 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3419 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3419 + 3u)).x));
                        uint _3439 = (_3417 * 48u) + 4u;
                        vec4 _3452 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3439)).x, texelFetch(g_PointLightRenderingBuffer, int(_3439 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3439 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3439 + 3u)).x));
                        uint _3458 = (_3417 * 48u) + 8u;
                        vec3 _3469 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3458)).x, texelFetch(g_PointLightRenderingBuffer, int(_3458 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3458 + 2u)).x));
                        float _3473 = _3433.x - _2118;
                        float _3474 = _3433.y - _2119;
                        float _3475 = _3433.z - _2120;
                        float _3476 = dot(vec3(_3473, _3474, _3475), vec3(_3473, _3474, _3475));
                        float _3479 = inversesqrt(_3476);
                        float _3480 = _3479 * _3473;
                        float _3481 = _3479 * _3474;
                        float _3482 = _3479 * _3475;
                        float _3483 = dot(vec3(_983, _986, _989), vec3(_3480, _3481, _3482));
                        float _3488 = 1.0 - (_3476 * _3433.w);
                        float _4915 = isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0));
                        float _3489 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                        float _3490 = sqrt(_3476) * _3452.w;
                        float _3493 = 1.39999997615814208984375 / (_3490 + 1.39999997615814208984375);
                        float _3494 = _3493 * _3493;
                        float _3497 = ((1.0 - _3494) * _3483) + _3494;
                        float _3500 = _3490 * _3490;
                        float _3504 = ((isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : max(_3497, 0.0))) * _3489) / ((_3500 * 0.699999988079071044921875) + 1.0);
                        float _3508 = (-0.0) - _2118;
                        float _3509 = (-0.0) - _2119;
                        float _3510 = (-0.0) - _2120;
                        float _3514 = inversesqrt(dot(vec3(_3508, _3509, _3510), vec3(_3508, _3509, _3510)));
                        float _3515 = _3514 * _3508;
                        float _3516 = _3514 * _3509;
                        float _3517 = _3514 * _3510;
                        float _3524 = exp2(log2(1.0 / ((_3500 * 3.5) + 5.0)) * 0.25);
                        float _3525 = 1.0 - _1058;
                        float _3532 = sqrt(1.0 - ((1.0 - (_3525 * _3525)) * (1.0 - (_3524 * _3524))));
                        float _3533 = _3532 * _3532;
                        float _3534 = _3533 * _3533;
                        float _3535 = _3515 + _3480;
                        float _3536 = _3516 + _3481;
                        float _3537 = _3517 + _3482;
                        float _3541 = inversesqrt(dot(vec3(_3535, _3536, _3537), vec3(_3535, _3536, _3537)));
                        float _3545 = dot(vec3(_983, _986, _989), vec3(_3515, _3516, _3517));
                        float _4931 = isnan(0.0) ? _3545 : (isnan(_3545) ? 0.0 : max(_3545, 0.0));
                        float _3548 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
                        float _3549 = dot(vec3(_983, _986, _989), vec3(_3541 * _3535, _3541 * _3536, _3541 * _3537));
                        float _4942 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0));
                        float _3552 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
                        float _3556 = ((_3552 * _3552) * (_3534 + (-1.0))) + 1.0;
                        float _3557 = _3493 * _3533;
                        float _3558 = _3557 * _3557;
                        float _3561 = ((1.0 - _3558) * _3483) + _3558;
                        float _4953 = isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : max(_3561, 0.0));
                        float _3562 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
                        float _3563 = 1.0 - _3533;
                        float _3573 = (0.5 / (((_3562 * ((_3548 * _3563) + _3533)) + 9.9999999392252902907785028219223e-09) + (((_3562 * _3563) + _3533) * _3548))) * _3562;
                        float _4964 = isnan(0.0) ? _3573 : (isnan(_3573) ? 0.0 : max(_3573, 0.0));
                        float _3584 = (((_3534 * 3.1415927410125732421875) * (isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0)))) / ((_3556 * _3556) * ((_3500 * 2.1991131305694580078125) + 3.141590118408203125))) * _3489;
                        _3342 = (_3504 * _3452.x) + _3410;
                        _3343 = (_3504 * _3452.y) + _3411;
                        _3344 = (_3504 * _3452.z) + _3412;
                        _3339 = (_3584 * _3469.x) + _3407;
                        _3340 = (_3584 * _3469.y) + _3408;
                        _3341 = (_3584 * _3469.z) + _3409;
                        if (_3414 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3407 = _3339;
                            _3408 = _3340;
                            _3409 = _3341;
                            _3410 = _3342;
                            _3411 = _3343;
                            _3412 = _3344;
                            _3413 = _3414;
                        }
                    }
                    frontier_phi_66_pred = _3344;
                    frontier_phi_66_pred_1 = _3343;
                    frontier_phi_66_pred_2 = _3342;
                    frontier_phi_66_pred_3 = _3341;
                    frontier_phi_66_pred_4 = _3340;
                    frontier_phi_66_pred_5 = _3339;
                }
                _3150 = frontier_phi_66_pred;
                _3148 = frontier_phi_66_pred_1;
                _3146 = frontier_phi_66_pred_2;
                _3144 = frontier_phi_66_pred_3;
                _3142 = frontier_phi_66_pred_4;
                _3140 = frontier_phi_66_pred_5;
                uint _3290 = _3289 + 1u;
                if (_3290 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3283 = _3140;
                    _3284 = _3142;
                    _3285 = _3144;
                    _3286 = _3146;
                    _3287 = _3148;
                    _3288 = _3150;
                    _3289 = _3290;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3139 = _3140;
            _3141 = _3142;
            _3143 = _3144;
            _3145 = _3146;
            _3147 = _3148;
            _3149 = _3150;
        }
        uvec4 _3153 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3154 = _3153.z;
        uint _3156 = (_3154 >> 8u) & 15u;
        float _3251;
        float _3253;
        float _3255;
        float _3257;
        float _3259;
        float _3261;
        if (((4294967295u << _3156) & _3059) == 0u)
        {
            _3251 = _3139;
            _3253 = _3141;
            _3255 = _3143;
            _3257 = _3145;
            _3259 = _3147;
            _3261 = _3149;
        }
        else
        {
            float _3276 = inversesqrt(dot(vec3(_2118, _2119, _2120), vec3(_2118, _2119, _2120)));
            float _3277 = _3276 * _2118;
            float _3278 = _3276 * _2119;
            float _3279 = _3276 * _2120;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3156 < ((_3154 >> 12u) & 15u))
            {
                float _3252;
                float _3254;
                float _3256;
                float _3258;
                float _3260;
                float _3262;
                float _3390 = _3139;
                float _3391 = _3141;
                float _3392 = _3143;
                float _3393 = _3145;
                float _3394 = _3147;
                float _3395 = _3149;
                uint _3396 = _3156;
                uint _3405;
                bool _3406;
                for (;;)
                {
                    _3405 = texelFetch(g_lightClassification, int((((_3053 << 5u) + (_3039 << 9u)) + (_3396 << 2u)) >> 2u)).x;
                    _3406 = _3405 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3406)
                    {
                        frontier_phi_72_pred = _3395;
                        frontier_phi_72_pred_1 = _3394;
                        frontier_phi_72_pred_2 = _3393;
                        frontier_phi_72_pred_3 = _3392;
                        frontier_phi_72_pred_4 = _3391;
                        frontier_phi_72_pred_5 = _3390;
                    }
                    else
                    {
                        float _3589;
                        float _3590;
                        float _3591;
                        float _3592;
                        float _3593;
                        float _3594;
                        float _3882;
                        float _3883;
                        float _3884;
                        float _3885;
                        float _3886;
                        float _3887;
                        float _3602 = _3390;
                        float _3603 = _3391;
                        float _3604 = _3392;
                        float _3605 = _3393;
                        float _3606 = _3394;
                        float _3607 = _3395;
                        uint _3608 = _3405;
                        uint _3609;
                        vec4 _3634;
                        float _3635;
                        vec4 _3650;
                        vec3 _3662;
                        vec4 _3677;
                        vec4 _3692;
                        float _3738;
                        bool _3739;
                        for (;;)
                        {
                            uint _3619 = ((_3396 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3608));
                            _3609 = (_3608 + 4294967295u) & _3608;
                            uint _3621 = _3619 * 40u;
                            _3634 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3621)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 3u)).x));
                            _3635 = _3634.w;
                            uint _3637 = (_3619 * 40u) + 4u;
                            _3650 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3637)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 3u)).x));
                            uint _3652 = (_3619 * 40u) + 8u;
                            _3662 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3652)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3652 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3652 + 2u)).x));
                            uint _3664 = (_3619 * 40u) + 16u;
                            _3677 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3664)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 3u)).x));
                            uint _3679 = (_3619 * 40u) + 20u;
                            _3692 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 3u)).x));
                            uint _3694 = (_3619 * 40u) + 24u;
                            vec4 _3707 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3694)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 3u)).x));
                            uint _3713 = (_3619 * 40u) + 28u;
                            vec4 _3726 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 3u)).x));
                            _3738 = fma(_2120, _3726.z, fma(_2119, _3726.y, _3726.x * _2118)) + _3726.w;
                            _3739 = !((fma(_2120, _3707.z, fma(_2119, _3707.y, _3707.x * _2118)) + _3707.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3739)
                            {
                                float _3766 = _3634.x - _2118;
                                float _3767 = _3634.y - _2119;
                                float _3768 = _3634.z - _2120;
                                float _3769 = dot(vec3(_3766, _3767, _3768), vec3(_3766, _3767, _3768));
                                float _3772 = inversesqrt(_3769);
                                float _3773 = _3772 * _3766;
                                float _3774 = _3772 * _3767;
                                float _3775 = _3772 * _3768;
                                float _3779 = 1.0 - (_3769 / (_3635 * _3635));
                                float _4975 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                                float _3780 = isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0));
                                float _3784 = sqrt(_3769) * _3650.w;
                                float _3786 = 1.39999997615814208984375 / (_3784 + 1.39999997615814208984375);
                                float _3787 = _3786 * _3786;
                                float _3790 = ((1.0 - _3787) * dot(vec3(_3773, _3774, _3775), vec3(_983, _986, _989))) + _3787;
                                float _3793 = _3784 * _3784;
                                float _3797 = (fma(_2120, _3677.z, fma(_2119, _3677.y, _3677.x * _2118)) + _3677.w) / _3738;
                                float _3798 = (fma(_2120, _3692.z, fma(_2119, _3692.y, _3692.x * _2118)) + _3692.w) / _3738;
                                float _3802 = 1.0 - dot(vec2(_3797, _3798), vec2(_3797, _3798));
                                float _4991 = isnan(0.0) ? _3802 : (isnan(_3802) ? 0.0 : max(_3802, 0.0));
                                float _3803 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                                float _3804 = _3803 * (((isnan(0.0) ? _3790 : (isnan(_3790) ? 0.0 : max(_3790, 0.0))) * _3780) / ((_3793 * 0.699999988079071044921875) + 1.0));
                                float _3816 = exp2(log2(1.0 / ((_3793 * 3.5) + 5.0)) * 0.25);
                                float _3817 = 1.0 - _1058;
                                float _3824 = sqrt(1.0 - ((1.0 - (_3817 * _3817)) * (1.0 - (_3816 * _3816))));
                                float _3825 = _3824 * _3824;
                                float _3826 = _3825 * _3825;
                                float _3827 = _3773 - _3277;
                                float _3828 = _3774 - _3278;
                                float _3829 = _3775 - _3279;
                                float _3833 = inversesqrt(dot(vec3(_3827, _3828, _3829), vec3(_3827, _3828, _3829)));
                                float _3837 = dot(vec3(_983, _986, _989), vec3((-0.0) - _3277, (-0.0) - _3278, (-0.0) - _3279));
                                float _5002 = isnan(0.0) ? _3837 : (isnan(_3837) ? 0.0 : max(_3837, 0.0));
                                float _3840 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                                float _3841 = dot(vec3(_983, _986, _989), vec3(_3833 * _3827, _3833 * _3828, _3833 * _3829));
                                float _5013 = isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : max(_3841, 0.0));
                                float _3844 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
                                float _3848 = ((_3844 * _3844) * (_3826 + (-1.0))) + 1.0;
                                float _3849 = _3786 * _3825;
                                float _3850 = _3849 * _3849;
                                float _3856 = ((1.0 - _3850) * dot(vec3(_983, _986, _989), vec3(_3773, _3774, _3775))) + _3850;
                                float _5024 = isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0));
                                float _3857 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
                                float _3858 = 1.0 - _3825;
                                float _3868 = (0.5 / (((_3857 * ((_3840 * _3858) + _3825)) + 9.9999999392252902907785028219223e-09) + (((_3857 * _3858) + _3825) * _3840))) * _3857;
                                float _5035 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3878 = (_3803 * _3780) * (((_3826 * 3.1415927410125732421875) * (isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0)))) / ((_3848 * _3848) * ((_3793 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3804 * _3650.y;
                                frontier_phi_78_pred_1 = _3804 * _3650.x;
                                frontier_phi_78_pred_2 = _3878 * _3662.z;
                                frontier_phi_78_pred_3 = _3878 * _3662.y;
                                frontier_phi_78_pred_4 = _3878 * _3662.x;
                                frontier_phi_78_pred_5 = _3804 * _3650.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3886 = frontier_phi_78_pred;
                            _3885 = frontier_phi_78_pred_1;
                            _3884 = frontier_phi_78_pred_2;
                            _3883 = frontier_phi_78_pred_3;
                            _3882 = frontier_phi_78_pred_4;
                            _3887 = frontier_phi_78_pred_5;
                            _3592 = _3885 + _3605;
                            _3593 = _3886 + _3606;
                            _3594 = _3887 + _3607;
                            _3589 = _3882 + _3602;
                            _3590 = _3883 + _3603;
                            _3591 = _3884 + _3604;
                            if (_3609 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3602 = _3589;
                                _3603 = _3590;
                                _3604 = _3591;
                                _3605 = _3592;
                                _3606 = _3593;
                                _3607 = _3594;
                                _3608 = _3609;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3594;
                        frontier_phi_72_pred_1 = _3593;
                        frontier_phi_72_pred_2 = _3592;
                        frontier_phi_72_pred_3 = _3591;
                        frontier_phi_72_pred_4 = _3590;
                        frontier_phi_72_pred_5 = _3589;
                    }
                    _3262 = frontier_phi_72_pred;
                    _3260 = frontier_phi_72_pred_1;
                    _3258 = frontier_phi_72_pred_2;
                    _3256 = frontier_phi_72_pred_3;
                    _3254 = frontier_phi_72_pred_4;
                    _3252 = frontier_phi_72_pred_5;
                    uint _3397 = _3396 + 1u;
                    if (_3397 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3390 = _3252;
                        _3391 = _3254;
                        _3392 = _3256;
                        _3393 = _3258;
                        _3394 = _3260;
                        _3395 = _3262;
                        _3396 = _3397;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3262;
                frontier_phi_60_61_ladder_1 = _3260;
                frontier_phi_60_61_ladder_2 = _3256;
                frontier_phi_60_61_ladder_3 = _3254;
                frontier_phi_60_61_ladder_4 = _3252;
                frontier_phi_60_61_ladder_5 = _3258;
            }
            else
            {
                frontier_phi_60_61_ladder = _3149;
                frontier_phi_60_61_ladder_1 = _3147;
                frontier_phi_60_61_ladder_2 = _3143;
                frontier_phi_60_61_ladder_3 = _3141;
                frontier_phi_60_61_ladder_4 = _3139;
                frontier_phi_60_61_ladder_5 = _3145;
            }
            _3251 = frontier_phi_60_61_ladder_4;
            _3253 = frontier_phi_60_61_ladder_3;
            _3255 = frontier_phi_60_61_ladder_2;
            _3257 = frontier_phi_60_61_ladder_5;
            _3259 = frontier_phi_60_61_ladder_1;
            _3261 = frontier_phi_60_61_ladder;
        }
        float _3266 = isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0));
        _3072 = (_3266 * _3257) + _2584;
        _3074 = (_3266 * _3259) + _2586;
        _3076 = (_3266 * _3261) + _2588;
        _3078 = ((_3251 * _1026) * _3266) + _2922;
        _3080 = ((_3253 * _1028) * _3266) + _2924;
        _3082 = ((_3255 * _1029) * _3266) + _2926;
    }
    else
    {
        _3072 = _2584;
        _3074 = _2586;
        _3076 = _2588;
        _3078 = _2922;
        _3080 = _2924;
        _3082 = _2926;
    }
    float _5051 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _5062 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _5073 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    uint _3102 = _281 + 6u;
    float _3110 = _964 / cbSceneParam._m0[86u].x;
    float _3111 = _965 / cbSceneParam._m0[86u].y;
    vec4 _3125 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3110, _3111, (log2((isnan(cbSceneParam._m0[77u].w) ? _899 : (isnan(_899) ? cbSceneParam._m0[77u].w : min(_899, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3127 = _3125.x;
    float _3128 = _3125.y;
    float _3129 = _3125.z;
    float _3130 = _3125.w;
    float _3201;
    float _3203;
    float _3205;
    float _3207;
    if (_899 > cbSceneParam._m0[78u].w)
    {
        float _3164 = isnan(_899) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _899 : min(cbSceneParam._m0[80u].w, _899));
        float _3165 = _3164 / _899;
        float _3176 = _3165 * _949;
        float _3177 = _950 * _3165;
        float _3178 = (-0.0) - _3177;
        float _3179 = _3165 * _951;
        float _3181 = (cbSceneParam._m0[77u].w * _3178) / _3164;
        float _3182 = _3181 + cbSceneParam._m0[79u].w;
        float _3183 = cbSceneParam._m0[79u].w - _3177;
        float _3189 = sqrt(((_3176 * _3176) + (_3177 * _3177)) + (_3179 * _3179));
        float _3192 = (1.0 - (cbSceneParam._m0[77u].w / _3164)) * _3189;
        float _3197 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3199 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3352;
        if (abs((_3178 - _3181) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3352 = ((((_3182 > 0.0) ? exp2(_3197 * _3182) : (2.0 - exp2(_3199 * _3182))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3192;
        }
        else
        {
            float _3312 = 1.0 / cbSceneParam._m0[80u].x;
            float _3313 = isnan(_3183) ? _3182 : (isnan(_3182) ? _3183 : max(_3182, _3183));
            float _3314 = isnan(_3183) ? _3182 : (isnan(_3182) ? _3183 : min(_3182, _3183));
            float _3323 = isnan(0.0) ? _3313 : (isnan(_3313) ? 0.0 : min(_3313, 0.0));
            float _3324 = isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : min(_3314, 0.0));
            _3352 = ((abs(_3189 / _3178) * cbSceneParam._m0[80u].y) * ((((_3323 - _3324) * 2.0) - ((exp2(_3197 * (isnan(0.0) ? _3313 : (isnan(_3313) ? 0.0 : max(_3313, 0.0)))) - exp2(_3197 * (isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : max(_3314, 0.0))))) * _3312)) - ((exp2(_3199 * _3323) - exp2(_3199 * _3324)) * _3312))) + (_3192 * cbSceneParam._m0[80u].z);
        }
        vec4 _3354 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3110, _3111, 1.0), 0.0);
        float _3363 = exp2((_3352 * (-1.44269502162933349609375)) * (1.0 - _3354.w));
        float _3364 = log2(_3363);
        float _3380 = log2(_3130);
        _3201 = (exp2(_3380 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3364 * cbSceneParam._m0[78u].x)) * _3354.x) / cbSceneParam._m0[78u].x)) + _3127;
        _3203 = (exp2(_3380 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3364 * cbSceneParam._m0[78u].y)) * _3354.y) / cbSceneParam._m0[78u].y)) + _3128;
        _3205 = (exp2(_3380 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3364 * cbSceneParam._m0[78u].z)) * _3354.z) / cbSceneParam._m0[78u].z)) + _3129;
        _3207 = _3363 * _3130;
    }
    else
    {
        _3201 = _3127;
        _3203 = _3128;
        _3205 = _3129;
        _3207 = _3130;
    }
    float _3219 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3220 = _3219 == 3.0;
    float _3221 = log2(_3207);
    float _3228 = exp2(_3221 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0))) * (_3072 + ((isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0))) * _1042))) + ((_3078 + ((isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0))) * _1850)) * cbPerFrame._m0[3u].x));
    float _3229 = exp2(_3221 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0))) * (_3074 + ((isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))) * _1042))) + ((_3080 + ((isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0))) * _1850)) * cbPerFrame._m0[3u].x));
    float _3230 = exp2(_3221 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0))) * (_3076 + ((isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0))) * _1042))) + ((_3082 + ((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1850)) * cbPerFrame._m0[3u].x));
    float _3239 = (_3219 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3239 * (_3220 ? _3228 : (_3228 + (cbSceneParam._m0[72u].w * _3201)));
    SV_Target.y = _3239 * (_3220 ? _3229 : (_3229 + (cbSceneParam._m0[72u].w * _3203)));
    SV_Target.z = _3239 * (_3220 ? _3230 : (_3230 + (cbSceneParam._m0[72u].w * _3205)));
    SV_Target.w = cbInstanceData._m0[_3102].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3102].w;
}


