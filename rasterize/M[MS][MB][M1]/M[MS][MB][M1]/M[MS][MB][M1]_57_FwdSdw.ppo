#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1177;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _213 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _214 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _215 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _221 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _222 = _221 * _213;
    float _223 = _221 * _214;
    float _224 = _221 * _215;
    float _228 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = _228 * NORMAL.x;
    float _230 = _228 * NORMAL.y;
    float _231 = _228 * NORMAL.z;
    float _235 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236 = _235 * TANGENT.x;
    float _237 = _235 * TANGENT.y;
    float _238 = _235 * TANGENT.z;
    uint _241 = uint(roundEven(NORMAL.w)) * 13u;
    uint _246 = _241 + 1u;
    uint _250 = _241 + 2u;
    float _259 = sqrt(((cbInstanceData._m0[_246].x * cbInstanceData._m0[_246].x) + (cbInstanceData._m0[_241].x * cbInstanceData._m0[_241].x)) + (cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x));
    float _260 = _259 * TEXCOORD.z;
    float _261 = _259 * TEXCOORD.w;
    vec4 _280 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _286 = _280.x * cbMtdParam._m0[9u].x;
    float _287 = _280.y * cbMtdParam._m0[9u].y;
    float _288 = _280.z * cbMtdParam._m0[9u].z;
    vec4 _307 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _260) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _261) + cbTextureTilingScale._m0[14u].w));
    vec4 _327 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _331 = _327.z;
    float _336 = (_327.x * 2.0) + (-1.0);
    float _338 = (_327.y * 2.0) + (-1.0);
    float _339 = dot(vec2(_336, _338), vec2(_336, _338));
    float _3787 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _345 = sqrt(1.0 - (isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0))));
    float _348 = fma(_345, _229, fma(_338, _236, _336 * _222));
    float _351 = fma(_345, _230, fma(_338, _237, _336 * _223));
    float _354 = fma(_345, _231, fma(_338, _238, _336 * _224));
    float _358 = inversesqrt(dot(vec3(_348, _351, _354), vec3(_348, _351, _354)));
    vec4 _394 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _260) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _261) + cbTextureTilingScale._m0[11u].w));
    float _396 = _394.x;
    float _397 = 1.0 - _396;
    float _404 = ((_396 - _397) * cbMtdParam._m0[24u].z) + _397;
    float _406 = (cbMtdParam._m0[19u].x + dot(vec4(_358 * _348, _358 * _351, _358 * _354, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_404 * cbMtdParam._m0[21u].z);
    float _3798 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _407 = isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0));
    float _409 = (-0.0) - cbMtdParam._m0[24u].x;
    float _411 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _412 = isnan(1.0) ? _411 : (isnan(_411) ? 1.0 : min(_411, 1.0));
    float _419 = _407 - ((_407 * TEXCOORD_8.x) * _412);
    float _420 = _407 - ((_407 * TEXCOORD_8.y) * _412);
    float _421 = _407 - ((_407 * TEXCOORD_8.z) * _412);
    float _428 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _432 = ((isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : min(_428, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _440 = (_432 - (((_404 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _432))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3829 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _441 = isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0));
    float _445 = ((_419 * ((_307.x * cbMtdParam._m0[18u].x) - _286)) * _441) + _286;
    float _446 = ((_420 * ((_307.y * cbMtdParam._m0[18u].y) - _287)) * _441) + _287;
    float _447 = ((_421 * ((_307.z * cbMtdParam._m0[18u].z) - _288)) * _441) + _288;
    vec4 _459 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _260) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _261) + cbTextureTilingScale._m0[19u].w));
    float _461 = _459.x;
    float _462 = 1.0 - _461;
    float _491 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_461 - _462) * cbMtdParam._m0[24u].w) + _462) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3840 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _492 = isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0));
    float _500 = ((((cbMtdParam._m0[10u].x - _445) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _492) + _445;
    float _501 = ((((cbMtdParam._m0[10u].y - _446) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _492) + _446;
    float _502 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _447)) * _492) + _447;
    vec4 _515 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _517 = _515.x;
    float _520 = _517 - ((_517 * _419) * _441);
    float _522 = _520 - (_520 * _492);
    vec4 _536 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _260) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _261) + cbTextureTilingScale._m0[15u].w));
    float _543 = (_536.x * 2.0) + (-1.0);
    float _544 = (_536.y * 2.0) + (-1.0);
    float _545 = dot(vec2(_543, _544), vec2(_543, _544));
    float _3851 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _554 = (((_536.z - _331) * _419) * _441) + _331;
    float _557 = ((cbMtdParam._m0[23u].y - _554) * _492) + _554;
    vec4 _576 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _260) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _261) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _582 = (_576.x * 2.0) + (-1.0);
    float _583 = (_576.y * 2.0) + (-1.0);
    float _584 = dot(vec2(_582, _583), vec2(_582, _583));
    float _3862 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _604 = (((cbMtdParam._m0[21u].x * _336) + ((_543 - _336) * _419)) * _441) + _336;
    float _605 = (((cbMtdParam._m0[21u].x * _338) + ((_544 - _338) * _420)) * _441) + _338;
    float _606 = (((sqrt(1.0 - (isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0)))) - _345) * _421) * _441) + _345;
    float _617 = (((_582 - _604) + (_604 * cbMtdParam._m0[22u].z)) * _492) + _604;
    float _618 = (((_583 - _605) + (_605 * cbMtdParam._m0[22u].z)) * _492) + _605;
    float _619 = ((sqrt(1.0 - (isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0)))) - _606) * _492) + _606;
    float _621 = cbMtdParam._m0[22u].x + _327.w;
    float _624 = fma(_619, _229, fma(_618, _236, _617 * _222));
    float _627 = fma(_619, _230, fma(_618, _237, _617 * _223));
    float _630 = fma(_619, _231, fma(_618, _238, _617 * _224));
    float _634 = inversesqrt(dot(vec3(_624, _627, _630), vec3(_624, _627, _630)));
    float _635 = _634 * _624;
    float _636 = _634 * _627;
    float _637 = _634 * _630;
    float _3873 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _638 = isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0));
    float _3884 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _3895 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _3906 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _3917 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _3928 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _643 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
    float _657 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _697 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _707 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _697);
    float _708 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _697);
    float _709 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _697);
    float _713 = inversesqrt(dot(vec3(_707, _708, _709), vec3(_707, _708, _709)));
    float _714 = _707 * _713;
    float _715 = _708 * _713;
    float _716 = _709 * _713;
    float _722 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _723 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _744 = fma(_637, cbSceneParam._m0[5u].z, fma(_636, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _635));
    float _747 = fma(_637, cbSceneParam._m0[6u].z, fma(_636, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _635));
    float _750 = fma(_637, cbSceneParam._m0[7u].z, fma(_636, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _635));
    uint _764 = (_241 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _770 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0)))) * cbInstanceData._m0[_764].x;
    float _771 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0)))) * cbInstanceData._m0[_764].y;
    float _772 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0)))) * cbInstanceData._m0[_764].z;
    float _3939 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _773 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    float _3950 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _774 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
    float _3961 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _775 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
    float _776 = 1.0 - _643;
    float _777 = _773 * _776;
    float _778 = _774 * _776;
    float _779 = _775 * _776;
    float _784 = (_773 + (-0.039999999105930328369140625)) * _643;
    float _785 = (_774 + (-0.039999999105930328369140625)) * _643;
    float _786 = (_775 + (-0.039999999105930328369140625)) * _643;
    float _787 = _784 + 0.039999999105930328369140625;
    float _789 = _785 + 0.039999999105930328369140625;
    float _790 = _786 + 0.039999999105930328369140625;
    vec4 _799 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _722, cbSceneParam._m0[86u].y * _723));
    float _803 = ((isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0))) * TEXCOORD_5.w) * _799.x;
    float _804 = dot(vec3(_635, _636, _637), vec3(_714, _715, _716));
    float _807 = _804 * 2.0;
    float _811 = (_807 * _635) - _714;
    float _812 = (_807 * _636) - _715;
    float _813 = (_807 * _637) - _716;
    float _817 = abs(dot(vec3(_714, _715, _716), vec3(_635, _636, _637)));
    float _3972 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _819 = sqrt(_638);
    float _832 = exp2((_819 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_819 * 3.0));
    float _838 = (1.0 - _832) * ((_819 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _839 = _832 * _819;
    float _867 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _871 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _875 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1176;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _901 = fma(_875, cbModelParam._m0[26u].z, fma(_871, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _867));
        float _905 = fma(_875, cbModelParam._m0[27u].z, fma(_871, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _867));
        float _909 = fma(_875, cbModelParam._m0[28u].z, fma(_871, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _867));
        float _934 = _867 + _635;
        float _935 = _871 + _636;
        float _936 = _875 + _637;
        float _946 = fma(_936, cbModelParam._m0[26u].z, fma(_935, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _934)) - _901;
        float _947 = fma(_936, cbModelParam._m0[27u].z, fma(_935, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _934)) - _905;
        float _948 = fma(_936, cbModelParam._m0[28u].z, fma(_935, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _934)) - _909;
        float _952 = inversesqrt(dot(vec3(_946, _947, _948), vec3(_946, _947, _948)));
        float _965 = ((_952 * _946) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_901 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _966 = ((_952 * _947) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_905 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _967 = ((_952 * _948) / cbModelParam._m0[34u].z) + ((((((_909 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _970 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_965, _966, _967), 0.0);
        vec4 _977 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_965, _966, _967), 0.0);
        vec4 _984 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_965, _966, _967), 0.0);
        vec4 _991 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_965, _966, _967), 0.0);
        float _1004 = exp2((_970.w + (-0.5)) * 20.0) * 2.0;
        float _1005 = _1004 * (_970.x + (-0.5));
        float _1006 = _1004 * (_970.y + (-0.5));
        float _1007 = _1004 * (_970.z + (-0.5));
        float _1014 = exp2((_977.w + (-0.5)) * 20.0) * 2.0;
        float _1015 = _1014 * (_977.x + (-0.5));
        float _1016 = _1014 * (_977.y + (-0.5));
        float _1017 = _1014 * (_977.z + (-0.5));
        float _1024 = exp2((_984.w + (-0.5)) * 20.0) * 2.0;
        float _1025 = _1024 * (_984.x + (-0.5));
        float _1026 = _1024 * (_984.y + (-0.5));
        float _1027 = _1024 * (_984.z + (-0.5));
        float _1034 = exp2((_991.w + (-0.5)) * 20.0) * 2.0;
        float _1035 = _1034 * (_991.x + (-0.5));
        float _1036 = _1034 * (_991.y + (-0.5));
        float _1037 = _1034 * (_991.z + (-0.5));
        float _1038 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1039 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1040 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1041 = _1005 * 0.5;
        float _1042 = _1015 * 0.5;
        float _1043 = _1025 * 0.5;
        float _1044 = dot(vec3(_1041, _1042, _1043), vec3(_1041, _1042, _1043));
        float _1049 = (_1044 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1044);
        float _1058 = (dot(vec3(_635, _636, _637), vec3(_1049 * _1041, _1049 * _1042, _1049 * _1043)) + 1.0) * 0.5;
        float _3998 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1068 = sqrt(((_1042 * _1042) + (_1041 * _1041)) + (_1043 * _1043)) / (_1038 + 9.9999997473787516355514526367188e-06);
        float _4009 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1069 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
        float _1070 = _1069 * 2.0;
        float _1074 = (1.0 - _1069) / (_1069 + 1.0);
        float _4020 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1075 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
        float _1084 = ((((1.0 - _1075) * (_1070 + 2.0)) * exp2(log2(isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0))) * (_1070 + 1.0))) + _1075) * _1038;
        float _1085 = _1006 * 0.5;
        float _1086 = _1016 * 0.5;
        float _1087 = _1026 * 0.5;
        float _1088 = dot(vec3(_1085, _1086, _1087), vec3(_1085, _1086, _1087));
        float _1093 = (_1088 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1088);
        float _1101 = (dot(vec3(_635, _636, _637), vec3(_1093 * _1085, _1093 * _1086, _1093 * _1087)) + 1.0) * 0.5;
        float _4031 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1110 = sqrt(((_1086 * _1086) + (_1085 * _1085)) + (_1087 * _1087)) / (_1039 + 9.9999997473787516355514526367188e-06);
        float _4042 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1111 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
        float _1112 = _1111 * 2.0;
        float _1116 = (1.0 - _1111) / (_1111 + 1.0);
        float _4053 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
        float _1117 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
        float _1126 = ((((1.0 - _1117) * (_1112 + 2.0)) * exp2(log2(isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0))) * (_1112 + 1.0))) + _1117) * _1039;
        float _1127 = _1007 * 0.5;
        float _1128 = _1017 * 0.5;
        float _1129 = _1027 * 0.5;
        float _1130 = dot(vec3(_1127, _1128, _1129), vec3(_1127, _1128, _1129));
        float _1135 = (_1130 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1130);
        float _1143 = (dot(vec3(_635, _636, _637), vec3(_1135 * _1127, _1135 * _1128, _1135 * _1129)) + 1.0) * 0.5;
        float _4064 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1152 = sqrt(((_1128 * _1128) + (_1127 * _1127)) + (_1129 * _1129)) / (_1040 + 9.9999997473787516355514526367188e-06);
        float _4075 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
        float _1154 = _1153 * 2.0;
        float _1158 = (1.0 - _1153) / (_1153 + 1.0);
        float _4086 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1159 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
        float _1168 = ((((1.0 - _1159) * (_1154 + 2.0)) * exp2(log2(isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0))) * (_1154 + 1.0))) + _1159) * _1040;
        _1176 = _1007;
        _1178 = _1006;
        _1179 = _1005;
        _1180 = _1017;
        _1181 = _1016;
        _1182 = _1015;
        _1183 = _1027;
        _1184 = _1026;
        _1185 = _1025;
        _1186 = _1040;
        _1187 = _1039;
        _1188 = _1038;
        _1189 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0)));
        _1190 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0)));
        _1191 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0)));
    }
    else
    {
        _1176 = _1177;
        _1178 = _1177;
        _1179 = _1177;
        _1180 = _1177;
        _1181 = _1177;
        _1182 = _1177;
        _1183 = _1177;
        _1184 = _1177;
        _1185 = _1177;
        _1186 = _1177;
        _1187 = _1177;
        _1188 = _1177;
        _1189 = 0.0;
        _1190 = 0.0;
        _1191 = 0.0;
    }
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1216 = fma(_875, cbModelParam._m0[30u].z, fma(_871, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _867));
        float _1220 = fma(_875, cbModelParam._m0[31u].z, fma(_871, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _867));
        float _1224 = fma(_875, cbModelParam._m0[32u].z, fma(_871, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _867));
        float _1247 = _867 + _635;
        float _1248 = _871 + _636;
        float _1249 = _875 + _637;
        float _1259 = fma(_1249, cbModelParam._m0[30u].z, fma(_1248, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1247)) - _1216;
        float _1260 = fma(_1249, cbModelParam._m0[31u].z, fma(_1248, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1247)) - _1220;
        float _1261 = fma(_1249, cbModelParam._m0[32u].z, fma(_1248, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1247)) - _1224;
        float _1265 = inversesqrt(dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261)));
        float _1278 = ((_1265 * _1259) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1216 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1279 = ((_1265 * _1260) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1220 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1280 = ((_1265 * _1261) / cbModelParam._m0[35u].z) + ((((((_1224 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1289 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1296 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1303 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        float _1315 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1282.x + (-0.5));
        float _1317 = _1315 * (_1282.y + (-0.5));
        float _1318 = _1315 * (_1282.z + (-0.5));
        float _1325 = exp2((_1289.w + (-0.5)) * 20.0) * 2.0;
        float _1326 = _1325 * (_1289.x + (-0.5));
        float _1327 = _1325 * (_1289.y + (-0.5));
        float _1328 = _1325 * (_1289.z + (-0.5));
        float _1335 = exp2((_1296.w + (-0.5)) * 20.0) * 2.0;
        float _1336 = _1335 * (_1296.x + (-0.5));
        float _1337 = _1335 * (_1296.y + (-0.5));
        float _1338 = _1335 * (_1296.z + (-0.5));
        float _1345 = exp2((_1303.w + (-0.5)) * 20.0) * 2.0;
        float _1346 = _1345 * (_1303.x + (-0.5));
        float _1347 = _1345 * (_1303.y + (-0.5));
        float _1348 = _1345 * (_1303.z + (-0.5));
        float _1349 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1350 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1352 = _1316 * 0.5;
        float _1353 = _1326 * 0.5;
        float _1354 = _1336 * 0.5;
        float _1355 = dot(vec3(_1352, _1353, _1354), vec3(_1352, _1353, _1354));
        float _1360 = (_1355 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1355);
        float _1368 = (dot(vec3(_635, _636, _637), vec3(_1360 * _1352, _1360 * _1353, _1360 * _1354)) + 1.0) * 0.5;
        float _4127 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1377 = sqrt(((_1353 * _1353) + (_1352 * _1352)) + (_1354 * _1354)) / (_1349 + 9.9999997473787516355514526367188e-06);
        float _4138 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1378 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
        float _1379 = _1378 * 2.0;
        float _1383 = (1.0 - _1378) / (_1378 + 1.0);
        float _4149 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1384 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
        float _1393 = ((((1.0 - _1384) * (_1379 + 2.0)) * exp2(log2(isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) * (_1379 + 1.0))) + _1384) * _1349;
        float _1394 = _1317 * 0.5;
        float _1395 = _1327 * 0.5;
        float _1396 = _1337 * 0.5;
        float _1397 = dot(vec3(_1394, _1395, _1396), vec3(_1394, _1395, _1396));
        float _1402 = (_1397 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1397);
        float _1410 = (dot(vec3(_635, _636, _637), vec3(_1402 * _1394, _1402 * _1395, _1402 * _1396)) + 1.0) * 0.5;
        float _4160 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1419 = sqrt(((_1395 * _1395) + (_1394 * _1394)) + (_1396 * _1396)) / (_1350 + 9.9999997473787516355514526367188e-06);
        float _4171 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
        float _1421 = _1420 * 2.0;
        float _1425 = (1.0 - _1420) / (_1420 + 1.0);
        float _4182 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1426 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
        float _1435 = ((((1.0 - _1426) * (_1421 + 2.0)) * exp2(log2(isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0))) * (_1421 + 1.0))) + _1426) * _1350;
        float _1436 = _1318 * 0.5;
        float _1437 = _1328 * 0.5;
        float _1438 = _1338 * 0.5;
        float _1439 = dot(vec3(_1436, _1437, _1438), vec3(_1436, _1437, _1438));
        float _1444 = (_1439 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1439);
        float _1452 = (dot(vec3(_635, _636, _637), vec3(_1444 * _1436, _1444 * _1437, _1444 * _1438)) + 1.0) * 0.5;
        float _4193 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1461 = sqrt(((_1437 * _1437) + (_1436 * _1436)) + (_1438 * _1438)) / (_1351 + 9.9999997473787516355514526367188e-06);
        float _4204 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
        float _1463 = _1462 * 2.0;
        float _1467 = (1.0 - _1462) / (_1462 + 1.0);
        float _4215 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1477 = ((((1.0 - _1468) * (_1463 + 2.0)) * exp2(log2(isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))) * (_1463 + 1.0))) + _1468) * _1351;
        _1485 = _1318;
        _1486 = _1317;
        _1487 = _1316;
        _1488 = _1328;
        _1489 = _1327;
        _1490 = _1326;
        _1491 = _1338;
        _1492 = _1337;
        _1493 = _1336;
        _1494 = _1351;
        _1495 = _1350;
        _1496 = _1349;
        _1497 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0)));
        _1498 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0)));
        _1499 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0)));
    }
    else
    {
        _1485 = _1177;
        _1486 = _1177;
        _1487 = _1177;
        _1488 = _1177;
        _1489 = _1177;
        _1490 = _1177;
        _1491 = _1177;
        _1492 = _1177;
        _1493 = _1177;
        _1494 = _1177;
        _1495 = _1177;
        _1496 = _1177;
        _1497 = 0.0;
        _1498 = 0.0;
        _1499 = 0.0;
    }
    float _1509 = (cbModelParam._m0[1u].x * (_1497 - _1189)) + _1189;
    float _1510 = (cbModelParam._m0[1u].x * (_1498 - _1190)) + _1190;
    float _1511 = (cbModelParam._m0[1u].x * (_1499 - _1191)) + _1191;
    float _1532 = fma(_1511, cbSceneParam._m0[89u].z, fma(_1510, cbSceneParam._m0[89u].y, _1509 * cbSceneParam._m0[89u].x));
    float _1535 = fma(_1511, cbSceneParam._m0[90u].z, fma(_1510, cbSceneParam._m0[90u].y, _1509 * cbSceneParam._m0[90u].x));
    float _1538 = fma(_1511, cbSceneParam._m0[91u].z, fma(_1510, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1509));
    float _1553 = _811 * 0.5;
    float _1554 = _812 * 0.5;
    float _1555 = _813 * 0.5;
    float _1556 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1487, _1490, _1493, _1496));
    float _1559 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1486, _1489, _1492, _1495));
    float _1562 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1485, _1488, _1491, _1494));
    float _1596;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1569 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1176, _1180, _1183, _1186));
        float _1573 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1178, _1181, _1184, _1187));
        float _1577 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1179, _1182, _1185, _1188));
        float _1584 = dot(vec4(cbModelParam._m0[39u]), vec4(_1553, _1554, _1555, 1.0));
        _1596 = dot(vec3(isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0)), isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0)), isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1584) ? 0.0 : (isnan(0.0) ? _1584 : max(0.0, _1584))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1596 = 1.0;
    }
    float _1607;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1598 = dot(vec4(cbModelParam._m0[40u]), vec4(_1553, _1554, _1555, 1.0));
        _1607 = dot(vec3(isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)), isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)), isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1598) ? 0.0 : (isnan(0.0) ? _1598 : max(0.0, _1598))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1607 = 1.0;
    }
    float _1611 = (_1607 * cbModelParam._m0[1u].x) + (_1596 * (1.0 - cbModelParam._m0[1u].x));
    float _1621 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _638);
    float _1622 = isnan(_1621) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1621 : min(cbModelParam._m0[25u].z, _1621));
    float _1702;
    float _1704;
    float _1706;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1669 = fma(_875, cbModelParam._m0[13u].z, fma(_871, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _867)) + cbModelParam._m0[13u].w;
        float _1673 = fma(_875, cbModelParam._m0[14u].z, fma(_871, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _867)) + cbModelParam._m0[14u].w;
        float _1677 = fma(_875, cbModelParam._m0[15u].z, fma(_871, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _867)) + cbModelParam._m0[15u].w;
        float _1680 = fma(_813, cbModelParam._m0[13u].z, fma(_812, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _811));
        float _1683 = fma(_813, cbModelParam._m0[14u].z, fma(_812, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _811));
        float _1686 = fma(_813, cbModelParam._m0[15u].z, fma(_812, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _811));
        float _1714;
        if (_1680 > 0.0)
        {
            _1714 = abs((1.0 - _1669) / _1680);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1680 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1669 + 1.0) / _1680);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1714 = frontier_phi_14_12_ladder;
        }
        float _1885;
        if (_1683 > 0.0)
        {
            _1885 = abs((1.0 - _1673) / _1683);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1683 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1673 + 1.0) / _1683);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1885 = frontier_phi_23_19_ladder;
        }
        float _2181;
        if (_1686 > 0.0)
        {
            _2181 = abs((1.0 - _1677) / _1686);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1686 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1677 + 1.0) / _1686);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2181 = frontier_phi_35_30_ladder;
        }
        float _2183 = isnan(_1885) ? _1714 : (isnan(_1714) ? _1885 : min(_1714, _1885));
        float _2184 = isnan(_2181) ? _2183 : (isnan(_2183) ? _2181 : min(_2183, _2181));
        float _2188 = (_2184 * _1680) + _1669;
        float _2189 = (_2184 * _1683) + _1673;
        float _2190 = (_2184 * _1686) + _1677;
        float _2191 = _2184 * 9.9999997473787516355514526367188e-05;
        float _2193 = (-1.0) - _2191;
        float _2195 = _2191 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2190 > _2195) || ((_2190 < _2193) || ((_2189 > _2195) || ((_2189 < _2193) || ((_2188 < _2193) || (_2188 > _2195))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2335 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2190, cbModelParam._m0[9u].z, fma(_2189, cbModelParam._m0[9u].y, _2188 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2190, cbModelParam._m0[10u].z, fma(_2189, cbModelParam._m0[10u].y, _2188 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2190, cbModelParam._m0[11u].z, fma(_2189, cbModelParam._m0[11u].y, _2188 * cbModelParam._m0[11u].x))), _1622);
            frontier_phi_13_35_ladder = _2335.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2335.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2335.x * cbModelParam._m0[1u].y;
        }
        _1702 = frontier_phi_13_35_ladder_2;
        _1704 = frontier_phi_13_35_ladder_1;
        _1706 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1690 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_811, _812, _813), _1622);
        _1702 = _1690.x * cbModelParam._m0[1u].y;
        _1704 = _1690.y * cbModelParam._m0[1u].y;
        _1706 = _1690.z * cbModelParam._m0[1u].y;
    }
    float _1710 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _638);
    float _1711 = isnan(_1710) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1710 : min(cbModelParam._m0[25u].w, _1710));
    float _1800;
    float _1802;
    float _1804;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1764 = fma(_875, cbModelParam._m0[21u].z, fma(_871, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _867)) + cbModelParam._m0[21u].w;
        float _1768 = fma(_875, cbModelParam._m0[22u].z, fma(_871, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _867)) + cbModelParam._m0[22u].w;
        float _1772 = fma(_875, cbModelParam._m0[23u].z, fma(_871, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _867)) + cbModelParam._m0[23u].w;
        float _1775 = fma(_813, cbModelParam._m0[21u].z, fma(_812, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _811));
        float _1778 = fma(_813, cbModelParam._m0[22u].z, fma(_812, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _811));
        float _1781 = fma(_813, cbModelParam._m0[23u].z, fma(_812, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _811));
        float _1890;
        if (_1775 > 0.0)
        {
            _1890 = abs((1.0 - _1764) / _1775);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1775 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1764 + 1.0) / _1775);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1890 = frontier_phi_25_21_ladder;
        }
        float _2208;
        if (_1778 > 0.0)
        {
            _2208 = abs((1.0 - _1768) / _1778);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1778 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1768 + 1.0) / _1778);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2208 = frontier_phi_37_32_ladder;
        }
        float _2546;
        if (_1781 > 0.0)
        {
            _2546 = abs((1.0 - _1772) / _1781);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1781 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1772 + 1.0) / _1781);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2546 = frontier_phi_47_44_ladder;
        }
        float _2548 = isnan(_2208) ? _1890 : (isnan(_1890) ? _2208 : min(_1890, _2208));
        float _2549 = isnan(_2546) ? _2548 : (isnan(_2548) ? _2546 : min(_2548, _2546));
        float _2553 = (_2549 * _1775) + _1764;
        float _2554 = (_2549 * _1778) + _1768;
        float _2555 = (_2549 * _1781) + _1772;
        float _2556 = _2549 * 9.9999997473787516355514526367188e-05;
        float _2557 = (-1.0) - _2556;
        float _2559 = _2556 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2555 > _2559) || ((_2555 < _2557) || ((_2554 > _2559) || ((_2554 < _2557) || ((_2553 < _2557) || (_2553 > _2559))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2677 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2555, cbModelParam._m0[17u].z, fma(_2554, cbModelParam._m0[17u].y, _2553 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2555, cbModelParam._m0[18u].z, fma(_2554, cbModelParam._m0[18u].y, _2553 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2555, cbModelParam._m0[19u].z, fma(_2554, cbModelParam._m0[19u].y, _2553 * cbModelParam._m0[19u].x))), _1711);
            frontier_phi_22_47_ladder = _2677.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2677.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2677.x * cbModelParam._m0[1u].z;
        }
        _1800 = frontier_phi_22_47_ladder_2;
        _1802 = frontier_phi_22_47_ladder_1;
        _1804 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1784 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_811, _812, _813), _1711);
        _1800 = _1784.x * cbModelParam._m0[1u].z;
        _1802 = _1784.y * cbModelParam._m0[1u].z;
        _1804 = _1784.z * cbModelParam._m0[1u].z;
    }
    float _1817 = (((_838 * _787) + _839) * _803) * ((cbModelParam._m0[1u].w * (_1800 - _1702)) + _1702);
    float _1819 = (((_838 * _789) + _839) * _803) * ((cbModelParam._m0[1u].w * (_1802 - _1704)) + _1704);
    float _1821 = (((_838 * _790) + _839) * _803) * ((cbModelParam._m0[1u].w * (_1804 - _1706)) + _1706);
    float _1824 = fma(_1821, cbSceneParam._m0[89u].z, fma(_1819, cbSceneParam._m0[89u].y, _1817 * cbSceneParam._m0[89u].x));
    float _1827 = fma(_1821, cbSceneParam._m0[90u].z, fma(_1819, cbSceneParam._m0[90u].y, _1817 * cbSceneParam._m0[90u].x));
    float _1830 = fma(_1821, cbSceneParam._m0[91u].z, fma(_1819, cbSceneParam._m0[91u].y, _1817 * cbSceneParam._m0[91u].x));
    float _1864 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1868 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1872 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1876 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1877 = _1864 / _1876;
    float _1878 = _1868 / _1876;
    float _1879 = _1872 / _1876;
    float _2026;
    float _2027;
    float _2028;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1906 = ((uint(_1879 > cbSceneParam._m0[59u].y) + uint(_1879 > cbSceneParam._m0[59u].x)) + uint(_1879 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1907 = _1906 + 43u;
        uint _1915 = _1906 + 44u;
        uint _1923 = _1906 + 45u;
        uint _1931 = _1906 + 46u;
        float _1942 = fma(_1876, cbSceneParam._m0[_1907].w, fma(_1872, cbSceneParam._m0[_1907].z, fma(_1868, cbSceneParam._m0[_1907].y, _1864 * cbSceneParam._m0[_1907].x)));
        float _1946 = fma(_1876, cbSceneParam._m0[_1915].w, fma(_1872, cbSceneParam._m0[_1915].z, fma(_1868, cbSceneParam._m0[_1915].y, _1864 * cbSceneParam._m0[_1915].x)));
        float _1954 = fma(_1876, cbSceneParam._m0[_1931].w, fma(_1872, cbSceneParam._m0[_1931].z, fma(_1868, cbSceneParam._m0[_1931].y, _1864 * cbSceneParam._m0[_1931].x)));
        float _1959 = cbSceneParam._m0[33u].z * _1954;
        float _1961 = cbSceneParam._m0[33u].w * _1954;
        float _1964 = fma(_1876, cbSceneParam._m0[_1923].w, fma(_1872, cbSceneParam._m0[_1923].z, fma(_1868, cbSceneParam._m0[_1923].y, _1864 * cbSceneParam._m0[_1923].x))) / _1954;
        float _2012 = (cbSceneParam._m0[33u].x - sqrt(((_1878 * _1878) + (_1877 * _1877)) + (_1879 * _1879))) * cbSceneParam._m0[33u].y;
        float _4341 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0));
        float _2019 = (isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1959 + _1942) / _1954, (_1961 + _1946) / _1954), _1964), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1961 + _1942) / _1954, (_1946 - _1959) / _1954), _1964), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1942 - _1959) / _1954, (_1946 - _1961) / _1954), _1964), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1942 - _1961) / _1954, (_1959 + _1946) / _1954), _1964), 0.0)).x), vec4(0.25)));
        _2026 = 1.0 - (_2019 * cbSceneParam._m0[34u].x);
        _2027 = 1.0 - (_2019 * cbSceneParam._m0[34u].y);
        _2028 = 1.0 - (_2019 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2026 = 1.0;
        _2027 = 1.0;
        _2028 = 1.0;
    }
    float _2092;
    float _2094;
    float _2096;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2080 = fma(_1876, cbSceneParam._m0[63u].w, fma(_1872, cbSceneParam._m0[63u].z, fma(_1868, cbSceneParam._m0[63u].y, _1864 * cbSceneParam._m0[63u].x)));
        float _2081 = fma(_1876, cbSceneParam._m0[60u].w, fma(_1872, cbSceneParam._m0[60u].z, fma(_1868, cbSceneParam._m0[60u].y, _1864 * cbSceneParam._m0[60u].x))) / _2080;
        float _2082 = fma(_1876, cbSceneParam._m0[61u].w, fma(_1872, cbSceneParam._m0[61u].z, fma(_1868, cbSceneParam._m0[61u].y, _1864 * cbSceneParam._m0[61u].x))) / _2080;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2081 >= cbSceneParam._m0[64u].x) && (_2082 >= cbSceneParam._m0[64u].y)) && (_2081 <= cbSceneParam._m0[64u].z)) && (_2082 <= cbSceneParam._m0[64u].w))
        {
            float _2221 = fma(_1876, cbSceneParam._m0[62u].w, fma(_1872, cbSceneParam._m0[62u].z, fma(_1868, cbSceneParam._m0[62u].y, _1864 * cbSceneParam._m0[62u].x))) / _2080;
            float _2225 = isnan(cbSceneParam._m0[41u].w) ? _2221 : (isnan(_2221) ? cbSceneParam._m0[41u].w : max(_2221, cbSceneParam._m0[41u].w));
            float _2268 = (cbSceneParam._m0[33u].x - sqrt(((_1878 * _1878) + (_1877 * _1877)) + (_1879 * _1879))) * cbSceneParam._m0[33u].y;
            float _4357 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
            float _2275 = (isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2081, cbSceneParam._m0[33u].w + _2082), _2225), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2081, _2082 - cbSceneParam._m0[33u].z), _2225), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2081 - cbSceneParam._m0[33u].z, _2082 - cbSceneParam._m0[33u].w), _2225), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2081 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2082), _2225), 0.0)).x), vec4(0.25)));
            float _2279 = 1.0 - (_2275 * cbSceneParam._m0[34u].x);
            float _2280 = 1.0 - (_2275 * cbSceneParam._m0[34u].y);
            float _2281 = 1.0 - (_2275 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2281) ? _2028 : (isnan(_2028) ? _2281 : min(_2028, _2281));
            frontier_phi_34_33_ladder_1 = isnan(_2280) ? _2027 : (isnan(_2027) ? _2280 : min(_2027, _2280));
            frontier_phi_34_33_ladder_2 = isnan(_2279) ? _2026 : (isnan(_2026) ? _2279 : min(_2026, _2279));
        }
        else
        {
            frontier_phi_34_33_ladder = _2028;
            frontier_phi_34_33_ladder_1 = _2027;
            frontier_phi_34_33_ladder_2 = _2026;
        }
        _2092 = frontier_phi_34_33_ladder_2;
        _2094 = frontier_phi_34_33_ladder_1;
        _2096 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2092 = _2026;
        _2094 = _2027;
        _2096 = _2028;
    }
    uvec4 _2101 = floatBitsToUint(cbInstanceData._m0[_241 + 5u]);
    uint _2103 = _2101.x * 14u;
    uint _2104 = _2103 + 13u;
    float _2111 = _803 + (-1.0);
    float _2116 = (cbLight._m0[_2104].x * _2111) + 1.0;
    float _2117 = (cbLight._m0[_2104].y * _2111) + 1.0;
    float _2118 = (cbLight._m0[_2104].z * _2111) + 1.0;
    float _2119 = (cbLight._m0[_2104].w * _2111) + 1.0;
    uint _2120 = _2103 + 5u;
    float _2126 = isnan(1.0) ? _2117 : (isnan(_2117) ? 1.0 : min(_2117, 1.0));
    uint _2130 = _2103 + 4u;
    float _2140 = isnan(1.0) ? _2116 : (isnan(_2116) ? 1.0 : min(_2116, 1.0));
    uint _2144 = _2103 | 1u;
    float _2155 = dot(vec3(cbLight._m0[_2103].xyz), vec3(_635, _636, _637));
    float _2158 = dot(vec3(cbLight._m0[_2144].xyz), vec3(_635, _636, _637));
    float _4393 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _4404 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _2163 = (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * 0.3183098733425140380859375;
    float _2165 = (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * 0.3183098733425140380859375;
    float _2172 = ((cbLight._m0[_2120].x * _2126) * _2165) + (((cbLight._m0[_2130].x * _2092) * _2140) * _2163);
    float _2173 = ((_2126 * cbLight._m0[_2120].y) * _2165) + (((cbLight._m0[_2130].y * _2094) * _2140) * _2163);
    float _2174 = ((_2126 * cbLight._m0[_2120].z) * _2165) + (((cbLight._m0[_2130].z * _2096) * _2140) * _2163);
    uvec4 _2178 = floatBitsToUint(cbLight._m0[_2103 + 12u]);
    bool _2180 = _2178.x == 0u;
    float _2282;
    float _2284;
    float _2286;
    if (_2180)
    {
        _2282 = _2172;
        _2284 = _2173;
        _2286 = _2174;
    }
    else
    {
        uint _2290 = _2103 + 6u;
        float _2306 = (dot(vec3(cbLight._m0[_2103 + 2u].xyz), vec3(_635, _636, _637)) * 0.5) + 0.5;
        float _2307 = _2306 * _2306;
        float _4415 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
        float _2308 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _2309 = isnan(1.0) ? _2118 : (isnan(_2118) ? 1.0 : min(_2118, 1.0));
        _2282 = (((cbLight._m0[_2290].x * 0.3183098733425140380859375) * _2308) * _2309) + _2172;
        _2284 = (((cbLight._m0[_2290].y * 0.3183098733425140380859375) * _2308) * _2309) + _2173;
        _2286 = (((cbLight._m0[_2290].z * 0.3183098733425140380859375) * _2308) * _2309) + _2174;
    }
    bool _2289 = _2178.y == 0u;
    float _2344;
    float _2346;
    float _2348;
    if (_2289)
    {
        _2344 = _2282;
        _2346 = _2284;
        _2348 = _2286;
    }
    else
    {
        uint _2517 = _2103 + 7u;
        float _2533 = (dot(vec3(cbLight._m0[_2103 + 3u].xyz), vec3(_635, _636, _637)) * 0.5) + 0.5;
        float _2534 = _2533 * _2533;
        float _4431 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
        float _2535 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
        float _2536 = isnan(1.0) ? _2119 : (isnan(_2119) ? 1.0 : min(_2119, 1.0));
        _2344 = (((cbLight._m0[_2517].x * 0.3183098733425140380859375) * _2535) * _2536) + _2282;
        _2346 = (((cbLight._m0[_2517].y * 0.3183098733425140380859375) * _2535) * _2536) + _2284;
        _2348 = (((cbLight._m0[_2517].z * 0.3183098733425140380859375) * _2535) * _2536) + _2286;
    }
    uint _2351 = _2103 + 8u;
    float _2364 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2103].w)) * _638) * 0.949999988079071044921875);
    float _2365 = _2364 * _2364;
    float _2366 = cbLight._m0[_2103].x + _714;
    float _2367 = cbLight._m0[_2103].y + _715;
    float _2368 = cbLight._m0[_2103].z + _716;
    float _2372 = inversesqrt(dot(vec3(_2366, _2367, _2368), vec3(_2366, _2367, _2368)));
    float _2373 = _2372 * _2366;
    float _2374 = _2372 * _2367;
    float _2375 = _2372 * _2368;
    float _2376 = dot(vec3(_635, _636, _637), vec3(cbLight._m0[_2103].xyz));
    float _4447 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2379 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
    float _4458 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _2380 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
    float _2381 = dot(vec3(_635, _636, _637), vec3(_2373, _2374, _2375));
    float _4469 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
    float _2384 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
    float _2385 = dot(vec3(cbLight._m0[_2103].xyz), vec3(_2373, _2374, _2375));
    float _4480 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
    float _2389 = _2365 * _2365;
    float _2393 = ((_2384 * _2384) * (_2389 + (-1.0))) + 1.0;
    float _2401 = exp2(log2(1.0 - (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0)))) * 5.0);
    float _2402 = 0.959999978542327880859375 - _784;
    float _2404 = 0.959999978542327880859375 - _785;
    float _2405 = 0.959999978542327880859375 - _786;
    float _2412 = 1.0 - _2365;
    float _2423 = (0.5 / (((_2380 * ((_2379 * _2412) + _2365)) + 9.9999999392252902907785028219223e-09) + (((_2380 * _2412) + _2365) * _2379))) * _2379;
    float _4491 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2425 = (isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0))) * (_2389 / ((_2393 * _2393) * 3.141590118408203125));
    uint _2439 = _2103 + 9u;
    float _2450 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2144].w)) * _638) * 0.949999988079071044921875);
    float _2451 = _2450 * _2450;
    float _2452 = cbLight._m0[_2144].x + _714;
    float _2453 = cbLight._m0[_2144].y + _715;
    float _2454 = cbLight._m0[_2144].z + _716;
    float _2458 = inversesqrt(dot(vec3(_2452, _2453, _2454), vec3(_2452, _2453, _2454)));
    float _2459 = _2458 * _2452;
    float _2460 = _2458 * _2453;
    float _2461 = _2458 * _2454;
    float _2462 = dot(vec3(_635, _636, _637), vec3(cbLight._m0[_2144].xyz));
    float _4502 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2465 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
    float _2466 = dot(vec3(_635, _636, _637), vec3(_2459, _2460, _2461));
    float _4513 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
    float _2469 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
    float _2470 = dot(vec3(cbLight._m0[_2144].xyz), vec3(_2459, _2460, _2461));
    float _4524 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0));
    float _2474 = _2451 * _2451;
    float _2478 = ((_2469 * _2469) * (_2474 + (-1.0))) + 1.0;
    float _2485 = exp2(log2(1.0 - (isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0)))) * 5.0);
    float _2492 = 1.0 - _2451;
    float _2502 = (0.5 / (((_2380 * ((_2465 * _2492) + _2451)) + 9.9999999392252902907785028219223e-09) + (((_2380 * _2492) + _2451) * _2465))) * _2465;
    float _4535 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _2504 = (isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0))) * (_2474 / ((_2478 * _2478) * 3.141590118408203125));
    float _2514 = (((((_2485 * _2402) + _787) * cbLight._m0[_2439].x) * _2504) * _2126) + ((((cbLight._m0[_2351].x * _2092) * ((_2401 * _2402) + _787)) * _2425) * _2140);
    float _2515 = (((((_2485 * _2404) + _789) * cbLight._m0[_2439].y) * _2504) * _2126) + ((((cbLight._m0[_2351].y * _2094) * ((_2401 * _2404) + _789)) * _2425) * _2140);
    float _2516 = (((((_2485 * _2405) + _790) * cbLight._m0[_2439].z) * _2504) * _2126) + ((((cbLight._m0[_2351].z * _2096) * ((_2401 * _2405) + _790)) * _2425) * _2140);
    float _2572;
    float _2574;
    float _2576;
    if (_2180)
    {
        _2572 = _2514;
        _2574 = _2515;
        _2576 = _2516;
    }
    else
    {
        uint _2578 = _2103 + 2u;
        uint _2582 = _2103 + 10u;
        float _2596 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2578].w)) * _638) * 0.949999988079071044921875);
        float _2597 = _2596 * _2596;
        float _2598 = cbLight._m0[_2578].x + _714;
        float _2599 = cbLight._m0[_2578].y + _715;
        float _2600 = cbLight._m0[_2578].z + _716;
        float _2604 = inversesqrt(dot(vec3(_2598, _2599, _2600), vec3(_2598, _2599, _2600)));
        float _2605 = _2604 * _2598;
        float _2606 = _2604 * _2599;
        float _2607 = _2604 * _2600;
        float _2608 = dot(vec3(_635, _636, _637), vec3(cbLight._m0[_2578].xyz));
        float _4546 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
        float _2611 = isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0));
        float _2612 = dot(vec3(_635, _636, _637), vec3(_2605, _2606, _2607));
        float _4557 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0));
        float _2615 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
        float _2616 = dot(vec3(cbLight._m0[_2578].xyz), vec3(_2605, _2606, _2607));
        float _4568 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
        float _2620 = _2597 * _2597;
        float _2624 = ((_2615 * _2615) * (_2620 + (-1.0))) + 1.0;
        float _2631 = exp2(log2(1.0 - (isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0)))) * 5.0);
        float _2638 = 1.0 - _2597;
        float _2648 = (0.5 / (((_2380 * ((_2611 * _2638) + _2597)) + 9.9999999392252902907785028219223e-09) + (((_2380 * _2638) + _2597) * _2611))) * _2611;
        float _4579 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
        float _2650 = (isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))) * (_2620 / ((_2624 * _2624) * 3.141590118408203125));
        float _2651 = isnan(1.0) ? _2118 : (isnan(_2118) ? 1.0 : min(_2118, 1.0));
        _2572 = (((((_2631 * _2402) + _787) * cbLight._m0[_2582].x) * _2650) * _2651) + _2514;
        _2574 = (((((_2631 * _2404) + _789) * cbLight._m0[_2582].y) * _2650) * _2651) + _2515;
        _2576 = (((((_2631 * _2405) + _790) * cbLight._m0[_2582].z) * _2650) * _2651) + _2516;
    }
    float _2682;
    float _2684;
    float _2686;
    if (_2289)
    {
        _2682 = _2572;
        _2684 = _2574;
        _2686 = _2576;
    }
    else
    {
        uint _2693 = _2103 + 3u;
        uint _2697 = _2103 + 11u;
        float _2711 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2693].w)) * _638) * 0.949999988079071044921875);
        float _2712 = _2711 * _2711;
        float _2713 = cbLight._m0[_2693].x + _714;
        float _2714 = cbLight._m0[_2693].y + _715;
        float _2715 = cbLight._m0[_2693].z + _716;
        float _2719 = inversesqrt(dot(vec3(_2713, _2714, _2715), vec3(_2713, _2714, _2715)));
        float _2720 = _2719 * _2713;
        float _2721 = _2719 * _2714;
        float _2722 = _2719 * _2715;
        float _2723 = dot(vec3(_635, _636, _637), vec3(cbLight._m0[_2693].xyz));
        float _4595 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0));
        float _2726 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _2727 = dot(vec3(_635, _636, _637), vec3(_2720, _2721, _2722));
        float _4606 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2730 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
        float _2731 = dot(vec3(cbLight._m0[_2693].xyz), vec3(_2720, _2721, _2722));
        float _4617 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2735 = _2712 * _2712;
        float _2739 = ((_2730 * _2730) * (_2735 + (-1.0))) + 1.0;
        float _2746 = exp2(log2(1.0 - (isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0)))) * 5.0);
        float _2753 = 1.0 - _2712;
        float _2763 = (0.5 / (((_2380 * ((_2726 * _2753) + _2712)) + 9.9999999392252902907785028219223e-09) + (((_2380 * _2753) + _2712) * _2726))) * _2726;
        float _4628 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
        float _2765 = (isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0))) * (_2735 / ((_2739 * _2739) * 3.141590118408203125));
        float _2766 = isnan(1.0) ? _2119 : (isnan(_2119) ? 1.0 : min(_2119, 1.0));
        _2682 = (((((_2746 * _2402) + _787) * cbLight._m0[_2697].x) * _2765) * _2766) + _2572;
        _2684 = (((((_2746 * _2404) + _789) * cbLight._m0[_2697].y) * _2765) * _2766) + _2574;
        _2686 = (((((_2746 * _2405) + _790) * cbLight._m0[_2697].z) * _2765) * _2766) + _2576;
    }
    float _2832;
    float _2834;
    float _2836;
    float _2838;
    float _2840;
    float _2842;
    if (_2101.y == 0u)
    {
        uvec4 _2787 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2788 = _2787.x;
        uint _2799 = uint((float(_2787.y) * floor(float(uint(cbSceneParam._m0[85u].y * _723) / _2788))) + floor(float(uint(cbSceneParam._m0[85u].x * _722) / _2788)));
        float _2809 = (log2(_1879 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2810 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        uint _2813 = uint(isnan(14.0) ? _2810 : (isnan(_2810) ? 14.0 : min(_2810, 14.0)));
        uvec4 _2818 = texelFetch(g_lightClusterGridBuffer, int(((_2813 << 2u) + (_2799 << 6u)) >> 2u));
        uint _2819 = _2818.x;
        uint _2820 = _2787.z;
        float _2899;
        float _2901;
        float _2903;
        float _2905;
        float _2907;
        float _2909;
        if (((((1u << ((_2820 >> 4u) & 15u)) + 4294967295u) & _2819) == 0u) || ((_2820 & 240u) == 0u))
        {
            _2899 = 0.0;
            _2901 = 0.0;
            _2903 = 0.0;
            _2905 = 0.0;
            _2907 = 0.0;
            _2909 = 0.0;
        }
        else
        {
            float _2900;
            float _2902;
            float _2904;
            float _2906;
            float _2908;
            float _2910;
            float _3043 = 0.0;
            float _3044 = 0.0;
            float _3045 = 0.0;
            float _3046 = 0.0;
            float _3047 = 0.0;
            float _3048 = 0.0;
            uint _3049 = 0u;
            uint _3058;
            bool _3059;
            for (;;)
            {
                _3058 = texelFetch(g_lightClassification, int((((_2813 << 5u) + (_2799 << 9u)) + (_3049 << 2u)) >> 2u)).x;
                _3059 = _3058 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3059)
                {
                    frontier_phi_66_pred = _3048;
                    frontier_phi_66_pred_1 = _3047;
                    frontier_phi_66_pred_2 = _3046;
                    frontier_phi_66_pred_3 = _3045;
                    frontier_phi_66_pred_4 = _3044;
                    frontier_phi_66_pred_5 = _3043;
                }
                else
                {
                    float _3167;
                    float _3168;
                    float _3169;
                    float _3170;
                    float _3171;
                    float _3172;
                    uint _3173;
                    _3167 = _3043;
                    _3168 = _3044;
                    _3169 = _3045;
                    _3170 = _3046;
                    _3171 = _3047;
                    _3172 = _3048;
                    _3173 = _3058;
                    float _3099;
                    float _3100;
                    float _3101;
                    float _3102;
                    float _3103;
                    float _3104;
                    for (;;)
                    {
                        uint _3177 = uint(findLSB(_3173)) + (_3049 << 5u);
                        uint _3174 = (_3173 + 4294967295u) & _3173;
                        uint _3179 = _3177 * 48u;
                        vec4 _3193 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3179)).x, texelFetch(g_PointLightRenderingBuffer, int(_3179 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3179 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3179 + 3u)).x));
                        uint _3199 = (_3177 * 48u) + 4u;
                        vec4 _3212 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3199)).x, texelFetch(g_PointLightRenderingBuffer, int(_3199 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3199 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3199 + 3u)).x));
                        uint _3218 = (_3177 * 48u) + 8u;
                        vec3 _3229 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3218)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 2u)).x));
                        float _3233 = _3193.x - _1877;
                        float _3234 = _3193.y - _1878;
                        float _3235 = _3193.z - _1879;
                        float _3236 = dot(vec3(_3233, _3234, _3235), vec3(_3233, _3234, _3235));
                        float _3239 = inversesqrt(_3236);
                        float _3240 = _3239 * _3233;
                        float _3241 = _3239 * _3234;
                        float _3242 = _3239 * _3235;
                        float _3243 = dot(vec3(_744, _747, _750), vec3(_3240, _3241, _3242));
                        float _3248 = 1.0 - (_3236 * _3193.w);
                        float _4654 = isnan(0.0) ? _3248 : (isnan(_3248) ? 0.0 : max(_3248, 0.0));
                        float _3249 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
                        float _3250 = sqrt(_3236) * _3212.w;
                        float _3253 = 1.39999997615814208984375 / (_3250 + 1.39999997615814208984375);
                        float _3254 = _3253 * _3253;
                        float _3257 = ((1.0 - _3254) * _3243) + _3254;
                        float _3260 = _3250 * _3250;
                        float _3264 = ((isnan(0.0) ? _3257 : (isnan(_3257) ? 0.0 : max(_3257, 0.0))) * _3249) / ((_3260 * 0.699999988079071044921875) + 1.0);
                        float _3268 = (-0.0) - _1877;
                        float _3269 = (-0.0) - _1878;
                        float _3270 = (-0.0) - _1879;
                        float _3274 = inversesqrt(dot(vec3(_3268, _3269, _3270), vec3(_3268, _3269, _3270)));
                        float _3275 = _3274 * _3268;
                        float _3276 = _3274 * _3269;
                        float _3277 = _3274 * _3270;
                        float _3284 = exp2(log2(1.0 / ((_3260 * 3.5) + 5.0)) * 0.25);
                        float _3285 = 1.0 - _819;
                        float _3292 = sqrt(1.0 - ((1.0 - (_3285 * _3285)) * (1.0 - (_3284 * _3284))));
                        float _3293 = _3292 * _3292;
                        float _3294 = _3293 * _3293;
                        float _3295 = _3275 + _3240;
                        float _3296 = _3276 + _3241;
                        float _3297 = _3277 + _3242;
                        float _3301 = inversesqrt(dot(vec3(_3295, _3296, _3297), vec3(_3295, _3296, _3297)));
                        float _3305 = dot(vec3(_744, _747, _750), vec3(_3275, _3276, _3277));
                        float _4670 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                        float _3308 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
                        float _3309 = dot(vec3(_744, _747, _750), vec3(_3301 * _3295, _3301 * _3296, _3301 * _3297));
                        float _4681 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                        float _3312 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
                        float _3316 = ((_3312 * _3312) * (_3294 + (-1.0))) + 1.0;
                        float _3317 = _3253 * _3293;
                        float _3318 = _3317 * _3317;
                        float _3321 = ((1.0 - _3318) * _3243) + _3318;
                        float _4692 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0));
                        float _3322 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
                        float _3323 = 1.0 - _3293;
                        float _3333 = (0.5 / (((_3322 * ((_3308 * _3323) + _3293)) + 9.9999999392252902907785028219223e-09) + (((_3322 * _3323) + _3293) * _3308))) * _3322;
                        float _4703 = isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : max(_3333, 0.0));
                        float _3344 = (((_3294 * 3.1415927410125732421875) * (isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0)))) / ((_3316 * _3316) * ((_3260 * 2.1991131305694580078125) + 3.141590118408203125))) * _3249;
                        _3102 = (_3264 * _3212.x) + _3170;
                        _3103 = (_3264 * _3212.y) + _3171;
                        _3104 = (_3264 * _3212.z) + _3172;
                        _3099 = (_3344 * _3229.x) + _3167;
                        _3100 = (_3344 * _3229.y) + _3168;
                        _3101 = (_3344 * _3229.z) + _3169;
                        if (_3174 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3167 = _3099;
                            _3168 = _3100;
                            _3169 = _3101;
                            _3170 = _3102;
                            _3171 = _3103;
                            _3172 = _3104;
                            _3173 = _3174;
                        }
                    }
                    frontier_phi_66_pred = _3104;
                    frontier_phi_66_pred_1 = _3103;
                    frontier_phi_66_pred_2 = _3102;
                    frontier_phi_66_pred_3 = _3101;
                    frontier_phi_66_pred_4 = _3100;
                    frontier_phi_66_pred_5 = _3099;
                }
                _2910 = frontier_phi_66_pred;
                _2908 = frontier_phi_66_pred_1;
                _2906 = frontier_phi_66_pred_2;
                _2904 = frontier_phi_66_pred_3;
                _2902 = frontier_phi_66_pred_4;
                _2900 = frontier_phi_66_pred_5;
                uint _3050 = _3049 + 1u;
                if (_3050 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3043 = _2900;
                    _3044 = _2902;
                    _3045 = _2904;
                    _3046 = _2906;
                    _3047 = _2908;
                    _3048 = _2910;
                    _3049 = _3050;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2899 = _2900;
            _2901 = _2902;
            _2903 = _2904;
            _2905 = _2906;
            _2907 = _2908;
            _2909 = _2910;
        }
        uvec4 _2913 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2914 = _2913.z;
        uint _2916 = (_2914 >> 8u) & 15u;
        float _3011;
        float _3013;
        float _3015;
        float _3017;
        float _3019;
        float _3021;
        if (((4294967295u << _2916) & _2819) == 0u)
        {
            _3011 = _2899;
            _3013 = _2901;
            _3015 = _2903;
            _3017 = _2905;
            _3019 = _2907;
            _3021 = _2909;
        }
        else
        {
            float _3036 = inversesqrt(dot(vec3(_1877, _1878, _1879), vec3(_1877, _1878, _1879)));
            float _3037 = _3036 * _1877;
            float _3038 = _3036 * _1878;
            float _3039 = _3036 * _1879;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2916 < ((_2914 >> 12u) & 15u))
            {
                float _3012;
                float _3014;
                float _3016;
                float _3018;
                float _3020;
                float _3022;
                float _3150 = _2899;
                float _3151 = _2901;
                float _3152 = _2903;
                float _3153 = _2905;
                float _3154 = _2907;
                float _3155 = _2909;
                uint _3156 = _2916;
                uint _3165;
                bool _3166;
                for (;;)
                {
                    _3165 = texelFetch(g_lightClassification, int((((_2813 << 5u) + (_2799 << 9u)) + (_3156 << 2u)) >> 2u)).x;
                    _3166 = _3165 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3166)
                    {
                        frontier_phi_72_pred = _3155;
                        frontier_phi_72_pred_1 = _3154;
                        frontier_phi_72_pred_2 = _3153;
                        frontier_phi_72_pred_3 = _3152;
                        frontier_phi_72_pred_4 = _3151;
                        frontier_phi_72_pred_5 = _3150;
                    }
                    else
                    {
                        float _3349;
                        float _3350;
                        float _3351;
                        float _3352;
                        float _3353;
                        float _3354;
                        float _3644;
                        float _3645;
                        float _3646;
                        float _3647;
                        float _3648;
                        float _3649;
                        float _3362 = _3150;
                        float _3363 = _3151;
                        float _3364 = _3152;
                        float _3365 = _3153;
                        float _3366 = _3154;
                        float _3367 = _3155;
                        uint _3368 = _3165;
                        uint _3369;
                        vec4 _3394;
                        float _3395;
                        vec4 _3410;
                        vec3 _3422;
                        vec4 _3438;
                        vec4 _3454;
                        float _3500;
                        bool _3501;
                        for (;;)
                        {
                            uint _3379 = ((_3156 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3368));
                            _3369 = (_3368 + 4294967295u) & _3368;
                            uint _3381 = _3379 * 40u;
                            _3394 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3381)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3381 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3381 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3381 + 3u)).x));
                            _3395 = _3394.w;
                            uint _3397 = (_3379 * 40u) + 4u;
                            _3410 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3397)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 3u)).x));
                            uint _3412 = (_3379 * 40u) + 8u;
                            _3422 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3412)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3412 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3412 + 2u)).x));
                            uint _3425 = (_3379 * 40u) + 16u;
                            _3438 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3425)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 3u)).x));
                            uint _3441 = (_3379 * 40u) + 20u;
                            _3454 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3441)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 3u)).x));
                            uint _3456 = (_3379 * 40u) + 24u;
                            vec4 _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            uint _3475 = (_3379 * 40u) + 28u;
                            vec4 _3488 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3475)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 3u)).x));
                            _3500 = fma(_1879, _3488.z, fma(_1878, _3488.y, _3488.x * _1877)) + _3488.w;
                            _3501 = !((fma(_1879, _3469.z, fma(_1878, _3469.y, _3469.x * _1877)) + _3469.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3501)
                            {
                                float _3528 = _3394.x - _1877;
                                float _3529 = _3394.y - _1878;
                                float _3530 = _3394.z - _1879;
                                float _3531 = dot(vec3(_3528, _3529, _3530), vec3(_3528, _3529, _3530));
                                float _3534 = inversesqrt(_3531);
                                float _3535 = _3534 * _3528;
                                float _3536 = _3534 * _3529;
                                float _3537 = _3534 * _3530;
                                float _3541 = 1.0 - (_3531 / (_3395 * _3395));
                                float _4714 = isnan(0.0) ? _3541 : (isnan(_3541) ? 0.0 : max(_3541, 0.0));
                                float _3542 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
                                float _3546 = sqrt(_3531) * _3410.w;
                                float _3548 = 1.39999997615814208984375 / (_3546 + 1.39999997615814208984375);
                                float _3549 = _3548 * _3548;
                                float _3552 = ((1.0 - _3549) * dot(vec3(_3535, _3536, _3537), vec3(_744, _747, _750))) + _3549;
                                float _3555 = _3546 * _3546;
                                float _3559 = (fma(_1879, _3438.z, fma(_1878, _3438.y, _3438.x * _1877)) + _3438.w) / _3500;
                                float _3560 = (fma(_1879, _3454.z, fma(_1878, _3454.y, _3454.x * _1877)) + _3454.w) / _3500;
                                float _3564 = 1.0 - dot(vec2(_3559, _3560), vec2(_3559, _3560));
                                float _4730 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                                float _3565 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                                float _3566 = _3565 * (((isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0))) * _3542) / ((_3555 * 0.699999988079071044921875) + 1.0));
                                float _3578 = exp2(log2(1.0 / ((_3555 * 3.5) + 5.0)) * 0.25);
                                float _3579 = 1.0 - _819;
                                float _3586 = sqrt(1.0 - ((1.0 - (_3579 * _3579)) * (1.0 - (_3578 * _3578))));
                                float _3587 = _3586 * _3586;
                                float _3588 = _3587 * _3587;
                                float _3589 = _3535 - _3037;
                                float _3590 = _3536 - _3038;
                                float _3591 = _3537 - _3039;
                                float _3595 = inversesqrt(dot(vec3(_3589, _3590, _3591), vec3(_3589, _3590, _3591)));
                                float _3599 = dot(vec3(_744, _747, _750), vec3((-0.0) - _3037, (-0.0) - _3038, (-0.0) - _3039));
                                float _4741 = isnan(0.0) ? _3599 : (isnan(_3599) ? 0.0 : max(_3599, 0.0));
                                float _3602 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                                float _3603 = dot(vec3(_744, _747, _750), vec3(_3595 * _3589, _3595 * _3590, _3595 * _3591));
                                float _4752 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3606 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
                                float _3610 = ((_3606 * _3606) * (_3588 + (-1.0))) + 1.0;
                                float _3611 = _3548 * _3587;
                                float _3612 = _3611 * _3611;
                                float _3618 = ((1.0 - _3612) * dot(vec3(_744, _747, _750), vec3(_3535, _3536, _3537))) + _3612;
                                float _4763 = isnan(0.0) ? _3618 : (isnan(_3618) ? 0.0 : max(_3618, 0.0));
                                float _3619 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
                                float _3620 = 1.0 - _3587;
                                float _3630 = (0.5 / (((_3619 * ((_3602 * _3620) + _3587)) + 9.9999999392252902907785028219223e-09) + (((_3619 * _3620) + _3587) * _3602))) * _3619;
                                float _4774 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                                float _3640 = (_3565 * _3542) * (((_3588 * 3.1415927410125732421875) * (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0)))) / ((_3610 * _3610) * ((_3555 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3566 * _3410.y;
                                frontier_phi_78_pred_1 = _3566 * _3410.x;
                                frontier_phi_78_pred_2 = _3640 * _3422.z;
                                frontier_phi_78_pred_3 = _3640 * _3422.y;
                                frontier_phi_78_pred_4 = _3640 * _3422.x;
                                frontier_phi_78_pred_5 = _3566 * _3410.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3648 = frontier_phi_78_pred;
                            _3647 = frontier_phi_78_pred_1;
                            _3646 = frontier_phi_78_pred_2;
                            _3645 = frontier_phi_78_pred_3;
                            _3644 = frontier_phi_78_pred_4;
                            _3649 = frontier_phi_78_pred_5;
                            _3352 = _3647 + _3365;
                            _3353 = _3648 + _3366;
                            _3354 = _3649 + _3367;
                            _3349 = _3644 + _3362;
                            _3350 = _3645 + _3363;
                            _3351 = _3646 + _3364;
                            if (_3369 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3362 = _3349;
                                _3363 = _3350;
                                _3364 = _3351;
                                _3365 = _3352;
                                _3366 = _3353;
                                _3367 = _3354;
                                _3368 = _3369;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3354;
                        frontier_phi_72_pred_1 = _3353;
                        frontier_phi_72_pred_2 = _3352;
                        frontier_phi_72_pred_3 = _3351;
                        frontier_phi_72_pred_4 = _3350;
                        frontier_phi_72_pred_5 = _3349;
                    }
                    _3022 = frontier_phi_72_pred;
                    _3020 = frontier_phi_72_pred_1;
                    _3018 = frontier_phi_72_pred_2;
                    _3016 = frontier_phi_72_pred_3;
                    _3014 = frontier_phi_72_pred_4;
                    _3012 = frontier_phi_72_pred_5;
                    uint _3157 = _3156 + 1u;
                    if (_3157 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3150 = _3012;
                        _3151 = _3014;
                        _3152 = _3016;
                        _3153 = _3018;
                        _3154 = _3020;
                        _3155 = _3022;
                        _3156 = _3157;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3022;
                frontier_phi_60_61_ladder_1 = _3020;
                frontier_phi_60_61_ladder_2 = _3016;
                frontier_phi_60_61_ladder_3 = _3014;
                frontier_phi_60_61_ladder_4 = _3012;
                frontier_phi_60_61_ladder_5 = _3018;
            }
            else
            {
                frontier_phi_60_61_ladder = _2909;
                frontier_phi_60_61_ladder_1 = _2907;
                frontier_phi_60_61_ladder_2 = _2903;
                frontier_phi_60_61_ladder_3 = _2901;
                frontier_phi_60_61_ladder_4 = _2899;
                frontier_phi_60_61_ladder_5 = _2905;
            }
            _3011 = frontier_phi_60_61_ladder_4;
            _3013 = frontier_phi_60_61_ladder_3;
            _3015 = frontier_phi_60_61_ladder_2;
            _3017 = frontier_phi_60_61_ladder_5;
            _3019 = frontier_phi_60_61_ladder_1;
            _3021 = frontier_phi_60_61_ladder;
        }
        float _3026 = isnan(1.0) ? _803 : (isnan(_803) ? 1.0 : min(_803, 1.0));
        _2832 = (_3026 * _3017) + _2344;
        _2834 = (_3026 * _3019) + _2346;
        _2836 = (_3026 * _3021) + _2348;
        _2838 = ((_3011 * _787) * _3026) + _2682;
        _2840 = ((_3013 * _789) * _3026) + _2684;
        _2842 = ((_3015 * _790) * _3026) + _2686;
    }
    else
    {
        _2832 = _2344;
        _2834 = _2346;
        _2836 = _2348;
        _2838 = _2682;
        _2840 = _2684;
        _2842 = _2686;
    }
    float _4790 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _4801 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _4812 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    uint _2862 = _241 + 6u;
    float _2870 = _722 / cbSceneParam._m0[86u].x;
    float _2871 = _723 / cbSceneParam._m0[86u].y;
    vec4 _2885 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2870, _2871, (log2((isnan(cbSceneParam._m0[77u].w) ? _657 : (isnan(_657) ? cbSceneParam._m0[77u].w : min(_657, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2887 = _2885.x;
    float _2888 = _2885.y;
    float _2889 = _2885.z;
    float _2890 = _2885.w;
    float _2961;
    float _2963;
    float _2965;
    float _2967;
    if (_657 > cbSceneParam._m0[78u].w)
    {
        float _2924 = isnan(_657) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _657 : min(cbSceneParam._m0[80u].w, _657));
        float _2925 = _2924 / _657;
        float _2936 = _2925 * _707;
        float _2937 = _708 * _2925;
        float _2938 = (-0.0) - _2937;
        float _2939 = _2925 * _709;
        float _2941 = (cbSceneParam._m0[77u].w * _2938) / _2924;
        float _2942 = _2941 + cbSceneParam._m0[79u].w;
        float _2943 = cbSceneParam._m0[79u].w - _2937;
        float _2949 = sqrt(((_2936 * _2936) + (_2937 * _2937)) + (_2939 * _2939));
        float _2952 = (1.0 - (cbSceneParam._m0[77u].w / _2924)) * _2949;
        float _2957 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2959 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3112;
        if (abs((_2938 - _2941) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3112 = ((((_2942 > 0.0) ? exp2(_2957 * _2942) : (2.0 - exp2(_2959 * _2942))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2952;
        }
        else
        {
            float _3072 = 1.0 / cbSceneParam._m0[80u].x;
            float _3073 = isnan(_2943) ? _2942 : (isnan(_2942) ? _2943 : max(_2942, _2943));
            float _3074 = isnan(_2943) ? _2942 : (isnan(_2942) ? _2943 : min(_2942, _2943));
            float _3083 = isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : min(_3073, 0.0));
            float _3084 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : min(_3074, 0.0));
            _3112 = ((abs(_2949 / _2938) * cbSceneParam._m0[80u].y) * ((((_3083 - _3084) * 2.0) - ((exp2(_2957 * (isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : max(_3073, 0.0)))) - exp2(_2957 * (isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0))))) * _3072)) - ((exp2(_2959 * _3083) - exp2(_2959 * _3084)) * _3072))) + (_2952 * cbSceneParam._m0[80u].z);
        }
        vec4 _3114 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2870, _2871, 1.0), 0.0);
        float _3123 = exp2((_3112 * (-1.44269502162933349609375)) * (1.0 - _3114.w));
        float _3124 = log2(_3123);
        float _3140 = log2(_2890);
        _2961 = (exp2(_3140 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3124 * cbSceneParam._m0[78u].x)) * _3114.x) / cbSceneParam._m0[78u].x)) + _2887;
        _2963 = (exp2(_3140 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3124 * cbSceneParam._m0[78u].y)) * _3114.y) / cbSceneParam._m0[78u].y)) + _2888;
        _2965 = (exp2(_3140 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3124 * cbSceneParam._m0[78u].z)) * _3114.z) / cbSceneParam._m0[78u].z)) + _2889;
        _2967 = _3123 * _2890;
    }
    else
    {
        _2961 = _2887;
        _2963 = _2888;
        _2965 = _2889;
        _2967 = _2890;
    }
    float _2979 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2980 = _2979 == 3.0;
    float _2981 = log2(_2967);
    float _2988 = exp2(_2981 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2832 + ((isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))) * _803))) + ((_2838 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1611)) * cbPerFrame._m0[3u].x));
    float _2989 = exp2(_2981 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2834 + ((isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0))) * _803))) + ((_2840 + ((isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0))) * _1611)) * cbPerFrame._m0[3u].x));
    float _2990 = exp2(_2981 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0))) * (_2836 + ((isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0))) * _803))) + ((_2842 + ((isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))) * _1611)) * cbPerFrame._m0[3u].x));
    float _2999 = (_2979 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2999 * (_2980 ? _2988 : (_2988 + (cbSceneParam._m0[72u].w * _2961)));
    SV_Target.y = _2999 * (_2980 ? _2989 : (_2989 + (cbSceneParam._m0[72u].w * _2963)));
    SV_Target.z = _2999 * (_2980 ? _2990 : (_2990 + (cbSceneParam._m0[72u].w * _2965)));
    SV_Target.w = cbInstanceData._m0[_2862].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2862].w;
}


