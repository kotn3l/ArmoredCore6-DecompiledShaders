#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1161;
float _3826;
float _3827;
float _3828;
float _3829;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _220 = _219 * _211;
    float _221 = _219 * _212;
    float _222 = _219 * _213;
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _234 = _233 * TANGENT.x;
    float _235 = _233 * TANGENT.y;
    float _236 = _233 * TANGENT.z;
    float _247 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _249 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _250 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3838 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _3849 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _3860 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    uint _260 = uint(roundEven(NORMAL.w)) * 13u;
    uint _265 = _260 + 1u;
    uint _269 = _260 + 2u;
    float _278 = sqrt(((cbInstanceData._m0[_265].x * cbInstanceData._m0[_265].x) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x)) + (cbInstanceData._m0[_269].x * cbInstanceData._m0[_269].x));
    float _279 = _278 * TEXCOORD.z;
    float _280 = _278 * TEXCOORD.w;
    vec4 _293 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _279) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _280) + cbTextureTilingScale._m0[13u].w));
    vec4 _316 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _321 = _316.x * cbMtdParam._m0[9u].x;
    float _322 = _316.y * cbMtdParam._m0[9u].y;
    float _323 = _316.z * cbMtdParam._m0[9u].z;
    float _327 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _293.x) * _321;
    float _330 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _293.y) * _322;
    float _333 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _293.z) * _323;
    float _340 = ((_321 - _327) * (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0)))) + _327;
    float _341 = ((_322 - _330) * (isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0)))) + _330;
    float _342 = ((_323 - _333) * (isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0)))) + _333;
    vec4 _360 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _279) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _280) + cbTextureTilingScale._m0[20u].w));
    vec4 _386 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _390 = _386.z;
    float _394 = (_386.x * 2.0) + (-1.0);
    float _395 = (_386.y * 2.0) + (-1.0);
    float _396 = dot(vec2(_394, _395), vec2(_394, _395));
    float _3871 = isnan(0.0) ? _396 : (isnan(_396) ? 0.0 : max(_396, 0.0));
    float _401 = sqrt(1.0 - (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))));
    float _406 = _394 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_360.x * 2.0) + (-1.0)));
    float _407 = _395 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_360.y * 2.0) + (-1.0)));
    float _410 = fma(_401, _227, fma(_407, _234, _406 * _220));
    float _413 = fma(_401, _228, fma(_407, _235, _406 * _221));
    float _416 = fma(_401, _229, fma(_407, _236, _406 * _222));
    float _420 = inversesqrt(dot(vec3(_410, _413, _416), vec3(_410, _413, _416)));
    vec4 _456 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _279) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _280) + cbTextureTilingScale._m0[11u].w));
    float _458 = _456.x;
    float _459 = 1.0 - _458;
    float _466 = ((_458 - _459) * cbMtdParam._m0[24u].z) + _459;
    float _468 = (cbMtdParam._m0[19u].x + dot(vec4(_420 * _410, _420 * _413, _420 * _416, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_466 * cbMtdParam._m0[21u].z);
    float _3882 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _469 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
    float _484 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_466 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3893 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _485 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
    float _489 = ((_469 * (cbMtdParam._m0[17u].x - _340)) * _485) + _340;
    float _490 = ((_469 * (cbMtdParam._m0[17u].y - _341)) * _485) + _341;
    float _491 = ((_469 * (cbMtdParam._m0[17u].z - _342)) * _485) + _342;
    vec4 _504 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _506 = _504.x;
    float _509 = _506 - ((_506 * _469) * _485);
    float _514 = (((_360.z - _390) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _390;
    vec4 _527 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _279) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _280) + cbTextureTilingScale._m0[15u].w));
    float _534 = (_527.x * 2.0) + (-1.0);
    float _535 = (_527.y * 2.0) + (-1.0);
    float _536 = dot(vec2(_534, _535), vec2(_534, _535));
    float _3904 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _545 = (((_527.z - _514) * _469) * _485) + _514;
    float _560 = (((cbMtdParam._m0[21u].x * _406) + ((_534 - _406) * _469)) * _485) + _406;
    float _561 = (((cbMtdParam._m0[21u].x * _407) + ((_535 - _407) * _469)) * _485) + _407;
    float _562 = (((sqrt(1.0 - (isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0)))) - _401) * _469) * _485) + _401;
    float _564 = cbMtdParam._m0[22u].x + _386.w;
    float _567 = fma(_562, _227, fma(_561, _234, _560 * _220));
    float _570 = fma(_562, _228, fma(_561, _235, _560 * _221));
    float _573 = fma(_562, _229, fma(_561, _236, _560 * _222));
    float _577 = inversesqrt(dot(vec3(_567, _570, _573), vec3(_567, _570, _573)));
    float _578 = _577 * _567;
    float _579 = _577 * _570;
    float _580 = _577 * _573;
    float _3915 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _581 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _3926 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _3937 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _3948 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _3959 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _3970 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _586 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _600 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _641 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _651 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _641);
    float _652 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _641);
    float _653 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _641);
    float _657 = inversesqrt(dot(vec3(_651, _652, _653), vec3(_651, _652, _653)));
    float _658 = _651 * _657;
    float _659 = _652 * _657;
    float _660 = _653 * _657;
    vec4 _665 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _667 = _665.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _842 = sqrt(((_651 * _651) + (_652 * _652)) + (_653 * _653));
        float _848 = (cbMatDynParam._m0[5u].x * _842) + cbMatDynParam._m0[5u].y;
        float _3981 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        float _849 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
        float _853 = (cbMatDynParam._m0[5u].z * _842) + cbMatDynParam._m0[5u].w;
        float _3992 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0))) - _849)) + _849) < ((_667 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _679 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _680 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _700 = fma(_580, cbSceneParam._m0[5u].z, fma(_579, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _578));
    float _703 = fma(_580, cbSceneParam._m0[6u].z, fma(_579, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _578));
    float _706 = fma(_580, cbSceneParam._m0[7u].z, fma(_579, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _578));
    uint _719 = _260 + 9u;
    uint _720 = _719 + uint(cbMatDynParam._m0[0u].w);
    float _726 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) * cbInstanceData._m0[_720].x;
    float _727 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0)))) * cbInstanceData._m0[_720].y;
    float _728 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0)))) * cbInstanceData._m0[_720].z;
    float _4003 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _729 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _4014 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _730 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
    float _4025 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _731 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
    float _732 = 1.0 - _586;
    float _733 = _729 * _732;
    float _734 = _730 * _732;
    float _735 = _731 * _732;
    float _740 = (_729 + (-0.039999999105930328369140625)) * _586;
    float _741 = (_730 + (-0.039999999105930328369140625)) * _586;
    float _742 = (_731 + (-0.039999999105930328369140625)) * _586;
    float _743 = _740 + 0.039999999105930328369140625;
    float _745 = _741 + 0.039999999105930328369140625;
    float _746 = _742 + 0.039999999105930328369140625;
    vec4 _755 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _679, cbSceneParam._m0[86u].y * _680));
    float _759 = ((isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * TEXCOORD_5.w) * _755.x;
    float _760 = dot(vec3(_578, _579, _580), vec3(_658, _659, _660));
    float _763 = _760 * 2.0;
    float _767 = (_763 * _578) - _658;
    float _768 = (_763 * _579) - _659;
    float _769 = (_763 * _580) - _660;
    float _773 = abs(dot(vec3(_658, _659, _660), vec3(_578, _579, _580)));
    float _4036 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _775 = sqrt(_581);
    float _788 = exp2((_775 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_775 * 3.0));
    float _794 = (1.0 - _788) * ((_775 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _795 = _788 * _775;
    float _823 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _827 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _831 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1160;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _885 = fma(_831, cbModelParam._m0[26u].z, fma(_827, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _823));
        float _889 = fma(_831, cbModelParam._m0[27u].z, fma(_827, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _823));
        float _893 = fma(_831, cbModelParam._m0[28u].z, fma(_827, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _823));
        float _918 = _823 + _578;
        float _919 = _827 + _579;
        float _920 = _831 + _580;
        float _930 = fma(_920, cbModelParam._m0[26u].z, fma(_919, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _918)) - _885;
        float _931 = fma(_920, cbModelParam._m0[27u].z, fma(_919, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _918)) - _889;
        float _932 = fma(_920, cbModelParam._m0[28u].z, fma(_919, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _918)) - _893;
        float _936 = inversesqrt(dot(vec3(_930, _931, _932), vec3(_930, _931, _932)));
        float _949 = ((_936 * _930) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_885 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _950 = ((_936 * _931) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_889 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _951 = ((_936 * _932) / cbModelParam._m0[34u].z) + ((((((_893 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _954 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _961 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _968 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _975 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        float _988 = exp2((_954.w + (-0.5)) * 20.0) * 2.0;
        float _989 = _988 * (_954.x + (-0.5));
        float _990 = _988 * (_954.y + (-0.5));
        float _991 = _988 * (_954.z + (-0.5));
        float _998 = exp2((_961.w + (-0.5)) * 20.0) * 2.0;
        float _999 = _998 * (_961.x + (-0.5));
        float _1000 = _998 * (_961.y + (-0.5));
        float _1001 = _998 * (_961.z + (-0.5));
        float _1008 = exp2((_968.w + (-0.5)) * 20.0) * 2.0;
        float _1009 = _1008 * (_968.x + (-0.5));
        float _1010 = _1008 * (_968.y + (-0.5));
        float _1011 = _1008 * (_968.z + (-0.5));
        float _1018 = exp2((_975.w + (-0.5)) * 20.0) * 2.0;
        float _1019 = _1018 * (_975.x + (-0.5));
        float _1020 = _1018 * (_975.y + (-0.5));
        float _1021 = _1018 * (_975.z + (-0.5));
        float _1022 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1023 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1024 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1025 = _989 * 0.5;
        float _1026 = _999 * 0.5;
        float _1027 = _1009 * 0.5;
        float _1028 = dot(vec3(_1025, _1026, _1027), vec3(_1025, _1026, _1027));
        float _1033 = (_1028 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1028);
        float _1042 = (dot(vec3(_578, _579, _580), vec3(_1033 * _1025, _1033 * _1026, _1033 * _1027)) + 1.0) * 0.5;
        float _4062 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1052 = sqrt(((_1026 * _1026) + (_1025 * _1025)) + (_1027 * _1027)) / (_1022 + 9.9999997473787516355514526367188e-06);
        float _4073 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1053 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1054 = _1053 * 2.0;
        float _1058 = (1.0 - _1053) / (_1053 + 1.0);
        float _4084 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1059 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1068 = ((((1.0 - _1059) * (_1054 + 2.0)) * exp2(log2(isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * (_1054 + 1.0))) + _1059) * _1022;
        float _1069 = _990 * 0.5;
        float _1070 = _1000 * 0.5;
        float _1071 = _1010 * 0.5;
        float _1072 = dot(vec3(_1069, _1070, _1071), vec3(_1069, _1070, _1071));
        float _1077 = (_1072 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1072);
        float _1085 = (dot(vec3(_578, _579, _580), vec3(_1077 * _1069, _1077 * _1070, _1077 * _1071)) + 1.0) * 0.5;
        float _4095 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1094 = sqrt(((_1070 * _1070) + (_1069 * _1069)) + (_1071 * _1071)) / (_1023 + 9.9999997473787516355514526367188e-06);
        float _4106 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1095 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1096 = _1095 * 2.0;
        float _1100 = (1.0 - _1095) / (_1095 + 1.0);
        float _4117 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1101 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1110 = ((((1.0 - _1101) * (_1096 + 2.0)) * exp2(log2(isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * (_1096 + 1.0))) + _1101) * _1023;
        float _1111 = _991 * 0.5;
        float _1112 = _1001 * 0.5;
        float _1113 = _1011 * 0.5;
        float _1114 = dot(vec3(_1111, _1112, _1113), vec3(_1111, _1112, _1113));
        float _1119 = (_1114 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1114);
        float _1127 = (dot(vec3(_578, _579, _580), vec3(_1119 * _1111, _1119 * _1112, _1119 * _1113)) + 1.0) * 0.5;
        float _4128 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1136 = sqrt(((_1112 * _1112) + (_1111 * _1111)) + (_1113 * _1113)) / (_1024 + 9.9999997473787516355514526367188e-06);
        float _4139 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1137 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1138 = _1137 * 2.0;
        float _1142 = (1.0 - _1137) / (_1137 + 1.0);
        float _4150 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1143 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1152 = ((((1.0 - _1143) * (_1138 + 2.0)) * exp2(log2(isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * (_1138 + 1.0))) + _1143) * _1024;
        _1160 = _991;
        _1162 = _990;
        _1163 = _989;
        _1164 = _1001;
        _1165 = _1000;
        _1166 = _999;
        _1167 = _1011;
        _1168 = _1010;
        _1169 = _1009;
        _1170 = _1024;
        _1171 = _1023;
        _1172 = _1022;
        _1173 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0)));
        _1174 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0)));
        _1175 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0)));
    }
    else
    {
        _1160 = _1161;
        _1162 = _1161;
        _1163 = _1161;
        _1164 = _1161;
        _1165 = _1161;
        _1166 = _1161;
        _1167 = _1161;
        _1168 = _1161;
        _1169 = _1161;
        _1170 = _1161;
        _1171 = _1161;
        _1172 = _1161;
        _1173 = 0.0;
        _1174 = 0.0;
        _1175 = 0.0;
    }
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1203 = fma(_831, cbModelParam._m0[30u].z, fma(_827, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _823));
        float _1207 = fma(_831, cbModelParam._m0[31u].z, fma(_827, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _823));
        float _1211 = fma(_831, cbModelParam._m0[32u].z, fma(_827, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _823));
        float _1234 = _823 + _578;
        float _1235 = _827 + _579;
        float _1236 = _831 + _580;
        float _1246 = fma(_1236, cbModelParam._m0[30u].z, fma(_1235, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1234)) - _1203;
        float _1247 = fma(_1236, cbModelParam._m0[31u].z, fma(_1235, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1234)) - _1207;
        float _1248 = fma(_1236, cbModelParam._m0[32u].z, fma(_1235, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1234)) - _1211;
        float _1252 = inversesqrt(dot(vec3(_1246, _1247, _1248), vec3(_1246, _1247, _1248)));
        float _1265 = ((_1252 * _1246) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1203 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1266 = ((_1252 * _1247) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1207 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1267 = ((_1252 * _1248) / cbModelParam._m0[35u].z) + ((((((_1211 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1265, _1266, _1267), 0.0);
        vec4 _1276 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1265, _1266, _1267), 0.0);
        vec4 _1283 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1265, _1266, _1267), 0.0);
        vec4 _1290 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1265, _1266, _1267), 0.0);
        float _1302 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1269.x + (-0.5));
        float _1304 = _1302 * (_1269.y + (-0.5));
        float _1305 = _1302 * (_1269.z + (-0.5));
        float _1312 = exp2((_1276.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1276.x + (-0.5));
        float _1314 = _1312 * (_1276.y + (-0.5));
        float _1315 = _1312 * (_1276.z + (-0.5));
        float _1322 = exp2((_1283.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1283.x + (-0.5));
        float _1324 = _1322 * (_1283.y + (-0.5));
        float _1325 = _1322 * (_1283.z + (-0.5));
        float _1332 = exp2((_1290.w + (-0.5)) * 20.0) * 2.0;
        float _1333 = _1332 * (_1290.x + (-0.5));
        float _1334 = _1332 * (_1290.y + (-0.5));
        float _1335 = _1332 * (_1290.z + (-0.5));
        float _1336 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1337 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1338 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
        float _1339 = _1303 * 0.5;
        float _1340 = _1313 * 0.5;
        float _1341 = _1323 * 0.5;
        float _1342 = dot(vec3(_1339, _1340, _1341), vec3(_1339, _1340, _1341));
        float _1347 = (_1342 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1342);
        float _1355 = (dot(vec3(_578, _579, _580), vec3(_1347 * _1339, _1347 * _1340, _1347 * _1341)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1364 = sqrt(((_1340 * _1340) + (_1339 * _1339)) + (_1341 * _1341)) / (_1336 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1366 = _1365 * 2.0;
        float _1370 = (1.0 - _1365) / (_1365 + 1.0);
        float _4213 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1371 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1380 = ((((1.0 - _1371) * (_1366 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1366 + 1.0))) + _1371) * _1336;
        float _1381 = _1304 * 0.5;
        float _1382 = _1314 * 0.5;
        float _1383 = _1324 * 0.5;
        float _1384 = dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383));
        float _1389 = (_1384 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1384);
        float _1397 = (dot(vec3(_578, _579, _580), vec3(_1389 * _1381, _1389 * _1382, _1389 * _1383)) + 1.0) * 0.5;
        float _4224 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1406 = sqrt(((_1382 * _1382) + (_1381 * _1381)) + (_1383 * _1383)) / (_1337 + 9.9999997473787516355514526367188e-06);
        float _4235 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1408 = _1407 * 2.0;
        float _1412 = (1.0 - _1407) / (_1407 + 1.0);
        float _4246 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
        float _1422 = ((((1.0 - _1413) * (_1408 + 2.0)) * exp2(log2(isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * (_1408 + 1.0))) + _1413) * _1337;
        float _1423 = _1305 * 0.5;
        float _1424 = _1315 * 0.5;
        float _1425 = _1325 * 0.5;
        float _1426 = dot(vec3(_1423, _1424, _1425), vec3(_1423, _1424, _1425));
        float _1431 = (_1426 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1426);
        float _1439 = (dot(vec3(_578, _579, _580), vec3(_1431 * _1423, _1431 * _1424, _1431 * _1425)) + 1.0) * 0.5;
        float _4257 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1448 = sqrt(((_1424 * _1424) + (_1423 * _1423)) + (_1425 * _1425)) / (_1338 + 9.9999997473787516355514526367188e-06);
        float _4268 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1450 = _1449 * 2.0;
        float _1454 = (1.0 - _1449) / (_1449 + 1.0);
        float _4279 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1464 = ((((1.0 - _1455) * (_1450 + 2.0)) * exp2(log2(isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_1450 + 1.0))) + _1455) * _1338;
        _1472 = _1305;
        _1473 = _1304;
        _1474 = _1303;
        _1475 = _1315;
        _1476 = _1314;
        _1477 = _1313;
        _1478 = _1325;
        _1479 = _1324;
        _1480 = _1323;
        _1481 = _1338;
        _1482 = _1337;
        _1483 = _1336;
        _1484 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0)));
        _1485 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0)));
        _1486 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0)));
    }
    else
    {
        _1472 = _1161;
        _1473 = _1161;
        _1474 = _1161;
        _1475 = _1161;
        _1476 = _1161;
        _1477 = _1161;
        _1478 = _1161;
        _1479 = _1161;
        _1480 = _1161;
        _1481 = _1161;
        _1482 = _1161;
        _1483 = _1161;
        _1484 = 0.0;
        _1485 = 0.0;
        _1486 = 0.0;
    }
    float _1496 = (cbModelParam._m0[1u].x * (_1484 - _1173)) + _1173;
    float _1497 = (cbModelParam._m0[1u].x * (_1485 - _1174)) + _1174;
    float _1498 = (cbModelParam._m0[1u].x * (_1486 - _1175)) + _1175;
    float _1519 = fma(_1498, cbSceneParam._m0[89u].z, fma(_1497, cbSceneParam._m0[89u].y, _1496 * cbSceneParam._m0[89u].x));
    float _1522 = fma(_1498, cbSceneParam._m0[90u].z, fma(_1497, cbSceneParam._m0[90u].y, _1496 * cbSceneParam._m0[90u].x));
    float _1525 = fma(_1498, cbSceneParam._m0[91u].z, fma(_1497, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1496));
    float _1540 = _767 * 0.5;
    float _1541 = _768 * 0.5;
    float _1542 = _769 * 0.5;
    float _1543 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1474, _1477, _1480, _1483));
    float _1546 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1473, _1476, _1479, _1482));
    float _1549 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1472, _1475, _1478, _1481));
    float _1583;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1556 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1160, _1164, _1167, _1170));
        float _1560 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1162, _1165, _1168, _1171));
        float _1564 = dot(vec4(_1540, _1541, _1542, 1.0), vec4(_1163, _1166, _1169, _1172));
        float _1571 = dot(vec4(cbModelParam._m0[39u]), vec4(_1540, _1541, _1542, 1.0));
        _1583 = dot(vec3(isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0)), isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0)), isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1571) ? 0.0 : (isnan(0.0) ? _1571 : max(0.0, _1571))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1583 = 1.0;
    }
    float _1594;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1585 = dot(vec4(cbModelParam._m0[40u]), vec4(_1540, _1541, _1542, 1.0));
        _1594 = dot(vec3(isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0)), isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)), isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1585) ? 0.0 : (isnan(0.0) ? _1585 : max(0.0, _1585))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1594 = 1.0;
    }
    float _1598 = (_1594 * cbModelParam._m0[1u].x) + (_1583 * (1.0 - cbModelParam._m0[1u].x));
    float _1608 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _581);
    float _1609 = isnan(_1608) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1608 : min(cbModelParam._m0[25u].z, _1608));
    float _1690;
    float _1692;
    float _1694;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1657 = fma(_831, cbModelParam._m0[13u].z, fma(_827, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _823)) + cbModelParam._m0[13u].w;
        float _1661 = fma(_831, cbModelParam._m0[14u].z, fma(_827, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _823)) + cbModelParam._m0[14u].w;
        float _1665 = fma(_831, cbModelParam._m0[15u].z, fma(_827, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _823)) + cbModelParam._m0[15u].w;
        float _1668 = fma(_769, cbModelParam._m0[13u].z, fma(_768, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _767));
        float _1671 = fma(_769, cbModelParam._m0[14u].z, fma(_768, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _767));
        float _1674 = fma(_769, cbModelParam._m0[15u].z, fma(_768, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _767));
        float _1702;
        if (_1668 > 0.0)
        {
            _1702 = abs((1.0 - _1657) / _1668);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1668 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1657 + 1.0) / _1668);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1702 = frontier_phi_17_15_ladder;
        }
        float _1874;
        if (_1671 > 0.0)
        {
            _1874 = abs((1.0 - _1661) / _1671);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1671 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1661 + 1.0) / _1671);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1874 = frontier_phi_26_22_ladder;
        }
        float _2170;
        if (_1674 > 0.0)
        {
            _2170 = abs((1.0 - _1665) / _1674);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1674 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1665 + 1.0) / _1674);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2170 = frontier_phi_38_33_ladder;
        }
        float _2172 = isnan(_1874) ? _1702 : (isnan(_1702) ? _1874 : min(_1702, _1874));
        float _2173 = isnan(_2170) ? _2172 : (isnan(_2172) ? _2170 : min(_2172, _2170));
        float _2177 = (_2173 * _1668) + _1657;
        float _2178 = (_2173 * _1671) + _1661;
        float _2179 = (_2173 * _1674) + _1665;
        float _2180 = _2173 * 9.9999997473787516355514526367188e-05;
        float _2182 = (-1.0) - _2180;
        float _2184 = _2180 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2179 > _2184) || ((_2179 < _2182) || ((_2178 > _2184) || ((_2178 < _2182) || ((_2177 < _2182) || (_2177 > _2184))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2324 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2179, cbModelParam._m0[9u].z, fma(_2178, cbModelParam._m0[9u].y, _2177 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2179, cbModelParam._m0[10u].z, fma(_2178, cbModelParam._m0[10u].y, _2177 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2179, cbModelParam._m0[11u].z, fma(_2178, cbModelParam._m0[11u].y, _2177 * cbModelParam._m0[11u].x))), _1609);
            frontier_phi_16_38_ladder = _2324.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2324.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2324.x * cbModelParam._m0[1u].y;
        }
        _1690 = frontier_phi_16_38_ladder_2;
        _1692 = frontier_phi_16_38_ladder_1;
        _1694 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1678 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_767, _768, _769), _1609);
        _1690 = _1678.x * cbModelParam._m0[1u].y;
        _1692 = _1678.y * cbModelParam._m0[1u].y;
        _1694 = _1678.z * cbModelParam._m0[1u].y;
    }
    float _1698 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _581);
    float _1699 = isnan(_1698) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1698 : min(cbModelParam._m0[25u].w, _1698));
    float _1789;
    float _1791;
    float _1793;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1753 = fma(_831, cbModelParam._m0[21u].z, fma(_827, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _823)) + cbModelParam._m0[21u].w;
        float _1757 = fma(_831, cbModelParam._m0[22u].z, fma(_827, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _823)) + cbModelParam._m0[22u].w;
        float _1761 = fma(_831, cbModelParam._m0[23u].z, fma(_827, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _823)) + cbModelParam._m0[23u].w;
        float _1764 = fma(_769, cbModelParam._m0[21u].z, fma(_768, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _767));
        float _1767 = fma(_769, cbModelParam._m0[22u].z, fma(_768, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _767));
        float _1770 = fma(_769, cbModelParam._m0[23u].z, fma(_768, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _767));
        float _1879;
        if (_1764 > 0.0)
        {
            _1879 = abs((1.0 - _1753) / _1764);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1764 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1753 + 1.0) / _1764);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1879 = frontier_phi_28_24_ladder;
        }
        float _2197;
        if (_1767 > 0.0)
        {
            _2197 = abs((1.0 - _1757) / _1767);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1767 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1757 + 1.0) / _1767);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2197 = frontier_phi_40_35_ladder;
        }
        float _2535;
        if (_1770 > 0.0)
        {
            _2535 = abs((1.0 - _1761) / _1770);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1770 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1761 + 1.0) / _1770);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2535 = frontier_phi_50_47_ladder;
        }
        float _2537 = isnan(_2197) ? _1879 : (isnan(_1879) ? _2197 : min(_1879, _2197));
        float _2538 = isnan(_2535) ? _2537 : (isnan(_2537) ? _2535 : min(_2537, _2535));
        float _2542 = (_2538 * _1764) + _1753;
        float _2543 = (_2538 * _1767) + _1757;
        float _2544 = (_2538 * _1770) + _1761;
        float _2545 = _2538 * 9.9999997473787516355514526367188e-05;
        float _2546 = (-1.0) - _2545;
        float _2548 = _2545 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2544 > _2548) || ((_2544 < _2546) || ((_2543 > _2548) || ((_2543 < _2546) || ((_2542 < _2546) || (_2542 > _2548))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2666 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2544, cbModelParam._m0[17u].z, fma(_2543, cbModelParam._m0[17u].y, _2542 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2544, cbModelParam._m0[18u].z, fma(_2543, cbModelParam._m0[18u].y, _2542 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2544, cbModelParam._m0[19u].z, fma(_2543, cbModelParam._m0[19u].y, _2542 * cbModelParam._m0[19u].x))), _1699);
            frontier_phi_25_50_ladder = _2666.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2666.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2666.x * cbModelParam._m0[1u].z;
        }
        _1789 = frontier_phi_25_50_ladder_2;
        _1791 = frontier_phi_25_50_ladder_1;
        _1793 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1773 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_767, _768, _769), _1699);
        _1789 = _1773.x * cbModelParam._m0[1u].z;
        _1791 = _1773.y * cbModelParam._m0[1u].z;
        _1793 = _1773.z * cbModelParam._m0[1u].z;
    }
    float _1806 = (((_794 * _743) + _795) * _759) * ((cbModelParam._m0[1u].w * (_1789 - _1690)) + _1690);
    float _1808 = (((_794 * _745) + _795) * _759) * ((cbModelParam._m0[1u].w * (_1791 - _1692)) + _1692);
    float _1810 = (((_794 * _746) + _795) * _759) * ((cbModelParam._m0[1u].w * (_1793 - _1694)) + _1694);
    float _1813 = fma(_1810, cbSceneParam._m0[89u].z, fma(_1808, cbSceneParam._m0[89u].y, _1806 * cbSceneParam._m0[89u].x));
    float _1816 = fma(_1810, cbSceneParam._m0[90u].z, fma(_1808, cbSceneParam._m0[90u].y, _1806 * cbSceneParam._m0[90u].x));
    float _1819 = fma(_1810, cbSceneParam._m0[91u].z, fma(_1808, cbSceneParam._m0[91u].y, _1806 * cbSceneParam._m0[91u].x));
    float _1853 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1857 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1861 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1865 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1866 = _1853 / _1865;
    float _1867 = _1857 / _1865;
    float _1868 = _1861 / _1865;
    float _2015;
    float _2016;
    float _2017;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1895 = ((uint(_1868 > cbSceneParam._m0[59u].y) + uint(_1868 > cbSceneParam._m0[59u].x)) + uint(_1868 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1896 = _1895 + 43u;
        uint _1904 = _1895 + 44u;
        uint _1912 = _1895 + 45u;
        uint _1920 = _1895 + 46u;
        float _1931 = fma(_1865, cbSceneParam._m0[_1896].w, fma(_1861, cbSceneParam._m0[_1896].z, fma(_1857, cbSceneParam._m0[_1896].y, _1853 * cbSceneParam._m0[_1896].x)));
        float _1935 = fma(_1865, cbSceneParam._m0[_1904].w, fma(_1861, cbSceneParam._m0[_1904].z, fma(_1857, cbSceneParam._m0[_1904].y, _1853 * cbSceneParam._m0[_1904].x)));
        float _1943 = fma(_1865, cbSceneParam._m0[_1920].w, fma(_1861, cbSceneParam._m0[_1920].z, fma(_1857, cbSceneParam._m0[_1920].y, _1853 * cbSceneParam._m0[_1920].x)));
        float _1948 = cbSceneParam._m0[33u].z * _1943;
        float _1950 = cbSceneParam._m0[33u].w * _1943;
        float _1953 = fma(_1865, cbSceneParam._m0[_1912].w, fma(_1861, cbSceneParam._m0[_1912].z, fma(_1857, cbSceneParam._m0[_1912].y, _1853 * cbSceneParam._m0[_1912].x))) / _1943;
        float _2001 = (cbSceneParam._m0[33u].x - sqrt(((_1867 * _1867) + (_1866 * _1866)) + (_1868 * _1868))) * cbSceneParam._m0[33u].y;
        float _4405 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2008 = (isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1948 + _1931) / _1943, (_1950 + _1935) / _1943), _1953), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1950 + _1931) / _1943, (_1935 - _1948) / _1943), _1953), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1931 - _1948) / _1943, (_1935 - _1950) / _1943), _1953), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1931 - _1950) / _1943, (_1948 + _1935) / _1943), _1953), 0.0)).x), vec4(0.25)));
        _2015 = 1.0 - (_2008 * cbSceneParam._m0[34u].x);
        _2016 = 1.0 - (_2008 * cbSceneParam._m0[34u].y);
        _2017 = 1.0 - (_2008 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2015 = 1.0;
        _2016 = 1.0;
        _2017 = 1.0;
    }
    float _2081;
    float _2083;
    float _2085;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2069 = fma(_1865, cbSceneParam._m0[63u].w, fma(_1861, cbSceneParam._m0[63u].z, fma(_1857, cbSceneParam._m0[63u].y, _1853 * cbSceneParam._m0[63u].x)));
        float _2070 = fma(_1865, cbSceneParam._m0[60u].w, fma(_1861, cbSceneParam._m0[60u].z, fma(_1857, cbSceneParam._m0[60u].y, _1853 * cbSceneParam._m0[60u].x))) / _2069;
        float _2071 = fma(_1865, cbSceneParam._m0[61u].w, fma(_1861, cbSceneParam._m0[61u].z, fma(_1857, cbSceneParam._m0[61u].y, _1853 * cbSceneParam._m0[61u].x))) / _2069;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2070 >= cbSceneParam._m0[64u].x) && (_2071 >= cbSceneParam._m0[64u].y)) && (_2070 <= cbSceneParam._m0[64u].z)) && (_2071 <= cbSceneParam._m0[64u].w))
        {
            float _2210 = fma(_1865, cbSceneParam._m0[62u].w, fma(_1861, cbSceneParam._m0[62u].z, fma(_1857, cbSceneParam._m0[62u].y, _1853 * cbSceneParam._m0[62u].x))) / _2069;
            float _2214 = isnan(cbSceneParam._m0[41u].w) ? _2210 : (isnan(_2210) ? cbSceneParam._m0[41u].w : max(_2210, cbSceneParam._m0[41u].w));
            float _2257 = (cbSceneParam._m0[33u].x - sqrt(((_1867 * _1867) + (_1866 * _1866)) + (_1868 * _1868))) * cbSceneParam._m0[33u].y;
            float _4421 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
            float _2264 = (isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2070, cbSceneParam._m0[33u].w + _2071), _2214), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2070, _2071 - cbSceneParam._m0[33u].z), _2214), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2070 - cbSceneParam._m0[33u].z, _2071 - cbSceneParam._m0[33u].w), _2214), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2070 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2071), _2214), 0.0)).x), vec4(0.25)));
            float _2268 = 1.0 - (_2264 * cbSceneParam._m0[34u].x);
            float _2269 = 1.0 - (_2264 * cbSceneParam._m0[34u].y);
            float _2270 = 1.0 - (_2264 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2270) ? _2017 : (isnan(_2017) ? _2270 : min(_2017, _2270));
            frontier_phi_37_36_ladder_1 = isnan(_2269) ? _2016 : (isnan(_2016) ? _2269 : min(_2016, _2269));
            frontier_phi_37_36_ladder_2 = isnan(_2268) ? _2015 : (isnan(_2015) ? _2268 : min(_2015, _2268));
        }
        else
        {
            frontier_phi_37_36_ladder = _2017;
            frontier_phi_37_36_ladder_1 = _2016;
            frontier_phi_37_36_ladder_2 = _2015;
        }
        _2081 = frontier_phi_37_36_ladder_2;
        _2083 = frontier_phi_37_36_ladder_1;
        _2085 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2081 = _2015;
        _2083 = _2016;
        _2085 = _2017;
    }
    uvec4 _2090 = floatBitsToUint(cbInstanceData._m0[_260 + 5u]);
    uint _2092 = _2090.x * 14u;
    uint _2093 = _2092 + 13u;
    float _2100 = _759 + (-1.0);
    float _2105 = (cbLight._m0[_2093].x * _2100) + 1.0;
    float _2106 = (cbLight._m0[_2093].y * _2100) + 1.0;
    float _2107 = (cbLight._m0[_2093].z * _2100) + 1.0;
    float _2108 = (cbLight._m0[_2093].w * _2100) + 1.0;
    uint _2109 = _2092 + 5u;
    float _2115 = isnan(1.0) ? _2106 : (isnan(_2106) ? 1.0 : min(_2106, 1.0));
    uint _2119 = _2092 + 4u;
    float _2129 = isnan(1.0) ? _2105 : (isnan(_2105) ? 1.0 : min(_2105, 1.0));
    uint _2133 = _2092 | 1u;
    float _2144 = dot(vec3(cbLight._m0[_2092].xyz), vec3(_578, _579, _580));
    float _2147 = dot(vec3(cbLight._m0[_2133].xyz), vec3(_578, _579, _580));
    float _4457 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0));
    float _4468 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2152 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * 0.3183098733425140380859375;
    float _2154 = (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * 0.3183098733425140380859375;
    float _2161 = ((cbLight._m0[_2109].x * _2115) * _2154) + (((cbLight._m0[_2119].x * _2081) * _2129) * _2152);
    float _2162 = ((_2115 * cbLight._m0[_2109].y) * _2154) + (((cbLight._m0[_2119].y * _2083) * _2129) * _2152);
    float _2163 = ((_2115 * cbLight._m0[_2109].z) * _2154) + (((cbLight._m0[_2119].z * _2085) * _2129) * _2152);
    uvec4 _2167 = floatBitsToUint(cbLight._m0[_2092 + 12u]);
    bool _2169 = _2167.x == 0u;
    float _2271;
    float _2273;
    float _2275;
    if (_2169)
    {
        _2271 = _2161;
        _2273 = _2162;
        _2275 = _2163;
    }
    else
    {
        uint _2279 = _2092 + 6u;
        float _2295 = (dot(vec3(cbLight._m0[_2092 + 2u].xyz), vec3(_578, _579, _580)) * 0.5) + 0.5;
        float _2296 = _2295 * _2295;
        float _4479 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
        float _2297 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _2298 = isnan(1.0) ? _2107 : (isnan(_2107) ? 1.0 : min(_2107, 1.0));
        _2271 = (((cbLight._m0[_2279].x * 0.3183098733425140380859375) * _2297) * _2298) + _2161;
        _2273 = (((cbLight._m0[_2279].y * 0.3183098733425140380859375) * _2297) * _2298) + _2162;
        _2275 = (((cbLight._m0[_2279].z * 0.3183098733425140380859375) * _2297) * _2298) + _2163;
    }
    bool _2278 = _2167.y == 0u;
    float _2333;
    float _2335;
    float _2337;
    if (_2278)
    {
        _2333 = _2271;
        _2335 = _2273;
        _2337 = _2275;
    }
    else
    {
        uint _2506 = _2092 + 7u;
        float _2522 = (dot(vec3(cbLight._m0[_2092 + 3u].xyz), vec3(_578, _579, _580)) * 0.5) + 0.5;
        float _2523 = _2522 * _2522;
        float _4495 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
        float _2524 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
        float _2525 = isnan(1.0) ? _2108 : (isnan(_2108) ? 1.0 : min(_2108, 1.0));
        _2333 = (((cbLight._m0[_2506].x * 0.3183098733425140380859375) * _2524) * _2525) + _2271;
        _2335 = (((cbLight._m0[_2506].y * 0.3183098733425140380859375) * _2524) * _2525) + _2273;
        _2337 = (((cbLight._m0[_2506].z * 0.3183098733425140380859375) * _2524) * _2525) + _2275;
    }
    uint _2340 = _2092 + 8u;
    float _2353 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2092].w)) * _581) * 0.949999988079071044921875);
    float _2354 = _2353 * _2353;
    float _2355 = cbLight._m0[_2092].x + _658;
    float _2356 = cbLight._m0[_2092].y + _659;
    float _2357 = cbLight._m0[_2092].z + _660;
    float _2361 = inversesqrt(dot(vec3(_2355, _2356, _2357), vec3(_2355, _2356, _2357)));
    float _2362 = _2361 * _2355;
    float _2363 = _2361 * _2356;
    float _2364 = _2361 * _2357;
    float _2365 = dot(vec3(_578, _579, _580), vec3(cbLight._m0[_2092].xyz));
    float _4511 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
    float _2368 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
    float _4522 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _2369 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
    float _2370 = dot(vec3(_578, _579, _580), vec3(_2362, _2363, _2364));
    float _4533 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
    float _2373 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
    float _2374 = dot(vec3(cbLight._m0[_2092].xyz), vec3(_2362, _2363, _2364));
    float _4544 = isnan(0.0) ? _2374 : (isnan(_2374) ? 0.0 : max(_2374, 0.0));
    float _2378 = _2354 * _2354;
    float _2382 = ((_2373 * _2373) * (_2378 + (-1.0))) + 1.0;
    float _2390 = exp2(log2(1.0 - (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0)))) * 5.0);
    float _2391 = 0.959999978542327880859375 - _740;
    float _2393 = 0.959999978542327880859375 - _741;
    float _2394 = 0.959999978542327880859375 - _742;
    float _2401 = 1.0 - _2354;
    float _2412 = (0.5 / (((_2369 * ((_2368 * _2401) + _2354)) + 9.9999999392252902907785028219223e-09) + (((_2369 * _2401) + _2354) * _2368))) * _2368;
    float _4555 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2414 = (isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (_2378 / ((_2382 * _2382) * 3.141590118408203125));
    uint _2428 = _2092 + 9u;
    float _2439 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2133].w)) * _581) * 0.949999988079071044921875);
    float _2440 = _2439 * _2439;
    float _2441 = cbLight._m0[_2133].x + _658;
    float _2442 = cbLight._m0[_2133].y + _659;
    float _2443 = cbLight._m0[_2133].z + _660;
    float _2447 = inversesqrt(dot(vec3(_2441, _2442, _2443), vec3(_2441, _2442, _2443)));
    float _2448 = _2447 * _2441;
    float _2449 = _2447 * _2442;
    float _2450 = _2447 * _2443;
    float _2451 = dot(vec3(_578, _579, _580), vec3(cbLight._m0[_2133].xyz));
    float _4566 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2454 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
    float _2455 = dot(vec3(_578, _579, _580), vec3(_2448, _2449, _2450));
    float _4577 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
    float _2458 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
    float _2459 = dot(vec3(cbLight._m0[_2133].xyz), vec3(_2448, _2449, _2450));
    float _4588 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2463 = _2440 * _2440;
    float _2467 = ((_2458 * _2458) * (_2463 + (-1.0))) + 1.0;
    float _2474 = exp2(log2(1.0 - (isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0)))) * 5.0);
    float _2481 = 1.0 - _2440;
    float _2491 = (0.5 / (((_2369 * ((_2454 * _2481) + _2440)) + 9.9999999392252902907785028219223e-09) + (((_2369 * _2481) + _2440) * _2454))) * _2454;
    float _4599 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2493 = (isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * (_2463 / ((_2467 * _2467) * 3.141590118408203125));
    float _2503 = (((((_2474 * _2391) + _743) * cbLight._m0[_2428].x) * _2493) * _2115) + ((((cbLight._m0[_2340].x * _2081) * ((_2390 * _2391) + _743)) * _2414) * _2129);
    float _2504 = (((((_2474 * _2393) + _745) * cbLight._m0[_2428].y) * _2493) * _2115) + ((((cbLight._m0[_2340].y * _2083) * ((_2390 * _2393) + _745)) * _2414) * _2129);
    float _2505 = (((((_2474 * _2394) + _746) * cbLight._m0[_2428].z) * _2493) * _2115) + ((((cbLight._m0[_2340].z * _2085) * ((_2390 * _2394) + _746)) * _2414) * _2129);
    float _2561;
    float _2563;
    float _2565;
    if (_2169)
    {
        _2561 = _2503;
        _2563 = _2504;
        _2565 = _2505;
    }
    else
    {
        uint _2567 = _2092 + 2u;
        uint _2571 = _2092 + 10u;
        float _2585 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2567].w)) * _581) * 0.949999988079071044921875);
        float _2586 = _2585 * _2585;
        float _2587 = cbLight._m0[_2567].x + _658;
        float _2588 = cbLight._m0[_2567].y + _659;
        float _2589 = cbLight._m0[_2567].z + _660;
        float _2593 = inversesqrt(dot(vec3(_2587, _2588, _2589), vec3(_2587, _2588, _2589)));
        float _2594 = _2593 * _2587;
        float _2595 = _2593 * _2588;
        float _2596 = _2593 * _2589;
        float _2597 = dot(vec3(_578, _579, _580), vec3(cbLight._m0[_2567].xyz));
        float _4610 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2600 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
        float _2601 = dot(vec3(_578, _579, _580), vec3(_2594, _2595, _2596));
        float _4621 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
        float _2604 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
        float _2605 = dot(vec3(cbLight._m0[_2567].xyz), vec3(_2594, _2595, _2596));
        float _4632 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
        float _2609 = _2586 * _2586;
        float _2613 = ((_2604 * _2604) * (_2609 + (-1.0))) + 1.0;
        float _2620 = exp2(log2(1.0 - (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0)))) * 5.0);
        float _2627 = 1.0 - _2586;
        float _2637 = (0.5 / (((_2369 * ((_2600 * _2627) + _2586)) + 9.9999999392252902907785028219223e-09) + (((_2369 * _2627) + _2586) * _2600))) * _2600;
        float _4643 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
        float _2639 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * (_2609 / ((_2613 * _2613) * 3.141590118408203125));
        float _2640 = isnan(1.0) ? _2107 : (isnan(_2107) ? 1.0 : min(_2107, 1.0));
        _2561 = (((((_2620 * _2391) + _743) * cbLight._m0[_2571].x) * _2639) * _2640) + _2503;
        _2563 = (((((_2620 * _2393) + _745) * cbLight._m0[_2571].y) * _2639) * _2640) + _2504;
        _2565 = (((((_2620 * _2394) + _746) * cbLight._m0[_2571].z) * _2639) * _2640) + _2505;
    }
    float _2671;
    float _2673;
    float _2675;
    if (_2278)
    {
        _2671 = _2561;
        _2673 = _2563;
        _2675 = _2565;
    }
    else
    {
        uint _2682 = _2092 + 3u;
        uint _2686 = _2092 + 11u;
        float _2700 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2682].w)) * _581) * 0.949999988079071044921875);
        float _2701 = _2700 * _2700;
        float _2702 = cbLight._m0[_2682].x + _658;
        float _2703 = cbLight._m0[_2682].y + _659;
        float _2704 = cbLight._m0[_2682].z + _660;
        float _2708 = inversesqrt(dot(vec3(_2702, _2703, _2704), vec3(_2702, _2703, _2704)));
        float _2709 = _2708 * _2702;
        float _2710 = _2708 * _2703;
        float _2711 = _2708 * _2704;
        float _2712 = dot(vec3(_578, _579, _580), vec3(cbLight._m0[_2682].xyz));
        float _4659 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2715 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
        float _2716 = dot(vec3(_578, _579, _580), vec3(_2709, _2710, _2711));
        float _4670 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
        float _2719 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _2720 = dot(vec3(cbLight._m0[_2682].xyz), vec3(_2709, _2710, _2711));
        float _4681 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
        float _2724 = _2701 * _2701;
        float _2728 = ((_2719 * _2719) * (_2724 + (-1.0))) + 1.0;
        float _2735 = exp2(log2(1.0 - (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0)))) * 5.0);
        float _2742 = 1.0 - _2701;
        float _2752 = (0.5 / (((_2369 * ((_2715 * _2742) + _2701)) + 9.9999999392252902907785028219223e-09) + (((_2369 * _2742) + _2701) * _2715))) * _2715;
        float _4692 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2754 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (_2724 / ((_2728 * _2728) * 3.141590118408203125));
        float _2755 = isnan(1.0) ? _2108 : (isnan(_2108) ? 1.0 : min(_2108, 1.0));
        _2671 = (((((_2735 * _2391) + _743) * cbLight._m0[_2686].x) * _2754) * _2755) + _2561;
        _2673 = (((((_2735 * _2393) + _745) * cbLight._m0[_2686].y) * _2754) * _2755) + _2563;
        _2675 = (((((_2735 * _2394) + _746) * cbLight._m0[_2686].z) * _2754) * _2755) + _2565;
    }
    float _2821;
    float _2823;
    float _2825;
    float _2827;
    float _2829;
    float _2831;
    if (_2090.y == 0u)
    {
        uvec4 _2776 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2777 = _2776.x;
        uint _2788 = uint((float(_2776.y) * floor(float(uint(cbSceneParam._m0[85u].y * _680) / _2777))) + floor(float(uint(cbSceneParam._m0[85u].x * _679) / _2777)));
        float _2798 = (log2(_1868 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2799 = isnan(0.0) ? _2798 : (isnan(_2798) ? 0.0 : max(_2798, 0.0));
        uint _2802 = uint(isnan(14.0) ? _2799 : (isnan(_2799) ? 14.0 : min(_2799, 14.0)));
        uvec4 _2807 = texelFetch(g_lightClusterGridBuffer, int(((_2802 << 2u) + (_2788 << 6u)) >> 2u));
        uint _2808 = _2807.x;
        uint _2809 = _2776.z;
        float _2888;
        float _2890;
        float _2892;
        float _2894;
        float _2896;
        float _2898;
        if (((((1u << ((_2809 >> 4u) & 15u)) + 4294967295u) & _2808) == 0u) || ((_2809 & 240u) == 0u))
        {
            _2888 = 0.0;
            _2890 = 0.0;
            _2892 = 0.0;
            _2894 = 0.0;
            _2896 = 0.0;
            _2898 = 0.0;
        }
        else
        {
            float _2889;
            float _2891;
            float _2893;
            float _2895;
            float _2897;
            float _2899;
            float _3041 = 0.0;
            float _3042 = 0.0;
            float _3043 = 0.0;
            float _3044 = 0.0;
            float _3045 = 0.0;
            float _3046 = 0.0;
            uint _3047 = 0u;
            uint _3056;
            bool _3057;
            for (;;)
            {
                _3056 = texelFetch(g_lightClassification, int((((_2802 << 5u) + (_2788 << 9u)) + (_3047 << 2u)) >> 2u)).x;
                _3057 = _3056 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3057)
                {
                    frontier_phi_71_pred = _3046;
                    frontier_phi_71_pred_1 = _3045;
                    frontier_phi_71_pred_2 = _3044;
                    frontier_phi_71_pred_3 = _3043;
                    frontier_phi_71_pred_4 = _3042;
                    frontier_phi_71_pred_5 = _3041;
                }
                else
                {
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    float _3191;
                    uint _3192;
                    _3186 = _3041;
                    _3187 = _3042;
                    _3188 = _3043;
                    _3189 = _3044;
                    _3190 = _3045;
                    _3191 = _3046;
                    _3192 = _3056;
                    float _3113;
                    float _3114;
                    float _3115;
                    float _3116;
                    float _3117;
                    float _3118;
                    for (;;)
                    {
                        uint _3196 = uint(findLSB(_3192)) + (_3047 << 5u);
                        uint _3193 = (_3192 + 4294967295u) & _3192;
                        uint _3198 = _3196 * 48u;
                        vec4 _3212 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3198)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3198 + 3u)).x));
                        uint _3218 = (_3196 * 48u) + 4u;
                        vec4 _3231 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3218)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 3u)).x));
                        uint _3237 = (_3196 * 48u) + 8u;
                        vec3 _3248 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3237)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 2u)).x));
                        float _3252 = _3212.x - _1866;
                        float _3253 = _3212.y - _1867;
                        float _3254 = _3212.z - _1868;
                        float _3255 = dot(vec3(_3252, _3253, _3254), vec3(_3252, _3253, _3254));
                        float _3258 = inversesqrt(_3255);
                        float _3259 = _3258 * _3252;
                        float _3260 = _3258 * _3253;
                        float _3261 = _3258 * _3254;
                        float _3262 = dot(vec3(_700, _703, _706), vec3(_3259, _3260, _3261));
                        float _3267 = 1.0 - (_3255 * _3212.w);
                        float _4718 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0));
                        float _3268 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
                        float _3269 = sqrt(_3255) * _3231.w;
                        float _3272 = 1.39999997615814208984375 / (_3269 + 1.39999997615814208984375);
                        float _3273 = _3272 * _3272;
                        float _3276 = ((1.0 - _3273) * _3262) + _3273;
                        float _3279 = _3269 * _3269;
                        float _3283 = ((isnan(0.0) ? _3276 : (isnan(_3276) ? 0.0 : max(_3276, 0.0))) * _3268) / ((_3279 * 0.699999988079071044921875) + 1.0);
                        float _3287 = (-0.0) - _1866;
                        float _3288 = (-0.0) - _1867;
                        float _3289 = (-0.0) - _1868;
                        float _3293 = inversesqrt(dot(vec3(_3287, _3288, _3289), vec3(_3287, _3288, _3289)));
                        float _3294 = _3293 * _3287;
                        float _3295 = _3293 * _3288;
                        float _3296 = _3293 * _3289;
                        float _3303 = exp2(log2(1.0 / ((_3279 * 3.5) + 5.0)) * 0.25);
                        float _3304 = 1.0 - _775;
                        float _3311 = sqrt(1.0 - ((1.0 - (_3304 * _3304)) * (1.0 - (_3303 * _3303))));
                        float _3312 = _3311 * _3311;
                        float _3313 = _3312 * _3312;
                        float _3314 = _3294 + _3259;
                        float _3315 = _3295 + _3260;
                        float _3316 = _3296 + _3261;
                        float _3320 = inversesqrt(dot(vec3(_3314, _3315, _3316), vec3(_3314, _3315, _3316)));
                        float _3324 = dot(vec3(_700, _703, _706), vec3(_3294, _3295, _3296));
                        float _4734 = isnan(0.0) ? _3324 : (isnan(_3324) ? 0.0 : max(_3324, 0.0));
                        float _3327 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
                        float _3328 = dot(vec3(_700, _703, _706), vec3(_3320 * _3314, _3320 * _3315, _3320 * _3316));
                        float _4745 = isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : max(_3328, 0.0));
                        float _3331 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
                        float _3335 = ((_3331 * _3331) * (_3313 + (-1.0))) + 1.0;
                        float _3336 = _3272 * _3312;
                        float _3337 = _3336 * _3336;
                        float _3340 = ((1.0 - _3337) * _3262) + _3337;
                        float _4756 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0));
                        float _3341 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
                        float _3342 = 1.0 - _3312;
                        float _3352 = (0.5 / (((_3341 * ((_3327 * _3342) + _3312)) + 9.9999999392252902907785028219223e-09) + (((_3341 * _3342) + _3312) * _3327))) * _3341;
                        float _4767 = isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0));
                        float _3363 = (((_3313 * 3.1415927410125732421875) * (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0)))) / ((_3335 * _3335) * ((_3279 * 2.1991131305694580078125) + 3.141590118408203125))) * _3268;
                        _3116 = (_3283 * _3231.x) + _3189;
                        _3117 = (_3283 * _3231.y) + _3190;
                        _3118 = (_3283 * _3231.z) + _3191;
                        _3113 = (_3363 * _3248.x) + _3186;
                        _3114 = (_3363 * _3248.y) + _3187;
                        _3115 = (_3363 * _3248.z) + _3188;
                        if (_3193 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3186 = _3113;
                            _3187 = _3114;
                            _3188 = _3115;
                            _3189 = _3116;
                            _3190 = _3117;
                            _3191 = _3118;
                            _3192 = _3193;
                        }
                    }
                    frontier_phi_71_pred = _3118;
                    frontier_phi_71_pred_1 = _3117;
                    frontier_phi_71_pred_2 = _3116;
                    frontier_phi_71_pred_3 = _3115;
                    frontier_phi_71_pred_4 = _3114;
                    frontier_phi_71_pred_5 = _3113;
                }
                _2899 = frontier_phi_71_pred;
                _2897 = frontier_phi_71_pred_1;
                _2895 = frontier_phi_71_pred_2;
                _2893 = frontier_phi_71_pred_3;
                _2891 = frontier_phi_71_pred_4;
                _2889 = frontier_phi_71_pred_5;
                uint _3048 = _3047 + 1u;
                if (_3048 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3041 = _2889;
                    _3042 = _2891;
                    _3043 = _2893;
                    _3044 = _2895;
                    _3045 = _2897;
                    _3046 = _2899;
                    _3047 = _3048;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2888 = _2889;
            _2890 = _2891;
            _2892 = _2893;
            _2894 = _2895;
            _2896 = _2897;
            _2898 = _2899;
        }
        uvec4 _2902 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2903 = _2902.z;
        uint _2905 = (_2903 >> 8u) & 15u;
        float _3009;
        float _3011;
        float _3013;
        float _3015;
        float _3017;
        float _3019;
        if (((4294967295u << _2905) & _2808) == 0u)
        {
            _3009 = _2888;
            _3011 = _2890;
            _3013 = _2892;
            _3015 = _2894;
            _3017 = _2896;
            _3019 = _2898;
        }
        else
        {
            float _3034 = inversesqrt(dot(vec3(_1866, _1867, _1868), vec3(_1866, _1867, _1868)));
            float _3035 = _3034 * _1866;
            float _3036 = _3034 * _1867;
            float _3037 = _3034 * _1868;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2905 < ((_2903 >> 12u) & 15u))
            {
                float _3010;
                float _3012;
                float _3014;
                float _3016;
                float _3018;
                float _3020;
                float _3169 = _2888;
                float _3170 = _2890;
                float _3171 = _2892;
                float _3172 = _2894;
                float _3173 = _2896;
                float _3174 = _2898;
                uint _3175 = _2905;
                uint _3184;
                bool _3185;
                for (;;)
                {
                    _3184 = texelFetch(g_lightClassification, int((((_2802 << 5u) + (_2788 << 9u)) + (_3175 << 2u)) >> 2u)).x;
                    _3185 = _3184 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3185)
                    {
                        frontier_phi_82_pred = _3174;
                        frontier_phi_82_pred_1 = _3173;
                        frontier_phi_82_pred_2 = _3172;
                        frontier_phi_82_pred_3 = _3171;
                        frontier_phi_82_pred_4 = _3170;
                        frontier_phi_82_pred_5 = _3169;
                    }
                    else
                    {
                        float _3377;
                        float _3378;
                        float _3379;
                        float _3380;
                        float _3381;
                        float _3382;
                        float _3670;
                        float _3671;
                        float _3672;
                        float _3673;
                        float _3674;
                        float _3675;
                        float _3390 = _3169;
                        float _3391 = _3170;
                        float _3392 = _3171;
                        float _3393 = _3172;
                        float _3394 = _3173;
                        float _3395 = _3174;
                        uint _3396 = _3184;
                        uint _3397;
                        vec4 _3422;
                        float _3423;
                        vec4 _3438;
                        vec3 _3450;
                        vec4 _3465;
                        vec4 _3480;
                        float _3526;
                        bool _3527;
                        for (;;)
                        {
                            uint _3407 = ((_3175 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3396));
                            _3397 = (_3396 + 4294967295u) & _3396;
                            uint _3409 = _3407 * 40u;
                            _3422 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3409)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 3u)).x));
                            _3423 = _3422.w;
                            uint _3425 = (_3407 * 40u) + 4u;
                            _3438 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3425)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 3u)).x));
                            uint _3440 = (_3407 * 40u) + 8u;
                            _3450 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3440)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 2u)).x));
                            uint _3452 = (_3407 * 40u) + 16u;
                            _3465 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3452)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 3u)).x));
                            uint _3467 = (_3407 * 40u) + 20u;
                            _3480 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3467)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 3u)).x));
                            uint _3482 = (_3407 * 40u) + 24u;
                            vec4 _3495 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3482)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 3u)).x));
                            uint _3501 = (_3407 * 40u) + 28u;
                            vec4 _3514 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3501)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3501 + 3u)).x));
                            _3526 = fma(_1868, _3514.z, fma(_1867, _3514.y, _3514.x * _1866)) + _3514.w;
                            _3527 = !((fma(_1868, _3495.z, fma(_1867, _3495.y, _3495.x * _1866)) + _3495.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3527)
                            {
                                float _3554 = _3422.x - _1866;
                                float _3555 = _3422.y - _1867;
                                float _3556 = _3422.z - _1868;
                                float _3557 = dot(vec3(_3554, _3555, _3556), vec3(_3554, _3555, _3556));
                                float _3560 = inversesqrt(_3557);
                                float _3561 = _3560 * _3554;
                                float _3562 = _3560 * _3555;
                                float _3563 = _3560 * _3556;
                                float _3567 = 1.0 - (_3557 / (_3423 * _3423));
                                float _4778 = isnan(0.0) ? _3567 : (isnan(_3567) ? 0.0 : max(_3567, 0.0));
                                float _3568 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
                                float _3572 = sqrt(_3557) * _3438.w;
                                float _3574 = 1.39999997615814208984375 / (_3572 + 1.39999997615814208984375);
                                float _3575 = _3574 * _3574;
                                float _3578 = ((1.0 - _3575) * dot(vec3(_3561, _3562, _3563), vec3(_700, _703, _706))) + _3575;
                                float _3581 = _3572 * _3572;
                                float _3585 = (fma(_1868, _3465.z, fma(_1867, _3465.y, _3465.x * _1866)) + _3465.w) / _3526;
                                float _3586 = (fma(_1868, _3480.z, fma(_1867, _3480.y, _3480.x * _1866)) + _3480.w) / _3526;
                                float _3590 = 1.0 - dot(vec2(_3585, _3586), vec2(_3585, _3586));
                                float _4794 = isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0));
                                float _3591 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
                                float _3592 = _3591 * (((isnan(0.0) ? _3578 : (isnan(_3578) ? 0.0 : max(_3578, 0.0))) * _3568) / ((_3581 * 0.699999988079071044921875) + 1.0));
                                float _3604 = exp2(log2(1.0 / ((_3581 * 3.5) + 5.0)) * 0.25);
                                float _3605 = 1.0 - _775;
                                float _3612 = sqrt(1.0 - ((1.0 - (_3605 * _3605)) * (1.0 - (_3604 * _3604))));
                                float _3613 = _3612 * _3612;
                                float _3614 = _3613 * _3613;
                                float _3615 = _3561 - _3035;
                                float _3616 = _3562 - _3036;
                                float _3617 = _3563 - _3037;
                                float _3621 = inversesqrt(dot(vec3(_3615, _3616, _3617), vec3(_3615, _3616, _3617)));
                                float _3625 = dot(vec3(_700, _703, _706), vec3((-0.0) - _3035, (-0.0) - _3036, (-0.0) - _3037));
                                float _4805 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                                float _3628 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
                                float _3629 = dot(vec3(_700, _703, _706), vec3(_3621 * _3615, _3621 * _3616, _3621 * _3617));
                                float _4816 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                                float _3632 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
                                float _3636 = ((_3632 * _3632) * (_3614 + (-1.0))) + 1.0;
                                float _3637 = _3574 * _3613;
                                float _3638 = _3637 * _3637;
                                float _3644 = ((1.0 - _3638) * dot(vec3(_700, _703, _706), vec3(_3561, _3562, _3563))) + _3638;
                                float _4827 = isnan(0.0) ? _3644 : (isnan(_3644) ? 0.0 : max(_3644, 0.0));
                                float _3645 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
                                float _3646 = 1.0 - _3613;
                                float _3656 = (0.5 / (((_3645 * ((_3628 * _3646) + _3613)) + 9.9999999392252902907785028219223e-09) + (((_3645 * _3646) + _3613) * _3628))) * _3645;
                                float _4838 = isnan(0.0) ? _3656 : (isnan(_3656) ? 0.0 : max(_3656, 0.0));
                                float _3666 = (_3591 * _3568) * (((_3614 * 3.1415927410125732421875) * (isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0)))) / ((_3636 * _3636) * ((_3581 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3592 * _3438.z;
                                frontier_phi_88_pred_1 = _3592 * _3438.y;
                                frontier_phi_88_pred_2 = _3592 * _3438.x;
                                frontier_phi_88_pred_3 = _3666 * _3450.z;
                                frontier_phi_88_pred_4 = _3666 * _3450.y;
                                frontier_phi_88_pred_5 = _3666 * _3450.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3675 = frontier_phi_88_pred;
                            _3674 = frontier_phi_88_pred_1;
                            _3673 = frontier_phi_88_pred_2;
                            _3672 = frontier_phi_88_pred_3;
                            _3671 = frontier_phi_88_pred_4;
                            _3670 = frontier_phi_88_pred_5;
                            _3380 = _3673 + _3393;
                            _3381 = _3674 + _3394;
                            _3382 = _3675 + _3395;
                            _3377 = _3670 + _3390;
                            _3378 = _3671 + _3391;
                            _3379 = _3672 + _3392;
                            if (_3397 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3390 = _3377;
                                _3391 = _3378;
                                _3392 = _3379;
                                _3393 = _3380;
                                _3394 = _3381;
                                _3395 = _3382;
                                _3396 = _3397;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3382;
                        frontier_phi_82_pred_1 = _3381;
                        frontier_phi_82_pred_2 = _3380;
                        frontier_phi_82_pred_3 = _3379;
                        frontier_phi_82_pred_4 = _3378;
                        frontier_phi_82_pred_5 = _3377;
                    }
                    _3020 = frontier_phi_82_pred;
                    _3018 = frontier_phi_82_pred_1;
                    _3016 = frontier_phi_82_pred_2;
                    _3014 = frontier_phi_82_pred_3;
                    _3012 = frontier_phi_82_pred_4;
                    _3010 = frontier_phi_82_pred_5;
                    uint _3176 = _3175 + 1u;
                    if (_3176 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3169 = _3010;
                        _3170 = _3012;
                        _3171 = _3014;
                        _3172 = _3016;
                        _3173 = _3018;
                        _3174 = _3020;
                        _3175 = _3176;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3016;
                frontier_phi_63_64_ladder_1 = _3020;
                frontier_phi_63_64_ladder_2 = _3018;
                frontier_phi_63_64_ladder_3 = _3014;
                frontier_phi_63_64_ladder_4 = _3012;
                frontier_phi_63_64_ladder_5 = _3010;
            }
            else
            {
                frontier_phi_63_64_ladder = _2894;
                frontier_phi_63_64_ladder_1 = _2898;
                frontier_phi_63_64_ladder_2 = _2896;
                frontier_phi_63_64_ladder_3 = _2892;
                frontier_phi_63_64_ladder_4 = _2890;
                frontier_phi_63_64_ladder_5 = _2888;
            }
            _3009 = frontier_phi_63_64_ladder_5;
            _3011 = frontier_phi_63_64_ladder_4;
            _3013 = frontier_phi_63_64_ladder_3;
            _3015 = frontier_phi_63_64_ladder;
            _3017 = frontier_phi_63_64_ladder_2;
            _3019 = frontier_phi_63_64_ladder_1;
        }
        float _3024 = isnan(1.0) ? _759 : (isnan(_759) ? 1.0 : min(_759, 1.0));
        _2821 = (_3024 * _3015) + _2333;
        _2823 = (_3024 * _3017) + _2335;
        _2825 = (_3024 * _3019) + _2337;
        _2827 = ((_3009 * _743) * _3024) + _2671;
        _2829 = ((_3011 * _745) * _3024) + _2673;
        _2831 = ((_3013 * _746) * _3024) + _2675;
    }
    else
    {
        _2821 = _2333;
        _2823 = _2335;
        _2825 = _2337;
        _2827 = _2671;
        _2829 = _2673;
        _2831 = _2675;
    }
    float _4854 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _4865 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _4876 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _2848 = ((isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0))) * (_2821 + ((isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0))) * _759))) + ((_2827 + ((isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0))) * _1598)) * cbPerFrame._m0[3u].x);
    float _2849 = ((isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_2823 + ((isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0))) * _759))) + ((_2829 + ((isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0))) * _1598)) * cbPerFrame._m0[3u].x);
    float _2850 = ((isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0))) * (_2825 + ((isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0))) * _759))) + ((_2831 + ((isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0))) * _1598)) * cbPerFrame._m0[3u].x);
    uint _2851 = _260 + 6u;
    float _2859 = _679 / cbSceneParam._m0[86u].x;
    float _2860 = _680 / cbSceneParam._m0[86u].y;
    vec4 _2874 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2859, _2860, (log2((isnan(cbSceneParam._m0[77u].w) ? _600 : (isnan(_600) ? cbSceneParam._m0[77u].w : min(_600, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2876 = _2874.x;
    float _2877 = _2874.y;
    float _2878 = _2874.z;
    float _2879 = _2874.w;
    float _2951;
    float _2953;
    float _2955;
    float _2957;
    if (_600 > cbSceneParam._m0[78u].w)
    {
        float _2913 = isnan(_600) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _600 : min(cbSceneParam._m0[80u].w, _600));
        float _2914 = _2913 / _600;
        float _2925 = _2914 * _651;
        float _2926 = _652 * _2914;
        float _2927 = (-0.0) - _2926;
        float _2929 = _2914 * _653;
        float _2931 = (cbSceneParam._m0[77u].w * _2927) / _2913;
        float _2932 = _2931 + cbSceneParam._m0[79u].w;
        float _2933 = cbSceneParam._m0[79u].w - _2926;
        float _2939 = sqrt(((_2925 * _2925) + (_2926 * _2926)) + (_2929 * _2929));
        float _2942 = (1.0 - (cbSceneParam._m0[77u].w / _2913)) * _2939;
        float _2947 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2949 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3126;
        if (abs((_2927 - _2931) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3126 = ((((_2932 > 0.0) ? exp2(_2947 * _2932) : (2.0 - exp2(_2949 * _2932))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2942;
        }
        else
        {
            float _3070 = 1.0 / cbSceneParam._m0[80u].x;
            float _3071 = isnan(_2933) ? _2932 : (isnan(_2932) ? _2933 : max(_2932, _2933));
            float _3072 = isnan(_2933) ? _2932 : (isnan(_2932) ? _2933 : min(_2932, _2933));
            float _3081 = isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : min(_3071, 0.0));
            float _3082 = isnan(0.0) ? _3072 : (isnan(_3072) ? 0.0 : min(_3072, 0.0));
            _3126 = ((abs(_2939 / _2927) * cbSceneParam._m0[80u].y) * ((((_3081 - _3082) * 2.0) - ((exp2(_2947 * (isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : max(_3071, 0.0)))) - exp2(_2947 * (isnan(0.0) ? _3072 : (isnan(_3072) ? 0.0 : max(_3072, 0.0))))) * _3070)) - ((exp2(_2949 * _3081) - exp2(_2949 * _3082)) * _3070))) + (_2942 * cbSceneParam._m0[80u].z);
        }
        vec4 _3128 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2859, _2860, 1.0), 0.0);
        float _3137 = exp2((_3126 * (-1.44269502162933349609375)) * (1.0 - _3128.w));
        float _3138 = log2(_3137);
        float _3154 = log2(_2879);
        _2951 = (exp2(_3154 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].x)) * _3128.x) / cbSceneParam._m0[78u].x)) + _2876;
        _2953 = (exp2(_3154 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].y)) * _3128.y) / cbSceneParam._m0[78u].y)) + _2877;
        _2955 = (exp2(_3154 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].z)) * _3128.z) / cbSceneParam._m0[78u].z)) + _2878;
        _2957 = _3137 * _2879;
    }
    else
    {
        _2951 = _2876;
        _2953 = _2877;
        _2955 = _2878;
        _2957 = _2879;
    }
    bool _3164;
    vec4 _2967;
    vec4 _2989;
    float _2991;
    float _2995;
    float _2996;
    float _2997;
    float _2998;
    bool _3008;
    for (;;)
    {
        _2967 = cbMatDynParam._m0[0u];
        float _2969 = roundEven(_2967.y);
        bool _2970 = _2969 == 3.0;
        float _2971 = log2(_2957);
        float _2978 = exp2(_2971 * cbSceneParam._m0[78u].x) * _2848;
        float _2979 = exp2(_2971 * cbSceneParam._m0[78u].y) * _2849;
        float _2980 = exp2(_2971 * cbSceneParam._m0[78u].z) * _2850;
        float _2987 = _667 + (-0.5);
        _2989 = cbMtdParam._m0[1u];
        _2991 = _2989.y * _2987;
        float _2994 = (_2969 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2995 = _2994 * (_2970 ? _2978 : (_2978 + (cbSceneParam._m0[72u].w * _2951)));
        _2996 = _2994 * (_2970 ? _2979 : (_2979 + (cbSceneParam._m0[72u].w * _2953)));
        _2997 = _2994 * (_2970 ? _2980 : (_2980 + (cbSceneParam._m0[72u].w * _2955)));
        _2998 = _2987 * 0.999000012874603271484375;
        _3008 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3008)
        {
            if ((cbInstanceData._m0[_260 + 7u].x + _2998) < 0.5)
            {
                _3164 = true;
                break;
            }
        }
        uint _3105 = _719 + uint(_2967.w);
        if ((cbInstanceData._m0[_3105].w < 1.0) && ((cbInstanceData._m0[_3105].w + _2998) < 0.5))
        {
            _3164 = true;
            break;
        }
        if ((_2991 + 1.0) < _2989.x)
        {
            _3164 = true;
            break;
        }
        _3164 = false;
        break;
    }
    float _3368;
    if (_3164)
    {
        discard_state = true;
        _3368 = 0.0;
    }
    else
    {
        _3368 = cbInstanceData._m0[_2851].w;
    }
    SV_Target.x = _2995;
    SV_Target.y = _2996;
    SV_Target.z = _2997;
    SV_Target.w = _3368;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2851].w;
    discard_exit();
}


