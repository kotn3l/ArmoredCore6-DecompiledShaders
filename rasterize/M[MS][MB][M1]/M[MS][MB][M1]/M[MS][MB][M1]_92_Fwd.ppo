#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1367;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3694 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3705 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3716 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    uint _279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _284 = _279 + 1u;
    uint _288 = _279 + 2u;
    float _297 = sqrt(((cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x)) + (cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x));
    float _298 = _297 * TEXCOORD.z;
    float _299 = _297 * TEXCOORD.w;
    vec4 _312 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _298) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _299) + cbTextureTilingScale._m0[13u].w));
    vec4 _336 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _341 = _336.x * cbMtdParam._m0[11u].x;
    float _342 = _336.y * cbMtdParam._m0[11u].y;
    float _343 = _336.z * cbMtdParam._m0[11u].z;
    vec4 _362 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _298) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _299) + cbTextureTilingScale._m0[5u].w));
    vec4 _398 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _400 = _398.x;
    float _412 = dot(vec4(_400, _398.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_400 - _412) * cbMtdParam._m0[24u].y) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3727 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
    float _437 = (_430 * ((_362.x * cbMtdParam._m0[12u].x) - _341)) + _341;
    float _438 = (_430 * ((_362.y * cbMtdParam._m0[12u].y) - _342)) + _342;
    float _439 = (_430 * ((_362.z * cbMtdParam._m0[12u].z) - _343)) + _343;
    float _443 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _312.x) * _437;
    float _446 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _312.y) * _438;
    float _449 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _312.z) * _439;
    float _456 = ((_437 - _443) * (isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0)))) + _443;
    float _457 = ((_438 - _446) * (isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0)))) + _446;
    float _458 = ((_439 - _449) * (isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0)))) + _449;
    vec4 _476 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _298) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _299) + cbTextureTilingScale._m0[20u].w));
    vec4 _501 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _298) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _299) + cbTextureTilingScale._m0[4u].w));
    vec4 _518 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _520 = _518.x;
    float _521 = _518.y;
    float _522 = _518.z;
    float _531 = ((_501.z - _522) * _430) + _522;
    float _534 = ((((_501.x - _520) * _430) + _520) * 2.0) + (-1.0);
    float _535 = ((((_501.y - _521) * _430) + _521) * 2.0) + (-1.0);
    float _536 = dot(vec2(_534, _535), vec2(_534, _535));
    float _3738 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _541 = sqrt(1.0 - (isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0))));
    vec4 _554 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _572 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _298) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _299) + cbTextureTilingScale._m0[11u].w));
    float _574 = _572.x;
    float _575 = 1.0 - _574;
    float _581 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _584 = ((isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : min(_581, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _593 = (_584 - ((((((_574 - _575) * cbMtdParam._m0[24u].z) + _575) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _584))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3759 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _594 = isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0));
    float _601 = (_594 * (cbMtdParam._m0[17u].x - _456)) + _456;
    float _602 = (_594 * (cbMtdParam._m0[17u].y - _457)) + _457;
    float _603 = (_594 * (cbMtdParam._m0[17u].z - _458)) + _458;
    vec4 _615 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _298) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _299) + cbTextureTilingScale._m0[19u].w));
    float _617 = _615.x;
    float _618 = 1.0 - _617;
    float _643 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_617 - _618) * cbMtdParam._m0[24u].w) + _618) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3770 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _644 = isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0));
    float _652 = ((((cbMtdParam._m0[10u].x - _601) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _644) + _601;
    float _653 = ((((cbMtdParam._m0[10u].y - _602) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _644) + _602;
    float _654 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _603)) * _644) + _603;
    vec4 _680 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _682 = _680.x;
    float _700 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _298) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _299) + cbTextureTilingScale._m0[9u].w)).x - _682) * _430) + _682;
    float _704 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _700) * cbMtdParam._m0[19u].z) + _700;
    float _706 = _704 - (_704 * _594);
    float _708 = _706 - (_706 * _644);
    float _713 = (((_476.z - _531) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _531;
    vec4 _727 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _298) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _299) + cbTextureTilingScale._m0[15u].w));
    float _734 = (_727.x * 2.0) + (-1.0);
    float _735 = (_727.y * 2.0) + (-1.0);
    float _736 = dot(vec2(_734, _735), vec2(_734, _735));
    float _3781 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _744 = (_594 * (_727.z - _713)) + _713;
    float _747 = ((cbMtdParam._m0[23u].y - _744) * _644) + _744;
    vec4 _766 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _298) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _299) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _772 = (_766.x * 2.0) + (-1.0);
    float _773 = (_766.y * 2.0) + (-1.0);
    float _774 = dot(vec2(_772, _773), vec2(_772, _773));
    float _3792 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _784 = _534 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_476.x * 2.0) + (-1.0)));
    float _785 = _535 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_476.y * 2.0) + (-1.0)));
    float _797 = (((_734 - _784) + (cbMtdParam._m0[21u].x * _784)) * _594) + _784;
    float _798 = (((_735 - _785) + (cbMtdParam._m0[21u].x * _785)) * _594) + _785;
    float _799 = (_594 * (sqrt(1.0 - (isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0)))) - _541)) + _541;
    float _810 = (((_772 - _797) + (_797 * cbMtdParam._m0[22u].z)) * _644) + _797;
    float _811 = (((_773 - _798) + (_798 * cbMtdParam._m0[22u].z)) * _644) + _798;
    float _812 = ((sqrt(1.0 - (isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0)))) - _799) * _644) + _799;
    float _814 = cbMtdParam._m0[22u].x + _554.w;
    float _817 = fma(_812, _247 * NORMAL.x, fma(_811, _254 * TANGENT.x, (_240 * _232) * _810));
    float _820 = fma(_812, _247 * NORMAL.y, fma(_811, _254 * TANGENT.y, (_240 * _233) * _810));
    float _823 = fma(_812, _247 * NORMAL.z, fma(_811, _254 * TANGENT.z, (_240 * _234) * _810));
    float _827 = inversesqrt(dot(vec3(_817, _820, _823), vec3(_817, _820, _823)));
    float _828 = _827 * _817;
    float _829 = _827 * _820;
    float _830 = _827 * _823;
    float _3803 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _831 = isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0));
    float _3814 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _3825 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _3836 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _3847 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _3858 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _836 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
    float _850 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _890 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _900 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _890);
    float _901 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _890);
    float _902 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _890);
    float _906 = inversesqrt(dot(vec3(_900, _901, _902), vec3(_900, _901, _902)));
    float _907 = _900 * _906;
    float _908 = _901 * _906;
    float _909 = _902 * _906;
    float _915 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _916 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _934 = fma(_830, cbSceneParam._m0[5u].z, fma(_829, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _828));
    float _937 = fma(_830, cbSceneParam._m0[6u].z, fma(_829, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _828));
    float _940 = fma(_830, cbSceneParam._m0[7u].z, fma(_829, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _828));
    uint _954 = (_279 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _960 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0)))) * cbInstanceData._m0[_954].x;
    float _961 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0)))) * cbInstanceData._m0[_954].y;
    float _962 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0)))) * cbInstanceData._m0[_954].z;
    float _3869 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _963 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
    float _3880 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _964 = isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0));
    float _3891 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _965 = isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0));
    float _966 = 1.0 - _836;
    float _967 = _963 * _966;
    float _968 = _964 * _966;
    float _969 = _965 * _966;
    float _974 = (_963 + (-0.039999999105930328369140625)) * _836;
    float _975 = (_964 + (-0.039999999105930328369140625)) * _836;
    float _976 = (_965 + (-0.039999999105930328369140625)) * _836;
    float _977 = _974 + 0.039999999105930328369140625;
    float _979 = _975 + 0.039999999105930328369140625;
    float _980 = _976 + 0.039999999105930328369140625;
    vec4 _989 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _915, cbSceneParam._m0[86u].y * _916));
    float _993 = ((isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0))) * TEXCOORD_5.w) * _989.x;
    float _994 = dot(vec3(_828, _829, _830), vec3(_907, _908, _909));
    float _997 = _994 * 2.0;
    float _1001 = (_997 * _828) - _907;
    float _1002 = (_997 * _829) - _908;
    float _1003 = (_997 * _830) - _909;
    float _1007 = abs(dot(vec3(_907, _908, _909), vec3(_828, _829, _830)));
    float _3902 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
    float _1009 = sqrt(_831);
    float _1022 = exp2((_1009 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1009 * 3.0));
    float _1028 = (1.0 - _1022) * ((_1009 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1029 = _1022 * _1009;
    float _1057 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1061 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1065 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1366;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    float _1378;
    float _1379;
    float _1380;
    float _1381;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1091 = fma(_1065, cbModelParam._m0[26u].z, fma(_1061, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1057));
        float _1095 = fma(_1065, cbModelParam._m0[27u].z, fma(_1061, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1057));
        float _1099 = fma(_1065, cbModelParam._m0[28u].z, fma(_1061, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1057));
        float _1124 = _1057 + _828;
        float _1125 = _1061 + _829;
        float _1126 = _1065 + _830;
        float _1136 = fma(_1126, cbModelParam._m0[26u].z, fma(_1125, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1124)) - _1091;
        float _1137 = fma(_1126, cbModelParam._m0[27u].z, fma(_1125, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1124)) - _1095;
        float _1138 = fma(_1126, cbModelParam._m0[28u].z, fma(_1125, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1124)) - _1099;
        float _1142 = inversesqrt(dot(vec3(_1136, _1137, _1138), vec3(_1136, _1137, _1138)));
        float _1155 = ((_1142 * _1136) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1091 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1156 = ((_1142 * _1137) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1095 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1157 = ((_1142 * _1138) / cbModelParam._m0[34u].z) + ((((((_1099 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1160 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1155, _1156, _1157), 0.0);
        vec4 _1167 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1155, _1156, _1157), 0.0);
        vec4 _1174 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1155, _1156, _1157), 0.0);
        vec4 _1181 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1155, _1156, _1157), 0.0);
        float _1194 = exp2((_1160.w + (-0.5)) * 20.0) * 2.0;
        float _1195 = _1194 * (_1160.x + (-0.5));
        float _1196 = _1194 * (_1160.y + (-0.5));
        float _1197 = _1194 * (_1160.z + (-0.5));
        float _1204 = exp2((_1167.w + (-0.5)) * 20.0) * 2.0;
        float _1205 = _1204 * (_1167.x + (-0.5));
        float _1206 = _1204 * (_1167.y + (-0.5));
        float _1207 = _1204 * (_1167.z + (-0.5));
        float _1214 = exp2((_1174.w + (-0.5)) * 20.0) * 2.0;
        float _1215 = _1214 * (_1174.x + (-0.5));
        float _1216 = _1214 * (_1174.y + (-0.5));
        float _1217 = _1214 * (_1174.z + (-0.5));
        float _1224 = exp2((_1181.w + (-0.5)) * 20.0) * 2.0;
        float _1225 = _1224 * (_1181.x + (-0.5));
        float _1226 = _1224 * (_1181.y + (-0.5));
        float _1227 = _1224 * (_1181.z + (-0.5));
        float _1228 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1229 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1230 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1231 = _1195 * 0.5;
        float _1232 = _1205 * 0.5;
        float _1233 = _1215 * 0.5;
        float _1234 = dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233));
        float _1239 = (_1234 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1234);
        float _1248 = (dot(vec3(_828, _829, _830), vec3(_1239 * _1231, _1239 * _1232, _1239 * _1233)) + 1.0) * 0.5;
        float _3928 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1258 = sqrt(((_1232 * _1232) + (_1231 * _1231)) + (_1233 * _1233)) / (_1228 + 9.9999997473787516355514526367188e-06);
        float _3939 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1259 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
        float _1260 = _1259 * 2.0;
        float _1264 = (1.0 - _1259) / (_1259 + 1.0);
        float _3950 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1265 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
        float _1274 = ((((1.0 - _1265) * (_1260 + 2.0)) * exp2(log2(isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0))) * (_1260 + 1.0))) + _1265) * _1228;
        float _1275 = _1196 * 0.5;
        float _1276 = _1206 * 0.5;
        float _1277 = _1216 * 0.5;
        float _1278 = dot(vec3(_1275, _1276, _1277), vec3(_1275, _1276, _1277));
        float _1283 = (_1278 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1278);
        float _1291 = (dot(vec3(_828, _829, _830), vec3(_1283 * _1275, _1283 * _1276, _1283 * _1277)) + 1.0) * 0.5;
        float _3961 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1300 = sqrt(((_1276 * _1276) + (_1275 * _1275)) + (_1277 * _1277)) / (_1229 + 9.9999997473787516355514526367188e-06);
        float _3972 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1301 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
        float _1302 = _1301 * 2.0;
        float _1306 = (1.0 - _1301) / (_1301 + 1.0);
        float _3983 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1307 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
        float _1316 = ((((1.0 - _1307) * (_1302 + 2.0)) * exp2(log2(isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0))) * (_1302 + 1.0))) + _1307) * _1229;
        float _1317 = _1197 * 0.5;
        float _1318 = _1207 * 0.5;
        float _1319 = _1217 * 0.5;
        float _1320 = dot(vec3(_1317, _1318, _1319), vec3(_1317, _1318, _1319));
        float _1325 = (_1320 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1320);
        float _1333 = (dot(vec3(_828, _829, _830), vec3(_1325 * _1317, _1325 * _1318, _1325 * _1319)) + 1.0) * 0.5;
        float _3994 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1342 = sqrt(((_1318 * _1318) + (_1317 * _1317)) + (_1319 * _1319)) / (_1230 + 9.9999997473787516355514526367188e-06);
        float _4005 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
        float _1344 = _1343 * 2.0;
        float _1348 = (1.0 - _1343) / (_1343 + 1.0);
        float _4016 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
        float _1358 = ((((1.0 - _1349) * (_1344 + 2.0)) * exp2(log2(isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0))) * (_1344 + 1.0))) + _1349) * _1230;
        _1366 = _1197;
        _1368 = _1196;
        _1369 = _1195;
        _1370 = _1207;
        _1371 = _1206;
        _1372 = _1205;
        _1373 = _1217;
        _1374 = _1216;
        _1375 = _1215;
        _1376 = _1230;
        _1377 = _1229;
        _1378 = _1228;
        _1379 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0)));
        _1380 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0)));
        _1381 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0)));
    }
    else
    {
        _1366 = _1367;
        _1368 = _1367;
        _1369 = _1367;
        _1370 = _1367;
        _1371 = _1367;
        _1372 = _1367;
        _1373 = _1367;
        _1374 = _1367;
        _1375 = _1367;
        _1376 = _1367;
        _1377 = _1367;
        _1378 = _1367;
        _1379 = 0.0;
        _1380 = 0.0;
        _1381 = 0.0;
    }
    float _1675;
    float _1676;
    float _1677;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1406 = fma(_1065, cbModelParam._m0[30u].z, fma(_1061, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1057));
        float _1410 = fma(_1065, cbModelParam._m0[31u].z, fma(_1061, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1057));
        float _1414 = fma(_1065, cbModelParam._m0[32u].z, fma(_1061, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1057));
        float _1437 = _1057 + _828;
        float _1438 = _1061 + _829;
        float _1439 = _1065 + _830;
        float _1449 = fma(_1439, cbModelParam._m0[30u].z, fma(_1438, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1437)) - _1406;
        float _1450 = fma(_1439, cbModelParam._m0[31u].z, fma(_1438, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1437)) - _1410;
        float _1451 = fma(_1439, cbModelParam._m0[32u].z, fma(_1438, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1437)) - _1414;
        float _1455 = inversesqrt(dot(vec3(_1449, _1450, _1451), vec3(_1449, _1450, _1451)));
        float _1468 = ((_1455 * _1449) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1406 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1469 = ((_1455 * _1450) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1410 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1470 = ((_1455 * _1451) / cbModelParam._m0[35u].z) + ((((((_1414 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1472 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1468, _1469, _1470), 0.0);
        vec4 _1479 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1468, _1469, _1470), 0.0);
        vec4 _1486 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1468, _1469, _1470), 0.0);
        vec4 _1493 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1468, _1469, _1470), 0.0);
        float _1505 = exp2((_1472.w + (-0.5)) * 20.0) * 2.0;
        float _1506 = _1505 * (_1472.x + (-0.5));
        float _1507 = _1505 * (_1472.y + (-0.5));
        float _1508 = _1505 * (_1472.z + (-0.5));
        float _1515 = exp2((_1479.w + (-0.5)) * 20.0) * 2.0;
        float _1516 = _1515 * (_1479.x + (-0.5));
        float _1517 = _1515 * (_1479.y + (-0.5));
        float _1518 = _1515 * (_1479.z + (-0.5));
        float _1525 = exp2((_1486.w + (-0.5)) * 20.0) * 2.0;
        float _1526 = _1525 * (_1486.x + (-0.5));
        float _1527 = _1525 * (_1486.y + (-0.5));
        float _1528 = _1525 * (_1486.z + (-0.5));
        float _1535 = exp2((_1493.w + (-0.5)) * 20.0) * 2.0;
        float _1536 = _1535 * (_1493.x + (-0.5));
        float _1537 = _1535 * (_1493.y + (-0.5));
        float _1538 = _1535 * (_1493.z + (-0.5));
        float _1539 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1540 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        float _1541 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1542 = _1506 * 0.5;
        float _1543 = _1516 * 0.5;
        float _1544 = _1526 * 0.5;
        float _1545 = dot(vec3(_1542, _1543, _1544), vec3(_1542, _1543, _1544));
        float _1550 = (_1545 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1545);
        float _1558 = (dot(vec3(_828, _829, _830), vec3(_1550 * _1542, _1550 * _1543, _1550 * _1544)) + 1.0) * 0.5;
        float _4057 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1567 = sqrt(((_1543 * _1543) + (_1542 * _1542)) + (_1544 * _1544)) / (_1539 + 9.9999997473787516355514526367188e-06);
        float _4068 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1568 = isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0));
        float _1569 = _1568 * 2.0;
        float _1573 = (1.0 - _1568) / (_1568 + 1.0);
        float _4079 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1574 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
        float _1583 = ((((1.0 - _1574) * (_1569 + 2.0)) * exp2(log2(isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0))) * (_1569 + 1.0))) + _1574) * _1539;
        float _1584 = _1507 * 0.5;
        float _1585 = _1517 * 0.5;
        float _1586 = _1527 * 0.5;
        float _1587 = dot(vec3(_1584, _1585, _1586), vec3(_1584, _1585, _1586));
        float _1592 = (_1587 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1587);
        float _1600 = (dot(vec3(_828, _829, _830), vec3(_1592 * _1584, _1592 * _1585, _1592 * _1586)) + 1.0) * 0.5;
        float _4090 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1609 = sqrt(((_1585 * _1585) + (_1584 * _1584)) + (_1586 * _1586)) / (_1540 + 9.9999997473787516355514526367188e-06);
        float _4101 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1610 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
        float _1611 = _1610 * 2.0;
        float _1615 = (1.0 - _1610) / (_1610 + 1.0);
        float _4112 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
        float _1616 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
        float _1625 = ((((1.0 - _1616) * (_1611 + 2.0)) * exp2(log2(isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0))) * (_1611 + 1.0))) + _1616) * _1540;
        float _1626 = _1508 * 0.5;
        float _1627 = _1518 * 0.5;
        float _1628 = _1528 * 0.5;
        float _1629 = dot(vec3(_1626, _1627, _1628), vec3(_1626, _1627, _1628));
        float _1634 = (_1629 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1629);
        float _1642 = (dot(vec3(_828, _829, _830), vec3(_1634 * _1626, _1634 * _1627, _1634 * _1628)) + 1.0) * 0.5;
        float _4123 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1651 = sqrt(((_1627 * _1627) + (_1626 * _1626)) + (_1628 * _1628)) / (_1541 + 9.9999997473787516355514526367188e-06);
        float _4134 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
        float _1652 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
        float _1653 = _1652 * 2.0;
        float _1657 = (1.0 - _1652) / (_1652 + 1.0);
        float _4145 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1658 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
        float _1667 = ((((1.0 - _1658) * (_1653 + 2.0)) * exp2(log2(isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0))) * (_1653 + 1.0))) + _1658) * _1541;
        _1675 = _1508;
        _1676 = _1507;
        _1677 = _1506;
        _1678 = _1518;
        _1679 = _1517;
        _1680 = _1516;
        _1681 = _1528;
        _1682 = _1527;
        _1683 = _1526;
        _1684 = _1541;
        _1685 = _1540;
        _1686 = _1539;
        _1687 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0)));
        _1688 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)));
        _1689 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)));
    }
    else
    {
        _1675 = _1367;
        _1676 = _1367;
        _1677 = _1367;
        _1678 = _1367;
        _1679 = _1367;
        _1680 = _1367;
        _1681 = _1367;
        _1682 = _1367;
        _1683 = _1367;
        _1684 = _1367;
        _1685 = _1367;
        _1686 = _1367;
        _1687 = 0.0;
        _1688 = 0.0;
        _1689 = 0.0;
    }
    float _1699 = (cbModelParam._m0[1u].x * (_1687 - _1379)) + _1379;
    float _1700 = (cbModelParam._m0[1u].x * (_1688 - _1380)) + _1380;
    float _1701 = (cbModelParam._m0[1u].x * (_1689 - _1381)) + _1381;
    float _1722 = fma(_1701, cbSceneParam._m0[89u].z, fma(_1700, cbSceneParam._m0[89u].y, _1699 * cbSceneParam._m0[89u].x));
    float _1725 = fma(_1701, cbSceneParam._m0[90u].z, fma(_1700, cbSceneParam._m0[90u].y, _1699 * cbSceneParam._m0[90u].x));
    float _1728 = fma(_1701, cbSceneParam._m0[91u].z, fma(_1700, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1699));
    float _1743 = _1001 * 0.5;
    float _1744 = _1002 * 0.5;
    float _1745 = _1003 * 0.5;
    float _1746 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1677, _1680, _1683, _1686));
    float _1749 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1676, _1679, _1682, _1685));
    float _1752 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1675, _1678, _1681, _1684));
    float _1786;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1759 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1366, _1370, _1373, _1376));
        float _1763 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1368, _1371, _1374, _1377));
        float _1767 = dot(vec4(_1743, _1744, _1745, 1.0), vec4(_1369, _1372, _1375, _1378));
        float _1774 = dot(vec4(cbModelParam._m0[39u]), vec4(_1743, _1744, _1745, 1.0));
        _1786 = dot(vec3(isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)), isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)), isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1774) ? 0.0 : (isnan(0.0) ? _1774 : max(0.0, _1774))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1786 = 1.0;
    }
    float _1797;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1788 = dot(vec4(cbModelParam._m0[40u]), vec4(_1743, _1744, _1745, 1.0));
        _1797 = dot(vec3(isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0)), isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)), isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1788) ? 0.0 : (isnan(0.0) ? _1788 : max(0.0, _1788))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1797 = 1.0;
    }
    float _1801 = (_1797 * cbModelParam._m0[1u].x) + (_1786 * (1.0 - cbModelParam._m0[1u].x));
    float _1811 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _831);
    float _1812 = isnan(_1811) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1811 : min(cbModelParam._m0[25u].z, _1811));
    float _1893;
    float _1895;
    float _1897;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1860 = fma(_1065, cbModelParam._m0[13u].z, fma(_1061, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1057)) + cbModelParam._m0[13u].w;
        float _1864 = fma(_1065, cbModelParam._m0[14u].z, fma(_1061, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1057)) + cbModelParam._m0[14u].w;
        float _1868 = fma(_1065, cbModelParam._m0[15u].z, fma(_1061, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1057)) + cbModelParam._m0[15u].w;
        float _1871 = fma(_1003, cbModelParam._m0[13u].z, fma(_1002, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1001));
        float _1874 = fma(_1003, cbModelParam._m0[14u].z, fma(_1002, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1001));
        float _1877 = fma(_1003, cbModelParam._m0[15u].z, fma(_1002, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1001));
        float _1905;
        if (_1871 > 0.0)
        {
            _1905 = abs((1.0 - _1860) / _1871);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1871 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1860 + 1.0) / _1871);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1905 = frontier_phi_14_12_ladder;
        }
        float _2108;
        if (_1874 > 0.0)
        {
            _2108 = abs((1.0 - _1864) / _1874);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1864 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2108 = frontier_phi_23_19_ladder;
        }
        float _2362;
        if (_1877 > 0.0)
        {
            _2362 = abs((1.0 - _1868) / _1877);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1868 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2362 = frontier_phi_35_30_ladder;
        }
        float _2364 = isnan(_2108) ? _1905 : (isnan(_1905) ? _2108 : min(_1905, _2108));
        float _2365 = isnan(_2362) ? _2364 : (isnan(_2364) ? _2362 : min(_2364, _2362));
        float _2369 = (_2365 * _1871) + _1860;
        float _2370 = (_2365 * _1874) + _1864;
        float _2371 = (_2365 * _1877) + _1868;
        float _2372 = _2365 * 9.9999997473787516355514526367188e-05;
        float _2374 = (-1.0) - _2372;
        float _2376 = _2372 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2371 > _2376) || ((_2371 < _2374) || ((_2370 > _2376) || ((_2370 < _2374) || ((_2369 < _2374) || (_2369 > _2376))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2499 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2371, cbModelParam._m0[9u].z, fma(_2370, cbModelParam._m0[9u].y, _2369 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2371, cbModelParam._m0[10u].z, fma(_2370, cbModelParam._m0[10u].y, _2369 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2371, cbModelParam._m0[11u].z, fma(_2370, cbModelParam._m0[11u].y, _2369 * cbModelParam._m0[11u].x))), _1812);
            frontier_phi_13_35_ladder = _2499.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2499.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2499.x * cbModelParam._m0[1u].y;
        }
        _1893 = frontier_phi_13_35_ladder_2;
        _1895 = frontier_phi_13_35_ladder_1;
        _1897 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1881 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1001, _1002, _1003), _1812);
        _1893 = _1881.x * cbModelParam._m0[1u].y;
        _1895 = _1881.y * cbModelParam._m0[1u].y;
        _1897 = _1881.z * cbModelParam._m0[1u].y;
    }
    float _1901 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _831);
    float _1902 = isnan(_1901) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1901 : min(cbModelParam._m0[25u].w, _1901));
    float _1992;
    float _1994;
    float _1996;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1956 = fma(_1065, cbModelParam._m0[21u].z, fma(_1061, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1057)) + cbModelParam._m0[21u].w;
        float _1960 = fma(_1065, cbModelParam._m0[22u].z, fma(_1061, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1057)) + cbModelParam._m0[22u].w;
        float _1964 = fma(_1065, cbModelParam._m0[23u].z, fma(_1061, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1057)) + cbModelParam._m0[23u].w;
        float _1967 = fma(_1003, cbModelParam._m0[21u].z, fma(_1002, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1001));
        float _1970 = fma(_1003, cbModelParam._m0[22u].z, fma(_1002, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1001));
        float _1973 = fma(_1003, cbModelParam._m0[23u].z, fma(_1002, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1001));
        float _2113;
        if (_1967 > 0.0)
        {
            _2113 = abs((1.0 - _1956) / _1967);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1967 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1956 + 1.0) / _1967);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2113 = frontier_phi_25_21_ladder;
        }
        float _2389;
        if (_1970 > 0.0)
        {
            _2389 = abs((1.0 - _1960) / _1970);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1970 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1960 + 1.0) / _1970);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2389 = frontier_phi_37_32_ladder;
        }
        float _2602;
        if (_1973 > 0.0)
        {
            _2602 = abs((1.0 - _1964) / _1973);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1964 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2602 = frontier_phi_46_43_ladder;
        }
        float _2604 = isnan(_2389) ? _2113 : (isnan(_2113) ? _2389 : min(_2113, _2389));
        float _2605 = isnan(_2602) ? _2604 : (isnan(_2604) ? _2602 : min(_2604, _2602));
        float _2609 = (_2605 * _1967) + _1956;
        float _2610 = (_2605 * _1970) + _1960;
        float _2611 = (_2605 * _1973) + _1964;
        float _2612 = _2605 * 9.9999997473787516355514526367188e-05;
        float _2613 = (-1.0) - _2612;
        float _2615 = _2612 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2611 > _2615) || ((_2611 < _2613) || ((_2610 > _2615) || ((_2610 < _2613) || ((_2609 < _2613) || (_2609 > _2615))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2810 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2611, cbModelParam._m0[17u].z, fma(_2610, cbModelParam._m0[17u].y, _2609 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2611, cbModelParam._m0[18u].z, fma(_2610, cbModelParam._m0[18u].y, _2609 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2611, cbModelParam._m0[19u].z, fma(_2610, cbModelParam._m0[19u].y, _2609 * cbModelParam._m0[19u].x))), _1902);
            frontier_phi_22_46_ladder = _2810.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2810.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2810.x * cbModelParam._m0[1u].z;
        }
        _1992 = frontier_phi_22_46_ladder_2;
        _1994 = frontier_phi_22_46_ladder_1;
        _1996 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1976 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1001, _1002, _1003), _1902);
        _1992 = _1976.x * cbModelParam._m0[1u].z;
        _1994 = _1976.y * cbModelParam._m0[1u].z;
        _1996 = _1976.z * cbModelParam._m0[1u].z;
    }
    float _2009 = (((_1028 * _977) + _1029) * _993) * ((cbModelParam._m0[1u].w * (_1992 - _1893)) + _1893);
    float _2011 = (((_1028 * _979) + _1029) * _993) * ((cbModelParam._m0[1u].w * (_1994 - _1895)) + _1895);
    float _2013 = (((_1028 * _980) + _1029) * _993) * ((cbModelParam._m0[1u].w * (_1996 - _1897)) + _1897);
    float _2016 = fma(_2013, cbSceneParam._m0[89u].z, fma(_2011, cbSceneParam._m0[89u].y, _2009 * cbSceneParam._m0[89u].x));
    float _2019 = fma(_2013, cbSceneParam._m0[90u].z, fma(_2011, cbSceneParam._m0[90u].y, _2009 * cbSceneParam._m0[90u].x));
    float _2022 = fma(_2013, cbSceneParam._m0[91u].z, fma(_2011, cbSceneParam._m0[91u].y, _2009 * cbSceneParam._m0[91u].x));
    uvec4 _2032 = floatBitsToUint(cbInstanceData._m0[_279 + 5u]);
    uint _2034 = _2032.x * 14u;
    uint _2035 = _2034 + 13u;
    float _2042 = _993 + (-1.0);
    float _2047 = (cbLight._m0[_2035].x * _2042) + 1.0;
    float _2048 = (cbLight._m0[_2035].y * _2042) + 1.0;
    float _2049 = (cbLight._m0[_2035].z * _2042) + 1.0;
    float _2050 = (cbLight._m0[_2035].w * _2042) + 1.0;
    uint _2051 = _2034 + 5u;
    float _2057 = isnan(1.0) ? _2048 : (isnan(_2048) ? 1.0 : min(_2048, 1.0));
    uint _2061 = _2034 + 4u;
    float _2067 = isnan(1.0) ? _2047 : (isnan(_2047) ? 1.0 : min(_2047, 1.0));
    uint _2071 = _2034 | 1u;
    float _2082 = dot(vec3(cbLight._m0[_2034].xyz), vec3(_828, _829, _830));
    float _2085 = dot(vec3(cbLight._m0[_2071].xyz), vec3(_828, _829, _830));
    float _4281 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
    float _4292 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
    float _2090 = (isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0))) * 0.3183098733425140380859375;
    float _2092 = (isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * 0.3183098733425140380859375;
    float _2099 = ((cbLight._m0[_2051].x * _2057) * _2092) + ((cbLight._m0[_2061].x * _2067) * _2090);
    float _2100 = ((_2057 * cbLight._m0[_2051].y) * _2092) + ((_2067 * cbLight._m0[_2061].y) * _2090);
    float _2101 = ((_2057 * cbLight._m0[_2051].z) * _2092) + ((_2067 * cbLight._m0[_2061].z) * _2090);
    uvec4 _2105 = floatBitsToUint(cbLight._m0[_2034 + 12u]);
    bool _2107 = _2105.x == 0u;
    float _2118;
    float _2120;
    float _2122;
    if (_2107)
    {
        _2118 = _2099;
        _2120 = _2100;
        _2122 = _2101;
    }
    else
    {
        uint _2126 = _2034 + 6u;
        float _2142 = (dot(vec3(cbLight._m0[_2034 + 2u].xyz), vec3(_828, _829, _830)) * 0.5) + 0.5;
        float _2143 = _2142 * _2142;
        float _4303 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
        float _2144 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _2145 = isnan(1.0) ? _2049 : (isnan(_2049) ? 1.0 : min(_2049, 1.0));
        _2118 = (((cbLight._m0[_2126].x * 0.3183098733425140380859375) * _2144) * _2145) + _2099;
        _2120 = (((cbLight._m0[_2126].y * 0.3183098733425140380859375) * _2144) * _2145) + _2100;
        _2122 = (((cbLight._m0[_2126].z * 0.3183098733425140380859375) * _2144) * _2145) + _2101;
    }
    bool _2125 = _2105.y == 0u;
    float _2163;
    float _2165;
    float _2167;
    if (_2125)
    {
        _2163 = _2118;
        _2165 = _2120;
        _2167 = _2122;
    }
    else
    {
        uint _2333 = _2034 + 7u;
        float _2349 = (dot(vec3(cbLight._m0[_2034 + 3u].xyz), vec3(_828, _829, _830)) * 0.5) + 0.5;
        float _2350 = _2349 * _2349;
        float _4319 = isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0));
        float _2351 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _2352 = isnan(1.0) ? _2050 : (isnan(_2050) ? 1.0 : min(_2050, 1.0));
        _2163 = (((cbLight._m0[_2333].x * 0.3183098733425140380859375) * _2351) * _2352) + _2118;
        _2165 = (((cbLight._m0[_2333].y * 0.3183098733425140380859375) * _2351) * _2352) + _2120;
        _2167 = (((cbLight._m0[_2333].z * 0.3183098733425140380859375) * _2351) * _2352) + _2122;
    }
    uint _2170 = _2034 + 8u;
    float _2183 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2034].w)) * _831) * 0.949999988079071044921875);
    float _2184 = _2183 * _2183;
    float _2185 = cbLight._m0[_2034].x + _907;
    float _2186 = cbLight._m0[_2034].y + _908;
    float _2187 = cbLight._m0[_2034].z + _909;
    float _2191 = inversesqrt(dot(vec3(_2185, _2186, _2187), vec3(_2185, _2186, _2187)));
    float _2192 = _2191 * _2185;
    float _2193 = _2191 * _2186;
    float _2194 = _2191 * _2187;
    float _2195 = dot(vec3(_828, _829, _830), vec3(cbLight._m0[_2034].xyz));
    float _4335 = isnan(0.0) ? _2195 : (isnan(_2195) ? 0.0 : max(_2195, 0.0));
    float _2198 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
    float _4346 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _2199 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
    float _2200 = dot(vec3(_828, _829, _830), vec3(_2192, _2193, _2194));
    float _4357 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _2203 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
    float _2204 = dot(vec3(cbLight._m0[_2034].xyz), vec3(_2192, _2193, _2194));
    float _4368 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    float _2208 = _2184 * _2184;
    float _2212 = ((_2203 * _2203) * (_2208 + (-1.0))) + 1.0;
    float _2220 = exp2(log2(1.0 - (isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0)))) * 5.0);
    float _2221 = 0.959999978542327880859375 - _974;
    float _2223 = 0.959999978542327880859375 - _975;
    float _2224 = 0.959999978542327880859375 - _976;
    float _2231 = 1.0 - _2184;
    float _2242 = (0.5 / (((_2199 * ((_2198 * _2231) + _2184)) + 9.9999999392252902907785028219223e-09) + (((_2199 * _2231) + _2184) * _2198))) * _2198;
    float _4379 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _2244 = (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * (_2208 / ((_2212 * _2212) * 3.141590118408203125));
    uint _2255 = _2034 + 9u;
    float _2266 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2071].w)) * _831) * 0.949999988079071044921875);
    float _2267 = _2266 * _2266;
    float _2268 = cbLight._m0[_2071].x + _907;
    float _2269 = cbLight._m0[_2071].y + _908;
    float _2270 = cbLight._m0[_2071].z + _909;
    float _2274 = inversesqrt(dot(vec3(_2268, _2269, _2270), vec3(_2268, _2269, _2270)));
    float _2275 = _2274 * _2268;
    float _2276 = _2274 * _2269;
    float _2277 = _2274 * _2270;
    float _2278 = dot(vec3(_828, _829, _830), vec3(cbLight._m0[_2071].xyz));
    float _4390 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
    float _2281 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
    float _2282 = dot(vec3(_828, _829, _830), vec3(_2275, _2276, _2277));
    float _4401 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
    float _2285 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
    float _2286 = dot(vec3(cbLight._m0[_2071].xyz), vec3(_2275, _2276, _2277));
    float _4412 = isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0));
    float _2290 = _2267 * _2267;
    float _2294 = ((_2285 * _2285) * (_2290 + (-1.0))) + 1.0;
    float _2301 = exp2(log2(1.0 - (isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0)))) * 5.0);
    float _2308 = 1.0 - _2267;
    float _2318 = (0.5 / (((_2199 * ((_2281 * _2308) + _2267)) + 9.9999999392252902907785028219223e-09) + (((_2199 * _2308) + _2267) * _2281))) * _2281;
    float _4423 = isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0));
    float _2320 = (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * (_2290 / ((_2294 * _2294) * 3.141590118408203125));
    float _2330 = (((((_2301 * _2221) + _977) * cbLight._m0[_2255].x) * _2320) * _2057) + (((((_2220 * _2221) + _977) * cbLight._m0[_2170].x) * _2244) * _2067);
    float _2331 = (((((_2301 * _2223) + _979) * cbLight._m0[_2255].y) * _2320) * _2057) + (((((_2220 * _2223) + _979) * cbLight._m0[_2170].y) * _2244) * _2067);
    float _2332 = (((((_2301 * _2224) + _980) * cbLight._m0[_2255].z) * _2320) * _2057) + (((((_2220 * _2224) + _980) * cbLight._m0[_2170].z) * _2244) * _2067);
    float _2394;
    float _2396;
    float _2398;
    if (_2107)
    {
        _2394 = _2330;
        _2396 = _2331;
        _2398 = _2332;
    }
    else
    {
        uint _2400 = _2034 + 2u;
        uint _2404 = _2034 + 10u;
        float _2418 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2400].w)) * _831) * 0.949999988079071044921875);
        float _2419 = _2418 * _2418;
        float _2420 = cbLight._m0[_2400].x + _907;
        float _2421 = cbLight._m0[_2400].y + _908;
        float _2422 = cbLight._m0[_2400].z + _909;
        float _2426 = inversesqrt(dot(vec3(_2420, _2421, _2422), vec3(_2420, _2421, _2422)));
        float _2427 = _2426 * _2420;
        float _2428 = _2426 * _2421;
        float _2429 = _2426 * _2422;
        float _2430 = dot(vec3(_828, _829, _830), vec3(cbLight._m0[_2400].xyz));
        float _4434 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
        float _2433 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
        float _2434 = dot(vec3(_828, _829, _830), vec3(_2427, _2428, _2429));
        float _4445 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
        float _2437 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
        float _2438 = dot(vec3(cbLight._m0[_2400].xyz), vec3(_2427, _2428, _2429));
        float _4456 = isnan(0.0) ? _2438 : (isnan(_2438) ? 0.0 : max(_2438, 0.0));
        float _2442 = _2419 * _2419;
        float _2446 = ((_2437 * _2437) * (_2442 + (-1.0))) + 1.0;
        float _2453 = exp2(log2(1.0 - (isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0)))) * 5.0);
        float _2460 = 1.0 - _2419;
        float _2470 = (0.5 / (((_2199 * ((_2433 * _2460) + _2419)) + 9.9999999392252902907785028219223e-09) + (((_2199 * _2460) + _2419) * _2433))) * _2433;
        float _4467 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0));
        float _2472 = (isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0))) * (_2442 / ((_2446 * _2446) * 3.141590118408203125));
        float _2473 = isnan(1.0) ? _2049 : (isnan(_2049) ? 1.0 : min(_2049, 1.0));
        _2394 = (((((_2453 * _2221) + _977) * cbLight._m0[_2404].x) * _2472) * _2473) + _2330;
        _2396 = (((((_2453 * _2223) + _979) * cbLight._m0[_2404].y) * _2472) * _2473) + _2331;
        _2398 = (((((_2453 * _2224) + _980) * cbLight._m0[_2404].z) * _2472) * _2473) + _2332;
    }
    float _2508;
    float _2510;
    float _2512;
    if (_2125)
    {
        _2508 = _2394;
        _2510 = _2396;
        _2512 = _2398;
    }
    else
    {
        uint _2519 = _2034 + 3u;
        uint _2523 = _2034 + 11u;
        float _2537 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2519].w)) * _831) * 0.949999988079071044921875);
        float _2538 = _2537 * _2537;
        float _2539 = cbLight._m0[_2519].x + _907;
        float _2540 = cbLight._m0[_2519].y + _908;
        float _2541 = cbLight._m0[_2519].z + _909;
        float _2545 = inversesqrt(dot(vec3(_2539, _2540, _2541), vec3(_2539, _2540, _2541)));
        float _2546 = _2545 * _2539;
        float _2547 = _2545 * _2540;
        float _2548 = _2545 * _2541;
        float _2549 = dot(vec3(_828, _829, _830), vec3(cbLight._m0[_2519].xyz));
        float _4483 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
        float _2552 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _2553 = dot(vec3(_828, _829, _830), vec3(_2546, _2547, _2548));
        float _4494 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2556 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _2557 = dot(vec3(cbLight._m0[_2519].xyz), vec3(_2546, _2547, _2548));
        float _4505 = isnan(0.0) ? _2557 : (isnan(_2557) ? 0.0 : max(_2557, 0.0));
        float _2561 = _2538 * _2538;
        float _2565 = ((_2556 * _2556) * (_2561 + (-1.0))) + 1.0;
        float _2572 = exp2(log2(1.0 - (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0)))) * 5.0);
        float _2579 = 1.0 - _2538;
        float _2589 = (0.5 / (((_2199 * ((_2552 * _2579) + _2538)) + 9.9999999392252902907785028219223e-09) + (((_2199 * _2579) + _2538) * _2552))) * _2552;
        float _4516 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2591 = (isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0))) * (_2561 / ((_2565 * _2565) * 3.141590118408203125));
        float _2592 = isnan(1.0) ? _2050 : (isnan(_2050) ? 1.0 : min(_2050, 1.0));
        _2508 = (((((_2572 * _2221) + _977) * cbLight._m0[_2523].x) * _2591) * _2592) + _2394;
        _2510 = (((((_2572 * _2223) + _979) * cbLight._m0[_2523].y) * _2591) * _2592) + _2396;
        _2512 = (((((_2572 * _2224) + _980) * cbLight._m0[_2523].z) * _2591) * _2592) + _2398;
    }
    float _2727;
    float _2729;
    float _2731;
    float _2733;
    float _2735;
    float _2737;
    if (_2032.y == 0u)
    {
        float _2667 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2668 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2667;
        float _2669 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2667;
        float _2670 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2667;
        uvec4 _2682 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2683 = _2682.x;
        uint _2694 = uint((float(_2682.y) * floor(float(uint(cbSceneParam._m0[85u].y * _916) / _2683))) + floor(float(uint(cbSceneParam._m0[85u].x * _915) / _2683)));
        float _2704 = (log2(_2670 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2705 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        uint _2708 = uint(isnan(14.0) ? _2705 : (isnan(_2705) ? 14.0 : min(_2705, 14.0)));
        uvec4 _2713 = texelFetch(g_lightClusterGridBuffer, int(((_2708 << 2u) + (_2694 << 6u)) >> 2u));
        uint _2714 = _2713.x;
        uint _2715 = _2682.z;
        float _2815;
        float _2817;
        float _2819;
        float _2821;
        float _2823;
        float _2825;
        if (((((1u << ((_2715 >> 4u) & 15u)) + 4294967295u) & _2714) == 0u) || ((_2715 & 240u) == 0u))
        {
            _2815 = 0.0;
            _2817 = 0.0;
            _2819 = 0.0;
            _2821 = 0.0;
            _2823 = 0.0;
            _2825 = 0.0;
        }
        else
        {
            float _2816;
            float _2818;
            float _2820;
            float _2822;
            float _2824;
            float _2826;
            float _2960 = 0.0;
            float _2961 = 0.0;
            float _2962 = 0.0;
            float _2963 = 0.0;
            float _2964 = 0.0;
            float _2965 = 0.0;
            uint _2966 = 0u;
            uint _2975;
            bool _2976;
            for (;;)
            {
                _2975 = texelFetch(g_lightClassification, int((((_2708 << 5u) + (_2694 << 9u)) + (_2966 << 2u)) >> 2u)).x;
                _2976 = _2975 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2976)
                {
                    frontier_phi_61_pred = _2960;
                    frontier_phi_61_pred_1 = _2965;
                    frontier_phi_61_pred_2 = _2964;
                    frontier_phi_61_pred_3 = _2963;
                    frontier_phi_61_pred_4 = _2962;
                    frontier_phi_61_pred_5 = _2961;
                }
                else
                {
                    float _3084;
                    float _3085;
                    float _3086;
                    float _3087;
                    float _3088;
                    float _3089;
                    uint _3090;
                    _3084 = _2960;
                    _3085 = _2961;
                    _3086 = _2962;
                    _3087 = _2963;
                    _3088 = _2964;
                    _3089 = _2965;
                    _3090 = _2975;
                    float _3016;
                    float _3017;
                    float _3018;
                    float _3019;
                    float _3020;
                    float _3021;
                    for (;;)
                    {
                        uint _3094 = uint(findLSB(_3090)) + (_2966 << 5u);
                        uint _3091 = (_3090 + 4294967295u) & _3090;
                        uint _3096 = _3094 * 48u;
                        vec4 _3110 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3096)).x, texelFetch(g_PointLightRenderingBuffer, int(_3096 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3096 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3096 + 3u)).x));
                        uint _3116 = (_3094 * 48u) + 4u;
                        vec4 _3129 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3116)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 3u)).x));
                        uint _3135 = (_3094 * 48u) + 8u;
                        vec3 _3146 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3135)).x, texelFetch(g_PointLightRenderingBuffer, int(_3135 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3135 + 2u)).x));
                        float _3150 = _3110.x - _2668;
                        float _3151 = _3110.y - _2669;
                        float _3152 = _3110.z - _2670;
                        float _3153 = dot(vec3(_3150, _3151, _3152), vec3(_3150, _3151, _3152));
                        float _3156 = inversesqrt(_3153);
                        float _3157 = _3156 * _3150;
                        float _3158 = _3156 * _3151;
                        float _3159 = _3156 * _3152;
                        float _3160 = dot(vec3(_934, _937, _940), vec3(_3157, _3158, _3159));
                        float _3165 = 1.0 - (_3153 * _3110.w);
                        float _4542 = isnan(0.0) ? _3165 : (isnan(_3165) ? 0.0 : max(_3165, 0.0));
                        float _3166 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
                        float _3167 = sqrt(_3153) * _3129.w;
                        float _3170 = 1.39999997615814208984375 / (_3167 + 1.39999997615814208984375);
                        float _3171 = _3170 * _3170;
                        float _3174 = ((1.0 - _3171) * _3160) + _3171;
                        float _3177 = _3167 * _3167;
                        float _3181 = ((isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0))) * _3166) / ((_3177 * 0.699999988079071044921875) + 1.0);
                        float _3185 = (-0.0) - _2668;
                        float _3186 = (-0.0) - _2669;
                        float _3187 = (-0.0) - _2670;
                        float _3191 = inversesqrt(dot(vec3(_3185, _3186, _3187), vec3(_3185, _3186, _3187)));
                        float _3192 = _3191 * _3185;
                        float _3193 = _3191 * _3186;
                        float _3194 = _3191 * _3187;
                        float _3202 = exp2(log2(1.0 / ((_3177 * 3.5) + 5.0)) * 0.25);
                        float _3203 = 1.0 - _1009;
                        float _3210 = sqrt(1.0 - ((1.0 - (_3203 * _3203)) * (1.0 - (_3202 * _3202))));
                        float _3211 = _3210 * _3210;
                        float _3212 = _3211 * _3211;
                        float _3213 = _3192 + _3157;
                        float _3214 = _3193 + _3158;
                        float _3215 = _3194 + _3159;
                        float _3219 = inversesqrt(dot(vec3(_3213, _3214, _3215), vec3(_3213, _3214, _3215)));
                        float _3223 = dot(vec3(_934, _937, _940), vec3(_3192, _3193, _3194));
                        float _4558 = isnan(0.0) ? _3223 : (isnan(_3223) ? 0.0 : max(_3223, 0.0));
                        float _3226 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
                        float _3227 = dot(vec3(_934, _937, _940), vec3(_3219 * _3213, _3219 * _3214, _3219 * _3215));
                        float _4569 = isnan(0.0) ? _3227 : (isnan(_3227) ? 0.0 : max(_3227, 0.0));
                        float _3230 = isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0));
                        float _3234 = ((_3230 * _3230) * (_3212 + (-1.0))) + 1.0;
                        float _3235 = _3170 * _3211;
                        float _3236 = _3235 * _3235;
                        float _3239 = ((1.0 - _3236) * _3160) + _3236;
                        float _4580 = isnan(0.0) ? _3239 : (isnan(_3239) ? 0.0 : max(_3239, 0.0));
                        float _3240 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
                        float _3241 = 1.0 - _3211;
                        float _3251 = (0.5 / (((_3240 * ((_3226 * _3241) + _3211)) + 9.9999999392252902907785028219223e-09) + (((_3240 * _3241) + _3211) * _3226))) * _3240;
                        float _4591 = isnan(0.0) ? _3251 : (isnan(_3251) ? 0.0 : max(_3251, 0.0));
                        float _3262 = (((_3212 * 3.1415927410125732421875) * (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0)))) / ((_3234 * _3234) * ((_3177 * 2.1991131305694580078125) + 3.141590118408203125))) * _3166;
                        _3019 = (_3181 * _3129.x) + _3087;
                        _3020 = (_3181 * _3129.y) + _3088;
                        _3021 = (_3181 * _3129.z) + _3089;
                        _3016 = (_3262 * _3146.x) + _3084;
                        _3017 = (_3262 * _3146.y) + _3085;
                        _3018 = (_3262 * _3146.z) + _3086;
                        if (_3091 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3084 = _3016;
                            _3085 = _3017;
                            _3086 = _3018;
                            _3087 = _3019;
                            _3088 = _3020;
                            _3089 = _3021;
                            _3090 = _3091;
                        }
                    }
                    frontier_phi_61_pred = _3016;
                    frontier_phi_61_pred_1 = _3021;
                    frontier_phi_61_pred_2 = _3020;
                    frontier_phi_61_pred_3 = _3019;
                    frontier_phi_61_pred_4 = _3018;
                    frontier_phi_61_pred_5 = _3017;
                }
                _2816 = frontier_phi_61_pred;
                _2826 = frontier_phi_61_pred_1;
                _2824 = frontier_phi_61_pred_2;
                _2822 = frontier_phi_61_pred_3;
                _2820 = frontier_phi_61_pred_4;
                _2818 = frontier_phi_61_pred_5;
                uint _2967 = _2966 + 1u;
                if (_2967 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2960 = _2816;
                    _2961 = _2818;
                    _2962 = _2820;
                    _2963 = _2822;
                    _2964 = _2824;
                    _2965 = _2826;
                    _2966 = _2967;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2815 = _2816;
            _2817 = _2818;
            _2819 = _2820;
            _2821 = _2822;
            _2823 = _2824;
            _2825 = _2826;
        }
        uvec4 _2829 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2830 = _2829.z;
        uint _2832 = (_2830 >> 8u) & 15u;
        float _2928;
        float _2930;
        float _2932;
        float _2934;
        float _2936;
        float _2938;
        if (((4294967295u << _2832) & _2714) == 0u)
        {
            _2928 = _2815;
            _2930 = _2817;
            _2932 = _2819;
            _2934 = _2821;
            _2936 = _2823;
            _2938 = _2825;
        }
        else
        {
            float _2953 = inversesqrt(dot(vec3(_2668, _2669, _2670), vec3(_2668, _2669, _2670)));
            float _2954 = _2953 * _2668;
            float _2955 = _2953 * _2669;
            float _2956 = _2953 * _2670;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2832 < ((_2830 >> 12u) & 15u))
            {
                float _2929;
                float _2931;
                float _2933;
                float _2935;
                float _2937;
                float _2939;
                float _3067 = _2815;
                float _3068 = _2817;
                float _3069 = _2819;
                float _3070 = _2821;
                float _3071 = _2823;
                float _3072 = _2825;
                uint _3073 = _2832;
                uint _3082;
                bool _3083;
                for (;;)
                {
                    _3082 = texelFetch(g_lightClassification, int((((_2708 << 5u) + (_2694 << 9u)) + (_3073 << 2u)) >> 2u)).x;
                    _3083 = _3082 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3083)
                    {
                        frontier_phi_67_pred = _3070;
                        frontier_phi_67_pred_1 = _3071;
                        frontier_phi_67_pred_2 = _3072;
                        frontier_phi_67_pred_3 = _3069;
                        frontier_phi_67_pred_4 = _3068;
                        frontier_phi_67_pred_5 = _3067;
                    }
                    else
                    {
                        float _3267;
                        float _3268;
                        float _3269;
                        float _3270;
                        float _3271;
                        float _3272;
                        float _3560;
                        float _3561;
                        float _3562;
                        float _3563;
                        float _3564;
                        float _3565;
                        float _3280 = _3067;
                        float _3281 = _3068;
                        float _3282 = _3069;
                        float _3283 = _3070;
                        float _3284 = _3071;
                        float _3285 = _3072;
                        uint _3286 = _3082;
                        uint _3287;
                        vec4 _3312;
                        float _3313;
                        vec4 _3328;
                        vec3 _3340;
                        vec4 _3355;
                        vec4 _3370;
                        float _3416;
                        bool _3417;
                        for (;;)
                        {
                            uint _3297 = ((_3073 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3286));
                            _3287 = (_3286 + 4294967295u) & _3286;
                            uint _3299 = _3297 * 40u;
                            _3312 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3299)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 3u)).x));
                            _3313 = _3312.w;
                            uint _3315 = (_3297 * 40u) + 4u;
                            _3328 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3315)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3315 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3315 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3315 + 3u)).x));
                            uint _3330 = (_3297 * 40u) + 8u;
                            _3340 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3330)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3330 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3330 + 2u)).x));
                            uint _3342 = (_3297 * 40u) + 16u;
                            _3355 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3342)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 3u)).x));
                            uint _3357 = (_3297 * 40u) + 20u;
                            _3370 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3357)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 3u)).x));
                            uint _3372 = (_3297 * 40u) + 24u;
                            vec4 _3385 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3372)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3372 + 3u)).x));
                            uint _3391 = (_3297 * 40u) + 28u;
                            vec4 _3404 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3391)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 3u)).x));
                            _3416 = fma(_2670, _3404.z, fma(_2669, _3404.y, _3404.x * _2668)) + _3404.w;
                            _3417 = !((fma(_2670, _3385.z, fma(_2669, _3385.y, _3385.x * _2668)) + _3385.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3417)
                            {
                                float _3444 = _3312.x - _2668;
                                float _3445 = _3312.y - _2669;
                                float _3446 = _3312.z - _2670;
                                float _3447 = dot(vec3(_3444, _3445, _3446), vec3(_3444, _3445, _3446));
                                float _3450 = inversesqrt(_3447);
                                float _3451 = _3450 * _3444;
                                float _3452 = _3450 * _3445;
                                float _3453 = _3450 * _3446;
                                float _3457 = 1.0 - (_3447 / (_3313 * _3313));
                                float _4602 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0));
                                float _3458 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
                                float _3462 = sqrt(_3447) * _3328.w;
                                float _3464 = 1.39999997615814208984375 / (_3462 + 1.39999997615814208984375);
                                float _3465 = _3464 * _3464;
                                float _3468 = ((1.0 - _3465) * dot(vec3(_3451, _3452, _3453), vec3(_934, _937, _940))) + _3465;
                                float _3471 = _3462 * _3462;
                                float _3475 = (fma(_2670, _3355.z, fma(_2669, _3355.y, _3355.x * _2668)) + _3355.w) / _3416;
                                float _3476 = (fma(_2670, _3370.z, fma(_2669, _3370.y, _3370.x * _2668)) + _3370.w) / _3416;
                                float _3480 = 1.0 - dot(vec2(_3475, _3476), vec2(_3475, _3476));
                                float _4618 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                                float _3481 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
                                float _3482 = _3481 * (((isnan(0.0) ? _3468 : (isnan(_3468) ? 0.0 : max(_3468, 0.0))) * _3458) / ((_3471 * 0.699999988079071044921875) + 1.0));
                                float _3494 = exp2(log2(1.0 / ((_3471 * 3.5) + 5.0)) * 0.25);
                                float _3495 = 1.0 - _1009;
                                float _3502 = sqrt(1.0 - ((1.0 - (_3495 * _3495)) * (1.0 - (_3494 * _3494))));
                                float _3503 = _3502 * _3502;
                                float _3504 = _3503 * _3503;
                                float _3505 = _3451 - _2954;
                                float _3506 = _3452 - _2955;
                                float _3507 = _3453 - _2956;
                                float _3511 = inversesqrt(dot(vec3(_3505, _3506, _3507), vec3(_3505, _3506, _3507)));
                                float _3515 = dot(vec3(_934, _937, _940), vec3((-0.0) - _2954, (-0.0) - _2955, (-0.0) - _2956));
                                float _4629 = isnan(0.0) ? _3515 : (isnan(_3515) ? 0.0 : max(_3515, 0.0));
                                float _3518 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
                                float _3519 = dot(vec3(_934, _937, _940), vec3(_3511 * _3505, _3511 * _3506, _3511 * _3507));
                                float _4640 = isnan(0.0) ? _3519 : (isnan(_3519) ? 0.0 : max(_3519, 0.0));
                                float _3522 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
                                float _3526 = ((_3522 * _3522) * (_3504 + (-1.0))) + 1.0;
                                float _3527 = _3464 * _3503;
                                float _3528 = _3527 * _3527;
                                float _3534 = ((1.0 - _3528) * dot(vec3(_934, _937, _940), vec3(_3451, _3452, _3453))) + _3528;
                                float _4651 = isnan(0.0) ? _3534 : (isnan(_3534) ? 0.0 : max(_3534, 0.0));
                                float _3535 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
                                float _3536 = 1.0 - _3503;
                                float _3546 = (0.5 / (((_3535 * ((_3518 * _3536) + _3503)) + 9.9999999392252902907785028219223e-09) + (((_3535 * _3536) + _3503) * _3518))) * _3535;
                                float _4662 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0));
                                float _3556 = (_3481 * _3458) * (((_3504 * 3.1415927410125732421875) * (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0)))) / ((_3526 * _3526) * ((_3471 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3556 * _3340.x;
                                frontier_phi_73_pred_1 = _3556 * _3340.y;
                                frontier_phi_73_pred_2 = _3482 * _3328.z;
                                frontier_phi_73_pred_3 = _3482 * _3328.y;
                                frontier_phi_73_pred_4 = _3482 * _3328.x;
                                frontier_phi_73_pred_5 = _3556 * _3340.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3560 = frontier_phi_73_pred;
                            _3561 = frontier_phi_73_pred_1;
                            _3565 = frontier_phi_73_pred_2;
                            _3564 = frontier_phi_73_pred_3;
                            _3563 = frontier_phi_73_pred_4;
                            _3562 = frontier_phi_73_pred_5;
                            _3270 = _3563 + _3283;
                            _3271 = _3564 + _3284;
                            _3272 = _3565 + _3285;
                            _3267 = _3560 + _3280;
                            _3268 = _3561 + _3281;
                            _3269 = _3562 + _3282;
                            if (_3287 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3280 = _3267;
                                _3281 = _3268;
                                _3282 = _3269;
                                _3283 = _3270;
                                _3284 = _3271;
                                _3285 = _3272;
                                _3286 = _3287;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3270;
                        frontier_phi_67_pred_1 = _3271;
                        frontier_phi_67_pred_2 = _3272;
                        frontier_phi_67_pred_3 = _3269;
                        frontier_phi_67_pred_4 = _3268;
                        frontier_phi_67_pred_5 = _3267;
                    }
                    _2935 = frontier_phi_67_pred;
                    _2937 = frontier_phi_67_pred_1;
                    _2939 = frontier_phi_67_pred_2;
                    _2933 = frontier_phi_67_pred_3;
                    _2931 = frontier_phi_67_pred_4;
                    _2929 = frontier_phi_67_pred_5;
                    uint _3074 = _3073 + 1u;
                    if (_3074 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3067 = _2929;
                        _3068 = _2931;
                        _3069 = _2933;
                        _3070 = _2935;
                        _3071 = _2937;
                        _3072 = _2939;
                        _3073 = _3074;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2937;
                frontier_phi_55_56_ladder_1 = _2939;
                frontier_phi_55_56_ladder_2 = _2935;
                frontier_phi_55_56_ladder_3 = _2933;
                frontier_phi_55_56_ladder_4 = _2931;
                frontier_phi_55_56_ladder_5 = _2929;
            }
            else
            {
                frontier_phi_55_56_ladder = _2823;
                frontier_phi_55_56_ladder_1 = _2825;
                frontier_phi_55_56_ladder_2 = _2821;
                frontier_phi_55_56_ladder_3 = _2819;
                frontier_phi_55_56_ladder_4 = _2817;
                frontier_phi_55_56_ladder_5 = _2815;
            }
            _2928 = frontier_phi_55_56_ladder_5;
            _2930 = frontier_phi_55_56_ladder_4;
            _2932 = frontier_phi_55_56_ladder_3;
            _2934 = frontier_phi_55_56_ladder_2;
            _2936 = frontier_phi_55_56_ladder;
            _2938 = frontier_phi_55_56_ladder_1;
        }
        float _2943 = isnan(1.0) ? _993 : (isnan(_993) ? 1.0 : min(_993, 1.0));
        _2727 = (_2943 * _2934) + _2163;
        _2729 = (_2943 * _2936) + _2165;
        _2731 = (_2943 * _2938) + _2167;
        _2733 = ((_2928 * _977) * _2943) + _2508;
        _2735 = ((_2930 * _979) * _2943) + _2510;
        _2737 = ((_2932 * _980) * _2943) + _2512;
    }
    else
    {
        _2727 = _2163;
        _2729 = _2165;
        _2731 = _2167;
        _2733 = _2508;
        _2735 = _2510;
        _2737 = _2512;
    }
    float _4678 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _4689 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _4700 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    uint _2757 = _279 + 6u;
    float _2765 = _915 / cbSceneParam._m0[86u].x;
    float _2766 = _916 / cbSceneParam._m0[86u].y;
    vec4 _2780 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2765, _2766, (log2((isnan(cbSceneParam._m0[77u].w) ? _850 : (isnan(_850) ? cbSceneParam._m0[77u].w : min(_850, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2782 = _2780.x;
    float _2783 = _2780.y;
    float _2784 = _2780.z;
    float _2785 = _2780.w;
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    if (_850 > cbSceneParam._m0[78u].w)
    {
        float _2840 = isnan(_850) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _850 : min(cbSceneParam._m0[80u].w, _850));
        float _2841 = _2840 / _850;
        float _2852 = _2841 * _900;
        float _2853 = _901 * _2841;
        float _2854 = (-0.0) - _2853;
        float _2856 = _2841 * _902;
        float _2858 = (cbSceneParam._m0[77u].w * _2854) / _2840;
        float _2859 = _2858 + cbSceneParam._m0[79u].w;
        float _2860 = cbSceneParam._m0[79u].w - _2853;
        float _2866 = sqrt(((_2852 * _2852) + (_2853 * _2853)) + (_2856 * _2856));
        float _2869 = (1.0 - (cbSceneParam._m0[77u].w / _2840)) * _2866;
        float _2874 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2876 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3029;
        if (abs((_2854 - _2858) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3029 = ((((_2859 > 0.0) ? exp2(_2874 * _2859) : (2.0 - exp2(_2876 * _2859))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2869;
        }
        else
        {
            float _2989 = 1.0 / cbSceneParam._m0[80u].x;
            float _2990 = isnan(_2860) ? _2859 : (isnan(_2859) ? _2860 : max(_2859, _2860));
            float _2991 = isnan(_2860) ? _2859 : (isnan(_2859) ? _2860 : min(_2859, _2860));
            float _3000 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : min(_2990, 0.0));
            float _3001 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : min(_2991, 0.0));
            _3029 = ((abs(_2866 / _2854) * cbSceneParam._m0[80u].y) * ((((_3000 - _3001) * 2.0) - ((exp2(_2874 * (isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0)))) - exp2(_2874 * (isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0))))) * _2989)) - ((exp2(_2876 * _3000) - exp2(_2876 * _3001)) * _2989))) + (_2869 * cbSceneParam._m0[80u].z);
        }
        vec4 _3031 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2765, _2766, 1.0), 0.0);
        float _3040 = exp2((_3029 * (-1.44269502162933349609375)) * (1.0 - _3031.w));
        float _3041 = log2(_3040);
        float _3057 = log2(_2785);
        _2878 = (exp2(_3057 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].x)) * _3031.x) / cbSceneParam._m0[78u].x)) + _2782;
        _2880 = (exp2(_3057 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].y)) * _3031.y) / cbSceneParam._m0[78u].y)) + _2783;
        _2882 = (exp2(_3057 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3041 * cbSceneParam._m0[78u].z)) * _3031.z) / cbSceneParam._m0[78u].z)) + _2784;
        _2884 = _3040 * _2785;
    }
    else
    {
        _2878 = _2782;
        _2880 = _2783;
        _2882 = _2784;
        _2884 = _2785;
    }
    float _2896 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2897 = _2896 == 3.0;
    float _2898 = log2(_2884);
    float _2905 = exp2(_2898 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0))) * (_2727 + ((isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0))) * _993))) + ((_2733 + ((isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0))) * _1801)) * cbPerFrame._m0[3u].x));
    float _2906 = exp2(_2898 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0))) * (_2729 + ((isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0))) * _993))) + ((_2735 + ((isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0))) * _1801)) * cbPerFrame._m0[3u].x));
    float _2907 = exp2(_2898 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0))) * (_2731 + ((isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0))) * _993))) + ((_2737 + ((isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0))) * _1801)) * cbPerFrame._m0[3u].x));
    float _2916 = (_2896 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2916 * (_2897 ? _2905 : (_2905 + (cbSceneParam._m0[72u].w * _2878)));
    SV_Target.y = _2916 * (_2897 ? _2906 : (_2906 + (cbSceneParam._m0[72u].w * _2880)));
    SV_Target.z = _2916 * (_2897 ? _2907 : (_2907 + (cbSceneParam._m0[72u].w * _2882)));
    SV_Target.w = cbInstanceData._m0[_2757].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2757].w;
}


