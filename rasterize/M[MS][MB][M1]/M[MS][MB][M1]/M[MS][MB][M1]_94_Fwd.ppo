#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1387;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3714 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3725 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3736 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    uint _279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _284 = _279 + 1u;
    uint _288 = _279 + 2u;
    float _297 = sqrt(((cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x)) + (cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x));
    float _298 = _297 * TEXCOORD.z;
    float _299 = _297 * TEXCOORD.w;
    vec4 _312 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _298) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _299) + cbTextureTilingScale._m0[13u].w));
    vec4 _336 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _341 = _336.x * cbMtdParam._m0[11u].x;
    float _342 = _336.y * cbMtdParam._m0[11u].y;
    float _343 = _336.z * cbMtdParam._m0[11u].z;
    vec4 _362 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _298) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _299) + cbTextureTilingScale._m0[5u].w));
    vec4 _398 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _400 = _398.x;
    float _412 = dot(vec4(_400, _398.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_400 - _412) * cbMtdParam._m0[24u].y) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3747 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0));
    float _437 = (_430 * ((_362.x * cbMtdParam._m0[12u].x) - _341)) + _341;
    float _438 = (_430 * ((_362.y * cbMtdParam._m0[12u].y) - _342)) + _342;
    float _439 = (_430 * ((_362.z * cbMtdParam._m0[12u].z) - _343)) + _343;
    float _443 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _312.x) * _437;
    float _446 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _312.y) * _438;
    float _449 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _312.z) * _439;
    float _456 = ((_437 - _443) * (isnan(1.0) ? _3714 : (isnan(_3714) ? 1.0 : min(_3714, 1.0)))) + _443;
    float _457 = ((_438 - _446) * (isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0)))) + _446;
    float _458 = ((_439 - _449) * (isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0)))) + _449;
    vec4 _476 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _298) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _299) + cbTextureTilingScale._m0[20u].w));
    vec4 _501 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _298) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _299) + cbTextureTilingScale._m0[4u].w));
    vec4 _518 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _520 = _518.x;
    float _521 = _518.y;
    float _522 = _518.z;
    float _531 = ((_501.z - _522) * _430) + _522;
    float _534 = ((((_501.x - _520) * _430) + _520) * 2.0) + (-1.0);
    float _535 = ((((_501.y - _521) * _430) + _521) * 2.0) + (-1.0);
    float _536 = dot(vec2(_534, _535), vec2(_534, _535));
    float _3758 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _541 = sqrt(1.0 - (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0))));
    vec4 _557 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _582 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _298) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _299) + cbTextureTilingScale._m0[11u].w));
    float _584 = _582.x;
    float _585 = 1.0 - _584;
    float _591 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _594 = ((isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : min(_591, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _603 = (_594 - ((((((_584 - _585) * cbMtdParam._m0[24u].z) + _585) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _594))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3779 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _604 = isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0));
    float _611 = (_604 * (cbMtdParam._m0[17u].x - _456)) + _456;
    float _612 = (_604 * (cbMtdParam._m0[17u].y - _457)) + _457;
    float _613 = (_604 * (cbMtdParam._m0[17u].z - _458)) + _458;
    vec4 _625 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _298) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _299) + cbTextureTilingScale._m0[19u].w));
    float _627 = _625.x;
    float _628 = 1.0 - _627;
    float _653 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_627 - _628) * cbMtdParam._m0[24u].w) + _628) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3790 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _654 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
    float _662 = ((((cbMtdParam._m0[10u].x - _611) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _654) + _611;
    float _663 = ((((cbMtdParam._m0[10u].y - _612) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _654) + _612;
    float _664 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _613)) * _654) + _613;
    vec4 _690 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _692 = _690.x;
    float _710 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _298) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _299) + cbTextureTilingScale._m0[9u].w)).x - _692) * _430) + _692;
    float _714 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _710) * cbMtdParam._m0[19u].z) + _710;
    float _716 = _714 - (_714 * _604);
    float _718 = _716 - (_716 * _654);
    float _723 = (((_476.z - _531) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _531;
    float _727 = ((_557.z - _723) * cbMtdParam._m0[19u].w) + _723;
    vec4 _741 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _298) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _299) + cbTextureTilingScale._m0[15u].w));
    float _748 = (_741.x * 2.0) + (-1.0);
    float _749 = (_741.y * 2.0) + (-1.0);
    float _750 = dot(vec2(_748, _749), vec2(_748, _749));
    float _3801 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _758 = (_604 * (_741.z - _727)) + _727;
    float _761 = ((cbMtdParam._m0[23u].y - _758) * _654) + _758;
    vec4 _780 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _298) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _299) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _786 = (_780.x * 2.0) + (-1.0);
    float _787 = (_780.y * 2.0) + (-1.0);
    float _788 = dot(vec2(_786, _787), vec2(_786, _787));
    float _3812 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _802 = (_534 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_476.x * 2.0) + (-1.0)))) + (((_557.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _803 = (_535 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_476.y * 2.0) + (-1.0)))) + (((_557.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _815 = (((_748 - _802) + (cbMtdParam._m0[21u].x * _802)) * _604) + _802;
    float _816 = (((_749 - _803) + (cbMtdParam._m0[21u].x * _803)) * _604) + _803;
    float _817 = (_604 * (sqrt(1.0 - (isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0)))) - _541)) + _541;
    float _828 = (((_786 - _815) + (_815 * cbMtdParam._m0[22u].z)) * _654) + _815;
    float _829 = (((_787 - _816) + (_816 * cbMtdParam._m0[22u].z)) * _654) + _816;
    float _830 = ((sqrt(1.0 - (isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0)))) - _817) * _654) + _817;
    float _834 = cbMtdParam._m0[22u].x + _557.w;
    float _837 = fma(_830, _247 * NORMAL.x, fma(_829, _254 * TANGENT.x, (_240 * _232) * _828));
    float _840 = fma(_830, _247 * NORMAL.y, fma(_829, _254 * TANGENT.y, (_240 * _233) * _828));
    float _843 = fma(_830, _247 * NORMAL.z, fma(_829, _254 * TANGENT.z, (_240 * _234) * _828));
    float _847 = inversesqrt(dot(vec3(_837, _840, _843), vec3(_837, _840, _843)));
    float _848 = _847 * _837;
    float _849 = _847 * _840;
    float _850 = _847 * _843;
    float _3823 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _851 = isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0));
    float _3834 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _3845 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _3856 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _3867 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _3878 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _856 = isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0));
    float _870 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _920 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _910);
    float _921 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _910);
    float _922 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _910);
    float _926 = inversesqrt(dot(vec3(_920, _921, _922), vec3(_920, _921, _922)));
    float _927 = _920 * _926;
    float _928 = _921 * _926;
    float _929 = _922 * _926;
    float _935 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _936 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _954 = fma(_850, cbSceneParam._m0[5u].z, fma(_849, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _848));
    float _957 = fma(_850, cbSceneParam._m0[6u].z, fma(_849, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _848));
    float _960 = fma(_850, cbSceneParam._m0[7u].z, fma(_849, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _848));
    uint _974 = (_279 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _980 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0)))) * cbInstanceData._m0[_974].x;
    float _981 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0)))) * cbInstanceData._m0[_974].y;
    float _982 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0)))) * cbInstanceData._m0[_974].z;
    float _3889 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _983 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
    float _3900 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _984 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
    float _3911 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _985 = isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0));
    float _986 = 1.0 - _856;
    float _987 = _983 * _986;
    float _988 = _984 * _986;
    float _989 = _985 * _986;
    float _994 = (_983 + (-0.039999999105930328369140625)) * _856;
    float _995 = (_984 + (-0.039999999105930328369140625)) * _856;
    float _996 = (_985 + (-0.039999999105930328369140625)) * _856;
    float _997 = _994 + 0.039999999105930328369140625;
    float _999 = _995 + 0.039999999105930328369140625;
    float _1000 = _996 + 0.039999999105930328369140625;
    vec4 _1009 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _935, cbSceneParam._m0[86u].y * _936));
    float _1013 = ((isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0))) * TEXCOORD_5.w) * _1009.x;
    float _1014 = dot(vec3(_848, _849, _850), vec3(_927, _928, _929));
    float _1017 = _1014 * 2.0;
    float _1021 = (_1017 * _848) - _927;
    float _1022 = (_1017 * _849) - _928;
    float _1023 = (_1017 * _850) - _929;
    float _1027 = abs(dot(vec3(_927, _928, _929), vec3(_848, _849, _850)));
    float _3922 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1029 = sqrt(_851);
    float _1042 = exp2((_1029 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1029 * 3.0));
    float _1048 = (1.0 - _1042) * ((_1029 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1049 = _1042 * _1029;
    float _1077 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1081 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1085 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1386;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1111 = fma(_1085, cbModelParam._m0[26u].z, fma(_1081, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1077));
        float _1115 = fma(_1085, cbModelParam._m0[27u].z, fma(_1081, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1077));
        float _1119 = fma(_1085, cbModelParam._m0[28u].z, fma(_1081, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1077));
        float _1144 = _1077 + _848;
        float _1145 = _1081 + _849;
        float _1146 = _1085 + _850;
        float _1156 = fma(_1146, cbModelParam._m0[26u].z, fma(_1145, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1144)) - _1111;
        float _1157 = fma(_1146, cbModelParam._m0[27u].z, fma(_1145, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1144)) - _1115;
        float _1158 = fma(_1146, cbModelParam._m0[28u].z, fma(_1145, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1144)) - _1119;
        float _1162 = inversesqrt(dot(vec3(_1156, _1157, _1158), vec3(_1156, _1157, _1158)));
        float _1175 = ((_1162 * _1156) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1111 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1176 = ((_1162 * _1157) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1115 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1177 = ((_1162 * _1158) / cbModelParam._m0[34u].z) + ((((((_1119 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1180 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1175, _1176, _1177), 0.0);
        vec4 _1187 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1175, _1176, _1177), 0.0);
        vec4 _1194 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1175, _1176, _1177), 0.0);
        vec4 _1201 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1175, _1176, _1177), 0.0);
        float _1214 = exp2((_1180.w + (-0.5)) * 20.0) * 2.0;
        float _1215 = _1214 * (_1180.x + (-0.5));
        float _1216 = _1214 * (_1180.y + (-0.5));
        float _1217 = _1214 * (_1180.z + (-0.5));
        float _1224 = exp2((_1187.w + (-0.5)) * 20.0) * 2.0;
        float _1225 = _1224 * (_1187.x + (-0.5));
        float _1226 = _1224 * (_1187.y + (-0.5));
        float _1227 = _1224 * (_1187.z + (-0.5));
        float _1234 = exp2((_1194.w + (-0.5)) * 20.0) * 2.0;
        float _1235 = _1234 * (_1194.x + (-0.5));
        float _1236 = _1234 * (_1194.y + (-0.5));
        float _1237 = _1234 * (_1194.z + (-0.5));
        float _1244 = exp2((_1201.w + (-0.5)) * 20.0) * 2.0;
        float _1245 = _1244 * (_1201.x + (-0.5));
        float _1246 = _1244 * (_1201.y + (-0.5));
        float _1247 = _1244 * (_1201.z + (-0.5));
        float _1248 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1249 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1250 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1251 = _1215 * 0.5;
        float _1252 = _1225 * 0.5;
        float _1253 = _1235 * 0.5;
        float _1254 = dot(vec3(_1251, _1252, _1253), vec3(_1251, _1252, _1253));
        float _1259 = (_1254 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1254);
        float _1268 = (dot(vec3(_848, _849, _850), vec3(_1259 * _1251, _1259 * _1252, _1259 * _1253)) + 1.0) * 0.5;
        float _3948 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1278 = sqrt(((_1252 * _1252) + (_1251 * _1251)) + (_1253 * _1253)) / (_1248 + 9.9999997473787516355514526367188e-06);
        float _3959 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
        float _1279 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
        float _1280 = _1279 * 2.0;
        float _1284 = (1.0 - _1279) / (_1279 + 1.0);
        float _3970 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1285 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
        float _1294 = ((((1.0 - _1285) * (_1280 + 2.0)) * exp2(log2(isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0))) * (_1280 + 1.0))) + _1285) * _1248;
        float _1295 = _1216 * 0.5;
        float _1296 = _1226 * 0.5;
        float _1297 = _1236 * 0.5;
        float _1298 = dot(vec3(_1295, _1296, _1297), vec3(_1295, _1296, _1297));
        float _1303 = (_1298 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1298);
        float _1311 = (dot(vec3(_848, _849, _850), vec3(_1303 * _1295, _1303 * _1296, _1303 * _1297)) + 1.0) * 0.5;
        float _3981 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1320 = sqrt(((_1296 * _1296) + (_1295 * _1295)) + (_1297 * _1297)) / (_1249 + 9.9999997473787516355514526367188e-06);
        float _3992 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1321 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
        float _1322 = _1321 * 2.0;
        float _1326 = (1.0 - _1321) / (_1321 + 1.0);
        float _4003 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1327 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
        float _1336 = ((((1.0 - _1327) * (_1322 + 2.0)) * exp2(log2(isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0))) * (_1322 + 1.0))) + _1327) * _1249;
        float _1337 = _1217 * 0.5;
        float _1338 = _1227 * 0.5;
        float _1339 = _1237 * 0.5;
        float _1340 = dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339));
        float _1345 = (_1340 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1340);
        float _1353 = (dot(vec3(_848, _849, _850), vec3(_1345 * _1337, _1345 * _1338, _1345 * _1339)) + 1.0) * 0.5;
        float _4014 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1362 = sqrt(((_1338 * _1338) + (_1337 * _1337)) + (_1339 * _1339)) / (_1250 + 9.9999997473787516355514526367188e-06);
        float _4025 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
        float _1364 = _1363 * 2.0;
        float _1368 = (1.0 - _1363) / (_1363 + 1.0);
        float _4036 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1369 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
        float _1378 = ((((1.0 - _1369) * (_1364 + 2.0)) * exp2(log2(isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0))) * (_1364 + 1.0))) + _1369) * _1250;
        _1386 = _1217;
        _1388 = _1216;
        _1389 = _1215;
        _1390 = _1227;
        _1391 = _1226;
        _1392 = _1225;
        _1393 = _1237;
        _1394 = _1236;
        _1395 = _1235;
        _1396 = _1250;
        _1397 = _1249;
        _1398 = _1248;
        _1399 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0)));
        _1400 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0)));
        _1401 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0)));
    }
    else
    {
        _1386 = _1387;
        _1388 = _1387;
        _1389 = _1387;
        _1390 = _1387;
        _1391 = _1387;
        _1392 = _1387;
        _1393 = _1387;
        _1394 = _1387;
        _1395 = _1387;
        _1396 = _1387;
        _1397 = _1387;
        _1398 = _1387;
        _1399 = 0.0;
        _1400 = 0.0;
        _1401 = 0.0;
    }
    float _1695;
    float _1696;
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1426 = fma(_1085, cbModelParam._m0[30u].z, fma(_1081, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1077));
        float _1430 = fma(_1085, cbModelParam._m0[31u].z, fma(_1081, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1077));
        float _1434 = fma(_1085, cbModelParam._m0[32u].z, fma(_1081, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1077));
        float _1457 = _1077 + _848;
        float _1458 = _1081 + _849;
        float _1459 = _1085 + _850;
        float _1469 = fma(_1459, cbModelParam._m0[30u].z, fma(_1458, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1457)) - _1426;
        float _1470 = fma(_1459, cbModelParam._m0[31u].z, fma(_1458, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1457)) - _1430;
        float _1471 = fma(_1459, cbModelParam._m0[32u].z, fma(_1458, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1457)) - _1434;
        float _1475 = inversesqrt(dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471)));
        float _1488 = ((_1475 * _1469) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1426 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1489 = ((_1475 * _1470) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1430 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1490 = ((_1475 * _1471) / cbModelParam._m0[35u].z) + ((((((_1434 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1492 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1488, _1489, _1490), 0.0);
        vec4 _1499 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1488, _1489, _1490), 0.0);
        vec4 _1506 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1488, _1489, _1490), 0.0);
        vec4 _1513 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1488, _1489, _1490), 0.0);
        float _1525 = exp2((_1492.w + (-0.5)) * 20.0) * 2.0;
        float _1526 = _1525 * (_1492.x + (-0.5));
        float _1527 = _1525 * (_1492.y + (-0.5));
        float _1528 = _1525 * (_1492.z + (-0.5));
        float _1535 = exp2((_1499.w + (-0.5)) * 20.0) * 2.0;
        float _1536 = _1535 * (_1499.x + (-0.5));
        float _1537 = _1535 * (_1499.y + (-0.5));
        float _1538 = _1535 * (_1499.z + (-0.5));
        float _1545 = exp2((_1506.w + (-0.5)) * 20.0) * 2.0;
        float _1546 = _1545 * (_1506.x + (-0.5));
        float _1547 = _1545 * (_1506.y + (-0.5));
        float _1548 = _1545 * (_1506.z + (-0.5));
        float _1555 = exp2((_1513.w + (-0.5)) * 20.0) * 2.0;
        float _1556 = _1555 * (_1513.x + (-0.5));
        float _1557 = _1555 * (_1513.y + (-0.5));
        float _1558 = _1555 * (_1513.z + (-0.5));
        float _1559 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1560 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1561 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1562 = _1526 * 0.5;
        float _1563 = _1536 * 0.5;
        float _1564 = _1546 * 0.5;
        float _1565 = dot(vec3(_1562, _1563, _1564), vec3(_1562, _1563, _1564));
        float _1570 = (_1565 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1565);
        float _1578 = (dot(vec3(_848, _849, _850), vec3(_1570 * _1562, _1570 * _1563, _1570 * _1564)) + 1.0) * 0.5;
        float _4077 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1587 = sqrt(((_1563 * _1563) + (_1562 * _1562)) + (_1564 * _1564)) / (_1559 + 9.9999997473787516355514526367188e-06);
        float _4088 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1588 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1589 = _1588 * 2.0;
        float _1593 = (1.0 - _1588) / (_1588 + 1.0);
        float _4099 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1603 = ((((1.0 - _1594) * (_1589 + 2.0)) * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * (_1589 + 1.0))) + _1594) * _1559;
        float _1604 = _1527 * 0.5;
        float _1605 = _1537 * 0.5;
        float _1606 = _1547 * 0.5;
        float _1607 = dot(vec3(_1604, _1605, _1606), vec3(_1604, _1605, _1606));
        float _1612 = (_1607 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1607);
        float _1620 = (dot(vec3(_848, _849, _850), vec3(_1612 * _1604, _1612 * _1605, _1612 * _1606)) + 1.0) * 0.5;
        float _4110 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1629 = sqrt(((_1605 * _1605) + (_1604 * _1604)) + (_1606 * _1606)) / (_1560 + 9.9999997473787516355514526367188e-06);
        float _4121 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1630 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1631 = _1630 * 2.0;
        float _1635 = (1.0 - _1630) / (_1630 + 1.0);
        float _4132 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0));
        float _1645 = ((((1.0 - _1636) * (_1631 + 2.0)) * exp2(log2(isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0))) * (_1631 + 1.0))) + _1636) * _1560;
        float _1646 = _1528 * 0.5;
        float _1647 = _1538 * 0.5;
        float _1648 = _1548 * 0.5;
        float _1649 = dot(vec3(_1646, _1647, _1648), vec3(_1646, _1647, _1648));
        float _1654 = (_1649 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1649);
        float _1662 = (dot(vec3(_848, _849, _850), vec3(_1654 * _1646, _1654 * _1647, _1654 * _1648)) + 1.0) * 0.5;
        float _4143 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1671 = sqrt(((_1647 * _1647) + (_1646 * _1646)) + (_1648 * _1648)) / (_1561 + 9.9999997473787516355514526367188e-06);
        float _4154 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1672 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1673 = _1672 * 2.0;
        float _1677 = (1.0 - _1672) / (_1672 + 1.0);
        float _4165 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1687 = ((((1.0 - _1678) * (_1673 + 2.0)) * exp2(log2(isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0))) * (_1673 + 1.0))) + _1678) * _1561;
        _1695 = _1528;
        _1696 = _1527;
        _1697 = _1526;
        _1698 = _1538;
        _1699 = _1537;
        _1700 = _1536;
        _1701 = _1548;
        _1702 = _1547;
        _1703 = _1546;
        _1704 = _1561;
        _1705 = _1560;
        _1706 = _1559;
        _1707 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0)));
        _1708 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)));
        _1709 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)));
    }
    else
    {
        _1695 = _1387;
        _1696 = _1387;
        _1697 = _1387;
        _1698 = _1387;
        _1699 = _1387;
        _1700 = _1387;
        _1701 = _1387;
        _1702 = _1387;
        _1703 = _1387;
        _1704 = _1387;
        _1705 = _1387;
        _1706 = _1387;
        _1707 = 0.0;
        _1708 = 0.0;
        _1709 = 0.0;
    }
    float _1719 = (cbModelParam._m0[1u].x * (_1707 - _1399)) + _1399;
    float _1720 = (cbModelParam._m0[1u].x * (_1708 - _1400)) + _1400;
    float _1721 = (cbModelParam._m0[1u].x * (_1709 - _1401)) + _1401;
    float _1742 = fma(_1721, cbSceneParam._m0[89u].z, fma(_1720, cbSceneParam._m0[89u].y, _1719 * cbSceneParam._m0[89u].x));
    float _1745 = fma(_1721, cbSceneParam._m0[90u].z, fma(_1720, cbSceneParam._m0[90u].y, _1719 * cbSceneParam._m0[90u].x));
    float _1748 = fma(_1721, cbSceneParam._m0[91u].z, fma(_1720, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1719));
    float _1763 = _1021 * 0.5;
    float _1764 = _1022 * 0.5;
    float _1765 = _1023 * 0.5;
    float _1766 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1697, _1700, _1703, _1706));
    float _1769 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1696, _1699, _1702, _1705));
    float _1772 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1695, _1698, _1701, _1704));
    float _1806;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1779 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1386, _1390, _1393, _1396));
        float _1783 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1388, _1391, _1394, _1397));
        float _1787 = dot(vec4(_1763, _1764, _1765, 1.0), vec4(_1389, _1392, _1395, _1398));
        float _1794 = dot(vec4(cbModelParam._m0[39u]), vec4(_1763, _1764, _1765, 1.0));
        _1806 = dot(vec3(isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0)), isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0)), isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1794) ? 0.0 : (isnan(0.0) ? _1794 : max(0.0, _1794))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1806 = 1.0;
    }
    float _1817;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1808 = dot(vec4(cbModelParam._m0[40u]), vec4(_1763, _1764, _1765, 1.0));
        _1817 = dot(vec3(isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0)), isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0)), isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1808) ? 0.0 : (isnan(0.0) ? _1808 : max(0.0, _1808))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1817 = 1.0;
    }
    float _1821 = (_1817 * cbModelParam._m0[1u].x) + (_1806 * (1.0 - cbModelParam._m0[1u].x));
    float _1831 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _851);
    float _1832 = isnan(_1831) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1831 : min(cbModelParam._m0[25u].z, _1831));
    float _1913;
    float _1915;
    float _1917;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1880 = fma(_1085, cbModelParam._m0[13u].z, fma(_1081, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1077)) + cbModelParam._m0[13u].w;
        float _1884 = fma(_1085, cbModelParam._m0[14u].z, fma(_1081, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1077)) + cbModelParam._m0[14u].w;
        float _1888 = fma(_1085, cbModelParam._m0[15u].z, fma(_1081, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1077)) + cbModelParam._m0[15u].w;
        float _1891 = fma(_1023, cbModelParam._m0[13u].z, fma(_1022, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1021));
        float _1894 = fma(_1023, cbModelParam._m0[14u].z, fma(_1022, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1021));
        float _1897 = fma(_1023, cbModelParam._m0[15u].z, fma(_1022, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1021));
        float _1925;
        if (_1891 > 0.0)
        {
            _1925 = abs((1.0 - _1880) / _1891);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1891 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1880 + 1.0) / _1891);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1925 = frontier_phi_14_12_ladder;
        }
        float _2128;
        if (_1894 > 0.0)
        {
            _2128 = abs((1.0 - _1884) / _1894);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1894 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1884 + 1.0) / _1894);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2128 = frontier_phi_23_19_ladder;
        }
        float _2382;
        if (_1897 > 0.0)
        {
            _2382 = abs((1.0 - _1888) / _1897);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1897 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1888 + 1.0) / _1897);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2382 = frontier_phi_35_30_ladder;
        }
        float _2384 = isnan(_2128) ? _1925 : (isnan(_1925) ? _2128 : min(_1925, _2128));
        float _2385 = isnan(_2382) ? _2384 : (isnan(_2384) ? _2382 : min(_2384, _2382));
        float _2389 = (_2385 * _1891) + _1880;
        float _2390 = (_2385 * _1894) + _1884;
        float _2391 = (_2385 * _1897) + _1888;
        float _2392 = _2385 * 9.9999997473787516355514526367188e-05;
        float _2394 = (-1.0) - _2392;
        float _2396 = _2392 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2391 > _2396) || ((_2391 < _2394) || ((_2390 > _2396) || ((_2390 < _2394) || ((_2389 < _2394) || (_2389 > _2396))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2519 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2391, cbModelParam._m0[9u].z, fma(_2390, cbModelParam._m0[9u].y, _2389 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2391, cbModelParam._m0[10u].z, fma(_2390, cbModelParam._m0[10u].y, _2389 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2391, cbModelParam._m0[11u].z, fma(_2390, cbModelParam._m0[11u].y, _2389 * cbModelParam._m0[11u].x))), _1832);
            frontier_phi_13_35_ladder = _2519.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2519.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2519.x * cbModelParam._m0[1u].y;
        }
        _1913 = frontier_phi_13_35_ladder_2;
        _1915 = frontier_phi_13_35_ladder_1;
        _1917 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1901 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1021, _1022, _1023), _1832);
        _1913 = _1901.x * cbModelParam._m0[1u].y;
        _1915 = _1901.y * cbModelParam._m0[1u].y;
        _1917 = _1901.z * cbModelParam._m0[1u].y;
    }
    float _1921 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _851);
    float _1922 = isnan(_1921) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1921 : min(cbModelParam._m0[25u].w, _1921));
    float _2012;
    float _2014;
    float _2016;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1976 = fma(_1085, cbModelParam._m0[21u].z, fma(_1081, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1077)) + cbModelParam._m0[21u].w;
        float _1980 = fma(_1085, cbModelParam._m0[22u].z, fma(_1081, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1077)) + cbModelParam._m0[22u].w;
        float _1984 = fma(_1085, cbModelParam._m0[23u].z, fma(_1081, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1077)) + cbModelParam._m0[23u].w;
        float _1987 = fma(_1023, cbModelParam._m0[21u].z, fma(_1022, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1021));
        float _1990 = fma(_1023, cbModelParam._m0[22u].z, fma(_1022, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1021));
        float _1993 = fma(_1023, cbModelParam._m0[23u].z, fma(_1022, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1021));
        float _2133;
        if (_1987 > 0.0)
        {
            _2133 = abs((1.0 - _1976) / _1987);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1987 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1976 + 1.0) / _1987);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2133 = frontier_phi_25_21_ladder;
        }
        float _2409;
        if (_1990 > 0.0)
        {
            _2409 = abs((1.0 - _1980) / _1990);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1990 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1980 + 1.0) / _1990);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2409 = frontier_phi_37_32_ladder;
        }
        float _2622;
        if (_1993 > 0.0)
        {
            _2622 = abs((1.0 - _1984) / _1993);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1993 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1984 + 1.0) / _1993);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2622 = frontier_phi_46_43_ladder;
        }
        float _2624 = isnan(_2409) ? _2133 : (isnan(_2133) ? _2409 : min(_2133, _2409));
        float _2625 = isnan(_2622) ? _2624 : (isnan(_2624) ? _2622 : min(_2624, _2622));
        float _2629 = (_2625 * _1987) + _1976;
        float _2630 = (_2625 * _1990) + _1980;
        float _2631 = (_2625 * _1993) + _1984;
        float _2632 = _2625 * 9.9999997473787516355514526367188e-05;
        float _2633 = (-1.0) - _2632;
        float _2635 = _2632 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2631 > _2635) || ((_2631 < _2633) || ((_2630 > _2635) || ((_2630 < _2633) || ((_2629 < _2633) || (_2629 > _2635))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2830 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2631, cbModelParam._m0[17u].z, fma(_2630, cbModelParam._m0[17u].y, _2629 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2631, cbModelParam._m0[18u].z, fma(_2630, cbModelParam._m0[18u].y, _2629 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2631, cbModelParam._m0[19u].z, fma(_2630, cbModelParam._m0[19u].y, _2629 * cbModelParam._m0[19u].x))), _1922);
            frontier_phi_22_46_ladder = _2830.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2830.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2830.x * cbModelParam._m0[1u].z;
        }
        _2012 = frontier_phi_22_46_ladder_2;
        _2014 = frontier_phi_22_46_ladder_1;
        _2016 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1996 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1021, _1022, _1023), _1922);
        _2012 = _1996.x * cbModelParam._m0[1u].z;
        _2014 = _1996.y * cbModelParam._m0[1u].z;
        _2016 = _1996.z * cbModelParam._m0[1u].z;
    }
    float _2029 = (((_1048 * _997) + _1049) * _1013) * ((cbModelParam._m0[1u].w * (_2012 - _1913)) + _1913);
    float _2031 = (((_1048 * _999) + _1049) * _1013) * ((cbModelParam._m0[1u].w * (_2014 - _1915)) + _1915);
    float _2033 = (((_1048 * _1000) + _1049) * _1013) * ((cbModelParam._m0[1u].w * (_2016 - _1917)) + _1917);
    float _2036 = fma(_2033, cbSceneParam._m0[89u].z, fma(_2031, cbSceneParam._m0[89u].y, _2029 * cbSceneParam._m0[89u].x));
    float _2039 = fma(_2033, cbSceneParam._m0[90u].z, fma(_2031, cbSceneParam._m0[90u].y, _2029 * cbSceneParam._m0[90u].x));
    float _2042 = fma(_2033, cbSceneParam._m0[91u].z, fma(_2031, cbSceneParam._m0[91u].y, _2029 * cbSceneParam._m0[91u].x));
    uvec4 _2052 = floatBitsToUint(cbInstanceData._m0[_279 + 5u]);
    uint _2054 = _2052.x * 14u;
    uint _2055 = _2054 + 13u;
    float _2062 = _1013 + (-1.0);
    float _2067 = (cbLight._m0[_2055].x * _2062) + 1.0;
    float _2068 = (cbLight._m0[_2055].y * _2062) + 1.0;
    float _2069 = (cbLight._m0[_2055].z * _2062) + 1.0;
    float _2070 = (cbLight._m0[_2055].w * _2062) + 1.0;
    uint _2071 = _2054 + 5u;
    float _2077 = isnan(1.0) ? _2068 : (isnan(_2068) ? 1.0 : min(_2068, 1.0));
    uint _2081 = _2054 + 4u;
    float _2087 = isnan(1.0) ? _2067 : (isnan(_2067) ? 1.0 : min(_2067, 1.0));
    uint _2091 = _2054 | 1u;
    float _2102 = dot(vec3(cbLight._m0[_2054].xyz), vec3(_848, _849, _850));
    float _2105 = dot(vec3(cbLight._m0[_2091].xyz), vec3(_848, _849, _850));
    float _4301 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
    float _4312 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
    float _2110 = (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0))) * 0.3183098733425140380859375;
    float _2112 = (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * 0.3183098733425140380859375;
    float _2119 = ((cbLight._m0[_2071].x * _2077) * _2112) + ((cbLight._m0[_2081].x * _2087) * _2110);
    float _2120 = ((_2077 * cbLight._m0[_2071].y) * _2112) + ((_2087 * cbLight._m0[_2081].y) * _2110);
    float _2121 = ((_2077 * cbLight._m0[_2071].z) * _2112) + ((_2087 * cbLight._m0[_2081].z) * _2110);
    uvec4 _2125 = floatBitsToUint(cbLight._m0[_2054 + 12u]);
    bool _2127 = _2125.x == 0u;
    float _2138;
    float _2140;
    float _2142;
    if (_2127)
    {
        _2138 = _2119;
        _2140 = _2120;
        _2142 = _2121;
    }
    else
    {
        uint _2146 = _2054 + 6u;
        float _2162 = (dot(vec3(cbLight._m0[_2054 + 2u].xyz), vec3(_848, _849, _850)) * 0.5) + 0.5;
        float _2163 = _2162 * _2162;
        float _4323 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2164 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _2165 = isnan(1.0) ? _2069 : (isnan(_2069) ? 1.0 : min(_2069, 1.0));
        _2138 = (((cbLight._m0[_2146].x * 0.3183098733425140380859375) * _2164) * _2165) + _2119;
        _2140 = (((cbLight._m0[_2146].y * 0.3183098733425140380859375) * _2164) * _2165) + _2120;
        _2142 = (((cbLight._m0[_2146].z * 0.3183098733425140380859375) * _2164) * _2165) + _2121;
    }
    bool _2145 = _2125.y == 0u;
    float _2183;
    float _2185;
    float _2187;
    if (_2145)
    {
        _2183 = _2138;
        _2185 = _2140;
        _2187 = _2142;
    }
    else
    {
        uint _2353 = _2054 + 7u;
        float _2369 = (dot(vec3(cbLight._m0[_2054 + 3u].xyz), vec3(_848, _849, _850)) * 0.5) + 0.5;
        float _2370 = _2369 * _2369;
        float _4339 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
        float _2371 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _2372 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
        _2183 = (((cbLight._m0[_2353].x * 0.3183098733425140380859375) * _2371) * _2372) + _2138;
        _2185 = (((cbLight._m0[_2353].y * 0.3183098733425140380859375) * _2371) * _2372) + _2140;
        _2187 = (((cbLight._m0[_2353].z * 0.3183098733425140380859375) * _2371) * _2372) + _2142;
    }
    uint _2190 = _2054 + 8u;
    float _2203 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2054].w)) * _851) * 0.949999988079071044921875);
    float _2204 = _2203 * _2203;
    float _2205 = cbLight._m0[_2054].x + _927;
    float _2206 = cbLight._m0[_2054].y + _928;
    float _2207 = cbLight._m0[_2054].z + _929;
    float _2211 = inversesqrt(dot(vec3(_2205, _2206, _2207), vec3(_2205, _2206, _2207)));
    float _2212 = _2211 * _2205;
    float _2213 = _2211 * _2206;
    float _2214 = _2211 * _2207;
    float _2215 = dot(vec3(_848, _849, _850), vec3(cbLight._m0[_2054].xyz));
    float _4355 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
    float _2218 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
    float _4366 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _2219 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
    float _2220 = dot(vec3(_848, _849, _850), vec3(_2212, _2213, _2214));
    float _4377 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
    float _2223 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
    float _2224 = dot(vec3(cbLight._m0[_2054].xyz), vec3(_2212, _2213, _2214));
    float _4388 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
    float _2228 = _2204 * _2204;
    float _2232 = ((_2223 * _2223) * (_2228 + (-1.0))) + 1.0;
    float _2240 = exp2(log2(1.0 - (isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0)))) * 5.0);
    float _2241 = 0.959999978542327880859375 - _994;
    float _2243 = 0.959999978542327880859375 - _995;
    float _2244 = 0.959999978542327880859375 - _996;
    float _2251 = 1.0 - _2204;
    float _2262 = (0.5 / (((_2219 * ((_2218 * _2251) + _2204)) + 9.9999999392252902907785028219223e-09) + (((_2219 * _2251) + _2204) * _2218))) * _2218;
    float _4399 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2264 = (isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_2228 / ((_2232 * _2232) * 3.141590118408203125));
    uint _2275 = _2054 + 9u;
    float _2286 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2091].w)) * _851) * 0.949999988079071044921875);
    float _2287 = _2286 * _2286;
    float _2288 = cbLight._m0[_2091].x + _927;
    float _2289 = cbLight._m0[_2091].y + _928;
    float _2290 = cbLight._m0[_2091].z + _929;
    float _2294 = inversesqrt(dot(vec3(_2288, _2289, _2290), vec3(_2288, _2289, _2290)));
    float _2295 = _2294 * _2288;
    float _2296 = _2294 * _2289;
    float _2297 = _2294 * _2290;
    float _2298 = dot(vec3(_848, _849, _850), vec3(cbLight._m0[_2091].xyz));
    float _4410 = isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0));
    float _2301 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
    float _2302 = dot(vec3(_848, _849, _850), vec3(_2295, _2296, _2297));
    float _4421 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0));
    float _2305 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
    float _2306 = dot(vec3(cbLight._m0[_2091].xyz), vec3(_2295, _2296, _2297));
    float _4432 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
    float _2310 = _2287 * _2287;
    float _2314 = ((_2305 * _2305) * (_2310 + (-1.0))) + 1.0;
    float _2321 = exp2(log2(1.0 - (isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0)))) * 5.0);
    float _2328 = 1.0 - _2287;
    float _2338 = (0.5 / (((_2219 * ((_2301 * _2328) + _2287)) + 9.9999999392252902907785028219223e-09) + (((_2219 * _2328) + _2287) * _2301))) * _2301;
    float _4443 = isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0));
    float _2340 = (isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * (_2310 / ((_2314 * _2314) * 3.141590118408203125));
    float _2350 = (((((_2321 * _2241) + _997) * cbLight._m0[_2275].x) * _2340) * _2077) + (((((_2240 * _2241) + _997) * cbLight._m0[_2190].x) * _2264) * _2087);
    float _2351 = (((((_2321 * _2243) + _999) * cbLight._m0[_2275].y) * _2340) * _2077) + (((((_2240 * _2243) + _999) * cbLight._m0[_2190].y) * _2264) * _2087);
    float _2352 = (((((_2321 * _2244) + _1000) * cbLight._m0[_2275].z) * _2340) * _2077) + (((((_2240 * _2244) + _1000) * cbLight._m0[_2190].z) * _2264) * _2087);
    float _2414;
    float _2416;
    float _2418;
    if (_2127)
    {
        _2414 = _2350;
        _2416 = _2351;
        _2418 = _2352;
    }
    else
    {
        uint _2420 = _2054 + 2u;
        uint _2424 = _2054 + 10u;
        float _2438 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2420].w)) * _851) * 0.949999988079071044921875);
        float _2439 = _2438 * _2438;
        float _2440 = cbLight._m0[_2420].x + _927;
        float _2441 = cbLight._m0[_2420].y + _928;
        float _2442 = cbLight._m0[_2420].z + _929;
        float _2446 = inversesqrt(dot(vec3(_2440, _2441, _2442), vec3(_2440, _2441, _2442)));
        float _2447 = _2446 * _2440;
        float _2448 = _2446 * _2441;
        float _2449 = _2446 * _2442;
        float _2450 = dot(vec3(_848, _849, _850), vec3(cbLight._m0[_2420].xyz));
        float _4454 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
        float _2453 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _2454 = dot(vec3(_848, _849, _850), vec3(_2447, _2448, _2449));
        float _4465 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
        float _2457 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _2458 = dot(vec3(cbLight._m0[_2420].xyz), vec3(_2447, _2448, _2449));
        float _4476 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
        float _2462 = _2439 * _2439;
        float _2466 = ((_2457 * _2457) * (_2462 + (-1.0))) + 1.0;
        float _2473 = exp2(log2(1.0 - (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)))) * 5.0);
        float _2480 = 1.0 - _2439;
        float _2490 = (0.5 / (((_2219 * ((_2453 * _2480) + _2439)) + 9.9999999392252902907785028219223e-09) + (((_2219 * _2480) + _2439) * _2453))) * _2453;
        float _4487 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        float _2492 = (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (_2462 / ((_2466 * _2466) * 3.141590118408203125));
        float _2493 = isnan(1.0) ? _2069 : (isnan(_2069) ? 1.0 : min(_2069, 1.0));
        _2414 = (((((_2473 * _2241) + _997) * cbLight._m0[_2424].x) * _2492) * _2493) + _2350;
        _2416 = (((((_2473 * _2243) + _999) * cbLight._m0[_2424].y) * _2492) * _2493) + _2351;
        _2418 = (((((_2473 * _2244) + _1000) * cbLight._m0[_2424].z) * _2492) * _2493) + _2352;
    }
    float _2528;
    float _2530;
    float _2532;
    if (_2145)
    {
        _2528 = _2414;
        _2530 = _2416;
        _2532 = _2418;
    }
    else
    {
        uint _2539 = _2054 + 3u;
        uint _2543 = _2054 + 11u;
        float _2557 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2539].w)) * _851) * 0.949999988079071044921875);
        float _2558 = _2557 * _2557;
        float _2559 = cbLight._m0[_2539].x + _927;
        float _2560 = cbLight._m0[_2539].y + _928;
        float _2561 = cbLight._m0[_2539].z + _929;
        float _2565 = inversesqrt(dot(vec3(_2559, _2560, _2561), vec3(_2559, _2560, _2561)));
        float _2566 = _2565 * _2559;
        float _2567 = _2565 * _2560;
        float _2568 = _2565 * _2561;
        float _2569 = dot(vec3(_848, _849, _850), vec3(cbLight._m0[_2539].xyz));
        float _4503 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2572 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _2573 = dot(vec3(_848, _849, _850), vec3(_2566, _2567, _2568));
        float _4514 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
        float _2576 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _2577 = dot(vec3(cbLight._m0[_2539].xyz), vec3(_2566, _2567, _2568));
        float _4525 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
        float _2581 = _2558 * _2558;
        float _2585 = ((_2576 * _2576) * (_2581 + (-1.0))) + 1.0;
        float _2592 = exp2(log2(1.0 - (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0)))) * 5.0);
        float _2599 = 1.0 - _2558;
        float _2609 = (0.5 / (((_2219 * ((_2572 * _2599) + _2558)) + 9.9999999392252902907785028219223e-09) + (((_2219 * _2599) + _2558) * _2572))) * _2572;
        float _4536 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
        float _2611 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (_2581 / ((_2585 * _2585) * 3.141590118408203125));
        float _2612 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
        _2528 = (((((_2592 * _2241) + _997) * cbLight._m0[_2543].x) * _2611) * _2612) + _2414;
        _2530 = (((((_2592 * _2243) + _999) * cbLight._m0[_2543].y) * _2611) * _2612) + _2416;
        _2532 = (((((_2592 * _2244) + _1000) * cbLight._m0[_2543].z) * _2611) * _2612) + _2418;
    }
    float _2747;
    float _2749;
    float _2751;
    float _2753;
    float _2755;
    float _2757;
    if (_2052.y == 0u)
    {
        float _2687 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2688 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2687;
        float _2689 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2687;
        float _2690 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2687;
        uvec4 _2702 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2703 = _2702.x;
        uint _2714 = uint((float(_2702.y) * floor(float(uint(cbSceneParam._m0[85u].y * _936) / _2703))) + floor(float(uint(cbSceneParam._m0[85u].x * _935) / _2703)));
        float _2724 = (log2(_2690 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2725 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
        uint _2728 = uint(isnan(14.0) ? _2725 : (isnan(_2725) ? 14.0 : min(_2725, 14.0)));
        uvec4 _2733 = texelFetch(g_lightClusterGridBuffer, int(((_2728 << 2u) + (_2714 << 6u)) >> 2u));
        uint _2734 = _2733.x;
        uint _2735 = _2702.z;
        float _2835;
        float _2837;
        float _2839;
        float _2841;
        float _2843;
        float _2845;
        if (((((1u << ((_2735 >> 4u) & 15u)) + 4294967295u) & _2734) == 0u) || ((_2735 & 240u) == 0u))
        {
            _2835 = 0.0;
            _2837 = 0.0;
            _2839 = 0.0;
            _2841 = 0.0;
            _2843 = 0.0;
            _2845 = 0.0;
        }
        else
        {
            float _2836;
            float _2838;
            float _2840;
            float _2842;
            float _2844;
            float _2846;
            float _2980 = 0.0;
            float _2981 = 0.0;
            float _2982 = 0.0;
            float _2983 = 0.0;
            float _2984 = 0.0;
            float _2985 = 0.0;
            uint _2986 = 0u;
            uint _2995;
            bool _2996;
            for (;;)
            {
                _2995 = texelFetch(g_lightClassification, int((((_2728 << 5u) + (_2714 << 9u)) + (_2986 << 2u)) >> 2u)).x;
                _2996 = _2995 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2996)
                {
                    frontier_phi_61_pred = _2980;
                    frontier_phi_61_pred_1 = _2985;
                    frontier_phi_61_pred_2 = _2984;
                    frontier_phi_61_pred_3 = _2983;
                    frontier_phi_61_pred_4 = _2982;
                    frontier_phi_61_pred_5 = _2981;
                }
                else
                {
                    float _3104;
                    float _3105;
                    float _3106;
                    float _3107;
                    float _3108;
                    float _3109;
                    uint _3110;
                    _3104 = _2980;
                    _3105 = _2981;
                    _3106 = _2982;
                    _3107 = _2983;
                    _3108 = _2984;
                    _3109 = _2985;
                    _3110 = _2995;
                    float _3036;
                    float _3037;
                    float _3038;
                    float _3039;
                    float _3040;
                    float _3041;
                    for (;;)
                    {
                        uint _3114 = uint(findLSB(_3110)) + (_2986 << 5u);
                        uint _3111 = (_3110 + 4294967295u) & _3110;
                        uint _3116 = _3114 * 48u;
                        vec4 _3130 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3116)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3116 + 3u)).x));
                        uint _3136 = (_3114 * 48u) + 4u;
                        vec4 _3149 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3136)).x, texelFetch(g_PointLightRenderingBuffer, int(_3136 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3136 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3136 + 3u)).x));
                        uint _3155 = (_3114 * 48u) + 8u;
                        vec3 _3166 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3155)).x, texelFetch(g_PointLightRenderingBuffer, int(_3155 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3155 + 2u)).x));
                        float _3170 = _3130.x - _2688;
                        float _3171 = _3130.y - _2689;
                        float _3172 = _3130.z - _2690;
                        float _3173 = dot(vec3(_3170, _3171, _3172), vec3(_3170, _3171, _3172));
                        float _3176 = inversesqrt(_3173);
                        float _3177 = _3176 * _3170;
                        float _3178 = _3176 * _3171;
                        float _3179 = _3176 * _3172;
                        float _3180 = dot(vec3(_954, _957, _960), vec3(_3177, _3178, _3179));
                        float _3185 = 1.0 - (_3173 * _3130.w);
                        float _4562 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                        float _3186 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
                        float _3187 = sqrt(_3173) * _3149.w;
                        float _3190 = 1.39999997615814208984375 / (_3187 + 1.39999997615814208984375);
                        float _3191 = _3190 * _3190;
                        float _3194 = ((1.0 - _3191) * _3180) + _3191;
                        float _3197 = _3187 * _3187;
                        float _3201 = ((isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0))) * _3186) / ((_3197 * 0.699999988079071044921875) + 1.0);
                        float _3205 = (-0.0) - _2688;
                        float _3206 = (-0.0) - _2689;
                        float _3207 = (-0.0) - _2690;
                        float _3211 = inversesqrt(dot(vec3(_3205, _3206, _3207), vec3(_3205, _3206, _3207)));
                        float _3212 = _3211 * _3205;
                        float _3213 = _3211 * _3206;
                        float _3214 = _3211 * _3207;
                        float _3222 = exp2(log2(1.0 / ((_3197 * 3.5) + 5.0)) * 0.25);
                        float _3223 = 1.0 - _1029;
                        float _3230 = sqrt(1.0 - ((1.0 - (_3223 * _3223)) * (1.0 - (_3222 * _3222))));
                        float _3231 = _3230 * _3230;
                        float _3232 = _3231 * _3231;
                        float _3233 = _3212 + _3177;
                        float _3234 = _3213 + _3178;
                        float _3235 = _3214 + _3179;
                        float _3239 = inversesqrt(dot(vec3(_3233, _3234, _3235), vec3(_3233, _3234, _3235)));
                        float _3243 = dot(vec3(_954, _957, _960), vec3(_3212, _3213, _3214));
                        float _4578 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0));
                        float _3246 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
                        float _3247 = dot(vec3(_954, _957, _960), vec3(_3239 * _3233, _3239 * _3234, _3239 * _3235));
                        float _4589 = isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : max(_3247, 0.0));
                        float _3250 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
                        float _3254 = ((_3250 * _3250) * (_3232 + (-1.0))) + 1.0;
                        float _3255 = _3190 * _3231;
                        float _3256 = _3255 * _3255;
                        float _3259 = ((1.0 - _3256) * _3180) + _3256;
                        float _4600 = isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : max(_3259, 0.0));
                        float _3260 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
                        float _3261 = 1.0 - _3231;
                        float _3271 = (0.5 / (((_3260 * ((_3246 * _3261) + _3231)) + 9.9999999392252902907785028219223e-09) + (((_3260 * _3261) + _3231) * _3246))) * _3260;
                        float _4611 = isnan(0.0) ? _3271 : (isnan(_3271) ? 0.0 : max(_3271, 0.0));
                        float _3282 = (((_3232 * 3.1415927410125732421875) * (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0)))) / ((_3254 * _3254) * ((_3197 * 2.1991131305694580078125) + 3.141590118408203125))) * _3186;
                        _3039 = (_3201 * _3149.x) + _3107;
                        _3040 = (_3201 * _3149.y) + _3108;
                        _3041 = (_3201 * _3149.z) + _3109;
                        _3036 = (_3282 * _3166.x) + _3104;
                        _3037 = (_3282 * _3166.y) + _3105;
                        _3038 = (_3282 * _3166.z) + _3106;
                        if (_3111 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3104 = _3036;
                            _3105 = _3037;
                            _3106 = _3038;
                            _3107 = _3039;
                            _3108 = _3040;
                            _3109 = _3041;
                            _3110 = _3111;
                        }
                    }
                    frontier_phi_61_pred = _3036;
                    frontier_phi_61_pred_1 = _3041;
                    frontier_phi_61_pred_2 = _3040;
                    frontier_phi_61_pred_3 = _3039;
                    frontier_phi_61_pred_4 = _3038;
                    frontier_phi_61_pred_5 = _3037;
                }
                _2836 = frontier_phi_61_pred;
                _2846 = frontier_phi_61_pred_1;
                _2844 = frontier_phi_61_pred_2;
                _2842 = frontier_phi_61_pred_3;
                _2840 = frontier_phi_61_pred_4;
                _2838 = frontier_phi_61_pred_5;
                uint _2987 = _2986 + 1u;
                if (_2987 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2980 = _2836;
                    _2981 = _2838;
                    _2982 = _2840;
                    _2983 = _2842;
                    _2984 = _2844;
                    _2985 = _2846;
                    _2986 = _2987;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2835 = _2836;
            _2837 = _2838;
            _2839 = _2840;
            _2841 = _2842;
            _2843 = _2844;
            _2845 = _2846;
        }
        uvec4 _2849 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2850 = _2849.z;
        uint _2852 = (_2850 >> 8u) & 15u;
        float _2948;
        float _2950;
        float _2952;
        float _2954;
        float _2956;
        float _2958;
        if (((4294967295u << _2852) & _2734) == 0u)
        {
            _2948 = _2835;
            _2950 = _2837;
            _2952 = _2839;
            _2954 = _2841;
            _2956 = _2843;
            _2958 = _2845;
        }
        else
        {
            float _2973 = inversesqrt(dot(vec3(_2688, _2689, _2690), vec3(_2688, _2689, _2690)));
            float _2974 = _2973 * _2688;
            float _2975 = _2973 * _2689;
            float _2976 = _2973 * _2690;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2852 < ((_2850 >> 12u) & 15u))
            {
                float _2949;
                float _2951;
                float _2953;
                float _2955;
                float _2957;
                float _2959;
                float _3087 = _2835;
                float _3088 = _2837;
                float _3089 = _2839;
                float _3090 = _2841;
                float _3091 = _2843;
                float _3092 = _2845;
                uint _3093 = _2852;
                uint _3102;
                bool _3103;
                for (;;)
                {
                    _3102 = texelFetch(g_lightClassification, int((((_2728 << 5u) + (_2714 << 9u)) + (_3093 << 2u)) >> 2u)).x;
                    _3103 = _3102 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3103)
                    {
                        frontier_phi_67_pred = _3090;
                        frontier_phi_67_pred_1 = _3091;
                        frontier_phi_67_pred_2 = _3092;
                        frontier_phi_67_pred_3 = _3089;
                        frontier_phi_67_pred_4 = _3088;
                        frontier_phi_67_pred_5 = _3087;
                    }
                    else
                    {
                        float _3287;
                        float _3288;
                        float _3289;
                        float _3290;
                        float _3291;
                        float _3292;
                        float _3580;
                        float _3581;
                        float _3582;
                        float _3583;
                        float _3584;
                        float _3585;
                        float _3300 = _3087;
                        float _3301 = _3088;
                        float _3302 = _3089;
                        float _3303 = _3090;
                        float _3304 = _3091;
                        float _3305 = _3092;
                        uint _3306 = _3102;
                        uint _3307;
                        vec4 _3332;
                        float _3333;
                        vec4 _3348;
                        vec3 _3360;
                        vec4 _3375;
                        vec4 _3390;
                        float _3436;
                        bool _3437;
                        for (;;)
                        {
                            uint _3317 = ((_3093 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3306));
                            _3307 = (_3306 + 4294967295u) & _3306;
                            uint _3319 = _3317 * 40u;
                            _3332 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3319)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 3u)).x));
                            _3333 = _3332.w;
                            uint _3335 = (_3317 * 40u) + 4u;
                            _3348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 3u)).x));
                            uint _3350 = (_3317 * 40u) + 8u;
                            _3360 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3350)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 2u)).x));
                            uint _3362 = (_3317 * 40u) + 16u;
                            _3375 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3362)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3362 + 3u)).x));
                            uint _3377 = (_3317 * 40u) + 20u;
                            _3390 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3377)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 3u)).x));
                            uint _3392 = (_3317 * 40u) + 24u;
                            vec4 _3405 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3392)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 3u)).x));
                            uint _3411 = (_3317 * 40u) + 28u;
                            vec4 _3424 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3411)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 3u)).x));
                            _3436 = fma(_2690, _3424.z, fma(_2689, _3424.y, _3424.x * _2688)) + _3424.w;
                            _3437 = !((fma(_2690, _3405.z, fma(_2689, _3405.y, _3405.x * _2688)) + _3405.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3437)
                            {
                                float _3464 = _3332.x - _2688;
                                float _3465 = _3332.y - _2689;
                                float _3466 = _3332.z - _2690;
                                float _3467 = dot(vec3(_3464, _3465, _3466), vec3(_3464, _3465, _3466));
                                float _3470 = inversesqrt(_3467);
                                float _3471 = _3470 * _3464;
                                float _3472 = _3470 * _3465;
                                float _3473 = _3470 * _3466;
                                float _3477 = 1.0 - (_3467 / (_3333 * _3333));
                                float _4622 = isnan(0.0) ? _3477 : (isnan(_3477) ? 0.0 : max(_3477, 0.0));
                                float _3478 = isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0));
                                float _3482 = sqrt(_3467) * _3348.w;
                                float _3484 = 1.39999997615814208984375 / (_3482 + 1.39999997615814208984375);
                                float _3485 = _3484 * _3484;
                                float _3488 = ((1.0 - _3485) * dot(vec3(_3471, _3472, _3473), vec3(_954, _957, _960))) + _3485;
                                float _3491 = _3482 * _3482;
                                float _3495 = (fma(_2690, _3375.z, fma(_2689, _3375.y, _3375.x * _2688)) + _3375.w) / _3436;
                                float _3496 = (fma(_2690, _3390.z, fma(_2689, _3390.y, _3390.x * _2688)) + _3390.w) / _3436;
                                float _3500 = 1.0 - dot(vec2(_3495, _3496), vec2(_3495, _3496));
                                float _4638 = isnan(0.0) ? _3500 : (isnan(_3500) ? 0.0 : max(_3500, 0.0));
                                float _3501 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
                                float _3502 = _3501 * (((isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0))) * _3478) / ((_3491 * 0.699999988079071044921875) + 1.0));
                                float _3514 = exp2(log2(1.0 / ((_3491 * 3.5) + 5.0)) * 0.25);
                                float _3515 = 1.0 - _1029;
                                float _3522 = sqrt(1.0 - ((1.0 - (_3515 * _3515)) * (1.0 - (_3514 * _3514))));
                                float _3523 = _3522 * _3522;
                                float _3524 = _3523 * _3523;
                                float _3525 = _3471 - _2974;
                                float _3526 = _3472 - _2975;
                                float _3527 = _3473 - _2976;
                                float _3531 = inversesqrt(dot(vec3(_3525, _3526, _3527), vec3(_3525, _3526, _3527)));
                                float _3535 = dot(vec3(_954, _957, _960), vec3((-0.0) - _2974, (-0.0) - _2975, (-0.0) - _2976));
                                float _4649 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                                float _3538 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                                float _3539 = dot(vec3(_954, _957, _960), vec3(_3531 * _3525, _3531 * _3526, _3531 * _3527));
                                float _4660 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                                float _3542 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
                                float _3546 = ((_3542 * _3542) * (_3524 + (-1.0))) + 1.0;
                                float _3547 = _3484 * _3523;
                                float _3548 = _3547 * _3547;
                                float _3554 = ((1.0 - _3548) * dot(vec3(_954, _957, _960), vec3(_3471, _3472, _3473))) + _3548;
                                float _4671 = isnan(0.0) ? _3554 : (isnan(_3554) ? 0.0 : max(_3554, 0.0));
                                float _3555 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
                                float _3556 = 1.0 - _3523;
                                float _3566 = (0.5 / (((_3555 * ((_3538 * _3556) + _3523)) + 9.9999999392252902907785028219223e-09) + (((_3555 * _3556) + _3523) * _3538))) * _3555;
                                float _4682 = isnan(0.0) ? _3566 : (isnan(_3566) ? 0.0 : max(_3566, 0.0));
                                float _3576 = (_3501 * _3478) * (((_3524 * 3.1415927410125732421875) * (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) / ((_3546 * _3546) * ((_3491 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3576 * _3360.x;
                                frontier_phi_73_pred_1 = _3576 * _3360.y;
                                frontier_phi_73_pred_2 = _3502 * _3348.z;
                                frontier_phi_73_pred_3 = _3502 * _3348.y;
                                frontier_phi_73_pred_4 = _3502 * _3348.x;
                                frontier_phi_73_pred_5 = _3576 * _3360.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3580 = frontier_phi_73_pred;
                            _3581 = frontier_phi_73_pred_1;
                            _3585 = frontier_phi_73_pred_2;
                            _3584 = frontier_phi_73_pred_3;
                            _3583 = frontier_phi_73_pred_4;
                            _3582 = frontier_phi_73_pred_5;
                            _3290 = _3583 + _3303;
                            _3291 = _3584 + _3304;
                            _3292 = _3585 + _3305;
                            _3287 = _3580 + _3300;
                            _3288 = _3581 + _3301;
                            _3289 = _3582 + _3302;
                            if (_3307 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3300 = _3287;
                                _3301 = _3288;
                                _3302 = _3289;
                                _3303 = _3290;
                                _3304 = _3291;
                                _3305 = _3292;
                                _3306 = _3307;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3290;
                        frontier_phi_67_pred_1 = _3291;
                        frontier_phi_67_pred_2 = _3292;
                        frontier_phi_67_pred_3 = _3289;
                        frontier_phi_67_pred_4 = _3288;
                        frontier_phi_67_pred_5 = _3287;
                    }
                    _2955 = frontier_phi_67_pred;
                    _2957 = frontier_phi_67_pred_1;
                    _2959 = frontier_phi_67_pred_2;
                    _2953 = frontier_phi_67_pred_3;
                    _2951 = frontier_phi_67_pred_4;
                    _2949 = frontier_phi_67_pred_5;
                    uint _3094 = _3093 + 1u;
                    if (_3094 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3087 = _2949;
                        _3088 = _2951;
                        _3089 = _2953;
                        _3090 = _2955;
                        _3091 = _2957;
                        _3092 = _2959;
                        _3093 = _3094;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2957;
                frontier_phi_55_56_ladder_1 = _2959;
                frontier_phi_55_56_ladder_2 = _2955;
                frontier_phi_55_56_ladder_3 = _2953;
                frontier_phi_55_56_ladder_4 = _2951;
                frontier_phi_55_56_ladder_5 = _2949;
            }
            else
            {
                frontier_phi_55_56_ladder = _2843;
                frontier_phi_55_56_ladder_1 = _2845;
                frontier_phi_55_56_ladder_2 = _2841;
                frontier_phi_55_56_ladder_3 = _2839;
                frontier_phi_55_56_ladder_4 = _2837;
                frontier_phi_55_56_ladder_5 = _2835;
            }
            _2948 = frontier_phi_55_56_ladder_5;
            _2950 = frontier_phi_55_56_ladder_4;
            _2952 = frontier_phi_55_56_ladder_3;
            _2954 = frontier_phi_55_56_ladder_2;
            _2956 = frontier_phi_55_56_ladder;
            _2958 = frontier_phi_55_56_ladder_1;
        }
        float _2963 = isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0));
        _2747 = (_2963 * _2954) + _2183;
        _2749 = (_2963 * _2956) + _2185;
        _2751 = (_2963 * _2958) + _2187;
        _2753 = ((_2948 * _997) * _2963) + _2528;
        _2755 = ((_2950 * _999) * _2963) + _2530;
        _2757 = ((_2952 * _1000) * _2963) + _2532;
    }
    else
    {
        _2747 = _2183;
        _2749 = _2185;
        _2751 = _2187;
        _2753 = _2528;
        _2755 = _2530;
        _2757 = _2532;
    }
    float _4698 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _4709 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    float _4720 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    uint _2777 = _279 + 6u;
    float _2785 = _935 / cbSceneParam._m0[86u].x;
    float _2786 = _936 / cbSceneParam._m0[86u].y;
    vec4 _2800 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2785, _2786, (log2((isnan(cbSceneParam._m0[77u].w) ? _870 : (isnan(_870) ? cbSceneParam._m0[77u].w : min(_870, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2802 = _2800.x;
    float _2803 = _2800.y;
    float _2804 = _2800.z;
    float _2805 = _2800.w;
    float _2898;
    float _2900;
    float _2902;
    float _2904;
    if (_870 > cbSceneParam._m0[78u].w)
    {
        float _2860 = isnan(_870) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _870 : min(cbSceneParam._m0[80u].w, _870));
        float _2861 = _2860 / _870;
        float _2872 = _2861 * _920;
        float _2873 = _921 * _2861;
        float _2874 = (-0.0) - _2873;
        float _2876 = _2861 * _922;
        float _2878 = (cbSceneParam._m0[77u].w * _2874) / _2860;
        float _2879 = _2878 + cbSceneParam._m0[79u].w;
        float _2880 = cbSceneParam._m0[79u].w - _2873;
        float _2886 = sqrt(((_2872 * _2872) + (_2873 * _2873)) + (_2876 * _2876));
        float _2889 = (1.0 - (cbSceneParam._m0[77u].w / _2860)) * _2886;
        float _2894 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2896 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3049;
        if (abs((_2874 - _2878) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3049 = ((((_2879 > 0.0) ? exp2(_2894 * _2879) : (2.0 - exp2(_2896 * _2879))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2889;
        }
        else
        {
            float _3009 = 1.0 / cbSceneParam._m0[80u].x;
            float _3010 = isnan(_2880) ? _2879 : (isnan(_2879) ? _2880 : max(_2879, _2880));
            float _3011 = isnan(_2880) ? _2879 : (isnan(_2879) ? _2880 : min(_2879, _2880));
            float _3020 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : min(_3010, 0.0));
            float _3021 = isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : min(_3011, 0.0));
            _3049 = ((abs(_2886 / _2874) * cbSceneParam._m0[80u].y) * ((((_3020 - _3021) * 2.0) - ((exp2(_2894 * (isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0)))) - exp2(_2894 * (isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0))))) * _3009)) - ((exp2(_2896 * _3020) - exp2(_2896 * _3021)) * _3009))) + (_2889 * cbSceneParam._m0[80u].z);
        }
        vec4 _3051 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2785, _2786, 1.0), 0.0);
        float _3060 = exp2((_3049 * (-1.44269502162933349609375)) * (1.0 - _3051.w));
        float _3061 = log2(_3060);
        float _3077 = log2(_2805);
        _2898 = (exp2(_3077 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3061 * cbSceneParam._m0[78u].x)) * _3051.x) / cbSceneParam._m0[78u].x)) + _2802;
        _2900 = (exp2(_3077 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3061 * cbSceneParam._m0[78u].y)) * _3051.y) / cbSceneParam._m0[78u].y)) + _2803;
        _2902 = (exp2(_3077 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3061 * cbSceneParam._m0[78u].z)) * _3051.z) / cbSceneParam._m0[78u].z)) + _2804;
        _2904 = _3060 * _2805;
    }
    else
    {
        _2898 = _2802;
        _2900 = _2803;
        _2902 = _2804;
        _2904 = _2805;
    }
    float _2916 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2917 = _2916 == 3.0;
    float _2918 = log2(_2904);
    float _2925 = exp2(_2918 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0))) * (_2747 + ((isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0))) * _1013))) + ((_2753 + ((isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0))) * _1821)) * cbPerFrame._m0[3u].x));
    float _2926 = exp2(_2918 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0))) * (_2749 + ((isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0))) * _1013))) + ((_2755 + ((isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0))) * _1821)) * cbPerFrame._m0[3u].x));
    float _2927 = exp2(_2918 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_2751 + ((isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))) * _1013))) + ((_2757 + ((isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0))) * _1821)) * cbPerFrame._m0[3u].x));
    float _2936 = (_2916 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2936 * (_2917 ? _2925 : (_2925 + (cbSceneParam._m0[72u].w * _2898)));
    SV_Target.y = _2936 * (_2917 ? _2926 : (_2926 + (cbSceneParam._m0[72u].w * _2900)));
    SV_Target.z = _2936 * (_2917 ? _2927 : (_2927 + (cbSceneParam._m0[72u].w * _2902)));
    SV_Target.w = cbInstanceData._m0[_2777].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2777].w;
}


