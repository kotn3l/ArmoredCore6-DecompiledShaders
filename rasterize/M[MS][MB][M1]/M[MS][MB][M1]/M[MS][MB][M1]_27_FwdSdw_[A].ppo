#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1272;
float _3936;
float _3937;
float _3938;
float _3939;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _224 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _225 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _226 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _232 = inversesqrt(dot(vec3(_224, _225, _226), vec3(_224, _225, _226)));
    float _233 = _232 * _224;
    float _234 = _232 * _225;
    float _235 = _232 * _226;
    float _239 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _240 = _239 * NORMAL.x;
    float _241 = _239 * NORMAL.y;
    float _242 = _239 * NORMAL.z;
    float _246 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247 = _246 * TANGENT.x;
    float _248 = _246 * TANGENT.y;
    float _249 = _246 * TANGENT.z;
    float _258 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _261 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3948 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _3959 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _3970 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    uint _271 = uint(roundEven(NORMAL.w)) * 13u;
    uint _276 = _271 + 1u;
    uint _280 = _271 + 2u;
    float _289 = sqrt(((cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x) + (cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x)) + (cbInstanceData._m0[_280].x * cbInstanceData._m0[_280].x));
    float _290 = _289 * TEXCOORD.z;
    float _291 = _289 * TEXCOORD.w;
    vec4 _304 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _290) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _291) + cbTextureTilingScale._m0[13u].w));
    vec4 _327 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _332 = _327.x * cbMtdParam._m0[9u].x;
    float _333 = _327.y * cbMtdParam._m0[9u].y;
    float _334 = _327.z * cbMtdParam._m0[9u].z;
    float _338 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _304.x) * _332;
    float _341 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _304.y) * _333;
    float _344 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _304.z) * _334;
    float _351 = ((_332 - _338) * (isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0)))) + _338;
    float _352 = ((_333 - _341) * (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0)))) + _341;
    float _353 = ((_334 - _344) * (isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0)))) + _344;
    vec4 _371 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _290) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _291) + cbTextureTilingScale._m0[20u].w));
    vec4 _397 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _401 = _397.z;
    float _405 = (_397.x * 2.0) + (-1.0);
    float _406 = (_397.y * 2.0) + (-1.0);
    float _407 = dot(vec2(_405, _406), vec2(_405, _406));
    float _3981 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _412 = sqrt(1.0 - (isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0))));
    float _417 = _405 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_371.x * 2.0) + (-1.0)));
    float _418 = _406 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_371.y * 2.0) + (-1.0)));
    float _421 = fma(_412, _240, fma(_418, _247, _417 * _233));
    float _424 = fma(_412, _241, fma(_418, _248, _417 * _234));
    float _427 = fma(_412, _242, fma(_418, _249, _417 * _235));
    float _431 = inversesqrt(dot(vec3(_421, _424, _427), vec3(_421, _424, _427)));
    vec4 _467 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _290) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _291) + cbTextureTilingScale._m0[11u].w));
    float _469 = _467.x;
    float _470 = 1.0 - _469;
    float _479 = (cbMtdParam._m0[19u].x + dot(vec4(_431 * _421, _431 * _424, _431 * _427, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_469 - _470) * cbMtdParam._m0[24u].z) + _470) * cbMtdParam._m0[21u].z);
    float _3992 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _480 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    float _482 = (-0.0) - cbMtdParam._m0[24u].x;
    float _484 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _485 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
    float _492 = _480 - ((_480 * TEXCOORD_8.x) * _485);
    float _493 = _480 - ((_480 * TEXCOORD_8.y) * _485);
    float _494 = _480 - ((_480 * TEXCOORD_8.z) * _485);
    float _501 = (_492 * (cbMtdParam._m0[17u].x - _351)) + _351;
    float _502 = (_493 * (cbMtdParam._m0[17u].y - _352)) + _352;
    float _503 = (_494 * (cbMtdParam._m0[17u].z - _353)) + _353;
    vec4 _515 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _290) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _291) + cbTextureTilingScale._m0[19u].w));
    float _517 = _515.x;
    float _518 = 1.0 - _517;
    float _546 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_517 - _518) * cbMtdParam._m0[24u].w) + _518) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4013 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0));
    float _555 = ((((cbMtdParam._m0[10u].x - _501) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _547) + _501;
    float _556 = ((((cbMtdParam._m0[10u].y - _502) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _547) + _502;
    float _557 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _503)) * _547) + _503;
    vec4 _570 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _572 = _570.x;
    float _574 = _572 - (_572 * _492);
    float _576 = _574 - (_574 * _547);
    float _581 = (((_371.z - _401) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _401;
    vec4 _595 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _290) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _291) + cbTextureTilingScale._m0[15u].w));
    float _602 = (_595.x * 2.0) + (-1.0);
    float _603 = (_595.y * 2.0) + (-1.0);
    float _604 = dot(vec2(_602, _603), vec2(_602, _603));
    float _4024 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _612 = ((_595.z - _581) * _492) + _581;
    float _615 = ((cbMtdParam._m0[23u].y - _612) * _547) + _612;
    vec4 _634 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _290) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _291) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _640 = (_634.x * 2.0) + (-1.0);
    float _641 = (_634.y * 2.0) + (-1.0);
    float _642 = dot(vec2(_640, _641), vec2(_640, _641));
    float _4035 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _657 = ((sqrt(1.0 - (isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0)))) - _412) * _494) + _412;
    float _660 = (((_602 - _417) * _492) + _417) + (cbMtdParam._m0[21u].x * _417);
    float _661 = (((_603 - _418) * _493) + _418) + (cbMtdParam._m0[21u].x * _418);
    float _672 = (((_640 - _660) + (_660 * cbMtdParam._m0[22u].z)) * _547) + _660;
    float _673 = (((_641 - _661) + (_661 * cbMtdParam._m0[22u].z)) * _547) + _661;
    float _674 = (_547 * (sqrt(1.0 - (isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0)))) - _657)) + _657;
    float _676 = cbMtdParam._m0[22u].x + _397.w;
    float _679 = fma(_674, _240, fma(_673, _247, _672 * _233));
    float _682 = fma(_674, _241, fma(_673, _248, _672 * _234));
    float _685 = fma(_674, _242, fma(_673, _249, _672 * _235));
    float _689 = inversesqrt(dot(vec3(_679, _682, _685), vec3(_679, _682, _685)));
    float _690 = _689 * _679;
    float _691 = _689 * _682;
    float _692 = _689 * _685;
    float _4046 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _693 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
    float _4057 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _4068 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _4079 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _4090 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _4101 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _698 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _712 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _752 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _762 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _752);
    float _763 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _752);
    float _764 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _752);
    float _768 = inversesqrt(dot(vec3(_762, _763, _764), vec3(_762, _763, _764)));
    float _769 = _762 * _768;
    float _770 = _763 * _768;
    float _771 = _764 * _768;
    vec4 _776 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _778 = _776.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _953 = sqrt(((_762 * _762) + (_763 * _763)) + (_764 * _764));
        float _959 = (cbMatDynParam._m0[5u].x * _953) + cbMatDynParam._m0[5u].y;
        float _4112 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _960 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
        float _964 = (cbMatDynParam._m0[5u].z * _953) + cbMatDynParam._m0[5u].w;
        float _4123 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0))) - _960)) + _960) < ((_778 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _790 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _791 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _811 = fma(_692, cbSceneParam._m0[5u].z, fma(_691, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _690));
    float _814 = fma(_692, cbSceneParam._m0[6u].z, fma(_691, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _690));
    float _817 = fma(_692, cbSceneParam._m0[7u].z, fma(_691, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _690));
    uint _830 = _271 + 9u;
    uint _831 = _830 + uint(cbMatDynParam._m0[0u].w);
    float _837 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0)))) * cbInstanceData._m0[_831].x;
    float _838 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0)))) * cbInstanceData._m0[_831].y;
    float _839 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0)))) * cbInstanceData._m0[_831].z;
    float _4134 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _840 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _4145 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _841 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _4156 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _842 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
    float _843 = 1.0 - _698;
    float _844 = _840 * _843;
    float _845 = _841 * _843;
    float _846 = _842 * _843;
    float _851 = (_840 + (-0.039999999105930328369140625)) * _698;
    float _852 = (_841 + (-0.039999999105930328369140625)) * _698;
    float _853 = (_842 + (-0.039999999105930328369140625)) * _698;
    float _854 = _851 + 0.039999999105930328369140625;
    float _856 = _852 + 0.039999999105930328369140625;
    float _857 = _853 + 0.039999999105930328369140625;
    vec4 _866 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _790, cbSceneParam._m0[86u].y * _791));
    float _870 = ((isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0))) * TEXCOORD_5.w) * _866.x;
    float _871 = dot(vec3(_690, _691, _692), vec3(_769, _770, _771));
    float _874 = _871 * 2.0;
    float _878 = (_874 * _690) - _769;
    float _879 = (_874 * _691) - _770;
    float _880 = (_874 * _692) - _771;
    float _884 = abs(dot(vec3(_769, _770, _771), vec3(_690, _691, _692)));
    float _4167 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _886 = sqrt(_693);
    float _899 = exp2((_886 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_886 * 3.0));
    float _905 = (1.0 - _899) * ((_886 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _906 = _899 * _886;
    float _934 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _942 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1271;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _996 = fma(_942, cbModelParam._m0[26u].z, fma(_938, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _934));
        float _1000 = fma(_942, cbModelParam._m0[27u].z, fma(_938, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _934));
        float _1004 = fma(_942, cbModelParam._m0[28u].z, fma(_938, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _934));
        float _1029 = _934 + _690;
        float _1030 = _938 + _691;
        float _1031 = _942 + _692;
        float _1041 = fma(_1031, cbModelParam._m0[26u].z, fma(_1030, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1029)) - _996;
        float _1042 = fma(_1031, cbModelParam._m0[27u].z, fma(_1030, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1029)) - _1000;
        float _1043 = fma(_1031, cbModelParam._m0[28u].z, fma(_1030, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1029)) - _1004;
        float _1047 = inversesqrt(dot(vec3(_1041, _1042, _1043), vec3(_1041, _1042, _1043)));
        float _1060 = ((_1047 * _1041) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_996 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1061 = ((_1047 * _1042) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1000 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1062 = ((_1047 * _1043) / cbModelParam._m0[34u].z) + ((((((_1004 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1065 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1060, _1061, _1062), 0.0);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1060, _1061, _1062), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1060, _1061, _1062), 0.0);
        vec4 _1086 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1060, _1061, _1062), 0.0);
        float _1099 = exp2((_1065.w + (-0.5)) * 20.0) * 2.0;
        float _1100 = _1099 * (_1065.x + (-0.5));
        float _1101 = _1099 * (_1065.y + (-0.5));
        float _1102 = _1099 * (_1065.z + (-0.5));
        float _1109 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1110 = _1109 * (_1072.x + (-0.5));
        float _1111 = _1109 * (_1072.y + (-0.5));
        float _1112 = _1109 * (_1072.z + (-0.5));
        float _1119 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1120 = _1119 * (_1079.x + (-0.5));
        float _1121 = _1119 * (_1079.y + (-0.5));
        float _1122 = _1119 * (_1079.z + (-0.5));
        float _1129 = exp2((_1086.w + (-0.5)) * 20.0) * 2.0;
        float _1130 = _1129 * (_1086.x + (-0.5));
        float _1131 = _1129 * (_1086.y + (-0.5));
        float _1132 = _1129 * (_1086.z + (-0.5));
        float _1133 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1134 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1135 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1136 = _1100 * 0.5;
        float _1137 = _1110 * 0.5;
        float _1138 = _1120 * 0.5;
        float _1139 = dot(vec3(_1136, _1137, _1138), vec3(_1136, _1137, _1138));
        float _1144 = (_1139 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1139);
        float _1153 = (dot(vec3(_690, _691, _692), vec3(_1144 * _1136, _1144 * _1137, _1144 * _1138)) + 1.0) * 0.5;
        float _4193 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1163 = sqrt(((_1137 * _1137) + (_1136 * _1136)) + (_1138 * _1138)) / (_1133 + 9.9999997473787516355514526367188e-06);
        float _4204 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1164 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
        float _1165 = _1164 * 2.0;
        float _1169 = (1.0 - _1164) / (_1164 + 1.0);
        float _4215 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1170 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1179 = ((((1.0 - _1170) * (_1165 + 2.0)) * exp2(log2(isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))) * (_1165 + 1.0))) + _1170) * _1133;
        float _1180 = _1101 * 0.5;
        float _1181 = _1111 * 0.5;
        float _1182 = _1121 * 0.5;
        float _1183 = dot(vec3(_1180, _1181, _1182), vec3(_1180, _1181, _1182));
        float _1188 = (_1183 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1183);
        float _1196 = (dot(vec3(_690, _691, _692), vec3(_1188 * _1180, _1188 * _1181, _1188 * _1182)) + 1.0) * 0.5;
        float _4226 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1205 = sqrt(((_1181 * _1181) + (_1180 * _1180)) + (_1182 * _1182)) / (_1134 + 9.9999997473787516355514526367188e-06);
        float _4237 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1206 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
        float _1207 = _1206 * 2.0;
        float _1211 = (1.0 - _1206) / (_1206 + 1.0);
        float _4248 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1212 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1221 = ((((1.0 - _1212) * (_1207 + 2.0)) * exp2(log2(isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))) * (_1207 + 1.0))) + _1212) * _1134;
        float _1222 = _1102 * 0.5;
        float _1223 = _1112 * 0.5;
        float _1224 = _1122 * 0.5;
        float _1225 = dot(vec3(_1222, _1223, _1224), vec3(_1222, _1223, _1224));
        float _1230 = (_1225 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1225);
        float _1238 = (dot(vec3(_690, _691, _692), vec3(_1230 * _1222, _1230 * _1223, _1230 * _1224)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1247 = sqrt(((_1223 * _1223) + (_1222 * _1222)) + (_1224 * _1224)) / (_1135 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1248 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1249 = _1248 * 2.0;
        float _1253 = (1.0 - _1248) / (_1248 + 1.0);
        float _4281 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
        float _1254 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1263 = ((((1.0 - _1254) * (_1249 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1249 + 1.0))) + _1254) * _1135;
        _1271 = _1102;
        _1273 = _1101;
        _1274 = _1100;
        _1275 = _1112;
        _1276 = _1111;
        _1277 = _1110;
        _1278 = _1122;
        _1279 = _1121;
        _1280 = _1120;
        _1281 = _1135;
        _1282 = _1134;
        _1283 = _1133;
        _1284 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0)));
        _1285 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0)));
        _1286 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0)));
    }
    else
    {
        _1271 = _1272;
        _1273 = _1272;
        _1274 = _1272;
        _1275 = _1272;
        _1276 = _1272;
        _1277 = _1272;
        _1278 = _1272;
        _1279 = _1272;
        _1280 = _1272;
        _1281 = _1272;
        _1282 = _1272;
        _1283 = _1272;
        _1284 = 0.0;
        _1285 = 0.0;
        _1286 = 0.0;
    }
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1314 = fma(_942, cbModelParam._m0[30u].z, fma(_938, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _934));
        float _1318 = fma(_942, cbModelParam._m0[31u].z, fma(_938, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _934));
        float _1322 = fma(_942, cbModelParam._m0[32u].z, fma(_938, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _934));
        float _1345 = _934 + _690;
        float _1346 = _938 + _691;
        float _1347 = _942 + _692;
        float _1357 = fma(_1347, cbModelParam._m0[30u].z, fma(_1346, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1345)) - _1314;
        float _1358 = fma(_1347, cbModelParam._m0[31u].z, fma(_1346, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1345)) - _1318;
        float _1359 = fma(_1347, cbModelParam._m0[32u].z, fma(_1346, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1345)) - _1322;
        float _1363 = inversesqrt(dot(vec3(_1357, _1358, _1359), vec3(_1357, _1358, _1359)));
        float _1376 = ((_1363 * _1357) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1314 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1377 = ((_1363 * _1358) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1318 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1378 = ((_1363 * _1359) / cbModelParam._m0[35u].z) + ((((((_1322 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1380 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1376, _1377, _1378), 0.0);
        vec4 _1387 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1376, _1377, _1378), 0.0);
        vec4 _1394 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1376, _1377, _1378), 0.0);
        vec4 _1401 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1376, _1377, _1378), 0.0);
        float _1413 = exp2((_1380.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1380.x + (-0.5));
        float _1415 = _1413 * (_1380.y + (-0.5));
        float _1416 = _1413 * (_1380.z + (-0.5));
        float _1423 = exp2((_1387.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1387.x + (-0.5));
        float _1425 = _1423 * (_1387.y + (-0.5));
        float _1426 = _1423 * (_1387.z + (-0.5));
        float _1433 = exp2((_1394.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1394.x + (-0.5));
        float _1435 = _1433 * (_1394.y + (-0.5));
        float _1436 = _1433 * (_1394.z + (-0.5));
        float _1443 = exp2((_1401.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1401.x + (-0.5));
        float _1445 = _1443 * (_1401.y + (-0.5));
        float _1446 = _1443 * (_1401.z + (-0.5));
        float _1447 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1448 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1449 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1450 = _1414 * 0.5;
        float _1451 = _1424 * 0.5;
        float _1452 = _1434 * 0.5;
        float _1453 = dot(vec3(_1450, _1451, _1452), vec3(_1450, _1451, _1452));
        float _1458 = (_1453 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1453);
        float _1466 = (dot(vec3(_690, _691, _692), vec3(_1458 * _1450, _1458 * _1451, _1458 * _1452)) + 1.0) * 0.5;
        float _4322 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1475 = sqrt(((_1451 * _1451) + (_1450 * _1450)) + (_1452 * _1452)) / (_1447 + 9.9999997473787516355514526367188e-06);
        float _4333 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _1477 = _1476 * 2.0;
        float _1481 = (1.0 - _1476) / (_1476 + 1.0);
        float _4344 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1491 = ((((1.0 - _1482) * (_1477 + 2.0)) * exp2(log2(isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0))) * (_1477 + 1.0))) + _1482) * _1447;
        float _1492 = _1415 * 0.5;
        float _1493 = _1425 * 0.5;
        float _1494 = _1435 * 0.5;
        float _1495 = dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494));
        float _1500 = (_1495 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1495);
        float _1508 = (dot(vec3(_690, _691, _692), vec3(_1500 * _1492, _1500 * _1493, _1500 * _1494)) + 1.0) * 0.5;
        float _4355 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1517 = sqrt(((_1493 * _1493) + (_1492 * _1492)) + (_1494 * _1494)) / (_1448 + 9.9999997473787516355514526367188e-06);
        float _4366 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _4377 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * (_1519 + 1.0))) + _1524) * _1448;
        float _1534 = _1416 * 0.5;
        float _1535 = _1426 * 0.5;
        float _1536 = _1436 * 0.5;
        float _1537 = dot(vec3(_1534, _1535, _1536), vec3(_1534, _1535, _1536));
        float _1542 = (_1537 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1537);
        float _1550 = (dot(vec3(_690, _691, _692), vec3(_1542 * _1534, _1542 * _1535, _1542 * _1536)) + 1.0) * 0.5;
        float _4388 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1559 = sqrt(((_1535 * _1535) + (_1534 * _1534)) + (_1536 * _1536)) / (_1449 + 9.9999997473787516355514526367188e-06);
        float _4399 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
        float _1561 = _1560 * 2.0;
        float _1565 = (1.0 - _1560) / (_1560 + 1.0);
        float _4410 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1575 = ((((1.0 - _1566) * (_1561 + 2.0)) * exp2(log2(isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0))) * (_1561 + 1.0))) + _1566) * _1449;
        _1583 = _1416;
        _1584 = _1415;
        _1585 = _1414;
        _1586 = _1426;
        _1587 = _1425;
        _1588 = _1424;
        _1589 = _1436;
        _1590 = _1435;
        _1591 = _1434;
        _1592 = _1449;
        _1593 = _1448;
        _1594 = _1447;
        _1595 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)));
        _1596 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
        _1597 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0)));
    }
    else
    {
        _1583 = _1272;
        _1584 = _1272;
        _1585 = _1272;
        _1586 = _1272;
        _1587 = _1272;
        _1588 = _1272;
        _1589 = _1272;
        _1590 = _1272;
        _1591 = _1272;
        _1592 = _1272;
        _1593 = _1272;
        _1594 = _1272;
        _1595 = 0.0;
        _1596 = 0.0;
        _1597 = 0.0;
    }
    float _1607 = (cbModelParam._m0[1u].x * (_1595 - _1284)) + _1284;
    float _1608 = (cbModelParam._m0[1u].x * (_1596 - _1285)) + _1285;
    float _1609 = (cbModelParam._m0[1u].x * (_1597 - _1286)) + _1286;
    float _1630 = fma(_1609, cbSceneParam._m0[89u].z, fma(_1608, cbSceneParam._m0[89u].y, _1607 * cbSceneParam._m0[89u].x));
    float _1633 = fma(_1609, cbSceneParam._m0[90u].z, fma(_1608, cbSceneParam._m0[90u].y, _1607 * cbSceneParam._m0[90u].x));
    float _1636 = fma(_1609, cbSceneParam._m0[91u].z, fma(_1608, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1607));
    float _1651 = _878 * 0.5;
    float _1652 = _879 * 0.5;
    float _1653 = _880 * 0.5;
    float _1654 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1585, _1588, _1591, _1594));
    float _1657 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1584, _1587, _1590, _1593));
    float _1660 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1583, _1586, _1589, _1592));
    float _1694;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1667 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1271, _1275, _1278, _1281));
        float _1671 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1273, _1276, _1279, _1282));
        float _1675 = dot(vec4(_1651, _1652, _1653, 1.0), vec4(_1274, _1277, _1280, _1283));
        float _1682 = dot(vec4(cbModelParam._m0[39u]), vec4(_1651, _1652, _1653, 1.0));
        _1694 = dot(vec3(isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0)), isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)), isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1682) ? 0.0 : (isnan(0.0) ? _1682 : max(0.0, _1682))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1694 = 1.0;
    }
    float _1705;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1696 = dot(vec4(cbModelParam._m0[40u]), vec4(_1651, _1652, _1653, 1.0));
        _1705 = dot(vec3(isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)), isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0)), isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1696) ? 0.0 : (isnan(0.0) ? _1696 : max(0.0, _1696))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1705 = 1.0;
    }
    float _1709 = (_1705 * cbModelParam._m0[1u].x) + (_1694 * (1.0 - cbModelParam._m0[1u].x));
    float _1719 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _693);
    float _1720 = isnan(_1719) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1719 : min(cbModelParam._m0[25u].z, _1719));
    float _1801;
    float _1803;
    float _1805;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1768 = fma(_942, cbModelParam._m0[13u].z, fma(_938, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _934)) + cbModelParam._m0[13u].w;
        float _1772 = fma(_942, cbModelParam._m0[14u].z, fma(_938, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _934)) + cbModelParam._m0[14u].w;
        float _1776 = fma(_942, cbModelParam._m0[15u].z, fma(_938, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _934)) + cbModelParam._m0[15u].w;
        float _1779 = fma(_880, cbModelParam._m0[13u].z, fma(_879, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _878));
        float _1782 = fma(_880, cbModelParam._m0[14u].z, fma(_879, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _878));
        float _1785 = fma(_880, cbModelParam._m0[15u].z, fma(_879, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _878));
        float _1813;
        if (_1779 > 0.0)
        {
            _1813 = abs((1.0 - _1768) / _1779);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1768 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1813 = frontier_phi_17_15_ladder;
        }
        float _1985;
        if (_1782 > 0.0)
        {
            _1985 = abs((1.0 - _1772) / _1782);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1782 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1772 + 1.0) / _1782);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1985 = frontier_phi_26_22_ladder;
        }
        float _2281;
        if (_1785 > 0.0)
        {
            _2281 = abs((1.0 - _1776) / _1785);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1785 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1776 + 1.0) / _1785);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2281 = frontier_phi_38_33_ladder;
        }
        float _2283 = isnan(_1985) ? _1813 : (isnan(_1813) ? _1985 : min(_1813, _1985));
        float _2284 = isnan(_2281) ? _2283 : (isnan(_2283) ? _2281 : min(_2283, _2281));
        float _2288 = (_2284 * _1779) + _1768;
        float _2289 = (_2284 * _1782) + _1772;
        float _2290 = (_2284 * _1785) + _1776;
        float _2291 = _2284 * 9.9999997473787516355514526367188e-05;
        float _2293 = (-1.0) - _2291;
        float _2295 = _2291 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2290 > _2295) || ((_2290 < _2293) || ((_2289 > _2295) || ((_2289 < _2293) || ((_2288 < _2293) || (_2288 > _2295))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2435 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2290, cbModelParam._m0[9u].z, fma(_2289, cbModelParam._m0[9u].y, _2288 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2290, cbModelParam._m0[10u].z, fma(_2289, cbModelParam._m0[10u].y, _2288 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2290, cbModelParam._m0[11u].z, fma(_2289, cbModelParam._m0[11u].y, _2288 * cbModelParam._m0[11u].x))), _1720);
            frontier_phi_16_38_ladder = _2435.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2435.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2435.x * cbModelParam._m0[1u].y;
        }
        _1801 = frontier_phi_16_38_ladder_2;
        _1803 = frontier_phi_16_38_ladder_1;
        _1805 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1789 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_878, _879, _880), _1720);
        _1801 = _1789.x * cbModelParam._m0[1u].y;
        _1803 = _1789.y * cbModelParam._m0[1u].y;
        _1805 = _1789.z * cbModelParam._m0[1u].y;
    }
    float _1809 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _693);
    float _1810 = isnan(_1809) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1809 : min(cbModelParam._m0[25u].w, _1809));
    float _1900;
    float _1902;
    float _1904;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1864 = fma(_942, cbModelParam._m0[21u].z, fma(_938, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _934)) + cbModelParam._m0[21u].w;
        float _1868 = fma(_942, cbModelParam._m0[22u].z, fma(_938, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _934)) + cbModelParam._m0[22u].w;
        float _1872 = fma(_942, cbModelParam._m0[23u].z, fma(_938, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _934)) + cbModelParam._m0[23u].w;
        float _1875 = fma(_880, cbModelParam._m0[21u].z, fma(_879, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _878));
        float _1878 = fma(_880, cbModelParam._m0[22u].z, fma(_879, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _878));
        float _1881 = fma(_880, cbModelParam._m0[23u].z, fma(_879, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _878));
        float _1990;
        if (_1875 > 0.0)
        {
            _1990 = abs((1.0 - _1864) / _1875);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1875 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1864 + 1.0) / _1875);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1990 = frontier_phi_28_24_ladder;
        }
        float _2308;
        if (_1878 > 0.0)
        {
            _2308 = abs((1.0 - _1868) / _1878);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1878 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1868 + 1.0) / _1878);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2308 = frontier_phi_40_35_ladder;
        }
        float _2646;
        if (_1881 > 0.0)
        {
            _2646 = abs((1.0 - _1872) / _1881);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1881 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1872 + 1.0) / _1881);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2646 = frontier_phi_50_47_ladder;
        }
        float _2648 = isnan(_2308) ? _1990 : (isnan(_1990) ? _2308 : min(_1990, _2308));
        float _2649 = isnan(_2646) ? _2648 : (isnan(_2648) ? _2646 : min(_2648, _2646));
        float _2653 = (_2649 * _1875) + _1864;
        float _2654 = (_2649 * _1878) + _1868;
        float _2655 = (_2649 * _1881) + _1872;
        float _2656 = _2649 * 9.9999997473787516355514526367188e-05;
        float _2657 = (-1.0) - _2656;
        float _2659 = _2656 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2655 > _2659) || ((_2655 < _2657) || ((_2654 > _2659) || ((_2654 < _2657) || ((_2653 < _2657) || (_2653 > _2659))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2777 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2655, cbModelParam._m0[17u].z, fma(_2654, cbModelParam._m0[17u].y, _2653 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2655, cbModelParam._m0[18u].z, fma(_2654, cbModelParam._m0[18u].y, _2653 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2655, cbModelParam._m0[19u].z, fma(_2654, cbModelParam._m0[19u].y, _2653 * cbModelParam._m0[19u].x))), _1810);
            frontier_phi_25_50_ladder = _2777.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2777.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2777.x * cbModelParam._m0[1u].z;
        }
        _1900 = frontier_phi_25_50_ladder_2;
        _1902 = frontier_phi_25_50_ladder_1;
        _1904 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1884 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_878, _879, _880), _1810);
        _1900 = _1884.x * cbModelParam._m0[1u].z;
        _1902 = _1884.y * cbModelParam._m0[1u].z;
        _1904 = _1884.z * cbModelParam._m0[1u].z;
    }
    float _1917 = (((_905 * _854) + _906) * _870) * ((cbModelParam._m0[1u].w * (_1900 - _1801)) + _1801);
    float _1919 = (((_905 * _856) + _906) * _870) * ((cbModelParam._m0[1u].w * (_1902 - _1803)) + _1803);
    float _1921 = (((_905 * _857) + _906) * _870) * ((cbModelParam._m0[1u].w * (_1904 - _1805)) + _1805);
    float _1924 = fma(_1921, cbSceneParam._m0[89u].z, fma(_1919, cbSceneParam._m0[89u].y, _1917 * cbSceneParam._m0[89u].x));
    float _1927 = fma(_1921, cbSceneParam._m0[90u].z, fma(_1919, cbSceneParam._m0[90u].y, _1917 * cbSceneParam._m0[90u].x));
    float _1930 = fma(_1921, cbSceneParam._m0[91u].z, fma(_1919, cbSceneParam._m0[91u].y, _1917 * cbSceneParam._m0[91u].x));
    float _1964 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1968 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1972 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1976 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1977 = _1964 / _1976;
    float _1978 = _1968 / _1976;
    float _1979 = _1972 / _1976;
    float _2126;
    float _2127;
    float _2128;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2006 = ((uint(_1979 > cbSceneParam._m0[59u].y) + uint(_1979 > cbSceneParam._m0[59u].x)) + uint(_1979 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2007 = _2006 + 43u;
        uint _2015 = _2006 + 44u;
        uint _2023 = _2006 + 45u;
        uint _2031 = _2006 + 46u;
        float _2042 = fma(_1976, cbSceneParam._m0[_2007].w, fma(_1972, cbSceneParam._m0[_2007].z, fma(_1968, cbSceneParam._m0[_2007].y, _1964 * cbSceneParam._m0[_2007].x)));
        float _2046 = fma(_1976, cbSceneParam._m0[_2015].w, fma(_1972, cbSceneParam._m0[_2015].z, fma(_1968, cbSceneParam._m0[_2015].y, _1964 * cbSceneParam._m0[_2015].x)));
        float _2054 = fma(_1976, cbSceneParam._m0[_2031].w, fma(_1972, cbSceneParam._m0[_2031].z, fma(_1968, cbSceneParam._m0[_2031].y, _1964 * cbSceneParam._m0[_2031].x)));
        float _2059 = cbSceneParam._m0[33u].z * _2054;
        float _2061 = cbSceneParam._m0[33u].w * _2054;
        float _2064 = fma(_1976, cbSceneParam._m0[_2023].w, fma(_1972, cbSceneParam._m0[_2023].z, fma(_1968, cbSceneParam._m0[_2023].y, _1964 * cbSceneParam._m0[_2023].x))) / _2054;
        float _2112 = (cbSceneParam._m0[33u].x - sqrt(((_1978 * _1978) + (_1977 * _1977)) + (_1979 * _1979))) * cbSceneParam._m0[33u].y;
        float _4536 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
        float _2119 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2059 + _2042) / _2054, (_2061 + _2046) / _2054), _2064), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2061 + _2042) / _2054, (_2046 - _2059) / _2054), _2064), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2042 - _2059) / _2054, (_2046 - _2061) / _2054), _2064), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2042 - _2061) / _2054, (_2059 + _2046) / _2054), _2064), 0.0)).x), vec4(0.25)));
        _2126 = 1.0 - (_2119 * cbSceneParam._m0[34u].x);
        _2127 = 1.0 - (_2119 * cbSceneParam._m0[34u].y);
        _2128 = 1.0 - (_2119 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2126 = 1.0;
        _2127 = 1.0;
        _2128 = 1.0;
    }
    float _2192;
    float _2194;
    float _2196;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2180 = fma(_1976, cbSceneParam._m0[63u].w, fma(_1972, cbSceneParam._m0[63u].z, fma(_1968, cbSceneParam._m0[63u].y, _1964 * cbSceneParam._m0[63u].x)));
        float _2181 = fma(_1976, cbSceneParam._m0[60u].w, fma(_1972, cbSceneParam._m0[60u].z, fma(_1968, cbSceneParam._m0[60u].y, _1964 * cbSceneParam._m0[60u].x))) / _2180;
        float _2182 = fma(_1976, cbSceneParam._m0[61u].w, fma(_1972, cbSceneParam._m0[61u].z, fma(_1968, cbSceneParam._m0[61u].y, _1964 * cbSceneParam._m0[61u].x))) / _2180;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2181 >= cbSceneParam._m0[64u].x) && (_2182 >= cbSceneParam._m0[64u].y)) && (_2181 <= cbSceneParam._m0[64u].z)) && (_2182 <= cbSceneParam._m0[64u].w))
        {
            float _2321 = fma(_1976, cbSceneParam._m0[62u].w, fma(_1972, cbSceneParam._m0[62u].z, fma(_1968, cbSceneParam._m0[62u].y, _1964 * cbSceneParam._m0[62u].x))) / _2180;
            float _2325 = isnan(cbSceneParam._m0[41u].w) ? _2321 : (isnan(_2321) ? cbSceneParam._m0[41u].w : max(_2321, cbSceneParam._m0[41u].w));
            float _2368 = (cbSceneParam._m0[33u].x - sqrt(((_1978 * _1978) + (_1977 * _1977)) + (_1979 * _1979))) * cbSceneParam._m0[33u].y;
            float _4552 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
            float _2375 = (isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2181, cbSceneParam._m0[33u].w + _2182), _2325), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2181, _2182 - cbSceneParam._m0[33u].z), _2325), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2181 - cbSceneParam._m0[33u].z, _2182 - cbSceneParam._m0[33u].w), _2325), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2181 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2182), _2325), 0.0)).x), vec4(0.25)));
            float _2379 = 1.0 - (_2375 * cbSceneParam._m0[34u].x);
            float _2380 = 1.0 - (_2375 * cbSceneParam._m0[34u].y);
            float _2381 = 1.0 - (_2375 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2381) ? _2128 : (isnan(_2128) ? _2381 : min(_2128, _2381));
            frontier_phi_37_36_ladder_1 = isnan(_2380) ? _2127 : (isnan(_2127) ? _2380 : min(_2127, _2380));
            frontier_phi_37_36_ladder_2 = isnan(_2379) ? _2126 : (isnan(_2126) ? _2379 : min(_2126, _2379));
        }
        else
        {
            frontier_phi_37_36_ladder = _2128;
            frontier_phi_37_36_ladder_1 = _2127;
            frontier_phi_37_36_ladder_2 = _2126;
        }
        _2192 = frontier_phi_37_36_ladder_2;
        _2194 = frontier_phi_37_36_ladder_1;
        _2196 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2192 = _2126;
        _2194 = _2127;
        _2196 = _2128;
    }
    uvec4 _2201 = floatBitsToUint(cbInstanceData._m0[_271 + 5u]);
    uint _2203 = _2201.x * 14u;
    uint _2204 = _2203 + 13u;
    float _2211 = _870 + (-1.0);
    float _2216 = (cbLight._m0[_2204].x * _2211) + 1.0;
    float _2217 = (cbLight._m0[_2204].y * _2211) + 1.0;
    float _2218 = (cbLight._m0[_2204].z * _2211) + 1.0;
    float _2219 = (cbLight._m0[_2204].w * _2211) + 1.0;
    uint _2220 = _2203 + 5u;
    float _2226 = isnan(1.0) ? _2217 : (isnan(_2217) ? 1.0 : min(_2217, 1.0));
    uint _2230 = _2203 + 4u;
    float _2240 = isnan(1.0) ? _2216 : (isnan(_2216) ? 1.0 : min(_2216, 1.0));
    uint _2244 = _2203 | 1u;
    float _2255 = dot(vec3(cbLight._m0[_2203].xyz), vec3(_690, _691, _692));
    float _2258 = dot(vec3(cbLight._m0[_2244].xyz), vec3(_690, _691, _692));
    float _4588 = isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0));
    float _4599 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
    float _2263 = (isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0))) * 0.3183098733425140380859375;
    float _2265 = (isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * 0.3183098733425140380859375;
    float _2272 = ((cbLight._m0[_2220].x * _2226) * _2265) + (((cbLight._m0[_2230].x * _2192) * _2240) * _2263);
    float _2273 = ((_2226 * cbLight._m0[_2220].y) * _2265) + (((cbLight._m0[_2230].y * _2194) * _2240) * _2263);
    float _2274 = ((_2226 * cbLight._m0[_2220].z) * _2265) + (((cbLight._m0[_2230].z * _2196) * _2240) * _2263);
    uvec4 _2278 = floatBitsToUint(cbLight._m0[_2203 + 12u]);
    bool _2280 = _2278.x == 0u;
    float _2382;
    float _2384;
    float _2386;
    if (_2280)
    {
        _2382 = _2272;
        _2384 = _2273;
        _2386 = _2274;
    }
    else
    {
        uint _2390 = _2203 + 6u;
        float _2406 = (dot(vec3(cbLight._m0[_2203 + 2u].xyz), vec3(_690, _691, _692)) * 0.5) + 0.5;
        float _2407 = _2406 * _2406;
        float _4610 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
        float _2408 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
        float _2409 = isnan(1.0) ? _2218 : (isnan(_2218) ? 1.0 : min(_2218, 1.0));
        _2382 = (((cbLight._m0[_2390].x * 0.3183098733425140380859375) * _2408) * _2409) + _2272;
        _2384 = (((cbLight._m0[_2390].y * 0.3183098733425140380859375) * _2408) * _2409) + _2273;
        _2386 = (((cbLight._m0[_2390].z * 0.3183098733425140380859375) * _2408) * _2409) + _2274;
    }
    bool _2389 = _2278.y == 0u;
    float _2444;
    float _2446;
    float _2448;
    if (_2389)
    {
        _2444 = _2382;
        _2446 = _2384;
        _2448 = _2386;
    }
    else
    {
        uint _2617 = _2203 + 7u;
        float _2633 = (dot(vec3(cbLight._m0[_2203 + 3u].xyz), vec3(_690, _691, _692)) * 0.5) + 0.5;
        float _2634 = _2633 * _2633;
        float _4626 = isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0));
        float _2635 = isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0));
        float _2636 = isnan(1.0) ? _2219 : (isnan(_2219) ? 1.0 : min(_2219, 1.0));
        _2444 = (((cbLight._m0[_2617].x * 0.3183098733425140380859375) * _2635) * _2636) + _2382;
        _2446 = (((cbLight._m0[_2617].y * 0.3183098733425140380859375) * _2635) * _2636) + _2384;
        _2448 = (((cbLight._m0[_2617].z * 0.3183098733425140380859375) * _2635) * _2636) + _2386;
    }
    uint _2451 = _2203 + 8u;
    float _2464 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2203].w)) * _693) * 0.949999988079071044921875);
    float _2465 = _2464 * _2464;
    float _2466 = cbLight._m0[_2203].x + _769;
    float _2467 = cbLight._m0[_2203].y + _770;
    float _2468 = cbLight._m0[_2203].z + _771;
    float _2472 = inversesqrt(dot(vec3(_2466, _2467, _2468), vec3(_2466, _2467, _2468)));
    float _2473 = _2472 * _2466;
    float _2474 = _2472 * _2467;
    float _2475 = _2472 * _2468;
    float _2476 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2203].xyz));
    float _4642 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2479 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
    float _4653 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _2480 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
    float _2481 = dot(vec3(_690, _691, _692), vec3(_2473, _2474, _2475));
    float _4664 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
    float _2484 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
    float _2485 = dot(vec3(cbLight._m0[_2203].xyz), vec3(_2473, _2474, _2475));
    float _4675 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
    float _2489 = _2465 * _2465;
    float _2493 = ((_2484 * _2484) * (_2489 + (-1.0))) + 1.0;
    float _2501 = exp2(log2(1.0 - (isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0)))) * 5.0);
    float _2502 = 0.959999978542327880859375 - _851;
    float _2504 = 0.959999978542327880859375 - _852;
    float _2505 = 0.959999978542327880859375 - _853;
    float _2512 = 1.0 - _2465;
    float _2523 = (0.5 / (((_2480 * ((_2479 * _2512) + _2465)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2512) + _2465) * _2479))) * _2479;
    float _4686 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2525 = (isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0))) * (_2489 / ((_2493 * _2493) * 3.141590118408203125));
    uint _2539 = _2203 + 9u;
    float _2550 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2244].w)) * _693) * 0.949999988079071044921875);
    float _2551 = _2550 * _2550;
    float _2552 = cbLight._m0[_2244].x + _769;
    float _2553 = cbLight._m0[_2244].y + _770;
    float _2554 = cbLight._m0[_2244].z + _771;
    float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
    float _2559 = _2558 * _2552;
    float _2560 = _2558 * _2553;
    float _2561 = _2558 * _2554;
    float _2562 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2244].xyz));
    float _4697 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2565 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
    float _2566 = dot(vec3(_690, _691, _692), vec3(_2559, _2560, _2561));
    float _4708 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
    float _2569 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
    float _2570 = dot(vec3(cbLight._m0[_2244].xyz), vec3(_2559, _2560, _2561));
    float _4719 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
    float _2574 = _2551 * _2551;
    float _2578 = ((_2569 * _2569) * (_2574 + (-1.0))) + 1.0;
    float _2585 = exp2(log2(1.0 - (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0)))) * 5.0);
    float _2592 = 1.0 - _2551;
    float _2602 = (0.5 / (((_2480 * ((_2565 * _2592) + _2551)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2592) + _2551) * _2565))) * _2565;
    float _4730 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
    float _2604 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * (_2574 / ((_2578 * _2578) * 3.141590118408203125));
    float _2614 = (((((_2585 * _2502) + _854) * cbLight._m0[_2539].x) * _2604) * _2226) + ((((cbLight._m0[_2451].x * _2192) * ((_2501 * _2502) + _854)) * _2525) * _2240);
    float _2615 = (((((_2585 * _2504) + _856) * cbLight._m0[_2539].y) * _2604) * _2226) + ((((cbLight._m0[_2451].y * _2194) * ((_2501 * _2504) + _856)) * _2525) * _2240);
    float _2616 = (((((_2585 * _2505) + _857) * cbLight._m0[_2539].z) * _2604) * _2226) + ((((cbLight._m0[_2451].z * _2196) * ((_2501 * _2505) + _857)) * _2525) * _2240);
    float _2672;
    float _2674;
    float _2676;
    if (_2280)
    {
        _2672 = _2614;
        _2674 = _2615;
        _2676 = _2616;
    }
    else
    {
        uint _2678 = _2203 + 2u;
        uint _2682 = _2203 + 10u;
        float _2696 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2678].w)) * _693) * 0.949999988079071044921875);
        float _2697 = _2696 * _2696;
        float _2698 = cbLight._m0[_2678].x + _769;
        float _2699 = cbLight._m0[_2678].y + _770;
        float _2700 = cbLight._m0[_2678].z + _771;
        float _2704 = inversesqrt(dot(vec3(_2698, _2699, _2700), vec3(_2698, _2699, _2700)));
        float _2705 = _2704 * _2698;
        float _2706 = _2704 * _2699;
        float _2707 = _2704 * _2700;
        float _2708 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2678].xyz));
        float _4741 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2711 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2712 = dot(vec3(_690, _691, _692), vec3(_2705, _2706, _2707));
        float _4752 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2715 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
        float _2716 = dot(vec3(cbLight._m0[_2678].xyz), vec3(_2705, _2706, _2707));
        float _4763 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
        float _2720 = _2697 * _2697;
        float _2724 = ((_2715 * _2715) * (_2720 + (-1.0))) + 1.0;
        float _2731 = exp2(log2(1.0 - (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0)))) * 5.0);
        float _2738 = 1.0 - _2697;
        float _2748 = (0.5 / (((_2480 * ((_2711 * _2738) + _2697)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2738) + _2697) * _2711))) * _2711;
        float _4774 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2750 = (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0))) * (_2720 / ((_2724 * _2724) * 3.141590118408203125));
        float _2751 = isnan(1.0) ? _2218 : (isnan(_2218) ? 1.0 : min(_2218, 1.0));
        _2672 = (((((_2731 * _2502) + _854) * cbLight._m0[_2682].x) * _2750) * _2751) + _2614;
        _2674 = (((((_2731 * _2504) + _856) * cbLight._m0[_2682].y) * _2750) * _2751) + _2615;
        _2676 = (((((_2731 * _2505) + _857) * cbLight._m0[_2682].z) * _2750) * _2751) + _2616;
    }
    float _2782;
    float _2784;
    float _2786;
    if (_2389)
    {
        _2782 = _2672;
        _2784 = _2674;
        _2786 = _2676;
    }
    else
    {
        uint _2793 = _2203 + 3u;
        uint _2797 = _2203 + 11u;
        float _2811 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2793].w)) * _693) * 0.949999988079071044921875);
        float _2812 = _2811 * _2811;
        float _2813 = cbLight._m0[_2793].x + _769;
        float _2814 = cbLight._m0[_2793].y + _770;
        float _2815 = cbLight._m0[_2793].z + _771;
        float _2819 = inversesqrt(dot(vec3(_2813, _2814, _2815), vec3(_2813, _2814, _2815)));
        float _2820 = _2819 * _2813;
        float _2821 = _2819 * _2814;
        float _2822 = _2819 * _2815;
        float _2823 = dot(vec3(_690, _691, _692), vec3(cbLight._m0[_2793].xyz));
        float _4790 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2826 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
        float _2827 = dot(vec3(_690, _691, _692), vec3(_2820, _2821, _2822));
        float _4801 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2830 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
        float _2831 = dot(vec3(cbLight._m0[_2793].xyz), vec3(_2820, _2821, _2822));
        float _4812 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2835 = _2812 * _2812;
        float _2839 = ((_2830 * _2830) * (_2835 + (-1.0))) + 1.0;
        float _2846 = exp2(log2(1.0 - (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0)))) * 5.0);
        float _2853 = 1.0 - _2812;
        float _2863 = (0.5 / (((_2480 * ((_2826 * _2853) + _2812)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2853) + _2812) * _2826))) * _2826;
        float _4823 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2865 = (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0))) * (_2835 / ((_2839 * _2839) * 3.141590118408203125));
        float _2866 = isnan(1.0) ? _2219 : (isnan(_2219) ? 1.0 : min(_2219, 1.0));
        _2782 = (((((_2846 * _2502) + _854) * cbLight._m0[_2797].x) * _2865) * _2866) + _2672;
        _2784 = (((((_2846 * _2504) + _856) * cbLight._m0[_2797].y) * _2865) * _2866) + _2674;
        _2786 = (((((_2846 * _2505) + _857) * cbLight._m0[_2797].z) * _2865) * _2866) + _2676;
    }
    float _2932;
    float _2934;
    float _2936;
    float _2938;
    float _2940;
    float _2942;
    if (_2201.y == 0u)
    {
        uvec4 _2887 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2888 = _2887.x;
        uint _2899 = uint((float(_2887.y) * floor(float(uint(cbSceneParam._m0[85u].y * _791) / _2888))) + floor(float(uint(cbSceneParam._m0[85u].x * _790) / _2888)));
        float _2909 = (log2(_1979 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2910 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        uint _2913 = uint(isnan(14.0) ? _2910 : (isnan(_2910) ? 14.0 : min(_2910, 14.0)));
        uvec4 _2918 = texelFetch(g_lightClusterGridBuffer, int(((_2913 << 2u) + (_2899 << 6u)) >> 2u));
        uint _2919 = _2918.x;
        uint _2920 = _2887.z;
        float _2999;
        float _3001;
        float _3003;
        float _3005;
        float _3007;
        float _3009;
        if (((((1u << ((_2920 >> 4u) & 15u)) + 4294967295u) & _2919) == 0u) || ((_2920 & 240u) == 0u))
        {
            _2999 = 0.0;
            _3001 = 0.0;
            _3003 = 0.0;
            _3005 = 0.0;
            _3007 = 0.0;
            _3009 = 0.0;
        }
        else
        {
            float _3000;
            float _3002;
            float _3004;
            float _3006;
            float _3008;
            float _3010;
            float _3151 = 0.0;
            float _3152 = 0.0;
            float _3153 = 0.0;
            float _3154 = 0.0;
            float _3155 = 0.0;
            float _3156 = 0.0;
            uint _3157 = 0u;
            uint _3166;
            bool _3167;
            for (;;)
            {
                _3166 = texelFetch(g_lightClassification, int((((_2913 << 5u) + (_2899 << 9u)) + (_3157 << 2u)) >> 2u)).x;
                _3167 = _3166 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3167)
                {
                    frontier_phi_71_pred = _3156;
                    frontier_phi_71_pred_1 = _3155;
                    frontier_phi_71_pred_2 = _3154;
                    frontier_phi_71_pred_3 = _3153;
                    frontier_phi_71_pred_4 = _3152;
                    frontier_phi_71_pred_5 = _3151;
                }
                else
                {
                    float _3296;
                    float _3297;
                    float _3298;
                    float _3299;
                    float _3300;
                    float _3301;
                    uint _3302;
                    _3296 = _3151;
                    _3297 = _3152;
                    _3298 = _3153;
                    _3299 = _3154;
                    _3300 = _3155;
                    _3301 = _3156;
                    _3302 = _3166;
                    float _3223;
                    float _3224;
                    float _3225;
                    float _3226;
                    float _3227;
                    float _3228;
                    for (;;)
                    {
                        uint _3306 = uint(findLSB(_3302)) + (_3157 << 5u);
                        uint _3303 = (_3302 + 4294967295u) & _3302;
                        uint _3308 = _3306 * 48u;
                        vec4 _3322 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3308)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 3u)).x));
                        uint _3328 = (_3306 * 48u) + 4u;
                        vec4 _3341 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3328)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 3u)).x));
                        uint _3347 = (_3306 * 48u) + 8u;
                        vec3 _3358 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3347)).x, texelFetch(g_PointLightRenderingBuffer, int(_3347 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3347 + 2u)).x));
                        float _3362 = _3322.x - _1977;
                        float _3363 = _3322.y - _1978;
                        float _3364 = _3322.z - _1979;
                        float _3365 = dot(vec3(_3362, _3363, _3364), vec3(_3362, _3363, _3364));
                        float _3368 = inversesqrt(_3365);
                        float _3369 = _3368 * _3362;
                        float _3370 = _3368 * _3363;
                        float _3371 = _3368 * _3364;
                        float _3372 = dot(vec3(_811, _814, _817), vec3(_3369, _3370, _3371));
                        float _3377 = 1.0 - (_3365 * _3322.w);
                        float _4849 = isnan(0.0) ? _3377 : (isnan(_3377) ? 0.0 : max(_3377, 0.0));
                        float _3378 = isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0));
                        float _3379 = sqrt(_3365) * _3341.w;
                        float _3382 = 1.39999997615814208984375 / (_3379 + 1.39999997615814208984375);
                        float _3383 = _3382 * _3382;
                        float _3386 = ((1.0 - _3383) * _3372) + _3383;
                        float _3389 = _3379 * _3379;
                        float _3393 = ((isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0))) * _3378) / ((_3389 * 0.699999988079071044921875) + 1.0);
                        float _3397 = (-0.0) - _1977;
                        float _3398 = (-0.0) - _1978;
                        float _3399 = (-0.0) - _1979;
                        float _3403 = inversesqrt(dot(vec3(_3397, _3398, _3399), vec3(_3397, _3398, _3399)));
                        float _3404 = _3403 * _3397;
                        float _3405 = _3403 * _3398;
                        float _3406 = _3403 * _3399;
                        float _3413 = exp2(log2(1.0 / ((_3389 * 3.5) + 5.0)) * 0.25);
                        float _3414 = 1.0 - _886;
                        float _3421 = sqrt(1.0 - ((1.0 - (_3414 * _3414)) * (1.0 - (_3413 * _3413))));
                        float _3422 = _3421 * _3421;
                        float _3423 = _3422 * _3422;
                        float _3424 = _3404 + _3369;
                        float _3425 = _3405 + _3370;
                        float _3426 = _3406 + _3371;
                        float _3430 = inversesqrt(dot(vec3(_3424, _3425, _3426), vec3(_3424, _3425, _3426)));
                        float _3434 = dot(vec3(_811, _814, _817), vec3(_3404, _3405, _3406));
                        float _4865 = isnan(0.0) ? _3434 : (isnan(_3434) ? 0.0 : max(_3434, 0.0));
                        float _3437 = isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0));
                        float _3438 = dot(vec3(_811, _814, _817), vec3(_3430 * _3424, _3430 * _3425, _3430 * _3426));
                        float _4876 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                        float _3441 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
                        float _3445 = ((_3441 * _3441) * (_3423 + (-1.0))) + 1.0;
                        float _3446 = _3382 * _3422;
                        float _3447 = _3446 * _3446;
                        float _3450 = ((1.0 - _3447) * _3372) + _3447;
                        float _4887 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                        float _3451 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
                        float _3452 = 1.0 - _3422;
                        float _3462 = (0.5 / (((_3451 * ((_3437 * _3452) + _3422)) + 9.9999999392252902907785028219223e-09) + (((_3451 * _3452) + _3422) * _3437))) * _3451;
                        float _4898 = isnan(0.0) ? _3462 : (isnan(_3462) ? 0.0 : max(_3462, 0.0));
                        float _3473 = (((_3423 * 3.1415927410125732421875) * (isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0)))) / ((_3445 * _3445) * ((_3389 * 2.1991131305694580078125) + 3.141590118408203125))) * _3378;
                        _3226 = (_3393 * _3341.x) + _3299;
                        _3227 = (_3393 * _3341.y) + _3300;
                        _3228 = (_3393 * _3341.z) + _3301;
                        _3223 = (_3473 * _3358.x) + _3296;
                        _3224 = (_3473 * _3358.y) + _3297;
                        _3225 = (_3473 * _3358.z) + _3298;
                        if (_3303 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3296 = _3223;
                            _3297 = _3224;
                            _3298 = _3225;
                            _3299 = _3226;
                            _3300 = _3227;
                            _3301 = _3228;
                            _3302 = _3303;
                        }
                    }
                    frontier_phi_71_pred = _3228;
                    frontier_phi_71_pred_1 = _3227;
                    frontier_phi_71_pred_2 = _3226;
                    frontier_phi_71_pred_3 = _3225;
                    frontier_phi_71_pred_4 = _3224;
                    frontier_phi_71_pred_5 = _3223;
                }
                _3010 = frontier_phi_71_pred;
                _3008 = frontier_phi_71_pred_1;
                _3006 = frontier_phi_71_pred_2;
                _3004 = frontier_phi_71_pred_3;
                _3002 = frontier_phi_71_pred_4;
                _3000 = frontier_phi_71_pred_5;
                uint _3158 = _3157 + 1u;
                if (_3158 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3151 = _3000;
                    _3152 = _3002;
                    _3153 = _3004;
                    _3154 = _3006;
                    _3155 = _3008;
                    _3156 = _3010;
                    _3157 = _3158;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2999 = _3000;
            _3001 = _3002;
            _3003 = _3004;
            _3005 = _3006;
            _3007 = _3008;
            _3009 = _3010;
        }
        uvec4 _3013 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3014 = _3013.z;
        uint _3016 = (_3014 >> 8u) & 15u;
        float _3119;
        float _3121;
        float _3123;
        float _3125;
        float _3127;
        float _3129;
        if (((4294967295u << _3016) & _2919) == 0u)
        {
            _3119 = _2999;
            _3121 = _3001;
            _3123 = _3003;
            _3125 = _3005;
            _3127 = _3007;
            _3129 = _3009;
        }
        else
        {
            float _3144 = inversesqrt(dot(vec3(_1977, _1978, _1979), vec3(_1977, _1978, _1979)));
            float _3145 = _3144 * _1977;
            float _3146 = _3144 * _1978;
            float _3147 = _3144 * _1979;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3016 < ((_3014 >> 12u) & 15u))
            {
                float _3120;
                float _3122;
                float _3124;
                float _3126;
                float _3128;
                float _3130;
                float _3279 = _2999;
                float _3280 = _3001;
                float _3281 = _3003;
                float _3282 = _3005;
                float _3283 = _3007;
                float _3284 = _3009;
                uint _3285 = _3016;
                uint _3294;
                bool _3295;
                for (;;)
                {
                    _3294 = texelFetch(g_lightClassification, int((((_2913 << 5u) + (_2899 << 9u)) + (_3285 << 2u)) >> 2u)).x;
                    _3295 = _3294 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3295)
                    {
                        frontier_phi_82_pred = _3284;
                        frontier_phi_82_pred_1 = _3283;
                        frontier_phi_82_pred_2 = _3282;
                        frontier_phi_82_pred_3 = _3281;
                        frontier_phi_82_pred_4 = _3280;
                        frontier_phi_82_pred_5 = _3279;
                    }
                    else
                    {
                        float _3487;
                        float _3488;
                        float _3489;
                        float _3490;
                        float _3491;
                        float _3492;
                        float _3780;
                        float _3781;
                        float _3782;
                        float _3783;
                        float _3784;
                        float _3785;
                        float _3500 = _3279;
                        float _3501 = _3280;
                        float _3502 = _3281;
                        float _3503 = _3282;
                        float _3504 = _3283;
                        float _3505 = _3284;
                        uint _3506 = _3294;
                        uint _3507;
                        vec4 _3532;
                        float _3533;
                        vec4 _3548;
                        vec3 _3560;
                        vec4 _3575;
                        vec4 _3590;
                        float _3636;
                        bool _3637;
                        for (;;)
                        {
                            uint _3517 = ((_3285 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3506));
                            _3507 = (_3506 + 4294967295u) & _3506;
                            uint _3519 = _3517 * 40u;
                            _3532 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3519)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 3u)).x));
                            _3533 = _3532.w;
                            uint _3535 = (_3517 * 40u) + 4u;
                            _3548 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3535)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 3u)).x));
                            uint _3550 = (_3517 * 40u) + 8u;
                            _3560 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3550)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 2u)).x));
                            uint _3562 = (_3517 * 40u) + 16u;
                            _3575 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3562)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3562 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3562 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3562 + 3u)).x));
                            uint _3577 = (_3517 * 40u) + 20u;
                            _3590 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3577)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 3u)).x));
                            uint _3592 = (_3517 * 40u) + 24u;
                            vec4 _3605 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3592)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 3u)).x));
                            uint _3611 = (_3517 * 40u) + 28u;
                            vec4 _3624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 3u)).x));
                            _3636 = fma(_1979, _3624.z, fma(_1978, _3624.y, _3624.x * _1977)) + _3624.w;
                            _3637 = !((fma(_1979, _3605.z, fma(_1978, _3605.y, _3605.x * _1977)) + _3605.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3637)
                            {
                                float _3664 = _3532.x - _1977;
                                float _3665 = _3532.y - _1978;
                                float _3666 = _3532.z - _1979;
                                float _3667 = dot(vec3(_3664, _3665, _3666), vec3(_3664, _3665, _3666));
                                float _3670 = inversesqrt(_3667);
                                float _3671 = _3670 * _3664;
                                float _3672 = _3670 * _3665;
                                float _3673 = _3670 * _3666;
                                float _3677 = 1.0 - (_3667 / (_3533 * _3533));
                                float _4909 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3678 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                                float _3682 = sqrt(_3667) * _3548.w;
                                float _3684 = 1.39999997615814208984375 / (_3682 + 1.39999997615814208984375);
                                float _3685 = _3684 * _3684;
                                float _3688 = ((1.0 - _3685) * dot(vec3(_3671, _3672, _3673), vec3(_811, _814, _817))) + _3685;
                                float _3691 = _3682 * _3682;
                                float _3695 = (fma(_1979, _3575.z, fma(_1978, _3575.y, _3575.x * _1977)) + _3575.w) / _3636;
                                float _3696 = (fma(_1979, _3590.z, fma(_1978, _3590.y, _3590.x * _1977)) + _3590.w) / _3636;
                                float _3700 = 1.0 - dot(vec2(_3695, _3696), vec2(_3695, _3696));
                                float _4925 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3701 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                                float _3702 = _3701 * (((isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0))) * _3678) / ((_3691 * 0.699999988079071044921875) + 1.0));
                                float _3714 = exp2(log2(1.0 / ((_3691 * 3.5) + 5.0)) * 0.25);
                                float _3715 = 1.0 - _886;
                                float _3722 = sqrt(1.0 - ((1.0 - (_3715 * _3715)) * (1.0 - (_3714 * _3714))));
                                float _3723 = _3722 * _3722;
                                float _3724 = _3723 * _3723;
                                float _3725 = _3671 - _3145;
                                float _3726 = _3672 - _3146;
                                float _3727 = _3673 - _3147;
                                float _3731 = inversesqrt(dot(vec3(_3725, _3726, _3727), vec3(_3725, _3726, _3727)));
                                float _3735 = dot(vec3(_811, _814, _817), vec3((-0.0) - _3145, (-0.0) - _3146, (-0.0) - _3147));
                                float _4936 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3738 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                                float _3739 = dot(vec3(_811, _814, _817), vec3(_3731 * _3725, _3731 * _3726, _3731 * _3727));
                                float _4947 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3742 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                                float _3746 = ((_3742 * _3742) * (_3724 + (-1.0))) + 1.0;
                                float _3747 = _3684 * _3723;
                                float _3748 = _3747 * _3747;
                                float _3754 = ((1.0 - _3748) * dot(vec3(_811, _814, _817), vec3(_3671, _3672, _3673))) + _3748;
                                float _4958 = isnan(0.0) ? _3754 : (isnan(_3754) ? 0.0 : max(_3754, 0.0));
                                float _3755 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                                float _3756 = 1.0 - _3723;
                                float _3766 = (0.5 / (((_3755 * ((_3738 * _3756) + _3723)) + 9.9999999392252902907785028219223e-09) + (((_3755 * _3756) + _3723) * _3738))) * _3755;
                                float _4969 = isnan(0.0) ? _3766 : (isnan(_3766) ? 0.0 : max(_3766, 0.0));
                                float _3776 = (_3701 * _3678) * (((_3724 * 3.1415927410125732421875) * (isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0)))) / ((_3746 * _3746) * ((_3691 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3702 * _3548.z;
                                frontier_phi_88_pred_1 = _3702 * _3548.y;
                                frontier_phi_88_pred_2 = _3702 * _3548.x;
                                frontier_phi_88_pred_3 = _3776 * _3560.z;
                                frontier_phi_88_pred_4 = _3776 * _3560.y;
                                frontier_phi_88_pred_5 = _3776 * _3560.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3785 = frontier_phi_88_pred;
                            _3784 = frontier_phi_88_pred_1;
                            _3783 = frontier_phi_88_pred_2;
                            _3782 = frontier_phi_88_pred_3;
                            _3781 = frontier_phi_88_pred_4;
                            _3780 = frontier_phi_88_pred_5;
                            _3490 = _3783 + _3503;
                            _3491 = _3784 + _3504;
                            _3492 = _3785 + _3505;
                            _3487 = _3780 + _3500;
                            _3488 = _3781 + _3501;
                            _3489 = _3782 + _3502;
                            if (_3507 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3500 = _3487;
                                _3501 = _3488;
                                _3502 = _3489;
                                _3503 = _3490;
                                _3504 = _3491;
                                _3505 = _3492;
                                _3506 = _3507;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3492;
                        frontier_phi_82_pred_1 = _3491;
                        frontier_phi_82_pred_2 = _3490;
                        frontier_phi_82_pred_3 = _3489;
                        frontier_phi_82_pred_4 = _3488;
                        frontier_phi_82_pred_5 = _3487;
                    }
                    _3130 = frontier_phi_82_pred;
                    _3128 = frontier_phi_82_pred_1;
                    _3126 = frontier_phi_82_pred_2;
                    _3124 = frontier_phi_82_pred_3;
                    _3122 = frontier_phi_82_pred_4;
                    _3120 = frontier_phi_82_pred_5;
                    uint _3286 = _3285 + 1u;
                    if (_3286 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3279 = _3120;
                        _3280 = _3122;
                        _3281 = _3124;
                        _3282 = _3126;
                        _3283 = _3128;
                        _3284 = _3130;
                        _3285 = _3286;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3126;
                frontier_phi_63_64_ladder_1 = _3130;
                frontier_phi_63_64_ladder_2 = _3128;
                frontier_phi_63_64_ladder_3 = _3124;
                frontier_phi_63_64_ladder_4 = _3122;
                frontier_phi_63_64_ladder_5 = _3120;
            }
            else
            {
                frontier_phi_63_64_ladder = _3005;
                frontier_phi_63_64_ladder_1 = _3009;
                frontier_phi_63_64_ladder_2 = _3007;
                frontier_phi_63_64_ladder_3 = _3003;
                frontier_phi_63_64_ladder_4 = _3001;
                frontier_phi_63_64_ladder_5 = _2999;
            }
            _3119 = frontier_phi_63_64_ladder_5;
            _3121 = frontier_phi_63_64_ladder_4;
            _3123 = frontier_phi_63_64_ladder_3;
            _3125 = frontier_phi_63_64_ladder;
            _3127 = frontier_phi_63_64_ladder_2;
            _3129 = frontier_phi_63_64_ladder_1;
        }
        float _3134 = isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0));
        _2932 = (_3134 * _3125) + _2444;
        _2934 = (_3134 * _3127) + _2446;
        _2936 = (_3134 * _3129) + _2448;
        _2938 = ((_3119 * _854) * _3134) + _2782;
        _2940 = ((_3121 * _856) * _3134) + _2784;
        _2942 = ((_3123 * _857) * _3134) + _2786;
    }
    else
    {
        _2932 = _2444;
        _2934 = _2446;
        _2936 = _2448;
        _2938 = _2782;
        _2940 = _2784;
        _2942 = _2786;
    }
    float _4985 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _4996 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _5007 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _2959 = ((isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0))) * (_2932 + ((isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0))) * _870))) + ((_2938 + ((isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0))) * _1709)) * cbPerFrame._m0[3u].x);
    float _2960 = ((isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0))) * (_2934 + ((isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0))) * _870))) + ((_2940 + ((isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0))) * _1709)) * cbPerFrame._m0[3u].x);
    float _2961 = ((isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0))) * (_2936 + ((isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))) * _870))) + ((_2942 + ((isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0))) * _1709)) * cbPerFrame._m0[3u].x);
    uint _2962 = _271 + 6u;
    float _2970 = _790 / cbSceneParam._m0[86u].x;
    float _2971 = _791 / cbSceneParam._m0[86u].y;
    vec4 _2985 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2970, _2971, (log2((isnan(cbSceneParam._m0[77u].w) ? _712 : (isnan(_712) ? cbSceneParam._m0[77u].w : min(_712, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2987 = _2985.x;
    float _2988 = _2985.y;
    float _2989 = _2985.z;
    float _2990 = _2985.w;
    float _3061;
    float _3063;
    float _3065;
    float _3067;
    if (_712 > cbSceneParam._m0[78u].w)
    {
        float _3024 = isnan(_712) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _712 : min(cbSceneParam._m0[80u].w, _712));
        float _3025 = _3024 / _712;
        float _3036 = _3025 * _762;
        float _3037 = _763 * _3025;
        float _3038 = (-0.0) - _3037;
        float _3039 = _3025 * _764;
        float _3041 = (cbSceneParam._m0[77u].w * _3038) / _3024;
        float _3042 = _3041 + cbSceneParam._m0[79u].w;
        float _3043 = cbSceneParam._m0[79u].w - _3037;
        float _3049 = sqrt(((_3036 * _3036) + (_3037 * _3037)) + (_3039 * _3039));
        float _3052 = (1.0 - (cbSceneParam._m0[77u].w / _3024)) * _3049;
        float _3057 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3059 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3236;
        if (abs((_3038 - _3041) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3236 = ((((_3042 > 0.0) ? exp2(_3057 * _3042) : (2.0 - exp2(_3059 * _3042))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3052;
        }
        else
        {
            float _3180 = 1.0 / cbSceneParam._m0[80u].x;
            float _3181 = isnan(_3043) ? _3042 : (isnan(_3042) ? _3043 : max(_3042, _3043));
            float _3182 = isnan(_3043) ? _3042 : (isnan(_3042) ? _3043 : min(_3042, _3043));
            float _3191 = isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : min(_3181, 0.0));
            float _3192 = isnan(0.0) ? _3182 : (isnan(_3182) ? 0.0 : min(_3182, 0.0));
            _3236 = ((abs(_3049 / _3038) * cbSceneParam._m0[80u].y) * ((((_3191 - _3192) * 2.0) - ((exp2(_3057 * (isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0)))) - exp2(_3057 * (isnan(0.0) ? _3182 : (isnan(_3182) ? 0.0 : max(_3182, 0.0))))) * _3180)) - ((exp2(_3059 * _3191) - exp2(_3059 * _3192)) * _3180))) + (_3052 * cbSceneParam._m0[80u].z);
        }
        vec4 _3238 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2970, _2971, 1.0), 0.0);
        float _3247 = exp2((_3236 * (-1.44269502162933349609375)) * (1.0 - _3238.w));
        float _3248 = log2(_3247);
        float _3264 = log2(_2990);
        _3061 = (exp2(_3264 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3248 * cbSceneParam._m0[78u].x)) * _3238.x) / cbSceneParam._m0[78u].x)) + _2987;
        _3063 = (exp2(_3264 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3248 * cbSceneParam._m0[78u].y)) * _3238.y) / cbSceneParam._m0[78u].y)) + _2988;
        _3065 = (exp2(_3264 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3248 * cbSceneParam._m0[78u].z)) * _3238.z) / cbSceneParam._m0[78u].z)) + _2989;
        _3067 = _3247 * _2990;
    }
    else
    {
        _3061 = _2987;
        _3063 = _2988;
        _3065 = _2989;
        _3067 = _2990;
    }
    bool _3274;
    vec4 _3077;
    vec4 _3099;
    float _3101;
    float _3105;
    float _3106;
    float _3107;
    float _3108;
    bool _3118;
    for (;;)
    {
        _3077 = cbMatDynParam._m0[0u];
        float _3079 = roundEven(_3077.y);
        bool _3080 = _3079 == 3.0;
        float _3081 = log2(_3067);
        float _3088 = exp2(_3081 * cbSceneParam._m0[78u].x) * _2959;
        float _3089 = exp2(_3081 * cbSceneParam._m0[78u].y) * _2960;
        float _3090 = exp2(_3081 * cbSceneParam._m0[78u].z) * _2961;
        float _3097 = _778 + (-0.5);
        _3099 = cbMtdParam._m0[1u];
        _3101 = _3099.y * _3097;
        float _3104 = (_3079 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3105 = _3104 * (_3080 ? _3088 : (_3088 + (cbSceneParam._m0[72u].w * _3061)));
        _3106 = _3104 * (_3080 ? _3089 : (_3089 + (cbSceneParam._m0[72u].w * _3063)));
        _3107 = _3104 * (_3080 ? _3090 : (_3090 + (cbSceneParam._m0[72u].w * _3065)));
        _3108 = _3097 * 0.999000012874603271484375;
        _3118 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3118)
        {
            if ((cbInstanceData._m0[_271 + 7u].x + _3108) < 0.5)
            {
                _3274 = true;
                break;
            }
        }
        uint _3215 = _830 + uint(_3077.w);
        if ((cbInstanceData._m0[_3215].w < 1.0) && ((cbInstanceData._m0[_3215].w + _3108) < 0.5))
        {
            _3274 = true;
            break;
        }
        if ((_3101 + 1.0) < _3099.x)
        {
            _3274 = true;
            break;
        }
        _3274 = false;
        break;
    }
    float _3478;
    if (_3274)
    {
        discard_state = true;
        _3478 = 0.0;
    }
    else
    {
        _3478 = cbInstanceData._m0[_2962].w;
    }
    SV_Target.x = _3105;
    SV_Target.y = _3106;
    SV_Target.z = _3107;
    SV_Target.w = _3478;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2962].w;
    discard_exit();
}


