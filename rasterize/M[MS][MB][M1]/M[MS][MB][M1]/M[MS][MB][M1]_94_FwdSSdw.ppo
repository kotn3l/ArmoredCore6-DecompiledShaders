#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1389;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3740 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3751 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _3762 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    uint _281 = uint(roundEven(NORMAL.w)) * 13u;
    uint _286 = _281 + 1u;
    uint _290 = _281 + 2u;
    float _299 = sqrt(((cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x));
    float _300 = _299 * TEXCOORD.z;
    float _301 = _299 * TEXCOORD.w;
    vec4 _314 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _300) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _301) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = _338.x * cbMtdParam._m0[11u].x;
    float _344 = _338.y * cbMtdParam._m0[11u].y;
    float _345 = _338.z * cbMtdParam._m0[11u].z;
    vec4 _364 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _300) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _301) + cbTextureTilingScale._m0[5u].w));
    vec4 _400 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _402 = _400.x;
    float _414 = dot(vec4(_402, _400.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _431 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_402 - _414) * cbMtdParam._m0[24u].y) + _414) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3773 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _432 = isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0));
    float _439 = (_432 * ((_364.x * cbMtdParam._m0[12u].x) - _343)) + _343;
    float _440 = (_432 * ((_364.y * cbMtdParam._m0[12u].y) - _344)) + _344;
    float _441 = (_432 * ((_364.z * cbMtdParam._m0[12u].z) - _345)) + _345;
    float _445 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _314.x) * _439;
    float _448 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _314.y) * _440;
    float _451 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _314.z) * _441;
    float _458 = ((_439 - _445) * (isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0)))) + _445;
    float _459 = ((_440 - _448) * (isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0)))) + _448;
    float _460 = ((_441 - _451) * (isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0)))) + _451;
    vec4 _478 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _300) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _301) + cbTextureTilingScale._m0[20u].w));
    vec4 _503 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    vec4 _520 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _522 = _520.x;
    float _523 = _520.y;
    float _524 = _520.z;
    float _533 = ((_503.z - _524) * _432) + _524;
    float _536 = ((((_503.x - _522) * _432) + _522) * 2.0) + (-1.0);
    float _537 = ((((_503.y - _523) * _432) + _523) * 2.0) + (-1.0);
    float _538 = dot(vec2(_536, _537), vec2(_536, _537));
    float _3784 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _543 = sqrt(1.0 - (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0))));
    vec4 _559 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _584 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _300) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _301) + cbTextureTilingScale._m0[11u].w));
    float _586 = _584.x;
    float _587 = 1.0 - _586;
    float _593 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _596 = ((isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : min(_593, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _605 = (_596 - ((((((_586 - _587) * cbMtdParam._m0[24u].z) + _587) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _596))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3805 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _606 = isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0));
    float _613 = (_606 * (cbMtdParam._m0[17u].x - _458)) + _458;
    float _614 = (_606 * (cbMtdParam._m0[17u].y - _459)) + _459;
    float _615 = (_606 * (cbMtdParam._m0[17u].z - _460)) + _460;
    vec4 _627 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _300) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _301) + cbTextureTilingScale._m0[19u].w));
    float _629 = _627.x;
    float _630 = 1.0 - _629;
    float _655 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_629 - _630) * cbMtdParam._m0[24u].w) + _630) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3816 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _656 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
    float _664 = ((((cbMtdParam._m0[10u].x - _613) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _656) + _613;
    float _665 = ((((cbMtdParam._m0[10u].y - _614) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _656) + _614;
    float _666 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _615)) * _656) + _615;
    vec4 _692 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _694 = _692.x;
    float _712 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _300) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _301) + cbTextureTilingScale._m0[9u].w)).x - _694) * _432) + _694;
    float _716 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _712) * cbMtdParam._m0[19u].z) + _712;
    float _718 = _716 - (_716 * _606);
    float _720 = _718 - (_718 * _656);
    float _725 = (((_478.z - _533) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _533;
    float _729 = ((_559.z - _725) * cbMtdParam._m0[19u].w) + _725;
    vec4 _743 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _300) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _301) + cbTextureTilingScale._m0[15u].w));
    float _750 = (_743.x * 2.0) + (-1.0);
    float _751 = (_743.y * 2.0) + (-1.0);
    float _752 = dot(vec2(_750, _751), vec2(_750, _751));
    float _3827 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _760 = (_606 * (_743.z - _729)) + _729;
    float _763 = ((cbMtdParam._m0[23u].y - _760) * _656) + _760;
    vec4 _782 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _300) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _301) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _788 = (_782.x * 2.0) + (-1.0);
    float _789 = (_782.y * 2.0) + (-1.0);
    float _790 = dot(vec2(_788, _789), vec2(_788, _789));
    float _3838 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _804 = (_536 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_478.x * 2.0) + (-1.0)))) + (((_559.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _805 = (_537 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_478.y * 2.0) + (-1.0)))) + (((_559.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _817 = (((_750 - _804) + (cbMtdParam._m0[21u].x * _804)) * _606) + _804;
    float _818 = (((_751 - _805) + (cbMtdParam._m0[21u].x * _805)) * _606) + _805;
    float _819 = (_606 * (sqrt(1.0 - (isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0)))) - _543)) + _543;
    float _830 = (((_788 - _817) + (_817 * cbMtdParam._m0[22u].z)) * _656) + _817;
    float _831 = (((_789 - _818) + (_818 * cbMtdParam._m0[22u].z)) * _656) + _818;
    float _832 = ((sqrt(1.0 - (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0)))) - _819) * _656) + _819;
    float _836 = cbMtdParam._m0[22u].x + _559.w;
    float _839 = fma(_832, _249 * NORMAL.x, fma(_831, _256 * TANGENT.x, (_242 * _234) * _830));
    float _842 = fma(_832, _249 * NORMAL.y, fma(_831, _256 * TANGENT.y, (_242 * _235) * _830));
    float _845 = fma(_832, _249 * NORMAL.z, fma(_831, _256 * TANGENT.z, (_242 * _236) * _830));
    float _849 = inversesqrt(dot(vec3(_839, _842, _845), vec3(_839, _842, _845)));
    float _850 = _849 * _839;
    float _851 = _849 * _842;
    float _852 = _849 * _845;
    float _3849 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _853 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _3860 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _3871 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _3882 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
    float _3893 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _3904 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _858 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _872 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _922 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _912);
    float _923 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _912);
    float _924 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _912);
    float _928 = inversesqrt(dot(vec3(_922, _923, _924), vec3(_922, _923, _924)));
    float _929 = _922 * _928;
    float _930 = _923 * _928;
    float _931 = _924 * _928;
    float _937 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _938 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _956 = fma(_852, cbSceneParam._m0[5u].z, fma(_851, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _850));
    float _959 = fma(_852, cbSceneParam._m0[6u].z, fma(_851, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _850));
    float _962 = fma(_852, cbSceneParam._m0[7u].z, fma(_851, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _850));
    uint _976 = (_281 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _982 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0)))) * cbInstanceData._m0[_976].x;
    float _983 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0)))) * cbInstanceData._m0[_976].y;
    float _984 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0)))) * cbInstanceData._m0[_976].z;
    float _3915 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _985 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _3926 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _986 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
    float _3937 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _987 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
    float _988 = 1.0 - _858;
    float _989 = _985 * _988;
    float _990 = _986 * _988;
    float _991 = _987 * _988;
    float _996 = (_985 + (-0.039999999105930328369140625)) * _858;
    float _997 = (_986 + (-0.039999999105930328369140625)) * _858;
    float _998 = (_987 + (-0.039999999105930328369140625)) * _858;
    float _999 = _996 + 0.039999999105930328369140625;
    float _1001 = _997 + 0.039999999105930328369140625;
    float _1002 = _998 + 0.039999999105930328369140625;
    vec4 _1011 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _937, cbSceneParam._m0[86u].y * _938));
    float _1015 = ((isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0))) * TEXCOORD_5.w) * _1011.x;
    float _1016 = dot(vec3(_850, _851, _852), vec3(_929, _930, _931));
    float _1019 = _1016 * 2.0;
    float _1023 = (_1019 * _850) - _929;
    float _1024 = (_1019 * _851) - _930;
    float _1025 = (_1019 * _852) - _931;
    float _1029 = abs(dot(vec3(_929, _930, _931), vec3(_850, _851, _852)));
    float _3948 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    float _1031 = sqrt(_853);
    float _1044 = exp2((_1031 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1031 * 3.0));
    float _1050 = (1.0 - _1044) * ((_1031 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1051 = _1044 * _1031;
    float _1079 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1087 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1388;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1113 = fma(_1087, cbModelParam._m0[26u].z, fma(_1083, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1079));
        float _1117 = fma(_1087, cbModelParam._m0[27u].z, fma(_1083, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1079));
        float _1121 = fma(_1087, cbModelParam._m0[28u].z, fma(_1083, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1079));
        float _1146 = _1079 + _850;
        float _1147 = _1083 + _851;
        float _1148 = _1087 + _852;
        float _1158 = fma(_1148, cbModelParam._m0[26u].z, fma(_1147, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1146)) - _1113;
        float _1159 = fma(_1148, cbModelParam._m0[27u].z, fma(_1147, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1146)) - _1117;
        float _1160 = fma(_1148, cbModelParam._m0[28u].z, fma(_1147, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1146)) - _1121;
        float _1164 = inversesqrt(dot(vec3(_1158, _1159, _1160), vec3(_1158, _1159, _1160)));
        float _1177 = ((_1164 * _1158) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1113 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1178 = ((_1164 * _1159) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1117 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1179 = ((_1164 * _1160) / cbModelParam._m0[34u].z) + ((((((_1121 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1182 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1177, _1178, _1179), 0.0);
        vec4 _1189 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1177, _1178, _1179), 0.0);
        vec4 _1196 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1177, _1178, _1179), 0.0);
        vec4 _1203 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1177, _1178, _1179), 0.0);
        float _1216 = exp2((_1182.w + (-0.5)) * 20.0) * 2.0;
        float _1217 = _1216 * (_1182.x + (-0.5));
        float _1218 = _1216 * (_1182.y + (-0.5));
        float _1219 = _1216 * (_1182.z + (-0.5));
        float _1226 = exp2((_1189.w + (-0.5)) * 20.0) * 2.0;
        float _1227 = _1226 * (_1189.x + (-0.5));
        float _1228 = _1226 * (_1189.y + (-0.5));
        float _1229 = _1226 * (_1189.z + (-0.5));
        float _1236 = exp2((_1196.w + (-0.5)) * 20.0) * 2.0;
        float _1237 = _1236 * (_1196.x + (-0.5));
        float _1238 = _1236 * (_1196.y + (-0.5));
        float _1239 = _1236 * (_1196.z + (-0.5));
        float _1246 = exp2((_1203.w + (-0.5)) * 20.0) * 2.0;
        float _1247 = _1246 * (_1203.x + (-0.5));
        float _1248 = _1246 * (_1203.y + (-0.5));
        float _1249 = _1246 * (_1203.z + (-0.5));
        float _1250 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1251 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1252 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1253 = _1217 * 0.5;
        float _1254 = _1227 * 0.5;
        float _1255 = _1237 * 0.5;
        float _1256 = dot(vec3(_1253, _1254, _1255), vec3(_1253, _1254, _1255));
        float _1261 = (_1256 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1256);
        float _1270 = (dot(vec3(_850, _851, _852), vec3(_1261 * _1253, _1261 * _1254, _1261 * _1255)) + 1.0) * 0.5;
        float _3974 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1280 = sqrt(((_1254 * _1254) + (_1253 * _1253)) + (_1255 * _1255)) / (_1250 + 9.9999997473787516355514526367188e-06);
        float _3985 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
        float _1282 = _1281 * 2.0;
        float _1286 = (1.0 - _1281) / (_1281 + 1.0);
        float _3996 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1287 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
        float _1296 = ((((1.0 - _1287) * (_1282 + 2.0)) * exp2(log2(isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * (_1282 + 1.0))) + _1287) * _1250;
        float _1297 = _1218 * 0.5;
        float _1298 = _1228 * 0.5;
        float _1299 = _1238 * 0.5;
        float _1300 = dot(vec3(_1297, _1298, _1299), vec3(_1297, _1298, _1299));
        float _1305 = (_1300 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1300);
        float _1313 = (dot(vec3(_850, _851, _852), vec3(_1305 * _1297, _1305 * _1298, _1305 * _1299)) + 1.0) * 0.5;
        float _4007 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1322 = sqrt(((_1298 * _1298) + (_1297 * _1297)) + (_1299 * _1299)) / (_1251 + 9.9999997473787516355514526367188e-06);
        float _4018 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1323 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
        float _1324 = _1323 * 2.0;
        float _1328 = (1.0 - _1323) / (_1323 + 1.0);
        float _4029 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1329 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
        float _1338 = ((((1.0 - _1329) * (_1324 + 2.0)) * exp2(log2(isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * (_1324 + 1.0))) + _1329) * _1251;
        float _1339 = _1219 * 0.5;
        float _1340 = _1229 * 0.5;
        float _1341 = _1239 * 0.5;
        float _1342 = dot(vec3(_1339, _1340, _1341), vec3(_1339, _1340, _1341));
        float _1347 = (_1342 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1342);
        float _1355 = (dot(vec3(_850, _851, _852), vec3(_1347 * _1339, _1347 * _1340, _1347 * _1341)) + 1.0) * 0.5;
        float _4040 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1364 = sqrt(((_1340 * _1340) + (_1339 * _1339)) + (_1341 * _1341)) / (_1252 + 9.9999997473787516355514526367188e-06);
        float _4051 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1366 = _1365 * 2.0;
        float _1370 = (1.0 - _1365) / (_1365 + 1.0);
        float _4062 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1371 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
        float _1380 = ((((1.0 - _1371) * (_1366 + 2.0)) * exp2(log2(isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * (_1366 + 1.0))) + _1371) * _1252;
        _1388 = _1219;
        _1390 = _1218;
        _1391 = _1217;
        _1392 = _1229;
        _1393 = _1228;
        _1394 = _1227;
        _1395 = _1239;
        _1396 = _1238;
        _1397 = _1237;
        _1398 = _1252;
        _1399 = _1251;
        _1400 = _1250;
        _1401 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0)));
        _1402 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0)));
        _1403 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0)));
    }
    else
    {
        _1388 = _1389;
        _1390 = _1389;
        _1391 = _1389;
        _1392 = _1389;
        _1393 = _1389;
        _1394 = _1389;
        _1395 = _1389;
        _1396 = _1389;
        _1397 = _1389;
        _1398 = _1389;
        _1399 = _1389;
        _1400 = _1389;
        _1401 = 0.0;
        _1402 = 0.0;
        _1403 = 0.0;
    }
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1428 = fma(_1087, cbModelParam._m0[30u].z, fma(_1083, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1079));
        float _1432 = fma(_1087, cbModelParam._m0[31u].z, fma(_1083, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1079));
        float _1436 = fma(_1087, cbModelParam._m0[32u].z, fma(_1083, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1079));
        float _1459 = _1079 + _850;
        float _1460 = _1083 + _851;
        float _1461 = _1087 + _852;
        float _1471 = fma(_1461, cbModelParam._m0[30u].z, fma(_1460, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1459)) - _1428;
        float _1472 = fma(_1461, cbModelParam._m0[31u].z, fma(_1460, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1459)) - _1432;
        float _1473 = fma(_1461, cbModelParam._m0[32u].z, fma(_1460, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1459)) - _1436;
        float _1477 = inversesqrt(dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473)));
        float _1490 = ((_1477 * _1471) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1428 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1491 = ((_1477 * _1472) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1432 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1492 = ((_1477 * _1473) / cbModelParam._m0[35u].z) + ((((((_1436 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1494 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1501 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1508 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1515 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        float _1527 = exp2((_1494.w + (-0.5)) * 20.0) * 2.0;
        float _1528 = _1527 * (_1494.x + (-0.5));
        float _1529 = _1527 * (_1494.y + (-0.5));
        float _1530 = _1527 * (_1494.z + (-0.5));
        float _1537 = exp2((_1501.w + (-0.5)) * 20.0) * 2.0;
        float _1538 = _1537 * (_1501.x + (-0.5));
        float _1539 = _1537 * (_1501.y + (-0.5));
        float _1540 = _1537 * (_1501.z + (-0.5));
        float _1547 = exp2((_1508.w + (-0.5)) * 20.0) * 2.0;
        float _1548 = _1547 * (_1508.x + (-0.5));
        float _1549 = _1547 * (_1508.y + (-0.5));
        float _1550 = _1547 * (_1508.z + (-0.5));
        float _1557 = exp2((_1515.w + (-0.5)) * 20.0) * 2.0;
        float _1558 = _1557 * (_1515.x + (-0.5));
        float _1559 = _1557 * (_1515.y + (-0.5));
        float _1560 = _1557 * (_1515.z + (-0.5));
        float _1561 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1562 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1563 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1564 = _1528 * 0.5;
        float _1565 = _1538 * 0.5;
        float _1566 = _1548 * 0.5;
        float _1567 = dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566));
        float _1572 = (_1567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1567);
        float _1580 = (dot(vec3(_850, _851, _852), vec3(_1572 * _1564, _1572 * _1565, _1572 * _1566)) + 1.0) * 0.5;
        float _4103 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1589 = sqrt(((_1565 * _1565) + (_1564 * _1564)) + (_1566 * _1566)) / (_1561 + 9.9999997473787516355514526367188e-06);
        float _4114 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
        float _1591 = _1590 * 2.0;
        float _1595 = (1.0 - _1590) / (_1590 + 1.0);
        float _4125 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1605 = ((((1.0 - _1596) * (_1591 + 2.0)) * exp2(log2(isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0))) * (_1591 + 1.0))) + _1596) * _1561;
        float _1606 = _1529 * 0.5;
        float _1607 = _1539 * 0.5;
        float _1608 = _1549 * 0.5;
        float _1609 = dot(vec3(_1606, _1607, _1608), vec3(_1606, _1607, _1608));
        float _1614 = (_1609 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1609);
        float _1622 = (dot(vec3(_850, _851, _852), vec3(_1614 * _1606, _1614 * _1607, _1614 * _1608)) + 1.0) * 0.5;
        float _4136 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1631 = sqrt(((_1607 * _1607) + (_1606 * _1606)) + (_1608 * _1608)) / (_1562 + 9.9999997473787516355514526367188e-06);
        float _4147 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1633 = _1632 * 2.0;
        float _1637 = (1.0 - _1632) / (_1632 + 1.0);
        float _4158 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1638 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1647 = ((((1.0 - _1638) * (_1633 + 2.0)) * exp2(log2(isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) * (_1633 + 1.0))) + _1638) * _1562;
        float _1648 = _1530 * 0.5;
        float _1649 = _1540 * 0.5;
        float _1650 = _1550 * 0.5;
        float _1651 = dot(vec3(_1648, _1649, _1650), vec3(_1648, _1649, _1650));
        float _1656 = (_1651 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1651);
        float _1664 = (dot(vec3(_850, _851, _852), vec3(_1656 * _1648, _1656 * _1649, _1656 * _1650)) + 1.0) * 0.5;
        float _4169 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1673 = sqrt(((_1649 * _1649) + (_1648 * _1648)) + (_1650 * _1650)) / (_1563 + 9.9999997473787516355514526367188e-06);
        float _4180 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1675 = _1674 * 2.0;
        float _1679 = (1.0 - _1674) / (_1674 + 1.0);
        float _4191 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1680 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1689 = ((((1.0 - _1680) * (_1675 + 2.0)) * exp2(log2(isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * (_1675 + 1.0))) + _1680) * _1563;
        _1697 = _1530;
        _1698 = _1529;
        _1699 = _1528;
        _1700 = _1540;
        _1701 = _1539;
        _1702 = _1538;
        _1703 = _1550;
        _1704 = _1549;
        _1705 = _1548;
        _1706 = _1563;
        _1707 = _1562;
        _1708 = _1561;
        _1709 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)));
        _1710 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)));
        _1711 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0)));
    }
    else
    {
        _1697 = _1389;
        _1698 = _1389;
        _1699 = _1389;
        _1700 = _1389;
        _1701 = _1389;
        _1702 = _1389;
        _1703 = _1389;
        _1704 = _1389;
        _1705 = _1389;
        _1706 = _1389;
        _1707 = _1389;
        _1708 = _1389;
        _1709 = 0.0;
        _1710 = 0.0;
        _1711 = 0.0;
    }
    float _1721 = (cbModelParam._m0[1u].x * (_1709 - _1401)) + _1401;
    float _1722 = (cbModelParam._m0[1u].x * (_1710 - _1402)) + _1402;
    float _1723 = (cbModelParam._m0[1u].x * (_1711 - _1403)) + _1403;
    float _1744 = fma(_1723, cbSceneParam._m0[89u].z, fma(_1722, cbSceneParam._m0[89u].y, _1721 * cbSceneParam._m0[89u].x));
    float _1747 = fma(_1723, cbSceneParam._m0[90u].z, fma(_1722, cbSceneParam._m0[90u].y, _1721 * cbSceneParam._m0[90u].x));
    float _1750 = fma(_1723, cbSceneParam._m0[91u].z, fma(_1722, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1721));
    float _1765 = _1023 * 0.5;
    float _1766 = _1024 * 0.5;
    float _1767 = _1025 * 0.5;
    float _1768 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1699, _1702, _1705, _1708));
    float _1771 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1698, _1701, _1704, _1707));
    float _1774 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1697, _1700, _1703, _1706));
    float _1808;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1781 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1388, _1392, _1395, _1398));
        float _1785 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1390, _1393, _1396, _1399));
        float _1789 = dot(vec4(_1765, _1766, _1767, 1.0), vec4(_1391, _1394, _1397, _1400));
        float _1796 = dot(vec4(cbModelParam._m0[39u]), vec4(_1765, _1766, _1767, 1.0));
        _1808 = dot(vec3(isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)), isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0)), isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1796) ? 0.0 : (isnan(0.0) ? _1796 : max(0.0, _1796))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1808 = 1.0;
    }
    float _1819;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1810 = dot(vec4(cbModelParam._m0[40u]), vec4(_1765, _1766, _1767, 1.0));
        _1819 = dot(vec3(isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)), isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)), isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1810) ? 0.0 : (isnan(0.0) ? _1810 : max(0.0, _1810))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1819 = 1.0;
    }
    float _1823 = (_1819 * cbModelParam._m0[1u].x) + (_1808 * (1.0 - cbModelParam._m0[1u].x));
    float _1833 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _853);
    float _1834 = isnan(_1833) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1833 : min(cbModelParam._m0[25u].z, _1833));
    float _1915;
    float _1917;
    float _1919;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1882 = fma(_1087, cbModelParam._m0[13u].z, fma(_1083, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1079)) + cbModelParam._m0[13u].w;
        float _1886 = fma(_1087, cbModelParam._m0[14u].z, fma(_1083, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1079)) + cbModelParam._m0[14u].w;
        float _1890 = fma(_1087, cbModelParam._m0[15u].z, fma(_1083, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1079)) + cbModelParam._m0[15u].w;
        float _1893 = fma(_1025, cbModelParam._m0[13u].z, fma(_1024, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1023));
        float _1896 = fma(_1025, cbModelParam._m0[14u].z, fma(_1024, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1023));
        float _1899 = fma(_1025, cbModelParam._m0[15u].z, fma(_1024, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1023));
        float _1927;
        if (_1893 > 0.0)
        {
            _1927 = abs((1.0 - _1882) / _1893);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1893 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1882 + 1.0) / _1893);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1927 = frontier_phi_14_12_ladder;
        }
        float _2151;
        if (_1896 > 0.0)
        {
            _2151 = abs((1.0 - _1886) / _1896);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1896 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1886 + 1.0) / _1896);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2151 = frontier_phi_23_19_ladder;
        }
        float _2408;
        if (_1899 > 0.0)
        {
            _2408 = abs((1.0 - _1890) / _1899);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1899 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1890 + 1.0) / _1899);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2408 = frontier_phi_35_30_ladder;
        }
        float _2410 = isnan(_2151) ? _1927 : (isnan(_1927) ? _2151 : min(_1927, _2151));
        float _2411 = isnan(_2408) ? _2410 : (isnan(_2410) ? _2408 : min(_2410, _2408));
        float _2415 = (_2411 * _1893) + _1882;
        float _2416 = (_2411 * _1896) + _1886;
        float _2417 = (_2411 * _1899) + _1890;
        float _2418 = _2411 * 9.9999997473787516355514526367188e-05;
        float _2420 = (-1.0) - _2418;
        float _2422 = _2418 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2417 > _2422) || ((_2417 < _2420) || ((_2416 > _2422) || ((_2416 < _2420) || ((_2415 < _2420) || (_2415 > _2422))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2545 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2417, cbModelParam._m0[9u].z, fma(_2416, cbModelParam._m0[9u].y, _2415 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2417, cbModelParam._m0[10u].z, fma(_2416, cbModelParam._m0[10u].y, _2415 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2417, cbModelParam._m0[11u].z, fma(_2416, cbModelParam._m0[11u].y, _2415 * cbModelParam._m0[11u].x))), _1834);
            frontier_phi_13_35_ladder = _2545.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2545.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2545.x * cbModelParam._m0[1u].y;
        }
        _1915 = frontier_phi_13_35_ladder_2;
        _1917 = frontier_phi_13_35_ladder_1;
        _1919 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1903 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1023, _1024, _1025), _1834);
        _1915 = _1903.x * cbModelParam._m0[1u].y;
        _1917 = _1903.y * cbModelParam._m0[1u].y;
        _1919 = _1903.z * cbModelParam._m0[1u].y;
    }
    float _1923 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _853);
    float _1924 = isnan(_1923) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1923 : min(cbModelParam._m0[25u].w, _1923));
    float _2014;
    float _2016;
    float _2018;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1978 = fma(_1087, cbModelParam._m0[21u].z, fma(_1083, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1079)) + cbModelParam._m0[21u].w;
        float _1982 = fma(_1087, cbModelParam._m0[22u].z, fma(_1083, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1079)) + cbModelParam._m0[22u].w;
        float _1986 = fma(_1087, cbModelParam._m0[23u].z, fma(_1083, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1079)) + cbModelParam._m0[23u].w;
        float _1989 = fma(_1025, cbModelParam._m0[21u].z, fma(_1024, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1023));
        float _1992 = fma(_1025, cbModelParam._m0[22u].z, fma(_1024, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1023));
        float _1995 = fma(_1025, cbModelParam._m0[23u].z, fma(_1024, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1023));
        float _2156;
        if (_1989 > 0.0)
        {
            _2156 = abs((1.0 - _1978) / _1989);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1989 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1978 + 1.0) / _1989);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2156 = frontier_phi_25_21_ladder;
        }
        float _2435;
        if (_1992 > 0.0)
        {
            _2435 = abs((1.0 - _1982) / _1992);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1992 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1982 + 1.0) / _1992);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2435 = frontier_phi_37_32_ladder;
        }
        float _2648;
        if (_1995 > 0.0)
        {
            _2648 = abs((1.0 - _1986) / _1995);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1995 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1986 + 1.0) / _1995);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2648 = frontier_phi_46_43_ladder;
        }
        float _2650 = isnan(_2435) ? _2156 : (isnan(_2156) ? _2435 : min(_2156, _2435));
        float _2651 = isnan(_2648) ? _2650 : (isnan(_2650) ? _2648 : min(_2650, _2648));
        float _2655 = (_2651 * _1989) + _1978;
        float _2656 = (_2651 * _1992) + _1982;
        float _2657 = (_2651 * _1995) + _1986;
        float _2658 = _2651 * 9.9999997473787516355514526367188e-05;
        float _2659 = (-1.0) - _2658;
        float _2661 = _2658 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2657 > _2661) || ((_2657 < _2659) || ((_2656 > _2661) || ((_2656 < _2659) || ((_2655 < _2659) || (_2655 > _2661))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2856 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2657, cbModelParam._m0[17u].z, fma(_2656, cbModelParam._m0[17u].y, _2655 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2657, cbModelParam._m0[18u].z, fma(_2656, cbModelParam._m0[18u].y, _2655 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2657, cbModelParam._m0[19u].z, fma(_2656, cbModelParam._m0[19u].y, _2655 * cbModelParam._m0[19u].x))), _1924);
            frontier_phi_22_46_ladder = _2856.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2856.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2856.x * cbModelParam._m0[1u].z;
        }
        _2014 = frontier_phi_22_46_ladder_2;
        _2016 = frontier_phi_22_46_ladder_1;
        _2018 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1998 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1023, _1024, _1025), _1924);
        _2014 = _1998.x * cbModelParam._m0[1u].z;
        _2016 = _1998.y * cbModelParam._m0[1u].z;
        _2018 = _1998.z * cbModelParam._m0[1u].z;
    }
    float _2031 = (((_1050 * _999) + _1051) * _1015) * ((cbModelParam._m0[1u].w * (_2014 - _1915)) + _1915);
    float _2033 = (((_1050 * _1001) + _1051) * _1015) * ((cbModelParam._m0[1u].w * (_2016 - _1917)) + _1917);
    float _2035 = (((_1050 * _1002) + _1051) * _1015) * ((cbModelParam._m0[1u].w * (_2018 - _1919)) + _1919);
    float _2038 = fma(_2035, cbSceneParam._m0[89u].z, fma(_2033, cbSceneParam._m0[89u].y, _2031 * cbSceneParam._m0[89u].x));
    float _2041 = fma(_2035, cbSceneParam._m0[90u].z, fma(_2033, cbSceneParam._m0[90u].y, _2031 * cbSceneParam._m0[90u].x));
    float _2044 = fma(_2035, cbSceneParam._m0[91u].z, fma(_2033, cbSceneParam._m0[91u].y, _2031 * cbSceneParam._m0[91u].x));
    vec4 _2052 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_937, _938));
    float _2054 = _2052.w;
    float _2066 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2054);
    float _2067 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2054);
    float _2068 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2054);
    uvec4 _2072 = floatBitsToUint(cbInstanceData._m0[_281 + 5u]);
    uint _2074 = _2072.x * 14u;
    uint _2075 = _2074 + 13u;
    float _2082 = _1015 + (-1.0);
    float _2087 = (cbLight._m0[_2075].x * _2082) + 1.0;
    float _2088 = (cbLight._m0[_2075].y * _2082) + 1.0;
    float _2089 = (cbLight._m0[_2075].z * _2082) + 1.0;
    float _2090 = (cbLight._m0[_2075].w * _2082) + 1.0;
    uint _2091 = _2074 + 5u;
    float _2097 = isnan(1.0) ? _2088 : (isnan(_2088) ? 1.0 : min(_2088, 1.0));
    uint _2101 = _2074 + 4u;
    float _2110 = isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0));
    uint _2114 = _2074 | 1u;
    float _2125 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_850, _851, _852));
    float _2128 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_850, _851, _852));
    float _4327 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _4338 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
    float _2133 = (isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))) * 0.3183098733425140380859375;
    float _2135 = (isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * 0.3183098733425140380859375;
    float _2142 = ((cbLight._m0[_2091].x * _2097) * _2135) + (((cbLight._m0[_2101].x * _2066) * _2110) * _2133);
    float _2143 = ((_2097 * cbLight._m0[_2091].y) * _2135) + (((cbLight._m0[_2101].y * _2067) * _2110) * _2133);
    float _2144 = ((_2097 * cbLight._m0[_2091].z) * _2135) + (((cbLight._m0[_2101].z * _2068) * _2110) * _2133);
    uvec4 _2148 = floatBitsToUint(cbLight._m0[_2074 + 12u]);
    bool _2150 = _2148.x == 0u;
    float _2161;
    float _2163;
    float _2165;
    if (_2150)
    {
        _2161 = _2142;
        _2163 = _2143;
        _2165 = _2144;
    }
    else
    {
        uint _2169 = _2074 + 6u;
        float _2185 = (dot(vec3(cbLight._m0[_2074 + 2u].xyz), vec3(_850, _851, _852)) * 0.5) + 0.5;
        float _2186 = _2185 * _2185;
        float _4349 = isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0));
        float _2187 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _2188 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
        _2161 = (((cbLight._m0[_2169].x * 0.3183098733425140380859375) * _2187) * _2188) + _2142;
        _2163 = (((cbLight._m0[_2169].y * 0.3183098733425140380859375) * _2187) * _2188) + _2143;
        _2165 = (((cbLight._m0[_2169].z * 0.3183098733425140380859375) * _2187) * _2188) + _2144;
    }
    bool _2168 = _2148.y == 0u;
    float _2206;
    float _2208;
    float _2210;
    if (_2168)
    {
        _2206 = _2161;
        _2208 = _2163;
        _2210 = _2165;
    }
    else
    {
        uint _2379 = _2074 + 7u;
        float _2395 = (dot(vec3(cbLight._m0[_2074 + 3u].xyz), vec3(_850, _851, _852)) * 0.5) + 0.5;
        float _2396 = _2395 * _2395;
        float _4365 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
        float _2397 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _2398 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2206 = (((cbLight._m0[_2379].x * 0.3183098733425140380859375) * _2397) * _2398) + _2161;
        _2208 = (((cbLight._m0[_2379].y * 0.3183098733425140380859375) * _2397) * _2398) + _2163;
        _2210 = (((cbLight._m0[_2379].z * 0.3183098733425140380859375) * _2397) * _2398) + _2165;
    }
    uint _2213 = _2074 + 8u;
    float _2226 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2074].w)) * _853) * 0.949999988079071044921875);
    float _2227 = _2226 * _2226;
    float _2228 = cbLight._m0[_2074].x + _929;
    float _2229 = cbLight._m0[_2074].y + _930;
    float _2230 = cbLight._m0[_2074].z + _931;
    float _2234 = inversesqrt(dot(vec3(_2228, _2229, _2230), vec3(_2228, _2229, _2230)));
    float _2235 = _2234 * _2228;
    float _2236 = _2234 * _2229;
    float _2237 = _2234 * _2230;
    float _2238 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2074].xyz));
    float _4381 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
    float _2241 = isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0));
    float _4392 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _2242 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
    float _2243 = dot(vec3(_850, _851, _852), vec3(_2235, _2236, _2237));
    float _4403 = isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0));
    float _2246 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
    float _2247 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_2235, _2236, _2237));
    float _4414 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _2251 = _2227 * _2227;
    float _2255 = ((_2246 * _2246) * (_2251 + (-1.0))) + 1.0;
    float _2263 = exp2(log2(1.0 - (isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0)))) * 5.0);
    float _2264 = 0.959999978542327880859375 - _996;
    float _2266 = 0.959999978542327880859375 - _997;
    float _2267 = 0.959999978542327880859375 - _998;
    float _2274 = 1.0 - _2227;
    float _2285 = (0.5 / (((_2242 * ((_2241 * _2274) + _2227)) + 9.9999999392252902907785028219223e-09) + (((_2242 * _2274) + _2227) * _2241))) * _2241;
    float _4425 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2287 = (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * (_2251 / ((_2255 * _2255) * 3.141590118408203125));
    uint _2301 = _2074 + 9u;
    float _2312 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2114].w)) * _853) * 0.949999988079071044921875);
    float _2313 = _2312 * _2312;
    float _2314 = cbLight._m0[_2114].x + _929;
    float _2315 = cbLight._m0[_2114].y + _930;
    float _2316 = cbLight._m0[_2114].z + _931;
    float _2320 = inversesqrt(dot(vec3(_2314, _2315, _2316), vec3(_2314, _2315, _2316)));
    float _2321 = _2320 * _2314;
    float _2322 = _2320 * _2315;
    float _2323 = _2320 * _2316;
    float _2324 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2114].xyz));
    float _4436 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
    float _2327 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
    float _2328 = dot(vec3(_850, _851, _852), vec3(_2321, _2322, _2323));
    float _4447 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
    float _2331 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
    float _2332 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_2321, _2322, _2323));
    float _4458 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2336 = _2313 * _2313;
    float _2340 = ((_2331 * _2331) * (_2336 + (-1.0))) + 1.0;
    float _2347 = exp2(log2(1.0 - (isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0)))) * 5.0);
    float _2354 = 1.0 - _2313;
    float _2364 = (0.5 / (((_2242 * ((_2327 * _2354) + _2313)) + 9.9999999392252902907785028219223e-09) + (((_2242 * _2354) + _2313) * _2327))) * _2327;
    float _4469 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
    float _2366 = (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * (_2336 / ((_2340 * _2340) * 3.141590118408203125));
    float _2376 = (((((_2347 * _2264) + _999) * cbLight._m0[_2301].x) * _2366) * _2097) + ((((cbLight._m0[_2213].x * _2066) * ((_2263 * _2264) + _999)) * _2287) * _2110);
    float _2377 = (((((_2347 * _2266) + _1001) * cbLight._m0[_2301].y) * _2366) * _2097) + ((((cbLight._m0[_2213].y * _2067) * ((_2263 * _2266) + _1001)) * _2287) * _2110);
    float _2378 = (((((_2347 * _2267) + _1002) * cbLight._m0[_2301].z) * _2366) * _2097) + ((((cbLight._m0[_2213].z * _2068) * ((_2263 * _2267) + _1002)) * _2287) * _2110);
    float _2440;
    float _2442;
    float _2444;
    if (_2150)
    {
        _2440 = _2376;
        _2442 = _2377;
        _2444 = _2378;
    }
    else
    {
        uint _2446 = _2074 + 2u;
        uint _2450 = _2074 + 10u;
        float _2464 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2446].w)) * _853) * 0.949999988079071044921875);
        float _2465 = _2464 * _2464;
        float _2466 = cbLight._m0[_2446].x + _929;
        float _2467 = cbLight._m0[_2446].y + _930;
        float _2468 = cbLight._m0[_2446].z + _931;
        float _2472 = inversesqrt(dot(vec3(_2466, _2467, _2468), vec3(_2466, _2467, _2468)));
        float _2473 = _2472 * _2466;
        float _2474 = _2472 * _2467;
        float _2475 = _2472 * _2468;
        float _2476 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2446].xyz));
        float _4480 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
        float _2479 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
        float _2480 = dot(vec3(_850, _851, _852), vec3(_2473, _2474, _2475));
        float _4491 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
        float _2483 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _2484 = dot(vec3(cbLight._m0[_2446].xyz), vec3(_2473, _2474, _2475));
        float _4502 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
        float _2488 = _2465 * _2465;
        float _2492 = ((_2483 * _2483) * (_2488 + (-1.0))) + 1.0;
        float _2499 = exp2(log2(1.0 - (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0)))) * 5.0);
        float _2506 = 1.0 - _2465;
        float _2516 = (0.5 / (((_2242 * ((_2479 * _2506) + _2465)) + 9.9999999392252902907785028219223e-09) + (((_2242 * _2506) + _2465) * _2479))) * _2479;
        float _4513 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
        float _2518 = (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0))) * (_2488 / ((_2492 * _2492) * 3.141590118408203125));
        float _2519 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
        _2440 = (((((_2499 * _2264) + _999) * cbLight._m0[_2450].x) * _2518) * _2519) + _2376;
        _2442 = (((((_2499 * _2266) + _1001) * cbLight._m0[_2450].y) * _2518) * _2519) + _2377;
        _2444 = (((((_2499 * _2267) + _1002) * cbLight._m0[_2450].z) * _2518) * _2519) + _2378;
    }
    float _2554;
    float _2556;
    float _2558;
    if (_2168)
    {
        _2554 = _2440;
        _2556 = _2442;
        _2558 = _2444;
    }
    else
    {
        uint _2565 = _2074 + 3u;
        uint _2569 = _2074 + 11u;
        float _2583 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2565].w)) * _853) * 0.949999988079071044921875);
        float _2584 = _2583 * _2583;
        float _2585 = cbLight._m0[_2565].x + _929;
        float _2586 = cbLight._m0[_2565].y + _930;
        float _2587 = cbLight._m0[_2565].z + _931;
        float _2591 = inversesqrt(dot(vec3(_2585, _2586, _2587), vec3(_2585, _2586, _2587)));
        float _2592 = _2591 * _2585;
        float _2593 = _2591 * _2586;
        float _2594 = _2591 * _2587;
        float _2595 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2565].xyz));
        float _4529 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
        float _2598 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _2599 = dot(vec3(_850, _851, _852), vec3(_2592, _2593, _2594));
        float _4540 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2602 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
        float _2603 = dot(vec3(cbLight._m0[_2565].xyz), vec3(_2592, _2593, _2594));
        float _4551 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
        float _2607 = _2584 * _2584;
        float _2611 = ((_2602 * _2602) * (_2607 + (-1.0))) + 1.0;
        float _2618 = exp2(log2(1.0 - (isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0)))) * 5.0);
        float _2625 = 1.0 - _2584;
        float _2635 = (0.5 / (((_2242 * ((_2598 * _2625) + _2584)) + 9.9999999392252902907785028219223e-09) + (((_2242 * _2625) + _2584) * _2598))) * _2598;
        float _4562 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2637 = (isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0))) * (_2607 / ((_2611 * _2611) * 3.141590118408203125));
        float _2638 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2554 = (((((_2618 * _2264) + _999) * cbLight._m0[_2569].x) * _2637) * _2638) + _2440;
        _2556 = (((((_2618 * _2266) + _1001) * cbLight._m0[_2569].y) * _2637) * _2638) + _2442;
        _2558 = (((((_2618 * _2267) + _1002) * cbLight._m0[_2569].z) * _2637) * _2638) + _2444;
    }
    float _2773;
    float _2775;
    float _2777;
    float _2779;
    float _2781;
    float _2783;
    if (_2072.y == 0u)
    {
        float _2713 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2714 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2713;
        float _2715 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2713;
        float _2716 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2713;
        uvec4 _2728 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2729 = _2728.x;
        uint _2740 = uint((float(_2728.y) * floor(float(uint(cbSceneParam._m0[85u].y * _938) / _2729))) + floor(float(uint(cbSceneParam._m0[85u].x * _937) / _2729)));
        float _2750 = (log2(_2716 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2751 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        uint _2754 = uint(isnan(14.0) ? _2751 : (isnan(_2751) ? 14.0 : min(_2751, 14.0)));
        uvec4 _2759 = texelFetch(g_lightClusterGridBuffer, int(((_2754 << 2u) + (_2740 << 6u)) >> 2u));
        uint _2760 = _2759.x;
        uint _2761 = _2728.z;
        float _2861;
        float _2863;
        float _2865;
        float _2867;
        float _2869;
        float _2871;
        if (((((1u << ((_2761 >> 4u) & 15u)) + 4294967295u) & _2760) == 0u) || ((_2761 & 240u) == 0u))
        {
            _2861 = 0.0;
            _2863 = 0.0;
            _2865 = 0.0;
            _2867 = 0.0;
            _2869 = 0.0;
            _2871 = 0.0;
        }
        else
        {
            float _2862;
            float _2864;
            float _2866;
            float _2868;
            float _2870;
            float _2872;
            float _3006 = 0.0;
            float _3007 = 0.0;
            float _3008 = 0.0;
            float _3009 = 0.0;
            float _3010 = 0.0;
            float _3011 = 0.0;
            uint _3012 = 0u;
            uint _3021;
            bool _3022;
            for (;;)
            {
                _3021 = texelFetch(g_lightClassification, int((((_2754 << 5u) + (_2740 << 9u)) + (_3012 << 2u)) >> 2u)).x;
                _3022 = _3021 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3022)
                {
                    frontier_phi_61_pred = _3006;
                    frontier_phi_61_pred_1 = _3011;
                    frontier_phi_61_pred_2 = _3010;
                    frontier_phi_61_pred_3 = _3009;
                    frontier_phi_61_pred_4 = _3008;
                    frontier_phi_61_pred_5 = _3007;
                }
                else
                {
                    float _3130;
                    float _3131;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    uint _3136;
                    _3130 = _3006;
                    _3131 = _3007;
                    _3132 = _3008;
                    _3133 = _3009;
                    _3134 = _3010;
                    _3135 = _3011;
                    _3136 = _3021;
                    float _3062;
                    float _3063;
                    float _3064;
                    float _3065;
                    float _3066;
                    float _3067;
                    for (;;)
                    {
                        uint _3140 = uint(findLSB(_3136)) + (_3012 << 5u);
                        uint _3137 = (_3136 + 4294967295u) & _3136;
                        uint _3142 = _3140 * 48u;
                        vec4 _3156 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3142)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3142 + 3u)).x));
                        uint _3162 = (_3140 * 48u) + 4u;
                        vec4 _3175 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3162)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3162 + 3u)).x));
                        uint _3181 = (_3140 * 48u) + 8u;
                        vec3 _3192 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3181)).x, texelFetch(g_PointLightRenderingBuffer, int(_3181 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3181 + 2u)).x));
                        float _3196 = _3156.x - _2714;
                        float _3197 = _3156.y - _2715;
                        float _3198 = _3156.z - _2716;
                        float _3199 = dot(vec3(_3196, _3197, _3198), vec3(_3196, _3197, _3198));
                        float _3202 = inversesqrt(_3199);
                        float _3203 = _3202 * _3196;
                        float _3204 = _3202 * _3197;
                        float _3205 = _3202 * _3198;
                        float _3206 = dot(vec3(_956, _959, _962), vec3(_3203, _3204, _3205));
                        float _3211 = 1.0 - (_3199 * _3156.w);
                        float _4588 = isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0));
                        float _3212 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
                        float _3213 = sqrt(_3199) * _3175.w;
                        float _3216 = 1.39999997615814208984375 / (_3213 + 1.39999997615814208984375);
                        float _3217 = _3216 * _3216;
                        float _3220 = ((1.0 - _3217) * _3206) + _3217;
                        float _3223 = _3213 * _3213;
                        float _3227 = ((isnan(0.0) ? _3220 : (isnan(_3220) ? 0.0 : max(_3220, 0.0))) * _3212) / ((_3223 * 0.699999988079071044921875) + 1.0);
                        float _3231 = (-0.0) - _2714;
                        float _3232 = (-0.0) - _2715;
                        float _3233 = (-0.0) - _2716;
                        float _3237 = inversesqrt(dot(vec3(_3231, _3232, _3233), vec3(_3231, _3232, _3233)));
                        float _3238 = _3237 * _3231;
                        float _3239 = _3237 * _3232;
                        float _3240 = _3237 * _3233;
                        float _3248 = exp2(log2(1.0 / ((_3223 * 3.5) + 5.0)) * 0.25);
                        float _3249 = 1.0 - _1031;
                        float _3256 = sqrt(1.0 - ((1.0 - (_3249 * _3249)) * (1.0 - (_3248 * _3248))));
                        float _3257 = _3256 * _3256;
                        float _3258 = _3257 * _3257;
                        float _3259 = _3238 + _3203;
                        float _3260 = _3239 + _3204;
                        float _3261 = _3240 + _3205;
                        float _3265 = inversesqrt(dot(vec3(_3259, _3260, _3261), vec3(_3259, _3260, _3261)));
                        float _3269 = dot(vec3(_956, _959, _962), vec3(_3238, _3239, _3240));
                        float _4604 = isnan(0.0) ? _3269 : (isnan(_3269) ? 0.0 : max(_3269, 0.0));
                        float _3272 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
                        float _3273 = dot(vec3(_956, _959, _962), vec3(_3265 * _3259, _3265 * _3260, _3265 * _3261));
                        float _4615 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3276 = isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0));
                        float _3280 = ((_3276 * _3276) * (_3258 + (-1.0))) + 1.0;
                        float _3281 = _3216 * _3257;
                        float _3282 = _3281 * _3281;
                        float _3285 = ((1.0 - _3282) * _3206) + _3282;
                        float _4626 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
                        float _3286 = isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0));
                        float _3287 = 1.0 - _3257;
                        float _3297 = (0.5 / (((_3286 * ((_3272 * _3287) + _3257)) + 9.9999999392252902907785028219223e-09) + (((_3286 * _3287) + _3257) * _3272))) * _3286;
                        float _4637 = isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : max(_3297, 0.0));
                        float _3308 = (((_3258 * 3.1415927410125732421875) * (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0)))) / ((_3280 * _3280) * ((_3223 * 2.1991131305694580078125) + 3.141590118408203125))) * _3212;
                        _3065 = (_3227 * _3175.x) + _3133;
                        _3066 = (_3227 * _3175.y) + _3134;
                        _3067 = (_3227 * _3175.z) + _3135;
                        _3062 = (_3308 * _3192.x) + _3130;
                        _3063 = (_3308 * _3192.y) + _3131;
                        _3064 = (_3308 * _3192.z) + _3132;
                        if (_3137 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3130 = _3062;
                            _3131 = _3063;
                            _3132 = _3064;
                            _3133 = _3065;
                            _3134 = _3066;
                            _3135 = _3067;
                            _3136 = _3137;
                        }
                    }
                    frontier_phi_61_pred = _3062;
                    frontier_phi_61_pred_1 = _3067;
                    frontier_phi_61_pred_2 = _3066;
                    frontier_phi_61_pred_3 = _3065;
                    frontier_phi_61_pred_4 = _3064;
                    frontier_phi_61_pred_5 = _3063;
                }
                _2862 = frontier_phi_61_pred;
                _2872 = frontier_phi_61_pred_1;
                _2870 = frontier_phi_61_pred_2;
                _2868 = frontier_phi_61_pred_3;
                _2866 = frontier_phi_61_pred_4;
                _2864 = frontier_phi_61_pred_5;
                uint _3013 = _3012 + 1u;
                if (_3013 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3006 = _2862;
                    _3007 = _2864;
                    _3008 = _2866;
                    _3009 = _2868;
                    _3010 = _2870;
                    _3011 = _2872;
                    _3012 = _3013;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2861 = _2862;
            _2863 = _2864;
            _2865 = _2866;
            _2867 = _2868;
            _2869 = _2870;
            _2871 = _2872;
        }
        uvec4 _2875 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2876 = _2875.z;
        uint _2878 = (_2876 >> 8u) & 15u;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        float _2984;
        if (((4294967295u << _2878) & _2760) == 0u)
        {
            _2974 = _2861;
            _2976 = _2863;
            _2978 = _2865;
            _2980 = _2867;
            _2982 = _2869;
            _2984 = _2871;
        }
        else
        {
            float _2999 = inversesqrt(dot(vec3(_2714, _2715, _2716), vec3(_2714, _2715, _2716)));
            float _3000 = _2999 * _2714;
            float _3001 = _2999 * _2715;
            float _3002 = _2999 * _2716;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2878 < ((_2876 >> 12u) & 15u))
            {
                float _2975;
                float _2977;
                float _2979;
                float _2981;
                float _2983;
                float _2985;
                float _3113 = _2861;
                float _3114 = _2863;
                float _3115 = _2865;
                float _3116 = _2867;
                float _3117 = _2869;
                float _3118 = _2871;
                uint _3119 = _2878;
                uint _3128;
                bool _3129;
                for (;;)
                {
                    _3128 = texelFetch(g_lightClassification, int((((_2754 << 5u) + (_2740 << 9u)) + (_3119 << 2u)) >> 2u)).x;
                    _3129 = _3128 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3129)
                    {
                        frontier_phi_67_pred = _3116;
                        frontier_phi_67_pred_1 = _3117;
                        frontier_phi_67_pred_2 = _3118;
                        frontier_phi_67_pred_3 = _3115;
                        frontier_phi_67_pred_4 = _3114;
                        frontier_phi_67_pred_5 = _3113;
                    }
                    else
                    {
                        float _3313;
                        float _3314;
                        float _3315;
                        float _3316;
                        float _3317;
                        float _3318;
                        float _3606;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3610;
                        float _3611;
                        float _3326 = _3113;
                        float _3327 = _3114;
                        float _3328 = _3115;
                        float _3329 = _3116;
                        float _3330 = _3117;
                        float _3331 = _3118;
                        uint _3332 = _3128;
                        uint _3333;
                        vec4 _3358;
                        float _3359;
                        vec4 _3374;
                        vec3 _3386;
                        vec4 _3401;
                        vec4 _3416;
                        float _3462;
                        bool _3463;
                        for (;;)
                        {
                            uint _3343 = ((_3119 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3332));
                            _3333 = (_3332 + 4294967295u) & _3332;
                            uint _3345 = _3343 * 40u;
                            _3358 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3345)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 3u)).x));
                            _3359 = _3358.w;
                            uint _3361 = (_3343 * 40u) + 4u;
                            _3374 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3361)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 3u)).x));
                            uint _3376 = (_3343 * 40u) + 8u;
                            _3386 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3376)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 2u)).x));
                            uint _3388 = (_3343 * 40u) + 16u;
                            _3401 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 3u)).x));
                            uint _3403 = (_3343 * 40u) + 20u;
                            _3416 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3403)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 3u)).x));
                            uint _3418 = (_3343 * 40u) + 24u;
                            vec4 _3431 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3418)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 3u)).x));
                            uint _3437 = (_3343 * 40u) + 28u;
                            vec4 _3450 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3437)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 3u)).x));
                            _3462 = fma(_2716, _3450.z, fma(_2715, _3450.y, _3450.x * _2714)) + _3450.w;
                            _3463 = !((fma(_2716, _3431.z, fma(_2715, _3431.y, _3431.x * _2714)) + _3431.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3463)
                            {
                                float _3490 = _3358.x - _2714;
                                float _3491 = _3358.y - _2715;
                                float _3492 = _3358.z - _2716;
                                float _3493 = dot(vec3(_3490, _3491, _3492), vec3(_3490, _3491, _3492));
                                float _3496 = inversesqrt(_3493);
                                float _3497 = _3496 * _3490;
                                float _3498 = _3496 * _3491;
                                float _3499 = _3496 * _3492;
                                float _3503 = 1.0 - (_3493 / (_3359 * _3359));
                                float _4648 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0));
                                float _3504 = isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0));
                                float _3508 = sqrt(_3493) * _3374.w;
                                float _3510 = 1.39999997615814208984375 / (_3508 + 1.39999997615814208984375);
                                float _3511 = _3510 * _3510;
                                float _3514 = ((1.0 - _3511) * dot(vec3(_3497, _3498, _3499), vec3(_956, _959, _962))) + _3511;
                                float _3517 = _3508 * _3508;
                                float _3521 = (fma(_2716, _3401.z, fma(_2715, _3401.y, _3401.x * _2714)) + _3401.w) / _3462;
                                float _3522 = (fma(_2716, _3416.z, fma(_2715, _3416.y, _3416.x * _2714)) + _3416.w) / _3462;
                                float _3526 = 1.0 - dot(vec2(_3521, _3522), vec2(_3521, _3522));
                                float _4664 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                                float _3527 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
                                float _3528 = _3527 * (((isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0))) * _3504) / ((_3517 * 0.699999988079071044921875) + 1.0));
                                float _3540 = exp2(log2(1.0 / ((_3517 * 3.5) + 5.0)) * 0.25);
                                float _3541 = 1.0 - _1031;
                                float _3548 = sqrt(1.0 - ((1.0 - (_3541 * _3541)) * (1.0 - (_3540 * _3540))));
                                float _3549 = _3548 * _3548;
                                float _3550 = _3549 * _3549;
                                float _3551 = _3497 - _3000;
                                float _3552 = _3498 - _3001;
                                float _3553 = _3499 - _3002;
                                float _3557 = inversesqrt(dot(vec3(_3551, _3552, _3553), vec3(_3551, _3552, _3553)));
                                float _3561 = dot(vec3(_956, _959, _962), vec3((-0.0) - _3000, (-0.0) - _3001, (-0.0) - _3002));
                                float _4675 = isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : max(_3561, 0.0));
                                float _3564 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
                                float _3565 = dot(vec3(_956, _959, _962), vec3(_3557 * _3551, _3557 * _3552, _3557 * _3553));
                                float _4686 = isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0));
                                float _3568 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
                                float _3572 = ((_3568 * _3568) * (_3550 + (-1.0))) + 1.0;
                                float _3573 = _3510 * _3549;
                                float _3574 = _3573 * _3573;
                                float _3580 = ((1.0 - _3574) * dot(vec3(_956, _959, _962), vec3(_3497, _3498, _3499))) + _3574;
                                float _4697 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3581 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
                                float _3582 = 1.0 - _3549;
                                float _3592 = (0.5 / (((_3581 * ((_3564 * _3582) + _3549)) + 9.9999999392252902907785028219223e-09) + (((_3581 * _3582) + _3549) * _3564))) * _3581;
                                float _4708 = isnan(0.0) ? _3592 : (isnan(_3592) ? 0.0 : max(_3592, 0.0));
                                float _3602 = (_3527 * _3504) * (((_3550 * 3.1415927410125732421875) * (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0)))) / ((_3572 * _3572) * ((_3517 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3602 * _3386.x;
                                frontier_phi_73_pred_1 = _3602 * _3386.y;
                                frontier_phi_73_pred_2 = _3528 * _3374.z;
                                frontier_phi_73_pred_3 = _3528 * _3374.y;
                                frontier_phi_73_pred_4 = _3528 * _3374.x;
                                frontier_phi_73_pred_5 = _3602 * _3386.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3606 = frontier_phi_73_pred;
                            _3607 = frontier_phi_73_pred_1;
                            _3611 = frontier_phi_73_pred_2;
                            _3610 = frontier_phi_73_pred_3;
                            _3609 = frontier_phi_73_pred_4;
                            _3608 = frontier_phi_73_pred_5;
                            _3316 = _3609 + _3329;
                            _3317 = _3610 + _3330;
                            _3318 = _3611 + _3331;
                            _3313 = _3606 + _3326;
                            _3314 = _3607 + _3327;
                            _3315 = _3608 + _3328;
                            if (_3333 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3326 = _3313;
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3316;
                                _3330 = _3317;
                                _3331 = _3318;
                                _3332 = _3333;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3316;
                        frontier_phi_67_pred_1 = _3317;
                        frontier_phi_67_pred_2 = _3318;
                        frontier_phi_67_pred_3 = _3315;
                        frontier_phi_67_pred_4 = _3314;
                        frontier_phi_67_pred_5 = _3313;
                    }
                    _2981 = frontier_phi_67_pred;
                    _2983 = frontier_phi_67_pred_1;
                    _2985 = frontier_phi_67_pred_2;
                    _2979 = frontier_phi_67_pred_3;
                    _2977 = frontier_phi_67_pred_4;
                    _2975 = frontier_phi_67_pred_5;
                    uint _3120 = _3119 + 1u;
                    if (_3120 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3113 = _2975;
                        _3114 = _2977;
                        _3115 = _2979;
                        _3116 = _2981;
                        _3117 = _2983;
                        _3118 = _2985;
                        _3119 = _3120;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2983;
                frontier_phi_55_56_ladder_1 = _2985;
                frontier_phi_55_56_ladder_2 = _2981;
                frontier_phi_55_56_ladder_3 = _2979;
                frontier_phi_55_56_ladder_4 = _2977;
                frontier_phi_55_56_ladder_5 = _2975;
            }
            else
            {
                frontier_phi_55_56_ladder = _2869;
                frontier_phi_55_56_ladder_1 = _2871;
                frontier_phi_55_56_ladder_2 = _2867;
                frontier_phi_55_56_ladder_3 = _2865;
                frontier_phi_55_56_ladder_4 = _2863;
                frontier_phi_55_56_ladder_5 = _2861;
            }
            _2974 = frontier_phi_55_56_ladder_5;
            _2976 = frontier_phi_55_56_ladder_4;
            _2978 = frontier_phi_55_56_ladder_3;
            _2980 = frontier_phi_55_56_ladder_2;
            _2982 = frontier_phi_55_56_ladder;
            _2984 = frontier_phi_55_56_ladder_1;
        }
        float _2989 = isnan(1.0) ? _1015 : (isnan(_1015) ? 1.0 : min(_1015, 1.0));
        _2773 = (_2989 * _2980) + _2206;
        _2775 = (_2989 * _2982) + _2208;
        _2777 = (_2989 * _2984) + _2210;
        _2779 = ((_2974 * _999) * _2989) + _2554;
        _2781 = ((_2976 * _1001) * _2989) + _2556;
        _2783 = ((_2978 * _1002) * _2989) + _2558;
    }
    else
    {
        _2773 = _2206;
        _2775 = _2208;
        _2777 = _2210;
        _2779 = _2554;
        _2781 = _2556;
        _2783 = _2558;
    }
    float _4724 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _4735 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _4746 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    uint _2803 = _281 + 6u;
    float _2811 = _937 / cbSceneParam._m0[86u].x;
    float _2812 = _938 / cbSceneParam._m0[86u].y;
    vec4 _2826 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2811, _2812, (log2((isnan(cbSceneParam._m0[77u].w) ? _872 : (isnan(_872) ? cbSceneParam._m0[77u].w : min(_872, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2828 = _2826.x;
    float _2829 = _2826.y;
    float _2830 = _2826.z;
    float _2831 = _2826.w;
    float _2924;
    float _2926;
    float _2928;
    float _2930;
    if (_872 > cbSceneParam._m0[78u].w)
    {
        float _2886 = isnan(_872) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _872 : min(cbSceneParam._m0[80u].w, _872));
        float _2887 = _2886 / _872;
        float _2898 = _2887 * _922;
        float _2899 = _923 * _2887;
        float _2900 = (-0.0) - _2899;
        float _2902 = _2887 * _924;
        float _2904 = (cbSceneParam._m0[77u].w * _2900) / _2886;
        float _2905 = _2904 + cbSceneParam._m0[79u].w;
        float _2906 = cbSceneParam._m0[79u].w - _2899;
        float _2912 = sqrt(((_2898 * _2898) + (_2899 * _2899)) + (_2902 * _2902));
        float _2915 = (1.0 - (cbSceneParam._m0[77u].w / _2886)) * _2912;
        float _2920 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2922 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3075;
        if (abs((_2900 - _2904) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3075 = ((((_2905 > 0.0) ? exp2(_2920 * _2905) : (2.0 - exp2(_2922 * _2905))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2915;
        }
        else
        {
            float _3035 = 1.0 / cbSceneParam._m0[80u].x;
            float _3036 = isnan(_2906) ? _2905 : (isnan(_2905) ? _2906 : max(_2905, _2906));
            float _3037 = isnan(_2906) ? _2905 : (isnan(_2905) ? _2906 : min(_2905, _2906));
            float _3046 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : min(_3036, 0.0));
            float _3047 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : min(_3037, 0.0));
            _3075 = ((abs(_2912 / _2900) * cbSceneParam._m0[80u].y) * ((((_3046 - _3047) * 2.0) - ((exp2(_2920 * (isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0)))) - exp2(_2920 * (isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0))))) * _3035)) - ((exp2(_2922 * _3046) - exp2(_2922 * _3047)) * _3035))) + (_2915 * cbSceneParam._m0[80u].z);
        }
        vec4 _3077 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2811, _2812, 1.0), 0.0);
        float _3086 = exp2((_3075 * (-1.44269502162933349609375)) * (1.0 - _3077.w));
        float _3087 = log2(_3086);
        float _3103 = log2(_2831);
        _2924 = (exp2(_3103 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].x)) * _3077.x) / cbSceneParam._m0[78u].x)) + _2828;
        _2926 = (exp2(_3103 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].y)) * _3077.y) / cbSceneParam._m0[78u].y)) + _2829;
        _2928 = (exp2(_3103 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3087 * cbSceneParam._m0[78u].z)) * _3077.z) / cbSceneParam._m0[78u].z)) + _2830;
        _2930 = _3086 * _2831;
    }
    else
    {
        _2924 = _2828;
        _2926 = _2829;
        _2928 = _2830;
        _2930 = _2831;
    }
    float _2942 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2943 = _2942 == 3.0;
    float _2944 = log2(_2930);
    float _2951 = exp2(_2944 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (_2773 + ((isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0))) * _1015))) + ((_2779 + ((isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0))) * _1823)) * cbPerFrame._m0[3u].x));
    float _2952 = exp2(_2944 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0))) * (_2775 + ((isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0))) * _1015))) + ((_2781 + ((isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0))) * _1823)) * cbPerFrame._m0[3u].x));
    float _2953 = exp2(_2944 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0))) * (_2777 + ((isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0))) * _1015))) + ((_2783 + ((isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0))) * _1823)) * cbPerFrame._m0[3u].x));
    float _2962 = (_2942 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2962 * (_2943 ? _2951 : (_2951 + (cbSceneParam._m0[72u].w * _2924)));
    SV_Target.y = _2962 * (_2943 ? _2952 : (_2952 + (cbSceneParam._m0[72u].w * _2926)));
    SV_Target.z = _2962 * (_2943 ? _2953 : (_2953 + (cbSceneParam._m0[72u].w * _2928)));
    SV_Target.w = cbInstanceData._m0[_2803].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2803].w;
}


