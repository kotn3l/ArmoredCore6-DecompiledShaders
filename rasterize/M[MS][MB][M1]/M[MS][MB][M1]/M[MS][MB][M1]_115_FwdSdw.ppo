#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1305;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _230 = _229 * _221;
    float _231 = _229 * _222;
    float _232 = _229 * _223;
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = _236 * NORMAL.x;
    float _238 = _236 * NORMAL.y;
    float _239 = _236 * NORMAL.z;
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = _243 * TANGENT.x;
    float _245 = _243 * TANGENT.y;
    float _246 = _243 * TANGENT.z;
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _259 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3915 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _3926 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _3937 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    uint _270 = uint(roundEven(NORMAL.w)) * 13u;
    uint _275 = _270 + 1u;
    uint _279 = _270 + 2u;
    float _288 = sqrt(((cbInstanceData._m0[_275].x * cbInstanceData._m0[_275].x) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x)) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x));
    float _289 = _288 * TEXCOORD.z;
    float _290 = _288 * TEXCOORD.w;
    vec4 _303 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _289) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _290) + cbTextureTilingScale._m0[13u].w));
    vec4 _327 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _332 = _327.x * cbMtdParam._m0[11u].x;
    float _333 = _327.y * cbMtdParam._m0[11u].y;
    float _334 = _327.z * cbMtdParam._m0[11u].z;
    vec4 _353 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _289) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _290) + cbTextureTilingScale._m0[5u].w));
    vec4 _389 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _391 = _389.x;
    float _403 = dot(vec4(_391, _389.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _420 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_391 - _403) * cbMtdParam._m0[24u].y) + _403) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3948 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _421 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
    float _428 = (_421 * ((_353.x * cbMtdParam._m0[12u].x) - _332)) + _332;
    float _429 = (_421 * ((_353.y * cbMtdParam._m0[12u].y) - _333)) + _333;
    float _430 = (_421 * ((_353.z * cbMtdParam._m0[12u].z) - _334)) + _334;
    float _434 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _303.x) * _428;
    float _437 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _303.y) * _429;
    float _440 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _303.z) * _430;
    float _447 = ((_428 - _434) * (isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0)))) + _434;
    float _448 = ((_429 - _437) * (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0)))) + _437;
    float _449 = ((_430 - _440) * (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) + _440;
    vec4 _467 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _289) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _290) + cbTextureTilingScale._m0[20u].w));
    vec4 _494 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _289) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _290) + cbTextureTilingScale._m0[4u].w));
    vec4 _511 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _513 = _511.x;
    float _514 = _511.y;
    float _515 = _511.z;
    float _524 = ((_494.z - _515) * _421) + _515;
    float _527 = ((((_494.x - _513) * _421) + _513) * 2.0) + (-1.0);
    float _528 = ((((_494.y - _514) * _421) + _514) * 2.0) + (-1.0);
    float _529 = dot(vec2(_527, _528), vec2(_527, _528));
    float _3959 = isnan(0.0) ? _529 : (isnan(_529) ? 0.0 : max(_529, 0.0));
    float _534 = sqrt(1.0 - (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0))));
    vec4 _554 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _566 = (_527 + ((((_467.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_554.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _567 = (_528 + ((((_467.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_554.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _570 = fma(_534, _237, fma(_567, _244, _566 * _230));
    float _573 = fma(_534, _238, fma(_567, _245, _566 * _231));
    float _576 = fma(_534, _239, fma(_567, _246, _566 * _232));
    float _580 = inversesqrt(dot(vec3(_570, _573, _576), vec3(_570, _573, _576)));
    vec4 _607 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _289) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _290) + cbTextureTilingScale._m0[11u].w));
    float _609 = _607.x;
    float _610 = 1.0 - _609;
    float _614 = ((_609 - _610) * cbMtdParam._m0[24u].z) + _610;
    float _616 = (cbMtdParam._m0[19u].x + dot(vec4(_580 * _570, _580 * _573, _580 * _576, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_614 * cbMtdParam._m0[21u].z);
    float _3970 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _617 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _632 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_614 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3981 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _633 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _637 = ((_617 * (cbMtdParam._m0[17u].x - _447)) * _633) + _447;
    float _638 = ((_617 * (cbMtdParam._m0[17u].y - _448)) * _633) + _448;
    float _639 = ((_617 * (cbMtdParam._m0[17u].z - _449)) * _633) + _449;
    vec4 _651 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _665 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _667 = _665.x;
    float _685 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _289) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _290) + cbTextureTilingScale._m0[9u].w)).x - _667) * _421) + _667;
    float _689 = ((_651.x - _685) * cbMtdParam._m0[19u].z) + _685;
    float _692 = _689 - ((_633 * _617) * _689);
    float _697 = (((_467.z - _524) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _524;
    float _701 = ((_554.z - _697) * cbMtdParam._m0[19u].w) + _697;
    vec4 _714 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _289) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _290) + cbTextureTilingScale._m0[15u].w));
    float _721 = (_714.x * 2.0) + (-1.0);
    float _722 = (_714.y * 2.0) + (-1.0);
    float _723 = dot(vec2(_721, _722), vec2(_721, _722));
    float _3992 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _732 = (((_714.z - _701) * _617) * _633) + _701;
    float _747 = (((cbMtdParam._m0[21u].x * _566) + ((_721 - _566) * _617)) * _633) + _566;
    float _748 = (((cbMtdParam._m0[21u].x * _567) + ((_722 - _567) * _617)) * _633) + _567;
    float _749 = (((sqrt(1.0 - (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0)))) - _534) * _617) * _633) + _534;
    float _751 = cbMtdParam._m0[22u].x + _554.w;
    float _754 = fma(_749, _237, fma(_748, _244, _747 * _230));
    float _757 = fma(_749, _238, fma(_748, _245, _747 * _231));
    float _760 = fma(_749, _239, fma(_748, _246, _747 * _232));
    float _764 = inversesqrt(dot(vec3(_754, _757, _760), vec3(_754, _757, _760)));
    float _765 = _764 * _754;
    float _766 = _764 * _757;
    float _767 = _764 * _760;
    float _4003 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _768 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _4014 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _4025 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _4036 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _4047 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _4058 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _773 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _787 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _828 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _838 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _828);
    float _839 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _828);
    float _840 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _828);
    float _844 = inversesqrt(dot(vec3(_838, _839, _840), vec3(_838, _839, _840)));
    float _845 = _838 * _844;
    float _846 = _839 * _844;
    float _847 = _840 * _844;
    float _853 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _854 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _872 = fma(_767, cbSceneParam._m0[5u].z, fma(_766, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _765));
    float _875 = fma(_767, cbSceneParam._m0[6u].z, fma(_766, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _765));
    float _878 = fma(_767, cbSceneParam._m0[7u].z, fma(_766, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _765));
    uint _892 = (_270 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _898 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) * cbInstanceData._m0[_892].x;
    float _899 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0)))) * cbInstanceData._m0[_892].y;
    float _900 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) * cbInstanceData._m0[_892].z;
    float _4069 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _901 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _4080 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _902 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _4091 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
    float _903 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _904 = 1.0 - _773;
    float _905 = _901 * _904;
    float _906 = _902 * _904;
    float _907 = _903 * _904;
    float _912 = (_901 + (-0.039999999105930328369140625)) * _773;
    float _913 = (_902 + (-0.039999999105930328369140625)) * _773;
    float _914 = (_903 + (-0.039999999105930328369140625)) * _773;
    float _915 = _912 + 0.039999999105930328369140625;
    float _917 = _913 + 0.039999999105930328369140625;
    float _918 = _914 + 0.039999999105930328369140625;
    vec4 _927 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _853, cbSceneParam._m0[86u].y * _854));
    float _931 = ((isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0))) * TEXCOORD_5.w) * _927.x;
    float _932 = dot(vec3(_765, _766, _767), vec3(_845, _846, _847));
    float _935 = _932 * 2.0;
    float _939 = (_935 * _765) - _845;
    float _940 = (_935 * _766) - _846;
    float _941 = (_935 * _767) - _847;
    float _945 = abs(dot(vec3(_845, _846, _847), vec3(_765, _766, _767)));
    float _4102 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
    float _947 = sqrt(_768);
    float _960 = exp2((_947 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_947 * 3.0));
    float _966 = (1.0 - _960) * ((_947 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _967 = _960 * _947;
    float _995 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _999 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1003 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1304;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1029 = fma(_1003, cbModelParam._m0[26u].z, fma(_999, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _995));
        float _1033 = fma(_1003, cbModelParam._m0[27u].z, fma(_999, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _995));
        float _1037 = fma(_1003, cbModelParam._m0[28u].z, fma(_999, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _995));
        float _1062 = _995 + _765;
        float _1063 = _999 + _766;
        float _1064 = _1003 + _767;
        float _1074 = fma(_1064, cbModelParam._m0[26u].z, fma(_1063, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1062)) - _1029;
        float _1075 = fma(_1064, cbModelParam._m0[27u].z, fma(_1063, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1062)) - _1033;
        float _1076 = fma(_1064, cbModelParam._m0[28u].z, fma(_1063, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1062)) - _1037;
        float _1080 = inversesqrt(dot(vec3(_1074, _1075, _1076), vec3(_1074, _1075, _1076)));
        float _1093 = ((_1080 * _1074) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1029 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1094 = ((_1080 * _1075) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1033 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1095 = ((_1080 * _1076) / cbModelParam._m0[34u].z) + ((((((_1037 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1098 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1093, _1094, _1095), 0.0);
        vec4 _1105 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1093, _1094, _1095), 0.0);
        vec4 _1112 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1093, _1094, _1095), 0.0);
        vec4 _1119 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1093, _1094, _1095), 0.0);
        float _1132 = exp2((_1098.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1098.x + (-0.5));
        float _1134 = _1132 * (_1098.y + (-0.5));
        float _1135 = _1132 * (_1098.z + (-0.5));
        float _1142 = exp2((_1105.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1105.x + (-0.5));
        float _1144 = _1142 * (_1105.y + (-0.5));
        float _1145 = _1142 * (_1105.z + (-0.5));
        float _1152 = exp2((_1112.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = _1152 * (_1112.x + (-0.5));
        float _1154 = _1152 * (_1112.y + (-0.5));
        float _1155 = _1152 * (_1112.z + (-0.5));
        float _1162 = exp2((_1119.w + (-0.5)) * 20.0) * 2.0;
        float _1163 = _1162 * (_1119.x + (-0.5));
        float _1164 = _1162 * (_1119.y + (-0.5));
        float _1165 = _1162 * (_1119.z + (-0.5));
        float _1166 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = _1133 * 0.5;
        float _1170 = _1143 * 0.5;
        float _1171 = _1153 * 0.5;
        float _1172 = dot(vec3(_1169, _1170, _1171), vec3(_1169, _1170, _1171));
        float _1177 = (_1172 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1172);
        float _1186 = (dot(vec3(_765, _766, _767), vec3(_1177 * _1169, _1177 * _1170, _1177 * _1171)) + 1.0) * 0.5;
        float _4128 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1196 = sqrt(((_1170 * _1170) + (_1169 * _1169)) + (_1171 * _1171)) / (_1166 + 9.9999997473787516355514526367188e-06);
        float _4139 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1198 = _1197 * 2.0;
        float _1202 = (1.0 - _1197) / (_1197 + 1.0);
        float _4150 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1212 = ((((1.0 - _1203) * (_1198 + 2.0)) * exp2(log2(isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * (_1198 + 1.0))) + _1203) * _1166;
        float _1213 = _1134 * 0.5;
        float _1214 = _1144 * 0.5;
        float _1215 = _1154 * 0.5;
        float _1216 = dot(vec3(_1213, _1214, _1215), vec3(_1213, _1214, _1215));
        float _1221 = (_1216 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1216);
        float _1229 = (dot(vec3(_765, _766, _767), vec3(_1221 * _1213, _1221 * _1214, _1221 * _1215)) + 1.0) * 0.5;
        float _4161 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1238 = sqrt(((_1214 * _1214) + (_1213 * _1213)) + (_1215 * _1215)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _4172 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1240 = _1239 * 2.0;
        float _1244 = (1.0 - _1239) / (_1239 + 1.0);
        float _4183 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1254 = ((((1.0 - _1245) * (_1240 + 2.0)) * exp2(log2(isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0))) * (_1240 + 1.0))) + _1245) * _1167;
        float _1255 = _1135 * 0.5;
        float _1256 = _1145 * 0.5;
        float _1257 = _1155 * 0.5;
        float _1258 = dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257));
        float _1263 = (_1258 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1258);
        float _1271 = (dot(vec3(_765, _766, _767), vec3(_1263 * _1255, _1263 * _1256, _1263 * _1257)) + 1.0) * 0.5;
        float _4194 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1280 = sqrt(((_1256 * _1256) + (_1255 * _1255)) + (_1257 * _1257)) / (_1168 + 9.9999997473787516355514526367188e-06);
        float _4205 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1282 = _1281 * 2.0;
        float _1286 = (1.0 - _1281) / (_1281 + 1.0);
        float _4216 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1287 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1296 = ((((1.0 - _1287) * (_1282 + 2.0)) * exp2(log2(isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_1282 + 1.0))) + _1287) * _1168;
        _1304 = _1135;
        _1306 = _1134;
        _1307 = _1133;
        _1308 = _1145;
        _1309 = _1144;
        _1310 = _1143;
        _1311 = _1155;
        _1312 = _1154;
        _1313 = _1153;
        _1314 = _1168;
        _1315 = _1167;
        _1316 = _1166;
        _1317 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)));
        _1318 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0)));
        _1319 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0)));
    }
    else
    {
        _1304 = _1305;
        _1306 = _1305;
        _1307 = _1305;
        _1308 = _1305;
        _1309 = _1305;
        _1310 = _1305;
        _1311 = _1305;
        _1312 = _1305;
        _1313 = _1305;
        _1314 = _1305;
        _1315 = _1305;
        _1316 = _1305;
        _1317 = 0.0;
        _1318 = 0.0;
        _1319 = 0.0;
    }
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1344 = fma(_1003, cbModelParam._m0[30u].z, fma(_999, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _995));
        float _1348 = fma(_1003, cbModelParam._m0[31u].z, fma(_999, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _995));
        float _1352 = fma(_1003, cbModelParam._m0[32u].z, fma(_999, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _995));
        float _1375 = _995 + _765;
        float _1376 = _999 + _766;
        float _1377 = _1003 + _767;
        float _1387 = fma(_1377, cbModelParam._m0[30u].z, fma(_1376, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1375)) - _1344;
        float _1388 = fma(_1377, cbModelParam._m0[31u].z, fma(_1376, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1375)) - _1348;
        float _1389 = fma(_1377, cbModelParam._m0[32u].z, fma(_1376, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1375)) - _1352;
        float _1393 = inversesqrt(dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389)));
        float _1406 = ((_1393 * _1387) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1344 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1407 = ((_1393 * _1388) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1348 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1408 = ((_1393 * _1389) / cbModelParam._m0[35u].z) + ((((((_1352 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1410 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1417 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1424 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1431 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        float _1443 = exp2((_1410.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1410.x + (-0.5));
        float _1445 = _1443 * (_1410.y + (-0.5));
        float _1446 = _1443 * (_1410.z + (-0.5));
        float _1453 = exp2((_1417.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1417.x + (-0.5));
        float _1455 = _1453 * (_1417.y + (-0.5));
        float _1456 = _1453 * (_1417.z + (-0.5));
        float _1463 = exp2((_1424.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1424.x + (-0.5));
        float _1465 = _1463 * (_1424.y + (-0.5));
        float _1466 = _1463 * (_1424.z + (-0.5));
        float _1473 = exp2((_1431.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1431.x + (-0.5));
        float _1475 = _1473 * (_1431.y + (-0.5));
        float _1476 = _1473 * (_1431.z + (-0.5));
        float _1477 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1478 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = _1444 * 0.5;
        float _1481 = _1454 * 0.5;
        float _1482 = _1464 * 0.5;
        float _1483 = dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482));
        float _1488 = (_1483 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1483);
        float _1496 = (dot(vec3(_765, _766, _767), vec3(_1488 * _1480, _1488 * _1481, _1488 * _1482)) + 1.0) * 0.5;
        float _4257 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1505 = sqrt(((_1481 * _1481) + (_1480 * _1480)) + (_1482 * _1482)) / (_1477 + 9.9999997473787516355514526367188e-06);
        float _4268 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1507 = _1506 * 2.0;
        float _1511 = (1.0 - _1506) / (_1506 + 1.0);
        float _4279 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1521 = ((((1.0 - _1512) * (_1507 + 2.0)) * exp2(log2(isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_1507 + 1.0))) + _1512) * _1477;
        float _1522 = _1445 * 0.5;
        float _1523 = _1455 * 0.5;
        float _1524 = _1465 * 0.5;
        float _1525 = dot(vec3(_1522, _1523, _1524), vec3(_1522, _1523, _1524));
        float _1530 = (_1525 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1525);
        float _1538 = (dot(vec3(_765, _766, _767), vec3(_1530 * _1522, _1530 * _1523, _1530 * _1524)) + 1.0) * 0.5;
        float _4290 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1547 = sqrt(((_1523 * _1523) + (_1522 * _1522)) + (_1524 * _1524)) / (_1478 + 9.9999997473787516355514526367188e-06);
        float _4301 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1549 = _1548 * 2.0;
        float _1553 = (1.0 - _1548) / (_1548 + 1.0);
        float _4312 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
        float _1563 = ((((1.0 - _1554) * (_1549 + 2.0)) * exp2(log2(isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))) * (_1549 + 1.0))) + _1554) * _1478;
        float _1564 = _1446 * 0.5;
        float _1565 = _1456 * 0.5;
        float _1566 = _1466 * 0.5;
        float _1567 = dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566));
        float _1572 = (_1567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1567);
        float _1580 = (dot(vec3(_765, _766, _767), vec3(_1572 * _1564, _1572 * _1565, _1572 * _1566)) + 1.0) * 0.5;
        float _4323 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1589 = sqrt(((_1565 * _1565) + (_1564 * _1564)) + (_1566 * _1566)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4334 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1591 = _1590 * 2.0;
        float _1595 = (1.0 - _1590) / (_1590 + 1.0);
        float _4345 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _1605 = ((((1.0 - _1596) * (_1591 + 2.0)) * exp2(log2(isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_1591 + 1.0))) + _1596) * _1479;
        _1613 = _1446;
        _1614 = _1445;
        _1615 = _1444;
        _1616 = _1456;
        _1617 = _1455;
        _1618 = _1454;
        _1619 = _1466;
        _1620 = _1465;
        _1621 = _1464;
        _1622 = _1479;
        _1623 = _1478;
        _1624 = _1477;
        _1625 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0)));
        _1626 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0)));
        _1627 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)));
    }
    else
    {
        _1613 = _1305;
        _1614 = _1305;
        _1615 = _1305;
        _1616 = _1305;
        _1617 = _1305;
        _1618 = _1305;
        _1619 = _1305;
        _1620 = _1305;
        _1621 = _1305;
        _1622 = _1305;
        _1623 = _1305;
        _1624 = _1305;
        _1625 = 0.0;
        _1626 = 0.0;
        _1627 = 0.0;
    }
    float _1637 = (cbModelParam._m0[1u].x * (_1625 - _1317)) + _1317;
    float _1638 = (cbModelParam._m0[1u].x * (_1626 - _1318)) + _1318;
    float _1639 = (cbModelParam._m0[1u].x * (_1627 - _1319)) + _1319;
    float _1660 = fma(_1639, cbSceneParam._m0[89u].z, fma(_1638, cbSceneParam._m0[89u].y, _1637 * cbSceneParam._m0[89u].x));
    float _1663 = fma(_1639, cbSceneParam._m0[90u].z, fma(_1638, cbSceneParam._m0[90u].y, _1637 * cbSceneParam._m0[90u].x));
    float _1666 = fma(_1639, cbSceneParam._m0[91u].z, fma(_1638, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1637));
    float _1681 = _939 * 0.5;
    float _1682 = _940 * 0.5;
    float _1683 = _941 * 0.5;
    float _1684 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1615, _1618, _1621, _1624));
    float _1687 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1614, _1617, _1620, _1623));
    float _1690 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1613, _1616, _1619, _1622));
    float _1724;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1697 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1304, _1308, _1311, _1314));
        float _1701 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1306, _1309, _1312, _1315));
        float _1705 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1307, _1310, _1313, _1316));
        float _1712 = dot(vec4(cbModelParam._m0[39u]), vec4(_1681, _1682, _1683, 1.0));
        _1724 = dot(vec3(isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)), isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0)), isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1712) ? 0.0 : (isnan(0.0) ? _1712 : max(0.0, _1712))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1724 = 1.0;
    }
    float _1735;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1726 = dot(vec4(cbModelParam._m0[40u]), vec4(_1681, _1682, _1683, 1.0));
        _1735 = dot(vec3(isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)), isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1726) ? 0.0 : (isnan(0.0) ? _1726 : max(0.0, _1726))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1735 = 1.0;
    }
    float _1739 = (_1735 * cbModelParam._m0[1u].x) + (_1724 * (1.0 - cbModelParam._m0[1u].x));
    float _1749 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _768);
    float _1750 = isnan(_1749) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1749 : min(cbModelParam._m0[25u].z, _1749));
    float _1831;
    float _1833;
    float _1835;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1798 = fma(_1003, cbModelParam._m0[13u].z, fma(_999, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _995)) + cbModelParam._m0[13u].w;
        float _1802 = fma(_1003, cbModelParam._m0[14u].z, fma(_999, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _995)) + cbModelParam._m0[14u].w;
        float _1806 = fma(_1003, cbModelParam._m0[15u].z, fma(_999, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _995)) + cbModelParam._m0[15u].w;
        float _1809 = fma(_941, cbModelParam._m0[13u].z, fma(_940, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _939));
        float _1812 = fma(_941, cbModelParam._m0[14u].z, fma(_940, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _939));
        float _1815 = fma(_941, cbModelParam._m0[15u].z, fma(_940, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _939));
        float _1843;
        if (_1809 > 0.0)
        {
            _1843 = abs((1.0 - _1798) / _1809);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1798 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1843 = frontier_phi_14_12_ladder;
        }
        float _2015;
        if (_1812 > 0.0)
        {
            _2015 = abs((1.0 - _1802) / _1812);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1802 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2015 = frontier_phi_23_19_ladder;
        }
        float _2310;
        if (_1815 > 0.0)
        {
            _2310 = abs((1.0 - _1806) / _1815);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1806 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2310 = frontier_phi_35_30_ladder;
        }
        float _2312 = isnan(_2015) ? _1843 : (isnan(_1843) ? _2015 : min(_1843, _2015));
        float _2313 = isnan(_2310) ? _2312 : (isnan(_2312) ? _2310 : min(_2312, _2310));
        float _2317 = (_2313 * _1809) + _1798;
        float _2318 = (_2313 * _1812) + _1802;
        float _2319 = (_2313 * _1815) + _1806;
        float _2320 = _2313 * 9.9999997473787516355514526367188e-05;
        float _2322 = (-1.0) - _2320;
        float _2324 = _2320 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2319 > _2324) || ((_2319 < _2322) || ((_2318 > _2324) || ((_2318 < _2322) || ((_2317 < _2322) || (_2317 > _2324))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2464 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2319, cbModelParam._m0[9u].z, fma(_2318, cbModelParam._m0[9u].y, _2317 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2319, cbModelParam._m0[10u].z, fma(_2318, cbModelParam._m0[10u].y, _2317 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2319, cbModelParam._m0[11u].z, fma(_2318, cbModelParam._m0[11u].y, _2317 * cbModelParam._m0[11u].x))), _1750);
            frontier_phi_13_35_ladder = _2464.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2464.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2464.x * cbModelParam._m0[1u].y;
        }
        _1831 = frontier_phi_13_35_ladder_2;
        _1833 = frontier_phi_13_35_ladder_1;
        _1835 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1819 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_939, _940, _941), _1750);
        _1831 = _1819.x * cbModelParam._m0[1u].y;
        _1833 = _1819.y * cbModelParam._m0[1u].y;
        _1835 = _1819.z * cbModelParam._m0[1u].y;
    }
    float _1839 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _768);
    float _1840 = isnan(_1839) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1839 : min(cbModelParam._m0[25u].w, _1839));
    float _1930;
    float _1932;
    float _1934;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1894 = fma(_1003, cbModelParam._m0[21u].z, fma(_999, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _995)) + cbModelParam._m0[21u].w;
        float _1898 = fma(_1003, cbModelParam._m0[22u].z, fma(_999, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _995)) + cbModelParam._m0[22u].w;
        float _1902 = fma(_1003, cbModelParam._m0[23u].z, fma(_999, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _995)) + cbModelParam._m0[23u].w;
        float _1905 = fma(_941, cbModelParam._m0[21u].z, fma(_940, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _939));
        float _1908 = fma(_941, cbModelParam._m0[22u].z, fma(_940, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _939));
        float _1911 = fma(_941, cbModelParam._m0[23u].z, fma(_940, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _939));
        float _2020;
        if (_1905 > 0.0)
        {
            _2020 = abs((1.0 - _1894) / _1905);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1905 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1894 + 1.0) / _1905);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2020 = frontier_phi_25_21_ladder;
        }
        float _2337;
        if (_1908 > 0.0)
        {
            _2337 = abs((1.0 - _1898) / _1908);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1908 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1898 + 1.0) / _1908);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2337 = frontier_phi_37_32_ladder;
        }
        float _2675;
        if (_1911 > 0.0)
        {
            _2675 = abs((1.0 - _1902) / _1911);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1911 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1902 + 1.0) / _1911);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2675 = frontier_phi_47_44_ladder;
        }
        float _2677 = isnan(_2337) ? _2020 : (isnan(_2020) ? _2337 : min(_2020, _2337));
        float _2678 = isnan(_2675) ? _2677 : (isnan(_2677) ? _2675 : min(_2677, _2675));
        float _2682 = (_2678 * _1905) + _1894;
        float _2683 = (_2678 * _1908) + _1898;
        float _2684 = (_2678 * _1911) + _1902;
        float _2685 = _2678 * 9.9999997473787516355514526367188e-05;
        float _2686 = (-1.0) - _2685;
        float _2688 = _2685 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2684 > _2688) || ((_2684 < _2686) || ((_2683 > _2688) || ((_2683 < _2686) || ((_2682 < _2686) || (_2682 > _2688))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2806 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2684, cbModelParam._m0[17u].z, fma(_2683, cbModelParam._m0[17u].y, _2682 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2684, cbModelParam._m0[18u].z, fma(_2683, cbModelParam._m0[18u].y, _2682 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2684, cbModelParam._m0[19u].z, fma(_2683, cbModelParam._m0[19u].y, _2682 * cbModelParam._m0[19u].x))), _1840);
            frontier_phi_22_47_ladder = _2806.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2806.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2806.x * cbModelParam._m0[1u].z;
        }
        _1930 = frontier_phi_22_47_ladder_2;
        _1932 = frontier_phi_22_47_ladder_1;
        _1934 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1914 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_939, _940, _941), _1840);
        _1930 = _1914.x * cbModelParam._m0[1u].z;
        _1932 = _1914.y * cbModelParam._m0[1u].z;
        _1934 = _1914.z * cbModelParam._m0[1u].z;
    }
    float _1947 = (((_966 * _915) + _967) * _931) * ((cbModelParam._m0[1u].w * (_1930 - _1831)) + _1831);
    float _1949 = (((_966 * _917) + _967) * _931) * ((cbModelParam._m0[1u].w * (_1932 - _1833)) + _1833);
    float _1951 = (((_966 * _918) + _967) * _931) * ((cbModelParam._m0[1u].w * (_1934 - _1835)) + _1835);
    float _1954 = fma(_1951, cbSceneParam._m0[89u].z, fma(_1949, cbSceneParam._m0[89u].y, _1947 * cbSceneParam._m0[89u].x));
    float _1957 = fma(_1951, cbSceneParam._m0[90u].z, fma(_1949, cbSceneParam._m0[90u].y, _1947 * cbSceneParam._m0[90u].x));
    float _1960 = fma(_1951, cbSceneParam._m0[91u].z, fma(_1949, cbSceneParam._m0[91u].y, _1947 * cbSceneParam._m0[91u].x));
    float _1994 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1998 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2002 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2006 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2007 = _1994 / _2006;
    float _2008 = _1998 / _2006;
    float _2009 = _2002 / _2006;
    float _2156;
    float _2157;
    float _2158;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2036 = ((uint(_2009 > cbSceneParam._m0[59u].y) + uint(_2009 > cbSceneParam._m0[59u].x)) + uint(_2009 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2037 = _2036 + 43u;
        uint _2045 = _2036 + 44u;
        uint _2053 = _2036 + 45u;
        uint _2061 = _2036 + 46u;
        float _2072 = fma(_2006, cbSceneParam._m0[_2037].w, fma(_2002, cbSceneParam._m0[_2037].z, fma(_1998, cbSceneParam._m0[_2037].y, _1994 * cbSceneParam._m0[_2037].x)));
        float _2076 = fma(_2006, cbSceneParam._m0[_2045].w, fma(_2002, cbSceneParam._m0[_2045].z, fma(_1998, cbSceneParam._m0[_2045].y, _1994 * cbSceneParam._m0[_2045].x)));
        float _2084 = fma(_2006, cbSceneParam._m0[_2061].w, fma(_2002, cbSceneParam._m0[_2061].z, fma(_1998, cbSceneParam._m0[_2061].y, _1994 * cbSceneParam._m0[_2061].x)));
        float _2089 = cbSceneParam._m0[33u].z * _2084;
        float _2091 = cbSceneParam._m0[33u].w * _2084;
        float _2094 = fma(_2006, cbSceneParam._m0[_2053].w, fma(_2002, cbSceneParam._m0[_2053].z, fma(_1998, cbSceneParam._m0[_2053].y, _1994 * cbSceneParam._m0[_2053].x))) / _2084;
        float _2142 = (cbSceneParam._m0[33u].x - sqrt(((_2008 * _2008) + (_2007 * _2007)) + (_2009 * _2009))) * cbSceneParam._m0[33u].y;
        float _4471 = isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0));
        float _2149 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2089 + _2072) / _2084, (_2091 + _2076) / _2084), _2094), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2091 + _2072) / _2084, (_2076 - _2089) / _2084), _2094), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2072 - _2089) / _2084, (_2076 - _2091) / _2084), _2094), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2072 - _2091) / _2084, (_2089 + _2076) / _2084), _2094), 0.0)).x), vec4(0.25)));
        _2156 = 1.0 - (_2149 * cbSceneParam._m0[34u].x);
        _2157 = 1.0 - (_2149 * cbSceneParam._m0[34u].y);
        _2158 = 1.0 - (_2149 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2156 = 1.0;
        _2157 = 1.0;
        _2158 = 1.0;
    }
    float _2222;
    float _2224;
    float _2226;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2210 = fma(_2006, cbSceneParam._m0[63u].w, fma(_2002, cbSceneParam._m0[63u].z, fma(_1998, cbSceneParam._m0[63u].y, _1994 * cbSceneParam._m0[63u].x)));
        float _2211 = fma(_2006, cbSceneParam._m0[60u].w, fma(_2002, cbSceneParam._m0[60u].z, fma(_1998, cbSceneParam._m0[60u].y, _1994 * cbSceneParam._m0[60u].x))) / _2210;
        float _2212 = fma(_2006, cbSceneParam._m0[61u].w, fma(_2002, cbSceneParam._m0[61u].z, fma(_1998, cbSceneParam._m0[61u].y, _1994 * cbSceneParam._m0[61u].x))) / _2210;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2211 >= cbSceneParam._m0[64u].x) && (_2212 >= cbSceneParam._m0[64u].y)) && (_2211 <= cbSceneParam._m0[64u].z)) && (_2212 <= cbSceneParam._m0[64u].w))
        {
            float _2350 = fma(_2006, cbSceneParam._m0[62u].w, fma(_2002, cbSceneParam._m0[62u].z, fma(_1998, cbSceneParam._m0[62u].y, _1994 * cbSceneParam._m0[62u].x))) / _2210;
            float _2354 = isnan(cbSceneParam._m0[41u].w) ? _2350 : (isnan(_2350) ? cbSceneParam._m0[41u].w : max(_2350, cbSceneParam._m0[41u].w));
            float _2397 = (cbSceneParam._m0[33u].x - sqrt(((_2008 * _2008) + (_2007 * _2007)) + (_2009 * _2009))) * cbSceneParam._m0[33u].y;
            float _4487 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
            float _2404 = (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2211, cbSceneParam._m0[33u].w + _2212), _2354), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2211, _2212 - cbSceneParam._m0[33u].z), _2354), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2211 - cbSceneParam._m0[33u].z, _2212 - cbSceneParam._m0[33u].w), _2354), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2211 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2212), _2354), 0.0)).x), vec4(0.25)));
            float _2408 = 1.0 - (_2404 * cbSceneParam._m0[34u].x);
            float _2409 = 1.0 - (_2404 * cbSceneParam._m0[34u].y);
            float _2410 = 1.0 - (_2404 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2410) ? _2158 : (isnan(_2158) ? _2410 : min(_2158, _2410));
            frontier_phi_34_33_ladder_1 = isnan(_2409) ? _2157 : (isnan(_2157) ? _2409 : min(_2157, _2409));
            frontier_phi_34_33_ladder_2 = isnan(_2408) ? _2156 : (isnan(_2156) ? _2408 : min(_2156, _2408));
        }
        else
        {
            frontier_phi_34_33_ladder = _2158;
            frontier_phi_34_33_ladder_1 = _2157;
            frontier_phi_34_33_ladder_2 = _2156;
        }
        _2222 = frontier_phi_34_33_ladder_2;
        _2224 = frontier_phi_34_33_ladder_1;
        _2226 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2222 = _2156;
        _2224 = _2157;
        _2226 = _2158;
    }
    uvec4 _2231 = floatBitsToUint(cbInstanceData._m0[_270 + 5u]);
    uint _2233 = _2231.x * 14u;
    uint _2234 = _2233 + 13u;
    float _2241 = _931 + (-1.0);
    float _2246 = (cbLight._m0[_2234].x * _2241) + 1.0;
    float _2247 = (cbLight._m0[_2234].y * _2241) + 1.0;
    float _2248 = (cbLight._m0[_2234].z * _2241) + 1.0;
    float _2249 = (cbLight._m0[_2234].w * _2241) + 1.0;
    uint _2250 = _2233 + 5u;
    float _2256 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
    uint _2260 = _2233 + 4u;
    float _2269 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
    uint _2273 = _2233 | 1u;
    float _2284 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_765, _766, _767));
    float _2287 = dot(vec3(cbLight._m0[_2273].xyz), vec3(_765, _766, _767));
    float _4523 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
    float _4534 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _2292 = (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))) * 0.3183098733425140380859375;
    float _2294 = (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * 0.3183098733425140380859375;
    float _2301 = ((cbLight._m0[_2250].x * _2256) * _2294) + (((cbLight._m0[_2260].x * _2222) * _2269) * _2292);
    float _2302 = ((_2256 * cbLight._m0[_2250].y) * _2294) + (((cbLight._m0[_2260].y * _2224) * _2269) * _2292);
    float _2303 = ((_2256 * cbLight._m0[_2250].z) * _2294) + (((cbLight._m0[_2260].z * _2226) * _2269) * _2292);
    uvec4 _2307 = floatBitsToUint(cbLight._m0[_2233 + 12u]);
    bool _2309 = _2307.x == 0u;
    float _2411;
    float _2413;
    float _2415;
    if (_2309)
    {
        _2411 = _2301;
        _2413 = _2302;
        _2415 = _2303;
    }
    else
    {
        uint _2419 = _2233 + 6u;
        float _2435 = (dot(vec3(cbLight._m0[_2233 + 2u].xyz), vec3(_765, _766, _767)) * 0.5) + 0.5;
        float _2436 = _2435 * _2435;
        float _4545 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
        float _2437 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _2438 = isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0));
        _2411 = (((cbLight._m0[_2419].x * 0.3183098733425140380859375) * _2437) * _2438) + _2301;
        _2413 = (((cbLight._m0[_2419].y * 0.3183098733425140380859375) * _2437) * _2438) + _2302;
        _2415 = (((cbLight._m0[_2419].z * 0.3183098733425140380859375) * _2437) * _2438) + _2303;
    }
    bool _2418 = _2307.y == 0u;
    float _2473;
    float _2475;
    float _2477;
    if (_2418)
    {
        _2473 = _2411;
        _2475 = _2413;
        _2477 = _2415;
    }
    else
    {
        uint _2646 = _2233 + 7u;
        float _2662 = (dot(vec3(cbLight._m0[_2233 + 3u].xyz), vec3(_765, _766, _767)) * 0.5) + 0.5;
        float _2663 = _2662 * _2662;
        float _4561 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        float _2664 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
        float _2665 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
        _2473 = (((cbLight._m0[_2646].x * 0.3183098733425140380859375) * _2664) * _2665) + _2411;
        _2475 = (((cbLight._m0[_2646].y * 0.3183098733425140380859375) * _2664) * _2665) + _2413;
        _2477 = (((cbLight._m0[_2646].z * 0.3183098733425140380859375) * _2664) * _2665) + _2415;
    }
    uint _2480 = _2233 + 8u;
    float _2493 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2233].w)) * _768) * 0.949999988079071044921875);
    float _2494 = _2493 * _2493;
    float _2495 = cbLight._m0[_2233].x + _845;
    float _2496 = cbLight._m0[_2233].y + _846;
    float _2497 = cbLight._m0[_2233].z + _847;
    float _2501 = inversesqrt(dot(vec3(_2495, _2496, _2497), vec3(_2495, _2496, _2497)));
    float _2502 = _2501 * _2495;
    float _2503 = _2501 * _2496;
    float _2504 = _2501 * _2497;
    float _2505 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2233].xyz));
    float _4577 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2508 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
    float _4588 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _2509 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
    float _2510 = dot(vec3(_765, _766, _767), vec3(_2502, _2503, _2504));
    float _4599 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2513 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
    float _2514 = dot(vec3(cbLight._m0[_2233].xyz), vec3(_2502, _2503, _2504));
    float _4610 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
    float _2518 = _2494 * _2494;
    float _2522 = ((_2513 * _2513) * (_2518 + (-1.0))) + 1.0;
    float _2530 = exp2(log2(1.0 - (isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0)))) * 5.0);
    float _2531 = 0.959999978542327880859375 - _912;
    float _2533 = 0.959999978542327880859375 - _913;
    float _2534 = 0.959999978542327880859375 - _914;
    float _2541 = 1.0 - _2494;
    float _2552 = (0.5 / (((_2509 * ((_2508 * _2541) + _2494)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2541) + _2494) * _2508))) * _2508;
    float _4621 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
    float _2554 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_2518 / ((_2522 * _2522) * 3.141590118408203125));
    uint _2568 = _2233 + 9u;
    float _2579 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2273].w)) * _768) * 0.949999988079071044921875);
    float _2580 = _2579 * _2579;
    float _2581 = cbLight._m0[_2273].x + _845;
    float _2582 = cbLight._m0[_2273].y + _846;
    float _2583 = cbLight._m0[_2273].z + _847;
    float _2587 = inversesqrt(dot(vec3(_2581, _2582, _2583), vec3(_2581, _2582, _2583)));
    float _2588 = _2587 * _2581;
    float _2589 = _2587 * _2582;
    float _2590 = _2587 * _2583;
    float _2591 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2273].xyz));
    float _4632 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2594 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
    float _2595 = dot(vec3(_765, _766, _767), vec3(_2588, _2589, _2590));
    float _4643 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
    float _2598 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
    float _2599 = dot(vec3(cbLight._m0[_2273].xyz), vec3(_2588, _2589, _2590));
    float _4654 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
    float _2603 = _2580 * _2580;
    float _2607 = ((_2598 * _2598) * (_2603 + (-1.0))) + 1.0;
    float _2614 = exp2(log2(1.0 - (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0)))) * 5.0);
    float _2621 = 1.0 - _2580;
    float _2631 = (0.5 / (((_2509 * ((_2594 * _2621) + _2580)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2621) + _2580) * _2594))) * _2594;
    float _4665 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2633 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * (_2603 / ((_2607 * _2607) * 3.141590118408203125));
    float _2643 = (((((_2614 * _2531) + _915) * cbLight._m0[_2568].x) * _2633) * _2256) + ((((cbLight._m0[_2480].x * _2222) * ((_2530 * _2531) + _915)) * _2554) * _2269);
    float _2644 = (((((_2614 * _2533) + _917) * cbLight._m0[_2568].y) * _2633) * _2256) + ((((cbLight._m0[_2480].y * _2224) * ((_2530 * _2533) + _917)) * _2554) * _2269);
    float _2645 = (((((_2614 * _2534) + _918) * cbLight._m0[_2568].z) * _2633) * _2256) + ((((cbLight._m0[_2480].z * _2226) * ((_2530 * _2534) + _918)) * _2554) * _2269);
    float _2701;
    float _2703;
    float _2705;
    if (_2309)
    {
        _2701 = _2643;
        _2703 = _2644;
        _2705 = _2645;
    }
    else
    {
        uint _2707 = _2233 + 2u;
        uint _2711 = _2233 + 10u;
        float _2725 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2707].w)) * _768) * 0.949999988079071044921875);
        float _2726 = _2725 * _2725;
        float _2727 = cbLight._m0[_2707].x + _845;
        float _2728 = cbLight._m0[_2707].y + _846;
        float _2729 = cbLight._m0[_2707].z + _847;
        float _2733 = inversesqrt(dot(vec3(_2727, _2728, _2729), vec3(_2727, _2728, _2729)));
        float _2734 = _2733 * _2727;
        float _2735 = _2733 * _2728;
        float _2736 = _2733 * _2729;
        float _2737 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2707].xyz));
        float _4676 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
        float _2740 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
        float _2741 = dot(vec3(_765, _766, _767), vec3(_2734, _2735, _2736));
        float _4687 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
        float _2744 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
        float _2745 = dot(vec3(cbLight._m0[_2707].xyz), vec3(_2734, _2735, _2736));
        float _4698 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
        float _2749 = _2726 * _2726;
        float _2753 = ((_2744 * _2744) * (_2749 + (-1.0))) + 1.0;
        float _2760 = exp2(log2(1.0 - (isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0)))) * 5.0);
        float _2767 = 1.0 - _2726;
        float _2777 = (0.5 / (((_2509 * ((_2740 * _2767) + _2726)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2767) + _2726) * _2740))) * _2740;
        float _4709 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2779 = (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0))) * (_2749 / ((_2753 * _2753) * 3.141590118408203125));
        float _2780 = isnan(1.0) ? _2248 : (isnan(_2248) ? 1.0 : min(_2248, 1.0));
        _2701 = (((((_2760 * _2531) + _915) * cbLight._m0[_2711].x) * _2779) * _2780) + _2643;
        _2703 = (((((_2760 * _2533) + _917) * cbLight._m0[_2711].y) * _2779) * _2780) + _2644;
        _2705 = (((((_2760 * _2534) + _918) * cbLight._m0[_2711].z) * _2779) * _2780) + _2645;
    }
    float _2811;
    float _2813;
    float _2815;
    if (_2418)
    {
        _2811 = _2701;
        _2813 = _2703;
        _2815 = _2705;
    }
    else
    {
        uint _2822 = _2233 + 3u;
        uint _2826 = _2233 + 11u;
        float _2840 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2822].w)) * _768) * 0.949999988079071044921875);
        float _2841 = _2840 * _2840;
        float _2842 = cbLight._m0[_2822].x + _845;
        float _2843 = cbLight._m0[_2822].y + _846;
        float _2844 = cbLight._m0[_2822].z + _847;
        float _2848 = inversesqrt(dot(vec3(_2842, _2843, _2844), vec3(_2842, _2843, _2844)));
        float _2849 = _2848 * _2842;
        float _2850 = _2848 * _2843;
        float _2851 = _2848 * _2844;
        float _2852 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2822].xyz));
        float _4725 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        float _2855 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
        float _2856 = dot(vec3(_765, _766, _767), vec3(_2849, _2850, _2851));
        float _4736 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2859 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
        float _2860 = dot(vec3(cbLight._m0[_2822].xyz), vec3(_2849, _2850, _2851));
        float _4747 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2864 = _2841 * _2841;
        float _2868 = ((_2859 * _2859) * (_2864 + (-1.0))) + 1.0;
        float _2875 = exp2(log2(1.0 - (isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0)))) * 5.0);
        float _2882 = 1.0 - _2841;
        float _2892 = (0.5 / (((_2509 * ((_2855 * _2882) + _2841)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2882) + _2841) * _2855))) * _2855;
        float _4758 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2894 = (isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0))) * (_2864 / ((_2868 * _2868) * 3.141590118408203125));
        float _2895 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
        _2811 = (((((_2875 * _2531) + _915) * cbLight._m0[_2826].x) * _2894) * _2895) + _2701;
        _2813 = (((((_2875 * _2533) + _917) * cbLight._m0[_2826].y) * _2894) * _2895) + _2703;
        _2815 = (((((_2875 * _2534) + _918) * cbLight._m0[_2826].z) * _2894) * _2895) + _2705;
    }
    float _2961;
    float _2963;
    float _2965;
    float _2967;
    float _2969;
    float _2971;
    if (_2231.y == 0u)
    {
        uvec4 _2916 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2917 = _2916.x;
        uint _2928 = uint((float(_2916.y) * floor(float(uint(cbSceneParam._m0[85u].y * _854) / _2917))) + floor(float(uint(cbSceneParam._m0[85u].x * _853) / _2917)));
        float _2938 = (log2(_2009 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2939 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
        uint _2942 = uint(isnan(14.0) ? _2939 : (isnan(_2939) ? 14.0 : min(_2939, 14.0)));
        uvec4 _2947 = texelFetch(g_lightClusterGridBuffer, int(((_2942 << 2u) + (_2928 << 6u)) >> 2u));
        uint _2948 = _2947.x;
        uint _2949 = _2916.z;
        float _3028;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        float _3038;
        if (((((1u << ((_2949 >> 4u) & 15u)) + 4294967295u) & _2948) == 0u) || ((_2949 & 240u) == 0u))
        {
            _3028 = 0.0;
            _3030 = 0.0;
            _3032 = 0.0;
            _3034 = 0.0;
            _3036 = 0.0;
            _3038 = 0.0;
        }
        else
        {
            float _3029;
            float _3031;
            float _3033;
            float _3035;
            float _3037;
            float _3039;
            float _3173 = 0.0;
            float _3174 = 0.0;
            float _3175 = 0.0;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            uint _3179 = 0u;
            uint _3188;
            bool _3189;
            for (;;)
            {
                _3188 = texelFetch(g_lightClassification, int((((_2942 << 5u) + (_2928 << 9u)) + (_3179 << 2u)) >> 2u)).x;
                _3189 = _3188 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3189)
                {
                    frontier_phi_66_pred = _3178;
                    frontier_phi_66_pred_1 = _3177;
                    frontier_phi_66_pred_2 = _3176;
                    frontier_phi_66_pred_3 = _3175;
                    frontier_phi_66_pred_4 = _3174;
                    frontier_phi_66_pred_5 = _3173;
                }
                else
                {
                    float _3297;
                    float _3298;
                    float _3299;
                    float _3300;
                    float _3301;
                    float _3302;
                    uint _3303;
                    _3297 = _3173;
                    _3298 = _3174;
                    _3299 = _3175;
                    _3300 = _3176;
                    _3301 = _3177;
                    _3302 = _3178;
                    _3303 = _3188;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    float _3234;
                    for (;;)
                    {
                        uint _3307 = uint(findLSB(_3303)) + (_3179 << 5u);
                        uint _3304 = (_3303 + 4294967295u) & _3303;
                        uint _3309 = _3307 * 48u;
                        vec4 _3323 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3309)).x, texelFetch(g_PointLightRenderingBuffer, int(_3309 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3309 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3309 + 3u)).x));
                        uint _3329 = (_3307 * 48u) + 4u;
                        vec4 _3342 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3329)).x, texelFetch(g_PointLightRenderingBuffer, int(_3329 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3329 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3329 + 3u)).x));
                        uint _3348 = (_3307 * 48u) + 8u;
                        vec3 _3359 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3348)).x, texelFetch(g_PointLightRenderingBuffer, int(_3348 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3348 + 2u)).x));
                        float _3363 = _3323.x - _2007;
                        float _3364 = _3323.y - _2008;
                        float _3365 = _3323.z - _2009;
                        float _3366 = dot(vec3(_3363, _3364, _3365), vec3(_3363, _3364, _3365));
                        float _3369 = inversesqrt(_3366);
                        float _3370 = _3369 * _3363;
                        float _3371 = _3369 * _3364;
                        float _3372 = _3369 * _3365;
                        float _3373 = dot(vec3(_872, _875, _878), vec3(_3370, _3371, _3372));
                        float _3378 = 1.0 - (_3366 * _3323.w);
                        float _4784 = isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0));
                        float _3379 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                        float _3380 = sqrt(_3366) * _3342.w;
                        float _3383 = 1.39999997615814208984375 / (_3380 + 1.39999997615814208984375);
                        float _3384 = _3383 * _3383;
                        float _3387 = ((1.0 - _3384) * _3373) + _3384;
                        float _3390 = _3380 * _3380;
                        float _3394 = ((isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0))) * _3379) / ((_3390 * 0.699999988079071044921875) + 1.0);
                        float _3398 = (-0.0) - _2007;
                        float _3399 = (-0.0) - _2008;
                        float _3400 = (-0.0) - _2009;
                        float _3404 = inversesqrt(dot(vec3(_3398, _3399, _3400), vec3(_3398, _3399, _3400)));
                        float _3405 = _3404 * _3398;
                        float _3406 = _3404 * _3399;
                        float _3407 = _3404 * _3400;
                        float _3414 = exp2(log2(1.0 / ((_3390 * 3.5) + 5.0)) * 0.25);
                        float _3415 = 1.0 - _947;
                        float _3422 = sqrt(1.0 - ((1.0 - (_3415 * _3415)) * (1.0 - (_3414 * _3414))));
                        float _3423 = _3422 * _3422;
                        float _3424 = _3423 * _3423;
                        float _3425 = _3405 + _3370;
                        float _3426 = _3406 + _3371;
                        float _3427 = _3407 + _3372;
                        float _3431 = inversesqrt(dot(vec3(_3425, _3426, _3427), vec3(_3425, _3426, _3427)));
                        float _3435 = dot(vec3(_872, _875, _878), vec3(_3405, _3406, _3407));
                        float _4800 = isnan(0.0) ? _3435 : (isnan(_3435) ? 0.0 : max(_3435, 0.0));
                        float _3438 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
                        float _3439 = dot(vec3(_872, _875, _878), vec3(_3431 * _3425, _3431 * _3426, _3431 * _3427));
                        float _4811 = isnan(0.0) ? _3439 : (isnan(_3439) ? 0.0 : max(_3439, 0.0));
                        float _3442 = isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0));
                        float _3446 = ((_3442 * _3442) * (_3424 + (-1.0))) + 1.0;
                        float _3447 = _3383 * _3423;
                        float _3448 = _3447 * _3447;
                        float _3451 = ((1.0 - _3448) * _3373) + _3448;
                        float _4822 = isnan(0.0) ? _3451 : (isnan(_3451) ? 0.0 : max(_3451, 0.0));
                        float _3452 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
                        float _3453 = 1.0 - _3423;
                        float _3463 = (0.5 / (((_3452 * ((_3438 * _3453) + _3423)) + 9.9999999392252902907785028219223e-09) + (((_3452 * _3453) + _3423) * _3438))) * _3452;
                        float _4833 = isnan(0.0) ? _3463 : (isnan(_3463) ? 0.0 : max(_3463, 0.0));
                        float _3474 = (((_3424 * 3.1415927410125732421875) * (isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0)))) / ((_3446 * _3446) * ((_3390 * 2.1991131305694580078125) + 3.141590118408203125))) * _3379;
                        _3232 = (_3394 * _3342.x) + _3300;
                        _3233 = (_3394 * _3342.y) + _3301;
                        _3234 = (_3394 * _3342.z) + _3302;
                        _3229 = (_3474 * _3359.x) + _3297;
                        _3230 = (_3474 * _3359.y) + _3298;
                        _3231 = (_3474 * _3359.z) + _3299;
                        if (_3304 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3297 = _3229;
                            _3298 = _3230;
                            _3299 = _3231;
                            _3300 = _3232;
                            _3301 = _3233;
                            _3302 = _3234;
                            _3303 = _3304;
                        }
                    }
                    frontier_phi_66_pred = _3234;
                    frontier_phi_66_pred_1 = _3233;
                    frontier_phi_66_pred_2 = _3232;
                    frontier_phi_66_pred_3 = _3231;
                    frontier_phi_66_pred_4 = _3230;
                    frontier_phi_66_pred_5 = _3229;
                }
                _3039 = frontier_phi_66_pred;
                _3037 = frontier_phi_66_pred_1;
                _3035 = frontier_phi_66_pred_2;
                _3033 = frontier_phi_66_pred_3;
                _3031 = frontier_phi_66_pred_4;
                _3029 = frontier_phi_66_pred_5;
                uint _3180 = _3179 + 1u;
                if (_3180 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3173 = _3029;
                    _3174 = _3031;
                    _3175 = _3033;
                    _3176 = _3035;
                    _3177 = _3037;
                    _3178 = _3039;
                    _3179 = _3180;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3028 = _3029;
            _3030 = _3031;
            _3032 = _3033;
            _3034 = _3035;
            _3036 = _3037;
            _3038 = _3039;
        }
        uvec4 _3042 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3043 = _3042.z;
        uint _3045 = (_3043 >> 8u) & 15u;
        float _3141;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        if (((4294967295u << _3045) & _2948) == 0u)
        {
            _3141 = _3028;
            _3143 = _3030;
            _3145 = _3032;
            _3147 = _3034;
            _3149 = _3036;
            _3151 = _3038;
        }
        else
        {
            float _3166 = inversesqrt(dot(vec3(_2007, _2008, _2009), vec3(_2007, _2008, _2009)));
            float _3167 = _3166 * _2007;
            float _3168 = _3166 * _2008;
            float _3169 = _3166 * _2009;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3045 < ((_3043 >> 12u) & 15u))
            {
                float _3142;
                float _3144;
                float _3146;
                float _3148;
                float _3150;
                float _3152;
                float _3280 = _3028;
                float _3281 = _3030;
                float _3282 = _3032;
                float _3283 = _3034;
                float _3284 = _3036;
                float _3285 = _3038;
                uint _3286 = _3045;
                uint _3295;
                bool _3296;
                for (;;)
                {
                    _3295 = texelFetch(g_lightClassification, int((((_2942 << 5u) + (_2928 << 9u)) + (_3286 << 2u)) >> 2u)).x;
                    _3296 = _3295 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3296)
                    {
                        frontier_phi_72_pred = _3285;
                        frontier_phi_72_pred_1 = _3284;
                        frontier_phi_72_pred_2 = _3283;
                        frontier_phi_72_pred_3 = _3282;
                        frontier_phi_72_pred_4 = _3281;
                        frontier_phi_72_pred_5 = _3280;
                    }
                    else
                    {
                        float _3479;
                        float _3480;
                        float _3481;
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3772;
                        float _3773;
                        float _3774;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _3492 = _3280;
                        float _3493 = _3281;
                        float _3494 = _3282;
                        float _3495 = _3283;
                        float _3496 = _3284;
                        float _3497 = _3285;
                        uint _3498 = _3295;
                        uint _3499;
                        vec4 _3524;
                        float _3525;
                        vec4 _3540;
                        vec3 _3552;
                        vec4 _3567;
                        vec4 _3582;
                        float _3628;
                        bool _3629;
                        for (;;)
                        {
                            uint _3509 = ((_3286 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3498));
                            _3499 = (_3498 + 4294967295u) & _3498;
                            uint _3511 = _3509 * 40u;
                            _3524 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3511)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 3u)).x));
                            _3525 = _3524.w;
                            uint _3527 = (_3509 * 40u) + 4u;
                            _3540 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3527)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 3u)).x));
                            uint _3542 = (_3509 * 40u) + 8u;
                            _3552 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x));
                            uint _3554 = (_3509 * 40u) + 16u;
                            _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3569 = (_3509 * 40u) + 20u;
                            _3582 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 3u)).x));
                            uint _3584 = (_3509 * 40u) + 24u;
                            vec4 _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            uint _3603 = (_3509 * 40u) + 28u;
                            vec4 _3616 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3603)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 3u)).x));
                            _3628 = fma(_2009, _3616.z, fma(_2008, _3616.y, _3616.x * _2007)) + _3616.w;
                            _3629 = !((fma(_2009, _3597.z, fma(_2008, _3597.y, _3597.x * _2007)) + _3597.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3629)
                            {
                                float _3656 = _3524.x - _2007;
                                float _3657 = _3524.y - _2008;
                                float _3658 = _3524.z - _2009;
                                float _3659 = dot(vec3(_3656, _3657, _3658), vec3(_3656, _3657, _3658));
                                float _3662 = inversesqrt(_3659);
                                float _3663 = _3662 * _3656;
                                float _3664 = _3662 * _3657;
                                float _3665 = _3662 * _3658;
                                float _3669 = 1.0 - (_3659 / (_3525 * _3525));
                                float _4844 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3670 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                                float _3674 = sqrt(_3659) * _3540.w;
                                float _3676 = 1.39999997615814208984375 / (_3674 + 1.39999997615814208984375);
                                float _3677 = _3676 * _3676;
                                float _3680 = ((1.0 - _3677) * dot(vec3(_3663, _3664, _3665), vec3(_872, _875, _878))) + _3677;
                                float _3683 = _3674 * _3674;
                                float _3687 = (fma(_2009, _3567.z, fma(_2008, _3567.y, _3567.x * _2007)) + _3567.w) / _3628;
                                float _3688 = (fma(_2009, _3582.z, fma(_2008, _3582.y, _3582.x * _2007)) + _3582.w) / _3628;
                                float _3692 = 1.0 - dot(vec2(_3687, _3688), vec2(_3687, _3688));
                                float _4860 = isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0));
                                float _3693 = isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0));
                                float _3694 = _3693 * (((isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0))) * _3670) / ((_3683 * 0.699999988079071044921875) + 1.0));
                                float _3706 = exp2(log2(1.0 / ((_3683 * 3.5) + 5.0)) * 0.25);
                                float _3707 = 1.0 - _947;
                                float _3714 = sqrt(1.0 - ((1.0 - (_3707 * _3707)) * (1.0 - (_3706 * _3706))));
                                float _3715 = _3714 * _3714;
                                float _3716 = _3715 * _3715;
                                float _3717 = _3663 - _3167;
                                float _3718 = _3664 - _3168;
                                float _3719 = _3665 - _3169;
                                float _3723 = inversesqrt(dot(vec3(_3717, _3718, _3719), vec3(_3717, _3718, _3719)));
                                float _3727 = dot(vec3(_872, _875, _878), vec3((-0.0) - _3167, (-0.0) - _3168, (-0.0) - _3169));
                                float _4871 = isnan(0.0) ? _3727 : (isnan(_3727) ? 0.0 : max(_3727, 0.0));
                                float _3730 = isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0));
                                float _3731 = dot(vec3(_872, _875, _878), vec3(_3723 * _3717, _3723 * _3718, _3723 * _3719));
                                float _4882 = isnan(0.0) ? _3731 : (isnan(_3731) ? 0.0 : max(_3731, 0.0));
                                float _3734 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
                                float _3738 = ((_3734 * _3734) * (_3716 + (-1.0))) + 1.0;
                                float _3739 = _3676 * _3715;
                                float _3740 = _3739 * _3739;
                                float _3746 = ((1.0 - _3740) * dot(vec3(_872, _875, _878), vec3(_3663, _3664, _3665))) + _3740;
                                float _4893 = isnan(0.0) ? _3746 : (isnan(_3746) ? 0.0 : max(_3746, 0.0));
                                float _3747 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3748 = 1.0 - _3715;
                                float _3758 = (0.5 / (((_3747 * ((_3730 * _3748) + _3715)) + 9.9999999392252902907785028219223e-09) + (((_3747 * _3748) + _3715) * _3730))) * _3747;
                                float _4904 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3768 = (_3693 * _3670) * (((_3716 * 3.1415927410125732421875) * (isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0)))) / ((_3738 * _3738) * ((_3683 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3694 * _3540.y;
                                frontier_phi_78_pred_1 = _3694 * _3540.x;
                                frontier_phi_78_pred_2 = _3768 * _3552.z;
                                frontier_phi_78_pred_3 = _3768 * _3552.y;
                                frontier_phi_78_pred_4 = _3768 * _3552.x;
                                frontier_phi_78_pred_5 = _3694 * _3540.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3776 = frontier_phi_78_pred;
                            _3775 = frontier_phi_78_pred_1;
                            _3774 = frontier_phi_78_pred_2;
                            _3773 = frontier_phi_78_pred_3;
                            _3772 = frontier_phi_78_pred_4;
                            _3777 = frontier_phi_78_pred_5;
                            _3482 = _3775 + _3495;
                            _3483 = _3776 + _3496;
                            _3484 = _3777 + _3497;
                            _3479 = _3772 + _3492;
                            _3480 = _3773 + _3493;
                            _3481 = _3774 + _3494;
                            if (_3499 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3492 = _3479;
                                _3493 = _3480;
                                _3494 = _3481;
                                _3495 = _3482;
                                _3496 = _3483;
                                _3497 = _3484;
                                _3498 = _3499;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3484;
                        frontier_phi_72_pred_1 = _3483;
                        frontier_phi_72_pred_2 = _3482;
                        frontier_phi_72_pred_3 = _3481;
                        frontier_phi_72_pred_4 = _3480;
                        frontier_phi_72_pred_5 = _3479;
                    }
                    _3152 = frontier_phi_72_pred;
                    _3150 = frontier_phi_72_pred_1;
                    _3148 = frontier_phi_72_pred_2;
                    _3146 = frontier_phi_72_pred_3;
                    _3144 = frontier_phi_72_pred_4;
                    _3142 = frontier_phi_72_pred_5;
                    uint _3287 = _3286 + 1u;
                    if (_3287 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3280 = _3142;
                        _3281 = _3144;
                        _3282 = _3146;
                        _3283 = _3148;
                        _3284 = _3150;
                        _3285 = _3152;
                        _3286 = _3287;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3152;
                frontier_phi_60_61_ladder_1 = _3150;
                frontier_phi_60_61_ladder_2 = _3146;
                frontier_phi_60_61_ladder_3 = _3144;
                frontier_phi_60_61_ladder_4 = _3142;
                frontier_phi_60_61_ladder_5 = _3148;
            }
            else
            {
                frontier_phi_60_61_ladder = _3038;
                frontier_phi_60_61_ladder_1 = _3036;
                frontier_phi_60_61_ladder_2 = _3032;
                frontier_phi_60_61_ladder_3 = _3030;
                frontier_phi_60_61_ladder_4 = _3028;
                frontier_phi_60_61_ladder_5 = _3034;
            }
            _3141 = frontier_phi_60_61_ladder_4;
            _3143 = frontier_phi_60_61_ladder_3;
            _3145 = frontier_phi_60_61_ladder_2;
            _3147 = frontier_phi_60_61_ladder_5;
            _3149 = frontier_phi_60_61_ladder_1;
            _3151 = frontier_phi_60_61_ladder;
        }
        float _3156 = isnan(1.0) ? _931 : (isnan(_931) ? 1.0 : min(_931, 1.0));
        _2961 = (_3156 * _3147) + _2473;
        _2963 = (_3156 * _3149) + _2475;
        _2965 = (_3156 * _3151) + _2477;
        _2967 = ((_3141 * _915) * _3156) + _2811;
        _2969 = ((_3143 * _917) * _3156) + _2813;
        _2971 = ((_3145 * _918) * _3156) + _2815;
    }
    else
    {
        _2961 = _2473;
        _2963 = _2475;
        _2965 = _2477;
        _2967 = _2811;
        _2969 = _2813;
        _2971 = _2815;
    }
    float _4920 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _4931 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _4942 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    uint _2991 = _270 + 6u;
    float _2999 = _853 / cbSceneParam._m0[86u].x;
    float _3000 = _854 / cbSceneParam._m0[86u].y;
    vec4 _3014 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2999, _3000, (log2((isnan(cbSceneParam._m0[77u].w) ? _787 : (isnan(_787) ? cbSceneParam._m0[77u].w : min(_787, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3016 = _3014.x;
    float _3017 = _3014.y;
    float _3018 = _3014.z;
    float _3019 = _3014.w;
    float _3091;
    float _3093;
    float _3095;
    float _3097;
    if (_787 > cbSceneParam._m0[78u].w)
    {
        float _3053 = isnan(_787) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _787 : min(cbSceneParam._m0[80u].w, _787));
        float _3054 = _3053 / _787;
        float _3065 = _3054 * _838;
        float _3066 = _839 * _3054;
        float _3067 = (-0.0) - _3066;
        float _3069 = _3054 * _840;
        float _3071 = (cbSceneParam._m0[77u].w * _3067) / _3053;
        float _3072 = _3071 + cbSceneParam._m0[79u].w;
        float _3073 = cbSceneParam._m0[79u].w - _3066;
        float _3079 = sqrt(((_3065 * _3065) + (_3066 * _3066)) + (_3069 * _3069));
        float _3082 = (1.0 - (cbSceneParam._m0[77u].w / _3053)) * _3079;
        float _3087 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3089 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3242;
        if (abs((_3067 - _3071) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3242 = ((((_3072 > 0.0) ? exp2(_3087 * _3072) : (2.0 - exp2(_3089 * _3072))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3082;
        }
        else
        {
            float _3202 = 1.0 / cbSceneParam._m0[80u].x;
            float _3203 = isnan(_3073) ? _3072 : (isnan(_3072) ? _3073 : max(_3072, _3073));
            float _3204 = isnan(_3073) ? _3072 : (isnan(_3072) ? _3073 : min(_3072, _3073));
            float _3213 = isnan(0.0) ? _3203 : (isnan(_3203) ? 0.0 : min(_3203, 0.0));
            float _3214 = isnan(0.0) ? _3204 : (isnan(_3204) ? 0.0 : min(_3204, 0.0));
            _3242 = ((abs(_3079 / _3067) * cbSceneParam._m0[80u].y) * ((((_3213 - _3214) * 2.0) - ((exp2(_3087 * (isnan(0.0) ? _3203 : (isnan(_3203) ? 0.0 : max(_3203, 0.0)))) - exp2(_3087 * (isnan(0.0) ? _3204 : (isnan(_3204) ? 0.0 : max(_3204, 0.0))))) * _3202)) - ((exp2(_3089 * _3213) - exp2(_3089 * _3214)) * _3202))) + (_3082 * cbSceneParam._m0[80u].z);
        }
        vec4 _3244 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2999, _3000, 1.0), 0.0);
        float _3253 = exp2((_3242 * (-1.44269502162933349609375)) * (1.0 - _3244.w));
        float _3254 = log2(_3253);
        float _3270 = log2(_3019);
        _3091 = (exp2(_3270 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3254 * cbSceneParam._m0[78u].x)) * _3244.x) / cbSceneParam._m0[78u].x)) + _3016;
        _3093 = (exp2(_3270 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3254 * cbSceneParam._m0[78u].y)) * _3244.y) / cbSceneParam._m0[78u].y)) + _3017;
        _3095 = (exp2(_3270 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3254 * cbSceneParam._m0[78u].z)) * _3244.z) / cbSceneParam._m0[78u].z)) + _3018;
        _3097 = _3253 * _3019;
    }
    else
    {
        _3091 = _3016;
        _3093 = _3017;
        _3095 = _3018;
        _3097 = _3019;
    }
    float _3109 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3110 = _3109 == 3.0;
    float _3111 = log2(_3097);
    float _3118 = exp2(_3111 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0))) * (_2961 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _931))) + ((_2967 + ((isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0))) * _1739)) * cbPerFrame._m0[3u].x));
    float _3119 = exp2(_3111 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0))) * (_2963 + ((isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))) * _931))) + ((_2969 + ((isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))) * _1739)) * cbPerFrame._m0[3u].x));
    float _3120 = exp2(_3111 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0))) * (_2965 + ((isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))) * _931))) + ((_2971 + ((isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0))) * _1739)) * cbPerFrame._m0[3u].x));
    float _3129 = (_3109 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3129 * (_3110 ? _3118 : (_3118 + (cbSceneParam._m0[72u].w * _3091)));
    SV_Target.y = _3129 * (_3110 ? _3119 : (_3119 + (cbSceneParam._m0[72u].w * _3093)));
    SV_Target.z = _3129 * (_3110 ? _3120 : (_3120 + (cbSceneParam._m0[72u].w * _3095)));
    SV_Target.w = cbInstanceData._m0[_2991].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2991].w;
}


