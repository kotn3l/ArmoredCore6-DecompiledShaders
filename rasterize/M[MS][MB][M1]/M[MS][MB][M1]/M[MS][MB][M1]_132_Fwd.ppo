#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1335;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _262 = _257 + 1u;
    uint _266 = _257 + 2u;
    float _275 = sqrt(((cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x) + (cbInstanceData._m0[_257].x * cbInstanceData._m0[_257].x)) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x));
    float _276 = _275 * TEXCOORD.z;
    float _277 = _275 * TEXCOORD.w;
    vec4 _297 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _303 = _297.x * cbMtdParam._m0[11u].x;
    float _304 = _297.y * cbMtdParam._m0[11u].y;
    float _305 = _297.z * cbMtdParam._m0[11u].z;
    vec4 _324 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _276) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _277) + cbTextureTilingScale._m0[5u].w));
    vec4 _362 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _364 = _362.x;
    float _376 = dot(vec4(_364, _362.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _393 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_364 - _376) * cbMtdParam._m0[24u].y) + _376) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3660 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _394 = isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0));
    float _401 = (_394 * ((_324.x * cbMtdParam._m0[12u].x) - _303)) + _303;
    float _402 = (_394 * ((_324.y * cbMtdParam._m0[12u].y) - _304)) + _304;
    float _403 = (_394 * ((_324.z * cbMtdParam._m0[12u].z) - _305)) + _305;
    vec4 _422 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _276) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _277) + cbTextureTilingScale._m0[14u].w));
    vec4 _442 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _276) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _277) + cbTextureTilingScale._m0[20u].w));
    vec4 _467 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _276) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _277) + cbTextureTilingScale._m0[4u].w));
    vec4 _484 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _486 = _484.x;
    float _487 = _484.y;
    float _488 = _484.z;
    float _497 = ((_467.z - _488) * _394) + _488;
    float _500 = ((((_467.x - _486) * _394) + _486) * 2.0) + (-1.0);
    float _501 = ((((_467.y - _487) * _394) + _487) * 2.0) + (-1.0);
    float _502 = dot(vec2(_500, _501), vec2(_500, _501));
    float _3671 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _507 = sqrt(1.0 - (isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0))));
    vec4 _520 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _538 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _276) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _277) + cbTextureTilingScale._m0[11u].w));
    float _540 = _538.x;
    float _541 = 1.0 - _540;
    float _547 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _550 = ((isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : min(_547, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _559 = (_550 - ((((((_540 - _541) * cbMtdParam._m0[24u].z) + _541) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _550))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3692 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _560 = isnan(1.0) ? _3692 : (isnan(_3692) ? 1.0 : min(_3692, 1.0));
    float _567 = (_560 * ((_422.x * cbMtdParam._m0[18u].x) - _401)) + _401;
    float _568 = (_560 * ((_422.y * cbMtdParam._m0[18u].y) - _402)) + _402;
    float _569 = (_560 * ((_422.z * cbMtdParam._m0[18u].z) - _403)) + _403;
    vec4 _581 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _276) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _277) + cbTextureTilingScale._m0[19u].w));
    float _583 = _581.x;
    float _584 = 1.0 - _583;
    float _611 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_583 - _584) * cbMtdParam._m0[24u].w) + _584) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3703 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _612 = isnan(1.0) ? _3703 : (isnan(_3703) ? 1.0 : min(_3703, 1.0));
    float _620 = ((((cbMtdParam._m0[10u].x - _567) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _612) + _567;
    float _621 = ((((cbMtdParam._m0[10u].y - _568) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _612) + _568;
    float _622 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _569)) * _612) + _569;
    vec4 _648 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _650 = _648.x;
    float _668 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _276) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _277) + cbTextureTilingScale._m0[9u].w)).x - _650) * _394) + _650;
    float _672 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _668) * cbMtdParam._m0[19u].z) + _668;
    float _674 = _672 - (_672 * _560);
    float _676 = _674 - (_674 * _612);
    float _681 = (((_442.z - _497) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _497;
    vec4 _695 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _276) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _277) + cbTextureTilingScale._m0[15u].w));
    float _702 = (_695.x * 2.0) + (-1.0);
    float _703 = (_695.y * 2.0) + (-1.0);
    float _704 = dot(vec2(_702, _703), vec2(_702, _703));
    float _3714 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _712 = (_560 * (_695.z - _681)) + _681;
    float _715 = ((cbMtdParam._m0[23u].y - _712) * _612) + _712;
    vec4 _734 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _276) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _277) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _740 = (_734.x * 2.0) + (-1.0);
    float _741 = (_734.y * 2.0) + (-1.0);
    float _742 = dot(vec2(_740, _741), vec2(_740, _741));
    float _3725 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _752 = _500 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_442.x * 2.0) + (-1.0)));
    float _753 = _501 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_442.y * 2.0) + (-1.0)));
    float _765 = (((_702 - _752) + (cbMtdParam._m0[21u].x * _752)) * _560) + _752;
    float _766 = (((_703 - _753) + (cbMtdParam._m0[21u].x * _753)) * _560) + _753;
    float _767 = (_560 * (sqrt(1.0 - (isnan(1.0) ? _3714 : (isnan(_3714) ? 1.0 : min(_3714, 1.0)))) - _507)) + _507;
    float _778 = (((_740 - _765) + (_765 * cbMtdParam._m0[22u].z)) * _612) + _765;
    float _779 = (((_741 - _766) + (_766 * cbMtdParam._m0[22u].z)) * _612) + _766;
    float _780 = ((sqrt(1.0 - (isnan(1.0) ? _3725 : (isnan(_3725) ? 1.0 : min(_3725, 1.0)))) - _767) * _612) + _767;
    float _782 = cbMtdParam._m0[22u].x + _520.w;
    float _785 = fma(_780, _244 * NORMAL.x, fma(_779, _251 * TANGENT.x, (_237 * _229) * _778));
    float _788 = fma(_780, _244 * NORMAL.y, fma(_779, _251 * TANGENT.y, (_237 * _230) * _778));
    float _791 = fma(_780, _244 * NORMAL.z, fma(_779, _251 * TANGENT.z, (_237 * _231) * _778));
    float _795 = inversesqrt(dot(vec3(_785, _788, _791), vec3(_785, _788, _791)));
    float _796 = _795 * _785;
    float _797 = _795 * _788;
    float _798 = _795 * _791;
    float _3736 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _799 = isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0));
    float _3747 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
    float _3758 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _3769 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _3780 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3791 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _804 = isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0));
    float _818 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _858 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _868 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _858);
    float _869 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _858);
    float _870 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _858);
    float _874 = inversesqrt(dot(vec3(_868, _869, _870), vec3(_868, _869, _870)));
    float _875 = _868 * _874;
    float _876 = _869 * _874;
    float _877 = _870 * _874;
    float _883 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _884 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _902 = fma(_798, cbSceneParam._m0[5u].z, fma(_797, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _796));
    float _905 = fma(_798, cbSceneParam._m0[6u].z, fma(_797, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _796));
    float _908 = fma(_798, cbSceneParam._m0[7u].z, fma(_797, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _796));
    uint _922 = (_257 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _928 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0)))) * cbInstanceData._m0[_922].x;
    float _929 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0)))) * cbInstanceData._m0[_922].y;
    float _930 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0)))) * cbInstanceData._m0[_922].z;
    float _3802 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _931 = isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0));
    float _3813 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _932 = isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0));
    float _3824 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _933 = isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0));
    float _934 = 1.0 - _804;
    float _935 = _931 * _934;
    float _936 = _932 * _934;
    float _937 = _933 * _934;
    float _942 = (_931 + (-0.039999999105930328369140625)) * _804;
    float _943 = (_932 + (-0.039999999105930328369140625)) * _804;
    float _944 = (_933 + (-0.039999999105930328369140625)) * _804;
    float _945 = _942 + 0.039999999105930328369140625;
    float _947 = _943 + 0.039999999105930328369140625;
    float _948 = _944 + 0.039999999105930328369140625;
    vec4 _957 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _883, cbSceneParam._m0[86u].y * _884));
    float _961 = ((isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0))) * TEXCOORD_5.w) * _957.x;
    float _962 = dot(vec3(_796, _797, _798), vec3(_875, _876, _877));
    float _965 = _962 * 2.0;
    float _969 = (_965 * _796) - _875;
    float _970 = (_965 * _797) - _876;
    float _971 = (_965 * _798) - _877;
    float _975 = abs(dot(vec3(_875, _876, _877), vec3(_796, _797, _798)));
    float _3835 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _977 = sqrt(_799);
    float _990 = exp2((_977 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_977 * 3.0));
    float _996 = (1.0 - _990) * ((_977 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _997 = _990 * _977;
    float _1025 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1029 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1033 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1334;
    float _1336;
    float _1337;
    float _1338;
    float _1339;
    float _1340;
    float _1341;
    float _1342;
    float _1343;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1059 = fma(_1033, cbModelParam._m0[26u].z, fma(_1029, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1025));
        float _1063 = fma(_1033, cbModelParam._m0[27u].z, fma(_1029, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1025));
        float _1067 = fma(_1033, cbModelParam._m0[28u].z, fma(_1029, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1025));
        float _1092 = _1025 + _796;
        float _1093 = _1029 + _797;
        float _1094 = _1033 + _798;
        float _1104 = fma(_1094, cbModelParam._m0[26u].z, fma(_1093, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1092)) - _1059;
        float _1105 = fma(_1094, cbModelParam._m0[27u].z, fma(_1093, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1092)) - _1063;
        float _1106 = fma(_1094, cbModelParam._m0[28u].z, fma(_1093, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1092)) - _1067;
        float _1110 = inversesqrt(dot(vec3(_1104, _1105, _1106), vec3(_1104, _1105, _1106)));
        float _1123 = ((_1110 * _1104) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1059 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1124 = ((_1110 * _1105) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1063 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1125 = ((_1110 * _1106) / cbModelParam._m0[34u].z) + ((((((_1067 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1128 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1123, _1124, _1125), 0.0);
        vec4 _1135 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1123, _1124, _1125), 0.0);
        vec4 _1142 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1123, _1124, _1125), 0.0);
        vec4 _1149 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1123, _1124, _1125), 0.0);
        float _1162 = exp2((_1128.w + (-0.5)) * 20.0) * 2.0;
        float _1163 = _1162 * (_1128.x + (-0.5));
        float _1164 = _1162 * (_1128.y + (-0.5));
        float _1165 = _1162 * (_1128.z + (-0.5));
        float _1172 = exp2((_1135.w + (-0.5)) * 20.0) * 2.0;
        float _1173 = _1172 * (_1135.x + (-0.5));
        float _1174 = _1172 * (_1135.y + (-0.5));
        float _1175 = _1172 * (_1135.z + (-0.5));
        float _1182 = exp2((_1142.w + (-0.5)) * 20.0) * 2.0;
        float _1183 = _1182 * (_1142.x + (-0.5));
        float _1184 = _1182 * (_1142.y + (-0.5));
        float _1185 = _1182 * (_1142.z + (-0.5));
        float _1192 = exp2((_1149.w + (-0.5)) * 20.0) * 2.0;
        float _1193 = _1192 * (_1149.x + (-0.5));
        float _1194 = _1192 * (_1149.y + (-0.5));
        float _1195 = _1192 * (_1149.z + (-0.5));
        float _1196 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1197 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1198 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1199 = _1163 * 0.5;
        float _1200 = _1173 * 0.5;
        float _1201 = _1183 * 0.5;
        float _1202 = dot(vec3(_1199, _1200, _1201), vec3(_1199, _1200, _1201));
        float _1207 = (_1202 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1202);
        float _1216 = (dot(vec3(_796, _797, _798), vec3(_1207 * _1199, _1207 * _1200, _1207 * _1201)) + 1.0) * 0.5;
        float _3861 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1226 = sqrt(((_1200 * _1200) + (_1199 * _1199)) + (_1201 * _1201)) / (_1196 + 9.9999997473787516355514526367188e-06);
        float _3872 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1227 = isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0));
        float _1228 = _1227 * 2.0;
        float _1232 = (1.0 - _1227) / (_1227 + 1.0);
        float _3883 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0));
        float _1242 = ((((1.0 - _1233) * (_1228 + 2.0)) * exp2(log2(isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0))) * (_1228 + 1.0))) + _1233) * _1196;
        float _1243 = _1164 * 0.5;
        float _1244 = _1174 * 0.5;
        float _1245 = _1184 * 0.5;
        float _1246 = dot(vec3(_1243, _1244, _1245), vec3(_1243, _1244, _1245));
        float _1251 = (_1246 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1246);
        float _1259 = (dot(vec3(_796, _797, _798), vec3(_1251 * _1243, _1251 * _1244, _1251 * _1245)) + 1.0) * 0.5;
        float _3894 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1268 = sqrt(((_1244 * _1244) + (_1243 * _1243)) + (_1245 * _1245)) / (_1197 + 9.9999997473787516355514526367188e-06);
        float _3905 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1269 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
        float _1270 = _1269 * 2.0;
        float _1274 = (1.0 - _1269) / (_1269 + 1.0);
        float _3916 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
        float _1284 = ((((1.0 - _1275) * (_1270 + 2.0)) * exp2(log2(isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0))) * (_1270 + 1.0))) + _1275) * _1197;
        float _1285 = _1165 * 0.5;
        float _1286 = _1175 * 0.5;
        float _1287 = _1185 * 0.5;
        float _1288 = dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287));
        float _1293 = (_1288 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1288);
        float _1301 = (dot(vec3(_796, _797, _798), vec3(_1293 * _1285, _1293 * _1286, _1293 * _1287)) + 1.0) * 0.5;
        float _3927 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1310 = sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287)) / (_1198 + 9.9999997473787516355514526367188e-06);
        float _3938 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
        float _1311 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
        float _1312 = _1311 * 2.0;
        float _1316 = (1.0 - _1311) / (_1311 + 1.0);
        float _3949 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1317 = isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0));
        float _1326 = ((((1.0 - _1317) * (_1312 + 2.0)) * exp2(log2(isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))) * (_1312 + 1.0))) + _1317) * _1198;
        _1334 = _1165;
        _1336 = _1164;
        _1337 = _1163;
        _1338 = _1175;
        _1339 = _1174;
        _1340 = _1173;
        _1341 = _1185;
        _1342 = _1184;
        _1343 = _1183;
        _1344 = _1198;
        _1345 = _1197;
        _1346 = _1196;
        _1347 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0)));
        _1348 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0)));
        _1349 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0)));
    }
    else
    {
        _1334 = _1335;
        _1336 = _1335;
        _1337 = _1335;
        _1338 = _1335;
        _1339 = _1335;
        _1340 = _1335;
        _1341 = _1335;
        _1342 = _1335;
        _1343 = _1335;
        _1344 = _1335;
        _1345 = _1335;
        _1346 = _1335;
        _1347 = 0.0;
        _1348 = 0.0;
        _1349 = 0.0;
    }
    float _1643;
    float _1644;
    float _1645;
    float _1646;
    float _1647;
    float _1648;
    float _1649;
    float _1650;
    float _1651;
    float _1652;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1374 = fma(_1033, cbModelParam._m0[30u].z, fma(_1029, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1025));
        float _1378 = fma(_1033, cbModelParam._m0[31u].z, fma(_1029, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1025));
        float _1382 = fma(_1033, cbModelParam._m0[32u].z, fma(_1029, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1025));
        float _1405 = _1025 + _796;
        float _1406 = _1029 + _797;
        float _1407 = _1033 + _798;
        float _1417 = fma(_1407, cbModelParam._m0[30u].z, fma(_1406, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1405)) - _1374;
        float _1418 = fma(_1407, cbModelParam._m0[31u].z, fma(_1406, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1405)) - _1378;
        float _1419 = fma(_1407, cbModelParam._m0[32u].z, fma(_1406, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1405)) - _1382;
        float _1423 = inversesqrt(dot(vec3(_1417, _1418, _1419), vec3(_1417, _1418, _1419)));
        float _1436 = ((_1423 * _1417) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1374 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1437 = ((_1423 * _1418) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1378 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1438 = ((_1423 * _1419) / cbModelParam._m0[35u].z) + ((((((_1382 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1436, _1437, _1438), 0.0);
        vec4 _1447 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1436, _1437, _1438), 0.0);
        vec4 _1454 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1436, _1437, _1438), 0.0);
        vec4 _1461 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1436, _1437, _1438), 0.0);
        float _1473 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1440.x + (-0.5));
        float _1475 = _1473 * (_1440.y + (-0.5));
        float _1476 = _1473 * (_1440.z + (-0.5));
        float _1483 = exp2((_1447.w + (-0.5)) * 20.0) * 2.0;
        float _1484 = _1483 * (_1447.x + (-0.5));
        float _1485 = _1483 * (_1447.y + (-0.5));
        float _1486 = _1483 * (_1447.z + (-0.5));
        float _1493 = exp2((_1454.w + (-0.5)) * 20.0) * 2.0;
        float _1494 = _1493 * (_1454.x + (-0.5));
        float _1495 = _1493 * (_1454.y + (-0.5));
        float _1496 = _1493 * (_1454.z + (-0.5));
        float _1503 = exp2((_1461.w + (-0.5)) * 20.0) * 2.0;
        float _1504 = _1503 * (_1461.x + (-0.5));
        float _1505 = _1503 * (_1461.y + (-0.5));
        float _1506 = _1503 * (_1461.z + (-0.5));
        float _1507 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1508 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1509 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1510 = _1474 * 0.5;
        float _1511 = _1484 * 0.5;
        float _1512 = _1494 * 0.5;
        float _1513 = dot(vec3(_1510, _1511, _1512), vec3(_1510, _1511, _1512));
        float _1518 = (_1513 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1513);
        float _1526 = (dot(vec3(_796, _797, _798), vec3(_1518 * _1510, _1518 * _1511, _1518 * _1512)) + 1.0) * 0.5;
        float _3990 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1535 = sqrt(((_1511 * _1511) + (_1510 * _1510)) + (_1512 * _1512)) / (_1507 + 9.9999997473787516355514526367188e-06);
        float _4001 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
        float _1537 = _1536 * 2.0;
        float _1541 = (1.0 - _1536) / (_1536 + 1.0);
        float _4012 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
        float _1551 = ((((1.0 - _1542) * (_1537 + 2.0)) * exp2(log2(isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0))) * (_1537 + 1.0))) + _1542) * _1507;
        float _1552 = _1475 * 0.5;
        float _1553 = _1485 * 0.5;
        float _1554 = _1495 * 0.5;
        float _1555 = dot(vec3(_1552, _1553, _1554), vec3(_1552, _1553, _1554));
        float _1560 = (_1555 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1555);
        float _1568 = (dot(vec3(_796, _797, _798), vec3(_1560 * _1552, _1560 * _1553, _1560 * _1554)) + 1.0) * 0.5;
        float _4023 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1577 = sqrt(((_1553 * _1553) + (_1552 * _1552)) + (_1554 * _1554)) / (_1508 + 9.9999997473787516355514526367188e-06);
        float _4034 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1578 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
        float _1579 = _1578 * 2.0;
        float _1583 = (1.0 - _1578) / (_1578 + 1.0);
        float _4045 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
        float _1593 = ((((1.0 - _1584) * (_1579 + 2.0)) * exp2(log2(isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0))) * (_1579 + 1.0))) + _1584) * _1508;
        float _1594 = _1476 * 0.5;
        float _1595 = _1486 * 0.5;
        float _1596 = _1496 * 0.5;
        float _1597 = dot(vec3(_1594, _1595, _1596), vec3(_1594, _1595, _1596));
        float _1602 = (_1597 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1597);
        float _1610 = (dot(vec3(_796, _797, _798), vec3(_1602 * _1594, _1602 * _1595, _1602 * _1596)) + 1.0) * 0.5;
        float _4056 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1619 = sqrt(((_1595 * _1595) + (_1594 * _1594)) + (_1596 * _1596)) / (_1509 + 9.9999997473787516355514526367188e-06);
        float _4067 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1620 = isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0));
        float _1621 = _1620 * 2.0;
        float _1625 = (1.0 - _1620) / (_1620 + 1.0);
        float _4078 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1626 = isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0));
        float _1635 = ((((1.0 - _1626) * (_1621 + 2.0)) * exp2(log2(isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0))) * (_1621 + 1.0))) + _1626) * _1509;
        _1643 = _1476;
        _1644 = _1475;
        _1645 = _1474;
        _1646 = _1486;
        _1647 = _1485;
        _1648 = _1484;
        _1649 = _1496;
        _1650 = _1495;
        _1651 = _1494;
        _1652 = _1509;
        _1653 = _1508;
        _1654 = _1507;
        _1655 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)));
        _1656 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0)));
        _1657 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0)));
    }
    else
    {
        _1643 = _1335;
        _1644 = _1335;
        _1645 = _1335;
        _1646 = _1335;
        _1647 = _1335;
        _1648 = _1335;
        _1649 = _1335;
        _1650 = _1335;
        _1651 = _1335;
        _1652 = _1335;
        _1653 = _1335;
        _1654 = _1335;
        _1655 = 0.0;
        _1656 = 0.0;
        _1657 = 0.0;
    }
    float _1667 = (cbModelParam._m0[1u].x * (_1655 - _1347)) + _1347;
    float _1668 = (cbModelParam._m0[1u].x * (_1656 - _1348)) + _1348;
    float _1669 = (cbModelParam._m0[1u].x * (_1657 - _1349)) + _1349;
    float _1690 = fma(_1669, cbSceneParam._m0[89u].z, fma(_1668, cbSceneParam._m0[89u].y, _1667 * cbSceneParam._m0[89u].x));
    float _1693 = fma(_1669, cbSceneParam._m0[90u].z, fma(_1668, cbSceneParam._m0[90u].y, _1667 * cbSceneParam._m0[90u].x));
    float _1696 = fma(_1669, cbSceneParam._m0[91u].z, fma(_1668, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1667));
    float _1711 = _969 * 0.5;
    float _1712 = _970 * 0.5;
    float _1713 = _971 * 0.5;
    float _1714 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1645, _1648, _1651, _1654));
    float _1717 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1644, _1647, _1650, _1653));
    float _1720 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1643, _1646, _1649, _1652));
    float _1754;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1727 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1334, _1338, _1341, _1344));
        float _1731 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1336, _1339, _1342, _1345));
        float _1735 = dot(vec4(_1711, _1712, _1713, 1.0), vec4(_1337, _1340, _1343, _1346));
        float _1742 = dot(vec4(cbModelParam._m0[39u]), vec4(_1711, _1712, _1713, 1.0));
        _1754 = dot(vec3(isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0)), isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0)), isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1742) ? 0.0 : (isnan(0.0) ? _1742 : max(0.0, _1742))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1754 = 1.0;
    }
    float _1765;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1756 = dot(vec4(cbModelParam._m0[40u]), vec4(_1711, _1712, _1713, 1.0));
        _1765 = dot(vec3(isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)), isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0)), isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1756) ? 0.0 : (isnan(0.0) ? _1756 : max(0.0, _1756))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1765 = 1.0;
    }
    float _1769 = (_1765 * cbModelParam._m0[1u].x) + (_1754 * (1.0 - cbModelParam._m0[1u].x));
    float _1779 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _799);
    float _1780 = isnan(_1779) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1779 : min(cbModelParam._m0[25u].z, _1779));
    float _1860;
    float _1862;
    float _1864;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1827 = fma(_1033, cbModelParam._m0[13u].z, fma(_1029, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1025)) + cbModelParam._m0[13u].w;
        float _1831 = fma(_1033, cbModelParam._m0[14u].z, fma(_1029, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1025)) + cbModelParam._m0[14u].w;
        float _1835 = fma(_1033, cbModelParam._m0[15u].z, fma(_1029, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1025)) + cbModelParam._m0[15u].w;
        float _1838 = fma(_971, cbModelParam._m0[13u].z, fma(_970, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _969));
        float _1841 = fma(_971, cbModelParam._m0[14u].z, fma(_970, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _969));
        float _1844 = fma(_971, cbModelParam._m0[15u].z, fma(_970, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _969));
        float _1872;
        if (_1838 > 0.0)
        {
            _1872 = abs((1.0 - _1827) / _1838);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1838 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1827 + 1.0) / _1838);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1872 = frontier_phi_14_12_ladder;
        }
        float _2074;
        if (_1841 > 0.0)
        {
            _2074 = abs((1.0 - _1831) / _1841);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1841 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1831 + 1.0) / _1841);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2074 = frontier_phi_23_19_ladder;
        }
        float _2328;
        if (_1844 > 0.0)
        {
            _2328 = abs((1.0 - _1835) / _1844);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1835 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2328 = frontier_phi_35_30_ladder;
        }
        float _2330 = isnan(_2074) ? _1872 : (isnan(_1872) ? _2074 : min(_1872, _2074));
        float _2331 = isnan(_2328) ? _2330 : (isnan(_2330) ? _2328 : min(_2330, _2328));
        float _2335 = (_2331 * _1838) + _1827;
        float _2336 = (_2331 * _1841) + _1831;
        float _2337 = (_2331 * _1844) + _1835;
        float _2338 = _2331 * 9.9999997473787516355514526367188e-05;
        float _2340 = (-1.0) - _2338;
        float _2342 = _2338 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2337 > _2342) || ((_2337 < _2340) || ((_2336 > _2342) || ((_2336 < _2340) || ((_2335 < _2340) || (_2335 > _2342))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2465 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2337, cbModelParam._m0[9u].z, fma(_2336, cbModelParam._m0[9u].y, _2335 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2337, cbModelParam._m0[10u].z, fma(_2336, cbModelParam._m0[10u].y, _2335 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2337, cbModelParam._m0[11u].z, fma(_2336, cbModelParam._m0[11u].y, _2335 * cbModelParam._m0[11u].x))), _1780);
            frontier_phi_13_35_ladder = _2465.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2465.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2465.x * cbModelParam._m0[1u].y;
        }
        _1860 = frontier_phi_13_35_ladder_2;
        _1862 = frontier_phi_13_35_ladder_1;
        _1864 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1848 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_969, _970, _971), _1780);
        _1860 = _1848.x * cbModelParam._m0[1u].y;
        _1862 = _1848.y * cbModelParam._m0[1u].y;
        _1864 = _1848.z * cbModelParam._m0[1u].y;
    }
    float _1868 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _799);
    float _1869 = isnan(_1868) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1868 : min(cbModelParam._m0[25u].w, _1868));
    float _1958;
    float _1960;
    float _1962;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1922 = fma(_1033, cbModelParam._m0[21u].z, fma(_1029, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1025)) + cbModelParam._m0[21u].w;
        float _1926 = fma(_1033, cbModelParam._m0[22u].z, fma(_1029, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1025)) + cbModelParam._m0[22u].w;
        float _1930 = fma(_1033, cbModelParam._m0[23u].z, fma(_1029, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1025)) + cbModelParam._m0[23u].w;
        float _1933 = fma(_971, cbModelParam._m0[21u].z, fma(_970, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _969));
        float _1936 = fma(_971, cbModelParam._m0[22u].z, fma(_970, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _969));
        float _1939 = fma(_971, cbModelParam._m0[23u].z, fma(_970, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _969));
        float _2079;
        if (_1933 > 0.0)
        {
            _2079 = abs((1.0 - _1922) / _1933);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1933 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1922 + 1.0) / _1933);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2079 = frontier_phi_25_21_ladder;
        }
        float _2355;
        if (_1936 > 0.0)
        {
            _2355 = abs((1.0 - _1926) / _1936);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1936 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1926 + 1.0) / _1936);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2355 = frontier_phi_37_32_ladder;
        }
        float _2568;
        if (_1939 > 0.0)
        {
            _2568 = abs((1.0 - _1930) / _1939);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1939 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1930 + 1.0) / _1939);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2568 = frontier_phi_46_43_ladder;
        }
        float _2570 = isnan(_2355) ? _2079 : (isnan(_2079) ? _2355 : min(_2079, _2355));
        float _2571 = isnan(_2568) ? _2570 : (isnan(_2570) ? _2568 : min(_2570, _2568));
        float _2575 = (_2571 * _1933) + _1922;
        float _2576 = (_2571 * _1936) + _1926;
        float _2577 = (_2571 * _1939) + _1930;
        float _2578 = _2571 * 9.9999997473787516355514526367188e-05;
        float _2579 = (-1.0) - _2578;
        float _2581 = _2578 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2577 > _2581) || ((_2577 < _2579) || ((_2576 > _2581) || ((_2576 < _2579) || ((_2575 < _2579) || (_2575 > _2581))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2776 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2577, cbModelParam._m0[17u].z, fma(_2576, cbModelParam._m0[17u].y, _2575 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2577, cbModelParam._m0[18u].z, fma(_2576, cbModelParam._m0[18u].y, _2575 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2577, cbModelParam._m0[19u].z, fma(_2576, cbModelParam._m0[19u].y, _2575 * cbModelParam._m0[19u].x))), _1869);
            frontier_phi_22_46_ladder = _2776.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2776.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2776.x * cbModelParam._m0[1u].z;
        }
        _1958 = frontier_phi_22_46_ladder_2;
        _1960 = frontier_phi_22_46_ladder_1;
        _1962 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1942 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_969, _970, _971), _1869);
        _1958 = _1942.x * cbModelParam._m0[1u].z;
        _1960 = _1942.y * cbModelParam._m0[1u].z;
        _1962 = _1942.z * cbModelParam._m0[1u].z;
    }
    float _1975 = (((_996 * _945) + _997) * _961) * ((cbModelParam._m0[1u].w * (_1958 - _1860)) + _1860);
    float _1977 = (((_996 * _947) + _997) * _961) * ((cbModelParam._m0[1u].w * (_1960 - _1862)) + _1862);
    float _1979 = (((_996 * _948) + _997) * _961) * ((cbModelParam._m0[1u].w * (_1962 - _1864)) + _1864);
    float _1982 = fma(_1979, cbSceneParam._m0[89u].z, fma(_1977, cbSceneParam._m0[89u].y, _1975 * cbSceneParam._m0[89u].x));
    float _1985 = fma(_1979, cbSceneParam._m0[90u].z, fma(_1977, cbSceneParam._m0[90u].y, _1975 * cbSceneParam._m0[90u].x));
    float _1988 = fma(_1979, cbSceneParam._m0[91u].z, fma(_1977, cbSceneParam._m0[91u].y, _1975 * cbSceneParam._m0[91u].x));
    uvec4 _1998 = floatBitsToUint(cbInstanceData._m0[_257 + 5u]);
    uint _2000 = _1998.x * 14u;
    uint _2001 = _2000 + 13u;
    float _2008 = _961 + (-1.0);
    float _2013 = (cbLight._m0[_2001].x * _2008) + 1.0;
    float _2014 = (cbLight._m0[_2001].y * _2008) + 1.0;
    float _2015 = (cbLight._m0[_2001].z * _2008) + 1.0;
    float _2016 = (cbLight._m0[_2001].w * _2008) + 1.0;
    uint _2017 = _2000 + 5u;
    float _2023 = isnan(1.0) ? _2014 : (isnan(_2014) ? 1.0 : min(_2014, 1.0));
    uint _2027 = _2000 + 4u;
    float _2033 = isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0));
    uint _2037 = _2000 | 1u;
    float _2048 = dot(vec3(cbLight._m0[_2000].xyz), vec3(_796, _797, _798));
    float _2051 = dot(vec3(cbLight._m0[_2037].xyz), vec3(_796, _797, _798));
    float _4214 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _4225 = isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0));
    float _2056 = (isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))) * 0.3183098733425140380859375;
    float _2058 = (isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0))) * 0.3183098733425140380859375;
    float _2065 = ((cbLight._m0[_2017].x * _2023) * _2058) + ((cbLight._m0[_2027].x * _2033) * _2056);
    float _2066 = ((_2023 * cbLight._m0[_2017].y) * _2058) + ((_2033 * cbLight._m0[_2027].y) * _2056);
    float _2067 = ((_2023 * cbLight._m0[_2017].z) * _2058) + ((_2033 * cbLight._m0[_2027].z) * _2056);
    uvec4 _2071 = floatBitsToUint(cbLight._m0[_2000 + 12u]);
    bool _2073 = _2071.x == 0u;
    float _2084;
    float _2086;
    float _2088;
    if (_2073)
    {
        _2084 = _2065;
        _2086 = _2066;
        _2088 = _2067;
    }
    else
    {
        uint _2092 = _2000 + 6u;
        float _2108 = (dot(vec3(cbLight._m0[_2000 + 2u].xyz), vec3(_796, _797, _798)) * 0.5) + 0.5;
        float _2109 = _2108 * _2108;
        float _4236 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
        float _2110 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _2111 = isnan(1.0) ? _2015 : (isnan(_2015) ? 1.0 : min(_2015, 1.0));
        _2084 = (((cbLight._m0[_2092].x * 0.3183098733425140380859375) * _2110) * _2111) + _2065;
        _2086 = (((cbLight._m0[_2092].y * 0.3183098733425140380859375) * _2110) * _2111) + _2066;
        _2088 = (((cbLight._m0[_2092].z * 0.3183098733425140380859375) * _2110) * _2111) + _2067;
    }
    bool _2091 = _2071.y == 0u;
    float _2129;
    float _2131;
    float _2133;
    if (_2091)
    {
        _2129 = _2084;
        _2131 = _2086;
        _2133 = _2088;
    }
    else
    {
        uint _2299 = _2000 + 7u;
        float _2315 = (dot(vec3(cbLight._m0[_2000 + 3u].xyz), vec3(_796, _797, _798)) * 0.5) + 0.5;
        float _2316 = _2315 * _2315;
        float _4252 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
        float _2317 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
        float _2318 = isnan(1.0) ? _2016 : (isnan(_2016) ? 1.0 : min(_2016, 1.0));
        _2129 = (((cbLight._m0[_2299].x * 0.3183098733425140380859375) * _2317) * _2318) + _2084;
        _2131 = (((cbLight._m0[_2299].y * 0.3183098733425140380859375) * _2317) * _2318) + _2086;
        _2133 = (((cbLight._m0[_2299].z * 0.3183098733425140380859375) * _2317) * _2318) + _2088;
    }
    uint _2136 = _2000 + 8u;
    float _2149 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2000].w)) * _799) * 0.949999988079071044921875);
    float _2150 = _2149 * _2149;
    float _2151 = cbLight._m0[_2000].x + _875;
    float _2152 = cbLight._m0[_2000].y + _876;
    float _2153 = cbLight._m0[_2000].z + _877;
    float _2157 = inversesqrt(dot(vec3(_2151, _2152, _2153), vec3(_2151, _2152, _2153)));
    float _2158 = _2157 * _2151;
    float _2159 = _2157 * _2152;
    float _2160 = _2157 * _2153;
    float _2161 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2000].xyz));
    float _4268 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
    float _2164 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _4279 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _2165 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
    float _2166 = dot(vec3(_796, _797, _798), vec3(_2158, _2159, _2160));
    float _4290 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    float _2169 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
    float _2170 = dot(vec3(cbLight._m0[_2000].xyz), vec3(_2158, _2159, _2160));
    float _4301 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
    float _2174 = _2150 * _2150;
    float _2178 = ((_2169 * _2169) * (_2174 + (-1.0))) + 1.0;
    float _2186 = exp2(log2(1.0 - (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0)))) * 5.0);
    float _2187 = 0.959999978542327880859375 - _942;
    float _2189 = 0.959999978542327880859375 - _943;
    float _2190 = 0.959999978542327880859375 - _944;
    float _2197 = 1.0 - _2150;
    float _2208 = (0.5 / (((_2165 * ((_2164 * _2197) + _2150)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2197) + _2150) * _2164))) * _2164;
    float _4312 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
    float _2210 = (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_2174 / ((_2178 * _2178) * 3.141590118408203125));
    uint _2221 = _2000 + 9u;
    float _2232 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2037].w)) * _799) * 0.949999988079071044921875);
    float _2233 = _2232 * _2232;
    float _2234 = cbLight._m0[_2037].x + _875;
    float _2235 = cbLight._m0[_2037].y + _876;
    float _2236 = cbLight._m0[_2037].z + _877;
    float _2240 = inversesqrt(dot(vec3(_2234, _2235, _2236), vec3(_2234, _2235, _2236)));
    float _2241 = _2240 * _2234;
    float _2242 = _2240 * _2235;
    float _2243 = _2240 * _2236;
    float _2244 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2037].xyz));
    float _4323 = isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0));
    float _2247 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
    float _2248 = dot(vec3(_796, _797, _798), vec3(_2241, _2242, _2243));
    float _4334 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
    float _2251 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
    float _2252 = dot(vec3(cbLight._m0[_2037].xyz), vec3(_2241, _2242, _2243));
    float _4345 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _2256 = _2233 * _2233;
    float _2260 = ((_2251 * _2251) * (_2256 + (-1.0))) + 1.0;
    float _2267 = exp2(log2(1.0 - (isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0)))) * 5.0);
    float _2274 = 1.0 - _2233;
    float _2284 = (0.5 / (((_2165 * ((_2247 * _2274) + _2233)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2274) + _2233) * _2247))) * _2247;
    float _4356 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
    float _2286 = (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0))) * (_2256 / ((_2260 * _2260) * 3.141590118408203125));
    float _2296 = (((((_2267 * _2187) + _945) * cbLight._m0[_2221].x) * _2286) * _2023) + (((((_2186 * _2187) + _945) * cbLight._m0[_2136].x) * _2210) * _2033);
    float _2297 = (((((_2267 * _2189) + _947) * cbLight._m0[_2221].y) * _2286) * _2023) + (((((_2186 * _2189) + _947) * cbLight._m0[_2136].y) * _2210) * _2033);
    float _2298 = (((((_2267 * _2190) + _948) * cbLight._m0[_2221].z) * _2286) * _2023) + (((((_2186 * _2190) + _948) * cbLight._m0[_2136].z) * _2210) * _2033);
    float _2360;
    float _2362;
    float _2364;
    if (_2073)
    {
        _2360 = _2296;
        _2362 = _2297;
        _2364 = _2298;
    }
    else
    {
        uint _2366 = _2000 + 2u;
        uint _2370 = _2000 + 10u;
        float _2384 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2366].w)) * _799) * 0.949999988079071044921875);
        float _2385 = _2384 * _2384;
        float _2386 = cbLight._m0[_2366].x + _875;
        float _2387 = cbLight._m0[_2366].y + _876;
        float _2388 = cbLight._m0[_2366].z + _877;
        float _2392 = inversesqrt(dot(vec3(_2386, _2387, _2388), vec3(_2386, _2387, _2388)));
        float _2393 = _2392 * _2386;
        float _2394 = _2392 * _2387;
        float _2395 = _2392 * _2388;
        float _2396 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2366].xyz));
        float _4367 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
        float _2399 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _2400 = dot(vec3(_796, _797, _798), vec3(_2393, _2394, _2395));
        float _4378 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
        float _2403 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
        float _2404 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_2393, _2394, _2395));
        float _4389 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
        float _2408 = _2385 * _2385;
        float _2412 = ((_2403 * _2403) * (_2408 + (-1.0))) + 1.0;
        float _2419 = exp2(log2(1.0 - (isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0)))) * 5.0);
        float _2426 = 1.0 - _2385;
        float _2436 = (0.5 / (((_2165 * ((_2399 * _2426) + _2385)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2426) + _2385) * _2399))) * _2399;
        float _4400 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
        float _2438 = (isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0))) * (_2408 / ((_2412 * _2412) * 3.141590118408203125));
        float _2439 = isnan(1.0) ? _2015 : (isnan(_2015) ? 1.0 : min(_2015, 1.0));
        _2360 = (((((_2419 * _2187) + _945) * cbLight._m0[_2370].x) * _2438) * _2439) + _2296;
        _2362 = (((((_2419 * _2189) + _947) * cbLight._m0[_2370].y) * _2438) * _2439) + _2297;
        _2364 = (((((_2419 * _2190) + _948) * cbLight._m0[_2370].z) * _2438) * _2439) + _2298;
    }
    float _2474;
    float _2476;
    float _2478;
    if (_2091)
    {
        _2474 = _2360;
        _2476 = _2362;
        _2478 = _2364;
    }
    else
    {
        uint _2485 = _2000 + 3u;
        uint _2489 = _2000 + 11u;
        float _2503 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2485].w)) * _799) * 0.949999988079071044921875);
        float _2504 = _2503 * _2503;
        float _2505 = cbLight._m0[_2485].x + _875;
        float _2506 = cbLight._m0[_2485].y + _876;
        float _2507 = cbLight._m0[_2485].z + _877;
        float _2511 = inversesqrt(dot(vec3(_2505, _2506, _2507), vec3(_2505, _2506, _2507)));
        float _2512 = _2511 * _2505;
        float _2513 = _2511 * _2506;
        float _2514 = _2511 * _2507;
        float _2515 = dot(vec3(_796, _797, _798), vec3(cbLight._m0[_2485].xyz));
        float _4416 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
        float _2518 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _2519 = dot(vec3(_796, _797, _798), vec3(_2512, _2513, _2514));
        float _4427 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
        float _2522 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
        float _2523 = dot(vec3(cbLight._m0[_2485].xyz), vec3(_2512, _2513, _2514));
        float _4438 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
        float _2527 = _2504 * _2504;
        float _2531 = ((_2522 * _2522) * (_2527 + (-1.0))) + 1.0;
        float _2538 = exp2(log2(1.0 - (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0)))) * 5.0);
        float _2545 = 1.0 - _2504;
        float _2555 = (0.5 / (((_2165 * ((_2518 * _2545) + _2504)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2545) + _2504) * _2518))) * _2518;
        float _4449 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
        float _2557 = (isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0))) * (_2527 / ((_2531 * _2531) * 3.141590118408203125));
        float _2558 = isnan(1.0) ? _2016 : (isnan(_2016) ? 1.0 : min(_2016, 1.0));
        _2474 = (((((_2538 * _2187) + _945) * cbLight._m0[_2489].x) * _2557) * _2558) + _2360;
        _2476 = (((((_2538 * _2189) + _947) * cbLight._m0[_2489].y) * _2557) * _2558) + _2362;
        _2478 = (((((_2538 * _2190) + _948) * cbLight._m0[_2489].z) * _2557) * _2558) + _2364;
    }
    float _2693;
    float _2695;
    float _2697;
    float _2699;
    float _2701;
    float _2703;
    if (_1998.y == 0u)
    {
        float _2633 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2634 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2633;
        float _2635 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2633;
        float _2636 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2633;
        uvec4 _2648 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2649 = _2648.x;
        uint _2660 = uint((float(_2648.y) * floor(float(uint(cbSceneParam._m0[85u].y * _884) / _2649))) + floor(float(uint(cbSceneParam._m0[85u].x * _883) / _2649)));
        float _2670 = (log2(_2636 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2671 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        uint _2674 = uint(isnan(14.0) ? _2671 : (isnan(_2671) ? 14.0 : min(_2671, 14.0)));
        uvec4 _2679 = texelFetch(g_lightClusterGridBuffer, int(((_2674 << 2u) + (_2660 << 6u)) >> 2u));
        uint _2680 = _2679.x;
        uint _2681 = _2648.z;
        float _2781;
        float _2783;
        float _2785;
        float _2787;
        float _2789;
        float _2791;
        if (((((1u << ((_2681 >> 4u) & 15u)) + 4294967295u) & _2680) == 0u) || ((_2681 & 240u) == 0u))
        {
            _2781 = 0.0;
            _2783 = 0.0;
            _2785 = 0.0;
            _2787 = 0.0;
            _2789 = 0.0;
            _2791 = 0.0;
        }
        else
        {
            float _2782;
            float _2784;
            float _2786;
            float _2788;
            float _2790;
            float _2792;
            float _2926 = 0.0;
            float _2927 = 0.0;
            float _2928 = 0.0;
            float _2929 = 0.0;
            float _2930 = 0.0;
            float _2931 = 0.0;
            uint _2932 = 0u;
            uint _2941;
            bool _2942;
            for (;;)
            {
                _2941 = texelFetch(g_lightClassification, int((((_2674 << 5u) + (_2660 << 9u)) + (_2932 << 2u)) >> 2u)).x;
                _2942 = _2941 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2942)
                {
                    frontier_phi_61_pred = _2926;
                    frontier_phi_61_pred_1 = _2931;
                    frontier_phi_61_pred_2 = _2930;
                    frontier_phi_61_pred_3 = _2929;
                    frontier_phi_61_pred_4 = _2928;
                    frontier_phi_61_pred_5 = _2927;
                }
                else
                {
                    float _3050;
                    float _3051;
                    float _3052;
                    float _3053;
                    float _3054;
                    float _3055;
                    uint _3056;
                    _3050 = _2926;
                    _3051 = _2927;
                    _3052 = _2928;
                    _3053 = _2929;
                    _3054 = _2930;
                    _3055 = _2931;
                    _3056 = _2941;
                    float _2982;
                    float _2983;
                    float _2984;
                    float _2985;
                    float _2986;
                    float _2987;
                    for (;;)
                    {
                        uint _3060 = uint(findLSB(_3056)) + (_2932 << 5u);
                        uint _3057 = (_3056 + 4294967295u) & _3056;
                        uint _3062 = _3060 * 48u;
                        vec4 _3076 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3062)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 3u)).x));
                        uint _3082 = (_3060 * 48u) + 4u;
                        vec4 _3095 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3082)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 3u)).x));
                        uint _3101 = (_3060 * 48u) + 8u;
                        vec3 _3112 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3101)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 2u)).x));
                        float _3116 = _3076.x - _2634;
                        float _3117 = _3076.y - _2635;
                        float _3118 = _3076.z - _2636;
                        float _3119 = dot(vec3(_3116, _3117, _3118), vec3(_3116, _3117, _3118));
                        float _3122 = inversesqrt(_3119);
                        float _3123 = _3122 * _3116;
                        float _3124 = _3122 * _3117;
                        float _3125 = _3122 * _3118;
                        float _3126 = dot(vec3(_902, _905, _908), vec3(_3123, _3124, _3125));
                        float _3131 = 1.0 - (_3119 * _3076.w);
                        float _4475 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0));
                        float _3132 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
                        float _3133 = sqrt(_3119) * _3095.w;
                        float _3136 = 1.39999997615814208984375 / (_3133 + 1.39999997615814208984375);
                        float _3137 = _3136 * _3136;
                        float _3140 = ((1.0 - _3137) * _3126) + _3137;
                        float _3143 = _3133 * _3133;
                        float _3147 = ((isnan(0.0) ? _3140 : (isnan(_3140) ? 0.0 : max(_3140, 0.0))) * _3132) / ((_3143 * 0.699999988079071044921875) + 1.0);
                        float _3151 = (-0.0) - _2634;
                        float _3152 = (-0.0) - _2635;
                        float _3153 = (-0.0) - _2636;
                        float _3157 = inversesqrt(dot(vec3(_3151, _3152, _3153), vec3(_3151, _3152, _3153)));
                        float _3158 = _3157 * _3151;
                        float _3159 = _3157 * _3152;
                        float _3160 = _3157 * _3153;
                        float _3168 = exp2(log2(1.0 / ((_3143 * 3.5) + 5.0)) * 0.25);
                        float _3169 = 1.0 - _977;
                        float _3176 = sqrt(1.0 - ((1.0 - (_3169 * _3169)) * (1.0 - (_3168 * _3168))));
                        float _3177 = _3176 * _3176;
                        float _3178 = _3177 * _3177;
                        float _3179 = _3158 + _3123;
                        float _3180 = _3159 + _3124;
                        float _3181 = _3160 + _3125;
                        float _3185 = inversesqrt(dot(vec3(_3179, _3180, _3181), vec3(_3179, _3180, _3181)));
                        float _3189 = dot(vec3(_902, _905, _908), vec3(_3158, _3159, _3160));
                        float _4491 = isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : max(_3189, 0.0));
                        float _3192 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
                        float _3193 = dot(vec3(_902, _905, _908), vec3(_3185 * _3179, _3185 * _3180, _3185 * _3181));
                        float _4502 = isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : max(_3193, 0.0));
                        float _3196 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
                        float _3200 = ((_3196 * _3196) * (_3178 + (-1.0))) + 1.0;
                        float _3201 = _3136 * _3177;
                        float _3202 = _3201 * _3201;
                        float _3205 = ((1.0 - _3202) * _3126) + _3202;
                        float _4513 = isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : max(_3205, 0.0));
                        float _3206 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
                        float _3207 = 1.0 - _3177;
                        float _3217 = (0.5 / (((_3206 * ((_3192 * _3207) + _3177)) + 9.9999999392252902907785028219223e-09) + (((_3206 * _3207) + _3177) * _3192))) * _3206;
                        float _4524 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0));
                        float _3228 = (((_3178 * 3.1415927410125732421875) * (isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0)))) / ((_3200 * _3200) * ((_3143 * 2.1991131305694580078125) + 3.141590118408203125))) * _3132;
                        _2985 = (_3147 * _3095.x) + _3053;
                        _2986 = (_3147 * _3095.y) + _3054;
                        _2987 = (_3147 * _3095.z) + _3055;
                        _2982 = (_3228 * _3112.x) + _3050;
                        _2983 = (_3228 * _3112.y) + _3051;
                        _2984 = (_3228 * _3112.z) + _3052;
                        if (_3057 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3050 = _2982;
                            _3051 = _2983;
                            _3052 = _2984;
                            _3053 = _2985;
                            _3054 = _2986;
                            _3055 = _2987;
                            _3056 = _3057;
                        }
                    }
                    frontier_phi_61_pred = _2982;
                    frontier_phi_61_pred_1 = _2987;
                    frontier_phi_61_pred_2 = _2986;
                    frontier_phi_61_pred_3 = _2985;
                    frontier_phi_61_pred_4 = _2984;
                    frontier_phi_61_pred_5 = _2983;
                }
                _2782 = frontier_phi_61_pred;
                _2792 = frontier_phi_61_pred_1;
                _2790 = frontier_phi_61_pred_2;
                _2788 = frontier_phi_61_pred_3;
                _2786 = frontier_phi_61_pred_4;
                _2784 = frontier_phi_61_pred_5;
                uint _2933 = _2932 + 1u;
                if (_2933 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2926 = _2782;
                    _2927 = _2784;
                    _2928 = _2786;
                    _2929 = _2788;
                    _2930 = _2790;
                    _2931 = _2792;
                    _2932 = _2933;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2781 = _2782;
            _2783 = _2784;
            _2785 = _2786;
            _2787 = _2788;
            _2789 = _2790;
            _2791 = _2792;
        }
        uvec4 _2795 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2796 = _2795.z;
        uint _2798 = (_2796 >> 8u) & 15u;
        float _2894;
        float _2896;
        float _2898;
        float _2900;
        float _2902;
        float _2904;
        if (((4294967295u << _2798) & _2680) == 0u)
        {
            _2894 = _2781;
            _2896 = _2783;
            _2898 = _2785;
            _2900 = _2787;
            _2902 = _2789;
            _2904 = _2791;
        }
        else
        {
            float _2919 = inversesqrt(dot(vec3(_2634, _2635, _2636), vec3(_2634, _2635, _2636)));
            float _2920 = _2919 * _2634;
            float _2921 = _2919 * _2635;
            float _2922 = _2919 * _2636;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2798 < ((_2796 >> 12u) & 15u))
            {
                float _2895;
                float _2897;
                float _2899;
                float _2901;
                float _2903;
                float _2905;
                float _3033 = _2781;
                float _3034 = _2783;
                float _3035 = _2785;
                float _3036 = _2787;
                float _3037 = _2789;
                float _3038 = _2791;
                uint _3039 = _2798;
                uint _3048;
                bool _3049;
                for (;;)
                {
                    _3048 = texelFetch(g_lightClassification, int((((_2674 << 5u) + (_2660 << 9u)) + (_3039 << 2u)) >> 2u)).x;
                    _3049 = _3048 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3049)
                    {
                        frontier_phi_67_pred = _3036;
                        frontier_phi_67_pred_1 = _3037;
                        frontier_phi_67_pred_2 = _3038;
                        frontier_phi_67_pred_3 = _3035;
                        frontier_phi_67_pred_4 = _3034;
                        frontier_phi_67_pred_5 = _3033;
                    }
                    else
                    {
                        float _3233;
                        float _3234;
                        float _3235;
                        float _3236;
                        float _3237;
                        float _3238;
                        float _3526;
                        float _3527;
                        float _3528;
                        float _3529;
                        float _3530;
                        float _3531;
                        float _3246 = _3033;
                        float _3247 = _3034;
                        float _3248 = _3035;
                        float _3249 = _3036;
                        float _3250 = _3037;
                        float _3251 = _3038;
                        uint _3252 = _3048;
                        uint _3253;
                        vec4 _3278;
                        float _3279;
                        vec4 _3294;
                        vec3 _3306;
                        vec4 _3321;
                        vec4 _3336;
                        float _3382;
                        bool _3383;
                        for (;;)
                        {
                            uint _3263 = ((_3039 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3252));
                            _3253 = (_3252 + 4294967295u) & _3252;
                            uint _3265 = _3263 * 40u;
                            _3278 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3265)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3265 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3265 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3265 + 3u)).x));
                            _3279 = _3278.w;
                            uint _3281 = (_3263 * 40u) + 4u;
                            _3294 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3281)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3281 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3281 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3281 + 3u)).x));
                            uint _3296 = (_3263 * 40u) + 8u;
                            _3306 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3296)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3296 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3296 + 2u)).x));
                            uint _3308 = (_3263 * 40u) + 16u;
                            _3321 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3308)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 3u)).x));
                            uint _3323 = (_3263 * 40u) + 20u;
                            _3336 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3323)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3323 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3323 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3323 + 3u)).x));
                            uint _3338 = (_3263 * 40u) + 24u;
                            vec4 _3351 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3338)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3338 + 3u)).x));
                            uint _3357 = (_3263 * 40u) + 28u;
                            vec4 _3370 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3357)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3357 + 3u)).x));
                            _3382 = fma(_2636, _3370.z, fma(_2635, _3370.y, _3370.x * _2634)) + _3370.w;
                            _3383 = !((fma(_2636, _3351.z, fma(_2635, _3351.y, _3351.x * _2634)) + _3351.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3383)
                            {
                                float _3410 = _3278.x - _2634;
                                float _3411 = _3278.y - _2635;
                                float _3412 = _3278.z - _2636;
                                float _3413 = dot(vec3(_3410, _3411, _3412), vec3(_3410, _3411, _3412));
                                float _3416 = inversesqrt(_3413);
                                float _3417 = _3416 * _3410;
                                float _3418 = _3416 * _3411;
                                float _3419 = _3416 * _3412;
                                float _3423 = 1.0 - (_3413 / (_3279 * _3279));
                                float _4535 = isnan(0.0) ? _3423 : (isnan(_3423) ? 0.0 : max(_3423, 0.0));
                                float _3424 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
                                float _3428 = sqrt(_3413) * _3294.w;
                                float _3430 = 1.39999997615814208984375 / (_3428 + 1.39999997615814208984375);
                                float _3431 = _3430 * _3430;
                                float _3434 = ((1.0 - _3431) * dot(vec3(_3417, _3418, _3419), vec3(_902, _905, _908))) + _3431;
                                float _3437 = _3428 * _3428;
                                float _3441 = (fma(_2636, _3321.z, fma(_2635, _3321.y, _3321.x * _2634)) + _3321.w) / _3382;
                                float _3442 = (fma(_2636, _3336.z, fma(_2635, _3336.y, _3336.x * _2634)) + _3336.w) / _3382;
                                float _3446 = 1.0 - dot(vec2(_3441, _3442), vec2(_3441, _3442));
                                float _4551 = isnan(0.0) ? _3446 : (isnan(_3446) ? 0.0 : max(_3446, 0.0));
                                float _3447 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
                                float _3448 = _3447 * (((isnan(0.0) ? _3434 : (isnan(_3434) ? 0.0 : max(_3434, 0.0))) * _3424) / ((_3437 * 0.699999988079071044921875) + 1.0));
                                float _3460 = exp2(log2(1.0 / ((_3437 * 3.5) + 5.0)) * 0.25);
                                float _3461 = 1.0 - _977;
                                float _3468 = sqrt(1.0 - ((1.0 - (_3461 * _3461)) * (1.0 - (_3460 * _3460))));
                                float _3469 = _3468 * _3468;
                                float _3470 = _3469 * _3469;
                                float _3471 = _3417 - _2920;
                                float _3472 = _3418 - _2921;
                                float _3473 = _3419 - _2922;
                                float _3477 = inversesqrt(dot(vec3(_3471, _3472, _3473), vec3(_3471, _3472, _3473)));
                                float _3481 = dot(vec3(_902, _905, _908), vec3((-0.0) - _2920, (-0.0) - _2921, (-0.0) - _2922));
                                float _4562 = isnan(0.0) ? _3481 : (isnan(_3481) ? 0.0 : max(_3481, 0.0));
                                float _3484 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
                                float _3485 = dot(vec3(_902, _905, _908), vec3(_3477 * _3471, _3477 * _3472, _3477 * _3473));
                                float _4573 = isnan(0.0) ? _3485 : (isnan(_3485) ? 0.0 : max(_3485, 0.0));
                                float _3488 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
                                float _3492 = ((_3488 * _3488) * (_3470 + (-1.0))) + 1.0;
                                float _3493 = _3430 * _3469;
                                float _3494 = _3493 * _3493;
                                float _3500 = ((1.0 - _3494) * dot(vec3(_902, _905, _908), vec3(_3417, _3418, _3419))) + _3494;
                                float _4584 = isnan(0.0) ? _3500 : (isnan(_3500) ? 0.0 : max(_3500, 0.0));
                                float _3501 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
                                float _3502 = 1.0 - _3469;
                                float _3512 = (0.5 / (((_3501 * ((_3484 * _3502) + _3469)) + 9.9999999392252902907785028219223e-09) + (((_3501 * _3502) + _3469) * _3484))) * _3501;
                                float _4595 = isnan(0.0) ? _3512 : (isnan(_3512) ? 0.0 : max(_3512, 0.0));
                                float _3522 = (_3447 * _3424) * (((_3470 * 3.1415927410125732421875) * (isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0)))) / ((_3492 * _3492) * ((_3437 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3522 * _3306.x;
                                frontier_phi_73_pred_1 = _3522 * _3306.y;
                                frontier_phi_73_pred_2 = _3448 * _3294.z;
                                frontier_phi_73_pred_3 = _3448 * _3294.y;
                                frontier_phi_73_pred_4 = _3448 * _3294.x;
                                frontier_phi_73_pred_5 = _3522 * _3306.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3526 = frontier_phi_73_pred;
                            _3527 = frontier_phi_73_pred_1;
                            _3531 = frontier_phi_73_pred_2;
                            _3530 = frontier_phi_73_pred_3;
                            _3529 = frontier_phi_73_pred_4;
                            _3528 = frontier_phi_73_pred_5;
                            _3236 = _3529 + _3249;
                            _3237 = _3530 + _3250;
                            _3238 = _3531 + _3251;
                            _3233 = _3526 + _3246;
                            _3234 = _3527 + _3247;
                            _3235 = _3528 + _3248;
                            if (_3253 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3246 = _3233;
                                _3247 = _3234;
                                _3248 = _3235;
                                _3249 = _3236;
                                _3250 = _3237;
                                _3251 = _3238;
                                _3252 = _3253;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3236;
                        frontier_phi_67_pred_1 = _3237;
                        frontier_phi_67_pred_2 = _3238;
                        frontier_phi_67_pred_3 = _3235;
                        frontier_phi_67_pred_4 = _3234;
                        frontier_phi_67_pred_5 = _3233;
                    }
                    _2901 = frontier_phi_67_pred;
                    _2903 = frontier_phi_67_pred_1;
                    _2905 = frontier_phi_67_pred_2;
                    _2899 = frontier_phi_67_pred_3;
                    _2897 = frontier_phi_67_pred_4;
                    _2895 = frontier_phi_67_pred_5;
                    uint _3040 = _3039 + 1u;
                    if (_3040 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3033 = _2895;
                        _3034 = _2897;
                        _3035 = _2899;
                        _3036 = _2901;
                        _3037 = _2903;
                        _3038 = _2905;
                        _3039 = _3040;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2903;
                frontier_phi_55_56_ladder_1 = _2905;
                frontier_phi_55_56_ladder_2 = _2901;
                frontier_phi_55_56_ladder_3 = _2899;
                frontier_phi_55_56_ladder_4 = _2897;
                frontier_phi_55_56_ladder_5 = _2895;
            }
            else
            {
                frontier_phi_55_56_ladder = _2789;
                frontier_phi_55_56_ladder_1 = _2791;
                frontier_phi_55_56_ladder_2 = _2787;
                frontier_phi_55_56_ladder_3 = _2785;
                frontier_phi_55_56_ladder_4 = _2783;
                frontier_phi_55_56_ladder_5 = _2781;
            }
            _2894 = frontier_phi_55_56_ladder_5;
            _2896 = frontier_phi_55_56_ladder_4;
            _2898 = frontier_phi_55_56_ladder_3;
            _2900 = frontier_phi_55_56_ladder_2;
            _2902 = frontier_phi_55_56_ladder;
            _2904 = frontier_phi_55_56_ladder_1;
        }
        float _2909 = isnan(1.0) ? _961 : (isnan(_961) ? 1.0 : min(_961, 1.0));
        _2693 = (_2909 * _2900) + _2129;
        _2695 = (_2909 * _2902) + _2131;
        _2697 = (_2909 * _2904) + _2133;
        _2699 = ((_2894 * _945) * _2909) + _2474;
        _2701 = ((_2896 * _947) * _2909) + _2476;
        _2703 = ((_2898 * _948) * _2909) + _2478;
    }
    else
    {
        _2693 = _2129;
        _2695 = _2131;
        _2697 = _2133;
        _2699 = _2474;
        _2701 = _2476;
        _2703 = _2478;
    }
    float _4611 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _4622 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    float _4633 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    uint _2723 = _257 + 6u;
    float _2731 = _883 / cbSceneParam._m0[86u].x;
    float _2732 = _884 / cbSceneParam._m0[86u].y;
    vec4 _2746 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2731, _2732, (log2((isnan(cbSceneParam._m0[77u].w) ? _818 : (isnan(_818) ? cbSceneParam._m0[77u].w : min(_818, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2748 = _2746.x;
    float _2749 = _2746.y;
    float _2750 = _2746.z;
    float _2751 = _2746.w;
    float _2844;
    float _2846;
    float _2848;
    float _2850;
    if (_818 > cbSceneParam._m0[78u].w)
    {
        float _2806 = isnan(_818) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _818 : min(cbSceneParam._m0[80u].w, _818));
        float _2807 = _2806 / _818;
        float _2818 = _2807 * _868;
        float _2819 = _869 * _2807;
        float _2820 = (-0.0) - _2819;
        float _2822 = _2807 * _870;
        float _2824 = (cbSceneParam._m0[77u].w * _2820) / _2806;
        float _2825 = _2824 + cbSceneParam._m0[79u].w;
        float _2826 = cbSceneParam._m0[79u].w - _2819;
        float _2832 = sqrt(((_2818 * _2818) + (_2819 * _2819)) + (_2822 * _2822));
        float _2835 = (1.0 - (cbSceneParam._m0[77u].w / _2806)) * _2832;
        float _2840 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2842 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2995;
        if (abs((_2820 - _2824) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2995 = ((((_2825 > 0.0) ? exp2(_2840 * _2825) : (2.0 - exp2(_2842 * _2825))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2835;
        }
        else
        {
            float _2955 = 1.0 / cbSceneParam._m0[80u].x;
            float _2956 = isnan(_2826) ? _2825 : (isnan(_2825) ? _2826 : max(_2825, _2826));
            float _2957 = isnan(_2826) ? _2825 : (isnan(_2825) ? _2826 : min(_2825, _2826));
            float _2966 = isnan(0.0) ? _2956 : (isnan(_2956) ? 0.0 : min(_2956, 0.0));
            float _2967 = isnan(0.0) ? _2957 : (isnan(_2957) ? 0.0 : min(_2957, 0.0));
            _2995 = ((abs(_2832 / _2820) * cbSceneParam._m0[80u].y) * ((((_2966 - _2967) * 2.0) - ((exp2(_2840 * (isnan(0.0) ? _2956 : (isnan(_2956) ? 0.0 : max(_2956, 0.0)))) - exp2(_2840 * (isnan(0.0) ? _2957 : (isnan(_2957) ? 0.0 : max(_2957, 0.0))))) * _2955)) - ((exp2(_2842 * _2966) - exp2(_2842 * _2967)) * _2955))) + (_2835 * cbSceneParam._m0[80u].z);
        }
        vec4 _2997 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2731, _2732, 1.0), 0.0);
        float _3006 = exp2((_2995 * (-1.44269502162933349609375)) * (1.0 - _2997.w));
        float _3007 = log2(_3006);
        float _3023 = log2(_2751);
        _2844 = (exp2(_3023 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3007 * cbSceneParam._m0[78u].x)) * _2997.x) / cbSceneParam._m0[78u].x)) + _2748;
        _2846 = (exp2(_3023 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3007 * cbSceneParam._m0[78u].y)) * _2997.y) / cbSceneParam._m0[78u].y)) + _2749;
        _2848 = (exp2(_3023 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3007 * cbSceneParam._m0[78u].z)) * _2997.z) / cbSceneParam._m0[78u].z)) + _2750;
        _2850 = _3006 * _2751;
    }
    else
    {
        _2844 = _2748;
        _2846 = _2749;
        _2848 = _2750;
        _2850 = _2751;
    }
    float _2862 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2863 = _2862 == 3.0;
    float _2864 = log2(_2850);
    float _2871 = exp2(_2864 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * (_2693 + ((isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))) * _961))) + ((_2699 + ((isnan(0.0) ? _1982 : (isnan(_1982) ? 0.0 : max(_1982, 0.0))) * _1769)) * cbPerFrame._m0[3u].x));
    float _2872 = exp2(_2864 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))) * (_2695 + ((isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0))) * _961))) + ((_2701 + ((isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0))) * _1769)) * cbPerFrame._m0[3u].x));
    float _2873 = exp2(_2864 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0))) * (_2697 + ((isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))) * _961))) + ((_2703 + ((isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0))) * _1769)) * cbPerFrame._m0[3u].x));
    float _2882 = (_2862 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2882 * (_2863 ? _2871 : (_2871 + (cbSceneParam._m0[72u].w * _2844)));
    SV_Target.y = _2882 * (_2863 ? _2872 : (_2872 + (cbSceneParam._m0[72u].w * _2846)));
    SV_Target.z = _2882 * (_2863 ? _2873 : (_2873 + (cbSceneParam._m0[72u].w * _2848)));
    SV_Target.w = cbInstanceData._m0[_2723].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2723].w;
}


