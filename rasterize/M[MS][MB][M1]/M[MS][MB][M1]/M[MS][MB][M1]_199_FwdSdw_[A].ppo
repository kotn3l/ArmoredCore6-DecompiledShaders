#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1458;
float _4119;
float _4120;
float _4121;
float _4122;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _235 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _236 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _237 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _243 = inversesqrt(dot(vec3(_235, _236, _237), vec3(_235, _236, _237)));
    float _250 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4131 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _4142 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _4153 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    uint _284 = uint(roundEven(NORMAL.w)) * 13u;
    uint _289 = _284 + 1u;
    uint _293 = _284 + 2u;
    float _302 = sqrt(((cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x) + (cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x)) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x));
    float _303 = _302 * TEXCOORD.z;
    float _304 = _302 * TEXCOORD.w;
    vec4 _317 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _303) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _304) + cbTextureTilingScale._m0[13u].w));
    vec4 _341 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _346 = _341.x * cbMtdParam._m0[11u].x;
    float _347 = _341.y * cbMtdParam._m0[11u].y;
    float _348 = _341.z * cbMtdParam._m0[11u].z;
    vec4 _367 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _303) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _304) + cbTextureTilingScale._m0[5u].w));
    vec4 _404 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _406 = _404.x;
    float _418 = dot(vec4(_406, _404.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _435 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_406 - _418) * cbMtdParam._m0[24u].y) + _418) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4164 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _436 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
    float _443 = (_436 * ((_367.x * cbMtdParam._m0[12u].x) - _346)) + _346;
    float _444 = (_436 * ((_367.y * cbMtdParam._m0[12u].y) - _347)) + _347;
    float _445 = (_436 * ((_367.z * cbMtdParam._m0[12u].z) - _348)) + _348;
    vec4 _462 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _303) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _304) + cbTextureTilingScale._m0[3u].w));
    vec4 _482 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _484 = _482.x;
    float _494 = dot(vec4(_484, _482.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _508 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_484 - _494) * cbMtdParam._m0[24u].y) + _494) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4175 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _509 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _516 = (_509 * ((_462.x * cbMtdParam._m0[13u].x) - _443)) + _443;
    float _517 = (_509 * ((_462.y * cbMtdParam._m0[13u].y) - _444)) + _444;
    float _518 = (_509 * ((_462.z * cbMtdParam._m0[13u].z) - _445)) + _445;
    float _522 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _317.x) * _516;
    float _525 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _317.y) * _517;
    float _528 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _317.z) * _518;
    float _535 = ((_516 - _522) * (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0)))) + _522;
    float _536 = ((_517 - _525) * (isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0)))) + _525;
    float _537 = ((_518 - _528) * (isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0)))) + _528;
    vec4 _556 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _303) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _304) + cbTextureTilingScale._m0[14u].w));
    vec4 _575 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _303) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _304) + cbTextureTilingScale._m0[20u].w));
    vec4 _598 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _303) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _304) + cbTextureTilingScale._m0[4u].w));
    vec4 _615 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _617 = _615.x;
    float _618 = _615.y;
    float _619 = _615.z;
    float _626 = ((_598.x - _617) * _436) + _617;
    float _627 = ((_598.y - _618) * _436) + _618;
    float _628 = ((_598.z - _619) * _436) + _619;
    vec4 _640 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _303) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _304) + cbTextureTilingScale._m0[2u].w));
    float _653 = ((_640.z - _628) * _509) + _628;
    float _656 = ((((_640.x - _626) * _509) + _626) * 2.0) + (-1.0);
    float _657 = ((((_640.y - _627) * _509) + _627) * 2.0) + (-1.0);
    float _658 = dot(vec2(_656, _657), vec2(_656, _657));
    float _4186 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _663 = sqrt(1.0 - (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0))));
    vec4 _677 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _702 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _303) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _304) + cbTextureTilingScale._m0[11u].w));
    float _704 = _702.x;
    float _705 = 1.0 - _704;
    float _718 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_704 - _705) * cbMtdParam._m0[24u].z) + _705) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4197 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _719 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _726 = (_719 * ((_556.x * cbMtdParam._m0[18u].x) - _535)) + _535;
    float _727 = (_719 * ((_556.y * cbMtdParam._m0[18u].y) - _536)) + _536;
    float _728 = (_719 * ((_556.z * cbMtdParam._m0[18u].z) - _537)) + _537;
    vec4 _740 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _754 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _756 = _754.x;
    float _774 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _303) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _304) + cbTextureTilingScale._m0[9u].w)).x - _756) * _436) + _756;
    float _791 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _303) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _304) + cbTextureTilingScale._m0[21u].w)).x - _774) * _509) + _774;
    float _795 = ((_740.x - _791) * cbMtdParam._m0[19u].z) + _791;
    float _797 = _795 - (_795 * _719);
    float _802 = (((_575.z - _653) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _653;
    float _806 = ((_677.z - _802) * cbMtdParam._m0[19u].w) + _802;
    vec4 _819 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _303) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _304) + cbTextureTilingScale._m0[15u].w));
    float _826 = (_819.x * 2.0) + (-1.0);
    float _827 = (_819.y * 2.0) + (-1.0);
    float _828 = dot(vec2(_826, _827), vec2(_826, _827));
    float _4208 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _836 = (_719 * (_819.z - _806)) + _806;
    float _845 = (_656 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_575.x * 2.0) + (-1.0)))) + (((_677.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _846 = (_657 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_575.y * 2.0) + (-1.0)))) + (((_677.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _858 = (((_826 - _845) + (cbMtdParam._m0[21u].x * _845)) * _719) + _845;
    float _859 = (((_827 - _846) + (cbMtdParam._m0[21u].x * _846)) * _719) + _846;
    float _860 = (_719 * (sqrt(1.0 - (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)))) - _663)) + _663;
    float _864 = cbMtdParam._m0[22u].x + _677.w;
    float _867 = fma(_860, _250 * NORMAL.x, fma(_859, _257 * TANGENT.x, (_243 * _235) * _858));
    float _870 = fma(_860, _250 * NORMAL.y, fma(_859, _257 * TANGENT.y, (_243 * _236) * _858));
    float _873 = fma(_860, _250 * NORMAL.z, fma(_859, _257 * TANGENT.z, (_243 * _237) * _858));
    float _877 = inversesqrt(dot(vec3(_867, _870, _873), vec3(_867, _870, _873)));
    float _878 = _877 * _867;
    float _879 = _877 * _870;
    float _880 = _877 * _873;
    float _4219 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _881 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _4230 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4241 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _4252 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _4263 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _4274 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _886 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
    float _900 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _941 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _951 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _941);
    float _952 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _941);
    float _953 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _941);
    float _957 = inversesqrt(dot(vec3(_951, _952, _953), vec3(_951, _952, _953)));
    float _958 = _951 * _957;
    float _959 = _952 * _957;
    float _960 = _953 * _957;
    vec4 _965 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _967 = _965.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1139 = sqrt(((_951 * _951) + (_952 * _952)) + (_953 * _953));
        float _1145 = (cbMatDynParam._m0[5u].x * _1139) + cbMatDynParam._m0[5u].y;
        float _4285 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1146 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
        float _1150 = (cbMatDynParam._m0[5u].z * _1139) + cbMatDynParam._m0[5u].w;
        float _4296 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0))) - _1146)) + _1146) < ((_967 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _978 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _979 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _997 = fma(_880, cbSceneParam._m0[5u].z, fma(_879, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _878));
    float _1000 = fma(_880, cbSceneParam._m0[6u].z, fma(_879, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _878));
    float _1003 = fma(_880, cbSceneParam._m0[7u].z, fma(_879, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _878));
    uint _1016 = _284 + 9u;
    uint _1017 = _1016 + uint(cbMatDynParam._m0[0u].w);
    float _1023 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0)))) * cbInstanceData._m0[_1017].x;
    float _1024 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0)))) * cbInstanceData._m0[_1017].y;
    float _1025 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0)))) * cbInstanceData._m0[_1017].z;
    float _4307 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1026 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
    float _4318 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    float _1027 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
    float _4329 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _1028 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
    float _1029 = 1.0 - _886;
    float _1030 = _1026 * _1029;
    float _1031 = _1027 * _1029;
    float _1032 = _1028 * _1029;
    float _1037 = (_1026 + (-0.039999999105930328369140625)) * _886;
    float _1038 = (_1027 + (-0.039999999105930328369140625)) * _886;
    float _1039 = (_1028 + (-0.039999999105930328369140625)) * _886;
    float _1040 = _1037 + 0.039999999105930328369140625;
    float _1042 = _1038 + 0.039999999105930328369140625;
    float _1043 = _1039 + 0.039999999105930328369140625;
    vec4 _1052 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _978, cbSceneParam._m0[86u].y * _979));
    float _1056 = ((isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0))) * TEXCOORD_5.w) * _1052.x;
    float _1057 = dot(vec3(_878, _879, _880), vec3(_958, _959, _960));
    float _1060 = _1057 * 2.0;
    float _1064 = (_1060 * _878) - _958;
    float _1065 = (_1060 * _879) - _959;
    float _1066 = (_1060 * _880) - _960;
    float _1070 = abs(dot(vec3(_958, _959, _960), vec3(_878, _879, _880)));
    float _4340 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _1072 = sqrt(_881);
    float _1085 = exp2((_1072 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1072 * 3.0));
    float _1091 = (1.0 - _1085) * ((_1072 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1092 = _1085 * _1072;
    float _1120 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1124 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1128 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1457;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1182 = fma(_1128, cbModelParam._m0[26u].z, fma(_1124, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1120));
        float _1186 = fma(_1128, cbModelParam._m0[27u].z, fma(_1124, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1120));
        float _1190 = fma(_1128, cbModelParam._m0[28u].z, fma(_1124, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1120));
        float _1215 = _1120 + _878;
        float _1216 = _1124 + _879;
        float _1217 = _1128 + _880;
        float _1227 = fma(_1217, cbModelParam._m0[26u].z, fma(_1216, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1215)) - _1182;
        float _1228 = fma(_1217, cbModelParam._m0[27u].z, fma(_1216, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1215)) - _1186;
        float _1229 = fma(_1217, cbModelParam._m0[28u].z, fma(_1216, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1215)) - _1190;
        float _1233 = inversesqrt(dot(vec3(_1227, _1228, _1229), vec3(_1227, _1228, _1229)));
        float _1246 = ((_1233 * _1227) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1182 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1247 = ((_1233 * _1228) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1186 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1248 = ((_1233 * _1229) / cbModelParam._m0[34u].z) + ((((((_1190 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1251 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1246, _1247, _1248), 0.0);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1246, _1247, _1248), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1246, _1247, _1248), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1246, _1247, _1248), 0.0);
        float _1285 = exp2((_1251.w + (-0.5)) * 20.0) * 2.0;
        float _1286 = _1285 * (_1251.x + (-0.5));
        float _1287 = _1285 * (_1251.y + (-0.5));
        float _1288 = _1285 * (_1251.z + (-0.5));
        float _1295 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1296 = _1295 * (_1258.x + (-0.5));
        float _1297 = _1295 * (_1258.y + (-0.5));
        float _1298 = _1295 * (_1258.z + (-0.5));
        float _1305 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1306 = _1305 * (_1265.x + (-0.5));
        float _1307 = _1305 * (_1265.y + (-0.5));
        float _1308 = _1305 * (_1265.z + (-0.5));
        float _1315 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1272.x + (-0.5));
        float _1317 = _1315 * (_1272.y + (-0.5));
        float _1318 = _1315 * (_1272.z + (-0.5));
        float _1319 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1322 = _1286 * 0.5;
        float _1323 = _1296 * 0.5;
        float _1324 = _1306 * 0.5;
        float _1325 = dot(vec3(_1322, _1323, _1324), vec3(_1322, _1323, _1324));
        float _1330 = (_1325 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1325);
        float _1339 = (dot(vec3(_878, _879, _880), vec3(_1330 * _1322, _1330 * _1323, _1330 * _1324)) + 1.0) * 0.5;
        float _4366 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1349 = sqrt(((_1323 * _1323) + (_1322 * _1322)) + (_1324 * _1324)) / (_1319 + 9.9999997473787516355514526367188e-06);
        float _4377 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1350 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1351 = _1350 * 2.0;
        float _1355 = (1.0 - _1350) / (_1350 + 1.0);
        float _4388 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1356 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
        float _1365 = ((((1.0 - _1356) * (_1351 + 2.0)) * exp2(log2(isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0))) * (_1351 + 1.0))) + _1356) * _1319;
        float _1366 = _1287 * 0.5;
        float _1367 = _1297 * 0.5;
        float _1368 = _1307 * 0.5;
        float _1369 = dot(vec3(_1366, _1367, _1368), vec3(_1366, _1367, _1368));
        float _1374 = (_1369 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1369);
        float _1382 = (dot(vec3(_878, _879, _880), vec3(_1374 * _1366, _1374 * _1367, _1374 * _1368)) + 1.0) * 0.5;
        float _4399 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1391 = sqrt(((_1367 * _1367) + (_1366 * _1366)) + (_1368 * _1368)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _4410 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1392 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1393 = _1392 * 2.0;
        float _1397 = (1.0 - _1392) / (_1392 + 1.0);
        float _4421 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1398 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
        float _1407 = ((((1.0 - _1398) * (_1393 + 2.0)) * exp2(log2(isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_1393 + 1.0))) + _1398) * _1320;
        float _1408 = _1288 * 0.5;
        float _1409 = _1298 * 0.5;
        float _1410 = _1308 * 0.5;
        float _1411 = dot(vec3(_1408, _1409, _1410), vec3(_1408, _1409, _1410));
        float _1416 = (_1411 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1411);
        float _1424 = (dot(vec3(_878, _879, _880), vec3(_1416 * _1408, _1416 * _1409, _1416 * _1410)) + 1.0) * 0.5;
        float _4432 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1433 = sqrt(((_1409 * _1409) + (_1408 * _1408)) + (_1410 * _1410)) / (_1321 + 9.9999997473787516355514526367188e-06);
        float _4443 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1435 = _1434 * 2.0;
        float _1439 = (1.0 - _1434) / (_1434 + 1.0);
        float _4454 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1440 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _1449 = ((((1.0 - _1440) * (_1435 + 2.0)) * exp2(log2(isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_1435 + 1.0))) + _1440) * _1321;
        _1457 = _1288;
        _1459 = _1287;
        _1460 = _1286;
        _1461 = _1298;
        _1462 = _1297;
        _1463 = _1296;
        _1464 = _1308;
        _1465 = _1307;
        _1466 = _1306;
        _1467 = _1321;
        _1468 = _1320;
        _1469 = _1319;
        _1470 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0)));
        _1471 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0)));
        _1472 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0)));
    }
    else
    {
        _1457 = _1458;
        _1459 = _1458;
        _1460 = _1458;
        _1461 = _1458;
        _1462 = _1458;
        _1463 = _1458;
        _1464 = _1458;
        _1465 = _1458;
        _1466 = _1458;
        _1467 = _1458;
        _1468 = _1458;
        _1469 = _1458;
        _1470 = 0.0;
        _1471 = 0.0;
        _1472 = 0.0;
    }
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1499 = fma(_1128, cbModelParam._m0[30u].z, fma(_1124, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1120));
        float _1503 = fma(_1128, cbModelParam._m0[31u].z, fma(_1124, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1120));
        float _1507 = fma(_1128, cbModelParam._m0[32u].z, fma(_1124, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1120));
        float _1530 = _1120 + _878;
        float _1531 = _1124 + _879;
        float _1532 = _1128 + _880;
        float _1542 = fma(_1532, cbModelParam._m0[30u].z, fma(_1531, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1530)) - _1499;
        float _1543 = fma(_1532, cbModelParam._m0[31u].z, fma(_1531, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1530)) - _1503;
        float _1544 = fma(_1532, cbModelParam._m0[32u].z, fma(_1531, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1530)) - _1507;
        float _1548 = inversesqrt(dot(vec3(_1542, _1543, _1544), vec3(_1542, _1543, _1544)));
        float _1561 = ((_1548 * _1542) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1499 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1562 = ((_1548 * _1543) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1503 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1563 = ((_1548 * _1544) / cbModelParam._m0[35u].z) + ((((((_1507 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1565 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1586 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        float _1598 = exp2((_1565.w + (-0.5)) * 20.0) * 2.0;
        float _1599 = _1598 * (_1565.x + (-0.5));
        float _1600 = _1598 * (_1565.y + (-0.5));
        float _1601 = _1598 * (_1565.z + (-0.5));
        float _1608 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1572.x + (-0.5));
        float _1610 = _1608 * (_1572.y + (-0.5));
        float _1611 = _1608 * (_1572.z + (-0.5));
        float _1618 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1619 = _1618 * (_1579.x + (-0.5));
        float _1620 = _1618 * (_1579.y + (-0.5));
        float _1621 = _1618 * (_1579.z + (-0.5));
        float _1628 = exp2((_1586.w + (-0.5)) * 20.0) * 2.0;
        float _1629 = _1628 * (_1586.x + (-0.5));
        float _1630 = _1628 * (_1586.y + (-0.5));
        float _1631 = _1628 * (_1586.z + (-0.5));
        float _1632 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1634 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1635 = _1599 * 0.5;
        float _1636 = _1609 * 0.5;
        float _1637 = _1619 * 0.5;
        float _1638 = dot(vec3(_1635, _1636, _1637), vec3(_1635, _1636, _1637));
        float _1643 = (_1638 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1638);
        float _1651 = (dot(vec3(_878, _879, _880), vec3(_1643 * _1635, _1643 * _1636, _1643 * _1637)) + 1.0) * 0.5;
        float _4495 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
        float _1660 = sqrt(((_1636 * _1636) + (_1635 * _1635)) + (_1637 * _1637)) / (_1632 + 9.9999997473787516355514526367188e-06);
        float _4506 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1661 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
        float _1662 = _1661 * 2.0;
        float _1666 = (1.0 - _1661) / (_1661 + 1.0);
        float _4517 = isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0));
        float _1667 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
        float _1676 = ((((1.0 - _1667) * (_1662 + 2.0)) * exp2(log2(isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0))) * (_1662 + 1.0))) + _1667) * _1632;
        float _1677 = _1600 * 0.5;
        float _1678 = _1610 * 0.5;
        float _1679 = _1620 * 0.5;
        float _1680 = dot(vec3(_1677, _1678, _1679), vec3(_1677, _1678, _1679));
        float _1685 = (_1680 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1680);
        float _1693 = (dot(vec3(_878, _879, _880), vec3(_1685 * _1677, _1685 * _1678, _1685 * _1679)) + 1.0) * 0.5;
        float _4528 = isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0));
        float _1702 = sqrt(((_1678 * _1678) + (_1677 * _1677)) + (_1679 * _1679)) / (_1633 + 9.9999997473787516355514526367188e-06);
        float _4539 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
        float _1704 = _1703 * 2.0;
        float _1708 = (1.0 - _1703) / (_1703 + 1.0);
        float _4550 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1709 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
        float _1718 = ((((1.0 - _1709) * (_1704 + 2.0)) * exp2(log2(isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0))) * (_1704 + 1.0))) + _1709) * _1633;
        float _1719 = _1601 * 0.5;
        float _1720 = _1611 * 0.5;
        float _1721 = _1621 * 0.5;
        float _1722 = dot(vec3(_1719, _1720, _1721), vec3(_1719, _1720, _1721));
        float _1727 = (_1722 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1722);
        float _1735 = (dot(vec3(_878, _879, _880), vec3(_1727 * _1719, _1727 * _1720, _1727 * _1721)) + 1.0) * 0.5;
        float _4561 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1744 = sqrt(((_1720 * _1720) + (_1719 * _1719)) + (_1721 * _1721)) / (_1634 + 9.9999997473787516355514526367188e-06);
        float _4572 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1745 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
        float _1746 = _1745 * 2.0;
        float _1750 = (1.0 - _1745) / (_1745 + 1.0);
        float _4583 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1751 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
        float _1760 = ((((1.0 - _1751) * (_1746 + 2.0)) * exp2(log2(isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * (_1746 + 1.0))) + _1751) * _1634;
        _1768 = _1601;
        _1769 = _1600;
        _1770 = _1599;
        _1771 = _1611;
        _1772 = _1610;
        _1773 = _1609;
        _1774 = _1621;
        _1775 = _1620;
        _1776 = _1619;
        _1777 = _1634;
        _1778 = _1633;
        _1779 = _1632;
        _1780 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)));
        _1781 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0)));
        _1782 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0)));
    }
    else
    {
        _1768 = _1458;
        _1769 = _1458;
        _1770 = _1458;
        _1771 = _1458;
        _1772 = _1458;
        _1773 = _1458;
        _1774 = _1458;
        _1775 = _1458;
        _1776 = _1458;
        _1777 = _1458;
        _1778 = _1458;
        _1779 = _1458;
        _1780 = 0.0;
        _1781 = 0.0;
        _1782 = 0.0;
    }
    float _1792 = (cbModelParam._m0[1u].x * (_1780 - _1470)) + _1470;
    float _1793 = (cbModelParam._m0[1u].x * (_1781 - _1471)) + _1471;
    float _1794 = (cbModelParam._m0[1u].x * (_1782 - _1472)) + _1472;
    float _1815 = fma(_1794, cbSceneParam._m0[89u].z, fma(_1793, cbSceneParam._m0[89u].y, _1792 * cbSceneParam._m0[89u].x));
    float _1818 = fma(_1794, cbSceneParam._m0[90u].z, fma(_1793, cbSceneParam._m0[90u].y, _1792 * cbSceneParam._m0[90u].x));
    float _1821 = fma(_1794, cbSceneParam._m0[91u].z, fma(_1793, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1792));
    float _1836 = _1064 * 0.5;
    float _1837 = _1065 * 0.5;
    float _1838 = _1066 * 0.5;
    float _1839 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1770, _1773, _1776, _1779));
    float _1842 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1769, _1772, _1775, _1778));
    float _1845 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1768, _1771, _1774, _1777));
    float _1879;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1852 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1457, _1461, _1464, _1467));
        float _1856 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1459, _1462, _1465, _1468));
        float _1860 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1460, _1463, _1466, _1469));
        float _1867 = dot(vec4(cbModelParam._m0[39u]), vec4(_1836, _1837, _1838, 1.0));
        _1879 = dot(vec3(isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1867) ? 0.0 : (isnan(0.0) ? _1867 : max(0.0, _1867))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1879 = 1.0;
    }
    float _1890;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1881 = dot(vec4(cbModelParam._m0[40u]), vec4(_1836, _1837, _1838, 1.0));
        _1890 = dot(vec3(isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0)), isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1881) ? 0.0 : (isnan(0.0) ? _1881 : max(0.0, _1881))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1890 = 1.0;
    }
    float _1894 = (_1890 * cbModelParam._m0[1u].x) + (_1879 * (1.0 - cbModelParam._m0[1u].x));
    float _1904 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _881);
    float _1905 = isnan(_1904) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1904 : min(cbModelParam._m0[25u].z, _1904));
    float _1985;
    float _1987;
    float _1989;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1952 = fma(_1128, cbModelParam._m0[13u].z, fma(_1124, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1120)) + cbModelParam._m0[13u].w;
        float _1956 = fma(_1128, cbModelParam._m0[14u].z, fma(_1124, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1120)) + cbModelParam._m0[14u].w;
        float _1960 = fma(_1128, cbModelParam._m0[15u].z, fma(_1124, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1120)) + cbModelParam._m0[15u].w;
        float _1963 = fma(_1066, cbModelParam._m0[13u].z, fma(_1065, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1064));
        float _1966 = fma(_1066, cbModelParam._m0[14u].z, fma(_1065, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1064));
        float _1969 = fma(_1066, cbModelParam._m0[15u].z, fma(_1065, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1064));
        float _1997;
        if (_1963 > 0.0)
        {
            _1997 = abs((1.0 - _1952) / _1963);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1963 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1952 + 1.0) / _1963);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1997 = frontier_phi_17_15_ladder;
        }
        float _2168;
        if (_1966 > 0.0)
        {
            _2168 = abs((1.0 - _1956) / _1966);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1966 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1956 + 1.0) / _1966);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2168 = frontier_phi_26_22_ladder;
        }
        float _2463;
        if (_1969 > 0.0)
        {
            _2463 = abs((1.0 - _1960) / _1969);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1960 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2463 = frontier_phi_38_33_ladder;
        }
        float _2465 = isnan(_2168) ? _1997 : (isnan(_1997) ? _2168 : min(_1997, _2168));
        float _2466 = isnan(_2463) ? _2465 : (isnan(_2465) ? _2463 : min(_2465, _2463));
        float _2470 = (_2466 * _1963) + _1952;
        float _2471 = (_2466 * _1966) + _1956;
        float _2472 = (_2466 * _1969) + _1960;
        float _2473 = _2466 * 9.9999997473787516355514526367188e-05;
        float _2475 = (-1.0) - _2473;
        float _2477 = _2473 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2472 > _2477) || ((_2472 < _2475) || ((_2471 > _2477) || ((_2471 < _2475) || ((_2470 < _2475) || (_2470 > _2477))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2617 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2472, cbModelParam._m0[9u].z, fma(_2471, cbModelParam._m0[9u].y, _2470 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2472, cbModelParam._m0[10u].z, fma(_2471, cbModelParam._m0[10u].y, _2470 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2472, cbModelParam._m0[11u].z, fma(_2471, cbModelParam._m0[11u].y, _2470 * cbModelParam._m0[11u].x))), _1905);
            frontier_phi_16_38_ladder = _2617.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2617.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2617.x * cbModelParam._m0[1u].y;
        }
        _1985 = frontier_phi_16_38_ladder_2;
        _1987 = frontier_phi_16_38_ladder_1;
        _1989 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1973 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1064, _1065, _1066), _1905);
        _1985 = _1973.x * cbModelParam._m0[1u].y;
        _1987 = _1973.y * cbModelParam._m0[1u].y;
        _1989 = _1973.z * cbModelParam._m0[1u].y;
    }
    float _1993 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _881);
    float _1994 = isnan(_1993) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1993 : min(cbModelParam._m0[25u].w, _1993));
    float _2083;
    float _2085;
    float _2087;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2047 = fma(_1128, cbModelParam._m0[21u].z, fma(_1124, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1120)) + cbModelParam._m0[21u].w;
        float _2051 = fma(_1128, cbModelParam._m0[22u].z, fma(_1124, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1120)) + cbModelParam._m0[22u].w;
        float _2055 = fma(_1128, cbModelParam._m0[23u].z, fma(_1124, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1120)) + cbModelParam._m0[23u].w;
        float _2058 = fma(_1066, cbModelParam._m0[21u].z, fma(_1065, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1064));
        float _2061 = fma(_1066, cbModelParam._m0[22u].z, fma(_1065, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1064));
        float _2064 = fma(_1066, cbModelParam._m0[23u].z, fma(_1065, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1064));
        float _2173;
        if (_2058 > 0.0)
        {
            _2173 = abs((1.0 - _2047) / _2058);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2047 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2173 = frontier_phi_28_24_ladder;
        }
        float _2490;
        if (_2061 > 0.0)
        {
            _2490 = abs((1.0 - _2051) / _2061);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2061 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2051 + 1.0) / _2061);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2490 = frontier_phi_40_35_ladder;
        }
        float _2828;
        if (_2064 > 0.0)
        {
            _2828 = abs((1.0 - _2055) / _2064);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2064 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2055 + 1.0) / _2064);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2828 = frontier_phi_50_47_ladder;
        }
        float _2830 = isnan(_2490) ? _2173 : (isnan(_2173) ? _2490 : min(_2173, _2490));
        float _2831 = isnan(_2828) ? _2830 : (isnan(_2830) ? _2828 : min(_2830, _2828));
        float _2835 = (_2831 * _2058) + _2047;
        float _2836 = (_2831 * _2061) + _2051;
        float _2837 = (_2831 * _2064) + _2055;
        float _2838 = _2831 * 9.9999997473787516355514526367188e-05;
        float _2839 = (-1.0) - _2838;
        float _2841 = _2838 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2837 > _2841) || ((_2837 < _2839) || ((_2836 > _2841) || ((_2836 < _2839) || ((_2835 < _2839) || (_2835 > _2841))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2959 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2837, cbModelParam._m0[17u].z, fma(_2836, cbModelParam._m0[17u].y, _2835 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2837, cbModelParam._m0[18u].z, fma(_2836, cbModelParam._m0[18u].y, _2835 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2837, cbModelParam._m0[19u].z, fma(_2836, cbModelParam._m0[19u].y, _2835 * cbModelParam._m0[19u].x))), _1994);
            frontier_phi_25_50_ladder = _2959.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2959.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2959.x * cbModelParam._m0[1u].z;
        }
        _2083 = frontier_phi_25_50_ladder_2;
        _2085 = frontier_phi_25_50_ladder_1;
        _2087 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2067 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1064, _1065, _1066), _1994);
        _2083 = _2067.x * cbModelParam._m0[1u].z;
        _2085 = _2067.y * cbModelParam._m0[1u].z;
        _2087 = _2067.z * cbModelParam._m0[1u].z;
    }
    float _2100 = (((_1091 * _1040) + _1092) * _1056) * ((cbModelParam._m0[1u].w * (_2083 - _1985)) + _1985);
    float _2102 = (((_1091 * _1042) + _1092) * _1056) * ((cbModelParam._m0[1u].w * (_2085 - _1987)) + _1987);
    float _2104 = (((_1091 * _1043) + _1092) * _1056) * ((cbModelParam._m0[1u].w * (_2087 - _1989)) + _1989);
    float _2107 = fma(_2104, cbSceneParam._m0[89u].z, fma(_2102, cbSceneParam._m0[89u].y, _2100 * cbSceneParam._m0[89u].x));
    float _2110 = fma(_2104, cbSceneParam._m0[90u].z, fma(_2102, cbSceneParam._m0[90u].y, _2100 * cbSceneParam._m0[90u].x));
    float _2113 = fma(_2104, cbSceneParam._m0[91u].z, fma(_2102, cbSceneParam._m0[91u].y, _2100 * cbSceneParam._m0[91u].x));
    float _2147 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2155 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2159 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2160 = _2147 / _2159;
    float _2161 = _2151 / _2159;
    float _2162 = _2155 / _2159;
    float _2309;
    float _2310;
    float _2311;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2189 = ((uint(_2162 > cbSceneParam._m0[59u].y) + uint(_2162 > cbSceneParam._m0[59u].x)) + uint(_2162 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2190 = _2189 + 43u;
        uint _2198 = _2189 + 44u;
        uint _2206 = _2189 + 45u;
        uint _2214 = _2189 + 46u;
        float _2225 = fma(_2159, cbSceneParam._m0[_2190].w, fma(_2155, cbSceneParam._m0[_2190].z, fma(_2151, cbSceneParam._m0[_2190].y, _2147 * cbSceneParam._m0[_2190].x)));
        float _2229 = fma(_2159, cbSceneParam._m0[_2198].w, fma(_2155, cbSceneParam._m0[_2198].z, fma(_2151, cbSceneParam._m0[_2198].y, _2147 * cbSceneParam._m0[_2198].x)));
        float _2237 = fma(_2159, cbSceneParam._m0[_2214].w, fma(_2155, cbSceneParam._m0[_2214].z, fma(_2151, cbSceneParam._m0[_2214].y, _2147 * cbSceneParam._m0[_2214].x)));
        float _2242 = cbSceneParam._m0[33u].z * _2237;
        float _2244 = cbSceneParam._m0[33u].w * _2237;
        float _2247 = fma(_2159, cbSceneParam._m0[_2206].w, fma(_2155, cbSceneParam._m0[_2206].z, fma(_2151, cbSceneParam._m0[_2206].y, _2147 * cbSceneParam._m0[_2206].x))) / _2237;
        float _2295 = (cbSceneParam._m0[33u].x - sqrt(((_2161 * _2161) + (_2160 * _2160)) + (_2162 * _2162))) * cbSceneParam._m0[33u].y;
        float _4709 = isnan(0.0) ? _2295 : (isnan(_2295) ? 0.0 : max(_2295, 0.0));
        float _2302 = (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2242 + _2225) / _2237, (_2244 + _2229) / _2237), _2247), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2244 + _2225) / _2237, (_2229 - _2242) / _2237), _2247), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2225 - _2242) / _2237, (_2229 - _2244) / _2237), _2247), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2225 - _2244) / _2237, (_2242 + _2229) / _2237), _2247), 0.0)).x), vec4(0.25)));
        _2309 = 1.0 - (_2302 * cbSceneParam._m0[34u].x);
        _2310 = 1.0 - (_2302 * cbSceneParam._m0[34u].y);
        _2311 = 1.0 - (_2302 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2309 = 1.0;
        _2310 = 1.0;
        _2311 = 1.0;
    }
    float _2375;
    float _2377;
    float _2379;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2363 = fma(_2159, cbSceneParam._m0[63u].w, fma(_2155, cbSceneParam._m0[63u].z, fma(_2151, cbSceneParam._m0[63u].y, _2147 * cbSceneParam._m0[63u].x)));
        float _2364 = fma(_2159, cbSceneParam._m0[60u].w, fma(_2155, cbSceneParam._m0[60u].z, fma(_2151, cbSceneParam._m0[60u].y, _2147 * cbSceneParam._m0[60u].x))) / _2363;
        float _2365 = fma(_2159, cbSceneParam._m0[61u].w, fma(_2155, cbSceneParam._m0[61u].z, fma(_2151, cbSceneParam._m0[61u].y, _2147 * cbSceneParam._m0[61u].x))) / _2363;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2364 >= cbSceneParam._m0[64u].x) && (_2365 >= cbSceneParam._m0[64u].y)) && (_2364 <= cbSceneParam._m0[64u].z)) && (_2365 <= cbSceneParam._m0[64u].w))
        {
            float _2503 = fma(_2159, cbSceneParam._m0[62u].w, fma(_2155, cbSceneParam._m0[62u].z, fma(_2151, cbSceneParam._m0[62u].y, _2147 * cbSceneParam._m0[62u].x))) / _2363;
            float _2507 = isnan(cbSceneParam._m0[41u].w) ? _2503 : (isnan(_2503) ? cbSceneParam._m0[41u].w : max(_2503, cbSceneParam._m0[41u].w));
            float _2550 = (cbSceneParam._m0[33u].x - sqrt(((_2161 * _2161) + (_2160 * _2160)) + (_2162 * _2162))) * cbSceneParam._m0[33u].y;
            float _4725 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
            float _2557 = (isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2364, cbSceneParam._m0[33u].w + _2365), _2507), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2364, _2365 - cbSceneParam._m0[33u].z), _2507), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2364 - cbSceneParam._m0[33u].z, _2365 - cbSceneParam._m0[33u].w), _2507), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2364 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2365), _2507), 0.0)).x), vec4(0.25)));
            float _2561 = 1.0 - (_2557 * cbSceneParam._m0[34u].x);
            float _2562 = 1.0 - (_2557 * cbSceneParam._m0[34u].y);
            float _2563 = 1.0 - (_2557 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2563) ? _2311 : (isnan(_2311) ? _2563 : min(_2311, _2563));
            frontier_phi_37_36_ladder_1 = isnan(_2562) ? _2310 : (isnan(_2310) ? _2562 : min(_2310, _2562));
            frontier_phi_37_36_ladder_2 = isnan(_2561) ? _2309 : (isnan(_2309) ? _2561 : min(_2309, _2561));
        }
        else
        {
            frontier_phi_37_36_ladder = _2311;
            frontier_phi_37_36_ladder_1 = _2310;
            frontier_phi_37_36_ladder_2 = _2309;
        }
        _2375 = frontier_phi_37_36_ladder_2;
        _2377 = frontier_phi_37_36_ladder_1;
        _2379 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2375 = _2309;
        _2377 = _2310;
        _2379 = _2311;
    }
    uvec4 _2384 = floatBitsToUint(cbInstanceData._m0[_284 + 5u]);
    uint _2386 = _2384.x * 14u;
    uint _2387 = _2386 + 13u;
    float _2394 = _1056 + (-1.0);
    float _2399 = (cbLight._m0[_2387].x * _2394) + 1.0;
    float _2400 = (cbLight._m0[_2387].y * _2394) + 1.0;
    float _2401 = (cbLight._m0[_2387].z * _2394) + 1.0;
    float _2402 = (cbLight._m0[_2387].w * _2394) + 1.0;
    uint _2403 = _2386 + 5u;
    float _2409 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
    uint _2413 = _2386 + 4u;
    float _2422 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
    uint _2426 = _2386 | 1u;
    float _2437 = dot(vec3(cbLight._m0[_2386].xyz), vec3(_878, _879, _880));
    float _2440 = dot(vec3(cbLight._m0[_2426].xyz), vec3(_878, _879, _880));
    float _4761 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _4772 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
    float _2445 = (isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0))) * 0.3183098733425140380859375;
    float _2447 = (isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0))) * 0.3183098733425140380859375;
    float _2454 = ((cbLight._m0[_2403].x * _2409) * _2447) + (((cbLight._m0[_2413].x * _2375) * _2422) * _2445);
    float _2455 = ((_2409 * cbLight._m0[_2403].y) * _2447) + (((cbLight._m0[_2413].y * _2377) * _2422) * _2445);
    float _2456 = ((_2409 * cbLight._m0[_2403].z) * _2447) + (((cbLight._m0[_2413].z * _2379) * _2422) * _2445);
    uvec4 _2460 = floatBitsToUint(cbLight._m0[_2386 + 12u]);
    bool _2462 = _2460.x == 0u;
    float _2564;
    float _2566;
    float _2568;
    if (_2462)
    {
        _2564 = _2454;
        _2566 = _2455;
        _2568 = _2456;
    }
    else
    {
        uint _2572 = _2386 + 6u;
        float _2588 = (dot(vec3(cbLight._m0[_2386 + 2u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2589 = _2588 * _2588;
        float _4783 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2590 = isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0));
        float _2591 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
        _2564 = (((cbLight._m0[_2572].x * 0.3183098733425140380859375) * _2590) * _2591) + _2454;
        _2566 = (((cbLight._m0[_2572].y * 0.3183098733425140380859375) * _2590) * _2591) + _2455;
        _2568 = (((cbLight._m0[_2572].z * 0.3183098733425140380859375) * _2590) * _2591) + _2456;
    }
    bool _2571 = _2460.y == 0u;
    float _2626;
    float _2628;
    float _2630;
    if (_2571)
    {
        _2626 = _2564;
        _2628 = _2566;
        _2630 = _2568;
    }
    else
    {
        uint _2799 = _2386 + 7u;
        float _2815 = (dot(vec3(cbLight._m0[_2386 + 3u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2816 = _2815 * _2815;
        float _4799 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
        float _2817 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
        float _2818 = isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0));
        _2626 = (((cbLight._m0[_2799].x * 0.3183098733425140380859375) * _2817) * _2818) + _2564;
        _2628 = (((cbLight._m0[_2799].y * 0.3183098733425140380859375) * _2817) * _2818) + _2566;
        _2630 = (((cbLight._m0[_2799].z * 0.3183098733425140380859375) * _2817) * _2818) + _2568;
    }
    uint _2633 = _2386 + 8u;
    float _2646 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2386].w)) * _881) * 0.949999988079071044921875);
    float _2647 = _2646 * _2646;
    float _2648 = cbLight._m0[_2386].x + _958;
    float _2649 = cbLight._m0[_2386].y + _959;
    float _2650 = cbLight._m0[_2386].z + _960;
    float _2654 = inversesqrt(dot(vec3(_2648, _2649, _2650), vec3(_2648, _2649, _2650)));
    float _2655 = _2654 * _2648;
    float _2656 = _2654 * _2649;
    float _2657 = _2654 * _2650;
    float _2658 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2386].xyz));
    float _4815 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
    float _2661 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
    float _4826 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _2662 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
    float _2663 = dot(vec3(_878, _879, _880), vec3(_2655, _2656, _2657));
    float _4837 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2666 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
    float _2667 = dot(vec3(cbLight._m0[_2386].xyz), vec3(_2655, _2656, _2657));
    float _4848 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
    float _2671 = _2647 * _2647;
    float _2675 = ((_2666 * _2666) * (_2671 + (-1.0))) + 1.0;
    float _2683 = exp2(log2(1.0 - (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0)))) * 5.0);
    float _2684 = 0.959999978542327880859375 - _1037;
    float _2686 = 0.959999978542327880859375 - _1038;
    float _2687 = 0.959999978542327880859375 - _1039;
    float _2694 = 1.0 - _2647;
    float _2705 = (0.5 / (((_2662 * ((_2661 * _2694) + _2647)) + 9.9999999392252902907785028219223e-09) + (((_2662 * _2694) + _2647) * _2661))) * _2661;
    float _4859 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
    float _2707 = (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0))) * (_2671 / ((_2675 * _2675) * 3.141590118408203125));
    uint _2721 = _2386 + 9u;
    float _2732 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2426].w)) * _881) * 0.949999988079071044921875);
    float _2733 = _2732 * _2732;
    float _2734 = cbLight._m0[_2426].x + _958;
    float _2735 = cbLight._m0[_2426].y + _959;
    float _2736 = cbLight._m0[_2426].z + _960;
    float _2740 = inversesqrt(dot(vec3(_2734, _2735, _2736), vec3(_2734, _2735, _2736)));
    float _2741 = _2740 * _2734;
    float _2742 = _2740 * _2735;
    float _2743 = _2740 * _2736;
    float _2744 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2426].xyz));
    float _4870 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
    float _2747 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
    float _2748 = dot(vec3(_878, _879, _880), vec3(_2741, _2742, _2743));
    float _4881 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
    float _2751 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
    float _2752 = dot(vec3(cbLight._m0[_2426].xyz), vec3(_2741, _2742, _2743));
    float _4892 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
    float _2756 = _2733 * _2733;
    float _2760 = ((_2751 * _2751) * (_2756 + (-1.0))) + 1.0;
    float _2767 = exp2(log2(1.0 - (isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0)))) * 5.0);
    float _2774 = 1.0 - _2733;
    float _2784 = (0.5 / (((_2662 * ((_2747 * _2774) + _2733)) + 9.9999999392252902907785028219223e-09) + (((_2662 * _2774) + _2733) * _2747))) * _2747;
    float _4903 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
    float _2786 = (isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0))) * (_2756 / ((_2760 * _2760) * 3.141590118408203125));
    float _2796 = (((((_2767 * _2684) + _1040) * cbLight._m0[_2721].x) * _2786) * _2409) + ((((cbLight._m0[_2633].x * _2375) * ((_2683 * _2684) + _1040)) * _2707) * _2422);
    float _2797 = (((((_2767 * _2686) + _1042) * cbLight._m0[_2721].y) * _2786) * _2409) + ((((cbLight._m0[_2633].y * _2377) * ((_2683 * _2686) + _1042)) * _2707) * _2422);
    float _2798 = (((((_2767 * _2687) + _1043) * cbLight._m0[_2721].z) * _2786) * _2409) + ((((cbLight._m0[_2633].z * _2379) * ((_2683 * _2687) + _1043)) * _2707) * _2422);
    float _2854;
    float _2856;
    float _2858;
    if (_2462)
    {
        _2854 = _2796;
        _2856 = _2797;
        _2858 = _2798;
    }
    else
    {
        uint _2860 = _2386 + 2u;
        uint _2864 = _2386 + 10u;
        float _2878 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2860].w)) * _881) * 0.949999988079071044921875);
        float _2879 = _2878 * _2878;
        float _2880 = cbLight._m0[_2860].x + _958;
        float _2881 = cbLight._m0[_2860].y + _959;
        float _2882 = cbLight._m0[_2860].z + _960;
        float _2886 = inversesqrt(dot(vec3(_2880, _2881, _2882), vec3(_2880, _2881, _2882)));
        float _2887 = _2886 * _2880;
        float _2888 = _2886 * _2881;
        float _2889 = _2886 * _2882;
        float _2890 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2860].xyz));
        float _4914 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2893 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
        float _2894 = dot(vec3(_878, _879, _880), vec3(_2887, _2888, _2889));
        float _4925 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
        float _2897 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
        float _2898 = dot(vec3(cbLight._m0[_2860].xyz), vec3(_2887, _2888, _2889));
        float _4936 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
        float _2902 = _2879 * _2879;
        float _2906 = ((_2897 * _2897) * (_2902 + (-1.0))) + 1.0;
        float _2913 = exp2(log2(1.0 - (isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0)))) * 5.0);
        float _2920 = 1.0 - _2879;
        float _2930 = (0.5 / (((_2662 * ((_2893 * _2920) + _2879)) + 9.9999999392252902907785028219223e-09) + (((_2662 * _2920) + _2879) * _2893))) * _2893;
        float _4947 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
        float _2932 = (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0))) * (_2902 / ((_2906 * _2906) * 3.141590118408203125));
        float _2933 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
        _2854 = (((((_2913 * _2684) + _1040) * cbLight._m0[_2864].x) * _2932) * _2933) + _2796;
        _2856 = (((((_2913 * _2686) + _1042) * cbLight._m0[_2864].y) * _2932) * _2933) + _2797;
        _2858 = (((((_2913 * _2687) + _1043) * cbLight._m0[_2864].z) * _2932) * _2933) + _2798;
    }
    float _2964;
    float _2966;
    float _2968;
    if (_2571)
    {
        _2964 = _2854;
        _2966 = _2856;
        _2968 = _2858;
    }
    else
    {
        uint _2975 = _2386 + 3u;
        uint _2979 = _2386 + 11u;
        float _2993 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2975].w)) * _881) * 0.949999988079071044921875);
        float _2994 = _2993 * _2993;
        float _2995 = cbLight._m0[_2975].x + _958;
        float _2996 = cbLight._m0[_2975].y + _959;
        float _2997 = cbLight._m0[_2975].z + _960;
        float _3001 = inversesqrt(dot(vec3(_2995, _2996, _2997), vec3(_2995, _2996, _2997)));
        float _3002 = _3001 * _2995;
        float _3003 = _3001 * _2996;
        float _3004 = _3001 * _2997;
        float _3005 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2975].xyz));
        float _4963 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        float _3008 = isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0));
        float _3009 = dot(vec3(_878, _879, _880), vec3(_3002, _3003, _3004));
        float _4974 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3012 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
        float _3013 = dot(vec3(cbLight._m0[_2975].xyz), vec3(_3002, _3003, _3004));
        float _4985 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3017 = _2994 * _2994;
        float _3021 = ((_3012 * _3012) * (_3017 + (-1.0))) + 1.0;
        float _3028 = exp2(log2(1.0 - (isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0)))) * 5.0);
        float _3035 = 1.0 - _2994;
        float _3045 = (0.5 / (((_2662 * ((_3008 * _3035) + _2994)) + 9.9999999392252902907785028219223e-09) + (((_2662 * _3035) + _2994) * _3008))) * _3008;
        float _4996 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
        float _3047 = (isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0))) * (_3017 / ((_3021 * _3021) * 3.141590118408203125));
        float _3048 = isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0));
        _2964 = (((((_3028 * _2684) + _1040) * cbLight._m0[_2979].x) * _3047) * _3048) + _2854;
        _2966 = (((((_3028 * _2686) + _1042) * cbLight._m0[_2979].y) * _3047) * _3048) + _2856;
        _2968 = (((((_3028 * _2687) + _1043) * cbLight._m0[_2979].z) * _3047) * _3048) + _2858;
    }
    float _3114;
    float _3116;
    float _3118;
    float _3120;
    float _3122;
    float _3124;
    if (_2384.y == 0u)
    {
        uvec4 _3069 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3070 = _3069.x;
        uint _3081 = uint((float(_3069.y) * floor(float(uint(cbSceneParam._m0[85u].y * _979) / _3070))) + floor(float(uint(cbSceneParam._m0[85u].x * _978) / _3070)));
        float _3091 = (log2(_2162 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3092 = isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : max(_3091, 0.0));
        uint _3095 = uint(isnan(14.0) ? _3092 : (isnan(_3092) ? 14.0 : min(_3092, 14.0)));
        uvec4 _3100 = texelFetch(g_lightClusterGridBuffer, int(((_3095 << 2u) + (_3081 << 6u)) >> 2u));
        uint _3101 = _3100.x;
        uint _3102 = _3069.z;
        float _3181;
        float _3183;
        float _3185;
        float _3187;
        float _3189;
        float _3191;
        if (((((1u << ((_3102 >> 4u) & 15u)) + 4294967295u) & _3101) == 0u) || ((_3102 & 240u) == 0u))
        {
            _3181 = 0.0;
            _3183 = 0.0;
            _3185 = 0.0;
            _3187 = 0.0;
            _3189 = 0.0;
            _3191 = 0.0;
        }
        else
        {
            float _3182;
            float _3184;
            float _3186;
            float _3188;
            float _3190;
            float _3192;
            float _3334 = 0.0;
            float _3335 = 0.0;
            float _3336 = 0.0;
            float _3337 = 0.0;
            float _3338 = 0.0;
            float _3339 = 0.0;
            uint _3340 = 0u;
            uint _3349;
            bool _3350;
            for (;;)
            {
                _3349 = texelFetch(g_lightClassification, int((((_3095 << 5u) + (_3081 << 9u)) + (_3340 << 2u)) >> 2u)).x;
                _3350 = _3349 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3350)
                {
                    frontier_phi_71_pred = _3339;
                    frontier_phi_71_pred_1 = _3338;
                    frontier_phi_71_pred_2 = _3337;
                    frontier_phi_71_pred_3 = _3336;
                    frontier_phi_71_pred_4 = _3335;
                    frontier_phi_71_pred_5 = _3334;
                }
                else
                {
                    float _3479;
                    float _3480;
                    float _3481;
                    float _3482;
                    float _3483;
                    float _3484;
                    uint _3485;
                    _3479 = _3334;
                    _3480 = _3335;
                    _3481 = _3336;
                    _3482 = _3337;
                    _3483 = _3338;
                    _3484 = _3339;
                    _3485 = _3349;
                    float _3406;
                    float _3407;
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    for (;;)
                    {
                        uint _3489 = uint(findLSB(_3485)) + (_3340 << 5u);
                        uint _3486 = (_3485 + 4294967295u) & _3485;
                        uint _3491 = _3489 * 48u;
                        vec4 _3505 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3491)).x, texelFetch(g_PointLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3491 + 3u)).x));
                        uint _3511 = (_3489 * 48u) + 4u;
                        vec4 _3524 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3511)).x, texelFetch(g_PointLightRenderingBuffer, int(_3511 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3511 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3511 + 3u)).x));
                        uint _3530 = (_3489 * 48u) + 8u;
                        vec3 _3541 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3530)).x, texelFetch(g_PointLightRenderingBuffer, int(_3530 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3530 + 2u)).x));
                        float _3545 = _3505.x - _2160;
                        float _3546 = _3505.y - _2161;
                        float _3547 = _3505.z - _2162;
                        float _3548 = dot(vec3(_3545, _3546, _3547), vec3(_3545, _3546, _3547));
                        float _3551 = inversesqrt(_3548);
                        float _3552 = _3551 * _3545;
                        float _3553 = _3551 * _3546;
                        float _3554 = _3551 * _3547;
                        float _3555 = dot(vec3(_997, _1000, _1003), vec3(_3552, _3553, _3554));
                        float _3560 = 1.0 - (_3548 * _3505.w);
                        float _5022 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0));
                        float _3561 = isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0));
                        float _3562 = sqrt(_3548) * _3524.w;
                        float _3565 = 1.39999997615814208984375 / (_3562 + 1.39999997615814208984375);
                        float _3566 = _3565 * _3565;
                        float _3569 = ((1.0 - _3566) * _3555) + _3566;
                        float _3572 = _3562 * _3562;
                        float _3576 = ((isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0))) * _3561) / ((_3572 * 0.699999988079071044921875) + 1.0);
                        float _3580 = (-0.0) - _2160;
                        float _3581 = (-0.0) - _2161;
                        float _3582 = (-0.0) - _2162;
                        float _3586 = inversesqrt(dot(vec3(_3580, _3581, _3582), vec3(_3580, _3581, _3582)));
                        float _3587 = _3586 * _3580;
                        float _3588 = _3586 * _3581;
                        float _3589 = _3586 * _3582;
                        float _3596 = exp2(log2(1.0 / ((_3572 * 3.5) + 5.0)) * 0.25);
                        float _3597 = 1.0 - _1072;
                        float _3604 = sqrt(1.0 - ((1.0 - (_3597 * _3597)) * (1.0 - (_3596 * _3596))));
                        float _3605 = _3604 * _3604;
                        float _3606 = _3605 * _3605;
                        float _3607 = _3587 + _3552;
                        float _3608 = _3588 + _3553;
                        float _3609 = _3589 + _3554;
                        float _3613 = inversesqrt(dot(vec3(_3607, _3608, _3609), vec3(_3607, _3608, _3609)));
                        float _3617 = dot(vec3(_997, _1000, _1003), vec3(_3587, _3588, _3589));
                        float _5038 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0));
                        float _3620 = isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0));
                        float _3621 = dot(vec3(_997, _1000, _1003), vec3(_3613 * _3607, _3613 * _3608, _3613 * _3609));
                        float _5049 = isnan(0.0) ? _3621 : (isnan(_3621) ? 0.0 : max(_3621, 0.0));
                        float _3624 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
                        float _3628 = ((_3624 * _3624) * (_3606 + (-1.0))) + 1.0;
                        float _3629 = _3565 * _3605;
                        float _3630 = _3629 * _3629;
                        float _3633 = ((1.0 - _3630) * _3555) + _3630;
                        float _5060 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                        float _3634 = isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0));
                        float _3635 = 1.0 - _3605;
                        float _3645 = (0.5 / (((_3634 * ((_3620 * _3635) + _3605)) + 9.9999999392252902907785028219223e-09) + (((_3634 * _3635) + _3605) * _3620))) * _3634;
                        float _5071 = isnan(0.0) ? _3645 : (isnan(_3645) ? 0.0 : max(_3645, 0.0));
                        float _3656 = (((_3606 * 3.1415927410125732421875) * (isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0)))) / ((_3628 * _3628) * ((_3572 * 2.1991131305694580078125) + 3.141590118408203125))) * _3561;
                        _3409 = (_3576 * _3524.x) + _3482;
                        _3410 = (_3576 * _3524.y) + _3483;
                        _3411 = (_3576 * _3524.z) + _3484;
                        _3406 = (_3656 * _3541.x) + _3479;
                        _3407 = (_3656 * _3541.y) + _3480;
                        _3408 = (_3656 * _3541.z) + _3481;
                        if (_3486 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3479 = _3406;
                            _3480 = _3407;
                            _3481 = _3408;
                            _3482 = _3409;
                            _3483 = _3410;
                            _3484 = _3411;
                            _3485 = _3486;
                        }
                    }
                    frontier_phi_71_pred = _3411;
                    frontier_phi_71_pred_1 = _3410;
                    frontier_phi_71_pred_2 = _3409;
                    frontier_phi_71_pred_3 = _3408;
                    frontier_phi_71_pred_4 = _3407;
                    frontier_phi_71_pred_5 = _3406;
                }
                _3192 = frontier_phi_71_pred;
                _3190 = frontier_phi_71_pred_1;
                _3188 = frontier_phi_71_pred_2;
                _3186 = frontier_phi_71_pred_3;
                _3184 = frontier_phi_71_pred_4;
                _3182 = frontier_phi_71_pred_5;
                uint _3341 = _3340 + 1u;
                if (_3341 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3334 = _3182;
                    _3335 = _3184;
                    _3336 = _3186;
                    _3337 = _3188;
                    _3338 = _3190;
                    _3339 = _3192;
                    _3340 = _3341;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3181 = _3182;
            _3183 = _3184;
            _3185 = _3186;
            _3187 = _3188;
            _3189 = _3190;
            _3191 = _3192;
        }
        uvec4 _3195 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3196 = _3195.z;
        uint _3198 = (_3196 >> 8u) & 15u;
        float _3302;
        float _3304;
        float _3306;
        float _3308;
        float _3310;
        float _3312;
        if (((4294967295u << _3198) & _3101) == 0u)
        {
            _3302 = _3181;
            _3304 = _3183;
            _3306 = _3185;
            _3308 = _3187;
            _3310 = _3189;
            _3312 = _3191;
        }
        else
        {
            float _3327 = inversesqrt(dot(vec3(_2160, _2161, _2162), vec3(_2160, _2161, _2162)));
            float _3328 = _3327 * _2160;
            float _3329 = _3327 * _2161;
            float _3330 = _3327 * _2162;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3198 < ((_3196 >> 12u) & 15u))
            {
                float _3303;
                float _3305;
                float _3307;
                float _3309;
                float _3311;
                float _3313;
                float _3462 = _3181;
                float _3463 = _3183;
                float _3464 = _3185;
                float _3465 = _3187;
                float _3466 = _3189;
                float _3467 = _3191;
                uint _3468 = _3198;
                uint _3477;
                bool _3478;
                for (;;)
                {
                    _3477 = texelFetch(g_lightClassification, int((((_3095 << 5u) + (_3081 << 9u)) + (_3468 << 2u)) >> 2u)).x;
                    _3478 = _3477 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3478)
                    {
                        frontier_phi_82_pred = _3467;
                        frontier_phi_82_pred_1 = _3466;
                        frontier_phi_82_pred_2 = _3465;
                        frontier_phi_82_pred_3 = _3464;
                        frontier_phi_82_pred_4 = _3463;
                        frontier_phi_82_pred_5 = _3462;
                    }
                    else
                    {
                        float _3670;
                        float _3671;
                        float _3672;
                        float _3673;
                        float _3674;
                        float _3675;
                        float _3963;
                        float _3964;
                        float _3965;
                        float _3966;
                        float _3967;
                        float _3968;
                        float _3683 = _3462;
                        float _3684 = _3463;
                        float _3685 = _3464;
                        float _3686 = _3465;
                        float _3687 = _3466;
                        float _3688 = _3467;
                        uint _3689 = _3477;
                        uint _3690;
                        vec4 _3715;
                        float _3716;
                        vec4 _3731;
                        vec3 _3743;
                        vec4 _3758;
                        vec4 _3773;
                        float _3819;
                        bool _3820;
                        for (;;)
                        {
                            uint _3700 = ((_3468 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3689));
                            _3690 = (_3689 + 4294967295u) & _3689;
                            uint _3702 = _3700 * 40u;
                            _3715 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3702)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 3u)).x));
                            _3716 = _3715.w;
                            uint _3718 = (_3700 * 40u) + 4u;
                            _3731 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 3u)).x));
                            uint _3733 = (_3700 * 40u) + 8u;
                            _3743 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3733)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3733 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3733 + 2u)).x));
                            uint _3745 = (_3700 * 40u) + 16u;
                            _3758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 3u)).x));
                            uint _3760 = (_3700 * 40u) + 20u;
                            _3773 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3760)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 3u)).x));
                            uint _3775 = (_3700 * 40u) + 24u;
                            vec4 _3788 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3775)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3775 + 3u)).x));
                            uint _3794 = (_3700 * 40u) + 28u;
                            vec4 _3807 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3794)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3794 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3794 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3794 + 3u)).x));
                            _3819 = fma(_2162, _3807.z, fma(_2161, _3807.y, _3807.x * _2160)) + _3807.w;
                            _3820 = !((fma(_2162, _3788.z, fma(_2161, _3788.y, _3788.x * _2160)) + _3788.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3820)
                            {
                                float _3847 = _3715.x - _2160;
                                float _3848 = _3715.y - _2161;
                                float _3849 = _3715.z - _2162;
                                float _3850 = dot(vec3(_3847, _3848, _3849), vec3(_3847, _3848, _3849));
                                float _3853 = inversesqrt(_3850);
                                float _3854 = _3853 * _3847;
                                float _3855 = _3853 * _3848;
                                float _3856 = _3853 * _3849;
                                float _3860 = 1.0 - (_3850 / (_3716 * _3716));
                                float _5082 = isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0));
                                float _3861 = isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0));
                                float _3865 = sqrt(_3850) * _3731.w;
                                float _3867 = 1.39999997615814208984375 / (_3865 + 1.39999997615814208984375);
                                float _3868 = _3867 * _3867;
                                float _3871 = ((1.0 - _3868) * dot(vec3(_3854, _3855, _3856), vec3(_997, _1000, _1003))) + _3868;
                                float _3874 = _3865 * _3865;
                                float _3878 = (fma(_2162, _3758.z, fma(_2161, _3758.y, _3758.x * _2160)) + _3758.w) / _3819;
                                float _3879 = (fma(_2162, _3773.z, fma(_2161, _3773.y, _3773.x * _2160)) + _3773.w) / _3819;
                                float _3883 = 1.0 - dot(vec2(_3878, _3879), vec2(_3878, _3879));
                                float _5098 = isnan(0.0) ? _3883 : (isnan(_3883) ? 0.0 : max(_3883, 0.0));
                                float _3884 = isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0));
                                float _3885 = _3884 * (((isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0))) * _3861) / ((_3874 * 0.699999988079071044921875) + 1.0));
                                float _3897 = exp2(log2(1.0 / ((_3874 * 3.5) + 5.0)) * 0.25);
                                float _3898 = 1.0 - _1072;
                                float _3905 = sqrt(1.0 - ((1.0 - (_3898 * _3898)) * (1.0 - (_3897 * _3897))));
                                float _3906 = _3905 * _3905;
                                float _3907 = _3906 * _3906;
                                float _3908 = _3854 - _3328;
                                float _3909 = _3855 - _3329;
                                float _3910 = _3856 - _3330;
                                float _3914 = inversesqrt(dot(vec3(_3908, _3909, _3910), vec3(_3908, _3909, _3910)));
                                float _3918 = dot(vec3(_997, _1000, _1003), vec3((-0.0) - _3328, (-0.0) - _3329, (-0.0) - _3330));
                                float _5109 = isnan(0.0) ? _3918 : (isnan(_3918) ? 0.0 : max(_3918, 0.0));
                                float _3921 = isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0));
                                float _3922 = dot(vec3(_997, _1000, _1003), vec3(_3914 * _3908, _3914 * _3909, _3914 * _3910));
                                float _5120 = isnan(0.0) ? _3922 : (isnan(_3922) ? 0.0 : max(_3922, 0.0));
                                float _3925 = isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0));
                                float _3929 = ((_3925 * _3925) * (_3907 + (-1.0))) + 1.0;
                                float _3930 = _3867 * _3906;
                                float _3931 = _3930 * _3930;
                                float _3937 = ((1.0 - _3931) * dot(vec3(_997, _1000, _1003), vec3(_3854, _3855, _3856))) + _3931;
                                float _5131 = isnan(0.0) ? _3937 : (isnan(_3937) ? 0.0 : max(_3937, 0.0));
                                float _3938 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
                                float _3939 = 1.0 - _3906;
                                float _3949 = (0.5 / (((_3938 * ((_3921 * _3939) + _3906)) + 9.9999999392252902907785028219223e-09) + (((_3938 * _3939) + _3906) * _3921))) * _3938;
                                float _5142 = isnan(0.0) ? _3949 : (isnan(_3949) ? 0.0 : max(_3949, 0.0));
                                float _3959 = (_3884 * _3861) * (((_3907 * 3.1415927410125732421875) * (isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0)))) / ((_3929 * _3929) * ((_3874 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3885 * _3731.z;
                                frontier_phi_88_pred_1 = _3885 * _3731.y;
                                frontier_phi_88_pred_2 = _3885 * _3731.x;
                                frontier_phi_88_pred_3 = _3959 * _3743.z;
                                frontier_phi_88_pred_4 = _3959 * _3743.y;
                                frontier_phi_88_pred_5 = _3959 * _3743.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3968 = frontier_phi_88_pred;
                            _3967 = frontier_phi_88_pred_1;
                            _3966 = frontier_phi_88_pred_2;
                            _3965 = frontier_phi_88_pred_3;
                            _3964 = frontier_phi_88_pred_4;
                            _3963 = frontier_phi_88_pred_5;
                            _3673 = _3966 + _3686;
                            _3674 = _3967 + _3687;
                            _3675 = _3968 + _3688;
                            _3670 = _3963 + _3683;
                            _3671 = _3964 + _3684;
                            _3672 = _3965 + _3685;
                            if (_3690 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3683 = _3670;
                                _3684 = _3671;
                                _3685 = _3672;
                                _3686 = _3673;
                                _3687 = _3674;
                                _3688 = _3675;
                                _3689 = _3690;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3675;
                        frontier_phi_82_pred_1 = _3674;
                        frontier_phi_82_pred_2 = _3673;
                        frontier_phi_82_pred_3 = _3672;
                        frontier_phi_82_pred_4 = _3671;
                        frontier_phi_82_pred_5 = _3670;
                    }
                    _3313 = frontier_phi_82_pred;
                    _3311 = frontier_phi_82_pred_1;
                    _3309 = frontier_phi_82_pred_2;
                    _3307 = frontier_phi_82_pred_3;
                    _3305 = frontier_phi_82_pred_4;
                    _3303 = frontier_phi_82_pred_5;
                    uint _3469 = _3468 + 1u;
                    if (_3469 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3462 = _3303;
                        _3463 = _3305;
                        _3464 = _3307;
                        _3465 = _3309;
                        _3466 = _3311;
                        _3467 = _3313;
                        _3468 = _3469;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3309;
                frontier_phi_63_64_ladder_1 = _3313;
                frontier_phi_63_64_ladder_2 = _3311;
                frontier_phi_63_64_ladder_3 = _3307;
                frontier_phi_63_64_ladder_4 = _3305;
                frontier_phi_63_64_ladder_5 = _3303;
            }
            else
            {
                frontier_phi_63_64_ladder = _3187;
                frontier_phi_63_64_ladder_1 = _3191;
                frontier_phi_63_64_ladder_2 = _3189;
                frontier_phi_63_64_ladder_3 = _3185;
                frontier_phi_63_64_ladder_4 = _3183;
                frontier_phi_63_64_ladder_5 = _3181;
            }
            _3302 = frontier_phi_63_64_ladder_5;
            _3304 = frontier_phi_63_64_ladder_4;
            _3306 = frontier_phi_63_64_ladder_3;
            _3308 = frontier_phi_63_64_ladder;
            _3310 = frontier_phi_63_64_ladder_2;
            _3312 = frontier_phi_63_64_ladder_1;
        }
        float _3317 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
        _3114 = (_3317 * _3308) + _2626;
        _3116 = (_3317 * _3310) + _2628;
        _3118 = (_3317 * _3312) + _2630;
        _3120 = ((_3302 * _1040) * _3317) + _2964;
        _3122 = ((_3304 * _1042) * _3317) + _2966;
        _3124 = ((_3306 * _1043) * _3317) + _2968;
    }
    else
    {
        _3114 = _2626;
        _3116 = _2628;
        _3118 = _2630;
        _3120 = _2964;
        _3122 = _2966;
        _3124 = _2968;
    }
    float _5158 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
    float _5169 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    float _5180 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _3141 = ((isnan(1.0) ? _5158 : (isnan(_5158) ? 1.0 : min(_5158, 1.0))) * (_3114 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1056))) + ((_3120 + ((isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0))) * _1894)) * cbPerFrame._m0[3u].x);
    float _3142 = ((isnan(1.0) ? _5169 : (isnan(_5169) ? 1.0 : min(_5169, 1.0))) * (_3116 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1056))) + ((_3122 + ((isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0))) * _1894)) * cbPerFrame._m0[3u].x);
    float _3143 = ((isnan(1.0) ? _5180 : (isnan(_5180) ? 1.0 : min(_5180, 1.0))) * (_3118 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1056))) + ((_3124 + ((isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0))) * _1894)) * cbPerFrame._m0[3u].x);
    uint _3144 = _284 + 6u;
    float _3152 = _978 / cbSceneParam._m0[86u].x;
    float _3153 = _979 / cbSceneParam._m0[86u].y;
    vec4 _3167 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3152, _3153, (log2((isnan(cbSceneParam._m0[77u].w) ? _900 : (isnan(_900) ? cbSceneParam._m0[77u].w : min(_900, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3169 = _3167.x;
    float _3170 = _3167.y;
    float _3171 = _3167.z;
    float _3172 = _3167.w;
    float _3244;
    float _3246;
    float _3248;
    float _3250;
    if (_900 > cbSceneParam._m0[78u].w)
    {
        float _3206 = isnan(_900) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _900 : min(cbSceneParam._m0[80u].w, _900));
        float _3207 = _3206 / _900;
        float _3218 = _3207 * _951;
        float _3219 = _952 * _3207;
        float _3220 = (-0.0) - _3219;
        float _3222 = _3207 * _953;
        float _3224 = (cbSceneParam._m0[77u].w * _3220) / _3206;
        float _3225 = _3224 + cbSceneParam._m0[79u].w;
        float _3226 = cbSceneParam._m0[79u].w - _3219;
        float _3232 = sqrt(((_3218 * _3218) + (_3219 * _3219)) + (_3222 * _3222));
        float _3235 = (1.0 - (cbSceneParam._m0[77u].w / _3206)) * _3232;
        float _3240 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3242 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3419;
        if (abs((_3220 - _3224) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3419 = ((((_3225 > 0.0) ? exp2(_3240 * _3225) : (2.0 - exp2(_3242 * _3225))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3235;
        }
        else
        {
            float _3363 = 1.0 / cbSceneParam._m0[80u].x;
            float _3364 = isnan(_3226) ? _3225 : (isnan(_3225) ? _3226 : max(_3225, _3226));
            float _3365 = isnan(_3226) ? _3225 : (isnan(_3225) ? _3226 : min(_3225, _3226));
            float _3374 = isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : min(_3364, 0.0));
            float _3375 = isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : min(_3365, 0.0));
            _3419 = ((abs(_3232 / _3220) * cbSceneParam._m0[80u].y) * ((((_3374 - _3375) * 2.0) - ((exp2(_3240 * (isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0)))) - exp2(_3240 * (isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : max(_3365, 0.0))))) * _3363)) - ((exp2(_3242 * _3374) - exp2(_3242 * _3375)) * _3363))) + (_3235 * cbSceneParam._m0[80u].z);
        }
        vec4 _3421 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3152, _3153, 1.0), 0.0);
        float _3430 = exp2((_3419 * (-1.44269502162933349609375)) * (1.0 - _3421.w));
        float _3431 = log2(_3430);
        float _3447 = log2(_3172);
        _3244 = (exp2(_3447 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3431 * cbSceneParam._m0[78u].x)) * _3421.x) / cbSceneParam._m0[78u].x)) + _3169;
        _3246 = (exp2(_3447 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3431 * cbSceneParam._m0[78u].y)) * _3421.y) / cbSceneParam._m0[78u].y)) + _3170;
        _3248 = (exp2(_3447 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3431 * cbSceneParam._m0[78u].z)) * _3421.z) / cbSceneParam._m0[78u].z)) + _3171;
        _3250 = _3430 * _3172;
    }
    else
    {
        _3244 = _3169;
        _3246 = _3170;
        _3248 = _3171;
        _3250 = _3172;
    }
    bool _3457;
    vec4 _3260;
    vec4 _3282;
    float _3284;
    float _3288;
    float _3289;
    float _3290;
    float _3291;
    bool _3301;
    for (;;)
    {
        _3260 = cbMatDynParam._m0[0u];
        float _3262 = roundEven(_3260.y);
        bool _3263 = _3262 == 3.0;
        float _3264 = log2(_3250);
        float _3271 = exp2(_3264 * cbSceneParam._m0[78u].x) * _3141;
        float _3272 = exp2(_3264 * cbSceneParam._m0[78u].y) * _3142;
        float _3273 = exp2(_3264 * cbSceneParam._m0[78u].z) * _3143;
        float _3280 = _967 + (-0.5);
        _3282 = cbMtdParam._m0[1u];
        _3284 = _3282.y * _3280;
        float _3287 = (_3262 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3288 = _3287 * (_3263 ? _3271 : (_3271 + (cbSceneParam._m0[72u].w * _3244)));
        _3289 = _3287 * (_3263 ? _3272 : (_3272 + (cbSceneParam._m0[72u].w * _3246)));
        _3290 = _3287 * (_3263 ? _3273 : (_3273 + (cbSceneParam._m0[72u].w * _3248)));
        _3291 = _3280 * 0.999000012874603271484375;
        _3301 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3301)
        {
            if ((cbInstanceData._m0[_284 + 7u].x + _3291) < 0.5)
            {
                _3457 = true;
                break;
            }
        }
        uint _3398 = _1016 + uint(_3260.w);
        if ((cbInstanceData._m0[_3398].w < 1.0) && ((cbInstanceData._m0[_3398].w + _3291) < 0.5))
        {
            _3457 = true;
            break;
        }
        if ((_3284 + 1.0) < _3282.x)
        {
            _3457 = true;
            break;
        }
        _3457 = false;
        break;
    }
    float _3661;
    if (_3457)
    {
        discard_state = true;
        _3661 = 0.0;
    }
    else
    {
        _3661 = cbInstanceData._m0[_3144].w;
    }
    SV_Target.x = _3288;
    SV_Target.y = _3289;
    SV_Target.z = _3290;
    SV_Target.w = _3661;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3144].w;
    discard_exit();
}


