#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1255;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _227 = _226 * _218;
    float _228 = _226 * _219;
    float _229 = _226 * _220;
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _234 = _233 * NORMAL.x;
    float _235 = _233 * NORMAL.y;
    float _236 = _233 * NORMAL.z;
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _241 = _240 * TANGENT.x;
    float _242 = _240 * TANGENT.y;
    float _243 = _240 * TANGENT.z;
    uint _246 = uint(roundEven(NORMAL.w)) * 13u;
    uint _252 = _246 + 1u;
    uint _256 = _246 + 2u;
    float _265 = sqrt(((cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x) + (cbInstanceData._m0[_246].x * cbInstanceData._m0[_246].x)) + (cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x));
    float _266 = _265 * TEXCOORD.z;
    float _267 = _265 * TEXCOORD.w;
    vec4 _287 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _293 = _287.x * cbMtdParam._m0[11u].x;
    float _294 = _287.y * cbMtdParam._m0[11u].y;
    float _295 = _287.z * cbMtdParam._m0[11u].z;
    vec4 _314 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _266) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _267) + cbTextureTilingScale._m0[5u].w));
    vec4 _352 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _354 = _352.x;
    float _366 = dot(vec4(_354, _352.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _383 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_354 - _366) * cbMtdParam._m0[24u].y) + _366) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3863 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _384 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _391 = (_384 * ((_314.x * cbMtdParam._m0[12u].x) - _293)) + _293;
    float _392 = (_384 * ((_314.y * cbMtdParam._m0[12u].y) - _294)) + _294;
    float _393 = (_384 * ((_314.z * cbMtdParam._m0[12u].z) - _295)) + _295;
    vec4 _412 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _266) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _267) + cbTextureTilingScale._m0[14u].w));
    vec4 _432 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _266) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _267) + cbTextureTilingScale._m0[20u].w));
    vec4 _459 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _266) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _267) + cbTextureTilingScale._m0[4u].w));
    vec4 _476 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _478 = _476.x;
    float _479 = _476.y;
    float _480 = _476.z;
    float _489 = ((_459.z - _480) * _384) + _480;
    float _492 = ((((_459.x - _478) * _384) + _478) * 2.0) + (-1.0);
    float _493 = ((((_459.y - _479) * _384) + _479) * 2.0) + (-1.0);
    float _494 = dot(vec2(_492, _493), vec2(_492, _493));
    float _3874 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _499 = sqrt(1.0 - (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))));
    float _502 = _492 + ((((_432.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _503 = _493 + ((((_432.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _506 = fma(_499, _234, fma(_503, _241, _502 * _227));
    float _509 = fma(_499, _235, fma(_503, _242, _502 * _228));
    float _512 = fma(_499, _236, fma(_503, _243, _502 * _229));
    float _516 = inversesqrt(dot(vec3(_506, _509, _512), vec3(_506, _509, _512)));
    vec4 _532 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _558 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _266) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _267) + cbTextureTilingScale._m0[11u].w));
    float _560 = _558.x;
    float _561 = 1.0 - _560;
    float _565 = ((_560 - _561) * cbMtdParam._m0[24u].z) + _561;
    float _567 = (cbMtdParam._m0[19u].x + dot(vec4(_516 * _506, _516 * _509, _516 * _512, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_565 * cbMtdParam._m0[21u].z);
    float _3885 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _568 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _583 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_565 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3896 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _584 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _588 = ((_568 * ((_412.x * cbMtdParam._m0[18u].x) - _391)) * _584) + _391;
    float _589 = ((_568 * ((_412.y * cbMtdParam._m0[18u].y) - _392)) * _584) + _392;
    float _590 = ((_568 * ((_412.z * cbMtdParam._m0[18u].z) - _393)) * _584) + _393;
    vec4 _602 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _616 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _618 = _616.x;
    float _636 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _266) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _267) + cbTextureTilingScale._m0[9u].w)).x - _618) * _384) + _618;
    float _640 = ((_602.x - _636) * cbMtdParam._m0[19u].z) + _636;
    float _643 = _640 - ((_584 * _568) * _640);
    float _648 = (((_432.z - _489) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _489;
    vec4 _661 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _266) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _267) + cbTextureTilingScale._m0[15u].w));
    float _668 = (_661.x * 2.0) + (-1.0);
    float _669 = (_661.y * 2.0) + (-1.0);
    float _670 = dot(vec2(_668, _669), vec2(_668, _669));
    float _3907 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _679 = (((_661.z - _648) * _568) * _584) + _648;
    float _694 = (((cbMtdParam._m0[21u].x * _502) + ((_668 - _502) * _568)) * _584) + _502;
    float _695 = (((cbMtdParam._m0[21u].x * _503) + ((_669 - _503) * _568)) * _584) + _503;
    float _696 = (((sqrt(1.0 - (isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0)))) - _499) * _568) * _584) + _499;
    float _701 = cbMtdParam._m0[22u].x + _532.w;
    float _704 = fma(_696, _234, fma(_695, _241, _694 * _227));
    float _707 = fma(_696, _235, fma(_695, _242, _694 * _228));
    float _710 = fma(_696, _236, fma(_695, _243, _694 * _229));
    float _714 = inversesqrt(dot(vec3(_704, _707, _710), vec3(_704, _707, _710)));
    float _715 = _714 * _704;
    float _716 = _714 * _707;
    float _717 = _714 * _710;
    float _3918 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _718 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _3929 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _3940 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _3951 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _3962 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _3973 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _723 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    float _737 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _778 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _788 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _778);
    float _789 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _778);
    float _790 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _778);
    float _794 = inversesqrt(dot(vec3(_788, _789, _790), vec3(_788, _789, _790)));
    float _795 = _788 * _794;
    float _796 = _789 * _794;
    float _797 = _790 * _794;
    float _803 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _804 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _822 = fma(_717, cbSceneParam._m0[5u].z, fma(_716, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _715));
    float _825 = fma(_717, cbSceneParam._m0[6u].z, fma(_716, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _715));
    float _828 = fma(_717, cbSceneParam._m0[7u].z, fma(_716, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _715));
    uint _842 = (_246 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _848 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0)))) * cbInstanceData._m0[_842].x;
    float _849 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)))) * cbInstanceData._m0[_842].y;
    float _850 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0)))) * cbInstanceData._m0[_842].z;
    float _3984 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _851 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
    float _3995 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _852 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _4006 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _853 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _854 = 1.0 - _723;
    float _855 = _851 * _854;
    float _856 = _852 * _854;
    float _857 = _853 * _854;
    float _862 = (_851 + (-0.039999999105930328369140625)) * _723;
    float _863 = (_852 + (-0.039999999105930328369140625)) * _723;
    float _864 = (_853 + (-0.039999999105930328369140625)) * _723;
    float _865 = _862 + 0.039999999105930328369140625;
    float _867 = _863 + 0.039999999105930328369140625;
    float _868 = _864 + 0.039999999105930328369140625;
    vec4 _877 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _803, cbSceneParam._m0[86u].y * _804));
    float _881 = ((isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))) * TEXCOORD_5.w) * _877.x;
    float _882 = dot(vec3(_715, _716, _717), vec3(_795, _796, _797));
    float _885 = _882 * 2.0;
    float _889 = (_885 * _715) - _795;
    float _890 = (_885 * _716) - _796;
    float _891 = (_885 * _717) - _797;
    float _895 = abs(dot(vec3(_795, _796, _797), vec3(_715, _716, _717)));
    float _4017 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _897 = sqrt(_718);
    float _910 = exp2((_897 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_897 * 3.0));
    float _916 = (1.0 - _910) * ((_897 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _917 = _910 * _897;
    float _945 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _949 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _953 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1254;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _979 = fma(_953, cbModelParam._m0[26u].z, fma(_949, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _945));
        float _983 = fma(_953, cbModelParam._m0[27u].z, fma(_949, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _945));
        float _987 = fma(_953, cbModelParam._m0[28u].z, fma(_949, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _945));
        float _1012 = _945 + _715;
        float _1013 = _949 + _716;
        float _1014 = _953 + _717;
        float _1024 = fma(_1014, cbModelParam._m0[26u].z, fma(_1013, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1012)) - _979;
        float _1025 = fma(_1014, cbModelParam._m0[27u].z, fma(_1013, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1012)) - _983;
        float _1026 = fma(_1014, cbModelParam._m0[28u].z, fma(_1013, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1012)) - _987;
        float _1030 = inversesqrt(dot(vec3(_1024, _1025, _1026), vec3(_1024, _1025, _1026)));
        float _1043 = ((_1030 * _1024) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_979 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1044 = ((_1030 * _1025) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_983 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1045 = ((_1030 * _1026) / cbModelParam._m0[34u].z) + ((((((_987 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        float _1082 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1048.x + (-0.5));
        float _1084 = _1082 * (_1048.y + (-0.5));
        float _1085 = _1082 * (_1048.z + (-0.5));
        float _1092 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1055.x + (-0.5));
        float _1094 = _1092 * (_1055.y + (-0.5));
        float _1095 = _1092 * (_1055.z + (-0.5));
        float _1102 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1062.x + (-0.5));
        float _1104 = _1102 * (_1062.y + (-0.5));
        float _1105 = _1102 * (_1062.z + (-0.5));
        float _1112 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1069.x + (-0.5));
        float _1114 = _1112 * (_1069.y + (-0.5));
        float _1115 = _1112 * (_1069.z + (-0.5));
        float _1116 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1117 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1118 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1119 = _1083 * 0.5;
        float _1120 = _1093 * 0.5;
        float _1121 = _1103 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1136 = (dot(vec3(_715, _716, _717), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _4043 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1146 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1116 + 9.9999997473787516355514526367188e-06);
        float _4054 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1148 = _1147 * 2.0;
        float _1152 = (1.0 - _1147) / (_1147 + 1.0);
        float _4065 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1162 = ((((1.0 - _1153) * (_1148 + 2.0)) * exp2(log2(isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (_1148 + 1.0))) + _1153) * _1116;
        float _1163 = _1084 * 0.5;
        float _1164 = _1094 * 0.5;
        float _1165 = _1104 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1179 = (dot(vec3(_715, _716, _717), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _4076 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1188 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1117 + 9.9999997473787516355514526367188e-06);
        float _4087 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1190 = _1189 * 2.0;
        float _1194 = (1.0 - _1189) / (_1189 + 1.0);
        float _4098 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1204 = ((((1.0 - _1195) * (_1190 + 2.0)) * exp2(log2(isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) * (_1190 + 1.0))) + _1195) * _1117;
        float _1205 = _1085 * 0.5;
        float _1206 = _1095 * 0.5;
        float _1207 = _1105 * 0.5;
        float _1208 = dot(vec3(_1205, _1206, _1207), vec3(_1205, _1206, _1207));
        float _1213 = (_1208 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1208);
        float _1221 = (dot(vec3(_715, _716, _717), vec3(_1213 * _1205, _1213 * _1206, _1213 * _1207)) + 1.0) * 0.5;
        float _4109 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1230 = sqrt(((_1206 * _1206) + (_1205 * _1205)) + (_1207 * _1207)) / (_1118 + 9.9999997473787516355514526367188e-06);
        float _4120 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1232 = _1231 * 2.0;
        float _1236 = (1.0 - _1231) / (_1231 + 1.0);
        float _4131 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1237 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1246 = ((((1.0 - _1237) * (_1232 + 2.0)) * exp2(log2(isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0))) * (_1232 + 1.0))) + _1237) * _1118;
        _1254 = _1085;
        _1256 = _1084;
        _1257 = _1083;
        _1258 = _1095;
        _1259 = _1094;
        _1260 = _1093;
        _1261 = _1105;
        _1262 = _1104;
        _1263 = _1103;
        _1264 = _1118;
        _1265 = _1117;
        _1266 = _1116;
        _1267 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)));
        _1268 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0)));
        _1269 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0)));
    }
    else
    {
        _1254 = _1255;
        _1256 = _1255;
        _1257 = _1255;
        _1258 = _1255;
        _1259 = _1255;
        _1260 = _1255;
        _1261 = _1255;
        _1262 = _1255;
        _1263 = _1255;
        _1264 = _1255;
        _1265 = _1255;
        _1266 = _1255;
        _1267 = 0.0;
        _1268 = 0.0;
        _1269 = 0.0;
    }
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1294 = fma(_953, cbModelParam._m0[30u].z, fma(_949, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _945));
        float _1298 = fma(_953, cbModelParam._m0[31u].z, fma(_949, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _945));
        float _1302 = fma(_953, cbModelParam._m0[32u].z, fma(_949, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _945));
        float _1325 = _945 + _715;
        float _1326 = _949 + _716;
        float _1327 = _953 + _717;
        float _1337 = fma(_1327, cbModelParam._m0[30u].z, fma(_1326, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1325)) - _1294;
        float _1338 = fma(_1327, cbModelParam._m0[31u].z, fma(_1326, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1325)) - _1298;
        float _1339 = fma(_1327, cbModelParam._m0[32u].z, fma(_1326, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1325)) - _1302;
        float _1343 = inversesqrt(dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339)));
        float _1356 = ((_1343 * _1337) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1294 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1357 = ((_1343 * _1338) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1298 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1358 = ((_1343 * _1339) / cbModelParam._m0[35u].z) + ((((((_1302 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1360 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1367 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        float _1393 = exp2((_1360.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1360.x + (-0.5));
        float _1395 = _1393 * (_1360.y + (-0.5));
        float _1396 = _1393 * (_1360.z + (-0.5));
        float _1403 = exp2((_1367.w + (-0.5)) * 20.0) * 2.0;
        float _1404 = _1403 * (_1367.x + (-0.5));
        float _1405 = _1403 * (_1367.y + (-0.5));
        float _1406 = _1403 * (_1367.z + (-0.5));
        float _1413 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1374.x + (-0.5));
        float _1415 = _1413 * (_1374.y + (-0.5));
        float _1416 = _1413 * (_1374.z + (-0.5));
        float _1423 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1381.x + (-0.5));
        float _1425 = _1423 * (_1381.y + (-0.5));
        float _1426 = _1423 * (_1381.z + (-0.5));
        float _1427 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1430 = _1394 * 0.5;
        float _1431 = _1404 * 0.5;
        float _1432 = _1414 * 0.5;
        float _1433 = dot(vec3(_1430, _1431, _1432), vec3(_1430, _1431, _1432));
        float _1438 = (_1433 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1433);
        float _1446 = (dot(vec3(_715, _716, _717), vec3(_1438 * _1430, _1438 * _1431, _1438 * _1432)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1455 = sqrt(((_1431 * _1431) + (_1430 * _1430)) + (_1432 * _1432)) / (_1427 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1457 = _1456 * 2.0;
        float _1461 = (1.0 - _1456) / (_1456 + 1.0);
        float _4194 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1471 = ((((1.0 - _1462) * (_1457 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1457 + 1.0))) + _1462) * _1427;
        float _1472 = _1395 * 0.5;
        float _1473 = _1405 * 0.5;
        float _1474 = _1415 * 0.5;
        float _1475 = dot(vec3(_1472, _1473, _1474), vec3(_1472, _1473, _1474));
        float _1480 = (_1475 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1475);
        float _1488 = (dot(vec3(_715, _716, _717), vec3(_1480 * _1472, _1480 * _1473, _1480 * _1474)) + 1.0) * 0.5;
        float _4205 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1497 = sqrt(((_1473 * _1473) + (_1472 * _1472)) + (_1474 * _1474)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _4216 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1499 = _1498 * 2.0;
        float _1503 = (1.0 - _1498) / (_1498 + 1.0);
        float _4227 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1504 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1513 = ((((1.0 - _1504) * (_1499 + 2.0)) * exp2(log2(isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0))) * (_1499 + 1.0))) + _1504) * _1428;
        float _1514 = _1396 * 0.5;
        float _1515 = _1406 * 0.5;
        float _1516 = _1416 * 0.5;
        float _1517 = dot(vec3(_1514, _1515, _1516), vec3(_1514, _1515, _1516));
        float _1522 = (_1517 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1517);
        float _1530 = (dot(vec3(_715, _716, _717), vec3(_1522 * _1514, _1522 * _1515, _1522 * _1516)) + 1.0) * 0.5;
        float _4238 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1539 = sqrt(((_1515 * _1515) + (_1514 * _1514)) + (_1516 * _1516)) / (_1429 + 9.9999997473787516355514526367188e-06);
        float _4249 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1540 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1541 = _1540 * 2.0;
        float _1545 = (1.0 - _1540) / (_1540 + 1.0);
        float _4260 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1546 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1555 = ((((1.0 - _1546) * (_1541 + 2.0)) * exp2(log2(isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * (_1541 + 1.0))) + _1546) * _1429;
        _1563 = _1396;
        _1564 = _1395;
        _1565 = _1394;
        _1566 = _1406;
        _1567 = _1405;
        _1568 = _1404;
        _1569 = _1416;
        _1570 = _1415;
        _1571 = _1414;
        _1572 = _1429;
        _1573 = _1428;
        _1574 = _1427;
        _1575 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)));
        _1576 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0)));
        _1577 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0)));
    }
    else
    {
        _1563 = _1255;
        _1564 = _1255;
        _1565 = _1255;
        _1566 = _1255;
        _1567 = _1255;
        _1568 = _1255;
        _1569 = _1255;
        _1570 = _1255;
        _1571 = _1255;
        _1572 = _1255;
        _1573 = _1255;
        _1574 = _1255;
        _1575 = 0.0;
        _1576 = 0.0;
        _1577 = 0.0;
    }
    float _1587 = (cbModelParam._m0[1u].x * (_1575 - _1267)) + _1267;
    float _1588 = (cbModelParam._m0[1u].x * (_1576 - _1268)) + _1268;
    float _1589 = (cbModelParam._m0[1u].x * (_1577 - _1269)) + _1269;
    float _1610 = fma(_1589, cbSceneParam._m0[89u].z, fma(_1588, cbSceneParam._m0[89u].y, _1587 * cbSceneParam._m0[89u].x));
    float _1613 = fma(_1589, cbSceneParam._m0[90u].z, fma(_1588, cbSceneParam._m0[90u].y, _1587 * cbSceneParam._m0[90u].x));
    float _1616 = fma(_1589, cbSceneParam._m0[91u].z, fma(_1588, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1587));
    float _1631 = _889 * 0.5;
    float _1632 = _890 * 0.5;
    float _1633 = _891 * 0.5;
    float _1634 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1565, _1568, _1571, _1574));
    float _1637 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1564, _1567, _1570, _1573));
    float _1640 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1563, _1566, _1569, _1572));
    float _1674;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1647 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1254, _1258, _1261, _1264));
        float _1651 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1256, _1259, _1262, _1265));
        float _1655 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1257, _1260, _1263, _1266));
        float _1662 = dot(vec4(cbModelParam._m0[39u]), vec4(_1631, _1632, _1633, 1.0));
        _1674 = dot(vec3(isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)), isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1662) ? 0.0 : (isnan(0.0) ? _1662 : max(0.0, _1662))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1674 = 1.0;
    }
    float _1685;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1676 = dot(vec4(cbModelParam._m0[40u]), vec4(_1631, _1632, _1633, 1.0));
        _1685 = dot(vec3(isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0)), isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1676) ? 0.0 : (isnan(0.0) ? _1676 : max(0.0, _1676))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1685 = 1.0;
    }
    float _1689 = (_1685 * cbModelParam._m0[1u].x) + (_1674 * (1.0 - cbModelParam._m0[1u].x));
    float _1699 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _718);
    float _1700 = isnan(_1699) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1699 : min(cbModelParam._m0[25u].z, _1699));
    float _1780;
    float _1782;
    float _1784;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1747 = fma(_953, cbModelParam._m0[13u].z, fma(_949, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _945)) + cbModelParam._m0[13u].w;
        float _1751 = fma(_953, cbModelParam._m0[14u].z, fma(_949, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _945)) + cbModelParam._m0[14u].w;
        float _1755 = fma(_953, cbModelParam._m0[15u].z, fma(_949, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _945)) + cbModelParam._m0[15u].w;
        float _1758 = fma(_891, cbModelParam._m0[13u].z, fma(_890, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _889));
        float _1761 = fma(_891, cbModelParam._m0[14u].z, fma(_890, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _889));
        float _1764 = fma(_891, cbModelParam._m0[15u].z, fma(_890, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _889));
        float _1792;
        if (_1758 > 0.0)
        {
            _1792 = abs((1.0 - _1747) / _1758);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1747 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1792 = frontier_phi_14_12_ladder;
        }
        float _1963;
        if (_1761 > 0.0)
        {
            _1963 = abs((1.0 - _1751) / _1761);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1761 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1751 + 1.0) / _1761);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1963 = frontier_phi_23_19_ladder;
        }
        float _2258;
        if (_1764 > 0.0)
        {
            _2258 = abs((1.0 - _1755) / _1764);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1764 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1755 + 1.0) / _1764);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2258 = frontier_phi_35_30_ladder;
        }
        float _2260 = isnan(_1963) ? _1792 : (isnan(_1792) ? _1963 : min(_1792, _1963));
        float _2261 = isnan(_2258) ? _2260 : (isnan(_2260) ? _2258 : min(_2260, _2258));
        float _2265 = (_2261 * _1758) + _1747;
        float _2266 = (_2261 * _1761) + _1751;
        float _2267 = (_2261 * _1764) + _1755;
        float _2268 = _2261 * 9.9999997473787516355514526367188e-05;
        float _2270 = (-1.0) - _2268;
        float _2272 = _2268 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2267 > _2272) || ((_2267 < _2270) || ((_2266 > _2272) || ((_2266 < _2270) || ((_2265 < _2270) || (_2265 > _2272))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2412 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2267, cbModelParam._m0[9u].z, fma(_2266, cbModelParam._m0[9u].y, _2265 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2267, cbModelParam._m0[10u].z, fma(_2266, cbModelParam._m0[10u].y, _2265 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2267, cbModelParam._m0[11u].z, fma(_2266, cbModelParam._m0[11u].y, _2265 * cbModelParam._m0[11u].x))), _1700);
            frontier_phi_13_35_ladder = _2412.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2412.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2412.x * cbModelParam._m0[1u].y;
        }
        _1780 = frontier_phi_13_35_ladder_2;
        _1782 = frontier_phi_13_35_ladder_1;
        _1784 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1768 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_889, _890, _891), _1700);
        _1780 = _1768.x * cbModelParam._m0[1u].y;
        _1782 = _1768.y * cbModelParam._m0[1u].y;
        _1784 = _1768.z * cbModelParam._m0[1u].y;
    }
    float _1788 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _718);
    float _1789 = isnan(_1788) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1788 : min(cbModelParam._m0[25u].w, _1788));
    float _1878;
    float _1880;
    float _1882;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1842 = fma(_953, cbModelParam._m0[21u].z, fma(_949, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _945)) + cbModelParam._m0[21u].w;
        float _1846 = fma(_953, cbModelParam._m0[22u].z, fma(_949, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _945)) + cbModelParam._m0[22u].w;
        float _1850 = fma(_953, cbModelParam._m0[23u].z, fma(_949, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _945)) + cbModelParam._m0[23u].w;
        float _1853 = fma(_891, cbModelParam._m0[21u].z, fma(_890, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _889));
        float _1856 = fma(_891, cbModelParam._m0[22u].z, fma(_890, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _889));
        float _1859 = fma(_891, cbModelParam._m0[23u].z, fma(_890, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _889));
        float _1968;
        if (_1853 > 0.0)
        {
            _1968 = abs((1.0 - _1842) / _1853);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1842 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1968 = frontier_phi_25_21_ladder;
        }
        float _2285;
        if (_1856 > 0.0)
        {
            _2285 = abs((1.0 - _1846) / _1856);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1846 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2285 = frontier_phi_37_32_ladder;
        }
        float _2623;
        if (_1859 > 0.0)
        {
            _2623 = abs((1.0 - _1850) / _1859);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1859 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1850 + 1.0) / _1859);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2623 = frontier_phi_47_44_ladder;
        }
        float _2625 = isnan(_2285) ? _1968 : (isnan(_1968) ? _2285 : min(_1968, _2285));
        float _2626 = isnan(_2623) ? _2625 : (isnan(_2625) ? _2623 : min(_2625, _2623));
        float _2630 = (_2626 * _1853) + _1842;
        float _2631 = (_2626 * _1856) + _1846;
        float _2632 = (_2626 * _1859) + _1850;
        float _2633 = _2626 * 9.9999997473787516355514526367188e-05;
        float _2634 = (-1.0) - _2633;
        float _2636 = _2633 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2632 > _2636) || ((_2632 < _2634) || ((_2631 > _2636) || ((_2631 < _2634) || ((_2630 < _2634) || (_2630 > _2636))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2754 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2632, cbModelParam._m0[17u].z, fma(_2631, cbModelParam._m0[17u].y, _2630 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2632, cbModelParam._m0[18u].z, fma(_2631, cbModelParam._m0[18u].y, _2630 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2632, cbModelParam._m0[19u].z, fma(_2631, cbModelParam._m0[19u].y, _2630 * cbModelParam._m0[19u].x))), _1789);
            frontier_phi_22_47_ladder = _2754.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2754.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2754.x * cbModelParam._m0[1u].z;
        }
        _1878 = frontier_phi_22_47_ladder_2;
        _1880 = frontier_phi_22_47_ladder_1;
        _1882 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1862 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_889, _890, _891), _1789);
        _1878 = _1862.x * cbModelParam._m0[1u].z;
        _1880 = _1862.y * cbModelParam._m0[1u].z;
        _1882 = _1862.z * cbModelParam._m0[1u].z;
    }
    float _1895 = (((_916 * _865) + _917) * _881) * ((cbModelParam._m0[1u].w * (_1878 - _1780)) + _1780);
    float _1897 = (((_916 * _867) + _917) * _881) * ((cbModelParam._m0[1u].w * (_1880 - _1782)) + _1782);
    float _1899 = (((_916 * _868) + _917) * _881) * ((cbModelParam._m0[1u].w * (_1882 - _1784)) + _1784);
    float _1902 = fma(_1899, cbSceneParam._m0[89u].z, fma(_1897, cbSceneParam._m0[89u].y, _1895 * cbSceneParam._m0[89u].x));
    float _1905 = fma(_1899, cbSceneParam._m0[90u].z, fma(_1897, cbSceneParam._m0[90u].y, _1895 * cbSceneParam._m0[90u].x));
    float _1908 = fma(_1899, cbSceneParam._m0[91u].z, fma(_1897, cbSceneParam._m0[91u].y, _1895 * cbSceneParam._m0[91u].x));
    float _1942 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1946 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1950 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1954 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1955 = _1942 / _1954;
    float _1956 = _1946 / _1954;
    float _1957 = _1950 / _1954;
    float _2104;
    float _2105;
    float _2106;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1984 = ((uint(_1957 > cbSceneParam._m0[59u].y) + uint(_1957 > cbSceneParam._m0[59u].x)) + uint(_1957 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1985 = _1984 + 43u;
        uint _1993 = _1984 + 44u;
        uint _2001 = _1984 + 45u;
        uint _2009 = _1984 + 46u;
        float _2020 = fma(_1954, cbSceneParam._m0[_1985].w, fma(_1950, cbSceneParam._m0[_1985].z, fma(_1946, cbSceneParam._m0[_1985].y, _1942 * cbSceneParam._m0[_1985].x)));
        float _2024 = fma(_1954, cbSceneParam._m0[_1993].w, fma(_1950, cbSceneParam._m0[_1993].z, fma(_1946, cbSceneParam._m0[_1993].y, _1942 * cbSceneParam._m0[_1993].x)));
        float _2032 = fma(_1954, cbSceneParam._m0[_2009].w, fma(_1950, cbSceneParam._m0[_2009].z, fma(_1946, cbSceneParam._m0[_2009].y, _1942 * cbSceneParam._m0[_2009].x)));
        float _2037 = cbSceneParam._m0[33u].z * _2032;
        float _2039 = cbSceneParam._m0[33u].w * _2032;
        float _2042 = fma(_1954, cbSceneParam._m0[_2001].w, fma(_1950, cbSceneParam._m0[_2001].z, fma(_1946, cbSceneParam._m0[_2001].y, _1942 * cbSceneParam._m0[_2001].x))) / _2032;
        float _2090 = (cbSceneParam._m0[33u].x - sqrt(((_1956 * _1956) + (_1955 * _1955)) + (_1957 * _1957))) * cbSceneParam._m0[33u].y;
        float _4386 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2097 = (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2037 + _2020) / _2032, (_2039 + _2024) / _2032), _2042), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2039 + _2020) / _2032, (_2024 - _2037) / _2032), _2042), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2020 - _2037) / _2032, (_2024 - _2039) / _2032), _2042), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2020 - _2039) / _2032, (_2037 + _2024) / _2032), _2042), 0.0)).x), vec4(0.25)));
        _2104 = 1.0 - (_2097 * cbSceneParam._m0[34u].x);
        _2105 = 1.0 - (_2097 * cbSceneParam._m0[34u].y);
        _2106 = 1.0 - (_2097 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2104 = 1.0;
        _2105 = 1.0;
        _2106 = 1.0;
    }
    float _2170;
    float _2172;
    float _2174;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2158 = fma(_1954, cbSceneParam._m0[63u].w, fma(_1950, cbSceneParam._m0[63u].z, fma(_1946, cbSceneParam._m0[63u].y, _1942 * cbSceneParam._m0[63u].x)));
        float _2159 = fma(_1954, cbSceneParam._m0[60u].w, fma(_1950, cbSceneParam._m0[60u].z, fma(_1946, cbSceneParam._m0[60u].y, _1942 * cbSceneParam._m0[60u].x))) / _2158;
        float _2160 = fma(_1954, cbSceneParam._m0[61u].w, fma(_1950, cbSceneParam._m0[61u].z, fma(_1946, cbSceneParam._m0[61u].y, _1942 * cbSceneParam._m0[61u].x))) / _2158;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2159 >= cbSceneParam._m0[64u].x) && (_2160 >= cbSceneParam._m0[64u].y)) && (_2159 <= cbSceneParam._m0[64u].z)) && (_2160 <= cbSceneParam._m0[64u].w))
        {
            float _2298 = fma(_1954, cbSceneParam._m0[62u].w, fma(_1950, cbSceneParam._m0[62u].z, fma(_1946, cbSceneParam._m0[62u].y, _1942 * cbSceneParam._m0[62u].x))) / _2158;
            float _2302 = isnan(cbSceneParam._m0[41u].w) ? _2298 : (isnan(_2298) ? cbSceneParam._m0[41u].w : max(_2298, cbSceneParam._m0[41u].w));
            float _2345 = (cbSceneParam._m0[33u].x - sqrt(((_1956 * _1956) + (_1955 * _1955)) + (_1957 * _1957))) * cbSceneParam._m0[33u].y;
            float _4402 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
            float _2352 = (isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2159, cbSceneParam._m0[33u].w + _2160), _2302), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2159, _2160 - cbSceneParam._m0[33u].z), _2302), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2159 - cbSceneParam._m0[33u].z, _2160 - cbSceneParam._m0[33u].w), _2302), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2159 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2160), _2302), 0.0)).x), vec4(0.25)));
            float _2356 = 1.0 - (_2352 * cbSceneParam._m0[34u].x);
            float _2357 = 1.0 - (_2352 * cbSceneParam._m0[34u].y);
            float _2358 = 1.0 - (_2352 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2358) ? _2106 : (isnan(_2106) ? _2358 : min(_2106, _2358));
            frontier_phi_34_33_ladder_1 = isnan(_2357) ? _2105 : (isnan(_2105) ? _2357 : min(_2105, _2357));
            frontier_phi_34_33_ladder_2 = isnan(_2356) ? _2104 : (isnan(_2104) ? _2356 : min(_2104, _2356));
        }
        else
        {
            frontier_phi_34_33_ladder = _2106;
            frontier_phi_34_33_ladder_1 = _2105;
            frontier_phi_34_33_ladder_2 = _2104;
        }
        _2170 = frontier_phi_34_33_ladder_2;
        _2172 = frontier_phi_34_33_ladder_1;
        _2174 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2170 = _2104;
        _2172 = _2105;
        _2174 = _2106;
    }
    uvec4 _2179 = floatBitsToUint(cbInstanceData._m0[_246 + 5u]);
    uint _2181 = _2179.x * 14u;
    uint _2182 = _2181 + 13u;
    float _2189 = _881 + (-1.0);
    float _2194 = (cbLight._m0[_2182].x * _2189) + 1.0;
    float _2195 = (cbLight._m0[_2182].y * _2189) + 1.0;
    float _2196 = (cbLight._m0[_2182].z * _2189) + 1.0;
    float _2197 = (cbLight._m0[_2182].w * _2189) + 1.0;
    uint _2198 = _2181 + 5u;
    float _2204 = isnan(1.0) ? _2195 : (isnan(_2195) ? 1.0 : min(_2195, 1.0));
    uint _2208 = _2181 + 4u;
    float _2217 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
    uint _2221 = _2181 | 1u;
    float _2232 = dot(vec3(cbLight._m0[_2181].xyz), vec3(_715, _716, _717));
    float _2235 = dot(vec3(cbLight._m0[_2221].xyz), vec3(_715, _716, _717));
    float _4438 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _4449 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
    float _2240 = (isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0))) * 0.3183098733425140380859375;
    float _2242 = (isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0))) * 0.3183098733425140380859375;
    float _2249 = ((cbLight._m0[_2198].x * _2204) * _2242) + (((cbLight._m0[_2208].x * _2170) * _2217) * _2240);
    float _2250 = ((_2204 * cbLight._m0[_2198].y) * _2242) + (((cbLight._m0[_2208].y * _2172) * _2217) * _2240);
    float _2251 = ((_2204 * cbLight._m0[_2198].z) * _2242) + (((cbLight._m0[_2208].z * _2174) * _2217) * _2240);
    uvec4 _2255 = floatBitsToUint(cbLight._m0[_2181 + 12u]);
    bool _2257 = _2255.x == 0u;
    float _2359;
    float _2361;
    float _2363;
    if (_2257)
    {
        _2359 = _2249;
        _2361 = _2250;
        _2363 = _2251;
    }
    else
    {
        uint _2367 = _2181 + 6u;
        float _2383 = (dot(vec3(cbLight._m0[_2181 + 2u].xyz), vec3(_715, _716, _717)) * 0.5) + 0.5;
        float _2384 = _2383 * _2383;
        float _4460 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
        float _2385 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
        float _2386 = isnan(1.0) ? _2196 : (isnan(_2196) ? 1.0 : min(_2196, 1.0));
        _2359 = (((cbLight._m0[_2367].x * 0.3183098733425140380859375) * _2385) * _2386) + _2249;
        _2361 = (((cbLight._m0[_2367].y * 0.3183098733425140380859375) * _2385) * _2386) + _2250;
        _2363 = (((cbLight._m0[_2367].z * 0.3183098733425140380859375) * _2385) * _2386) + _2251;
    }
    bool _2366 = _2255.y == 0u;
    float _2421;
    float _2423;
    float _2425;
    if (_2366)
    {
        _2421 = _2359;
        _2423 = _2361;
        _2425 = _2363;
    }
    else
    {
        uint _2594 = _2181 + 7u;
        float _2610 = (dot(vec3(cbLight._m0[_2181 + 3u].xyz), vec3(_715, _716, _717)) * 0.5) + 0.5;
        float _2611 = _2610 * _2610;
        float _4476 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
        float _2612 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _2613 = isnan(1.0) ? _2197 : (isnan(_2197) ? 1.0 : min(_2197, 1.0));
        _2421 = (((cbLight._m0[_2594].x * 0.3183098733425140380859375) * _2612) * _2613) + _2359;
        _2423 = (((cbLight._m0[_2594].y * 0.3183098733425140380859375) * _2612) * _2613) + _2361;
        _2425 = (((cbLight._m0[_2594].z * 0.3183098733425140380859375) * _2612) * _2613) + _2363;
    }
    uint _2428 = _2181 + 8u;
    float _2441 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2181].w)) * _718) * 0.949999988079071044921875);
    float _2442 = _2441 * _2441;
    float _2443 = cbLight._m0[_2181].x + _795;
    float _2444 = cbLight._m0[_2181].y + _796;
    float _2445 = cbLight._m0[_2181].z + _797;
    float _2449 = inversesqrt(dot(vec3(_2443, _2444, _2445), vec3(_2443, _2444, _2445)));
    float _2450 = _2449 * _2443;
    float _2451 = _2449 * _2444;
    float _2452 = _2449 * _2445;
    float _2453 = dot(vec3(_715, _716, _717), vec3(cbLight._m0[_2181].xyz));
    float _4492 = isnan(0.0) ? _2453 : (isnan(_2453) ? 0.0 : max(_2453, 0.0));
    float _2456 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
    float _4503 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _2457 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
    float _2458 = dot(vec3(_715, _716, _717), vec3(_2450, _2451, _2452));
    float _4514 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2461 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
    float _2462 = dot(vec3(cbLight._m0[_2181].xyz), vec3(_2450, _2451, _2452));
    float _4525 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2466 = _2442 * _2442;
    float _2470 = ((_2461 * _2461) * (_2466 + (-1.0))) + 1.0;
    float _2478 = exp2(log2(1.0 - (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0)))) * 5.0);
    float _2479 = 0.959999978542327880859375 - _862;
    float _2481 = 0.959999978542327880859375 - _863;
    float _2482 = 0.959999978542327880859375 - _864;
    float _2489 = 1.0 - _2442;
    float _2500 = (0.5 / (((_2457 * ((_2456 * _2489) + _2442)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2489) + _2442) * _2456))) * _2456;
    float _4536 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2502 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (_2466 / ((_2470 * _2470) * 3.141590118408203125));
    uint _2516 = _2181 + 9u;
    float _2527 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2221].w)) * _718) * 0.949999988079071044921875);
    float _2528 = _2527 * _2527;
    float _2529 = cbLight._m0[_2221].x + _795;
    float _2530 = cbLight._m0[_2221].y + _796;
    float _2531 = cbLight._m0[_2221].z + _797;
    float _2535 = inversesqrt(dot(vec3(_2529, _2530, _2531), vec3(_2529, _2530, _2531)));
    float _2536 = _2535 * _2529;
    float _2537 = _2535 * _2530;
    float _2538 = _2535 * _2531;
    float _2539 = dot(vec3(_715, _716, _717), vec3(cbLight._m0[_2221].xyz));
    float _4547 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
    float _2542 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
    float _2543 = dot(vec3(_715, _716, _717), vec3(_2536, _2537, _2538));
    float _4558 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2546 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
    float _2547 = dot(vec3(cbLight._m0[_2221].xyz), vec3(_2536, _2537, _2538));
    float _4569 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
    float _2551 = _2528 * _2528;
    float _2555 = ((_2546 * _2546) * (_2551 + (-1.0))) + 1.0;
    float _2562 = exp2(log2(1.0 - (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0)))) * 5.0);
    float _2569 = 1.0 - _2528;
    float _2579 = (0.5 / (((_2457 * ((_2542 * _2569) + _2528)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2569) + _2528) * _2542))) * _2542;
    float _4580 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0));
    float _2581 = (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0))) * (_2551 / ((_2555 * _2555) * 3.141590118408203125));
    float _2591 = (((((_2562 * _2479) + _865) * cbLight._m0[_2516].x) * _2581) * _2204) + ((((cbLight._m0[_2428].x * _2170) * ((_2478 * _2479) + _865)) * _2502) * _2217);
    float _2592 = (((((_2562 * _2481) + _867) * cbLight._m0[_2516].y) * _2581) * _2204) + ((((cbLight._m0[_2428].y * _2172) * ((_2478 * _2481) + _867)) * _2502) * _2217);
    float _2593 = (((((_2562 * _2482) + _868) * cbLight._m0[_2516].z) * _2581) * _2204) + ((((cbLight._m0[_2428].z * _2174) * ((_2478 * _2482) + _868)) * _2502) * _2217);
    float _2649;
    float _2651;
    float _2653;
    if (_2257)
    {
        _2649 = _2591;
        _2651 = _2592;
        _2653 = _2593;
    }
    else
    {
        uint _2655 = _2181 + 2u;
        uint _2659 = _2181 + 10u;
        float _2673 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2655].w)) * _718) * 0.949999988079071044921875);
        float _2674 = _2673 * _2673;
        float _2675 = cbLight._m0[_2655].x + _795;
        float _2676 = cbLight._m0[_2655].y + _796;
        float _2677 = cbLight._m0[_2655].z + _797;
        float _2681 = inversesqrt(dot(vec3(_2675, _2676, _2677), vec3(_2675, _2676, _2677)));
        float _2682 = _2681 * _2675;
        float _2683 = _2681 * _2676;
        float _2684 = _2681 * _2677;
        float _2685 = dot(vec3(_715, _716, _717), vec3(cbLight._m0[_2655].xyz));
        float _4591 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2688 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
        float _2689 = dot(vec3(_715, _716, _717), vec3(_2682, _2683, _2684));
        float _4602 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2692 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
        float _2693 = dot(vec3(cbLight._m0[_2655].xyz), vec3(_2682, _2683, _2684));
        float _4613 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
        float _2697 = _2674 * _2674;
        float _2701 = ((_2692 * _2692) * (_2697 + (-1.0))) + 1.0;
        float _2708 = exp2(log2(1.0 - (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0)))) * 5.0);
        float _2715 = 1.0 - _2674;
        float _2725 = (0.5 / (((_2457 * ((_2688 * _2715) + _2674)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2715) + _2674) * _2688))) * _2688;
        float _4624 = isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : max(_2725, 0.0));
        float _2727 = (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * (_2697 / ((_2701 * _2701) * 3.141590118408203125));
        float _2728 = isnan(1.0) ? _2196 : (isnan(_2196) ? 1.0 : min(_2196, 1.0));
        _2649 = (((((_2708 * _2479) + _865) * cbLight._m0[_2659].x) * _2727) * _2728) + _2591;
        _2651 = (((((_2708 * _2481) + _867) * cbLight._m0[_2659].y) * _2727) * _2728) + _2592;
        _2653 = (((((_2708 * _2482) + _868) * cbLight._m0[_2659].z) * _2727) * _2728) + _2593;
    }
    float _2759;
    float _2761;
    float _2763;
    if (_2366)
    {
        _2759 = _2649;
        _2761 = _2651;
        _2763 = _2653;
    }
    else
    {
        uint _2770 = _2181 + 3u;
        uint _2774 = _2181 + 11u;
        float _2788 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2770].w)) * _718) * 0.949999988079071044921875);
        float _2789 = _2788 * _2788;
        float _2790 = cbLight._m0[_2770].x + _795;
        float _2791 = cbLight._m0[_2770].y + _796;
        float _2792 = cbLight._m0[_2770].z + _797;
        float _2796 = inversesqrt(dot(vec3(_2790, _2791, _2792), vec3(_2790, _2791, _2792)));
        float _2797 = _2796 * _2790;
        float _2798 = _2796 * _2791;
        float _2799 = _2796 * _2792;
        float _2800 = dot(vec3(_715, _716, _717), vec3(cbLight._m0[_2770].xyz));
        float _4640 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0));
        float _2803 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
        float _2804 = dot(vec3(_715, _716, _717), vec3(_2797, _2798, _2799));
        float _4651 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2807 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
        float _2808 = dot(vec3(cbLight._m0[_2770].xyz), vec3(_2797, _2798, _2799));
        float _4662 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2812 = _2789 * _2789;
        float _2816 = ((_2807 * _2807) * (_2812 + (-1.0))) + 1.0;
        float _2823 = exp2(log2(1.0 - (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0)))) * 5.0);
        float _2830 = 1.0 - _2789;
        float _2840 = (0.5 / (((_2457 * ((_2803 * _2830) + _2789)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2830) + _2789) * _2803))) * _2803;
        float _4673 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
        float _2842 = (isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0))) * (_2812 / ((_2816 * _2816) * 3.141590118408203125));
        float _2843 = isnan(1.0) ? _2197 : (isnan(_2197) ? 1.0 : min(_2197, 1.0));
        _2759 = (((((_2823 * _2479) + _865) * cbLight._m0[_2774].x) * _2842) * _2843) + _2649;
        _2761 = (((((_2823 * _2481) + _867) * cbLight._m0[_2774].y) * _2842) * _2843) + _2651;
        _2763 = (((((_2823 * _2482) + _868) * cbLight._m0[_2774].z) * _2842) * _2843) + _2653;
    }
    float _2909;
    float _2911;
    float _2913;
    float _2915;
    float _2917;
    float _2919;
    if (_2179.y == 0u)
    {
        uvec4 _2864 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2865 = _2864.x;
        uint _2876 = uint((float(_2864.y) * floor(float(uint(cbSceneParam._m0[85u].y * _804) / _2865))) + floor(float(uint(cbSceneParam._m0[85u].x * _803) / _2865)));
        float _2886 = (log2(_1957 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2887 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        uint _2890 = uint(isnan(14.0) ? _2887 : (isnan(_2887) ? 14.0 : min(_2887, 14.0)));
        uvec4 _2895 = texelFetch(g_lightClusterGridBuffer, int(((_2890 << 2u) + (_2876 << 6u)) >> 2u));
        uint _2896 = _2895.x;
        uint _2897 = _2864.z;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        float _2984;
        float _2986;
        if (((((1u << ((_2897 >> 4u) & 15u)) + 4294967295u) & _2896) == 0u) || ((_2897 & 240u) == 0u))
        {
            _2976 = 0.0;
            _2978 = 0.0;
            _2980 = 0.0;
            _2982 = 0.0;
            _2984 = 0.0;
            _2986 = 0.0;
        }
        else
        {
            float _2977;
            float _2979;
            float _2981;
            float _2983;
            float _2985;
            float _2987;
            float _3121 = 0.0;
            float _3122 = 0.0;
            float _3123 = 0.0;
            float _3124 = 0.0;
            float _3125 = 0.0;
            float _3126 = 0.0;
            uint _3127 = 0u;
            uint _3136;
            bool _3137;
            for (;;)
            {
                _3136 = texelFetch(g_lightClassification, int((((_2890 << 5u) + (_2876 << 9u)) + (_3127 << 2u)) >> 2u)).x;
                _3137 = _3136 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3137)
                {
                    frontier_phi_66_pred = _3126;
                    frontier_phi_66_pred_1 = _3125;
                    frontier_phi_66_pred_2 = _3124;
                    frontier_phi_66_pred_3 = _3123;
                    frontier_phi_66_pred_4 = _3122;
                    frontier_phi_66_pred_5 = _3121;
                }
                else
                {
                    float _3245;
                    float _3246;
                    float _3247;
                    float _3248;
                    float _3249;
                    float _3250;
                    uint _3251;
                    _3245 = _3121;
                    _3246 = _3122;
                    _3247 = _3123;
                    _3248 = _3124;
                    _3249 = _3125;
                    _3250 = _3126;
                    _3251 = _3136;
                    float _3177;
                    float _3178;
                    float _3179;
                    float _3180;
                    float _3181;
                    float _3182;
                    for (;;)
                    {
                        uint _3255 = uint(findLSB(_3251)) + (_3127 << 5u);
                        uint _3252 = (_3251 + 4294967295u) & _3251;
                        uint _3257 = _3255 * 48u;
                        vec4 _3271 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3257)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 3u)).x));
                        uint _3277 = (_3255 * 48u) + 4u;
                        vec4 _3290 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3277)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 3u)).x));
                        uint _3296 = (_3255 * 48u) + 8u;
                        vec3 _3307 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3296)).x, texelFetch(g_PointLightRenderingBuffer, int(_3296 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3296 + 2u)).x));
                        float _3311 = _3271.x - _1955;
                        float _3312 = _3271.y - _1956;
                        float _3313 = _3271.z - _1957;
                        float _3314 = dot(vec3(_3311, _3312, _3313), vec3(_3311, _3312, _3313));
                        float _3317 = inversesqrt(_3314);
                        float _3318 = _3317 * _3311;
                        float _3319 = _3317 * _3312;
                        float _3320 = _3317 * _3313;
                        float _3321 = dot(vec3(_822, _825, _828), vec3(_3318, _3319, _3320));
                        float _3326 = 1.0 - (_3314 * _3271.w);
                        float _4699 = isnan(0.0) ? _3326 : (isnan(_3326) ? 0.0 : max(_3326, 0.0));
                        float _3327 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
                        float _3328 = sqrt(_3314) * _3290.w;
                        float _3331 = 1.39999997615814208984375 / (_3328 + 1.39999997615814208984375);
                        float _3332 = _3331 * _3331;
                        float _3335 = ((1.0 - _3332) * _3321) + _3332;
                        float _3338 = _3328 * _3328;
                        float _3342 = ((isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : max(_3335, 0.0))) * _3327) / ((_3338 * 0.699999988079071044921875) + 1.0);
                        float _3346 = (-0.0) - _1955;
                        float _3347 = (-0.0) - _1956;
                        float _3348 = (-0.0) - _1957;
                        float _3352 = inversesqrt(dot(vec3(_3346, _3347, _3348), vec3(_3346, _3347, _3348)));
                        float _3353 = _3352 * _3346;
                        float _3354 = _3352 * _3347;
                        float _3355 = _3352 * _3348;
                        float _3362 = exp2(log2(1.0 / ((_3338 * 3.5) + 5.0)) * 0.25);
                        float _3363 = 1.0 - _897;
                        float _3370 = sqrt(1.0 - ((1.0 - (_3363 * _3363)) * (1.0 - (_3362 * _3362))));
                        float _3371 = _3370 * _3370;
                        float _3372 = _3371 * _3371;
                        float _3373 = _3353 + _3318;
                        float _3374 = _3354 + _3319;
                        float _3375 = _3355 + _3320;
                        float _3379 = inversesqrt(dot(vec3(_3373, _3374, _3375), vec3(_3373, _3374, _3375)));
                        float _3383 = dot(vec3(_822, _825, _828), vec3(_3353, _3354, _3355));
                        float _4715 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                        float _3386 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
                        float _3387 = dot(vec3(_822, _825, _828), vec3(_3379 * _3373, _3379 * _3374, _3379 * _3375));
                        float _4726 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0));
                        float _3390 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
                        float _3394 = ((_3390 * _3390) * (_3372 + (-1.0))) + 1.0;
                        float _3395 = _3331 * _3371;
                        float _3396 = _3395 * _3395;
                        float _3399 = ((1.0 - _3396) * _3321) + _3396;
                        float _4737 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                        float _3400 = isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0));
                        float _3401 = 1.0 - _3371;
                        float _3411 = (0.5 / (((_3400 * ((_3386 * _3401) + _3371)) + 9.9999999392252902907785028219223e-09) + (((_3400 * _3401) + _3371) * _3386))) * _3400;
                        float _4748 = isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0));
                        float _3422 = (((_3372 * 3.1415927410125732421875) * (isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0)))) / ((_3394 * _3394) * ((_3338 * 2.1991131305694580078125) + 3.141590118408203125))) * _3327;
                        _3180 = (_3342 * _3290.x) + _3248;
                        _3181 = (_3342 * _3290.y) + _3249;
                        _3182 = (_3342 * _3290.z) + _3250;
                        _3177 = (_3422 * _3307.x) + _3245;
                        _3178 = (_3422 * _3307.y) + _3246;
                        _3179 = (_3422 * _3307.z) + _3247;
                        if (_3252 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3245 = _3177;
                            _3246 = _3178;
                            _3247 = _3179;
                            _3248 = _3180;
                            _3249 = _3181;
                            _3250 = _3182;
                            _3251 = _3252;
                        }
                    }
                    frontier_phi_66_pred = _3182;
                    frontier_phi_66_pred_1 = _3181;
                    frontier_phi_66_pred_2 = _3180;
                    frontier_phi_66_pred_3 = _3179;
                    frontier_phi_66_pred_4 = _3178;
                    frontier_phi_66_pred_5 = _3177;
                }
                _2987 = frontier_phi_66_pred;
                _2985 = frontier_phi_66_pred_1;
                _2983 = frontier_phi_66_pred_2;
                _2981 = frontier_phi_66_pred_3;
                _2979 = frontier_phi_66_pred_4;
                _2977 = frontier_phi_66_pred_5;
                uint _3128 = _3127 + 1u;
                if (_3128 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3121 = _2977;
                    _3122 = _2979;
                    _3123 = _2981;
                    _3124 = _2983;
                    _3125 = _2985;
                    _3126 = _2987;
                    _3127 = _3128;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2976 = _2977;
            _2978 = _2979;
            _2980 = _2981;
            _2982 = _2983;
            _2984 = _2985;
            _2986 = _2987;
        }
        uvec4 _2990 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2991 = _2990.z;
        uint _2993 = (_2991 >> 8u) & 15u;
        float _3089;
        float _3091;
        float _3093;
        float _3095;
        float _3097;
        float _3099;
        if (((4294967295u << _2993) & _2896) == 0u)
        {
            _3089 = _2976;
            _3091 = _2978;
            _3093 = _2980;
            _3095 = _2982;
            _3097 = _2984;
            _3099 = _2986;
        }
        else
        {
            float _3114 = inversesqrt(dot(vec3(_1955, _1956, _1957), vec3(_1955, _1956, _1957)));
            float _3115 = _3114 * _1955;
            float _3116 = _3114 * _1956;
            float _3117 = _3114 * _1957;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2993 < ((_2991 >> 12u) & 15u))
            {
                float _3090;
                float _3092;
                float _3094;
                float _3096;
                float _3098;
                float _3100;
                float _3228 = _2976;
                float _3229 = _2978;
                float _3230 = _2980;
                float _3231 = _2982;
                float _3232 = _2984;
                float _3233 = _2986;
                uint _3234 = _2993;
                uint _3243;
                bool _3244;
                for (;;)
                {
                    _3243 = texelFetch(g_lightClassification, int((((_2890 << 5u) + (_2876 << 9u)) + (_3234 << 2u)) >> 2u)).x;
                    _3244 = _3243 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3244)
                    {
                        frontier_phi_72_pred = _3233;
                        frontier_phi_72_pred_1 = _3232;
                        frontier_phi_72_pred_2 = _3231;
                        frontier_phi_72_pred_3 = _3230;
                        frontier_phi_72_pred_4 = _3229;
                        frontier_phi_72_pred_5 = _3228;
                    }
                    else
                    {
                        float _3427;
                        float _3428;
                        float _3429;
                        float _3430;
                        float _3431;
                        float _3432;
                        float _3720;
                        float _3721;
                        float _3722;
                        float _3723;
                        float _3724;
                        float _3725;
                        float _3440 = _3228;
                        float _3441 = _3229;
                        float _3442 = _3230;
                        float _3443 = _3231;
                        float _3444 = _3232;
                        float _3445 = _3233;
                        uint _3446 = _3243;
                        uint _3447;
                        vec4 _3472;
                        float _3473;
                        vec4 _3488;
                        vec3 _3500;
                        vec4 _3515;
                        vec4 _3530;
                        float _3576;
                        bool _3577;
                        for (;;)
                        {
                            uint _3457 = ((_3234 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3446));
                            _3447 = (_3446 + 4294967295u) & _3446;
                            uint _3459 = _3457 * 40u;
                            _3472 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3459)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3459 + 3u)).x));
                            _3473 = _3472.w;
                            uint _3475 = (_3457 * 40u) + 4u;
                            _3488 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3475)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 3u)).x));
                            uint _3490 = (_3457 * 40u) + 8u;
                            _3500 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3490)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 2u)).x));
                            uint _3502 = (_3457 * 40u) + 16u;
                            _3515 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3502)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 3u)).x));
                            uint _3517 = (_3457 * 40u) + 20u;
                            _3530 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 3u)).x));
                            uint _3532 = (_3457 * 40u) + 24u;
                            vec4 _3545 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3532)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 3u)).x));
                            uint _3551 = (_3457 * 40u) + 28u;
                            vec4 _3564 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3551)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3551 + 3u)).x));
                            _3576 = fma(_1957, _3564.z, fma(_1956, _3564.y, _3564.x * _1955)) + _3564.w;
                            _3577 = !((fma(_1957, _3545.z, fma(_1956, _3545.y, _3545.x * _1955)) + _3545.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3577)
                            {
                                float _3604 = _3472.x - _1955;
                                float _3605 = _3472.y - _1956;
                                float _3606 = _3472.z - _1957;
                                float _3607 = dot(vec3(_3604, _3605, _3606), vec3(_3604, _3605, _3606));
                                float _3610 = inversesqrt(_3607);
                                float _3611 = _3610 * _3604;
                                float _3612 = _3610 * _3605;
                                float _3613 = _3610 * _3606;
                                float _3617 = 1.0 - (_3607 / (_3473 * _3473));
                                float _4759 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0));
                                float _3618 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
                                float _3622 = sqrt(_3607) * _3488.w;
                                float _3624 = 1.39999997615814208984375 / (_3622 + 1.39999997615814208984375);
                                float _3625 = _3624 * _3624;
                                float _3628 = ((1.0 - _3625) * dot(vec3(_3611, _3612, _3613), vec3(_822, _825, _828))) + _3625;
                                float _3631 = _3622 * _3622;
                                float _3635 = (fma(_1957, _3515.z, fma(_1956, _3515.y, _3515.x * _1955)) + _3515.w) / _3576;
                                float _3636 = (fma(_1957, _3530.z, fma(_1956, _3530.y, _3530.x * _1955)) + _3530.w) / _3576;
                                float _3640 = 1.0 - dot(vec2(_3635, _3636), vec2(_3635, _3636));
                                float _4775 = isnan(0.0) ? _3640 : (isnan(_3640) ? 0.0 : max(_3640, 0.0));
                                float _3641 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
                                float _3642 = _3641 * (((isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0))) * _3618) / ((_3631 * 0.699999988079071044921875) + 1.0));
                                float _3654 = exp2(log2(1.0 / ((_3631 * 3.5) + 5.0)) * 0.25);
                                float _3655 = 1.0 - _897;
                                float _3662 = sqrt(1.0 - ((1.0 - (_3655 * _3655)) * (1.0 - (_3654 * _3654))));
                                float _3663 = _3662 * _3662;
                                float _3664 = _3663 * _3663;
                                float _3665 = _3611 - _3115;
                                float _3666 = _3612 - _3116;
                                float _3667 = _3613 - _3117;
                                float _3671 = inversesqrt(dot(vec3(_3665, _3666, _3667), vec3(_3665, _3666, _3667)));
                                float _3675 = dot(vec3(_822, _825, _828), vec3((-0.0) - _3115, (-0.0) - _3116, (-0.0) - _3117));
                                float _4786 = isnan(0.0) ? _3675 : (isnan(_3675) ? 0.0 : max(_3675, 0.0));
                                float _3678 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                                float _3679 = dot(vec3(_822, _825, _828), vec3(_3671 * _3665, _3671 * _3666, _3671 * _3667));
                                float _4797 = isnan(0.0) ? _3679 : (isnan(_3679) ? 0.0 : max(_3679, 0.0));
                                float _3682 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                                float _3686 = ((_3682 * _3682) * (_3664 + (-1.0))) + 1.0;
                                float _3687 = _3624 * _3663;
                                float _3688 = _3687 * _3687;
                                float _3694 = ((1.0 - _3688) * dot(vec3(_822, _825, _828), vec3(_3611, _3612, _3613))) + _3688;
                                float _4808 = isnan(0.0) ? _3694 : (isnan(_3694) ? 0.0 : max(_3694, 0.0));
                                float _3695 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                                float _3696 = 1.0 - _3663;
                                float _3706 = (0.5 / (((_3695 * ((_3678 * _3696) + _3663)) + 9.9999999392252902907785028219223e-09) + (((_3695 * _3696) + _3663) * _3678))) * _3695;
                                float _4819 = isnan(0.0) ? _3706 : (isnan(_3706) ? 0.0 : max(_3706, 0.0));
                                float _3716 = (_3641 * _3618) * (((_3664 * 3.1415927410125732421875) * (isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0)))) / ((_3686 * _3686) * ((_3631 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3642 * _3488.y;
                                frontier_phi_78_pred_1 = _3642 * _3488.x;
                                frontier_phi_78_pred_2 = _3716 * _3500.z;
                                frontier_phi_78_pred_3 = _3716 * _3500.y;
                                frontier_phi_78_pred_4 = _3716 * _3500.x;
                                frontier_phi_78_pred_5 = _3642 * _3488.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3724 = frontier_phi_78_pred;
                            _3723 = frontier_phi_78_pred_1;
                            _3722 = frontier_phi_78_pred_2;
                            _3721 = frontier_phi_78_pred_3;
                            _3720 = frontier_phi_78_pred_4;
                            _3725 = frontier_phi_78_pred_5;
                            _3430 = _3723 + _3443;
                            _3431 = _3724 + _3444;
                            _3432 = _3725 + _3445;
                            _3427 = _3720 + _3440;
                            _3428 = _3721 + _3441;
                            _3429 = _3722 + _3442;
                            if (_3447 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3440 = _3427;
                                _3441 = _3428;
                                _3442 = _3429;
                                _3443 = _3430;
                                _3444 = _3431;
                                _3445 = _3432;
                                _3446 = _3447;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3432;
                        frontier_phi_72_pred_1 = _3431;
                        frontier_phi_72_pred_2 = _3430;
                        frontier_phi_72_pred_3 = _3429;
                        frontier_phi_72_pred_4 = _3428;
                        frontier_phi_72_pred_5 = _3427;
                    }
                    _3100 = frontier_phi_72_pred;
                    _3098 = frontier_phi_72_pred_1;
                    _3096 = frontier_phi_72_pred_2;
                    _3094 = frontier_phi_72_pred_3;
                    _3092 = frontier_phi_72_pred_4;
                    _3090 = frontier_phi_72_pred_5;
                    uint _3235 = _3234 + 1u;
                    if (_3235 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3228 = _3090;
                        _3229 = _3092;
                        _3230 = _3094;
                        _3231 = _3096;
                        _3232 = _3098;
                        _3233 = _3100;
                        _3234 = _3235;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3100;
                frontier_phi_60_61_ladder_1 = _3098;
                frontier_phi_60_61_ladder_2 = _3094;
                frontier_phi_60_61_ladder_3 = _3092;
                frontier_phi_60_61_ladder_4 = _3090;
                frontier_phi_60_61_ladder_5 = _3096;
            }
            else
            {
                frontier_phi_60_61_ladder = _2986;
                frontier_phi_60_61_ladder_1 = _2984;
                frontier_phi_60_61_ladder_2 = _2980;
                frontier_phi_60_61_ladder_3 = _2978;
                frontier_phi_60_61_ladder_4 = _2976;
                frontier_phi_60_61_ladder_5 = _2982;
            }
            _3089 = frontier_phi_60_61_ladder_4;
            _3091 = frontier_phi_60_61_ladder_3;
            _3093 = frontier_phi_60_61_ladder_2;
            _3095 = frontier_phi_60_61_ladder_5;
            _3097 = frontier_phi_60_61_ladder_1;
            _3099 = frontier_phi_60_61_ladder;
        }
        float _3104 = isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0));
        _2909 = (_3104 * _3095) + _2421;
        _2911 = (_3104 * _3097) + _2423;
        _2913 = (_3104 * _3099) + _2425;
        _2915 = ((_3089 * _865) * _3104) + _2759;
        _2917 = ((_3091 * _867) * _3104) + _2761;
        _2919 = ((_3093 * _868) * _3104) + _2763;
    }
    else
    {
        _2909 = _2421;
        _2911 = _2423;
        _2913 = _2425;
        _2915 = _2759;
        _2917 = _2761;
        _2919 = _2763;
    }
    float _4835 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _4846 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _4857 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    uint _2939 = _246 + 6u;
    float _2947 = _803 / cbSceneParam._m0[86u].x;
    float _2948 = _804 / cbSceneParam._m0[86u].y;
    vec4 _2962 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2947, _2948, (log2((isnan(cbSceneParam._m0[77u].w) ? _737 : (isnan(_737) ? cbSceneParam._m0[77u].w : min(_737, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2964 = _2962.x;
    float _2965 = _2962.y;
    float _2966 = _2962.z;
    float _2967 = _2962.w;
    float _3039;
    float _3041;
    float _3043;
    float _3045;
    if (_737 > cbSceneParam._m0[78u].w)
    {
        float _3001 = isnan(_737) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _737 : min(cbSceneParam._m0[80u].w, _737));
        float _3002 = _3001 / _737;
        float _3013 = _3002 * _788;
        float _3014 = _789 * _3002;
        float _3015 = (-0.0) - _3014;
        float _3017 = _3002 * _790;
        float _3019 = (cbSceneParam._m0[77u].w * _3015) / _3001;
        float _3020 = _3019 + cbSceneParam._m0[79u].w;
        float _3021 = cbSceneParam._m0[79u].w - _3014;
        float _3027 = sqrt(((_3013 * _3013) + (_3014 * _3014)) + (_3017 * _3017));
        float _3030 = (1.0 - (cbSceneParam._m0[77u].w / _3001)) * _3027;
        float _3035 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3037 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3190;
        if (abs((_3015 - _3019) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3190 = ((((_3020 > 0.0) ? exp2(_3035 * _3020) : (2.0 - exp2(_3037 * _3020))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3030;
        }
        else
        {
            float _3150 = 1.0 / cbSceneParam._m0[80u].x;
            float _3151 = isnan(_3021) ? _3020 : (isnan(_3020) ? _3021 : max(_3020, _3021));
            float _3152 = isnan(_3021) ? _3020 : (isnan(_3020) ? _3021 : min(_3020, _3021));
            float _3161 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : min(_3151, 0.0));
            float _3162 = isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : min(_3152, 0.0));
            _3190 = ((abs(_3027 / _3015) * cbSceneParam._m0[80u].y) * ((((_3161 - _3162) * 2.0) - ((exp2(_3035 * (isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0)))) - exp2(_3035 * (isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0))))) * _3150)) - ((exp2(_3037 * _3161) - exp2(_3037 * _3162)) * _3150))) + (_3030 * cbSceneParam._m0[80u].z);
        }
        vec4 _3192 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2947, _2948, 1.0), 0.0);
        float _3201 = exp2((_3190 * (-1.44269502162933349609375)) * (1.0 - _3192.w));
        float _3202 = log2(_3201);
        float _3218 = log2(_2967);
        _3039 = (exp2(_3218 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3202 * cbSceneParam._m0[78u].x)) * _3192.x) / cbSceneParam._m0[78u].x)) + _2964;
        _3041 = (exp2(_3218 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3202 * cbSceneParam._m0[78u].y)) * _3192.y) / cbSceneParam._m0[78u].y)) + _2965;
        _3043 = (exp2(_3218 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3202 * cbSceneParam._m0[78u].z)) * _3192.z) / cbSceneParam._m0[78u].z)) + _2966;
        _3045 = _3201 * _2967;
    }
    else
    {
        _3039 = _2964;
        _3041 = _2965;
        _3043 = _2966;
        _3045 = _2967;
    }
    float _3057 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3058 = _3057 == 3.0;
    float _3059 = log2(_3045);
    float _3066 = exp2(_3059 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0))) * (_2909 + ((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _881))) + ((_2915 + ((isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3067 = exp2(_3059 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_2911 + ((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _881))) + ((_2917 + ((isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3068 = exp2(_3059 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_2913 + ((isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))) * _881))) + ((_2919 + ((isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3077 = (_3057 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3077 * (_3058 ? _3066 : (_3066 + (cbSceneParam._m0[72u].w * _3039)));
    SV_Target.y = _3077 * (_3058 ? _3067 : (_3067 + (cbSceneParam._m0[72u].w * _3041)));
    SV_Target.z = _3077 * (_3058 ? _3068 : (_3068 + (cbSceneParam._m0[72u].w * _3043)));
    SV_Target.w = cbInstanceData._m0[_2939].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2939].w;
}


