#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _183 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _184 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _185 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _191 = inversesqrt(dot(vec3(_183, _184, _185), vec3(_183, _184, _185)));
    float _192 = _191 * _183;
    float _193 = _191 * _184;
    float _194 = _191 * _185;
    float _198 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _199 = _198 * NORMAL.x;
    float _200 = _198 * NORMAL.y;
    float _201 = _198 * NORMAL.z;
    float _205 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _206 = _205 * TANGENT.x;
    float _207 = _205 * TANGENT.y;
    float _208 = _205 * TANGENT.z;
    uint _211 = uint(roundEven(NORMAL.w)) * 13u;
    uint _217 = _211 + 1u;
    uint _221 = _211 + 2u;
    float _230 = sqrt(((cbInstanceData._m0[_217].x * cbInstanceData._m0[_217].x) + (cbInstanceData._m0[_211].x * cbInstanceData._m0[_211].x)) + (cbInstanceData._m0[_221].x * cbInstanceData._m0[_221].x));
    float _231 = _230 * TEXCOORD.z;
    float _232 = _230 * TEXCOORD.w;
    vec4 _252 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _258 = _252.x * cbMtdParam._m0[11u].x;
    float _259 = _252.y * cbMtdParam._m0[11u].y;
    float _260 = _252.z * cbMtdParam._m0[11u].z;
    vec4 _279 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _231) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _232) + cbTextureTilingScale._m0[5u].w));
    vec4 _318 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _320 = _318.x;
    float _333 = dot(vec4(_320, _318.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _350 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_320 - _333) * cbMtdParam._m0[24u].y) + _333) * cbMtdParam._m0[23u].x))) + 1.0;
    float _918 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _351 = isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0));
    float _358 = (_351 * ((_279.x * cbMtdParam._m0[12u].x) - _258)) + _258;
    float _359 = (_351 * ((_279.y * cbMtdParam._m0[12u].y) - _259)) + _259;
    float _360 = (_351 * ((_279.z * cbMtdParam._m0[12u].z) - _260)) + _260;
    vec4 _379 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _231) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _232) + cbTextureTilingScale._m0[14u].w));
    vec4 _399 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _231) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _232) + cbTextureTilingScale._m0[20u].w));
    vec4 _426 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _231) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _232) + cbTextureTilingScale._m0[4u].w));
    vec4 _443 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _445 = _443.x;
    float _446 = _443.y;
    float _447 = _443.z;
    float _456 = ((_426.z - _447) * _351) + _447;
    float _459 = ((((_426.x - _445) * _351) + _445) * 2.0) + (-1.0);
    float _460 = ((((_426.y - _446) * _351) + _446) * 2.0) + (-1.0);
    float _461 = dot(vec2(_459, _460), vec2(_459, _460));
    float _929 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _466 = sqrt(1.0 - (isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0))));
    float _469 = _459 + ((((_399.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _470 = _460 + ((((_399.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _473 = fma(_466, _199, fma(_470, _206, _469 * _192));
    float _476 = fma(_466, _200, fma(_470, _207, _469 * _193));
    float _479 = fma(_466, _201, fma(_470, _208, _469 * _194));
    float _483 = inversesqrt(dot(vec3(_473, _476, _479), vec3(_473, _476, _479)));
    vec4 _499 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _525 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _231) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _232) + cbTextureTilingScale._m0[11u].w));
    float _527 = _525.x;
    float _528 = 1.0 - _527;
    float _532 = ((_527 - _528) * cbMtdParam._m0[24u].z) + _528;
    float _534 = (cbMtdParam._m0[19u].x + dot(vec4(_483 * _473, _483 * _476, _483 * _479, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_532 * cbMtdParam._m0[21u].z);
    float _940 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _535 = isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0));
    float _550 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_532 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _951 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _551 = isnan(1.0) ? _951 : (isnan(_951) ? 1.0 : min(_951, 1.0));
    float _555 = ((_535 * ((_379.x * cbMtdParam._m0[18u].x) - _358)) * _551) + _358;
    float _556 = ((_535 * ((_379.y * cbMtdParam._m0[18u].y) - _359)) * _551) + _359;
    float _557 = ((_535 * ((_379.z * cbMtdParam._m0[18u].z) - _360)) * _551) + _360;
    vec4 _569 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _583 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _585 = _583.x;
    float _603 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _231) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _232) + cbTextureTilingScale._m0[9u].w)).x - _585) * _351) + _585;
    float _607 = ((_569.x - _603) * cbMtdParam._m0[19u].z) + _603;
    float _610 = _607 - ((_551 * _535) * _607);
    float _615 = (((_399.z - _456) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _456;
    vec4 _628 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _231) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _232) + cbTextureTilingScale._m0[15u].w));
    float _635 = (_628.x * 2.0) + (-1.0);
    float _636 = (_628.y * 2.0) + (-1.0);
    float _637 = dot(vec2(_635, _636), vec2(_635, _636));
    float _962 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _646 = (((_628.z - _615) * _535) * _551) + _615;
    float _661 = (((cbMtdParam._m0[21u].x * _469) + ((_635 - _469) * _535)) * _551) + _469;
    float _662 = (((cbMtdParam._m0[21u].x * _470) + ((_636 - _470) * _535)) * _551) + _470;
    float _663 = (((sqrt(1.0 - (isnan(1.0) ? _962 : (isnan(_962) ? 1.0 : min(_962, 1.0)))) - _466) * _535) * _551) + _466;
    float _668 = cbMtdParam._m0[22u].x + _499.w;
    float _671 = fma(_663, _199, fma(_662, _206, _661 * _192));
    float _674 = fma(_663, _200, fma(_662, _207, _661 * _193));
    float _677 = fma(_663, _201, fma(_662, _208, _661 * _194));
    float _681 = inversesqrt(dot(vec3(_671, _674, _677), vec3(_671, _674, _677)));
    float _973 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _984 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _683 = isnan(1.0) ? _984 : (isnan(_984) ? 1.0 : min(_984, 1.0));
    float _995 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _684 = isnan(1.0) ? _995 : (isnan(_995) ? 1.0 : min(_995, 1.0));
    float _1006 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _685 = isnan(1.0) ? _1006 : (isnan(_1006) ? 1.0 : min(_1006, 1.0));
    float _1017 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _686 = isnan(1.0) ? _1017 : (isnan(_1017) ? 1.0 : min(_1017, 1.0));
    float _1028 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _728 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _738 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _728);
    float _739 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _728);
    float _740 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _728);
    vec4 _745 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _747 = _745.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _807 = sqrt(((_738 * _738) + (_739 * _739)) + (_740 * _740));
        float _813 = (cbMatDynParam._m0[5u].x * _807) + cbMatDynParam._m0[5u].y;
        float _1039 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
        float _814 = isnan(1.0) ? _1039 : (isnan(_1039) ? 1.0 : min(_1039, 1.0));
        float _818 = (cbMatDynParam._m0[5u].z * _807) + cbMatDynParam._m0[5u].w;
        float _1050 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1050 : (isnan(_1050) ? 1.0 : min(_1050, 1.0))) - _814)) + _814) < ((_747 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _845;
    vec4 _769;
    float _776;
    float _777;
    float _778;
    float _779;
    float _783;
    vec4 _787;
    float _789;
    float _790;
    bool _801;
    for (;;)
    {
        _769 = cbInstanceData._m0[(_211 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _773 = (cbMtdParam._m0[0u].x * _684) * _769.x;
        float _774 = (cbMtdParam._m0[0u].y * _685) * _769.y;
        float _775 = (cbMtdParam._m0[0u].z * _686) * _769.z;
        float _1061 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
        _776 = isnan(1.0) ? _1061 : (isnan(_1061) ? 1.0 : min(_1061, 1.0));
        float _1072 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
        _777 = isnan(1.0) ? _1072 : (isnan(_1072) ? 1.0 : min(_1072, 1.0));
        float _1083 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
        _778 = isnan(1.0) ? _1083 : (isnan(_1083) ? 1.0 : min(_1083, 1.0));
        _779 = _683 * TEXCOORD_5.w;
        _783 = cbInstanceData._m0[_211 + 6u].w;
        float _784 = _747 + (-0.5);
        _787 = cbMtdParam._m0[1u];
        _789 = _787.y * _784;
        _790 = _784 * 0.999000012874603271484375;
        _801 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_801)
        {
            if ((cbInstanceData._m0[_211 + 7u].x + _790) < 0.5)
            {
                _845 = true;
                break;
            }
        }
        if ((_769.w < 1.0) && ((_769.w + _790) < 0.5))
        {
            _845 = true;
            break;
        }
        if ((_789 + 1.0) < _787.x)
        {
            _845 = true;
            break;
        }
        _845 = false;
        break;
    }
    if (_845)
    {
        discard_state = true;
    }
    bool _871 = cbMtdParam._m0[1u].z != 0.0;
    float _872 = _871 ? _783 : 0.0;
    SV_Target.x = ((_671 * 0.5) * _681) + 0.500488758087158203125;
    SV_Target.y = ((_674 * 0.5) * _681) + 0.500488758087158203125;
    SV_Target.z = ((_677 * 0.5) * _681) + 0.500488758087158203125;
    SV_Target.w = _872;
    SV_Target_1.x = isnan(1.0) ? _1028 : (isnan(_1028) ? 1.0 : min(_1028, 1.0));
    SV_Target_1.y = isnan(1.0) ? _973 : (isnan(_973) ? 1.0 : min(_973, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _871 ? _783 : _779;
    SV_Target_2.x = _776;
    SV_Target_2.y = _777;
    SV_Target_2.z = _778;
    SV_Target_2.w = _871 ? _783 : (float(floatBitsToUint(cbInstanceData._m0[_211 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _872;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _872;
    discard_exit();
}


