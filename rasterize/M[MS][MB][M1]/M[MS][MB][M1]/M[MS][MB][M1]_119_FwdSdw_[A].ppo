#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1385;
float _4049;
float _4050;
float _4051;
float _4052;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _238 = _237 * _229;
    float _239 = _237 * _230;
    float _240 = _237 * _231;
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = _244 * NORMAL.x;
    float _246 = _244 * NORMAL.y;
    float _247 = _244 * NORMAL.z;
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _252 = _251 * TANGENT.x;
    float _253 = _251 * TANGENT.y;
    float _254 = _251 * TANGENT.z;
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _262 = _257 + 1u;
    uint _266 = _257 + 2u;
    float _275 = sqrt(((cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x) + (cbInstanceData._m0[_257].x * cbInstanceData._m0[_257].x)) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x));
    float _276 = _275 * TEXCOORD.z;
    float _277 = _275 * TEXCOORD.w;
    vec4 _297 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _303 = _297.x * cbMtdParam._m0[11u].x;
    float _304 = _297.y * cbMtdParam._m0[11u].y;
    float _305 = _297.z * cbMtdParam._m0[11u].z;
    vec4 _324 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _276) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _277) + cbTextureTilingScale._m0[5u].w));
    vec4 _362 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _364 = _362.x;
    float _376 = dot(vec4(_364, _362.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _393 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_364 - _376) * cbMtdParam._m0[24u].y) + _376) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4061 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _394 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _401 = (_394 * ((_324.x * cbMtdParam._m0[12u].x) - _303)) + _303;
    float _402 = (_394 * ((_324.y * cbMtdParam._m0[12u].y) - _304)) + _304;
    float _403 = (_394 * ((_324.z * cbMtdParam._m0[12u].z) - _305)) + _305;
    vec4 _421 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _276) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _277) + cbTextureTilingScale._m0[4u].w));
    vec4 _438 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _440 = _438.x;
    float _441 = _438.y;
    float _442 = _438.z;
    float _451 = ((_421.z - _442) * _394) + _442;
    float _454 = ((((_421.x - _440) * _394) + _440) * 2.0) + (-1.0);
    float _456 = ((((_421.y - _441) * _394) + _441) * 2.0) + (-1.0);
    float _457 = dot(vec2(_454, _456), vec2(_454, _456));
    float _4072 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _462 = sqrt(1.0 - (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))));
    vec4 _478 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _490 = (((_478.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _454;
    float _491 = (((_478.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _456;
    float _494 = fma(_462, _245, fma(_491, _252, _490 * _238));
    float _497 = fma(_462, _246, fma(_491, _253, _490 * _239));
    float _500 = fma(_462, _247, fma(_491, _254, _490 * _240));
    float _504 = inversesqrt(dot(vec3(_494, _497, _500), vec3(_494, _497, _500)));
    vec4 _531 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _276) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _277) + cbTextureTilingScale._m0[11u].w));
    float _533 = _531.x;
    float _534 = 1.0 - _533;
    float _538 = ((_533 - _534) * cbMtdParam._m0[24u].z) + _534;
    float _540 = (cbMtdParam._m0[19u].x + dot(vec4(_504 * _494, _504 * _497, _504 * _500, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_538 * cbMtdParam._m0[21u].z);
    float _4083 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _541 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _543 = (-0.0) - cbMtdParam._m0[24u].x;
    float _545 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _546 = isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0));
    float _553 = _541 - ((_541 * TEXCOORD_8.x) * _546);
    float _554 = _541 - ((_541 * TEXCOORD_8.y) * _546);
    float _555 = _541 - ((_541 * TEXCOORD_8.z) * _546);
    float _562 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _566 = ((isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : min(_562, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _574 = (_566 - (((_538 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _566))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4114 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _575 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
    float _579 = ((_553 * (cbMtdParam._m0[17u].x - _401)) * _575) + _401;
    float _580 = ((_554 * (cbMtdParam._m0[17u].y - _402)) * _575) + _402;
    float _581 = ((_555 * (cbMtdParam._m0[17u].z - _403)) * _575) + _403;
    vec4 _593 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _276) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _277) + cbTextureTilingScale._m0[19u].w));
    float _595 = _593.x;
    float _596 = 1.0 - _595;
    float _623 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_595 - _596) * cbMtdParam._m0[24u].w) + _596) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4125 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _624 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
    float _632 = ((((cbMtdParam._m0[10u].x - _579) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _624) + _579;
    float _633 = ((((cbMtdParam._m0[10u].y - _580) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _624) + _580;
    float _634 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _581)) * _624) + _581;
    vec4 _660 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _662 = _660.x;
    float _680 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _276) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _277) + cbTextureTilingScale._m0[9u].w)).x - _662) * _394) + _662;
    float _684 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _680) * cbMtdParam._m0[19u].z) + _680;
    float _687 = _684 - ((_575 * _553) * _684);
    float _689 = _687 - (_687 * _624);
    float _693 = (cbMtdParam._m0[19u].w * (_478.z - _451)) + _451;
    vec4 _707 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _276) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _277) + cbTextureTilingScale._m0[15u].w));
    float _714 = (_707.x * 2.0) + (-1.0);
    float _715 = (_707.y * 2.0) + (-1.0);
    float _716 = dot(vec2(_714, _715), vec2(_714, _715));
    float _4136 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _725 = (((_707.z - _693) * _553) * _575) + _693;
    float _728 = ((cbMtdParam._m0[23u].y - _725) * _624) + _725;
    vec4 _747 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _276) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _277) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _753 = (_747.x * 2.0) + (-1.0);
    float _754 = (_747.y * 2.0) + (-1.0);
    float _755 = dot(vec2(_753, _754), vec2(_753, _754));
    float _4147 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _775 = (((cbMtdParam._m0[21u].x * _490) + ((_714 - _490) * _553)) * _575) + _490;
    float _776 = (((cbMtdParam._m0[21u].x * _491) + ((_715 - _491) * _554)) * _575) + _491;
    float _777 = (((sqrt(1.0 - (isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0)))) - _462) * _555) * _575) + _462;
    float _788 = (((_753 - _775) + (_775 * cbMtdParam._m0[22u].z)) * _624) + _775;
    float _789 = (((_754 - _776) + (_776 * cbMtdParam._m0[22u].z)) * _624) + _776;
    float _790 = ((sqrt(1.0 - (isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0)))) - _777) * _624) + _777;
    float _792 = cbMtdParam._m0[22u].x + _478.w;
    float _795 = fma(_790, _245, fma(_789, _252, _788 * _238));
    float _798 = fma(_790, _246, fma(_789, _253, _788 * _239));
    float _801 = fma(_790, _247, fma(_789, _254, _788 * _240));
    float _805 = inversesqrt(dot(vec3(_795, _798, _801), vec3(_795, _798, _801)));
    float _806 = _805 * _795;
    float _807 = _805 * _798;
    float _808 = _805 * _801;
    float _4158 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _809 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
    float _4169 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _4180 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _4191 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _4202 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
    float _4213 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _814 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
    float _828 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _868 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _878 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _868);
    float _879 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _868);
    float _880 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _868);
    float _884 = inversesqrt(dot(vec3(_878, _879, _880), vec3(_878, _879, _880)));
    float _885 = _878 * _884;
    float _886 = _879 * _884;
    float _887 = _880 * _884;
    vec4 _892 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _894 = _892.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1066 = sqrt(((_878 * _878) + (_879 * _879)) + (_880 * _880));
        float _1072 = (cbMatDynParam._m0[5u].x * _1066) + cbMatDynParam._m0[5u].y;
        float _4224 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1073 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
        float _1077 = (cbMatDynParam._m0[5u].z * _1066) + cbMatDynParam._m0[5u].w;
        float _4235 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0))) - _1073)) + _1073) < ((_894 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _905 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _906 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _924 = fma(_808, cbSceneParam._m0[5u].z, fma(_807, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _806));
    float _927 = fma(_808, cbSceneParam._m0[6u].z, fma(_807, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _806));
    float _930 = fma(_808, cbSceneParam._m0[7u].z, fma(_807, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _806));
    uint _943 = _257 + 9u;
    uint _944 = _943 + uint(cbMatDynParam._m0[0u].w);
    float _950 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0)))) * cbInstanceData._m0[_944].x;
    float _951 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0)))) * cbInstanceData._m0[_944].y;
    float _952 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0)))) * cbInstanceData._m0[_944].z;
    float _4246 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _953 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
    float _4257 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _954 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
    float _4268 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _955 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _956 = 1.0 - _814;
    float _957 = _953 * _956;
    float _958 = _954 * _956;
    float _959 = _955 * _956;
    float _964 = (_953 + (-0.039999999105930328369140625)) * _814;
    float _965 = (_954 + (-0.039999999105930328369140625)) * _814;
    float _966 = (_955 + (-0.039999999105930328369140625)) * _814;
    float _967 = _964 + 0.039999999105930328369140625;
    float _969 = _965 + 0.039999999105930328369140625;
    float _970 = _966 + 0.039999999105930328369140625;
    vec4 _979 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _905, cbSceneParam._m0[86u].y * _906));
    float _983 = ((isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0))) * TEXCOORD_5.w) * _979.x;
    float _984 = dot(vec3(_806, _807, _808), vec3(_885, _886, _887));
    float _987 = _984 * 2.0;
    float _991 = (_987 * _806) - _885;
    float _992 = (_987 * _807) - _886;
    float _993 = (_987 * _808) - _887;
    float _997 = abs(dot(vec3(_885, _886, _887), vec3(_806, _807, _808)));
    float _4279 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _999 = sqrt(_809);
    float _1012 = exp2((_999 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_999 * 3.0));
    float _1018 = (1.0 - _1012) * ((_999 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1019 = _1012 * _999;
    float _1047 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1051 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1055 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1384;
    float _1386;
    float _1387;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1109 = fma(_1055, cbModelParam._m0[26u].z, fma(_1051, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1047));
        float _1113 = fma(_1055, cbModelParam._m0[27u].z, fma(_1051, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1047));
        float _1117 = fma(_1055, cbModelParam._m0[28u].z, fma(_1051, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1047));
        float _1142 = _1047 + _806;
        float _1143 = _1051 + _807;
        float _1144 = _1055 + _808;
        float _1154 = fma(_1144, cbModelParam._m0[26u].z, fma(_1143, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1142)) - _1109;
        float _1155 = fma(_1144, cbModelParam._m0[27u].z, fma(_1143, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1142)) - _1113;
        float _1156 = fma(_1144, cbModelParam._m0[28u].z, fma(_1143, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1142)) - _1117;
        float _1160 = inversesqrt(dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156)));
        float _1173 = ((_1160 * _1154) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1109 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1174 = ((_1160 * _1155) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1113 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1175 = ((_1160 * _1156) / cbModelParam._m0[34u].z) + ((((((_1117 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1178 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        float _1212 = exp2((_1178.w + (-0.5)) * 20.0) * 2.0;
        float _1213 = _1212 * (_1178.x + (-0.5));
        float _1214 = _1212 * (_1178.y + (-0.5));
        float _1215 = _1212 * (_1178.z + (-0.5));
        float _1222 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1223 = _1222 * (_1185.x + (-0.5));
        float _1224 = _1222 * (_1185.y + (-0.5));
        float _1225 = _1222 * (_1185.z + (-0.5));
        float _1232 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1233 = _1232 * (_1192.x + (-0.5));
        float _1234 = _1232 * (_1192.y + (-0.5));
        float _1235 = _1232 * (_1192.z + (-0.5));
        float _1242 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1243 = _1242 * (_1199.x + (-0.5));
        float _1244 = _1242 * (_1199.y + (-0.5));
        float _1245 = _1242 * (_1199.z + (-0.5));
        float _1246 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1247 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1248 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1249 = _1213 * 0.5;
        float _1250 = _1223 * 0.5;
        float _1251 = _1233 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1266 = (dot(vec3(_806, _807, _808), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _4305 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1276 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1246 + 9.9999997473787516355514526367188e-06);
        float _4316 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
        float _1278 = _1277 * 2.0;
        float _1282 = (1.0 - _1277) / (_1277 + 1.0);
        float _4327 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1283 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1292 = ((((1.0 - _1283) * (_1278 + 2.0)) * exp2(log2(isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0))) * (_1278 + 1.0))) + _1283) * _1246;
        float _1293 = _1214 * 0.5;
        float _1294 = _1224 * 0.5;
        float _1295 = _1234 * 0.5;
        float _1296 = dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295));
        float _1301 = (_1296 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1296);
        float _1309 = (dot(vec3(_806, _807, _808), vec3(_1301 * _1293, _1301 * _1294, _1301 * _1295)) + 1.0) * 0.5;
        float _4338 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1318 = sqrt(((_1294 * _1294) + (_1293 * _1293)) + (_1295 * _1295)) / (_1247 + 9.9999997473787516355514526367188e-06);
        float _4349 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1320 = _1319 * 2.0;
        float _1324 = (1.0 - _1319) / (_1319 + 1.0);
        float _4360 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1325 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1334 = ((((1.0 - _1325) * (_1320 + 2.0)) * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (_1320 + 1.0))) + _1325) * _1247;
        float _1335 = _1215 * 0.5;
        float _1336 = _1225 * 0.5;
        float _1337 = _1235 * 0.5;
        float _1338 = dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337));
        float _1343 = (_1338 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1338);
        float _1351 = (dot(vec3(_806, _807, _808), vec3(_1343 * _1335, _1343 * _1336, _1343 * _1337)) + 1.0) * 0.5;
        float _4371 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1360 = sqrt(((_1336 * _1336) + (_1335 * _1335)) + (_1337 * _1337)) / (_1248 + 9.9999997473787516355514526367188e-06);
        float _4382 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1362 = _1361 * 2.0;
        float _1366 = (1.0 - _1361) / (_1361 + 1.0);
        float _4393 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1376 = ((((1.0 - _1367) * (_1362 + 2.0)) * exp2(log2(isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (_1362 + 1.0))) + _1367) * _1248;
        _1384 = _1215;
        _1386 = _1214;
        _1387 = _1213;
        _1388 = _1225;
        _1389 = _1224;
        _1390 = _1223;
        _1391 = _1235;
        _1392 = _1234;
        _1393 = _1233;
        _1394 = _1248;
        _1395 = _1247;
        _1396 = _1246;
        _1397 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0)));
        _1398 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0)));
        _1399 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
    }
    else
    {
        _1384 = _1385;
        _1386 = _1385;
        _1387 = _1385;
        _1388 = _1385;
        _1389 = _1385;
        _1390 = _1385;
        _1391 = _1385;
        _1392 = _1385;
        _1393 = _1385;
        _1394 = _1385;
        _1395 = _1385;
        _1396 = _1385;
        _1397 = 0.0;
        _1398 = 0.0;
        _1399 = 0.0;
    }
    float _1696;
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1427 = fma(_1055, cbModelParam._m0[30u].z, fma(_1051, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1047));
        float _1431 = fma(_1055, cbModelParam._m0[31u].z, fma(_1051, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1047));
        float _1435 = fma(_1055, cbModelParam._m0[32u].z, fma(_1051, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1047));
        float _1458 = _1047 + _806;
        float _1459 = _1051 + _807;
        float _1460 = _1055 + _808;
        float _1470 = fma(_1460, cbModelParam._m0[30u].z, fma(_1459, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1458)) - _1427;
        float _1471 = fma(_1460, cbModelParam._m0[31u].z, fma(_1459, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1458)) - _1431;
        float _1472 = fma(_1460, cbModelParam._m0[32u].z, fma(_1459, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1458)) - _1435;
        float _1476 = inversesqrt(dot(vec3(_1470, _1471, _1472), vec3(_1470, _1471, _1472)));
        float _1489 = ((_1476 * _1470) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1427 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1490 = ((_1476 * _1471) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1431 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1491 = ((_1476 * _1472) / cbModelParam._m0[35u].z) + ((((((_1435 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1493 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1489, _1490, _1491), 0.0);
        vec4 _1500 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1489, _1490, _1491), 0.0);
        vec4 _1507 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1489, _1490, _1491), 0.0);
        vec4 _1514 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1489, _1490, _1491), 0.0);
        float _1526 = exp2((_1493.w + (-0.5)) * 20.0) * 2.0;
        float _1527 = _1526 * (_1493.x + (-0.5));
        float _1528 = _1526 * (_1493.y + (-0.5));
        float _1529 = _1526 * (_1493.z + (-0.5));
        float _1536 = exp2((_1500.w + (-0.5)) * 20.0) * 2.0;
        float _1537 = _1536 * (_1500.x + (-0.5));
        float _1538 = _1536 * (_1500.y + (-0.5));
        float _1539 = _1536 * (_1500.z + (-0.5));
        float _1546 = exp2((_1507.w + (-0.5)) * 20.0) * 2.0;
        float _1547 = _1546 * (_1507.x + (-0.5));
        float _1548 = _1546 * (_1507.y + (-0.5));
        float _1549 = _1546 * (_1507.z + (-0.5));
        float _1556 = exp2((_1514.w + (-0.5)) * 20.0) * 2.0;
        float _1557 = _1556 * (_1514.x + (-0.5));
        float _1558 = _1556 * (_1514.y + (-0.5));
        float _1559 = _1556 * (_1514.z + (-0.5));
        float _1560 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1561 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1562 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1563 = _1527 * 0.5;
        float _1564 = _1537 * 0.5;
        float _1565 = _1547 * 0.5;
        float _1566 = dot(vec3(_1563, _1564, _1565), vec3(_1563, _1564, _1565));
        float _1571 = (_1566 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1566);
        float _1579 = (dot(vec3(_806, _807, _808), vec3(_1571 * _1563, _1571 * _1564, _1571 * _1565)) + 1.0) * 0.5;
        float _4434 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
        float _1588 = sqrt(((_1564 * _1564) + (_1563 * _1563)) + (_1565 * _1565)) / (_1560 + 9.9999997473787516355514526367188e-06);
        float _4445 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1589 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
        float _1590 = _1589 * 2.0;
        float _1594 = (1.0 - _1589) / (_1589 + 1.0);
        float _4456 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1595 = isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0));
        float _1604 = ((((1.0 - _1595) * (_1590 + 2.0)) * exp2(log2(isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0))) * (_1590 + 1.0))) + _1595) * _1560;
        float _1605 = _1528 * 0.5;
        float _1606 = _1538 * 0.5;
        float _1607 = _1548 * 0.5;
        float _1608 = dot(vec3(_1605, _1606, _1607), vec3(_1605, _1606, _1607));
        float _1613 = (_1608 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1608);
        float _1621 = (dot(vec3(_806, _807, _808), vec3(_1613 * _1605, _1613 * _1606, _1613 * _1607)) + 1.0) * 0.5;
        float _4467 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
        float _1630 = sqrt(((_1606 * _1606) + (_1605 * _1605)) + (_1607 * _1607)) / (_1561 + 9.9999997473787516355514526367188e-06);
        float _4478 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1631 = isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0));
        float _1632 = _1631 * 2.0;
        float _1636 = (1.0 - _1631) / (_1631 + 1.0);
        float _4489 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1637 = isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0));
        float _1646 = ((((1.0 - _1637) * (_1632 + 2.0)) * exp2(log2(isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0))) * (_1632 + 1.0))) + _1637) * _1561;
        float _1647 = _1529 * 0.5;
        float _1648 = _1539 * 0.5;
        float _1649 = _1549 * 0.5;
        float _1650 = dot(vec3(_1647, _1648, _1649), vec3(_1647, _1648, _1649));
        float _1655 = (_1650 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1650);
        float _1663 = (dot(vec3(_806, _807, _808), vec3(_1655 * _1647, _1655 * _1648, _1655 * _1649)) + 1.0) * 0.5;
        float _4500 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1672 = sqrt(((_1648 * _1648) + (_1647 * _1647)) + (_1649 * _1649)) / (_1562 + 9.9999997473787516355514526367188e-06);
        float _4511 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1673 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _1674 = _1673 * 2.0;
        float _1678 = (1.0 - _1673) / (_1673 + 1.0);
        float _4522 = isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0));
        float _1679 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _1688 = ((((1.0 - _1679) * (_1674 + 2.0)) * exp2(log2(isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0))) * (_1674 + 1.0))) + _1679) * _1562;
        _1696 = _1529;
        _1697 = _1528;
        _1698 = _1527;
        _1699 = _1539;
        _1700 = _1538;
        _1701 = _1537;
        _1702 = _1549;
        _1703 = _1548;
        _1704 = _1547;
        _1705 = _1562;
        _1706 = _1561;
        _1707 = _1560;
        _1708 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)));
        _1709 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)));
        _1710 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)));
    }
    else
    {
        _1696 = _1385;
        _1697 = _1385;
        _1698 = _1385;
        _1699 = _1385;
        _1700 = _1385;
        _1701 = _1385;
        _1702 = _1385;
        _1703 = _1385;
        _1704 = _1385;
        _1705 = _1385;
        _1706 = _1385;
        _1707 = _1385;
        _1708 = 0.0;
        _1709 = 0.0;
        _1710 = 0.0;
    }
    float _1720 = (cbModelParam._m0[1u].x * (_1708 - _1397)) + _1397;
    float _1721 = (cbModelParam._m0[1u].x * (_1709 - _1398)) + _1398;
    float _1722 = (cbModelParam._m0[1u].x * (_1710 - _1399)) + _1399;
    float _1743 = fma(_1722, cbSceneParam._m0[89u].z, fma(_1721, cbSceneParam._m0[89u].y, _1720 * cbSceneParam._m0[89u].x));
    float _1746 = fma(_1722, cbSceneParam._m0[90u].z, fma(_1721, cbSceneParam._m0[90u].y, _1720 * cbSceneParam._m0[90u].x));
    float _1749 = fma(_1722, cbSceneParam._m0[91u].z, fma(_1721, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1720));
    float _1764 = _991 * 0.5;
    float _1765 = _992 * 0.5;
    float _1766 = _993 * 0.5;
    float _1767 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1698, _1701, _1704, _1707));
    float _1770 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1697, _1700, _1703, _1706));
    float _1773 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1696, _1699, _1702, _1705));
    float _1807;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1780 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1384, _1388, _1391, _1394));
        float _1784 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1386, _1389, _1392, _1395));
        float _1788 = dot(vec4(_1764, _1765, _1766, 1.0), vec4(_1387, _1390, _1393, _1396));
        float _1795 = dot(vec4(cbModelParam._m0[39u]), vec4(_1764, _1765, _1766, 1.0));
        _1807 = dot(vec3(isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0)), isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0)), isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1795) ? 0.0 : (isnan(0.0) ? _1795 : max(0.0, _1795))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1807 = 1.0;
    }
    float _1818;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1809 = dot(vec4(cbModelParam._m0[40u]), vec4(_1764, _1765, _1766, 1.0));
        _1818 = dot(vec3(isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)), isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)), isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1809) ? 0.0 : (isnan(0.0) ? _1809 : max(0.0, _1809))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1818 = 1.0;
    }
    float _1822 = (_1818 * cbModelParam._m0[1u].x) + (_1807 * (1.0 - cbModelParam._m0[1u].x));
    float _1832 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _809);
    float _1833 = isnan(_1832) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1832 : min(cbModelParam._m0[25u].z, _1832));
    float _1914;
    float _1916;
    float _1918;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1881 = fma(_1055, cbModelParam._m0[13u].z, fma(_1051, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1047)) + cbModelParam._m0[13u].w;
        float _1885 = fma(_1055, cbModelParam._m0[14u].z, fma(_1051, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1047)) + cbModelParam._m0[14u].w;
        float _1889 = fma(_1055, cbModelParam._m0[15u].z, fma(_1051, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1047)) + cbModelParam._m0[15u].w;
        float _1892 = fma(_993, cbModelParam._m0[13u].z, fma(_992, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _991));
        float _1895 = fma(_993, cbModelParam._m0[14u].z, fma(_992, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _991));
        float _1898 = fma(_993, cbModelParam._m0[15u].z, fma(_992, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _991));
        float _1926;
        if (_1892 > 0.0)
        {
            _1926 = abs((1.0 - _1881) / _1892);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1892 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1881 + 1.0) / _1892);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1926 = frontier_phi_17_15_ladder;
        }
        float _2098;
        if (_1895 > 0.0)
        {
            _2098 = abs((1.0 - _1885) / _1895);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1895 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1885 + 1.0) / _1895);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2098 = frontier_phi_26_22_ladder;
        }
        float _2393;
        if (_1898 > 0.0)
        {
            _2393 = abs((1.0 - _1889) / _1898);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1889 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2393 = frontier_phi_38_33_ladder;
        }
        float _2395 = isnan(_2098) ? _1926 : (isnan(_1926) ? _2098 : min(_1926, _2098));
        float _2396 = isnan(_2393) ? _2395 : (isnan(_2395) ? _2393 : min(_2395, _2393));
        float _2400 = (_2396 * _1892) + _1881;
        float _2401 = (_2396 * _1895) + _1885;
        float _2402 = (_2396 * _1898) + _1889;
        float _2403 = _2396 * 9.9999997473787516355514526367188e-05;
        float _2405 = (-1.0) - _2403;
        float _2407 = _2403 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2402 > _2407) || ((_2402 < _2405) || ((_2401 > _2407) || ((_2401 < _2405) || ((_2400 < _2405) || (_2400 > _2407))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2547 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2402, cbModelParam._m0[9u].z, fma(_2401, cbModelParam._m0[9u].y, _2400 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2402, cbModelParam._m0[10u].z, fma(_2401, cbModelParam._m0[10u].y, _2400 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2402, cbModelParam._m0[11u].z, fma(_2401, cbModelParam._m0[11u].y, _2400 * cbModelParam._m0[11u].x))), _1833);
            frontier_phi_16_38_ladder = _2547.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2547.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2547.x * cbModelParam._m0[1u].y;
        }
        _1914 = frontier_phi_16_38_ladder_2;
        _1916 = frontier_phi_16_38_ladder_1;
        _1918 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1902 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_991, _992, _993), _1833);
        _1914 = _1902.x * cbModelParam._m0[1u].y;
        _1916 = _1902.y * cbModelParam._m0[1u].y;
        _1918 = _1902.z * cbModelParam._m0[1u].y;
    }
    float _1922 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _809);
    float _1923 = isnan(_1922) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1922 : min(cbModelParam._m0[25u].w, _1922));
    float _2013;
    float _2015;
    float _2017;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1977 = fma(_1055, cbModelParam._m0[21u].z, fma(_1051, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1047)) + cbModelParam._m0[21u].w;
        float _1981 = fma(_1055, cbModelParam._m0[22u].z, fma(_1051, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1047)) + cbModelParam._m0[22u].w;
        float _1985 = fma(_1055, cbModelParam._m0[23u].z, fma(_1051, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1047)) + cbModelParam._m0[23u].w;
        float _1988 = fma(_993, cbModelParam._m0[21u].z, fma(_992, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _991));
        float _1991 = fma(_993, cbModelParam._m0[22u].z, fma(_992, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _991));
        float _1994 = fma(_993, cbModelParam._m0[23u].z, fma(_992, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _991));
        float _2103;
        if (_1988 > 0.0)
        {
            _2103 = abs((1.0 - _1977) / _1988);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1988 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1977 + 1.0) / _1988);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2103 = frontier_phi_28_24_ladder;
        }
        float _2420;
        if (_1991 > 0.0)
        {
            _2420 = abs((1.0 - _1981) / _1991);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1991 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1981 + 1.0) / _1991);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2420 = frontier_phi_40_35_ladder;
        }
        float _2758;
        if (_1994 > 0.0)
        {
            _2758 = abs((1.0 - _1985) / _1994);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1994 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1985 + 1.0) / _1994);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2758 = frontier_phi_50_47_ladder;
        }
        float _2760 = isnan(_2420) ? _2103 : (isnan(_2103) ? _2420 : min(_2103, _2420));
        float _2761 = isnan(_2758) ? _2760 : (isnan(_2760) ? _2758 : min(_2760, _2758));
        float _2765 = (_2761 * _1988) + _1977;
        float _2766 = (_2761 * _1991) + _1981;
        float _2767 = (_2761 * _1994) + _1985;
        float _2768 = _2761 * 9.9999997473787516355514526367188e-05;
        float _2769 = (-1.0) - _2768;
        float _2771 = _2768 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2767 > _2771) || ((_2767 < _2769) || ((_2766 > _2771) || ((_2766 < _2769) || ((_2765 < _2769) || (_2765 > _2771))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2889 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2767, cbModelParam._m0[17u].z, fma(_2766, cbModelParam._m0[17u].y, _2765 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2767, cbModelParam._m0[18u].z, fma(_2766, cbModelParam._m0[18u].y, _2765 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2767, cbModelParam._m0[19u].z, fma(_2766, cbModelParam._m0[19u].y, _2765 * cbModelParam._m0[19u].x))), _1923);
            frontier_phi_25_50_ladder = _2889.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2889.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2889.x * cbModelParam._m0[1u].z;
        }
        _2013 = frontier_phi_25_50_ladder_2;
        _2015 = frontier_phi_25_50_ladder_1;
        _2017 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1997 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_991, _992, _993), _1923);
        _2013 = _1997.x * cbModelParam._m0[1u].z;
        _2015 = _1997.y * cbModelParam._m0[1u].z;
        _2017 = _1997.z * cbModelParam._m0[1u].z;
    }
    float _2030 = (((_1018 * _967) + _1019) * _983) * ((cbModelParam._m0[1u].w * (_2013 - _1914)) + _1914);
    float _2032 = (((_1018 * _969) + _1019) * _983) * ((cbModelParam._m0[1u].w * (_2015 - _1916)) + _1916);
    float _2034 = (((_1018 * _970) + _1019) * _983) * ((cbModelParam._m0[1u].w * (_2017 - _1918)) + _1918);
    float _2037 = fma(_2034, cbSceneParam._m0[89u].z, fma(_2032, cbSceneParam._m0[89u].y, _2030 * cbSceneParam._m0[89u].x));
    float _2040 = fma(_2034, cbSceneParam._m0[90u].z, fma(_2032, cbSceneParam._m0[90u].y, _2030 * cbSceneParam._m0[90u].x));
    float _2043 = fma(_2034, cbSceneParam._m0[91u].z, fma(_2032, cbSceneParam._m0[91u].y, _2030 * cbSceneParam._m0[91u].x));
    float _2077 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2081 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2085 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2089 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2090 = _2077 / _2089;
    float _2091 = _2081 / _2089;
    float _2092 = _2085 / _2089;
    float _2239;
    float _2240;
    float _2241;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2119 = ((uint(_2092 > cbSceneParam._m0[59u].y) + uint(_2092 > cbSceneParam._m0[59u].x)) + uint(_2092 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2120 = _2119 + 43u;
        uint _2128 = _2119 + 44u;
        uint _2136 = _2119 + 45u;
        uint _2144 = _2119 + 46u;
        float _2155 = fma(_2089, cbSceneParam._m0[_2120].w, fma(_2085, cbSceneParam._m0[_2120].z, fma(_2081, cbSceneParam._m0[_2120].y, _2077 * cbSceneParam._m0[_2120].x)));
        float _2159 = fma(_2089, cbSceneParam._m0[_2128].w, fma(_2085, cbSceneParam._m0[_2128].z, fma(_2081, cbSceneParam._m0[_2128].y, _2077 * cbSceneParam._m0[_2128].x)));
        float _2167 = fma(_2089, cbSceneParam._m0[_2144].w, fma(_2085, cbSceneParam._m0[_2144].z, fma(_2081, cbSceneParam._m0[_2144].y, _2077 * cbSceneParam._m0[_2144].x)));
        float _2172 = cbSceneParam._m0[33u].z * _2167;
        float _2174 = cbSceneParam._m0[33u].w * _2167;
        float _2177 = fma(_2089, cbSceneParam._m0[_2136].w, fma(_2085, cbSceneParam._m0[_2136].z, fma(_2081, cbSceneParam._m0[_2136].y, _2077 * cbSceneParam._m0[_2136].x))) / _2167;
        float _2225 = (cbSceneParam._m0[33u].x - sqrt(((_2091 * _2091) + (_2090 * _2090)) + (_2092 * _2092))) * cbSceneParam._m0[33u].y;
        float _4648 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
        float _2232 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2172 + _2155) / _2167, (_2174 + _2159) / _2167), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2174 + _2155) / _2167, (_2159 - _2172) / _2167), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2155 - _2172) / _2167, (_2159 - _2174) / _2167), _2177), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2155 - _2174) / _2167, (_2172 + _2159) / _2167), _2177), 0.0)).x), vec4(0.25)));
        _2239 = 1.0 - (_2232 * cbSceneParam._m0[34u].x);
        _2240 = 1.0 - (_2232 * cbSceneParam._m0[34u].y);
        _2241 = 1.0 - (_2232 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2239 = 1.0;
        _2240 = 1.0;
        _2241 = 1.0;
    }
    float _2305;
    float _2307;
    float _2309;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2293 = fma(_2089, cbSceneParam._m0[63u].w, fma(_2085, cbSceneParam._m0[63u].z, fma(_2081, cbSceneParam._m0[63u].y, _2077 * cbSceneParam._m0[63u].x)));
        float _2294 = fma(_2089, cbSceneParam._m0[60u].w, fma(_2085, cbSceneParam._m0[60u].z, fma(_2081, cbSceneParam._m0[60u].y, _2077 * cbSceneParam._m0[60u].x))) / _2293;
        float _2295 = fma(_2089, cbSceneParam._m0[61u].w, fma(_2085, cbSceneParam._m0[61u].z, fma(_2081, cbSceneParam._m0[61u].y, _2077 * cbSceneParam._m0[61u].x))) / _2293;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2294 >= cbSceneParam._m0[64u].x) && (_2295 >= cbSceneParam._m0[64u].y)) && (_2294 <= cbSceneParam._m0[64u].z)) && (_2295 <= cbSceneParam._m0[64u].w))
        {
            float _2433 = fma(_2089, cbSceneParam._m0[62u].w, fma(_2085, cbSceneParam._m0[62u].z, fma(_2081, cbSceneParam._m0[62u].y, _2077 * cbSceneParam._m0[62u].x))) / _2293;
            float _2437 = isnan(cbSceneParam._m0[41u].w) ? _2433 : (isnan(_2433) ? cbSceneParam._m0[41u].w : max(_2433, cbSceneParam._m0[41u].w));
            float _2480 = (cbSceneParam._m0[33u].x - sqrt(((_2091 * _2091) + (_2090 * _2090)) + (_2092 * _2092))) * cbSceneParam._m0[33u].y;
            float _4664 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
            float _2487 = (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2294, cbSceneParam._m0[33u].w + _2295), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2294, _2295 - cbSceneParam._m0[33u].z), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2294 - cbSceneParam._m0[33u].z, _2295 - cbSceneParam._m0[33u].w), _2437), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2294 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2295), _2437), 0.0)).x), vec4(0.25)));
            float _2491 = 1.0 - (_2487 * cbSceneParam._m0[34u].x);
            float _2492 = 1.0 - (_2487 * cbSceneParam._m0[34u].y);
            float _2493 = 1.0 - (_2487 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2493) ? _2241 : (isnan(_2241) ? _2493 : min(_2241, _2493));
            frontier_phi_37_36_ladder_1 = isnan(_2492) ? _2240 : (isnan(_2240) ? _2492 : min(_2240, _2492));
            frontier_phi_37_36_ladder_2 = isnan(_2491) ? _2239 : (isnan(_2239) ? _2491 : min(_2239, _2491));
        }
        else
        {
            frontier_phi_37_36_ladder = _2241;
            frontier_phi_37_36_ladder_1 = _2240;
            frontier_phi_37_36_ladder_2 = _2239;
        }
        _2305 = frontier_phi_37_36_ladder_2;
        _2307 = frontier_phi_37_36_ladder_1;
        _2309 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2305 = _2239;
        _2307 = _2240;
        _2309 = _2241;
    }
    uvec4 _2314 = floatBitsToUint(cbInstanceData._m0[_257 + 5u]);
    uint _2316 = _2314.x * 14u;
    uint _2317 = _2316 + 13u;
    float _2324 = _983 + (-1.0);
    float _2329 = (cbLight._m0[_2317].x * _2324) + 1.0;
    float _2330 = (cbLight._m0[_2317].y * _2324) + 1.0;
    float _2331 = (cbLight._m0[_2317].z * _2324) + 1.0;
    float _2332 = (cbLight._m0[_2317].w * _2324) + 1.0;
    uint _2333 = _2316 + 5u;
    float _2339 = isnan(1.0) ? _2330 : (isnan(_2330) ? 1.0 : min(_2330, 1.0));
    uint _2343 = _2316 + 4u;
    float _2352 = isnan(1.0) ? _2329 : (isnan(_2329) ? 1.0 : min(_2329, 1.0));
    uint _2356 = _2316 | 1u;
    float _2367 = dot(vec3(cbLight._m0[_2316].xyz), vec3(_806, _807, _808));
    float _2370 = dot(vec3(cbLight._m0[_2356].xyz), vec3(_806, _807, _808));
    float _4700 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
    float _4711 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
    float _2375 = (isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0))) * 0.3183098733425140380859375;
    float _2377 = (isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0))) * 0.3183098733425140380859375;
    float _2384 = ((cbLight._m0[_2333].x * _2339) * _2377) + (((cbLight._m0[_2343].x * _2305) * _2352) * _2375);
    float _2385 = ((_2339 * cbLight._m0[_2333].y) * _2377) + (((cbLight._m0[_2343].y * _2307) * _2352) * _2375);
    float _2386 = ((_2339 * cbLight._m0[_2333].z) * _2377) + (((cbLight._m0[_2343].z * _2309) * _2352) * _2375);
    uvec4 _2390 = floatBitsToUint(cbLight._m0[_2316 + 12u]);
    bool _2392 = _2390.x == 0u;
    float _2494;
    float _2496;
    float _2498;
    if (_2392)
    {
        _2494 = _2384;
        _2496 = _2385;
        _2498 = _2386;
    }
    else
    {
        uint _2502 = _2316 + 6u;
        float _2518 = (dot(vec3(cbLight._m0[_2316 + 2u].xyz), vec3(_806, _807, _808)) * 0.5) + 0.5;
        float _2519 = _2518 * _2518;
        float _4722 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
        float _2520 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2521 = isnan(1.0) ? _2331 : (isnan(_2331) ? 1.0 : min(_2331, 1.0));
        _2494 = (((cbLight._m0[_2502].x * 0.3183098733425140380859375) * _2520) * _2521) + _2384;
        _2496 = (((cbLight._m0[_2502].y * 0.3183098733425140380859375) * _2520) * _2521) + _2385;
        _2498 = (((cbLight._m0[_2502].z * 0.3183098733425140380859375) * _2520) * _2521) + _2386;
    }
    bool _2501 = _2390.y == 0u;
    float _2556;
    float _2558;
    float _2560;
    if (_2501)
    {
        _2556 = _2494;
        _2558 = _2496;
        _2560 = _2498;
    }
    else
    {
        uint _2729 = _2316 + 7u;
        float _2745 = (dot(vec3(cbLight._m0[_2316 + 3u].xyz), vec3(_806, _807, _808)) * 0.5) + 0.5;
        float _2746 = _2745 * _2745;
        float _4738 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
        float _2747 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
        float _2748 = isnan(1.0) ? _2332 : (isnan(_2332) ? 1.0 : min(_2332, 1.0));
        _2556 = (((cbLight._m0[_2729].x * 0.3183098733425140380859375) * _2747) * _2748) + _2494;
        _2558 = (((cbLight._m0[_2729].y * 0.3183098733425140380859375) * _2747) * _2748) + _2496;
        _2560 = (((cbLight._m0[_2729].z * 0.3183098733425140380859375) * _2747) * _2748) + _2498;
    }
    uint _2563 = _2316 + 8u;
    float _2576 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2316].w)) * _809) * 0.949999988079071044921875);
    float _2577 = _2576 * _2576;
    float _2578 = cbLight._m0[_2316].x + _885;
    float _2579 = cbLight._m0[_2316].y + _886;
    float _2580 = cbLight._m0[_2316].z + _887;
    float _2584 = inversesqrt(dot(vec3(_2578, _2579, _2580), vec3(_2578, _2579, _2580)));
    float _2585 = _2584 * _2578;
    float _2586 = _2584 * _2579;
    float _2587 = _2584 * _2580;
    float _2588 = dot(vec3(_806, _807, _808), vec3(cbLight._m0[_2316].xyz));
    float _4754 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2591 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
    float _4765 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _2592 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
    float _2593 = dot(vec3(_806, _807, _808), vec3(_2585, _2586, _2587));
    float _4776 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2596 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
    float _2597 = dot(vec3(cbLight._m0[_2316].xyz), vec3(_2585, _2586, _2587));
    float _4787 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
    float _2601 = _2577 * _2577;
    float _2605 = ((_2596 * _2596) * (_2601 + (-1.0))) + 1.0;
    float _2613 = exp2(log2(1.0 - (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0)))) * 5.0);
    float _2614 = 0.959999978542327880859375 - _964;
    float _2616 = 0.959999978542327880859375 - _965;
    float _2617 = 0.959999978542327880859375 - _966;
    float _2624 = 1.0 - _2577;
    float _2635 = (0.5 / (((_2592 * ((_2591 * _2624) + _2577)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2624) + _2577) * _2591))) * _2591;
    float _4798 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2637 = (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0))) * (_2601 / ((_2605 * _2605) * 3.141590118408203125));
    uint _2651 = _2316 + 9u;
    float _2662 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2356].w)) * _809) * 0.949999988079071044921875);
    float _2663 = _2662 * _2662;
    float _2664 = cbLight._m0[_2356].x + _885;
    float _2665 = cbLight._m0[_2356].y + _886;
    float _2666 = cbLight._m0[_2356].z + _887;
    float _2670 = inversesqrt(dot(vec3(_2664, _2665, _2666), vec3(_2664, _2665, _2666)));
    float _2671 = _2670 * _2664;
    float _2672 = _2670 * _2665;
    float _2673 = _2670 * _2666;
    float _2674 = dot(vec3(_806, _807, _808), vec3(cbLight._m0[_2356].xyz));
    float _4809 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
    float _2677 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
    float _2678 = dot(vec3(_806, _807, _808), vec3(_2671, _2672, _2673));
    float _4820 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
    float _2681 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
    float _2682 = dot(vec3(cbLight._m0[_2356].xyz), vec3(_2671, _2672, _2673));
    float _4831 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
    float _2686 = _2663 * _2663;
    float _2690 = ((_2681 * _2681) * (_2686 + (-1.0))) + 1.0;
    float _2697 = exp2(log2(1.0 - (isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0)))) * 5.0);
    float _2704 = 1.0 - _2663;
    float _2714 = (0.5 / (((_2592 * ((_2677 * _2704) + _2663)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2704) + _2663) * _2677))) * _2677;
    float _4842 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
    float _2716 = (isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0))) * (_2686 / ((_2690 * _2690) * 3.141590118408203125));
    float _2726 = (((((_2697 * _2614) + _967) * cbLight._m0[_2651].x) * _2716) * _2339) + ((((cbLight._m0[_2563].x * _2305) * ((_2613 * _2614) + _967)) * _2637) * _2352);
    float _2727 = (((((_2697 * _2616) + _969) * cbLight._m0[_2651].y) * _2716) * _2339) + ((((cbLight._m0[_2563].y * _2307) * ((_2613 * _2616) + _969)) * _2637) * _2352);
    float _2728 = (((((_2697 * _2617) + _970) * cbLight._m0[_2651].z) * _2716) * _2339) + ((((cbLight._m0[_2563].z * _2309) * ((_2613 * _2617) + _970)) * _2637) * _2352);
    float _2784;
    float _2786;
    float _2788;
    if (_2392)
    {
        _2784 = _2726;
        _2786 = _2727;
        _2788 = _2728;
    }
    else
    {
        uint _2790 = _2316 + 2u;
        uint _2794 = _2316 + 10u;
        float _2808 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2790].w)) * _809) * 0.949999988079071044921875);
        float _2809 = _2808 * _2808;
        float _2810 = cbLight._m0[_2790].x + _885;
        float _2811 = cbLight._m0[_2790].y + _886;
        float _2812 = cbLight._m0[_2790].z + _887;
        float _2816 = inversesqrt(dot(vec3(_2810, _2811, _2812), vec3(_2810, _2811, _2812)));
        float _2817 = _2816 * _2810;
        float _2818 = _2816 * _2811;
        float _2819 = _2816 * _2812;
        float _2820 = dot(vec3(_806, _807, _808), vec3(cbLight._m0[_2790].xyz));
        float _4853 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        float _2823 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
        float _2824 = dot(vec3(_806, _807, _808), vec3(_2817, _2818, _2819));
        float _4864 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        float _2827 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
        float _2828 = dot(vec3(cbLight._m0[_2790].xyz), vec3(_2817, _2818, _2819));
        float _4875 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        float _2832 = _2809 * _2809;
        float _2836 = ((_2827 * _2827) * (_2832 + (-1.0))) + 1.0;
        float _2843 = exp2(log2(1.0 - (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) * 5.0);
        float _2850 = 1.0 - _2809;
        float _2860 = (0.5 / (((_2592 * ((_2823 * _2850) + _2809)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2850) + _2809) * _2823))) * _2823;
        float _4886 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2862 = (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0))) * (_2832 / ((_2836 * _2836) * 3.141590118408203125));
        float _2863 = isnan(1.0) ? _2331 : (isnan(_2331) ? 1.0 : min(_2331, 1.0));
        _2784 = (((((_2843 * _2614) + _967) * cbLight._m0[_2794].x) * _2862) * _2863) + _2726;
        _2786 = (((((_2843 * _2616) + _969) * cbLight._m0[_2794].y) * _2862) * _2863) + _2727;
        _2788 = (((((_2843 * _2617) + _970) * cbLight._m0[_2794].z) * _2862) * _2863) + _2728;
    }
    float _2894;
    float _2896;
    float _2898;
    if (_2501)
    {
        _2894 = _2784;
        _2896 = _2786;
        _2898 = _2788;
    }
    else
    {
        uint _2905 = _2316 + 3u;
        uint _2909 = _2316 + 11u;
        float _2923 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2905].w)) * _809) * 0.949999988079071044921875);
        float _2924 = _2923 * _2923;
        float _2925 = cbLight._m0[_2905].x + _885;
        float _2926 = cbLight._m0[_2905].y + _886;
        float _2927 = cbLight._m0[_2905].z + _887;
        float _2931 = inversesqrt(dot(vec3(_2925, _2926, _2927), vec3(_2925, _2926, _2927)));
        float _2932 = _2931 * _2925;
        float _2933 = _2931 * _2926;
        float _2934 = _2931 * _2927;
        float _2935 = dot(vec3(_806, _807, _808), vec3(cbLight._m0[_2905].xyz));
        float _4902 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
        float _2938 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
        float _2939 = dot(vec3(_806, _807, _808), vec3(_2932, _2933, _2934));
        float _4913 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
        float _2942 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
        float _2943 = dot(vec3(cbLight._m0[_2905].xyz), vec3(_2932, _2933, _2934));
        float _4924 = isnan(0.0) ? _2943 : (isnan(_2943) ? 0.0 : max(_2943, 0.0));
        float _2947 = _2924 * _2924;
        float _2951 = ((_2942 * _2942) * (_2947 + (-1.0))) + 1.0;
        float _2958 = exp2(log2(1.0 - (isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0)))) * 5.0);
        float _2965 = 1.0 - _2924;
        float _2975 = (0.5 / (((_2592 * ((_2938 * _2965) + _2924)) + 9.9999999392252902907785028219223e-09) + (((_2592 * _2965) + _2924) * _2938))) * _2938;
        float _4935 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
        float _2977 = (isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0))) * (_2947 / ((_2951 * _2951) * 3.141590118408203125));
        float _2978 = isnan(1.0) ? _2332 : (isnan(_2332) ? 1.0 : min(_2332, 1.0));
        _2894 = (((((_2958 * _2614) + _967) * cbLight._m0[_2909].x) * _2977) * _2978) + _2784;
        _2896 = (((((_2958 * _2616) + _969) * cbLight._m0[_2909].y) * _2977) * _2978) + _2786;
        _2898 = (((((_2958 * _2617) + _970) * cbLight._m0[_2909].z) * _2977) * _2978) + _2788;
    }
    float _3044;
    float _3046;
    float _3048;
    float _3050;
    float _3052;
    float _3054;
    if (_2314.y == 0u)
    {
        uvec4 _2999 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3000 = _2999.x;
        uint _3011 = uint((float(_2999.y) * floor(float(uint(cbSceneParam._m0[85u].y * _906) / _3000))) + floor(float(uint(cbSceneParam._m0[85u].x * _905) / _3000)));
        float _3021 = (log2(_2092 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3022 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
        uint _3025 = uint(isnan(14.0) ? _3022 : (isnan(_3022) ? 14.0 : min(_3022, 14.0)));
        uvec4 _3030 = texelFetch(g_lightClusterGridBuffer, int(((_3025 << 2u) + (_3011 << 6u)) >> 2u));
        uint _3031 = _3030.x;
        uint _3032 = _2999.z;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        float _3121;
        if (((((1u << ((_3032 >> 4u) & 15u)) + 4294967295u) & _3031) == 0u) || ((_3032 & 240u) == 0u))
        {
            _3111 = 0.0;
            _3113 = 0.0;
            _3115 = 0.0;
            _3117 = 0.0;
            _3119 = 0.0;
            _3121 = 0.0;
        }
        else
        {
            float _3112;
            float _3114;
            float _3116;
            float _3118;
            float _3120;
            float _3122;
            float _3263 = 0.0;
            float _3264 = 0.0;
            float _3265 = 0.0;
            float _3266 = 0.0;
            float _3267 = 0.0;
            float _3268 = 0.0;
            uint _3269 = 0u;
            uint _3278;
            bool _3279;
            for (;;)
            {
                _3278 = texelFetch(g_lightClassification, int((((_3025 << 5u) + (_3011 << 9u)) + (_3269 << 2u)) >> 2u)).x;
                _3279 = _3278 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3279)
                {
                    frontier_phi_71_pred = _3268;
                    frontier_phi_71_pred_1 = _3267;
                    frontier_phi_71_pred_2 = _3266;
                    frontier_phi_71_pred_3 = _3265;
                    frontier_phi_71_pred_4 = _3264;
                    frontier_phi_71_pred_5 = _3263;
                }
                else
                {
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    float _3413;
                    uint _3414;
                    _3408 = _3263;
                    _3409 = _3264;
                    _3410 = _3265;
                    _3411 = _3266;
                    _3412 = _3267;
                    _3413 = _3268;
                    _3414 = _3278;
                    float _3335;
                    float _3336;
                    float _3337;
                    float _3338;
                    float _3339;
                    float _3340;
                    for (;;)
                    {
                        uint _3418 = uint(findLSB(_3414)) + (_3269 << 5u);
                        uint _3415 = (_3414 + 4294967295u) & _3414;
                        uint _3420 = _3418 * 48u;
                        vec4 _3434 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3420)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 3u)).x));
                        uint _3440 = (_3418 * 48u) + 4u;
                        vec4 _3453 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3440)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 3u)).x));
                        uint _3459 = (_3418 * 48u) + 8u;
                        vec3 _3470 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3459)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 2u)).x));
                        float _3474 = _3434.x - _2090;
                        float _3475 = _3434.y - _2091;
                        float _3476 = _3434.z - _2092;
                        float _3477 = dot(vec3(_3474, _3475, _3476), vec3(_3474, _3475, _3476));
                        float _3480 = inversesqrt(_3477);
                        float _3481 = _3480 * _3474;
                        float _3482 = _3480 * _3475;
                        float _3483 = _3480 * _3476;
                        float _3484 = dot(vec3(_924, _927, _930), vec3(_3481, _3482, _3483));
                        float _3489 = 1.0 - (_3477 * _3434.w);
                        float _4961 = isnan(0.0) ? _3489 : (isnan(_3489) ? 0.0 : max(_3489, 0.0));
                        float _3490 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                        float _3491 = sqrt(_3477) * _3453.w;
                        float _3494 = 1.39999997615814208984375 / (_3491 + 1.39999997615814208984375);
                        float _3495 = _3494 * _3494;
                        float _3498 = ((1.0 - _3495) * _3484) + _3495;
                        float _3501 = _3491 * _3491;
                        float _3505 = ((isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0))) * _3490) / ((_3501 * 0.699999988079071044921875) + 1.0);
                        float _3509 = (-0.0) - _2090;
                        float _3510 = (-0.0) - _2091;
                        float _3511 = (-0.0) - _2092;
                        float _3515 = inversesqrt(dot(vec3(_3509, _3510, _3511), vec3(_3509, _3510, _3511)));
                        float _3516 = _3515 * _3509;
                        float _3517 = _3515 * _3510;
                        float _3518 = _3515 * _3511;
                        float _3525 = exp2(log2(1.0 / ((_3501 * 3.5) + 5.0)) * 0.25);
                        float _3526 = 1.0 - _999;
                        float _3533 = sqrt(1.0 - ((1.0 - (_3526 * _3526)) * (1.0 - (_3525 * _3525))));
                        float _3534 = _3533 * _3533;
                        float _3535 = _3534 * _3534;
                        float _3536 = _3516 + _3481;
                        float _3537 = _3517 + _3482;
                        float _3538 = _3518 + _3483;
                        float _3542 = inversesqrt(dot(vec3(_3536, _3537, _3538), vec3(_3536, _3537, _3538)));
                        float _3546 = dot(vec3(_924, _927, _930), vec3(_3516, _3517, _3518));
                        float _4977 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0));
                        float _3549 = isnan(1.0) ? _4977 : (isnan(_4977) ? 1.0 : min(_4977, 1.0));
                        float _3550 = dot(vec3(_924, _927, _930), vec3(_3542 * _3536, _3542 * _3537, _3542 * _3538));
                        float _4988 = isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0));
                        float _3553 = isnan(1.0) ? _4988 : (isnan(_4988) ? 1.0 : min(_4988, 1.0));
                        float _3557 = ((_3553 * _3553) * (_3535 + (-1.0))) + 1.0;
                        float _3558 = _3494 * _3534;
                        float _3559 = _3558 * _3558;
                        float _3562 = ((1.0 - _3559) * _3484) + _3559;
                        float _4999 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                        float _3563 = isnan(1.0) ? _4999 : (isnan(_4999) ? 1.0 : min(_4999, 1.0));
                        float _3564 = 1.0 - _3534;
                        float _3574 = (0.5 / (((_3563 * ((_3549 * _3564) + _3534)) + 9.9999999392252902907785028219223e-09) + (((_3563 * _3564) + _3534) * _3549))) * _3563;
                        float _5010 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3585 = (((_3535 * 3.1415927410125732421875) * (isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0)))) / ((_3557 * _3557) * ((_3501 * 2.1991131305694580078125) + 3.141590118408203125))) * _3490;
                        _3338 = (_3505 * _3453.x) + _3411;
                        _3339 = (_3505 * _3453.y) + _3412;
                        _3340 = (_3505 * _3453.z) + _3413;
                        _3335 = (_3585 * _3470.x) + _3408;
                        _3336 = (_3585 * _3470.y) + _3409;
                        _3337 = (_3585 * _3470.z) + _3410;
                        if (_3415 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3408 = _3335;
                            _3409 = _3336;
                            _3410 = _3337;
                            _3411 = _3338;
                            _3412 = _3339;
                            _3413 = _3340;
                            _3414 = _3415;
                        }
                    }
                    frontier_phi_71_pred = _3340;
                    frontier_phi_71_pred_1 = _3339;
                    frontier_phi_71_pred_2 = _3338;
                    frontier_phi_71_pred_3 = _3337;
                    frontier_phi_71_pred_4 = _3336;
                    frontier_phi_71_pred_5 = _3335;
                }
                _3122 = frontier_phi_71_pred;
                _3120 = frontier_phi_71_pred_1;
                _3118 = frontier_phi_71_pred_2;
                _3116 = frontier_phi_71_pred_3;
                _3114 = frontier_phi_71_pred_4;
                _3112 = frontier_phi_71_pred_5;
                uint _3270 = _3269 + 1u;
                if (_3270 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3263 = _3112;
                    _3264 = _3114;
                    _3265 = _3116;
                    _3266 = _3118;
                    _3267 = _3120;
                    _3268 = _3122;
                    _3269 = _3270;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3111 = _3112;
            _3113 = _3114;
            _3115 = _3116;
            _3117 = _3118;
            _3119 = _3120;
            _3121 = _3122;
        }
        uvec4 _3125 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3126 = _3125.z;
        uint _3128 = (_3126 >> 8u) & 15u;
        float _3231;
        float _3233;
        float _3235;
        float _3237;
        float _3239;
        float _3241;
        if (((4294967295u << _3128) & _3031) == 0u)
        {
            _3231 = _3111;
            _3233 = _3113;
            _3235 = _3115;
            _3237 = _3117;
            _3239 = _3119;
            _3241 = _3121;
        }
        else
        {
            float _3256 = inversesqrt(dot(vec3(_2090, _2091, _2092), vec3(_2090, _2091, _2092)));
            float _3257 = _3256 * _2090;
            float _3258 = _3256 * _2091;
            float _3259 = _3256 * _2092;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3128 < ((_3126 >> 12u) & 15u))
            {
                float _3232;
                float _3234;
                float _3236;
                float _3238;
                float _3240;
                float _3242;
                float _3391 = _3111;
                float _3392 = _3113;
                float _3393 = _3115;
                float _3394 = _3117;
                float _3395 = _3119;
                float _3396 = _3121;
                uint _3397 = _3128;
                uint _3406;
                bool _3407;
                for (;;)
                {
                    _3406 = texelFetch(g_lightClassification, int((((_3025 << 5u) + (_3011 << 9u)) + (_3397 << 2u)) >> 2u)).x;
                    _3407 = _3406 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3407)
                    {
                        frontier_phi_82_pred = _3396;
                        frontier_phi_82_pred_1 = _3395;
                        frontier_phi_82_pred_2 = _3394;
                        frontier_phi_82_pred_3 = _3393;
                        frontier_phi_82_pred_4 = _3392;
                        frontier_phi_82_pred_5 = _3391;
                    }
                    else
                    {
                        float _3599;
                        float _3600;
                        float _3601;
                        float _3602;
                        float _3603;
                        float _3604;
                        float _3893;
                        float _3894;
                        float _3895;
                        float _3896;
                        float _3897;
                        float _3898;
                        float _3612 = _3391;
                        float _3613 = _3392;
                        float _3614 = _3393;
                        float _3615 = _3394;
                        float _3616 = _3395;
                        float _3617 = _3396;
                        uint _3618 = _3406;
                        uint _3619;
                        vec4 _3644;
                        float _3645;
                        vec4 _3660;
                        vec3 _3672;
                        vec4 _3687;
                        vec4 _3703;
                        float _3749;
                        bool _3750;
                        for (;;)
                        {
                            uint _3629 = ((_3397 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3618));
                            _3619 = (_3618 + 4294967295u) & _3618;
                            uint _3631 = _3629 * 40u;
                            _3644 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3631)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 3u)).x));
                            _3645 = _3644.w;
                            uint _3647 = (_3629 * 40u) + 4u;
                            _3660 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3647)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 3u)).x));
                            uint _3662 = (_3629 * 40u) + 8u;
                            _3672 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x));
                            uint _3674 = (_3629 * 40u) + 16u;
                            _3687 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 3u)).x));
                            uint _3690 = (_3629 * 40u) + 20u;
                            _3703 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3690)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 3u)).x));
                            uint _3705 = (_3629 * 40u) + 24u;
                            vec4 _3718 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3705)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3705 + 3u)).x));
                            uint _3724 = (_3629 * 40u) + 28u;
                            vec4 _3737 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3724)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 3u)).x));
                            _3749 = fma(_2092, _3737.z, fma(_2091, _3737.y, _3737.x * _2090)) + _3737.w;
                            _3750 = !((fma(_2092, _3718.z, fma(_2091, _3718.y, _3718.x * _2090)) + _3718.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3750)
                            {
                                float _3777 = _3644.x - _2090;
                                float _3778 = _3644.y - _2091;
                                float _3779 = _3644.z - _2092;
                                float _3780 = dot(vec3(_3777, _3778, _3779), vec3(_3777, _3778, _3779));
                                float _3783 = inversesqrt(_3780);
                                float _3784 = _3783 * _3777;
                                float _3785 = _3783 * _3778;
                                float _3786 = _3783 * _3779;
                                float _3790 = 1.0 - (_3780 / (_3645 * _3645));
                                float _5021 = isnan(0.0) ? _3790 : (isnan(_3790) ? 0.0 : max(_3790, 0.0));
                                float _3791 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                                float _3795 = sqrt(_3780) * _3660.w;
                                float _3797 = 1.39999997615814208984375 / (_3795 + 1.39999997615814208984375);
                                float _3798 = _3797 * _3797;
                                float _3801 = ((1.0 - _3798) * dot(vec3(_3784, _3785, _3786), vec3(_924, _927, _930))) + _3798;
                                float _3804 = _3795 * _3795;
                                float _3808 = (fma(_2092, _3687.z, fma(_2091, _3687.y, _3687.x * _2090)) + _3687.w) / _3749;
                                float _3809 = (fma(_2092, _3703.z, fma(_2091, _3703.y, _3703.x * _2090)) + _3703.w) / _3749;
                                float _3813 = 1.0 - dot(vec2(_3808, _3809), vec2(_3808, _3809));
                                float _5037 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3814 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
                                float _3815 = _3814 * (((isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0))) * _3791) / ((_3804 * 0.699999988079071044921875) + 1.0));
                                float _3827 = exp2(log2(1.0 / ((_3804 * 3.5) + 5.0)) * 0.25);
                                float _3828 = 1.0 - _999;
                                float _3835 = sqrt(1.0 - ((1.0 - (_3828 * _3828)) * (1.0 - (_3827 * _3827))));
                                float _3836 = _3835 * _3835;
                                float _3837 = _3836 * _3836;
                                float _3838 = _3784 - _3257;
                                float _3839 = _3785 - _3258;
                                float _3840 = _3786 - _3259;
                                float _3844 = inversesqrt(dot(vec3(_3838, _3839, _3840), vec3(_3838, _3839, _3840)));
                                float _3848 = dot(vec3(_924, _927, _930), vec3((-0.0) - _3257, (-0.0) - _3258, (-0.0) - _3259));
                                float _5048 = isnan(0.0) ? _3848 : (isnan(_3848) ? 0.0 : max(_3848, 0.0));
                                float _3851 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
                                float _3852 = dot(vec3(_924, _927, _930), vec3(_3844 * _3838, _3844 * _3839, _3844 * _3840));
                                float _5059 = isnan(0.0) ? _3852 : (isnan(_3852) ? 0.0 : max(_3852, 0.0));
                                float _3855 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
                                float _3859 = ((_3855 * _3855) * (_3837 + (-1.0))) + 1.0;
                                float _3860 = _3797 * _3836;
                                float _3861 = _3860 * _3860;
                                float _3867 = ((1.0 - _3861) * dot(vec3(_924, _927, _930), vec3(_3784, _3785, _3786))) + _3861;
                                float _5070 = isnan(0.0) ? _3867 : (isnan(_3867) ? 0.0 : max(_3867, 0.0));
                                float _3868 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
                                float _3869 = 1.0 - _3836;
                                float _3879 = (0.5 / (((_3868 * ((_3851 * _3869) + _3836)) + 9.9999999392252902907785028219223e-09) + (((_3868 * _3869) + _3836) * _3851))) * _3868;
                                float _5081 = isnan(0.0) ? _3879 : (isnan(_3879) ? 0.0 : max(_3879, 0.0));
                                float _3889 = (_3814 * _3791) * (((_3837 * 3.1415927410125732421875) * (isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0)))) / ((_3859 * _3859) * ((_3804 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3815 * _3660.z;
                                frontier_phi_88_pred_1 = _3815 * _3660.y;
                                frontier_phi_88_pred_2 = _3815 * _3660.x;
                                frontier_phi_88_pred_3 = _3889 * _3672.z;
                                frontier_phi_88_pred_4 = _3889 * _3672.y;
                                frontier_phi_88_pred_5 = _3889 * _3672.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3898 = frontier_phi_88_pred;
                            _3897 = frontier_phi_88_pred_1;
                            _3896 = frontier_phi_88_pred_2;
                            _3895 = frontier_phi_88_pred_3;
                            _3894 = frontier_phi_88_pred_4;
                            _3893 = frontier_phi_88_pred_5;
                            _3602 = _3896 + _3615;
                            _3603 = _3897 + _3616;
                            _3604 = _3898 + _3617;
                            _3599 = _3893 + _3612;
                            _3600 = _3894 + _3613;
                            _3601 = _3895 + _3614;
                            if (_3619 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3612 = _3599;
                                _3613 = _3600;
                                _3614 = _3601;
                                _3615 = _3602;
                                _3616 = _3603;
                                _3617 = _3604;
                                _3618 = _3619;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3604;
                        frontier_phi_82_pred_1 = _3603;
                        frontier_phi_82_pred_2 = _3602;
                        frontier_phi_82_pred_3 = _3601;
                        frontier_phi_82_pred_4 = _3600;
                        frontier_phi_82_pred_5 = _3599;
                    }
                    _3242 = frontier_phi_82_pred;
                    _3240 = frontier_phi_82_pred_1;
                    _3238 = frontier_phi_82_pred_2;
                    _3236 = frontier_phi_82_pred_3;
                    _3234 = frontier_phi_82_pred_4;
                    _3232 = frontier_phi_82_pred_5;
                    uint _3398 = _3397 + 1u;
                    if (_3398 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3391 = _3232;
                        _3392 = _3234;
                        _3393 = _3236;
                        _3394 = _3238;
                        _3395 = _3240;
                        _3396 = _3242;
                        _3397 = _3398;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3238;
                frontier_phi_63_64_ladder_1 = _3242;
                frontier_phi_63_64_ladder_2 = _3240;
                frontier_phi_63_64_ladder_3 = _3236;
                frontier_phi_63_64_ladder_4 = _3234;
                frontier_phi_63_64_ladder_5 = _3232;
            }
            else
            {
                frontier_phi_63_64_ladder = _3117;
                frontier_phi_63_64_ladder_1 = _3121;
                frontier_phi_63_64_ladder_2 = _3119;
                frontier_phi_63_64_ladder_3 = _3115;
                frontier_phi_63_64_ladder_4 = _3113;
                frontier_phi_63_64_ladder_5 = _3111;
            }
            _3231 = frontier_phi_63_64_ladder_5;
            _3233 = frontier_phi_63_64_ladder_4;
            _3235 = frontier_phi_63_64_ladder_3;
            _3237 = frontier_phi_63_64_ladder;
            _3239 = frontier_phi_63_64_ladder_2;
            _3241 = frontier_phi_63_64_ladder_1;
        }
        float _3246 = isnan(1.0) ? _983 : (isnan(_983) ? 1.0 : min(_983, 1.0));
        _3044 = (_3246 * _3237) + _2556;
        _3046 = (_3246 * _3239) + _2558;
        _3048 = (_3246 * _3241) + _2560;
        _3050 = ((_3231 * _967) * _3246) + _2894;
        _3052 = ((_3233 * _969) * _3246) + _2896;
        _3054 = ((_3235 * _970) * _3246) + _2898;
    }
    else
    {
        _3044 = _2556;
        _3046 = _2558;
        _3048 = _2560;
        _3050 = _2894;
        _3052 = _2896;
        _3054 = _2898;
    }
    float _5097 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _5108 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _5119 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _3071 = ((isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0))) * (_3044 + ((isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0))) * _983))) + ((_3050 + ((isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0))) * _1822)) * cbPerFrame._m0[3u].x);
    float _3072 = ((isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0))) * (_3046 + ((isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0))) * _983))) + ((_3052 + ((isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0))) * _1822)) * cbPerFrame._m0[3u].x);
    float _3073 = ((isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0))) * (_3048 + ((isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0))) * _983))) + ((_3054 + ((isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0))) * _1822)) * cbPerFrame._m0[3u].x);
    uint _3074 = _257 + 6u;
    float _3082 = _905 / cbSceneParam._m0[86u].x;
    float _3083 = _906 / cbSceneParam._m0[86u].y;
    vec4 _3097 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3082, _3083, (log2((isnan(cbSceneParam._m0[77u].w) ? _828 : (isnan(_828) ? cbSceneParam._m0[77u].w : min(_828, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3099 = _3097.x;
    float _3100 = _3097.y;
    float _3101 = _3097.z;
    float _3102 = _3097.w;
    float _3173;
    float _3175;
    float _3177;
    float _3179;
    if (_828 > cbSceneParam._m0[78u].w)
    {
        float _3136 = isnan(_828) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _828 : min(cbSceneParam._m0[80u].w, _828));
        float _3137 = _3136 / _828;
        float _3148 = _3137 * _878;
        float _3149 = _879 * _3137;
        float _3150 = (-0.0) - _3149;
        float _3151 = _3137 * _880;
        float _3153 = (cbSceneParam._m0[77u].w * _3150) / _3136;
        float _3154 = _3153 + cbSceneParam._m0[79u].w;
        float _3155 = cbSceneParam._m0[79u].w - _3149;
        float _3161 = sqrt(((_3148 * _3148) + (_3149 * _3149)) + (_3151 * _3151));
        float _3164 = (1.0 - (cbSceneParam._m0[77u].w / _3136)) * _3161;
        float _3169 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3171 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3348;
        if (abs((_3150 - _3153) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3348 = ((((_3154 > 0.0) ? exp2(_3169 * _3154) : (2.0 - exp2(_3171 * _3154))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3164;
        }
        else
        {
            float _3292 = 1.0 / cbSceneParam._m0[80u].x;
            float _3293 = isnan(_3155) ? _3154 : (isnan(_3154) ? _3155 : max(_3154, _3155));
            float _3294 = isnan(_3155) ? _3154 : (isnan(_3154) ? _3155 : min(_3154, _3155));
            float _3303 = isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : min(_3293, 0.0));
            float _3304 = isnan(0.0) ? _3294 : (isnan(_3294) ? 0.0 : min(_3294, 0.0));
            _3348 = ((abs(_3161 / _3150) * cbSceneParam._m0[80u].y) * ((((_3303 - _3304) * 2.0) - ((exp2(_3169 * (isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : max(_3293, 0.0)))) - exp2(_3169 * (isnan(0.0) ? _3294 : (isnan(_3294) ? 0.0 : max(_3294, 0.0))))) * _3292)) - ((exp2(_3171 * _3303) - exp2(_3171 * _3304)) * _3292))) + (_3164 * cbSceneParam._m0[80u].z);
        }
        vec4 _3350 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3082, _3083, 1.0), 0.0);
        float _3359 = exp2((_3348 * (-1.44269502162933349609375)) * (1.0 - _3350.w));
        float _3360 = log2(_3359);
        float _3376 = log2(_3102);
        _3173 = (exp2(_3376 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].x)) * _3350.x) / cbSceneParam._m0[78u].x)) + _3099;
        _3175 = (exp2(_3376 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].y)) * _3350.y) / cbSceneParam._m0[78u].y)) + _3100;
        _3177 = (exp2(_3376 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3360 * cbSceneParam._m0[78u].z)) * _3350.z) / cbSceneParam._m0[78u].z)) + _3101;
        _3179 = _3359 * _3102;
    }
    else
    {
        _3173 = _3099;
        _3175 = _3100;
        _3177 = _3101;
        _3179 = _3102;
    }
    bool _3386;
    vec4 _3189;
    vec4 _3211;
    float _3213;
    float _3217;
    float _3218;
    float _3219;
    float _3220;
    bool _3230;
    for (;;)
    {
        _3189 = cbMatDynParam._m0[0u];
        float _3191 = roundEven(_3189.y);
        bool _3192 = _3191 == 3.0;
        float _3193 = log2(_3179);
        float _3200 = exp2(_3193 * cbSceneParam._m0[78u].x) * _3071;
        float _3201 = exp2(_3193 * cbSceneParam._m0[78u].y) * _3072;
        float _3202 = exp2(_3193 * cbSceneParam._m0[78u].z) * _3073;
        float _3209 = _894 + (-0.5);
        _3211 = cbMtdParam._m0[1u];
        _3213 = _3211.y * _3209;
        float _3216 = (_3191 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3217 = _3216 * (_3192 ? _3200 : (_3200 + (cbSceneParam._m0[72u].w * _3173)));
        _3218 = _3216 * (_3192 ? _3201 : (_3201 + (cbSceneParam._m0[72u].w * _3175)));
        _3219 = _3216 * (_3192 ? _3202 : (_3202 + (cbSceneParam._m0[72u].w * _3177)));
        _3220 = _3209 * 0.999000012874603271484375;
        _3230 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3230)
        {
            if ((cbInstanceData._m0[_257 + 7u].x + _3220) < 0.5)
            {
                _3386 = true;
                break;
            }
        }
        uint _3327 = _943 + uint(_3189.w);
        if ((cbInstanceData._m0[_3327].w < 1.0) && ((cbInstanceData._m0[_3327].w + _3220) < 0.5))
        {
            _3386 = true;
            break;
        }
        if ((_3213 + 1.0) < _3211.x)
        {
            _3386 = true;
            break;
        }
        _3386 = false;
        break;
    }
    float _3590;
    if (_3386)
    {
        discard_state = true;
        _3590 = 0.0;
    }
    else
    {
        _3590 = cbInstanceData._m0[_3074].w;
    }
    SV_Target.x = _3217;
    SV_Target.y = _3218;
    SV_Target.z = _3219;
    SV_Target.w = _3590;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3074].w;
    discard_exit();
}


