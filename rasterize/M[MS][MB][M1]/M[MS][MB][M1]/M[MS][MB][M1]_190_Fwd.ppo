#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1490;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3816 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _3827 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _3838 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _344 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = _344.x * cbMtdParam._m0[11u].x;
    float _350 = _344.y * cbMtdParam._m0[11u].y;
    float _351 = _344.z * cbMtdParam._m0[11u].z;
    vec4 _370 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _407 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _409 = _407.x;
    float _421 = dot(vec4(_409, _407.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _438 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_409 - _421) * cbMtdParam._m0[24u].y) + _421) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3849 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _446 = (_439 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349;
    float _447 = (_439 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350;
    float _448 = (_439 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351;
    vec4 _465 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _306) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _307) + cbTextureTilingScale._m0[3u].w));
    vec4 _485 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _487 = _485.x;
    float _497 = dot(vec4(_487, _485.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _511 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_487 - _497) * cbMtdParam._m0[24u].y) + _497) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3860 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _512 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _519 = (_512 * ((_465.x * cbMtdParam._m0[13u].x) - _446)) + _446;
    float _520 = (_512 * ((_465.y * cbMtdParam._m0[13u].y) - _447)) + _447;
    float _521 = (_512 * ((_465.z * cbMtdParam._m0[13u].z) - _448)) + _448;
    float _525 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _519;
    float _528 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _520;
    float _531 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _521;
    float _538 = ((_519 - _525) * (isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0)))) + _525;
    float _539 = ((_520 - _528) * (isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0)))) + _528;
    float _540 = ((_521 - _531) * (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0)))) + _531;
    vec4 _557 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _580 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _597 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _599 = _597.x;
    float _600 = _597.y;
    float _601 = _597.z;
    float _608 = ((_580.x - _599) * _439) + _599;
    float _609 = ((_580.y - _600) * _439) + _600;
    float _610 = ((_580.z - _601) * _439) + _601;
    vec4 _622 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _306) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _307) + cbTextureTilingScale._m0[2u].w));
    float _635 = ((_622.z - _610) * _512) + _610;
    float _638 = ((((_622.x - _608) * _512) + _608) * 2.0) + (-1.0);
    float _639 = ((((_622.y - _609) * _512) + _609) * 2.0) + (-1.0);
    float _640 = dot(vec2(_638, _639), vec2(_638, _639));
    float _3871 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _645 = sqrt(1.0 - (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))));
    vec4 _658 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _676 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _678 = _676.x;
    float _679 = 1.0 - _678;
    float _685 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _688 = ((isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : min(_685, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _697 = (_688 - ((((((_678 - _679) * cbMtdParam._m0[24u].z) + _679) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _688))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3892 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _698 = isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0));
    float _705 = (_698 * (cbMtdParam._m0[17u].x - _538)) + _538;
    float _706 = (_698 * (cbMtdParam._m0[17u].y - _539)) + _539;
    float _707 = (_698 * (cbMtdParam._m0[17u].z - _540)) + _540;
    vec4 _719 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _721 = _719.x;
    float _722 = 1.0 - _721;
    float _747 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_721 - _722) * cbMtdParam._m0[24u].w) + _722) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3903 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _748 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
    float _756 = ((((cbMtdParam._m0[10u].x - _705) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _748) + _705;
    float _757 = ((((cbMtdParam._m0[10u].y - _706) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _748) + _706;
    float _758 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _707)) * _748) + _707;
    vec4 _784 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _786 = _784.x;
    float _804 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _306) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _307) + cbTextureTilingScale._m0[9u].w)).x - _786) * _439) + _786;
    float _821 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _306) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _307) + cbTextureTilingScale._m0[21u].w)).x - _804) * _512) + _804;
    float _825 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _821) * cbMtdParam._m0[19u].z) + _821;
    float _827 = _825 - (_825 * _698);
    float _829 = _827 - (_827 * _748);
    float _834 = (((_557.z - _635) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _635;
    vec4 _848 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _855 = (_848.x * 2.0) + (-1.0);
    float _856 = (_848.y * 2.0) + (-1.0);
    float _857 = dot(vec2(_855, _856), vec2(_855, _856));
    float _3914 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _865 = (_698 * (_848.z - _834)) + _834;
    float _868 = ((cbMtdParam._m0[23u].y - _865) * _748) + _865;
    vec4 _889 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _895 = (_889.x * 2.0) + (-1.0);
    float _896 = (_889.y * 2.0) + (-1.0);
    float _897 = dot(vec2(_895, _896), vec2(_895, _896));
    float _3925 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _907 = _638 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_557.x * 2.0) + (-1.0)));
    float _908 = _639 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_557.y * 2.0) + (-1.0)));
    float _920 = (((_855 - _907) + (cbMtdParam._m0[21u].x * _907)) * _698) + _907;
    float _921 = (((_856 - _908) + (cbMtdParam._m0[21u].x * _908)) * _698) + _908;
    float _922 = (_698 * (sqrt(1.0 - (isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0)))) - _645)) + _645;
    float _933 = (((_895 - _920) + (_920 * cbMtdParam._m0[22u].z)) * _748) + _920;
    float _934 = (((_896 - _921) + (_921 * cbMtdParam._m0[22u].z)) * _748) + _921;
    float _935 = ((sqrt(1.0 - (isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0)))) - _922) * _748) + _922;
    float _937 = cbMtdParam._m0[22u].x + _658.w;
    float _940 = fma(_935, _255 * NORMAL.x, fma(_934, _262 * TANGENT.x, (_248 * _240) * _933));
    float _943 = fma(_935, _255 * NORMAL.y, fma(_934, _262 * TANGENT.y, (_248 * _241) * _933));
    float _946 = fma(_935, _255 * NORMAL.z, fma(_934, _262 * TANGENT.z, (_248 * _242) * _933));
    float _950 = inversesqrt(dot(vec3(_940, _943, _946), vec3(_940, _943, _946)));
    float _951 = _950 * _940;
    float _952 = _950 * _943;
    float _953 = _950 * _946;
    float _3936 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _954 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _3947 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _3958 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _3969 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _3980 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _3991 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _959 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
    float _973 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1013 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1023 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1013);
    float _1024 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1013);
    float _1025 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1013);
    float _1029 = inversesqrt(dot(vec3(_1023, _1024, _1025), vec3(_1023, _1024, _1025)));
    float _1030 = _1023 * _1029;
    float _1031 = _1024 * _1029;
    float _1032 = _1025 * _1029;
    float _1038 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1039 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1057 = fma(_953, cbSceneParam._m0[5u].z, fma(_952, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _951));
    float _1060 = fma(_953, cbSceneParam._m0[6u].z, fma(_952, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _951));
    float _1063 = fma(_953, cbSceneParam._m0[7u].z, fma(_952, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _951));
    uint _1077 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1083 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)))) * cbInstanceData._m0[_1077].x;
    float _1084 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0)))) * cbInstanceData._m0[_1077].y;
    float _1085 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0)))) * cbInstanceData._m0[_1077].z;
    float _4002 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1086 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
    float _4013 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1087 = isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0));
    float _4024 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1088 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
    float _1089 = 1.0 - _959;
    float _1090 = _1086 * _1089;
    float _1091 = _1087 * _1089;
    float _1092 = _1088 * _1089;
    float _1097 = (_1086 + (-0.039999999105930328369140625)) * _959;
    float _1098 = (_1087 + (-0.039999999105930328369140625)) * _959;
    float _1099 = (_1088 + (-0.039999999105930328369140625)) * _959;
    float _1100 = _1097 + 0.039999999105930328369140625;
    float _1102 = _1098 + 0.039999999105930328369140625;
    float _1103 = _1099 + 0.039999999105930328369140625;
    vec4 _1112 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1038, cbSceneParam._m0[86u].y * _1039));
    float _1116 = ((isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0))) * TEXCOORD_5.w) * _1112.x;
    float _1117 = dot(vec3(_951, _952, _953), vec3(_1030, _1031, _1032));
    float _1120 = _1117 * 2.0;
    float _1124 = (_1120 * _951) - _1030;
    float _1125 = (_1120 * _952) - _1031;
    float _1126 = (_1120 * _953) - _1032;
    float _1130 = abs(dot(vec3(_1030, _1031, _1032), vec3(_951, _952, _953)));
    float _4035 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _1132 = sqrt(_954);
    float _1145 = exp2((_1132 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1132 * 3.0));
    float _1151 = (1.0 - _1145) * ((_1132 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1152 = _1145 * _1132;
    float _1180 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1184 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1188 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1489;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1214 = fma(_1188, cbModelParam._m0[26u].z, fma(_1184, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1180));
        float _1218 = fma(_1188, cbModelParam._m0[27u].z, fma(_1184, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1180));
        float _1222 = fma(_1188, cbModelParam._m0[28u].z, fma(_1184, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1180));
        float _1247 = _1180 + _951;
        float _1248 = _1184 + _952;
        float _1249 = _1188 + _953;
        float _1259 = fma(_1249, cbModelParam._m0[26u].z, fma(_1248, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1247)) - _1214;
        float _1260 = fma(_1249, cbModelParam._m0[27u].z, fma(_1248, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1247)) - _1218;
        float _1261 = fma(_1249, cbModelParam._m0[28u].z, fma(_1248, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1247)) - _1222;
        float _1265 = inversesqrt(dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261)));
        float _1278 = ((_1265 * _1259) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1214 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1279 = ((_1265 * _1260) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1218 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1280 = ((_1265 * _1261) / cbModelParam._m0[34u].z) + ((((((_1222 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1283 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1290 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1297 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        float _1317 = exp2((_1283.w + (-0.5)) * 20.0) * 2.0;
        float _1318 = _1317 * (_1283.x + (-0.5));
        float _1319 = _1317 * (_1283.y + (-0.5));
        float _1320 = _1317 * (_1283.z + (-0.5));
        float _1327 = exp2((_1290.w + (-0.5)) * 20.0) * 2.0;
        float _1328 = _1327 * (_1290.x + (-0.5));
        float _1329 = _1327 * (_1290.y + (-0.5));
        float _1330 = _1327 * (_1290.z + (-0.5));
        float _1337 = exp2((_1297.w + (-0.5)) * 20.0) * 2.0;
        float _1338 = _1337 * (_1297.x + (-0.5));
        float _1339 = _1337 * (_1297.y + (-0.5));
        float _1340 = _1337 * (_1297.z + (-0.5));
        float _1347 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1348 = _1347 * (_1304.x + (-0.5));
        float _1349 = _1347 * (_1304.y + (-0.5));
        float _1350 = _1347 * (_1304.z + (-0.5));
        float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1352 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1353 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1354 = _1318 * 0.5;
        float _1355 = _1328 * 0.5;
        float _1356 = _1338 * 0.5;
        float _1357 = dot(vec3(_1354, _1355, _1356), vec3(_1354, _1355, _1356));
        float _1362 = (_1357 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1357);
        float _1371 = (dot(vec3(_951, _952, _953), vec3(_1362 * _1354, _1362 * _1355, _1362 * _1356)) + 1.0) * 0.5;
        float _4061 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1381 = sqrt(((_1355 * _1355) + (_1354 * _1354)) + (_1356 * _1356)) / (_1351 + 9.9999997473787516355514526367188e-06);
        float _4072 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1383 = _1382 * 2.0;
        float _1387 = (1.0 - _1382) / (_1382 + 1.0);
        float _4083 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1388 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
        float _1397 = ((((1.0 - _1388) * (_1383 + 2.0)) * exp2(log2(isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * (_1383 + 1.0))) + _1388) * _1351;
        float _1398 = _1319 * 0.5;
        float _1399 = _1329 * 0.5;
        float _1400 = _1339 * 0.5;
        float _1401 = dot(vec3(_1398, _1399, _1400), vec3(_1398, _1399, _1400));
        float _1406 = (_1401 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1401);
        float _1414 = (dot(vec3(_951, _952, _953), vec3(_1406 * _1398, _1406 * _1399, _1406 * _1400)) + 1.0) * 0.5;
        float _4094 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1423 = sqrt(((_1399 * _1399) + (_1398 * _1398)) + (_1400 * _1400)) / (_1352 + 9.9999997473787516355514526367188e-06);
        float _4105 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1424 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1425 = _1424 * 2.0;
        float _1429 = (1.0 - _1424) / (_1424 + 1.0);
        float _4116 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1439 = ((((1.0 - _1430) * (_1425 + 2.0)) * exp2(log2(isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * (_1425 + 1.0))) + _1430) * _1352;
        float _1440 = _1320 * 0.5;
        float _1441 = _1330 * 0.5;
        float _1442 = _1340 * 0.5;
        float _1443 = dot(vec3(_1440, _1441, _1442), vec3(_1440, _1441, _1442));
        float _1448 = (_1443 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1443);
        float _1456 = (dot(vec3(_951, _952, _953), vec3(_1448 * _1440, _1448 * _1441, _1448 * _1442)) + 1.0) * 0.5;
        float _4127 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1465 = sqrt(((_1441 * _1441) + (_1440 * _1440)) + (_1442 * _1442)) / (_1353 + 9.9999997473787516355514526367188e-06);
        float _4138 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1466 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
        float _1467 = _1466 * 2.0;
        float _1471 = (1.0 - _1466) / (_1466 + 1.0);
        float _4149 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
        float _1481 = ((((1.0 - _1472) * (_1467 + 2.0)) * exp2(log2(isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) * (_1467 + 1.0))) + _1472) * _1353;
        _1489 = _1320;
        _1491 = _1319;
        _1492 = _1318;
        _1493 = _1330;
        _1494 = _1329;
        _1495 = _1328;
        _1496 = _1340;
        _1497 = _1339;
        _1498 = _1338;
        _1499 = _1353;
        _1500 = _1352;
        _1501 = _1351;
        _1502 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0)));
        _1503 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0)));
        _1504 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0)));
    }
    else
    {
        _1489 = _1490;
        _1491 = _1490;
        _1492 = _1490;
        _1493 = _1490;
        _1494 = _1490;
        _1495 = _1490;
        _1496 = _1490;
        _1497 = _1490;
        _1498 = _1490;
        _1499 = _1490;
        _1500 = _1490;
        _1501 = _1490;
        _1502 = 0.0;
        _1503 = 0.0;
        _1504 = 0.0;
    }
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1528 = fma(_1188, cbModelParam._m0[30u].z, fma(_1184, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1180));
        float _1532 = fma(_1188, cbModelParam._m0[31u].z, fma(_1184, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1180));
        float _1536 = fma(_1188, cbModelParam._m0[32u].z, fma(_1184, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1180));
        float _1559 = _1180 + _951;
        float _1560 = _1184 + _952;
        float _1561 = _1188 + _953;
        float _1571 = fma(_1561, cbModelParam._m0[30u].z, fma(_1560, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1559)) - _1528;
        float _1572 = fma(_1561, cbModelParam._m0[31u].z, fma(_1560, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1559)) - _1532;
        float _1573 = fma(_1561, cbModelParam._m0[32u].z, fma(_1560, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1559)) - _1536;
        float _1577 = inversesqrt(dot(vec3(_1571, _1572, _1573), vec3(_1571, _1572, _1573)));
        float _1590 = ((_1577 * _1571) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1528 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1591 = ((_1577 * _1572) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1532 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1592 = ((_1577 * _1573) / cbModelParam._m0[35u].z) + ((((((_1536 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1594 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1601 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1608 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1615 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        float _1627 = exp2((_1594.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1594.x + (-0.5));
        float _1629 = _1627 * (_1594.y + (-0.5));
        float _1630 = _1627 * (_1594.z + (-0.5));
        float _1637 = exp2((_1601.w + (-0.5)) * 20.0) * 2.0;
        float _1638 = _1637 * (_1601.x + (-0.5));
        float _1639 = _1637 * (_1601.y + (-0.5));
        float _1640 = _1637 * (_1601.z + (-0.5));
        float _1647 = exp2((_1608.w + (-0.5)) * 20.0) * 2.0;
        float _1648 = _1647 * (_1608.x + (-0.5));
        float _1649 = _1647 * (_1608.y + (-0.5));
        float _1650 = _1647 * (_1608.z + (-0.5));
        float _1657 = exp2((_1615.w + (-0.5)) * 20.0) * 2.0;
        float _1658 = _1657 * (_1615.x + (-0.5));
        float _1659 = _1657 * (_1615.y + (-0.5));
        float _1660 = _1657 * (_1615.z + (-0.5));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1664 = _1628 * 0.5;
        float _1665 = _1638 * 0.5;
        float _1666 = _1648 * 0.5;
        float _1667 = dot(vec3(_1664, _1665, _1666), vec3(_1664, _1665, _1666));
        float _1672 = (_1667 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1667);
        float _1680 = (dot(vec3(_951, _952, _953), vec3(_1672 * _1664, _1672 * _1665, _1672 * _1666)) + 1.0) * 0.5;
        float _4190 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1689 = sqrt(((_1665 * _1665) + (_1664 * _1664)) + (_1666 * _1666)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4201 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1690 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1691 = _1690 * 2.0;
        float _1695 = (1.0 - _1690) / (_1690 + 1.0);
        float _4212 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1696 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
        float _1705 = ((((1.0 - _1696) * (_1691 + 2.0)) * exp2(log2(isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0))) * (_1691 + 1.0))) + _1696) * _1661;
        float _1706 = _1629 * 0.5;
        float _1707 = _1639 * 0.5;
        float _1708 = _1649 * 0.5;
        float _1709 = dot(vec3(_1706, _1707, _1708), vec3(_1706, _1707, _1708));
        float _1714 = (_1709 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1709);
        float _1722 = (dot(vec3(_951, _952, _953), vec3(_1714 * _1706, _1714 * _1707, _1714 * _1708)) + 1.0) * 0.5;
        float _4223 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1731 = sqrt(((_1707 * _1707) + (_1706 * _1706)) + (_1708 * _1708)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4234 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1732 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
        float _1733 = _1732 * 2.0;
        float _1737 = (1.0 - _1732) / (_1732 + 1.0);
        float _4245 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
        float _1747 = ((((1.0 - _1738) * (_1733 + 2.0)) * exp2(log2(isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))) * (_1733 + 1.0))) + _1738) * _1662;
        float _1748 = _1630 * 0.5;
        float _1749 = _1640 * 0.5;
        float _1750 = _1650 * 0.5;
        float _1751 = dot(vec3(_1748, _1749, _1750), vec3(_1748, _1749, _1750));
        float _1756 = (_1751 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1751);
        float _1764 = (dot(vec3(_951, _952, _953), vec3(_1756 * _1748, _1756 * _1749, _1756 * _1750)) + 1.0) * 0.5;
        float _4256 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1773 = sqrt(((_1749 * _1749) + (_1748 * _1748)) + (_1750 * _1750)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4267 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1774 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
        float _1775 = _1774 * 2.0;
        float _1779 = (1.0 - _1774) / (_1774 + 1.0);
        float _4278 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1780 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1789 = ((((1.0 - _1780) * (_1775 + 2.0)) * exp2(log2(isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))) * (_1775 + 1.0))) + _1780) * _1663;
        _1797 = _1630;
        _1798 = _1629;
        _1799 = _1628;
        _1800 = _1640;
        _1801 = _1639;
        _1802 = _1638;
        _1803 = _1650;
        _1804 = _1649;
        _1805 = _1648;
        _1806 = _1663;
        _1807 = _1662;
        _1808 = _1661;
        _1809 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)));
        _1810 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0)));
        _1811 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)));
    }
    else
    {
        _1797 = _1490;
        _1798 = _1490;
        _1799 = _1490;
        _1800 = _1490;
        _1801 = _1490;
        _1802 = _1490;
        _1803 = _1490;
        _1804 = _1490;
        _1805 = _1490;
        _1806 = _1490;
        _1807 = _1490;
        _1808 = _1490;
        _1809 = 0.0;
        _1810 = 0.0;
        _1811 = 0.0;
    }
    float _1821 = (cbModelParam._m0[1u].x * (_1809 - _1502)) + _1502;
    float _1822 = (cbModelParam._m0[1u].x * (_1810 - _1503)) + _1503;
    float _1823 = (cbModelParam._m0[1u].x * (_1811 - _1504)) + _1504;
    float _1844 = fma(_1823, cbSceneParam._m0[89u].z, fma(_1822, cbSceneParam._m0[89u].y, _1821 * cbSceneParam._m0[89u].x));
    float _1847 = fma(_1823, cbSceneParam._m0[90u].z, fma(_1822, cbSceneParam._m0[90u].y, _1821 * cbSceneParam._m0[90u].x));
    float _1850 = fma(_1823, cbSceneParam._m0[91u].z, fma(_1822, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1821));
    float _1865 = _1124 * 0.5;
    float _1866 = _1125 * 0.5;
    float _1867 = _1126 * 0.5;
    float _1868 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1799, _1802, _1805, _1808));
    float _1871 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1798, _1801, _1804, _1807));
    float _1874 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1797, _1800, _1803, _1806));
    float _1908;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1881 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1489, _1493, _1496, _1499));
        float _1885 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1491, _1494, _1497, _1500));
        float _1889 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1492, _1495, _1498, _1501));
        float _1896 = dot(vec4(cbModelParam._m0[39u]), vec4(_1865, _1866, _1867, 1.0));
        _1908 = dot(vec3(isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0)), isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0)), isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1896) ? 0.0 : (isnan(0.0) ? _1896 : max(0.0, _1896))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1908 = 1.0;
    }
    float _1919;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1910 = dot(vec4(cbModelParam._m0[40u]), vec4(_1865, _1866, _1867, 1.0));
        _1919 = dot(vec3(isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0)), isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0)), isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1910) ? 0.0 : (isnan(0.0) ? _1910 : max(0.0, _1910))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1919 = 1.0;
    }
    float _1923 = (_1919 * cbModelParam._m0[1u].x) + (_1908 * (1.0 - cbModelParam._m0[1u].x));
    float _1933 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _954);
    float _1934 = isnan(_1933) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1933 : min(cbModelParam._m0[25u].z, _1933));
    float _2015;
    float _2017;
    float _2019;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1982 = fma(_1188, cbModelParam._m0[13u].z, fma(_1184, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1180)) + cbModelParam._m0[13u].w;
        float _1986 = fma(_1188, cbModelParam._m0[14u].z, fma(_1184, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1180)) + cbModelParam._m0[14u].w;
        float _1990 = fma(_1188, cbModelParam._m0[15u].z, fma(_1184, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1180)) + cbModelParam._m0[15u].w;
        float _1993 = fma(_1126, cbModelParam._m0[13u].z, fma(_1125, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1124));
        float _1996 = fma(_1126, cbModelParam._m0[14u].z, fma(_1125, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1124));
        float _1999 = fma(_1126, cbModelParam._m0[15u].z, fma(_1125, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1124));
        float _2027;
        if (_1993 > 0.0)
        {
            _2027 = abs((1.0 - _1982) / _1993);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1993 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1982 + 1.0) / _1993);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2027 = frontier_phi_14_12_ladder;
        }
        float _2230;
        if (_1996 > 0.0)
        {
            _2230 = abs((1.0 - _1986) / _1996);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1996 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1986 + 1.0) / _1996);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2230 = frontier_phi_23_19_ladder;
        }
        float _2484;
        if (_1999 > 0.0)
        {
            _2484 = abs((1.0 - _1990) / _1999);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1999 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1990 + 1.0) / _1999);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2484 = frontier_phi_35_30_ladder;
        }
        float _2486 = isnan(_2230) ? _2027 : (isnan(_2027) ? _2230 : min(_2027, _2230));
        float _2487 = isnan(_2484) ? _2486 : (isnan(_2486) ? _2484 : min(_2486, _2484));
        float _2491 = (_2487 * _1993) + _1982;
        float _2492 = (_2487 * _1996) + _1986;
        float _2493 = (_2487 * _1999) + _1990;
        float _2494 = _2487 * 9.9999997473787516355514526367188e-05;
        float _2496 = (-1.0) - _2494;
        float _2498 = _2494 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2493 > _2498) || ((_2493 < _2496) || ((_2492 > _2498) || ((_2492 < _2496) || ((_2491 < _2496) || (_2491 > _2498))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2621 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2493, cbModelParam._m0[9u].z, fma(_2492, cbModelParam._m0[9u].y, _2491 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2493, cbModelParam._m0[10u].z, fma(_2492, cbModelParam._m0[10u].y, _2491 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2493, cbModelParam._m0[11u].z, fma(_2492, cbModelParam._m0[11u].y, _2491 * cbModelParam._m0[11u].x))), _1934);
            frontier_phi_13_35_ladder = _2621.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2621.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2621.x * cbModelParam._m0[1u].y;
        }
        _2015 = frontier_phi_13_35_ladder_2;
        _2017 = frontier_phi_13_35_ladder_1;
        _2019 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2003 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1124, _1125, _1126), _1934);
        _2015 = _2003.x * cbModelParam._m0[1u].y;
        _2017 = _2003.y * cbModelParam._m0[1u].y;
        _2019 = _2003.z * cbModelParam._m0[1u].y;
    }
    float _2023 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _954);
    float _2024 = isnan(_2023) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2023 : min(cbModelParam._m0[25u].w, _2023));
    float _2114;
    float _2116;
    float _2118;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2078 = fma(_1188, cbModelParam._m0[21u].z, fma(_1184, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1180)) + cbModelParam._m0[21u].w;
        float _2082 = fma(_1188, cbModelParam._m0[22u].z, fma(_1184, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1180)) + cbModelParam._m0[22u].w;
        float _2086 = fma(_1188, cbModelParam._m0[23u].z, fma(_1184, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1180)) + cbModelParam._m0[23u].w;
        float _2089 = fma(_1126, cbModelParam._m0[21u].z, fma(_1125, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1124));
        float _2092 = fma(_1126, cbModelParam._m0[22u].z, fma(_1125, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1124));
        float _2095 = fma(_1126, cbModelParam._m0[23u].z, fma(_1125, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1124));
        float _2235;
        if (_2089 > 0.0)
        {
            _2235 = abs((1.0 - _2078) / _2089);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2089 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2078 + 1.0) / _2089);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2235 = frontier_phi_25_21_ladder;
        }
        float _2511;
        if (_2092 > 0.0)
        {
            _2511 = abs((1.0 - _2082) / _2092);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2092 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2082 + 1.0) / _2092);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2511 = frontier_phi_37_32_ladder;
        }
        float _2724;
        if (_2095 > 0.0)
        {
            _2724 = abs((1.0 - _2086) / _2095);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2095 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2086 + 1.0) / _2095);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2724 = frontier_phi_46_43_ladder;
        }
        float _2726 = isnan(_2511) ? _2235 : (isnan(_2235) ? _2511 : min(_2235, _2511));
        float _2727 = isnan(_2724) ? _2726 : (isnan(_2726) ? _2724 : min(_2726, _2724));
        float _2731 = (_2727 * _2089) + _2078;
        float _2732 = (_2727 * _2092) + _2082;
        float _2733 = (_2727 * _2095) + _2086;
        float _2734 = _2727 * 9.9999997473787516355514526367188e-05;
        float _2735 = (-1.0) - _2734;
        float _2737 = _2734 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2733 > _2737) || ((_2733 < _2735) || ((_2732 > _2737) || ((_2732 < _2735) || ((_2731 < _2735) || (_2731 > _2737))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2932 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2733, cbModelParam._m0[17u].z, fma(_2732, cbModelParam._m0[17u].y, _2731 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2733, cbModelParam._m0[18u].z, fma(_2732, cbModelParam._m0[18u].y, _2731 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2733, cbModelParam._m0[19u].z, fma(_2732, cbModelParam._m0[19u].y, _2731 * cbModelParam._m0[19u].x))), _2024);
            frontier_phi_22_46_ladder = _2932.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2932.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2932.x * cbModelParam._m0[1u].z;
        }
        _2114 = frontier_phi_22_46_ladder_2;
        _2116 = frontier_phi_22_46_ladder_1;
        _2118 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2098 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1124, _1125, _1126), _2024);
        _2114 = _2098.x * cbModelParam._m0[1u].z;
        _2116 = _2098.y * cbModelParam._m0[1u].z;
        _2118 = _2098.z * cbModelParam._m0[1u].z;
    }
    float _2131 = (((_1151 * _1100) + _1152) * _1116) * ((cbModelParam._m0[1u].w * (_2114 - _2015)) + _2015);
    float _2133 = (((_1151 * _1102) + _1152) * _1116) * ((cbModelParam._m0[1u].w * (_2116 - _2017)) + _2017);
    float _2135 = (((_1151 * _1103) + _1152) * _1116) * ((cbModelParam._m0[1u].w * (_2118 - _2019)) + _2019);
    float _2138 = fma(_2135, cbSceneParam._m0[89u].z, fma(_2133, cbSceneParam._m0[89u].y, _2131 * cbSceneParam._m0[89u].x));
    float _2141 = fma(_2135, cbSceneParam._m0[90u].z, fma(_2133, cbSceneParam._m0[90u].y, _2131 * cbSceneParam._m0[90u].x));
    float _2144 = fma(_2135, cbSceneParam._m0[91u].z, fma(_2133, cbSceneParam._m0[91u].y, _2131 * cbSceneParam._m0[91u].x));
    uvec4 _2154 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2156 = _2154.x * 14u;
    uint _2157 = _2156 + 13u;
    float _2164 = _1116 + (-1.0);
    float _2169 = (cbLight._m0[_2157].x * _2164) + 1.0;
    float _2170 = (cbLight._m0[_2157].y * _2164) + 1.0;
    float _2171 = (cbLight._m0[_2157].z * _2164) + 1.0;
    float _2172 = (cbLight._m0[_2157].w * _2164) + 1.0;
    uint _2173 = _2156 + 5u;
    float _2179 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
    uint _2183 = _2156 + 4u;
    float _2189 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
    uint _2193 = _2156 | 1u;
    float _2204 = dot(vec3(cbLight._m0[_2156].xyz), vec3(_951, _952, _953));
    float _2207 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_951, _952, _953));
    float _4414 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    float _4425 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
    float _2212 = (isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * 0.3183098733425140380859375;
    float _2214 = (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * 0.3183098733425140380859375;
    float _2221 = ((cbLight._m0[_2173].x * _2179) * _2214) + ((cbLight._m0[_2183].x * _2189) * _2212);
    float _2222 = ((_2179 * cbLight._m0[_2173].y) * _2214) + ((_2189 * cbLight._m0[_2183].y) * _2212);
    float _2223 = ((_2179 * cbLight._m0[_2173].z) * _2214) + ((_2189 * cbLight._m0[_2183].z) * _2212);
    uvec4 _2227 = floatBitsToUint(cbLight._m0[_2156 + 12u]);
    bool _2229 = _2227.x == 0u;
    float _2240;
    float _2242;
    float _2244;
    if (_2229)
    {
        _2240 = _2221;
        _2242 = _2222;
        _2244 = _2223;
    }
    else
    {
        uint _2248 = _2156 + 6u;
        float _2264 = (dot(vec3(cbLight._m0[_2156 + 2u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2265 = _2264 * _2264;
        float _4436 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
        float _2266 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _2267 = isnan(1.0) ? _2171 : (isnan(_2171) ? 1.0 : min(_2171, 1.0));
        _2240 = (((cbLight._m0[_2248].x * 0.3183098733425140380859375) * _2266) * _2267) + _2221;
        _2242 = (((cbLight._m0[_2248].y * 0.3183098733425140380859375) * _2266) * _2267) + _2222;
        _2244 = (((cbLight._m0[_2248].z * 0.3183098733425140380859375) * _2266) * _2267) + _2223;
    }
    bool _2247 = _2227.y == 0u;
    float _2285;
    float _2287;
    float _2289;
    if (_2247)
    {
        _2285 = _2240;
        _2287 = _2242;
        _2289 = _2244;
    }
    else
    {
        uint _2455 = _2156 + 7u;
        float _2471 = (dot(vec3(cbLight._m0[_2156 + 3u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2472 = _2471 * _2471;
        float _4452 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
        float _2473 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _2474 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2285 = (((cbLight._m0[_2455].x * 0.3183098733425140380859375) * _2473) * _2474) + _2240;
        _2287 = (((cbLight._m0[_2455].y * 0.3183098733425140380859375) * _2473) * _2474) + _2242;
        _2289 = (((cbLight._m0[_2455].z * 0.3183098733425140380859375) * _2473) * _2474) + _2244;
    }
    uint _2292 = _2156 + 8u;
    float _2305 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2156].w)) * _954) * 0.949999988079071044921875);
    float _2306 = _2305 * _2305;
    float _2307 = cbLight._m0[_2156].x + _1030;
    float _2308 = cbLight._m0[_2156].y + _1031;
    float _2309 = cbLight._m0[_2156].z + _1032;
    float _2313 = inversesqrt(dot(vec3(_2307, _2308, _2309), vec3(_2307, _2308, _2309)));
    float _2314 = _2313 * _2307;
    float _2315 = _2313 * _2308;
    float _2316 = _2313 * _2309;
    float _2317 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2156].xyz));
    float _4468 = isnan(0.0) ? _2317 : (isnan(_2317) ? 0.0 : max(_2317, 0.0));
    float _2320 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
    float _4479 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    float _2321 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
    float _2322 = dot(vec3(_951, _952, _953), vec3(_2314, _2315, _2316));
    float _4490 = isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0));
    float _2325 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
    float _2326 = dot(vec3(cbLight._m0[_2156].xyz), vec3(_2314, _2315, _2316));
    float _4501 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
    float _2330 = _2306 * _2306;
    float _2334 = ((_2325 * _2325) * (_2330 + (-1.0))) + 1.0;
    float _2342 = exp2(log2(1.0 - (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)))) * 5.0);
    float _2343 = 0.959999978542327880859375 - _1097;
    float _2345 = 0.959999978542327880859375 - _1098;
    float _2346 = 0.959999978542327880859375 - _1099;
    float _2353 = 1.0 - _2306;
    float _2364 = (0.5 / (((_2321 * ((_2320 * _2353) + _2306)) + 9.9999999392252902907785028219223e-09) + (((_2321 * _2353) + _2306) * _2320))) * _2320;
    float _4512 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
    float _2366 = (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0))) * (_2330 / ((_2334 * _2334) * 3.141590118408203125));
    uint _2377 = _2156 + 9u;
    float _2388 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2193].w)) * _954) * 0.949999988079071044921875);
    float _2389 = _2388 * _2388;
    float _2390 = cbLight._m0[_2193].x + _1030;
    float _2391 = cbLight._m0[_2193].y + _1031;
    float _2392 = cbLight._m0[_2193].z + _1032;
    float _2396 = inversesqrt(dot(vec3(_2390, _2391, _2392), vec3(_2390, _2391, _2392)));
    float _2397 = _2396 * _2390;
    float _2398 = _2396 * _2391;
    float _2399 = _2396 * _2392;
    float _2400 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2193].xyz));
    float _4523 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2403 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _2404 = dot(vec3(_951, _952, _953), vec3(_2397, _2398, _2399));
    float _4534 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
    float _2407 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _2408 = dot(vec3(cbLight._m0[_2193].xyz), vec3(_2397, _2398, _2399));
    float _4545 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
    float _2412 = _2389 * _2389;
    float _2416 = ((_2407 * _2407) * (_2412 + (-1.0))) + 1.0;
    float _2423 = exp2(log2(1.0 - (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * 5.0);
    float _2430 = 1.0 - _2389;
    float _2440 = (0.5 / (((_2321 * ((_2403 * _2430) + _2389)) + 9.9999999392252902907785028219223e-09) + (((_2321 * _2430) + _2389) * _2403))) * _2403;
    float _4556 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
    float _2442 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_2412 / ((_2416 * _2416) * 3.141590118408203125));
    float _2452 = (((((_2423 * _2343) + _1100) * cbLight._m0[_2377].x) * _2442) * _2179) + (((((_2342 * _2343) + _1100) * cbLight._m0[_2292].x) * _2366) * _2189);
    float _2453 = (((((_2423 * _2345) + _1102) * cbLight._m0[_2377].y) * _2442) * _2179) + (((((_2342 * _2345) + _1102) * cbLight._m0[_2292].y) * _2366) * _2189);
    float _2454 = (((((_2423 * _2346) + _1103) * cbLight._m0[_2377].z) * _2442) * _2179) + (((((_2342 * _2346) + _1103) * cbLight._m0[_2292].z) * _2366) * _2189);
    float _2516;
    float _2518;
    float _2520;
    if (_2229)
    {
        _2516 = _2452;
        _2518 = _2453;
        _2520 = _2454;
    }
    else
    {
        uint _2522 = _2156 + 2u;
        uint _2526 = _2156 + 10u;
        float _2540 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2522].w)) * _954) * 0.949999988079071044921875);
        float _2541 = _2540 * _2540;
        float _2542 = cbLight._m0[_2522].x + _1030;
        float _2543 = cbLight._m0[_2522].y + _1031;
        float _2544 = cbLight._m0[_2522].z + _1032;
        float _2548 = inversesqrt(dot(vec3(_2542, _2543, _2544), vec3(_2542, _2543, _2544)));
        float _2549 = _2548 * _2542;
        float _2550 = _2548 * _2543;
        float _2551 = _2548 * _2544;
        float _2552 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2522].xyz));
        float _4567 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        float _2555 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _2556 = dot(vec3(_951, _952, _953), vec3(_2549, _2550, _2551));
        float _4578 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
        float _2559 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _2560 = dot(vec3(cbLight._m0[_2522].xyz), vec3(_2549, _2550, _2551));
        float _4589 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
        float _2564 = _2541 * _2541;
        float _2568 = ((_2559 * _2559) * (_2564 + (-1.0))) + 1.0;
        float _2575 = exp2(log2(1.0 - (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0)))) * 5.0);
        float _2582 = 1.0 - _2541;
        float _2592 = (0.5 / (((_2321 * ((_2555 * _2582) + _2541)) + 9.9999999392252902907785028219223e-09) + (((_2321 * _2582) + _2541) * _2555))) * _2555;
        float _4600 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2594 = (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * (_2564 / ((_2568 * _2568) * 3.141590118408203125));
        float _2595 = isnan(1.0) ? _2171 : (isnan(_2171) ? 1.0 : min(_2171, 1.0));
        _2516 = (((((_2575 * _2343) + _1100) * cbLight._m0[_2526].x) * _2594) * _2595) + _2452;
        _2518 = (((((_2575 * _2345) + _1102) * cbLight._m0[_2526].y) * _2594) * _2595) + _2453;
        _2520 = (((((_2575 * _2346) + _1103) * cbLight._m0[_2526].z) * _2594) * _2595) + _2454;
    }
    float _2630;
    float _2632;
    float _2634;
    if (_2247)
    {
        _2630 = _2516;
        _2632 = _2518;
        _2634 = _2520;
    }
    else
    {
        uint _2641 = _2156 + 3u;
        uint _2645 = _2156 + 11u;
        float _2659 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2641].w)) * _954) * 0.949999988079071044921875);
        float _2660 = _2659 * _2659;
        float _2661 = cbLight._m0[_2641].x + _1030;
        float _2662 = cbLight._m0[_2641].y + _1031;
        float _2663 = cbLight._m0[_2641].z + _1032;
        float _2667 = inversesqrt(dot(vec3(_2661, _2662, _2663), vec3(_2661, _2662, _2663)));
        float _2668 = _2667 * _2661;
        float _2669 = _2667 * _2662;
        float _2670 = _2667 * _2663;
        float _2671 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2641].xyz));
        float _4616 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
        float _2674 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _2675 = dot(vec3(_951, _952, _953), vec3(_2668, _2669, _2670));
        float _4627 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
        float _2678 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _2679 = dot(vec3(cbLight._m0[_2641].xyz), vec3(_2668, _2669, _2670));
        float _4638 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
        float _2683 = _2660 * _2660;
        float _2687 = ((_2678 * _2678) * (_2683 + (-1.0))) + 1.0;
        float _2694 = exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0);
        float _2701 = 1.0 - _2660;
        float _2711 = (0.5 / (((_2321 * ((_2674 * _2701) + _2660)) + 9.9999999392252902907785028219223e-09) + (((_2321 * _2701) + _2660) * _2674))) * _2674;
        float _4649 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
        float _2713 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2683 / ((_2687 * _2687) * 3.141590118408203125));
        float _2714 = isnan(1.0) ? _2172 : (isnan(_2172) ? 1.0 : min(_2172, 1.0));
        _2630 = (((((_2694 * _2343) + _1100) * cbLight._m0[_2645].x) * _2713) * _2714) + _2516;
        _2632 = (((((_2694 * _2345) + _1102) * cbLight._m0[_2645].y) * _2713) * _2714) + _2518;
        _2634 = (((((_2694 * _2346) + _1103) * cbLight._m0[_2645].z) * _2713) * _2714) + _2520;
    }
    float _2849;
    float _2851;
    float _2853;
    float _2855;
    float _2857;
    float _2859;
    if (_2154.y == 0u)
    {
        float _2789 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2790 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2789;
        float _2791 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2789;
        float _2792 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2789;
        uvec4 _2804 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2805 = _2804.x;
        uint _2816 = uint((float(_2804.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1039) / _2805))) + floor(float(uint(cbSceneParam._m0[85u].x * _1038) / _2805)));
        float _2826 = (log2(_2792 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2827 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        uint _2830 = uint(isnan(14.0) ? _2827 : (isnan(_2827) ? 14.0 : min(_2827, 14.0)));
        uvec4 _2835 = texelFetch(g_lightClusterGridBuffer, int(((_2830 << 2u) + (_2816 << 6u)) >> 2u));
        uint _2836 = _2835.x;
        uint _2837 = _2804.z;
        float _2937;
        float _2939;
        float _2941;
        float _2943;
        float _2945;
        float _2947;
        if (((((1u << ((_2837 >> 4u) & 15u)) + 4294967295u) & _2836) == 0u) || ((_2837 & 240u) == 0u))
        {
            _2937 = 0.0;
            _2939 = 0.0;
            _2941 = 0.0;
            _2943 = 0.0;
            _2945 = 0.0;
            _2947 = 0.0;
        }
        else
        {
            float _2938;
            float _2940;
            float _2942;
            float _2944;
            float _2946;
            float _2948;
            float _3082 = 0.0;
            float _3083 = 0.0;
            float _3084 = 0.0;
            float _3085 = 0.0;
            float _3086 = 0.0;
            float _3087 = 0.0;
            uint _3088 = 0u;
            uint _3097;
            bool _3098;
            for (;;)
            {
                _3097 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3088 << 2u)) >> 2u)).x;
                _3098 = _3097 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3098)
                {
                    frontier_phi_61_pred = _3082;
                    frontier_phi_61_pred_1 = _3087;
                    frontier_phi_61_pred_2 = _3086;
                    frontier_phi_61_pred_3 = _3085;
                    frontier_phi_61_pred_4 = _3084;
                    frontier_phi_61_pred_5 = _3083;
                }
                else
                {
                    float _3206;
                    float _3207;
                    float _3208;
                    float _3209;
                    float _3210;
                    float _3211;
                    uint _3212;
                    _3206 = _3082;
                    _3207 = _3083;
                    _3208 = _3084;
                    _3209 = _3085;
                    _3210 = _3086;
                    _3211 = _3087;
                    _3212 = _3097;
                    float _3138;
                    float _3139;
                    float _3140;
                    float _3141;
                    float _3142;
                    float _3143;
                    for (;;)
                    {
                        uint _3216 = uint(findLSB(_3212)) + (_3088 << 5u);
                        uint _3213 = (_3212 + 4294967295u) & _3212;
                        uint _3218 = _3216 * 48u;
                        vec4 _3232 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3218)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3218 + 3u)).x));
                        uint _3238 = (_3216 * 48u) + 4u;
                        vec4 _3251 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3238)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3238 + 3u)).x));
                        uint _3257 = (_3216 * 48u) + 8u;
                        vec3 _3268 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3257)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 2u)).x));
                        float _3272 = _3232.x - _2790;
                        float _3273 = _3232.y - _2791;
                        float _3274 = _3232.z - _2792;
                        float _3275 = dot(vec3(_3272, _3273, _3274), vec3(_3272, _3273, _3274));
                        float _3278 = inversesqrt(_3275);
                        float _3279 = _3278 * _3272;
                        float _3280 = _3278 * _3273;
                        float _3281 = _3278 * _3274;
                        float _3282 = dot(vec3(_1057, _1060, _1063), vec3(_3279, _3280, _3281));
                        float _3287 = 1.0 - (_3275 * _3232.w);
                        float _4675 = isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : max(_3287, 0.0));
                        float _3288 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
                        float _3289 = sqrt(_3275) * _3251.w;
                        float _3292 = 1.39999997615814208984375 / (_3289 + 1.39999997615814208984375);
                        float _3293 = _3292 * _3292;
                        float _3296 = ((1.0 - _3293) * _3282) + _3293;
                        float _3299 = _3289 * _3289;
                        float _3303 = ((isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0))) * _3288) / ((_3299 * 0.699999988079071044921875) + 1.0);
                        float _3307 = (-0.0) - _2790;
                        float _3308 = (-0.0) - _2791;
                        float _3309 = (-0.0) - _2792;
                        float _3313 = inversesqrt(dot(vec3(_3307, _3308, _3309), vec3(_3307, _3308, _3309)));
                        float _3314 = _3313 * _3307;
                        float _3315 = _3313 * _3308;
                        float _3316 = _3313 * _3309;
                        float _3324 = exp2(log2(1.0 / ((_3299 * 3.5) + 5.0)) * 0.25);
                        float _3325 = 1.0 - _1132;
                        float _3332 = sqrt(1.0 - ((1.0 - (_3325 * _3325)) * (1.0 - (_3324 * _3324))));
                        float _3333 = _3332 * _3332;
                        float _3334 = _3333 * _3333;
                        float _3335 = _3314 + _3279;
                        float _3336 = _3315 + _3280;
                        float _3337 = _3316 + _3281;
                        float _3341 = inversesqrt(dot(vec3(_3335, _3336, _3337), vec3(_3335, _3336, _3337)));
                        float _3345 = dot(vec3(_1057, _1060, _1063), vec3(_3314, _3315, _3316));
                        float _4691 = isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0));
                        float _3348 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
                        float _3349 = dot(vec3(_1057, _1060, _1063), vec3(_3341 * _3335, _3341 * _3336, _3341 * _3337));
                        float _4702 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0));
                        float _3352 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
                        float _3356 = ((_3352 * _3352) * (_3334 + (-1.0))) + 1.0;
                        float _3357 = _3292 * _3333;
                        float _3358 = _3357 * _3357;
                        float _3361 = ((1.0 - _3358) * _3282) + _3358;
                        float _4713 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0));
                        float _3362 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
                        float _3363 = 1.0 - _3333;
                        float _3373 = (0.5 / (((_3362 * ((_3348 * _3363) + _3333)) + 9.9999999392252902907785028219223e-09) + (((_3362 * _3363) + _3333) * _3348))) * _3362;
                        float _4724 = isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : max(_3373, 0.0));
                        float _3384 = (((_3334 * 3.1415927410125732421875) * (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0)))) / ((_3356 * _3356) * ((_3299 * 2.1991131305694580078125) + 3.141590118408203125))) * _3288;
                        _3141 = (_3303 * _3251.x) + _3209;
                        _3142 = (_3303 * _3251.y) + _3210;
                        _3143 = (_3303 * _3251.z) + _3211;
                        _3138 = (_3384 * _3268.x) + _3206;
                        _3139 = (_3384 * _3268.y) + _3207;
                        _3140 = (_3384 * _3268.z) + _3208;
                        if (_3213 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3206 = _3138;
                            _3207 = _3139;
                            _3208 = _3140;
                            _3209 = _3141;
                            _3210 = _3142;
                            _3211 = _3143;
                            _3212 = _3213;
                        }
                    }
                    frontier_phi_61_pred = _3138;
                    frontier_phi_61_pred_1 = _3143;
                    frontier_phi_61_pred_2 = _3142;
                    frontier_phi_61_pred_3 = _3141;
                    frontier_phi_61_pred_4 = _3140;
                    frontier_phi_61_pred_5 = _3139;
                }
                _2938 = frontier_phi_61_pred;
                _2948 = frontier_phi_61_pred_1;
                _2946 = frontier_phi_61_pred_2;
                _2944 = frontier_phi_61_pred_3;
                _2942 = frontier_phi_61_pred_4;
                _2940 = frontier_phi_61_pred_5;
                uint _3089 = _3088 + 1u;
                if (_3089 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3082 = _2938;
                    _3083 = _2940;
                    _3084 = _2942;
                    _3085 = _2944;
                    _3086 = _2946;
                    _3087 = _2948;
                    _3088 = _3089;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2937 = _2938;
            _2939 = _2940;
            _2941 = _2942;
            _2943 = _2944;
            _2945 = _2946;
            _2947 = _2948;
        }
        uvec4 _2951 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2952 = _2951.z;
        uint _2954 = (_2952 >> 8u) & 15u;
        float _3050;
        float _3052;
        float _3054;
        float _3056;
        float _3058;
        float _3060;
        if (((4294967295u << _2954) & _2836) == 0u)
        {
            _3050 = _2937;
            _3052 = _2939;
            _3054 = _2941;
            _3056 = _2943;
            _3058 = _2945;
            _3060 = _2947;
        }
        else
        {
            float _3075 = inversesqrt(dot(vec3(_2790, _2791, _2792), vec3(_2790, _2791, _2792)));
            float _3076 = _3075 * _2790;
            float _3077 = _3075 * _2791;
            float _3078 = _3075 * _2792;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2954 < ((_2952 >> 12u) & 15u))
            {
                float _3051;
                float _3053;
                float _3055;
                float _3057;
                float _3059;
                float _3061;
                float _3189 = _2937;
                float _3190 = _2939;
                float _3191 = _2941;
                float _3192 = _2943;
                float _3193 = _2945;
                float _3194 = _2947;
                uint _3195 = _2954;
                uint _3204;
                bool _3205;
                for (;;)
                {
                    _3204 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3195 << 2u)) >> 2u)).x;
                    _3205 = _3204 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3205)
                    {
                        frontier_phi_67_pred = _3192;
                        frontier_phi_67_pred_1 = _3193;
                        frontier_phi_67_pred_2 = _3194;
                        frontier_phi_67_pred_3 = _3191;
                        frontier_phi_67_pred_4 = _3190;
                        frontier_phi_67_pred_5 = _3189;
                    }
                    else
                    {
                        float _3389;
                        float _3390;
                        float _3391;
                        float _3392;
                        float _3393;
                        float _3394;
                        float _3682;
                        float _3683;
                        float _3684;
                        float _3685;
                        float _3686;
                        float _3687;
                        float _3402 = _3189;
                        float _3403 = _3190;
                        float _3404 = _3191;
                        float _3405 = _3192;
                        float _3406 = _3193;
                        float _3407 = _3194;
                        uint _3408 = _3204;
                        uint _3409;
                        vec4 _3434;
                        float _3435;
                        vec4 _3450;
                        vec3 _3462;
                        vec4 _3477;
                        vec4 _3492;
                        float _3538;
                        bool _3539;
                        for (;;)
                        {
                            uint _3419 = ((_3195 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3408));
                            _3409 = (_3408 + 4294967295u) & _3408;
                            uint _3421 = _3419 * 40u;
                            _3434 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3421)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 3u)).x));
                            _3435 = _3434.w;
                            uint _3437 = (_3419 * 40u) + 4u;
                            _3450 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3437)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 3u)).x));
                            uint _3452 = (_3419 * 40u) + 8u;
                            _3462 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3452)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 2u)).x));
                            uint _3464 = (_3419 * 40u) + 16u;
                            _3477 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3464)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3464 + 3u)).x));
                            uint _3479 = (_3419 * 40u) + 20u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            uint _3494 = (_3419 * 40u) + 24u;
                            vec4 _3507 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3494)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 3u)).x));
                            uint _3513 = (_3419 * 40u) + 28u;
                            vec4 _3526 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3513)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 3u)).x));
                            _3538 = fma(_2792, _3526.z, fma(_2791, _3526.y, _3526.x * _2790)) + _3526.w;
                            _3539 = !((fma(_2792, _3507.z, fma(_2791, _3507.y, _3507.x * _2790)) + _3507.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3539)
                            {
                                float _3566 = _3434.x - _2790;
                                float _3567 = _3434.y - _2791;
                                float _3568 = _3434.z - _2792;
                                float _3569 = dot(vec3(_3566, _3567, _3568), vec3(_3566, _3567, _3568));
                                float _3572 = inversesqrt(_3569);
                                float _3573 = _3572 * _3566;
                                float _3574 = _3572 * _3567;
                                float _3575 = _3572 * _3568;
                                float _3579 = 1.0 - (_3569 / (_3435 * _3435));
                                float _4735 = isnan(0.0) ? _3579 : (isnan(_3579) ? 0.0 : max(_3579, 0.0));
                                float _3580 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
                                float _3584 = sqrt(_3569) * _3450.w;
                                float _3586 = 1.39999997615814208984375 / (_3584 + 1.39999997615814208984375);
                                float _3587 = _3586 * _3586;
                                float _3590 = ((1.0 - _3587) * dot(vec3(_3573, _3574, _3575), vec3(_1057, _1060, _1063))) + _3587;
                                float _3593 = _3584 * _3584;
                                float _3597 = (fma(_2792, _3477.z, fma(_2791, _3477.y, _3477.x * _2790)) + _3477.w) / _3538;
                                float _3598 = (fma(_2792, _3492.z, fma(_2791, _3492.y, _3492.x * _2790)) + _3492.w) / _3538;
                                float _3602 = 1.0 - dot(vec2(_3597, _3598), vec2(_3597, _3598));
                                float _4751 = isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0));
                                float _3603 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
                                float _3604 = _3603 * (((isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0))) * _3580) / ((_3593 * 0.699999988079071044921875) + 1.0));
                                float _3616 = exp2(log2(1.0 / ((_3593 * 3.5) + 5.0)) * 0.25);
                                float _3617 = 1.0 - _1132;
                                float _3624 = sqrt(1.0 - ((1.0 - (_3617 * _3617)) * (1.0 - (_3616 * _3616))));
                                float _3625 = _3624 * _3624;
                                float _3626 = _3625 * _3625;
                                float _3627 = _3573 - _3076;
                                float _3628 = _3574 - _3077;
                                float _3629 = _3575 - _3078;
                                float _3633 = inversesqrt(dot(vec3(_3627, _3628, _3629), vec3(_3627, _3628, _3629)));
                                float _3637 = dot(vec3(_1057, _1060, _1063), vec3((-0.0) - _3076, (-0.0) - _3077, (-0.0) - _3078));
                                float _4762 = isnan(0.0) ? _3637 : (isnan(_3637) ? 0.0 : max(_3637, 0.0));
                                float _3640 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
                                float _3641 = dot(vec3(_1057, _1060, _1063), vec3(_3633 * _3627, _3633 * _3628, _3633 * _3629));
                                float _4773 = isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0));
                                float _3644 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
                                float _3648 = ((_3644 * _3644) * (_3626 + (-1.0))) + 1.0;
                                float _3649 = _3586 * _3625;
                                float _3650 = _3649 * _3649;
                                float _3656 = ((1.0 - _3650) * dot(vec3(_1057, _1060, _1063), vec3(_3573, _3574, _3575))) + _3650;
                                float _4784 = isnan(0.0) ? _3656 : (isnan(_3656) ? 0.0 : max(_3656, 0.0));
                                float _3657 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                                float _3658 = 1.0 - _3625;
                                float _3668 = (0.5 / (((_3657 * ((_3640 * _3658) + _3625)) + 9.9999999392252902907785028219223e-09) + (((_3657 * _3658) + _3625) * _3640))) * _3657;
                                float _4795 = isnan(0.0) ? _3668 : (isnan(_3668) ? 0.0 : max(_3668, 0.0));
                                float _3678 = (_3603 * _3580) * (((_3626 * 3.1415927410125732421875) * (isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0)))) / ((_3648 * _3648) * ((_3593 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3678 * _3462.x;
                                frontier_phi_73_pred_1 = _3678 * _3462.y;
                                frontier_phi_73_pred_2 = _3604 * _3450.z;
                                frontier_phi_73_pred_3 = _3604 * _3450.y;
                                frontier_phi_73_pred_4 = _3604 * _3450.x;
                                frontier_phi_73_pred_5 = _3678 * _3462.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3682 = frontier_phi_73_pred;
                            _3683 = frontier_phi_73_pred_1;
                            _3687 = frontier_phi_73_pred_2;
                            _3686 = frontier_phi_73_pred_3;
                            _3685 = frontier_phi_73_pred_4;
                            _3684 = frontier_phi_73_pred_5;
                            _3392 = _3685 + _3405;
                            _3393 = _3686 + _3406;
                            _3394 = _3687 + _3407;
                            _3389 = _3682 + _3402;
                            _3390 = _3683 + _3403;
                            _3391 = _3684 + _3404;
                            if (_3409 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3402 = _3389;
                                _3403 = _3390;
                                _3404 = _3391;
                                _3405 = _3392;
                                _3406 = _3393;
                                _3407 = _3394;
                                _3408 = _3409;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3392;
                        frontier_phi_67_pred_1 = _3393;
                        frontier_phi_67_pred_2 = _3394;
                        frontier_phi_67_pred_3 = _3391;
                        frontier_phi_67_pred_4 = _3390;
                        frontier_phi_67_pred_5 = _3389;
                    }
                    _3057 = frontier_phi_67_pred;
                    _3059 = frontier_phi_67_pred_1;
                    _3061 = frontier_phi_67_pred_2;
                    _3055 = frontier_phi_67_pred_3;
                    _3053 = frontier_phi_67_pred_4;
                    _3051 = frontier_phi_67_pred_5;
                    uint _3196 = _3195 + 1u;
                    if (_3196 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3189 = _3051;
                        _3190 = _3053;
                        _3191 = _3055;
                        _3192 = _3057;
                        _3193 = _3059;
                        _3194 = _3061;
                        _3195 = _3196;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3059;
                frontier_phi_55_56_ladder_1 = _3061;
                frontier_phi_55_56_ladder_2 = _3057;
                frontier_phi_55_56_ladder_3 = _3055;
                frontier_phi_55_56_ladder_4 = _3053;
                frontier_phi_55_56_ladder_5 = _3051;
            }
            else
            {
                frontier_phi_55_56_ladder = _2945;
                frontier_phi_55_56_ladder_1 = _2947;
                frontier_phi_55_56_ladder_2 = _2943;
                frontier_phi_55_56_ladder_3 = _2941;
                frontier_phi_55_56_ladder_4 = _2939;
                frontier_phi_55_56_ladder_5 = _2937;
            }
            _3050 = frontier_phi_55_56_ladder_5;
            _3052 = frontier_phi_55_56_ladder_4;
            _3054 = frontier_phi_55_56_ladder_3;
            _3056 = frontier_phi_55_56_ladder_2;
            _3058 = frontier_phi_55_56_ladder;
            _3060 = frontier_phi_55_56_ladder_1;
        }
        float _3065 = isnan(1.0) ? _1116 : (isnan(_1116) ? 1.0 : min(_1116, 1.0));
        _2849 = (_3065 * _3056) + _2285;
        _2851 = (_3065 * _3058) + _2287;
        _2853 = (_3065 * _3060) + _2289;
        _2855 = ((_3050 * _1100) * _3065) + _2630;
        _2857 = ((_3052 * _1102) * _3065) + _2632;
        _2859 = ((_3054 * _1103) * _3065) + _2634;
    }
    else
    {
        _2849 = _2285;
        _2851 = _2287;
        _2853 = _2289;
        _2855 = _2630;
        _2857 = _2632;
        _2859 = _2634;
    }
    float _4811 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    float _4822 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _4833 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    uint _2879 = _287 + 6u;
    float _2887 = _1038 / cbSceneParam._m0[86u].x;
    float _2888 = _1039 / cbSceneParam._m0[86u].y;
    vec4 _2902 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2887, _2888, (log2((isnan(cbSceneParam._m0[77u].w) ? _973 : (isnan(_973) ? cbSceneParam._m0[77u].w : min(_973, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2904 = _2902.x;
    float _2905 = _2902.y;
    float _2906 = _2902.z;
    float _2907 = _2902.w;
    float _3000;
    float _3002;
    float _3004;
    float _3006;
    if (_973 > cbSceneParam._m0[78u].w)
    {
        float _2962 = isnan(_973) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _973 : min(cbSceneParam._m0[80u].w, _973));
        float _2963 = _2962 / _973;
        float _2974 = _2963 * _1023;
        float _2975 = _1024 * _2963;
        float _2976 = (-0.0) - _2975;
        float _2978 = _2963 * _1025;
        float _2980 = (cbSceneParam._m0[77u].w * _2976) / _2962;
        float _2981 = _2980 + cbSceneParam._m0[79u].w;
        float _2982 = cbSceneParam._m0[79u].w - _2975;
        float _2988 = sqrt(((_2974 * _2974) + (_2975 * _2975)) + (_2978 * _2978));
        float _2991 = (1.0 - (cbSceneParam._m0[77u].w / _2962)) * _2988;
        float _2996 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2998 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3151;
        if (abs((_2976 - _2980) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3151 = ((((_2981 > 0.0) ? exp2(_2996 * _2981) : (2.0 - exp2(_2998 * _2981))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2991;
        }
        else
        {
            float _3111 = 1.0 / cbSceneParam._m0[80u].x;
            float _3112 = isnan(_2982) ? _2981 : (isnan(_2981) ? _2982 : max(_2981, _2982));
            float _3113 = isnan(_2982) ? _2981 : (isnan(_2981) ? _2982 : min(_2981, _2982));
            float _3122 = isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : min(_3112, 0.0));
            float _3123 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : min(_3113, 0.0));
            _3151 = ((abs(_2988 / _2976) * cbSceneParam._m0[80u].y) * ((((_3122 - _3123) * 2.0) - ((exp2(_2996 * (isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : max(_3112, 0.0)))) - exp2(_2996 * (isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0))))) * _3111)) - ((exp2(_2998 * _3122) - exp2(_2998 * _3123)) * _3111))) + (_2991 * cbSceneParam._m0[80u].z);
        }
        vec4 _3153 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2887, _2888, 1.0), 0.0);
        float _3162 = exp2((_3151 * (-1.44269502162933349609375)) * (1.0 - _3153.w));
        float _3163 = log2(_3162);
        float _3179 = log2(_2907);
        _3000 = (exp2(_3179 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].x)) * _3153.x) / cbSceneParam._m0[78u].x)) + _2904;
        _3002 = (exp2(_3179 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].y)) * _3153.y) / cbSceneParam._m0[78u].y)) + _2905;
        _3004 = (exp2(_3179 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3163 * cbSceneParam._m0[78u].z)) * _3153.z) / cbSceneParam._m0[78u].z)) + _2906;
        _3006 = _3162 * _2907;
    }
    else
    {
        _3000 = _2904;
        _3002 = _2905;
        _3004 = _2906;
        _3006 = _2907;
    }
    float _3018 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3019 = _3018 == 3.0;
    float _3020 = log2(_3006);
    float _3027 = exp2(_3020 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (_2849 + ((isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))) * _1116))) + ((_2855 + ((isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3028 = exp2(_3020 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_2851 + ((isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))) * _1116))) + ((_2857 + ((isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3029 = exp2(_3020 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0))) * (_2853 + ((isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0))) * _1116))) + ((_2859 + ((isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3038 = (_3018 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3038 * (_3019 ? _3027 : (_3027 + (cbSceneParam._m0[72u].w * _3000)));
    SV_Target.y = _3038 * (_3019 ? _3028 : (_3028 + (cbSceneParam._m0[72u].w * _3002)));
    SV_Target.z = _3038 * (_3019 ? _3029 : (_3029 + (cbSceneParam._m0[72u].w * _3004)));
    SV_Target.w = cbInstanceData._m0[_2879].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2879].w;
}


