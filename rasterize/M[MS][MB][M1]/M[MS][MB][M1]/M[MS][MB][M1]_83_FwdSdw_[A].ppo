#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1241;
float _3905;
float _3906;
float _3907;
float _3908;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _248 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _248 + 1u;
    uint _258 = _248 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _289 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _289.x * cbMtdParam._m0[11u].x;
    float _296 = _289.y * cbMtdParam._m0[11u].y;
    float _297 = _289.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _354 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _356 = _354.x;
    float _368 = dot(vec4(_356, _354.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _385 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_356 - _368) * cbMtdParam._m0[24u].y) + _368) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3917 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
    float _393 = (_386 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295;
    float _394 = (_386 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296;
    float _395 = (_386 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297;
    vec4 _413 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _268) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _269) + cbTextureTilingScale._m0[20u].w));
    vec4 _438 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _455 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _457 = _455.x;
    float _458 = _455.y;
    float _459 = _455.z;
    float _468 = ((_438.z - _459) * _386) + _459;
    float _471 = ((((_438.x - _457) * _386) + _457) * 2.0) + (-1.0);
    float _472 = ((((_438.y - _458) * _386) + _458) * 2.0) + (-1.0);
    float _473 = dot(vec2(_471, _472), vec2(_471, _472));
    float _3928 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _478 = sqrt(1.0 - (isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0))));
    vec4 _491 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _509 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _511 = _509.x;
    float _512 = 1.0 - _511;
    float _525 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_511 - _512) * cbMtdParam._m0[24u].z) + _512) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3939 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
    float _526 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    float _533 = (_526 * (cbMtdParam._m0[17u].x - _393)) + _393;
    float _534 = (_526 * (cbMtdParam._m0[17u].y - _394)) + _394;
    float _535 = (_526 * (cbMtdParam._m0[17u].z - _395)) + _395;
    vec4 _547 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _561 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _563 = _561.x;
    float _581 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _268) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _269) + cbTextureTilingScale._m0[9u].w)).x - _563) * _386) + _563;
    float _585 = ((_547.x - _581) * cbMtdParam._m0[19u].z) + _581;
    float _587 = _585 - (_585 * _526);
    float _592 = (((_413.z - _468) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _468;
    vec4 _605 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _612 = (_605.x * 2.0) + (-1.0);
    float _613 = (_605.y * 2.0) + (-1.0);
    float _614 = dot(vec2(_612, _613), vec2(_612, _613));
    float _3950 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _622 = (_526 * (_605.z - _592)) + _592;
    float _627 = _471 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_413.x * 2.0) + (-1.0)));
    float _628 = _472 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_413.y * 2.0) + (-1.0)));
    float _640 = (((_612 - _627) + (cbMtdParam._m0[21u].x * _627)) * _526) + _627;
    float _641 = (((_613 - _628) + (cbMtdParam._m0[21u].x * _628)) * _526) + _628;
    float _642 = (_526 * (sqrt(1.0 - (isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0)))) - _478)) + _478;
    float _647 = cbMtdParam._m0[22u].x + _491.w;
    float _650 = fma(_642, _235 * NORMAL.x, fma(_641, _242 * TANGENT.x, (_228 * _220) * _640));
    float _653 = fma(_642, _235 * NORMAL.y, fma(_641, _242 * TANGENT.y, (_228 * _221) * _640));
    float _656 = fma(_642, _235 * NORMAL.z, fma(_641, _242 * TANGENT.z, (_228 * _222) * _640));
    float _660 = inversesqrt(dot(vec3(_650, _653, _656), vec3(_650, _653, _656)));
    float _661 = _660 * _650;
    float _662 = _660 * _653;
    float _663 = _660 * _656;
    float _3961 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _664 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
    float _3972 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _3983 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _3994 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _4005 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _4016 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _669 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
    float _683 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _724 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _734 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _724);
    float _735 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _724);
    float _736 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _724);
    float _740 = inversesqrt(dot(vec3(_734, _735, _736), vec3(_734, _735, _736)));
    float _741 = _734 * _740;
    float _742 = _735 * _740;
    float _743 = _736 * _740;
    vec4 _748 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _750 = _748.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _922 = sqrt(((_734 * _734) + (_735 * _735)) + (_736 * _736));
        float _928 = (cbMatDynParam._m0[5u].x * _922) + cbMatDynParam._m0[5u].y;
        float _4027 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _929 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
        float _933 = (cbMatDynParam._m0[5u].z * _922) + cbMatDynParam._m0[5u].w;
        float _4038 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))) - _929)) + _929) < ((_750 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _761 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _762 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _780 = fma(_663, cbSceneParam._m0[5u].z, fma(_662, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _661));
    float _783 = fma(_663, cbSceneParam._m0[6u].z, fma(_662, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _661));
    float _786 = fma(_663, cbSceneParam._m0[7u].z, fma(_662, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _661));
    uint _799 = _248 + 9u;
    uint _800 = _799 + uint(cbMatDynParam._m0[0u].w);
    float _806 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) * cbInstanceData._m0[_800].x;
    float _807 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0)))) * cbInstanceData._m0[_800].y;
    float _808 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0)))) * cbInstanceData._m0[_800].z;
    float _4049 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _809 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
    float _4060 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _810 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
    float _4071 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _811 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
    float _812 = 1.0 - _669;
    float _813 = _809 * _812;
    float _814 = _810 * _812;
    float _815 = _811 * _812;
    float _820 = (_809 + (-0.039999999105930328369140625)) * _669;
    float _821 = (_810 + (-0.039999999105930328369140625)) * _669;
    float _822 = (_811 + (-0.039999999105930328369140625)) * _669;
    float _823 = _820 + 0.039999999105930328369140625;
    float _825 = _821 + 0.039999999105930328369140625;
    float _826 = _822 + 0.039999999105930328369140625;
    vec4 _835 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _761, cbSceneParam._m0[86u].y * _762));
    float _839 = ((isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))) * TEXCOORD_5.w) * _835.x;
    float _840 = dot(vec3(_661, _662, _663), vec3(_741, _742, _743));
    float _843 = _840 * 2.0;
    float _847 = (_843 * _661) - _741;
    float _848 = (_843 * _662) - _742;
    float _849 = (_843 * _663) - _743;
    float _853 = abs(dot(vec3(_741, _742, _743), vec3(_661, _662, _663)));
    float _4082 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _855 = sqrt(_664);
    float _868 = exp2((_855 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_855 * 3.0));
    float _874 = (1.0 - _868) * ((_855 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _875 = _868 * _855;
    float _903 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _907 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _911 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1240;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _965 = fma(_911, cbModelParam._m0[26u].z, fma(_907, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _903));
        float _969 = fma(_911, cbModelParam._m0[27u].z, fma(_907, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _903));
        float _973 = fma(_911, cbModelParam._m0[28u].z, fma(_907, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _903));
        float _998 = _903 + _661;
        float _999 = _907 + _662;
        float _1000 = _911 + _663;
        float _1010 = fma(_1000, cbModelParam._m0[26u].z, fma(_999, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _998)) - _965;
        float _1011 = fma(_1000, cbModelParam._m0[27u].z, fma(_999, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _998)) - _969;
        float _1012 = fma(_1000, cbModelParam._m0[28u].z, fma(_999, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _998)) - _973;
        float _1016 = inversesqrt(dot(vec3(_1010, _1011, _1012), vec3(_1010, _1011, _1012)));
        float _1029 = ((_1016 * _1010) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_965 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1030 = ((_1016 * _1011) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_969 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1031 = ((_1016 * _1012) / cbModelParam._m0[34u].z) + ((((((_973 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1029, _1030, _1031), 0.0);
        float _1068 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1034.x + (-0.5));
        float _1070 = _1068 * (_1034.y + (-0.5));
        float _1071 = _1068 * (_1034.z + (-0.5));
        float _1078 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1041.x + (-0.5));
        float _1080 = _1078 * (_1041.y + (-0.5));
        float _1081 = _1078 * (_1041.z + (-0.5));
        float _1088 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1089 = _1088 * (_1048.x + (-0.5));
        float _1090 = _1088 * (_1048.y + (-0.5));
        float _1091 = _1088 * (_1048.z + (-0.5));
        float _1098 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1099 = _1098 * (_1055.x + (-0.5));
        float _1100 = _1098 * (_1055.y + (-0.5));
        float _1101 = _1098 * (_1055.z + (-0.5));
        float _1102 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1103 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1104 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1105 = _1069 * 0.5;
        float _1106 = _1079 * 0.5;
        float _1107 = _1089 * 0.5;
        float _1108 = dot(vec3(_1105, _1106, _1107), vec3(_1105, _1106, _1107));
        float _1113 = (_1108 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1108);
        float _1122 = (dot(vec3(_661, _662, _663), vec3(_1113 * _1105, _1113 * _1106, _1113 * _1107)) + 1.0) * 0.5;
        float _4108 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1132 = sqrt(((_1106 * _1106) + (_1105 * _1105)) + (_1107 * _1107)) / (_1102 + 9.9999997473787516355514526367188e-06);
        float _4119 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1133 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
        float _1134 = _1133 * 2.0;
        float _1138 = (1.0 - _1133) / (_1133 + 1.0);
        float _4130 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1139 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
        float _1148 = ((((1.0 - _1139) * (_1134 + 2.0)) * exp2(log2(isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) * (_1134 + 1.0))) + _1139) * _1102;
        float _1149 = _1070 * 0.5;
        float _1150 = _1080 * 0.5;
        float _1151 = _1090 * 0.5;
        float _1152 = dot(vec3(_1149, _1150, _1151), vec3(_1149, _1150, _1151));
        float _1157 = (_1152 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1152);
        float _1165 = (dot(vec3(_661, _662, _663), vec3(_1157 * _1149, _1157 * _1150, _1157 * _1151)) + 1.0) * 0.5;
        float _4141 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1174 = sqrt(((_1150 * _1150) + (_1149 * _1149)) + (_1151 * _1151)) / (_1103 + 9.9999997473787516355514526367188e-06);
        float _4152 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1175 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1176 = _1175 * 2.0;
        float _1180 = (1.0 - _1175) / (_1175 + 1.0);
        float _4163 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
        float _1181 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1190 = ((((1.0 - _1181) * (_1176 + 2.0)) * exp2(log2(isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0))) * (_1176 + 1.0))) + _1181) * _1103;
        float _1191 = _1071 * 0.5;
        float _1192 = _1081 * 0.5;
        float _1193 = _1091 * 0.5;
        float _1194 = dot(vec3(_1191, _1192, _1193), vec3(_1191, _1192, _1193));
        float _1199 = (_1194 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1194);
        float _1207 = (dot(vec3(_661, _662, _663), vec3(_1199 * _1191, _1199 * _1192, _1199 * _1193)) + 1.0) * 0.5;
        float _4174 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1216 = sqrt(((_1192 * _1192) + (_1191 * _1191)) + (_1193 * _1193)) / (_1104 + 9.9999997473787516355514526367188e-06);
        float _4185 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1217 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
        float _1218 = _1217 * 2.0;
        float _1222 = (1.0 - _1217) / (_1217 + 1.0);
        float _4196 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1223 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _1232 = ((((1.0 - _1223) * (_1218 + 2.0)) * exp2(log2(isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0))) * (_1218 + 1.0))) + _1223) * _1104;
        _1240 = _1071;
        _1242 = _1070;
        _1243 = _1069;
        _1244 = _1081;
        _1245 = _1080;
        _1246 = _1079;
        _1247 = _1091;
        _1248 = _1090;
        _1249 = _1089;
        _1250 = _1104;
        _1251 = _1103;
        _1252 = _1102;
        _1253 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0)));
        _1254 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0)));
        _1255 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0)));
    }
    else
    {
        _1240 = _1241;
        _1242 = _1241;
        _1243 = _1241;
        _1244 = _1241;
        _1245 = _1241;
        _1246 = _1241;
        _1247 = _1241;
        _1248 = _1241;
        _1249 = _1241;
        _1250 = _1241;
        _1251 = _1241;
        _1252 = _1241;
        _1253 = 0.0;
        _1254 = 0.0;
        _1255 = 0.0;
    }
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1283 = fma(_911, cbModelParam._m0[30u].z, fma(_907, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _903));
        float _1287 = fma(_911, cbModelParam._m0[31u].z, fma(_907, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _903));
        float _1291 = fma(_911, cbModelParam._m0[32u].z, fma(_907, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _903));
        float _1314 = _903 + _661;
        float _1315 = _907 + _662;
        float _1316 = _911 + _663;
        float _1326 = fma(_1316, cbModelParam._m0[30u].z, fma(_1315, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1314)) - _1283;
        float _1327 = fma(_1316, cbModelParam._m0[31u].z, fma(_1315, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1314)) - _1287;
        float _1328 = fma(_1316, cbModelParam._m0[32u].z, fma(_1315, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1314)) - _1291;
        float _1332 = inversesqrt(dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328)));
        float _1345 = ((_1332 * _1326) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1283 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1346 = ((_1332 * _1327) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1287 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1347 = ((_1332 * _1328) / cbModelParam._m0[35u].z) + ((((((_1291 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1349 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1345, _1346, _1347), 0.0);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1345, _1346, _1347), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1345, _1346, _1347), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1345, _1346, _1347), 0.0);
        float _1382 = exp2((_1349.w + (-0.5)) * 20.0) * 2.0;
        float _1383 = _1382 * (_1349.x + (-0.5));
        float _1384 = _1382 * (_1349.y + (-0.5));
        float _1385 = _1382 * (_1349.z + (-0.5));
        float _1392 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1356.x + (-0.5));
        float _1394 = _1392 * (_1356.y + (-0.5));
        float _1395 = _1392 * (_1356.z + (-0.5));
        float _1402 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1403 = _1402 * (_1363.x + (-0.5));
        float _1404 = _1402 * (_1363.y + (-0.5));
        float _1405 = _1402 * (_1363.z + (-0.5));
        float _1412 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1413 = _1412 * (_1370.x + (-0.5));
        float _1414 = _1412 * (_1370.y + (-0.5));
        float _1415 = _1412 * (_1370.z + (-0.5));
        float _1416 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1418 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1419 = _1383 * 0.5;
        float _1420 = _1393 * 0.5;
        float _1421 = _1403 * 0.5;
        float _1422 = dot(vec3(_1419, _1420, _1421), vec3(_1419, _1420, _1421));
        float _1427 = (_1422 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1422);
        float _1435 = (dot(vec3(_661, _662, _663), vec3(_1427 * _1419, _1427 * _1420, _1427 * _1421)) + 1.0) * 0.5;
        float _4237 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1444 = sqrt(((_1420 * _1420) + (_1419 * _1419)) + (_1421 * _1421)) / (_1416 + 9.9999997473787516355514526367188e-06);
        float _4248 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1445 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1446 = _1445 * 2.0;
        float _1450 = (1.0 - _1445) / (_1445 + 1.0);
        float _4259 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _1460 = ((((1.0 - _1451) * (_1446 + 2.0)) * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * (_1446 + 1.0))) + _1451) * _1416;
        float _1461 = _1384 * 0.5;
        float _1462 = _1394 * 0.5;
        float _1463 = _1404 * 0.5;
        float _1464 = dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463));
        float _1469 = (_1464 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1464);
        float _1477 = (dot(vec3(_661, _662, _663), vec3(_1469 * _1461, _1469 * _1462, _1469 * _1463)) + 1.0) * 0.5;
        float _4270 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1486 = sqrt(((_1462 * _1462) + (_1461 * _1461)) + (_1463 * _1463)) / (_1417 + 9.9999997473787516355514526367188e-06);
        float _4281 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1487 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1488 = _1487 * 2.0;
        float _1492 = (1.0 - _1487) / (_1487 + 1.0);
        float _4292 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _1502 = ((((1.0 - _1493) * (_1488 + 2.0)) * exp2(log2(isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * (_1488 + 1.0))) + _1493) * _1417;
        float _1503 = _1385 * 0.5;
        float _1504 = _1395 * 0.5;
        float _1505 = _1405 * 0.5;
        float _1506 = dot(vec3(_1503, _1504, _1505), vec3(_1503, _1504, _1505));
        float _1511 = (_1506 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1506);
        float _1519 = (dot(vec3(_661, _662, _663), vec3(_1511 * _1503, _1511 * _1504, _1511 * _1505)) + 1.0) * 0.5;
        float _4303 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1528 = sqrt(((_1504 * _1504) + (_1503 * _1503)) + (_1505 * _1505)) / (_1418 + 9.9999997473787516355514526367188e-06);
        float _4314 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
        float _1529 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1530 = _1529 * 2.0;
        float _1534 = (1.0 - _1529) / (_1529 + 1.0);
        float _4325 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1544 = ((((1.0 - _1535) * (_1530 + 2.0)) * exp2(log2(isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_1530 + 1.0))) + _1535) * _1418;
        _1552 = _1385;
        _1553 = _1384;
        _1554 = _1383;
        _1555 = _1395;
        _1556 = _1394;
        _1557 = _1393;
        _1558 = _1405;
        _1559 = _1404;
        _1560 = _1403;
        _1561 = _1418;
        _1562 = _1417;
        _1563 = _1416;
        _1564 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0)));
        _1565 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0)));
        _1566 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0)));
    }
    else
    {
        _1552 = _1241;
        _1553 = _1241;
        _1554 = _1241;
        _1555 = _1241;
        _1556 = _1241;
        _1557 = _1241;
        _1558 = _1241;
        _1559 = _1241;
        _1560 = _1241;
        _1561 = _1241;
        _1562 = _1241;
        _1563 = _1241;
        _1564 = 0.0;
        _1565 = 0.0;
        _1566 = 0.0;
    }
    float _1576 = (cbModelParam._m0[1u].x * (_1564 - _1253)) + _1253;
    float _1577 = (cbModelParam._m0[1u].x * (_1565 - _1254)) + _1254;
    float _1578 = (cbModelParam._m0[1u].x * (_1566 - _1255)) + _1255;
    float _1599 = fma(_1578, cbSceneParam._m0[89u].z, fma(_1577, cbSceneParam._m0[89u].y, _1576 * cbSceneParam._m0[89u].x));
    float _1602 = fma(_1578, cbSceneParam._m0[90u].z, fma(_1577, cbSceneParam._m0[90u].y, _1576 * cbSceneParam._m0[90u].x));
    float _1605 = fma(_1578, cbSceneParam._m0[91u].z, fma(_1577, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1576));
    float _1620 = _847 * 0.5;
    float _1621 = _848 * 0.5;
    float _1622 = _849 * 0.5;
    float _1623 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1554, _1557, _1560, _1563));
    float _1626 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1553, _1556, _1559, _1562));
    float _1629 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1552, _1555, _1558, _1561));
    float _1663;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1636 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1240, _1244, _1247, _1250));
        float _1640 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1242, _1245, _1248, _1251));
        float _1644 = dot(vec4(_1620, _1621, _1622, 1.0), vec4(_1243, _1246, _1249, _1252));
        float _1651 = dot(vec4(cbModelParam._m0[39u]), vec4(_1620, _1621, _1622, 1.0));
        _1663 = dot(vec3(isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0)), isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0)), isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1651) ? 0.0 : (isnan(0.0) ? _1651 : max(0.0, _1651))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1663 = 1.0;
    }
    float _1674;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1665 = dot(vec4(cbModelParam._m0[40u]), vec4(_1620, _1621, _1622, 1.0));
        _1674 = dot(vec3(isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0)), isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)), isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1665) ? 0.0 : (isnan(0.0) ? _1665 : max(0.0, _1665))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1674 = 1.0;
    }
    float _1678 = (_1674 * cbModelParam._m0[1u].x) + (_1663 * (1.0 - cbModelParam._m0[1u].x));
    float _1688 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _664);
    float _1689 = isnan(_1688) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1688 : min(cbModelParam._m0[25u].z, _1688));
    float _1770;
    float _1772;
    float _1774;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1737 = fma(_911, cbModelParam._m0[13u].z, fma(_907, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _903)) + cbModelParam._m0[13u].w;
        float _1741 = fma(_911, cbModelParam._m0[14u].z, fma(_907, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _903)) + cbModelParam._m0[14u].w;
        float _1745 = fma(_911, cbModelParam._m0[15u].z, fma(_907, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _903)) + cbModelParam._m0[15u].w;
        float _1748 = fma(_849, cbModelParam._m0[13u].z, fma(_848, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _847));
        float _1751 = fma(_849, cbModelParam._m0[14u].z, fma(_848, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _847));
        float _1754 = fma(_849, cbModelParam._m0[15u].z, fma(_848, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _847));
        float _1782;
        if (_1748 > 0.0)
        {
            _1782 = abs((1.0 - _1737) / _1748);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1748 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1737 + 1.0) / _1748);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1782 = frontier_phi_17_15_ladder;
        }
        float _1954;
        if (_1751 > 0.0)
        {
            _1954 = abs((1.0 - _1741) / _1751);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1741 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1954 = frontier_phi_26_22_ladder;
        }
        float _2249;
        if (_1754 > 0.0)
        {
            _2249 = abs((1.0 - _1745) / _1754);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1745 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2249 = frontier_phi_38_33_ladder;
        }
        float _2251 = isnan(_1954) ? _1782 : (isnan(_1782) ? _1954 : min(_1782, _1954));
        float _2252 = isnan(_2249) ? _2251 : (isnan(_2251) ? _2249 : min(_2251, _2249));
        float _2256 = (_2252 * _1748) + _1737;
        float _2257 = (_2252 * _1751) + _1741;
        float _2258 = (_2252 * _1754) + _1745;
        float _2259 = _2252 * 9.9999997473787516355514526367188e-05;
        float _2261 = (-1.0) - _2259;
        float _2263 = _2259 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2258 > _2263) || ((_2258 < _2261) || ((_2257 > _2263) || ((_2257 < _2261) || ((_2256 < _2261) || (_2256 > _2263))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2403 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2258, cbModelParam._m0[9u].z, fma(_2257, cbModelParam._m0[9u].y, _2256 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2258, cbModelParam._m0[10u].z, fma(_2257, cbModelParam._m0[10u].y, _2256 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2258, cbModelParam._m0[11u].z, fma(_2257, cbModelParam._m0[11u].y, _2256 * cbModelParam._m0[11u].x))), _1689);
            frontier_phi_16_38_ladder = _2403.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2403.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2403.x * cbModelParam._m0[1u].y;
        }
        _1770 = frontier_phi_16_38_ladder_2;
        _1772 = frontier_phi_16_38_ladder_1;
        _1774 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1758 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_847, _848, _849), _1689);
        _1770 = _1758.x * cbModelParam._m0[1u].y;
        _1772 = _1758.y * cbModelParam._m0[1u].y;
        _1774 = _1758.z * cbModelParam._m0[1u].y;
    }
    float _1778 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _664);
    float _1779 = isnan(_1778) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1778 : min(cbModelParam._m0[25u].w, _1778));
    float _1869;
    float _1871;
    float _1873;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1833 = fma(_911, cbModelParam._m0[21u].z, fma(_907, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _903)) + cbModelParam._m0[21u].w;
        float _1837 = fma(_911, cbModelParam._m0[22u].z, fma(_907, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _903)) + cbModelParam._m0[22u].w;
        float _1841 = fma(_911, cbModelParam._m0[23u].z, fma(_907, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _903)) + cbModelParam._m0[23u].w;
        float _1844 = fma(_849, cbModelParam._m0[21u].z, fma(_848, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _847));
        float _1847 = fma(_849, cbModelParam._m0[22u].z, fma(_848, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _847));
        float _1850 = fma(_849, cbModelParam._m0[23u].z, fma(_848, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _847));
        float _1959;
        if (_1844 > 0.0)
        {
            _1959 = abs((1.0 - _1833) / _1844);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1833 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1959 = frontier_phi_28_24_ladder;
        }
        float _2276;
        if (_1847 > 0.0)
        {
            _2276 = abs((1.0 - _1837) / _1847);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1837 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2276 = frontier_phi_40_35_ladder;
        }
        float _2614;
        if (_1850 > 0.0)
        {
            _2614 = abs((1.0 - _1841) / _1850);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1841 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2614 = frontier_phi_50_47_ladder;
        }
        float _2616 = isnan(_2276) ? _1959 : (isnan(_1959) ? _2276 : min(_1959, _2276));
        float _2617 = isnan(_2614) ? _2616 : (isnan(_2616) ? _2614 : min(_2616, _2614));
        float _2621 = (_2617 * _1844) + _1833;
        float _2622 = (_2617 * _1847) + _1837;
        float _2623 = (_2617 * _1850) + _1841;
        float _2624 = _2617 * 9.9999997473787516355514526367188e-05;
        float _2625 = (-1.0) - _2624;
        float _2627 = _2624 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2623 > _2627) || ((_2623 < _2625) || ((_2622 > _2627) || ((_2622 < _2625) || ((_2621 < _2625) || (_2621 > _2627))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2745 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2623, cbModelParam._m0[17u].z, fma(_2622, cbModelParam._m0[17u].y, _2621 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2623, cbModelParam._m0[18u].z, fma(_2622, cbModelParam._m0[18u].y, _2621 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2623, cbModelParam._m0[19u].z, fma(_2622, cbModelParam._m0[19u].y, _2621 * cbModelParam._m0[19u].x))), _1779);
            frontier_phi_25_50_ladder = _2745.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2745.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2745.x * cbModelParam._m0[1u].z;
        }
        _1869 = frontier_phi_25_50_ladder_2;
        _1871 = frontier_phi_25_50_ladder_1;
        _1873 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1853 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_847, _848, _849), _1779);
        _1869 = _1853.x * cbModelParam._m0[1u].z;
        _1871 = _1853.y * cbModelParam._m0[1u].z;
        _1873 = _1853.z * cbModelParam._m0[1u].z;
    }
    float _1886 = (((_874 * _823) + _875) * _839) * ((cbModelParam._m0[1u].w * (_1869 - _1770)) + _1770);
    float _1888 = (((_874 * _825) + _875) * _839) * ((cbModelParam._m0[1u].w * (_1871 - _1772)) + _1772);
    float _1890 = (((_874 * _826) + _875) * _839) * ((cbModelParam._m0[1u].w * (_1873 - _1774)) + _1774);
    float _1893 = fma(_1890, cbSceneParam._m0[89u].z, fma(_1888, cbSceneParam._m0[89u].y, _1886 * cbSceneParam._m0[89u].x));
    float _1896 = fma(_1890, cbSceneParam._m0[90u].z, fma(_1888, cbSceneParam._m0[90u].y, _1886 * cbSceneParam._m0[90u].x));
    float _1899 = fma(_1890, cbSceneParam._m0[91u].z, fma(_1888, cbSceneParam._m0[91u].y, _1886 * cbSceneParam._m0[91u].x));
    float _1933 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1937 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1941 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1945 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1946 = _1933 / _1945;
    float _1947 = _1937 / _1945;
    float _1948 = _1941 / _1945;
    float _2095;
    float _2096;
    float _2097;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1975 = ((uint(_1948 > cbSceneParam._m0[59u].y) + uint(_1948 > cbSceneParam._m0[59u].x)) + uint(_1948 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1976 = _1975 + 43u;
        uint _1984 = _1975 + 44u;
        uint _1992 = _1975 + 45u;
        uint _2000 = _1975 + 46u;
        float _2011 = fma(_1945, cbSceneParam._m0[_1976].w, fma(_1941, cbSceneParam._m0[_1976].z, fma(_1937, cbSceneParam._m0[_1976].y, _1933 * cbSceneParam._m0[_1976].x)));
        float _2015 = fma(_1945, cbSceneParam._m0[_1984].w, fma(_1941, cbSceneParam._m0[_1984].z, fma(_1937, cbSceneParam._m0[_1984].y, _1933 * cbSceneParam._m0[_1984].x)));
        float _2023 = fma(_1945, cbSceneParam._m0[_2000].w, fma(_1941, cbSceneParam._m0[_2000].z, fma(_1937, cbSceneParam._m0[_2000].y, _1933 * cbSceneParam._m0[_2000].x)));
        float _2028 = cbSceneParam._m0[33u].z * _2023;
        float _2030 = cbSceneParam._m0[33u].w * _2023;
        float _2033 = fma(_1945, cbSceneParam._m0[_1992].w, fma(_1941, cbSceneParam._m0[_1992].z, fma(_1937, cbSceneParam._m0[_1992].y, _1933 * cbSceneParam._m0[_1992].x))) / _2023;
        float _2081 = (cbSceneParam._m0[33u].x - sqrt(((_1947 * _1947) + (_1946 * _1946)) + (_1948 * _1948))) * cbSceneParam._m0[33u].y;
        float _4451 = isnan(0.0) ? _2081 : (isnan(_2081) ? 0.0 : max(_2081, 0.0));
        float _2088 = (isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2028 + _2011) / _2023, (_2030 + _2015) / _2023), _2033), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2030 + _2011) / _2023, (_2015 - _2028) / _2023), _2033), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2011 - _2028) / _2023, (_2015 - _2030) / _2023), _2033), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2011 - _2030) / _2023, (_2028 + _2015) / _2023), _2033), 0.0)).x), vec4(0.25)));
        _2095 = 1.0 - (_2088 * cbSceneParam._m0[34u].x);
        _2096 = 1.0 - (_2088 * cbSceneParam._m0[34u].y);
        _2097 = 1.0 - (_2088 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2095 = 1.0;
        _2096 = 1.0;
        _2097 = 1.0;
    }
    float _2161;
    float _2163;
    float _2165;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2149 = fma(_1945, cbSceneParam._m0[63u].w, fma(_1941, cbSceneParam._m0[63u].z, fma(_1937, cbSceneParam._m0[63u].y, _1933 * cbSceneParam._m0[63u].x)));
        float _2150 = fma(_1945, cbSceneParam._m0[60u].w, fma(_1941, cbSceneParam._m0[60u].z, fma(_1937, cbSceneParam._m0[60u].y, _1933 * cbSceneParam._m0[60u].x))) / _2149;
        float _2151 = fma(_1945, cbSceneParam._m0[61u].w, fma(_1941, cbSceneParam._m0[61u].z, fma(_1937, cbSceneParam._m0[61u].y, _1933 * cbSceneParam._m0[61u].x))) / _2149;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2150 >= cbSceneParam._m0[64u].x) && (_2151 >= cbSceneParam._m0[64u].y)) && (_2150 <= cbSceneParam._m0[64u].z)) && (_2151 <= cbSceneParam._m0[64u].w))
        {
            float _2289 = fma(_1945, cbSceneParam._m0[62u].w, fma(_1941, cbSceneParam._m0[62u].z, fma(_1937, cbSceneParam._m0[62u].y, _1933 * cbSceneParam._m0[62u].x))) / _2149;
            float _2293 = isnan(cbSceneParam._m0[41u].w) ? _2289 : (isnan(_2289) ? cbSceneParam._m0[41u].w : max(_2289, cbSceneParam._m0[41u].w));
            float _2336 = (cbSceneParam._m0[33u].x - sqrt(((_1947 * _1947) + (_1946 * _1946)) + (_1948 * _1948))) * cbSceneParam._m0[33u].y;
            float _4467 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
            float _2343 = (isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2150, cbSceneParam._m0[33u].w + _2151), _2293), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2150, _2151 - cbSceneParam._m0[33u].z), _2293), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2150 - cbSceneParam._m0[33u].z, _2151 - cbSceneParam._m0[33u].w), _2293), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2150 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2151), _2293), 0.0)).x), vec4(0.25)));
            float _2347 = 1.0 - (_2343 * cbSceneParam._m0[34u].x);
            float _2348 = 1.0 - (_2343 * cbSceneParam._m0[34u].y);
            float _2349 = 1.0 - (_2343 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2349) ? _2097 : (isnan(_2097) ? _2349 : min(_2097, _2349));
            frontier_phi_37_36_ladder_1 = isnan(_2348) ? _2096 : (isnan(_2096) ? _2348 : min(_2096, _2348));
            frontier_phi_37_36_ladder_2 = isnan(_2347) ? _2095 : (isnan(_2095) ? _2347 : min(_2095, _2347));
        }
        else
        {
            frontier_phi_37_36_ladder = _2097;
            frontier_phi_37_36_ladder_1 = _2096;
            frontier_phi_37_36_ladder_2 = _2095;
        }
        _2161 = frontier_phi_37_36_ladder_2;
        _2163 = frontier_phi_37_36_ladder_1;
        _2165 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2161 = _2095;
        _2163 = _2096;
        _2165 = _2097;
    }
    uvec4 _2170 = floatBitsToUint(cbInstanceData._m0[_248 + 5u]);
    uint _2172 = _2170.x * 14u;
    uint _2173 = _2172 + 13u;
    float _2180 = _839 + (-1.0);
    float _2185 = (cbLight._m0[_2173].x * _2180) + 1.0;
    float _2186 = (cbLight._m0[_2173].y * _2180) + 1.0;
    float _2187 = (cbLight._m0[_2173].z * _2180) + 1.0;
    float _2188 = (cbLight._m0[_2173].w * _2180) + 1.0;
    uint _2189 = _2172 + 5u;
    float _2195 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
    uint _2199 = _2172 + 4u;
    float _2208 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
    uint _2212 = _2172 | 1u;
    float _2223 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_661, _662, _663));
    float _2226 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_661, _662, _663));
    float _4503 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _4514 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2231 = (isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0))) * 0.3183098733425140380859375;
    float _2233 = (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))) * 0.3183098733425140380859375;
    float _2240 = ((cbLight._m0[_2189].x * _2195) * _2233) + (((cbLight._m0[_2199].x * _2161) * _2208) * _2231);
    float _2241 = ((_2195 * cbLight._m0[_2189].y) * _2233) + (((cbLight._m0[_2199].y * _2163) * _2208) * _2231);
    float _2242 = ((_2195 * cbLight._m0[_2189].z) * _2233) + (((cbLight._m0[_2199].z * _2165) * _2208) * _2231);
    uvec4 _2246 = floatBitsToUint(cbLight._m0[_2172 + 12u]);
    bool _2248 = _2246.x == 0u;
    float _2350;
    float _2352;
    float _2354;
    if (_2248)
    {
        _2350 = _2240;
        _2352 = _2241;
        _2354 = _2242;
    }
    else
    {
        uint _2358 = _2172 + 6u;
        float _2374 = (dot(vec3(cbLight._m0[_2172 + 2u].xyz), vec3(_661, _662, _663)) * 0.5) + 0.5;
        float _2375 = _2374 * _2374;
        float _4525 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
        float _2376 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _2377 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2350 = (((cbLight._m0[_2358].x * 0.3183098733425140380859375) * _2376) * _2377) + _2240;
        _2352 = (((cbLight._m0[_2358].y * 0.3183098733425140380859375) * _2376) * _2377) + _2241;
        _2354 = (((cbLight._m0[_2358].z * 0.3183098733425140380859375) * _2376) * _2377) + _2242;
    }
    bool _2357 = _2246.y == 0u;
    float _2412;
    float _2414;
    float _2416;
    if (_2357)
    {
        _2412 = _2350;
        _2414 = _2352;
        _2416 = _2354;
    }
    else
    {
        uint _2585 = _2172 + 7u;
        float _2601 = (dot(vec3(cbLight._m0[_2172 + 3u].xyz), vec3(_661, _662, _663)) * 0.5) + 0.5;
        float _2602 = _2601 * _2601;
        float _4541 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
        float _2603 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _2604 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2412 = (((cbLight._m0[_2585].x * 0.3183098733425140380859375) * _2603) * _2604) + _2350;
        _2414 = (((cbLight._m0[_2585].y * 0.3183098733425140380859375) * _2603) * _2604) + _2352;
        _2416 = (((cbLight._m0[_2585].z * 0.3183098733425140380859375) * _2603) * _2604) + _2354;
    }
    uint _2419 = _2172 + 8u;
    float _2432 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2172].w)) * _664) * 0.949999988079071044921875);
    float _2433 = _2432 * _2432;
    float _2434 = cbLight._m0[_2172].x + _741;
    float _2435 = cbLight._m0[_2172].y + _742;
    float _2436 = cbLight._m0[_2172].z + _743;
    float _2440 = inversesqrt(dot(vec3(_2434, _2435, _2436), vec3(_2434, _2435, _2436)));
    float _2441 = _2440 * _2434;
    float _2442 = _2440 * _2435;
    float _2443 = _2440 * _2436;
    float _2444 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2172].xyz));
    float _4557 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
    float _2447 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
    float _4568 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _2448 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
    float _2449 = dot(vec3(_661, _662, _663), vec3(_2441, _2442, _2443));
    float _4579 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _2452 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
    float _2453 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_2441, _2442, _2443));
    float _4590 = isnan(0.0) ? _2453 : (isnan(_2453) ? 0.0 : max(_2453, 0.0));
    float _2457 = _2433 * _2433;
    float _2461 = ((_2452 * _2452) * (_2457 + (-1.0))) + 1.0;
    float _2469 = exp2(log2(1.0 - (isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0)))) * 5.0);
    float _2470 = 0.959999978542327880859375 - _820;
    float _2472 = 0.959999978542327880859375 - _821;
    float _2473 = 0.959999978542327880859375 - _822;
    float _2480 = 1.0 - _2433;
    float _2491 = (0.5 / (((_2448 * ((_2447 * _2480) + _2433)) + 9.9999999392252902907785028219223e-09) + (((_2448 * _2480) + _2433) * _2447))) * _2447;
    float _4601 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2493 = (isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0))) * (_2457 / ((_2461 * _2461) * 3.141590118408203125));
    uint _2507 = _2172 + 9u;
    float _2518 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2212].w)) * _664) * 0.949999988079071044921875);
    float _2519 = _2518 * _2518;
    float _2520 = cbLight._m0[_2212].x + _741;
    float _2521 = cbLight._m0[_2212].y + _742;
    float _2522 = cbLight._m0[_2212].z + _743;
    float _2526 = inversesqrt(dot(vec3(_2520, _2521, _2522), vec3(_2520, _2521, _2522)));
    float _2527 = _2526 * _2520;
    float _2528 = _2526 * _2521;
    float _2529 = _2526 * _2522;
    float _2530 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2212].xyz));
    float _4612 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
    float _2533 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
    float _2534 = dot(vec3(_661, _662, _663), vec3(_2527, _2528, _2529));
    float _4623 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
    float _2537 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
    float _2538 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_2527, _2528, _2529));
    float _4634 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2542 = _2519 * _2519;
    float _2546 = ((_2537 * _2537) * (_2542 + (-1.0))) + 1.0;
    float _2553 = exp2(log2(1.0 - (isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0)))) * 5.0);
    float _2560 = 1.0 - _2519;
    float _2570 = (0.5 / (((_2448 * ((_2533 * _2560) + _2519)) + 9.9999999392252902907785028219223e-09) + (((_2448 * _2560) + _2519) * _2533))) * _2533;
    float _4645 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
    float _2572 = (isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0))) * (_2542 / ((_2546 * _2546) * 3.141590118408203125));
    float _2582 = (((((_2553 * _2470) + _823) * cbLight._m0[_2507].x) * _2572) * _2195) + ((((cbLight._m0[_2419].x * _2161) * ((_2469 * _2470) + _823)) * _2493) * _2208);
    float _2583 = (((((_2553 * _2472) + _825) * cbLight._m0[_2507].y) * _2572) * _2195) + ((((cbLight._m0[_2419].y * _2163) * ((_2469 * _2472) + _825)) * _2493) * _2208);
    float _2584 = (((((_2553 * _2473) + _826) * cbLight._m0[_2507].z) * _2572) * _2195) + ((((cbLight._m0[_2419].z * _2165) * ((_2469 * _2473) + _826)) * _2493) * _2208);
    float _2640;
    float _2642;
    float _2644;
    if (_2248)
    {
        _2640 = _2582;
        _2642 = _2583;
        _2644 = _2584;
    }
    else
    {
        uint _2646 = _2172 + 2u;
        uint _2650 = _2172 + 10u;
        float _2664 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2646].w)) * _664) * 0.949999988079071044921875);
        float _2665 = _2664 * _2664;
        float _2666 = cbLight._m0[_2646].x + _741;
        float _2667 = cbLight._m0[_2646].y + _742;
        float _2668 = cbLight._m0[_2646].z + _743;
        float _2672 = inversesqrt(dot(vec3(_2666, _2667, _2668), vec3(_2666, _2667, _2668)));
        float _2673 = _2672 * _2666;
        float _2674 = _2672 * _2667;
        float _2675 = _2672 * _2668;
        float _2676 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2646].xyz));
        float _4656 = isnan(0.0) ? _2676 : (isnan(_2676) ? 0.0 : max(_2676, 0.0));
        float _2679 = isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0));
        float _2680 = dot(vec3(_661, _662, _663), vec3(_2673, _2674, _2675));
        float _4667 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
        float _2683 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
        float _2684 = dot(vec3(cbLight._m0[_2646].xyz), vec3(_2673, _2674, _2675));
        float _4678 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2688 = _2665 * _2665;
        float _2692 = ((_2683 * _2683) * (_2688 + (-1.0))) + 1.0;
        float _2699 = exp2(log2(1.0 - (isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0)))) * 5.0);
        float _2706 = 1.0 - _2665;
        float _2716 = (0.5 / (((_2448 * ((_2679 * _2706) + _2665)) + 9.9999999392252902907785028219223e-09) + (((_2448 * _2706) + _2665) * _2679))) * _2679;
        float _4689 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
        float _2718 = (isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0))) * (_2688 / ((_2692 * _2692) * 3.141590118408203125));
        float _2719 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2640 = (((((_2699 * _2470) + _823) * cbLight._m0[_2650].x) * _2718) * _2719) + _2582;
        _2642 = (((((_2699 * _2472) + _825) * cbLight._m0[_2650].y) * _2718) * _2719) + _2583;
        _2644 = (((((_2699 * _2473) + _826) * cbLight._m0[_2650].z) * _2718) * _2719) + _2584;
    }
    float _2750;
    float _2752;
    float _2754;
    if (_2357)
    {
        _2750 = _2640;
        _2752 = _2642;
        _2754 = _2644;
    }
    else
    {
        uint _2761 = _2172 + 3u;
        uint _2765 = _2172 + 11u;
        float _2779 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2761].w)) * _664) * 0.949999988079071044921875);
        float _2780 = _2779 * _2779;
        float _2781 = cbLight._m0[_2761].x + _741;
        float _2782 = cbLight._m0[_2761].y + _742;
        float _2783 = cbLight._m0[_2761].z + _743;
        float _2787 = inversesqrt(dot(vec3(_2781, _2782, _2783), vec3(_2781, _2782, _2783)));
        float _2788 = _2787 * _2781;
        float _2789 = _2787 * _2782;
        float _2790 = _2787 * _2783;
        float _2791 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2761].xyz));
        float _4705 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
        float _2794 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
        float _2795 = dot(vec3(_661, _662, _663), vec3(_2788, _2789, _2790));
        float _4716 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2798 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
        float _2799 = dot(vec3(cbLight._m0[_2761].xyz), vec3(_2788, _2789, _2790));
        float _4727 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2803 = _2780 * _2780;
        float _2807 = ((_2798 * _2798) * (_2803 + (-1.0))) + 1.0;
        float _2814 = exp2(log2(1.0 - (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0)))) * 5.0);
        float _2821 = 1.0 - _2780;
        float _2831 = (0.5 / (((_2448 * ((_2794 * _2821) + _2780)) + 9.9999999392252902907785028219223e-09) + (((_2448 * _2821) + _2780) * _2794))) * _2794;
        float _4738 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2833 = (isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0))) * (_2803 / ((_2807 * _2807) * 3.141590118408203125));
        float _2834 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2750 = (((((_2814 * _2470) + _823) * cbLight._m0[_2765].x) * _2833) * _2834) + _2640;
        _2752 = (((((_2814 * _2472) + _825) * cbLight._m0[_2765].y) * _2833) * _2834) + _2642;
        _2754 = (((((_2814 * _2473) + _826) * cbLight._m0[_2765].z) * _2833) * _2834) + _2644;
    }
    float _2900;
    float _2902;
    float _2904;
    float _2906;
    float _2908;
    float _2910;
    if (_2170.y == 0u)
    {
        uvec4 _2855 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2856 = _2855.x;
        uint _2867 = uint((float(_2855.y) * floor(float(uint(cbSceneParam._m0[85u].y * _762) / _2856))) + floor(float(uint(cbSceneParam._m0[85u].x * _761) / _2856)));
        float _2877 = (log2(_1948 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2878 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        uint _2881 = uint(isnan(14.0) ? _2878 : (isnan(_2878) ? 14.0 : min(_2878, 14.0)));
        uvec4 _2886 = texelFetch(g_lightClusterGridBuffer, int(((_2881 << 2u) + (_2867 << 6u)) >> 2u));
        uint _2887 = _2886.x;
        uint _2888 = _2855.z;
        float _2967;
        float _2969;
        float _2971;
        float _2973;
        float _2975;
        float _2977;
        if (((((1u << ((_2888 >> 4u) & 15u)) + 4294967295u) & _2887) == 0u) || ((_2888 & 240u) == 0u))
        {
            _2967 = 0.0;
            _2969 = 0.0;
            _2971 = 0.0;
            _2973 = 0.0;
            _2975 = 0.0;
            _2977 = 0.0;
        }
        else
        {
            float _2968;
            float _2970;
            float _2972;
            float _2974;
            float _2976;
            float _2978;
            float _3120 = 0.0;
            float _3121 = 0.0;
            float _3122 = 0.0;
            float _3123 = 0.0;
            float _3124 = 0.0;
            float _3125 = 0.0;
            uint _3126 = 0u;
            uint _3135;
            bool _3136;
            for (;;)
            {
                _3135 = texelFetch(g_lightClassification, int((((_2881 << 5u) + (_2867 << 9u)) + (_3126 << 2u)) >> 2u)).x;
                _3136 = _3135 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3136)
                {
                    frontier_phi_71_pred = _3125;
                    frontier_phi_71_pred_1 = _3124;
                    frontier_phi_71_pred_2 = _3123;
                    frontier_phi_71_pred_3 = _3122;
                    frontier_phi_71_pred_4 = _3121;
                    frontier_phi_71_pred_5 = _3120;
                }
                else
                {
                    float _3265;
                    float _3266;
                    float _3267;
                    float _3268;
                    float _3269;
                    float _3270;
                    uint _3271;
                    _3265 = _3120;
                    _3266 = _3121;
                    _3267 = _3122;
                    _3268 = _3123;
                    _3269 = _3124;
                    _3270 = _3125;
                    _3271 = _3135;
                    float _3192;
                    float _3193;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    for (;;)
                    {
                        uint _3275 = uint(findLSB(_3271)) + (_3126 << 5u);
                        uint _3272 = (_3271 + 4294967295u) & _3271;
                        uint _3277 = _3275 * 48u;
                        vec4 _3291 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3277)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 3u)).x));
                        uint _3297 = (_3275 * 48u) + 4u;
                        vec4 _3310 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3297)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 3u)).x));
                        uint _3316 = (_3275 * 48u) + 8u;
                        vec3 _3327 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3316)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 2u)).x));
                        float _3331 = _3291.x - _1946;
                        float _3332 = _3291.y - _1947;
                        float _3333 = _3291.z - _1948;
                        float _3334 = dot(vec3(_3331, _3332, _3333), vec3(_3331, _3332, _3333));
                        float _3337 = inversesqrt(_3334);
                        float _3338 = _3337 * _3331;
                        float _3339 = _3337 * _3332;
                        float _3340 = _3337 * _3333;
                        float _3341 = dot(vec3(_780, _783, _786), vec3(_3338, _3339, _3340));
                        float _3346 = 1.0 - (_3334 * _3291.w);
                        float _4764 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3347 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
                        float _3348 = sqrt(_3334) * _3310.w;
                        float _3351 = 1.39999997615814208984375 / (_3348 + 1.39999997615814208984375);
                        float _3352 = _3351 * _3351;
                        float _3355 = ((1.0 - _3352) * _3341) + _3352;
                        float _3358 = _3348 * _3348;
                        float _3362 = ((isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0))) * _3347) / ((_3358 * 0.699999988079071044921875) + 1.0);
                        float _3366 = (-0.0) - _1946;
                        float _3367 = (-0.0) - _1947;
                        float _3368 = (-0.0) - _1948;
                        float _3372 = inversesqrt(dot(vec3(_3366, _3367, _3368), vec3(_3366, _3367, _3368)));
                        float _3373 = _3372 * _3366;
                        float _3374 = _3372 * _3367;
                        float _3375 = _3372 * _3368;
                        float _3382 = exp2(log2(1.0 / ((_3358 * 3.5) + 5.0)) * 0.25);
                        float _3383 = 1.0 - _855;
                        float _3390 = sqrt(1.0 - ((1.0 - (_3383 * _3383)) * (1.0 - (_3382 * _3382))));
                        float _3391 = _3390 * _3390;
                        float _3392 = _3391 * _3391;
                        float _3393 = _3373 + _3338;
                        float _3394 = _3374 + _3339;
                        float _3395 = _3375 + _3340;
                        float _3399 = inversesqrt(dot(vec3(_3393, _3394, _3395), vec3(_3393, _3394, _3395)));
                        float _3403 = dot(vec3(_780, _783, _786), vec3(_3373, _3374, _3375));
                        float _4780 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3406 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
                        float _3407 = dot(vec3(_780, _783, _786), vec3(_3399 * _3393, _3399 * _3394, _3399 * _3395));
                        float _4791 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3410 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
                        float _3414 = ((_3410 * _3410) * (_3392 + (-1.0))) + 1.0;
                        float _3415 = _3351 * _3391;
                        float _3416 = _3415 * _3415;
                        float _3419 = ((1.0 - _3416) * _3341) + _3416;
                        float _4802 = isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : max(_3419, 0.0));
                        float _3420 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
                        float _3421 = 1.0 - _3391;
                        float _3431 = (0.5 / (((_3420 * ((_3406 * _3421) + _3391)) + 9.9999999392252902907785028219223e-09) + (((_3420 * _3421) + _3391) * _3406))) * _3420;
                        float _4813 = isnan(0.0) ? _3431 : (isnan(_3431) ? 0.0 : max(_3431, 0.0));
                        float _3442 = (((_3392 * 3.1415927410125732421875) * (isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0)))) / ((_3414 * _3414) * ((_3358 * 2.1991131305694580078125) + 3.141590118408203125))) * _3347;
                        _3195 = (_3362 * _3310.x) + _3268;
                        _3196 = (_3362 * _3310.y) + _3269;
                        _3197 = (_3362 * _3310.z) + _3270;
                        _3192 = (_3442 * _3327.x) + _3265;
                        _3193 = (_3442 * _3327.y) + _3266;
                        _3194 = (_3442 * _3327.z) + _3267;
                        if (_3272 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3265 = _3192;
                            _3266 = _3193;
                            _3267 = _3194;
                            _3268 = _3195;
                            _3269 = _3196;
                            _3270 = _3197;
                            _3271 = _3272;
                        }
                    }
                    frontier_phi_71_pred = _3197;
                    frontier_phi_71_pred_1 = _3196;
                    frontier_phi_71_pred_2 = _3195;
                    frontier_phi_71_pred_3 = _3194;
                    frontier_phi_71_pred_4 = _3193;
                    frontier_phi_71_pred_5 = _3192;
                }
                _2978 = frontier_phi_71_pred;
                _2976 = frontier_phi_71_pred_1;
                _2974 = frontier_phi_71_pred_2;
                _2972 = frontier_phi_71_pred_3;
                _2970 = frontier_phi_71_pred_4;
                _2968 = frontier_phi_71_pred_5;
                uint _3127 = _3126 + 1u;
                if (_3127 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3120 = _2968;
                    _3121 = _2970;
                    _3122 = _2972;
                    _3123 = _2974;
                    _3124 = _2976;
                    _3125 = _2978;
                    _3126 = _3127;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2967 = _2968;
            _2969 = _2970;
            _2971 = _2972;
            _2973 = _2974;
            _2975 = _2976;
            _2977 = _2978;
        }
        uvec4 _2981 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2982 = _2981.z;
        uint _2984 = (_2982 >> 8u) & 15u;
        float _3088;
        float _3090;
        float _3092;
        float _3094;
        float _3096;
        float _3098;
        if (((4294967295u << _2984) & _2887) == 0u)
        {
            _3088 = _2967;
            _3090 = _2969;
            _3092 = _2971;
            _3094 = _2973;
            _3096 = _2975;
            _3098 = _2977;
        }
        else
        {
            float _3113 = inversesqrt(dot(vec3(_1946, _1947, _1948), vec3(_1946, _1947, _1948)));
            float _3114 = _3113 * _1946;
            float _3115 = _3113 * _1947;
            float _3116 = _3113 * _1948;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2984 < ((_2982 >> 12u) & 15u))
            {
                float _3089;
                float _3091;
                float _3093;
                float _3095;
                float _3097;
                float _3099;
                float _3248 = _2967;
                float _3249 = _2969;
                float _3250 = _2971;
                float _3251 = _2973;
                float _3252 = _2975;
                float _3253 = _2977;
                uint _3254 = _2984;
                uint _3263;
                bool _3264;
                for (;;)
                {
                    _3263 = texelFetch(g_lightClassification, int((((_2881 << 5u) + (_2867 << 9u)) + (_3254 << 2u)) >> 2u)).x;
                    _3264 = _3263 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3264)
                    {
                        frontier_phi_82_pred = _3253;
                        frontier_phi_82_pred_1 = _3252;
                        frontier_phi_82_pred_2 = _3251;
                        frontier_phi_82_pred_3 = _3250;
                        frontier_phi_82_pred_4 = _3249;
                        frontier_phi_82_pred_5 = _3248;
                    }
                    else
                    {
                        float _3456;
                        float _3457;
                        float _3458;
                        float _3459;
                        float _3460;
                        float _3461;
                        float _3749;
                        float _3750;
                        float _3751;
                        float _3752;
                        float _3753;
                        float _3754;
                        float _3469 = _3248;
                        float _3470 = _3249;
                        float _3471 = _3250;
                        float _3472 = _3251;
                        float _3473 = _3252;
                        float _3474 = _3253;
                        uint _3475 = _3263;
                        uint _3476;
                        vec4 _3501;
                        float _3502;
                        vec4 _3517;
                        vec3 _3529;
                        vec4 _3544;
                        vec4 _3559;
                        float _3605;
                        bool _3606;
                        for (;;)
                        {
                            uint _3486 = ((_3254 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3475));
                            _3476 = (_3475 + 4294967295u) & _3475;
                            uint _3488 = _3486 * 40u;
                            _3501 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3488)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 3u)).x));
                            _3502 = _3501.w;
                            uint _3504 = (_3486 * 40u) + 4u;
                            _3517 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3504)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 3u)).x));
                            uint _3519 = (_3486 * 40u) + 8u;
                            _3529 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3519)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 2u)).x));
                            uint _3531 = (_3486 * 40u) + 16u;
                            _3544 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 3u)).x));
                            uint _3546 = (_3486 * 40u) + 20u;
                            _3559 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3546)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 3u)).x));
                            uint _3561 = (_3486 * 40u) + 24u;
                            vec4 _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            uint _3580 = (_3486 * 40u) + 28u;
                            vec4 _3593 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3580)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 3u)).x));
                            _3605 = fma(_1948, _3593.z, fma(_1947, _3593.y, _3593.x * _1946)) + _3593.w;
                            _3606 = !((fma(_1948, _3574.z, fma(_1947, _3574.y, _3574.x * _1946)) + _3574.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3606)
                            {
                                float _3633 = _3501.x - _1946;
                                float _3634 = _3501.y - _1947;
                                float _3635 = _3501.z - _1948;
                                float _3636 = dot(vec3(_3633, _3634, _3635), vec3(_3633, _3634, _3635));
                                float _3639 = inversesqrt(_3636);
                                float _3640 = _3639 * _3633;
                                float _3641 = _3639 * _3634;
                                float _3642 = _3639 * _3635;
                                float _3646 = 1.0 - (_3636 / (_3502 * _3502));
                                float _4824 = isnan(0.0) ? _3646 : (isnan(_3646) ? 0.0 : max(_3646, 0.0));
                                float _3647 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
                                float _3651 = sqrt(_3636) * _3517.w;
                                float _3653 = 1.39999997615814208984375 / (_3651 + 1.39999997615814208984375);
                                float _3654 = _3653 * _3653;
                                float _3657 = ((1.0 - _3654) * dot(vec3(_3640, _3641, _3642), vec3(_780, _783, _786))) + _3654;
                                float _3660 = _3651 * _3651;
                                float _3664 = (fma(_1948, _3544.z, fma(_1947, _3544.y, _3544.x * _1946)) + _3544.w) / _3605;
                                float _3665 = (fma(_1948, _3559.z, fma(_1947, _3559.y, _3559.x * _1946)) + _3559.w) / _3605;
                                float _3669 = 1.0 - dot(vec2(_3664, _3665), vec2(_3664, _3665));
                                float _4840 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3670 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
                                float _3671 = _3670 * (((isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0))) * _3647) / ((_3660 * 0.699999988079071044921875) + 1.0));
                                float _3683 = exp2(log2(1.0 / ((_3660 * 3.5) + 5.0)) * 0.25);
                                float _3684 = 1.0 - _855;
                                float _3691 = sqrt(1.0 - ((1.0 - (_3684 * _3684)) * (1.0 - (_3683 * _3683))));
                                float _3692 = _3691 * _3691;
                                float _3693 = _3692 * _3692;
                                float _3694 = _3640 - _3114;
                                float _3695 = _3641 - _3115;
                                float _3696 = _3642 - _3116;
                                float _3700 = inversesqrt(dot(vec3(_3694, _3695, _3696), vec3(_3694, _3695, _3696)));
                                float _3704 = dot(vec3(_780, _783, _786), vec3((-0.0) - _3114, (-0.0) - _3115, (-0.0) - _3116));
                                float _4851 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3707 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
                                float _3708 = dot(vec3(_780, _783, _786), vec3(_3700 * _3694, _3700 * _3695, _3700 * _3696));
                                float _4862 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                                float _3711 = isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0));
                                float _3715 = ((_3711 * _3711) * (_3693 + (-1.0))) + 1.0;
                                float _3716 = _3653 * _3692;
                                float _3717 = _3716 * _3716;
                                float _3723 = ((1.0 - _3717) * dot(vec3(_780, _783, _786), vec3(_3640, _3641, _3642))) + _3717;
                                float _4873 = isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0));
                                float _3724 = isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0));
                                float _3725 = 1.0 - _3692;
                                float _3735 = (0.5 / (((_3724 * ((_3707 * _3725) + _3692)) + 9.9999999392252902907785028219223e-09) + (((_3724 * _3725) + _3692) * _3707))) * _3724;
                                float _4884 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3745 = (_3670 * _3647) * (((_3693 * 3.1415927410125732421875) * (isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0)))) / ((_3715 * _3715) * ((_3660 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3671 * _3517.z;
                                frontier_phi_88_pred_1 = _3671 * _3517.y;
                                frontier_phi_88_pred_2 = _3671 * _3517.x;
                                frontier_phi_88_pred_3 = _3745 * _3529.z;
                                frontier_phi_88_pred_4 = _3745 * _3529.y;
                                frontier_phi_88_pred_5 = _3745 * _3529.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3754 = frontier_phi_88_pred;
                            _3753 = frontier_phi_88_pred_1;
                            _3752 = frontier_phi_88_pred_2;
                            _3751 = frontier_phi_88_pred_3;
                            _3750 = frontier_phi_88_pred_4;
                            _3749 = frontier_phi_88_pred_5;
                            _3459 = _3752 + _3472;
                            _3460 = _3753 + _3473;
                            _3461 = _3754 + _3474;
                            _3456 = _3749 + _3469;
                            _3457 = _3750 + _3470;
                            _3458 = _3751 + _3471;
                            if (_3476 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3469 = _3456;
                                _3470 = _3457;
                                _3471 = _3458;
                                _3472 = _3459;
                                _3473 = _3460;
                                _3474 = _3461;
                                _3475 = _3476;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3461;
                        frontier_phi_82_pred_1 = _3460;
                        frontier_phi_82_pred_2 = _3459;
                        frontier_phi_82_pred_3 = _3458;
                        frontier_phi_82_pred_4 = _3457;
                        frontier_phi_82_pred_5 = _3456;
                    }
                    _3099 = frontier_phi_82_pred;
                    _3097 = frontier_phi_82_pred_1;
                    _3095 = frontier_phi_82_pred_2;
                    _3093 = frontier_phi_82_pred_3;
                    _3091 = frontier_phi_82_pred_4;
                    _3089 = frontier_phi_82_pred_5;
                    uint _3255 = _3254 + 1u;
                    if (_3255 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3248 = _3089;
                        _3249 = _3091;
                        _3250 = _3093;
                        _3251 = _3095;
                        _3252 = _3097;
                        _3253 = _3099;
                        _3254 = _3255;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3095;
                frontier_phi_63_64_ladder_1 = _3099;
                frontier_phi_63_64_ladder_2 = _3097;
                frontier_phi_63_64_ladder_3 = _3093;
                frontier_phi_63_64_ladder_4 = _3091;
                frontier_phi_63_64_ladder_5 = _3089;
            }
            else
            {
                frontier_phi_63_64_ladder = _2973;
                frontier_phi_63_64_ladder_1 = _2977;
                frontier_phi_63_64_ladder_2 = _2975;
                frontier_phi_63_64_ladder_3 = _2971;
                frontier_phi_63_64_ladder_4 = _2969;
                frontier_phi_63_64_ladder_5 = _2967;
            }
            _3088 = frontier_phi_63_64_ladder_5;
            _3090 = frontier_phi_63_64_ladder_4;
            _3092 = frontier_phi_63_64_ladder_3;
            _3094 = frontier_phi_63_64_ladder;
            _3096 = frontier_phi_63_64_ladder_2;
            _3098 = frontier_phi_63_64_ladder_1;
        }
        float _3103 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
        _2900 = (_3103 * _3094) + _2412;
        _2902 = (_3103 * _3096) + _2414;
        _2904 = (_3103 * _3098) + _2416;
        _2906 = ((_3088 * _823) * _3103) + _2750;
        _2908 = ((_3090 * _825) * _3103) + _2752;
        _2910 = ((_3092 * _826) * _3103) + _2754;
    }
    else
    {
        _2900 = _2412;
        _2902 = _2414;
        _2904 = _2416;
        _2906 = _2750;
        _2908 = _2752;
        _2910 = _2754;
    }
    float _4900 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _4911 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _4922 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _2927 = ((isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0))) * (_2900 + ((isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0))) * _839))) + ((_2906 + ((isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0))) * _1678)) * cbPerFrame._m0[3u].x);
    float _2928 = ((isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0))) * (_2902 + ((isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))) * _839))) + ((_2908 + ((isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0))) * _1678)) * cbPerFrame._m0[3u].x);
    float _2929 = ((isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0))) * (_2904 + ((isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))) * _839))) + ((_2910 + ((isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))) * _1678)) * cbPerFrame._m0[3u].x);
    uint _2930 = _248 + 6u;
    float _2938 = _761 / cbSceneParam._m0[86u].x;
    float _2939 = _762 / cbSceneParam._m0[86u].y;
    vec4 _2953 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, (log2((isnan(cbSceneParam._m0[77u].w) ? _683 : (isnan(_683) ? cbSceneParam._m0[77u].w : min(_683, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2955 = _2953.x;
    float _2956 = _2953.y;
    float _2957 = _2953.z;
    float _2958 = _2953.w;
    float _3030;
    float _3032;
    float _3034;
    float _3036;
    if (_683 > cbSceneParam._m0[78u].w)
    {
        float _2992 = isnan(_683) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _683 : min(cbSceneParam._m0[80u].w, _683));
        float _2993 = _2992 / _683;
        float _3004 = _2993 * _734;
        float _3005 = _735 * _2993;
        float _3006 = (-0.0) - _3005;
        float _3008 = _2993 * _736;
        float _3010 = (cbSceneParam._m0[77u].w * _3006) / _2992;
        float _3011 = _3010 + cbSceneParam._m0[79u].w;
        float _3012 = cbSceneParam._m0[79u].w - _3005;
        float _3018 = sqrt(((_3004 * _3004) + (_3005 * _3005)) + (_3008 * _3008));
        float _3021 = (1.0 - (cbSceneParam._m0[77u].w / _2992)) * _3018;
        float _3026 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3028 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3205;
        if (abs((_3006 - _3010) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3205 = ((((_3011 > 0.0) ? exp2(_3026 * _3011) : (2.0 - exp2(_3028 * _3011))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3021;
        }
        else
        {
            float _3149 = 1.0 / cbSceneParam._m0[80u].x;
            float _3150 = isnan(_3012) ? _3011 : (isnan(_3011) ? _3012 : max(_3011, _3012));
            float _3151 = isnan(_3012) ? _3011 : (isnan(_3011) ? _3012 : min(_3011, _3012));
            float _3160 = isnan(0.0) ? _3150 : (isnan(_3150) ? 0.0 : min(_3150, 0.0));
            float _3161 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : min(_3151, 0.0));
            _3205 = ((abs(_3018 / _3006) * cbSceneParam._m0[80u].y) * ((((_3160 - _3161) * 2.0) - ((exp2(_3026 * (isnan(0.0) ? _3150 : (isnan(_3150) ? 0.0 : max(_3150, 0.0)))) - exp2(_3026 * (isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0))))) * _3149)) - ((exp2(_3028 * _3160) - exp2(_3028 * _3161)) * _3149))) + (_3021 * cbSceneParam._m0[80u].z);
        }
        vec4 _3207 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, 1.0), 0.0);
        float _3216 = exp2((_3205 * (-1.44269502162933349609375)) * (1.0 - _3207.w));
        float _3217 = log2(_3216);
        float _3233 = log2(_2958);
        _3030 = (exp2(_3233 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3217 * cbSceneParam._m0[78u].x)) * _3207.x) / cbSceneParam._m0[78u].x)) + _2955;
        _3032 = (exp2(_3233 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3217 * cbSceneParam._m0[78u].y)) * _3207.y) / cbSceneParam._m0[78u].y)) + _2956;
        _3034 = (exp2(_3233 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3217 * cbSceneParam._m0[78u].z)) * _3207.z) / cbSceneParam._m0[78u].z)) + _2957;
        _3036 = _3216 * _2958;
    }
    else
    {
        _3030 = _2955;
        _3032 = _2956;
        _3034 = _2957;
        _3036 = _2958;
    }
    bool _3243;
    vec4 _3046;
    vec4 _3068;
    float _3070;
    float _3074;
    float _3075;
    float _3076;
    float _3077;
    bool _3087;
    for (;;)
    {
        _3046 = cbMatDynParam._m0[0u];
        float _3048 = roundEven(_3046.y);
        bool _3049 = _3048 == 3.0;
        float _3050 = log2(_3036);
        float _3057 = exp2(_3050 * cbSceneParam._m0[78u].x) * _2927;
        float _3058 = exp2(_3050 * cbSceneParam._m0[78u].y) * _2928;
        float _3059 = exp2(_3050 * cbSceneParam._m0[78u].z) * _2929;
        float _3066 = _750 + (-0.5);
        _3068 = cbMtdParam._m0[1u];
        _3070 = _3068.y * _3066;
        float _3073 = (_3048 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3074 = _3073 * (_3049 ? _3057 : (_3057 + (cbSceneParam._m0[72u].w * _3030)));
        _3075 = _3073 * (_3049 ? _3058 : (_3058 + (cbSceneParam._m0[72u].w * _3032)));
        _3076 = _3073 * (_3049 ? _3059 : (_3059 + (cbSceneParam._m0[72u].w * _3034)));
        _3077 = _3066 * 0.999000012874603271484375;
        _3087 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3087)
        {
            if ((cbInstanceData._m0[_248 + 7u].x + _3077) < 0.5)
            {
                _3243 = true;
                break;
            }
        }
        uint _3184 = _799 + uint(_3046.w);
        if ((cbInstanceData._m0[_3184].w < 1.0) && ((cbInstanceData._m0[_3184].w + _3077) < 0.5))
        {
            _3243 = true;
            break;
        }
        if ((_3070 + 1.0) < _3068.x)
        {
            _3243 = true;
            break;
        }
        _3243 = false;
        break;
    }
    float _3447;
    if (_3243)
    {
        discard_state = true;
        _3447 = 0.0;
    }
    else
    {
        _3447 = cbInstanceData._m0[_2930].w;
    }
    SV_Target.x = _3074;
    SV_Target.y = _3075;
    SV_Target.z = _3076;
    SV_Target.w = _3447;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2930].w;
    discard_exit();
}


