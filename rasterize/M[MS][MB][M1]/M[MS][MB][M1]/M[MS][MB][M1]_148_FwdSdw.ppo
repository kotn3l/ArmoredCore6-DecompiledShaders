#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_MB_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1421;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _236 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _237 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _238 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _244 = inversesqrt(dot(vec3(_236, _237, _238), vec3(_236, _237, _238)));
    float _245 = _244 * _236;
    float _246 = _244 * _237;
    float _247 = _244 * _238;
    float _251 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = _251 * NORMAL.x;
    float _253 = _251 * NORMAL.y;
    float _254 = _251 * NORMAL.z;
    float _258 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _259 = _258 * TANGENT.x;
    float _260 = _258 * TANGENT.y;
    float _261 = _258 * TANGENT.z;
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4028 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _4039 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _4050 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _283 = uint(roundEven(NORMAL.w)) * 13u;
    uint _288 = _283 + 1u;
    uint _292 = _283 + 2u;
    float _301 = sqrt(((cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x) + (cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x)) + (cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x));
    float _302 = _301 * TEXCOORD.z;
    float _303 = _301 * TEXCOORD.w;
    vec4 _316 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _302) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _303) + cbTextureTilingScale._m0[13u].w));
    vec4 _340 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _345 = _340.x * cbMtdParam._m0[11u].x;
    float _346 = _340.y * cbMtdParam._m0[11u].y;
    float _347 = _340.z * cbMtdParam._m0[11u].z;
    vec4 _366 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _302) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _303) + cbTextureTilingScale._m0[5u].w));
    vec4 _402 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _404 = _402.x;
    float _416 = dot(vec4(_404, _402.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _433 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_404 - _416) * cbMtdParam._m0[24u].y) + _416) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4061 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _434 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _441 = (_434 * ((_366.x * cbMtdParam._m0[12u].x) - _345)) + _345;
    float _442 = (_434 * ((_366.y * cbMtdParam._m0[12u].y) - _346)) + _346;
    float _443 = (_434 * ((_366.z * cbMtdParam._m0[12u].z) - _347)) + _347;
    float _447 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _316.x) * _441;
    float _450 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _316.y) * _442;
    float _453 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _316.z) * _443;
    float _460 = ((_441 - _447) * (isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0)))) + _447;
    float _461 = ((_442 - _450) * (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0)))) + _450;
    float _462 = ((_443 - _453) * (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0)))) + _453;
    vec4 _481 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _302) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _303) + cbTextureTilingScale._m0[14u].w));
    vec4 _501 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _302) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _303) + cbTextureTilingScale._m0[20u].w));
    vec4 _528 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _302) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _303) + cbTextureTilingScale._m0[4u].w));
    vec4 _545 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _547 = _545.x;
    float _548 = _545.y;
    float _549 = _545.z;
    float _558 = ((_528.z - _549) * _434) + _549;
    float _561 = ((((_528.x - _547) * _434) + _547) * 2.0) + (-1.0);
    float _562 = ((((_528.y - _548) * _434) + _548) * 2.0) + (-1.0);
    float _563 = dot(vec2(_561, _562), vec2(_561, _562));
    float _4072 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _568 = sqrt(1.0 - (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0))));
    float _571 = _561 + ((((_501.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _572 = _562 + ((((_501.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _575 = fma(_568, _252, fma(_572, _259, _571 * _245));
    float _578 = fma(_568, _253, fma(_572, _260, _571 * _246));
    float _581 = fma(_568, _254, fma(_572, _261, _571 * _247));
    float _585 = inversesqrt(dot(vec3(_575, _578, _581), vec3(_575, _578, _581)));
    vec4 _601 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _627 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _302) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _303) + cbTextureTilingScale._m0[11u].w));
    float _629 = _627.x;
    float _630 = 1.0 - _629;
    float _636 = (cbMtdParam._m0[19u].x + dot(vec4(_585 * _575, _585 * _578, _585 * _581, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_629 - _630) * cbMtdParam._m0[24u].z) + _630) * cbMtdParam._m0[21u].z);
    float _4083 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _637 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _639 = (-0.0) - cbMtdParam._m0[24u].x;
    float _641 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _642 = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
    float _649 = _637 - ((_637 * TEXCOORD_8.x) * _642);
    float _650 = _637 - ((_637 * TEXCOORD_8.y) * _642);
    float _651 = _637 - ((_637 * TEXCOORD_8.z) * _642);
    float _658 = (_649 * ((_481.x * cbMtdParam._m0[18u].x) - _460)) + _460;
    float _659 = (_650 * ((_481.y * cbMtdParam._m0[18u].y) - _461)) + _461;
    float _660 = (_651 * ((_481.z * cbMtdParam._m0[18u].z) - _462)) + _462;
    vec4 _672 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _302) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _303) + cbTextureTilingScale._m0[19u].w));
    float _674 = _672.x;
    float _675 = 1.0 - _674;
    float _701 = (TEXCOORD_8.x - ((cbMtdParam._m0[23u].w * (1.0 - TEXCOORD_8.x)) * ((((_674 - _675) * cbMtdParam._m0[24u].w) + _675) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4104 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _702 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
    float _710 = ((((cbMtdParam._m0[10u].x - _658) * TEXCOORD_8.x) * cbMtdParam._m0[22u].w) * _702) + _658;
    float _711 = ((((cbMtdParam._m0[10u].y - _659) * TEXCOORD_8.y) * cbMtdParam._m0[22u].w) * _702) + _659;
    float _712 = (((cbMtdParam._m0[22u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _660)) * _702) + _660;
    vec4 _738 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _740 = _738.x;
    float _758 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _302) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _303) + cbTextureTilingScale._m0[9u].w)).x - _740) * _434) + _740;
    float _762 = ((texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _758) * cbMtdParam._m0[19u].z) + _758;
    float _764 = _762 - (_762 * _649);
    float _766 = _764 - (_764 * _702);
    float _771 = (((_501.z - _558) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _558;
    vec4 _785 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _302) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _303) + cbTextureTilingScale._m0[15u].w));
    float _792 = (_785.x * 2.0) + (-1.0);
    float _793 = (_785.y * 2.0) + (-1.0);
    float _794 = dot(vec2(_792, _793), vec2(_792, _793));
    float _4115 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _802 = ((_785.z - _771) * _649) + _771;
    float _805 = ((cbMtdParam._m0[23u].y - _802) * _702) + _802;
    vec4 _824 = texture(sampler2D(M_MS_MB_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _302) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _303) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _830 = (_824.x * 2.0) + (-1.0);
    float _831 = (_824.y * 2.0) + (-1.0);
    float _832 = dot(vec2(_830, _831), vec2(_830, _831));
    float _4126 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _847 = ((sqrt(1.0 - (isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0)))) - _568) * _651) + _568;
    float _850 = (((_792 - _571) * _649) + _571) + (cbMtdParam._m0[21u].x * _571);
    float _851 = (((_793 - _572) * _650) + _572) + (cbMtdParam._m0[21u].x * _572);
    float _862 = (((_830 - _850) + (_850 * cbMtdParam._m0[22u].z)) * _702) + _850;
    float _863 = (((_831 - _851) + (_851 * cbMtdParam._m0[22u].z)) * _702) + _851;
    float _864 = (_702 * (sqrt(1.0 - (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)))) - _847)) + _847;
    float _868 = cbMtdParam._m0[22u].x + _601.w;
    float _871 = fma(_864, _252, fma(_863, _259, _862 * _245));
    float _874 = fma(_864, _253, fma(_863, _260, _862 * _246));
    float _877 = fma(_864, _254, fma(_863, _261, _862 * _247));
    float _881 = inversesqrt(dot(vec3(_871, _874, _877), vec3(_871, _874, _877)));
    float _882 = _881 * _871;
    float _883 = _881 * _874;
    float _884 = _881 * _877;
    float _4137 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _885 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _4148 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _4159 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _4170 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _4181 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _4192 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _890 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _904 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _944 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _954 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _944);
    float _955 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _944);
    float _956 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _944);
    float _960 = inversesqrt(dot(vec3(_954, _955, _956), vec3(_954, _955, _956)));
    float _961 = _954 * _960;
    float _962 = _955 * _960;
    float _963 = _956 * _960;
    float _969 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _970 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _988 = fma(_884, cbSceneParam._m0[5u].z, fma(_883, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _882));
    float _991 = fma(_884, cbSceneParam._m0[6u].z, fma(_883, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _882));
    float _994 = fma(_884, cbSceneParam._m0[7u].z, fma(_883, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _882));
    uint _1008 = (_283 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1014 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0)))) * cbInstanceData._m0[_1008].x;
    float _1015 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0)))) * cbInstanceData._m0[_1008].y;
    float _1016 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0)))) * cbInstanceData._m0[_1008].z;
    float _4203 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _1017 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _4214 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1018 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _4225 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _1019 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _1020 = 1.0 - _890;
    float _1021 = _1017 * _1020;
    float _1022 = _1018 * _1020;
    float _1023 = _1019 * _1020;
    float _1028 = (_1017 + (-0.039999999105930328369140625)) * _890;
    float _1029 = (_1018 + (-0.039999999105930328369140625)) * _890;
    float _1030 = (_1019 + (-0.039999999105930328369140625)) * _890;
    float _1031 = _1028 + 0.039999999105930328369140625;
    float _1033 = _1029 + 0.039999999105930328369140625;
    float _1034 = _1030 + 0.039999999105930328369140625;
    vec4 _1043 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _969, cbSceneParam._m0[86u].y * _970));
    float _1047 = ((isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))) * TEXCOORD_5.w) * _1043.x;
    float _1048 = dot(vec3(_882, _883, _884), vec3(_961, _962, _963));
    float _1051 = _1048 * 2.0;
    float _1055 = (_1051 * _882) - _961;
    float _1056 = (_1051 * _883) - _962;
    float _1057 = (_1051 * _884) - _963;
    float _1061 = abs(dot(vec3(_961, _962, _963), vec3(_882, _883, _884)));
    float _4236 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
    float _1063 = sqrt(_885);
    float _1076 = exp2((_1063 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1063 * 3.0));
    float _1082 = (1.0 - _1076) * ((_1063 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1083 = _1076 * _1063;
    float _1111 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1115 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1119 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1420;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1145 = fma(_1119, cbModelParam._m0[26u].z, fma(_1115, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1111));
        float _1149 = fma(_1119, cbModelParam._m0[27u].z, fma(_1115, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1111));
        float _1153 = fma(_1119, cbModelParam._m0[28u].z, fma(_1115, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1111));
        float _1178 = _1111 + _882;
        float _1179 = _1115 + _883;
        float _1180 = _1119 + _884;
        float _1190 = fma(_1180, cbModelParam._m0[26u].z, fma(_1179, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1178)) - _1145;
        float _1191 = fma(_1180, cbModelParam._m0[27u].z, fma(_1179, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1178)) - _1149;
        float _1192 = fma(_1180, cbModelParam._m0[28u].z, fma(_1179, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1178)) - _1153;
        float _1196 = inversesqrt(dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192)));
        float _1209 = ((_1196 * _1190) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1145 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1210 = ((_1196 * _1191) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1149 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1211 = ((_1196 * _1192) / cbModelParam._m0[34u].z) + ((((((_1153 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1228 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        float _1248 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1249 = _1248 * (_1214.x + (-0.5));
        float _1250 = _1248 * (_1214.y + (-0.5));
        float _1251 = _1248 * (_1214.z + (-0.5));
        float _1258 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1259 = _1258 * (_1221.x + (-0.5));
        float _1260 = _1258 * (_1221.y + (-0.5));
        float _1261 = _1258 * (_1221.z + (-0.5));
        float _1268 = exp2((_1228.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1228.x + (-0.5));
        float _1270 = _1268 * (_1228.y + (-0.5));
        float _1271 = _1268 * (_1228.z + (-0.5));
        float _1278 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1235.x + (-0.5));
        float _1280 = _1278 * (_1235.y + (-0.5));
        float _1281 = _1278 * (_1235.z + (-0.5));
        float _1282 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1283 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1284 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1285 = _1249 * 0.5;
        float _1286 = _1259 * 0.5;
        float _1287 = _1269 * 0.5;
        float _1288 = dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287));
        float _1293 = (_1288 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1288);
        float _1302 = (dot(vec3(_882, _883, _884), vec3(_1293 * _1285, _1293 * _1286, _1293 * _1287)) + 1.0) * 0.5;
        float _4262 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1312 = sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287)) / (_1282 + 9.9999997473787516355514526367188e-06);
        float _4273 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1314 = _1313 * 2.0;
        float _1318 = (1.0 - _1313) / (_1313 + 1.0);
        float _4284 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
        float _1328 = ((((1.0 - _1319) * (_1314 + 2.0)) * exp2(log2(isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (_1314 + 1.0))) + _1319) * _1282;
        float _1329 = _1250 * 0.5;
        float _1330 = _1260 * 0.5;
        float _1331 = _1270 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1345 = (dot(vec3(_882, _883, _884), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4295 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1354 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1283 + 9.9999997473787516355514526367188e-06);
        float _4306 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1356 = _1355 * 2.0;
        float _1360 = (1.0 - _1355) / (_1355 + 1.0);
        float _4317 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _1370 = ((((1.0 - _1361) * (_1356 + 2.0)) * exp2(log2(isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * (_1356 + 1.0))) + _1361) * _1283;
        float _1371 = _1251 * 0.5;
        float _1372 = _1261 * 0.5;
        float _1373 = _1271 * 0.5;
        float _1374 = dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373));
        float _1379 = (_1374 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1374);
        float _1387 = (dot(vec3(_882, _883, _884), vec3(_1379 * _1371, _1379 * _1372, _1379 * _1373)) + 1.0) * 0.5;
        float _4328 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1396 = sqrt(((_1372 * _1372) + (_1371 * _1371)) + (_1373 * _1373)) / (_1284 + 9.9999997473787516355514526367188e-06);
        float _4339 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _1398 = _1397 * 2.0;
        float _1402 = (1.0 - _1397) / (_1397 + 1.0);
        float _4350 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _1412 = ((((1.0 - _1403) * (_1398 + 2.0)) * exp2(log2(isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * (_1398 + 1.0))) + _1403) * _1284;
        _1420 = _1251;
        _1422 = _1250;
        _1423 = _1249;
        _1424 = _1261;
        _1425 = _1260;
        _1426 = _1259;
        _1427 = _1271;
        _1428 = _1270;
        _1429 = _1269;
        _1430 = _1284;
        _1431 = _1283;
        _1432 = _1282;
        _1433 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)));
        _1434 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0)));
        _1435 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0)));
    }
    else
    {
        _1420 = _1421;
        _1422 = _1421;
        _1423 = _1421;
        _1424 = _1421;
        _1425 = _1421;
        _1426 = _1421;
        _1427 = _1421;
        _1428 = _1421;
        _1429 = _1421;
        _1430 = _1421;
        _1431 = _1421;
        _1432 = _1421;
        _1433 = 0.0;
        _1434 = 0.0;
        _1435 = 0.0;
    }
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1460 = fma(_1119, cbModelParam._m0[30u].z, fma(_1115, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1111));
        float _1464 = fma(_1119, cbModelParam._m0[31u].z, fma(_1115, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1111));
        float _1468 = fma(_1119, cbModelParam._m0[32u].z, fma(_1115, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1111));
        float _1491 = _1111 + _882;
        float _1492 = _1115 + _883;
        float _1493 = _1119 + _884;
        float _1503 = fma(_1493, cbModelParam._m0[30u].z, fma(_1492, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1491)) - _1460;
        float _1504 = fma(_1493, cbModelParam._m0[31u].z, fma(_1492, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1491)) - _1464;
        float _1505 = fma(_1493, cbModelParam._m0[32u].z, fma(_1492, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1491)) - _1468;
        float _1509 = inversesqrt(dot(vec3(_1503, _1504, _1505), vec3(_1503, _1504, _1505)));
        float _1522 = ((_1509 * _1503) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1460 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1523 = ((_1509 * _1504) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1464 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1524 = ((_1509 * _1505) / cbModelParam._m0[35u].z) + ((((((_1468 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1526 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1522, _1523, _1524), 0.0);
        vec4 _1533 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1522, _1523, _1524), 0.0);
        vec4 _1540 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1522, _1523, _1524), 0.0);
        vec4 _1547 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1522, _1523, _1524), 0.0);
        float _1559 = exp2((_1526.w + (-0.5)) * 20.0) * 2.0;
        float _1560 = _1559 * (_1526.x + (-0.5));
        float _1561 = _1559 * (_1526.y + (-0.5));
        float _1562 = _1559 * (_1526.z + (-0.5));
        float _1569 = exp2((_1533.w + (-0.5)) * 20.0) * 2.0;
        float _1570 = _1569 * (_1533.x + (-0.5));
        float _1571 = _1569 * (_1533.y + (-0.5));
        float _1572 = _1569 * (_1533.z + (-0.5));
        float _1579 = exp2((_1540.w + (-0.5)) * 20.0) * 2.0;
        float _1580 = _1579 * (_1540.x + (-0.5));
        float _1581 = _1579 * (_1540.y + (-0.5));
        float _1582 = _1579 * (_1540.z + (-0.5));
        float _1589 = exp2((_1547.w + (-0.5)) * 20.0) * 2.0;
        float _1590 = _1589 * (_1547.x + (-0.5));
        float _1591 = _1589 * (_1547.y + (-0.5));
        float _1592 = _1589 * (_1547.z + (-0.5));
        float _1593 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1594 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1595 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1596 = _1560 * 0.5;
        float _1597 = _1570 * 0.5;
        float _1598 = _1580 * 0.5;
        float _1599 = dot(vec3(_1596, _1597, _1598), vec3(_1596, _1597, _1598));
        float _1604 = (_1599 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1599);
        float _1612 = (dot(vec3(_882, _883, _884), vec3(_1604 * _1596, _1604 * _1597, _1604 * _1598)) + 1.0) * 0.5;
        float _4391 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
        float _1621 = sqrt(((_1597 * _1597) + (_1596 * _1596)) + (_1598 * _1598)) / (_1593 + 9.9999997473787516355514526367188e-06);
        float _4402 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
        float _1622 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1623 = _1622 * 2.0;
        float _1627 = (1.0 - _1622) / (_1622 + 1.0);
        float _4413 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1628 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1637 = ((((1.0 - _1628) * (_1623 + 2.0)) * exp2(log2(isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * (_1623 + 1.0))) + _1628) * _1593;
        float _1638 = _1561 * 0.5;
        float _1639 = _1571 * 0.5;
        float _1640 = _1581 * 0.5;
        float _1641 = dot(vec3(_1638, _1639, _1640), vec3(_1638, _1639, _1640));
        float _1646 = (_1641 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1641);
        float _1654 = (dot(vec3(_882, _883, _884), vec3(_1646 * _1638, _1646 * _1639, _1646 * _1640)) + 1.0) * 0.5;
        float _4424 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1663 = sqrt(((_1639 * _1639) + (_1638 * _1638)) + (_1640 * _1640)) / (_1594 + 9.9999997473787516355514526367188e-06);
        float _4435 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1664 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1665 = _1664 * 2.0;
        float _1669 = (1.0 - _1664) / (_1664 + 1.0);
        float _4446 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1670 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
        float _1679 = ((((1.0 - _1670) * (_1665 + 2.0)) * exp2(log2(isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (_1665 + 1.0))) + _1670) * _1594;
        float _1680 = _1562 * 0.5;
        float _1681 = _1572 * 0.5;
        float _1682 = _1582 * 0.5;
        float _1683 = dot(vec3(_1680, _1681, _1682), vec3(_1680, _1681, _1682));
        float _1688 = (_1683 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1683);
        float _1696 = (dot(vec3(_882, _883, _884), vec3(_1688 * _1680, _1688 * _1681, _1688 * _1682)) + 1.0) * 0.5;
        float _4457 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1705 = sqrt(((_1681 * _1681) + (_1680 * _1680)) + (_1682 * _1682)) / (_1595 + 9.9999997473787516355514526367188e-06);
        float _4468 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1706 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1707 = _1706 * 2.0;
        float _1711 = (1.0 - _1706) / (_1706 + 1.0);
        float _4479 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1712 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1721 = ((((1.0 - _1712) * (_1707 + 2.0)) * exp2(log2(isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (_1707 + 1.0))) + _1712) * _1595;
        _1729 = _1562;
        _1730 = _1561;
        _1731 = _1560;
        _1732 = _1572;
        _1733 = _1571;
        _1734 = _1570;
        _1735 = _1582;
        _1736 = _1581;
        _1737 = _1580;
        _1738 = _1595;
        _1739 = _1594;
        _1740 = _1593;
        _1741 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0)));
        _1742 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0)));
        _1743 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)));
    }
    else
    {
        _1729 = _1421;
        _1730 = _1421;
        _1731 = _1421;
        _1732 = _1421;
        _1733 = _1421;
        _1734 = _1421;
        _1735 = _1421;
        _1736 = _1421;
        _1737 = _1421;
        _1738 = _1421;
        _1739 = _1421;
        _1740 = _1421;
        _1741 = 0.0;
        _1742 = 0.0;
        _1743 = 0.0;
    }
    float _1753 = (cbModelParam._m0[1u].x * (_1741 - _1433)) + _1433;
    float _1754 = (cbModelParam._m0[1u].x * (_1742 - _1434)) + _1434;
    float _1755 = (cbModelParam._m0[1u].x * (_1743 - _1435)) + _1435;
    float _1776 = fma(_1755, cbSceneParam._m0[89u].z, fma(_1754, cbSceneParam._m0[89u].y, _1753 * cbSceneParam._m0[89u].x));
    float _1779 = fma(_1755, cbSceneParam._m0[90u].z, fma(_1754, cbSceneParam._m0[90u].y, _1753 * cbSceneParam._m0[90u].x));
    float _1782 = fma(_1755, cbSceneParam._m0[91u].z, fma(_1754, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1753));
    float _1797 = _1055 * 0.5;
    float _1798 = _1056 * 0.5;
    float _1799 = _1057 * 0.5;
    float _1800 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1731, _1734, _1737, _1740));
    float _1803 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1730, _1733, _1736, _1739));
    float _1806 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1729, _1732, _1735, _1738));
    float _1840;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1813 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1420, _1424, _1427, _1430));
        float _1817 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1422, _1425, _1428, _1431));
        float _1821 = dot(vec4(_1797, _1798, _1799, 1.0), vec4(_1423, _1426, _1429, _1432));
        float _1828 = dot(vec4(cbModelParam._m0[39u]), vec4(_1797, _1798, _1799, 1.0));
        _1840 = dot(vec3(isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)), isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0)), isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1828) ? 0.0 : (isnan(0.0) ? _1828 : max(0.0, _1828))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1840 = 1.0;
    }
    float _1851;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1842 = dot(vec4(cbModelParam._m0[40u]), vec4(_1797, _1798, _1799, 1.0));
        _1851 = dot(vec3(isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0)), isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0)), isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1842) ? 0.0 : (isnan(0.0) ? _1842 : max(0.0, _1842))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1851 = 1.0;
    }
    float _1855 = (_1851 * cbModelParam._m0[1u].x) + (_1840 * (1.0 - cbModelParam._m0[1u].x));
    float _1865 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _885);
    float _1866 = isnan(_1865) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1865 : min(cbModelParam._m0[25u].z, _1865));
    float _1946;
    float _1948;
    float _1950;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1913 = fma(_1119, cbModelParam._m0[13u].z, fma(_1115, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1111)) + cbModelParam._m0[13u].w;
        float _1917 = fma(_1119, cbModelParam._m0[14u].z, fma(_1115, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1111)) + cbModelParam._m0[14u].w;
        float _1921 = fma(_1119, cbModelParam._m0[15u].z, fma(_1115, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1111)) + cbModelParam._m0[15u].w;
        float _1924 = fma(_1057, cbModelParam._m0[13u].z, fma(_1056, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1055));
        float _1927 = fma(_1057, cbModelParam._m0[14u].z, fma(_1056, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1055));
        float _1930 = fma(_1057, cbModelParam._m0[15u].z, fma(_1056, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1055));
        float _1958;
        if (_1924 > 0.0)
        {
            _1958 = abs((1.0 - _1913) / _1924);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1924 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1913 + 1.0) / _1924);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1958 = frontier_phi_14_12_ladder;
        }
        float _2129;
        if (_1927 > 0.0)
        {
            _2129 = abs((1.0 - _1917) / _1927);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1927 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1917 + 1.0) / _1927);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2129 = frontier_phi_23_19_ladder;
        }
        float _2424;
        if (_1930 > 0.0)
        {
            _2424 = abs((1.0 - _1921) / _1930);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1930 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1921 + 1.0) / _1930);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2424 = frontier_phi_35_30_ladder;
        }
        float _2426 = isnan(_2129) ? _1958 : (isnan(_1958) ? _2129 : min(_1958, _2129));
        float _2427 = isnan(_2424) ? _2426 : (isnan(_2426) ? _2424 : min(_2426, _2424));
        float _2431 = (_2427 * _1924) + _1913;
        float _2432 = (_2427 * _1927) + _1917;
        float _2433 = (_2427 * _1930) + _1921;
        float _2434 = _2427 * 9.9999997473787516355514526367188e-05;
        float _2436 = (-1.0) - _2434;
        float _2438 = _2434 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2433 > _2438) || ((_2433 < _2436) || ((_2432 > _2438) || ((_2432 < _2436) || ((_2431 < _2436) || (_2431 > _2438))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2578 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2433, cbModelParam._m0[9u].z, fma(_2432, cbModelParam._m0[9u].y, _2431 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2433, cbModelParam._m0[10u].z, fma(_2432, cbModelParam._m0[10u].y, _2431 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2433, cbModelParam._m0[11u].z, fma(_2432, cbModelParam._m0[11u].y, _2431 * cbModelParam._m0[11u].x))), _1866);
            frontier_phi_13_35_ladder = _2578.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2578.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2578.x * cbModelParam._m0[1u].y;
        }
        _1946 = frontier_phi_13_35_ladder_2;
        _1948 = frontier_phi_13_35_ladder_1;
        _1950 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1934 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1055, _1056, _1057), _1866);
        _1946 = _1934.x * cbModelParam._m0[1u].y;
        _1948 = _1934.y * cbModelParam._m0[1u].y;
        _1950 = _1934.z * cbModelParam._m0[1u].y;
    }
    float _1954 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _885);
    float _1955 = isnan(_1954) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1954 : min(cbModelParam._m0[25u].w, _1954));
    float _2044;
    float _2046;
    float _2048;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2008 = fma(_1119, cbModelParam._m0[21u].z, fma(_1115, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1111)) + cbModelParam._m0[21u].w;
        float _2012 = fma(_1119, cbModelParam._m0[22u].z, fma(_1115, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1111)) + cbModelParam._m0[22u].w;
        float _2016 = fma(_1119, cbModelParam._m0[23u].z, fma(_1115, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1111)) + cbModelParam._m0[23u].w;
        float _2019 = fma(_1057, cbModelParam._m0[21u].z, fma(_1056, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1055));
        float _2022 = fma(_1057, cbModelParam._m0[22u].z, fma(_1056, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1055));
        float _2025 = fma(_1057, cbModelParam._m0[23u].z, fma(_1056, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1055));
        float _2134;
        if (_2019 > 0.0)
        {
            _2134 = abs((1.0 - _2008) / _2019);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2019 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2008 + 1.0) / _2019);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2134 = frontier_phi_25_21_ladder;
        }
        float _2451;
        if (_2022 > 0.0)
        {
            _2451 = abs((1.0 - _2012) / _2022);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2022 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2012 + 1.0) / _2022);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2451 = frontier_phi_37_32_ladder;
        }
        float _2789;
        if (_2025 > 0.0)
        {
            _2789 = abs((1.0 - _2016) / _2025);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2025 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2016 + 1.0) / _2025);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2789 = frontier_phi_47_44_ladder;
        }
        float _2791 = isnan(_2451) ? _2134 : (isnan(_2134) ? _2451 : min(_2134, _2451));
        float _2792 = isnan(_2789) ? _2791 : (isnan(_2791) ? _2789 : min(_2791, _2789));
        float _2796 = (_2792 * _2019) + _2008;
        float _2797 = (_2792 * _2022) + _2012;
        float _2798 = (_2792 * _2025) + _2016;
        float _2799 = _2792 * 9.9999997473787516355514526367188e-05;
        float _2800 = (-1.0) - _2799;
        float _2802 = _2799 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2798 > _2802) || ((_2798 < _2800) || ((_2797 > _2802) || ((_2797 < _2800) || ((_2796 < _2800) || (_2796 > _2802))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2920 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2798, cbModelParam._m0[17u].z, fma(_2797, cbModelParam._m0[17u].y, _2796 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2798, cbModelParam._m0[18u].z, fma(_2797, cbModelParam._m0[18u].y, _2796 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2798, cbModelParam._m0[19u].z, fma(_2797, cbModelParam._m0[19u].y, _2796 * cbModelParam._m0[19u].x))), _1955);
            frontier_phi_22_47_ladder = _2920.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2920.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2920.x * cbModelParam._m0[1u].z;
        }
        _2044 = frontier_phi_22_47_ladder_2;
        _2046 = frontier_phi_22_47_ladder_1;
        _2048 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2028 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1055, _1056, _1057), _1955);
        _2044 = _2028.x * cbModelParam._m0[1u].z;
        _2046 = _2028.y * cbModelParam._m0[1u].z;
        _2048 = _2028.z * cbModelParam._m0[1u].z;
    }
    float _2061 = (((_1082 * _1031) + _1083) * _1047) * ((cbModelParam._m0[1u].w * (_2044 - _1946)) + _1946);
    float _2063 = (((_1082 * _1033) + _1083) * _1047) * ((cbModelParam._m0[1u].w * (_2046 - _1948)) + _1948);
    float _2065 = (((_1082 * _1034) + _1083) * _1047) * ((cbModelParam._m0[1u].w * (_2048 - _1950)) + _1950);
    float _2068 = fma(_2065, cbSceneParam._m0[89u].z, fma(_2063, cbSceneParam._m0[89u].y, _2061 * cbSceneParam._m0[89u].x));
    float _2071 = fma(_2065, cbSceneParam._m0[90u].z, fma(_2063, cbSceneParam._m0[90u].y, _2061 * cbSceneParam._m0[90u].x));
    float _2074 = fma(_2065, cbSceneParam._m0[91u].z, fma(_2063, cbSceneParam._m0[91u].y, _2061 * cbSceneParam._m0[91u].x));
    float _2108 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2112 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2116 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2120 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2121 = _2108 / _2120;
    float _2122 = _2112 / _2120;
    float _2123 = _2116 / _2120;
    float _2270;
    float _2271;
    float _2272;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2150 = ((uint(_2123 > cbSceneParam._m0[59u].y) + uint(_2123 > cbSceneParam._m0[59u].x)) + uint(_2123 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2151 = _2150 + 43u;
        uint _2159 = _2150 + 44u;
        uint _2167 = _2150 + 45u;
        uint _2175 = _2150 + 46u;
        float _2186 = fma(_2120, cbSceneParam._m0[_2151].w, fma(_2116, cbSceneParam._m0[_2151].z, fma(_2112, cbSceneParam._m0[_2151].y, _2108 * cbSceneParam._m0[_2151].x)));
        float _2190 = fma(_2120, cbSceneParam._m0[_2159].w, fma(_2116, cbSceneParam._m0[_2159].z, fma(_2112, cbSceneParam._m0[_2159].y, _2108 * cbSceneParam._m0[_2159].x)));
        float _2198 = fma(_2120, cbSceneParam._m0[_2175].w, fma(_2116, cbSceneParam._m0[_2175].z, fma(_2112, cbSceneParam._m0[_2175].y, _2108 * cbSceneParam._m0[_2175].x)));
        float _2203 = cbSceneParam._m0[33u].z * _2198;
        float _2205 = cbSceneParam._m0[33u].w * _2198;
        float _2208 = fma(_2120, cbSceneParam._m0[_2167].w, fma(_2116, cbSceneParam._m0[_2167].z, fma(_2112, cbSceneParam._m0[_2167].y, _2108 * cbSceneParam._m0[_2167].x))) / _2198;
        float _2256 = (cbSceneParam._m0[33u].x - sqrt(((_2122 * _2122) + (_2121 * _2121)) + (_2123 * _2123))) * cbSceneParam._m0[33u].y;
        float _4605 = isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0));
        float _2263 = (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2203 + _2186) / _2198, (_2205 + _2190) / _2198), _2208), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2205 + _2186) / _2198, (_2190 - _2203) / _2198), _2208), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2186 - _2203) / _2198, (_2190 - _2205) / _2198), _2208), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2186 - _2205) / _2198, (_2203 + _2190) / _2198), _2208), 0.0)).x), vec4(0.25)));
        _2270 = 1.0 - (_2263 * cbSceneParam._m0[34u].x);
        _2271 = 1.0 - (_2263 * cbSceneParam._m0[34u].y);
        _2272 = 1.0 - (_2263 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2270 = 1.0;
        _2271 = 1.0;
        _2272 = 1.0;
    }
    float _2336;
    float _2338;
    float _2340;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2324 = fma(_2120, cbSceneParam._m0[63u].w, fma(_2116, cbSceneParam._m0[63u].z, fma(_2112, cbSceneParam._m0[63u].y, _2108 * cbSceneParam._m0[63u].x)));
        float _2325 = fma(_2120, cbSceneParam._m0[60u].w, fma(_2116, cbSceneParam._m0[60u].z, fma(_2112, cbSceneParam._m0[60u].y, _2108 * cbSceneParam._m0[60u].x))) / _2324;
        float _2326 = fma(_2120, cbSceneParam._m0[61u].w, fma(_2116, cbSceneParam._m0[61u].z, fma(_2112, cbSceneParam._m0[61u].y, _2108 * cbSceneParam._m0[61u].x))) / _2324;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2325 >= cbSceneParam._m0[64u].x) && (_2326 >= cbSceneParam._m0[64u].y)) && (_2325 <= cbSceneParam._m0[64u].z)) && (_2326 <= cbSceneParam._m0[64u].w))
        {
            float _2464 = fma(_2120, cbSceneParam._m0[62u].w, fma(_2116, cbSceneParam._m0[62u].z, fma(_2112, cbSceneParam._m0[62u].y, _2108 * cbSceneParam._m0[62u].x))) / _2324;
            float _2468 = isnan(cbSceneParam._m0[41u].w) ? _2464 : (isnan(_2464) ? cbSceneParam._m0[41u].w : max(_2464, cbSceneParam._m0[41u].w));
            float _2511 = (cbSceneParam._m0[33u].x - sqrt(((_2122 * _2122) + (_2121 * _2121)) + (_2123 * _2123))) * cbSceneParam._m0[33u].y;
            float _4621 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
            float _2518 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2325, cbSceneParam._m0[33u].w + _2326), _2468), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2325, _2326 - cbSceneParam._m0[33u].z), _2468), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2325 - cbSceneParam._m0[33u].z, _2326 - cbSceneParam._m0[33u].w), _2468), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2325 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2326), _2468), 0.0)).x), vec4(0.25)));
            float _2522 = 1.0 - (_2518 * cbSceneParam._m0[34u].x);
            float _2523 = 1.0 - (_2518 * cbSceneParam._m0[34u].y);
            float _2524 = 1.0 - (_2518 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2524) ? _2272 : (isnan(_2272) ? _2524 : min(_2272, _2524));
            frontier_phi_34_33_ladder_1 = isnan(_2523) ? _2271 : (isnan(_2271) ? _2523 : min(_2271, _2523));
            frontier_phi_34_33_ladder_2 = isnan(_2522) ? _2270 : (isnan(_2270) ? _2522 : min(_2270, _2522));
        }
        else
        {
            frontier_phi_34_33_ladder = _2272;
            frontier_phi_34_33_ladder_1 = _2271;
            frontier_phi_34_33_ladder_2 = _2270;
        }
        _2336 = frontier_phi_34_33_ladder_2;
        _2338 = frontier_phi_34_33_ladder_1;
        _2340 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2336 = _2270;
        _2338 = _2271;
        _2340 = _2272;
    }
    uvec4 _2345 = floatBitsToUint(cbInstanceData._m0[_283 + 5u]);
    uint _2347 = _2345.x * 14u;
    uint _2348 = _2347 + 13u;
    float _2355 = _1047 + (-1.0);
    float _2360 = (cbLight._m0[_2348].x * _2355) + 1.0;
    float _2361 = (cbLight._m0[_2348].y * _2355) + 1.0;
    float _2362 = (cbLight._m0[_2348].z * _2355) + 1.0;
    float _2363 = (cbLight._m0[_2348].w * _2355) + 1.0;
    uint _2364 = _2347 + 5u;
    float _2370 = isnan(1.0) ? _2361 : (isnan(_2361) ? 1.0 : min(_2361, 1.0));
    uint _2374 = _2347 + 4u;
    float _2383 = isnan(1.0) ? _2360 : (isnan(_2360) ? 1.0 : min(_2360, 1.0));
    uint _2387 = _2347 | 1u;
    float _2398 = dot(vec3(cbLight._m0[_2347].xyz), vec3(_882, _883, _884));
    float _2401 = dot(vec3(cbLight._m0[_2387].xyz), vec3(_882, _883, _884));
    float _4657 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _4668 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
    float _2406 = (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * 0.3183098733425140380859375;
    float _2408 = (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * 0.3183098733425140380859375;
    float _2415 = ((cbLight._m0[_2364].x * _2370) * _2408) + (((cbLight._m0[_2374].x * _2336) * _2383) * _2406);
    float _2416 = ((_2370 * cbLight._m0[_2364].y) * _2408) + (((cbLight._m0[_2374].y * _2338) * _2383) * _2406);
    float _2417 = ((_2370 * cbLight._m0[_2364].z) * _2408) + (((cbLight._m0[_2374].z * _2340) * _2383) * _2406);
    uvec4 _2421 = floatBitsToUint(cbLight._m0[_2347 + 12u]);
    bool _2423 = _2421.x == 0u;
    float _2525;
    float _2527;
    float _2529;
    if (_2423)
    {
        _2525 = _2415;
        _2527 = _2416;
        _2529 = _2417;
    }
    else
    {
        uint _2533 = _2347 + 6u;
        float _2549 = (dot(vec3(cbLight._m0[_2347 + 2u].xyz), vec3(_882, _883, _884)) * 0.5) + 0.5;
        float _2550 = _2549 * _2549;
        float _4679 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
        float _2551 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _2552 = isnan(1.0) ? _2362 : (isnan(_2362) ? 1.0 : min(_2362, 1.0));
        _2525 = (((cbLight._m0[_2533].x * 0.3183098733425140380859375) * _2551) * _2552) + _2415;
        _2527 = (((cbLight._m0[_2533].y * 0.3183098733425140380859375) * _2551) * _2552) + _2416;
        _2529 = (((cbLight._m0[_2533].z * 0.3183098733425140380859375) * _2551) * _2552) + _2417;
    }
    bool _2532 = _2421.y == 0u;
    float _2587;
    float _2589;
    float _2591;
    if (_2532)
    {
        _2587 = _2525;
        _2589 = _2527;
        _2591 = _2529;
    }
    else
    {
        uint _2760 = _2347 + 7u;
        float _2776 = (dot(vec3(cbLight._m0[_2347 + 3u].xyz), vec3(_882, _883, _884)) * 0.5) + 0.5;
        float _2777 = _2776 * _2776;
        float _4695 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2778 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _2779 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
        _2587 = (((cbLight._m0[_2760].x * 0.3183098733425140380859375) * _2778) * _2779) + _2525;
        _2589 = (((cbLight._m0[_2760].y * 0.3183098733425140380859375) * _2778) * _2779) + _2527;
        _2591 = (((cbLight._m0[_2760].z * 0.3183098733425140380859375) * _2778) * _2779) + _2529;
    }
    uint _2594 = _2347 + 8u;
    float _2607 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2347].w)) * _885) * 0.949999988079071044921875);
    float _2608 = _2607 * _2607;
    float _2609 = cbLight._m0[_2347].x + _961;
    float _2610 = cbLight._m0[_2347].y + _962;
    float _2611 = cbLight._m0[_2347].z + _963;
    float _2615 = inversesqrt(dot(vec3(_2609, _2610, _2611), vec3(_2609, _2610, _2611)));
    float _2616 = _2615 * _2609;
    float _2617 = _2615 * _2610;
    float _2618 = _2615 * _2611;
    float _2619 = dot(vec3(_882, _883, _884), vec3(cbLight._m0[_2347].xyz));
    float _4711 = isnan(0.0) ? _2619 : (isnan(_2619) ? 0.0 : max(_2619, 0.0));
    float _2622 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
    float _4722 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    float _2623 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
    float _2624 = dot(vec3(_882, _883, _884), vec3(_2616, _2617, _2618));
    float _4733 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
    float _2627 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
    float _2628 = dot(vec3(cbLight._m0[_2347].xyz), vec3(_2616, _2617, _2618));
    float _4744 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
    float _2632 = _2608 * _2608;
    float _2636 = ((_2627 * _2627) * (_2632 + (-1.0))) + 1.0;
    float _2644 = exp2(log2(1.0 - (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0)))) * 5.0);
    float _2645 = 0.959999978542327880859375 - _1028;
    float _2647 = 0.959999978542327880859375 - _1029;
    float _2648 = 0.959999978542327880859375 - _1030;
    float _2655 = 1.0 - _2608;
    float _2666 = (0.5 / (((_2623 * ((_2622 * _2655) + _2608)) + 9.9999999392252902907785028219223e-09) + (((_2623 * _2655) + _2608) * _2622))) * _2622;
    float _4755 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
    float _2668 = (isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * (_2632 / ((_2636 * _2636) * 3.141590118408203125));
    uint _2682 = _2347 + 9u;
    float _2693 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2387].w)) * _885) * 0.949999988079071044921875);
    float _2694 = _2693 * _2693;
    float _2695 = cbLight._m0[_2387].x + _961;
    float _2696 = cbLight._m0[_2387].y + _962;
    float _2697 = cbLight._m0[_2387].z + _963;
    float _2701 = inversesqrt(dot(vec3(_2695, _2696, _2697), vec3(_2695, _2696, _2697)));
    float _2702 = _2701 * _2695;
    float _2703 = _2701 * _2696;
    float _2704 = _2701 * _2697;
    float _2705 = dot(vec3(_882, _883, _884), vec3(cbLight._m0[_2387].xyz));
    float _4766 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
    float _2708 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
    float _2709 = dot(vec3(_882, _883, _884), vec3(_2702, _2703, _2704));
    float _4777 = isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0));
    float _2712 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
    float _2713 = dot(vec3(cbLight._m0[_2387].xyz), vec3(_2702, _2703, _2704));
    float _4788 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
    float _2717 = _2694 * _2694;
    float _2721 = ((_2712 * _2712) * (_2717 + (-1.0))) + 1.0;
    float _2728 = exp2(log2(1.0 - (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0)))) * 5.0);
    float _2735 = 1.0 - _2694;
    float _2745 = (0.5 / (((_2623 * ((_2708 * _2735) + _2694)) + 9.9999999392252902907785028219223e-09) + (((_2623 * _2735) + _2694) * _2708))) * _2708;
    float _4799 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
    float _2747 = (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0))) * (_2717 / ((_2721 * _2721) * 3.141590118408203125));
    float _2757 = (((((_2728 * _2645) + _1031) * cbLight._m0[_2682].x) * _2747) * _2370) + ((((cbLight._m0[_2594].x * _2336) * ((_2644 * _2645) + _1031)) * _2668) * _2383);
    float _2758 = (((((_2728 * _2647) + _1033) * cbLight._m0[_2682].y) * _2747) * _2370) + ((((cbLight._m0[_2594].y * _2338) * ((_2644 * _2647) + _1033)) * _2668) * _2383);
    float _2759 = (((((_2728 * _2648) + _1034) * cbLight._m0[_2682].z) * _2747) * _2370) + ((((cbLight._m0[_2594].z * _2340) * ((_2644 * _2648) + _1034)) * _2668) * _2383);
    float _2815;
    float _2817;
    float _2819;
    if (_2423)
    {
        _2815 = _2757;
        _2817 = _2758;
        _2819 = _2759;
    }
    else
    {
        uint _2821 = _2347 + 2u;
        uint _2825 = _2347 + 10u;
        float _2839 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2821].w)) * _885) * 0.949999988079071044921875);
        float _2840 = _2839 * _2839;
        float _2841 = cbLight._m0[_2821].x + _961;
        float _2842 = cbLight._m0[_2821].y + _962;
        float _2843 = cbLight._m0[_2821].z + _963;
        float _2847 = inversesqrt(dot(vec3(_2841, _2842, _2843), vec3(_2841, _2842, _2843)));
        float _2848 = _2847 * _2841;
        float _2849 = _2847 * _2842;
        float _2850 = _2847 * _2843;
        float _2851 = dot(vec3(_882, _883, _884), vec3(cbLight._m0[_2821].xyz));
        float _4810 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
        float _2854 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
        float _2855 = dot(vec3(_882, _883, _884), vec3(_2848, _2849, _2850));
        float _4821 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        float _2858 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
        float _2859 = dot(vec3(cbLight._m0[_2821].xyz), vec3(_2848, _2849, _2850));
        float _4832 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2863 = _2840 * _2840;
        float _2867 = ((_2858 * _2858) * (_2863 + (-1.0))) + 1.0;
        float _2874 = exp2(log2(1.0 - (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0)))) * 5.0);
        float _2881 = 1.0 - _2840;
        float _2891 = (0.5 / (((_2623 * ((_2854 * _2881) + _2840)) + 9.9999999392252902907785028219223e-09) + (((_2623 * _2881) + _2840) * _2854))) * _2854;
        float _4843 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
        float _2893 = (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0))) * (_2863 / ((_2867 * _2867) * 3.141590118408203125));
        float _2894 = isnan(1.0) ? _2362 : (isnan(_2362) ? 1.0 : min(_2362, 1.0));
        _2815 = (((((_2874 * _2645) + _1031) * cbLight._m0[_2825].x) * _2893) * _2894) + _2757;
        _2817 = (((((_2874 * _2647) + _1033) * cbLight._m0[_2825].y) * _2893) * _2894) + _2758;
        _2819 = (((((_2874 * _2648) + _1034) * cbLight._m0[_2825].z) * _2893) * _2894) + _2759;
    }
    float _2925;
    float _2927;
    float _2929;
    if (_2532)
    {
        _2925 = _2815;
        _2927 = _2817;
        _2929 = _2819;
    }
    else
    {
        uint _2936 = _2347 + 3u;
        uint _2940 = _2347 + 11u;
        float _2954 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2936].w)) * _885) * 0.949999988079071044921875);
        float _2955 = _2954 * _2954;
        float _2956 = cbLight._m0[_2936].x + _961;
        float _2957 = cbLight._m0[_2936].y + _962;
        float _2958 = cbLight._m0[_2936].z + _963;
        float _2962 = inversesqrt(dot(vec3(_2956, _2957, _2958), vec3(_2956, _2957, _2958)));
        float _2963 = _2962 * _2956;
        float _2964 = _2962 * _2957;
        float _2965 = _2962 * _2958;
        float _2966 = dot(vec3(_882, _883, _884), vec3(cbLight._m0[_2936].xyz));
        float _4859 = isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0));
        float _2969 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
        float _2970 = dot(vec3(_882, _883, _884), vec3(_2963, _2964, _2965));
        float _4870 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
        float _2973 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
        float _2974 = dot(vec3(cbLight._m0[_2936].xyz), vec3(_2963, _2964, _2965));
        float _4881 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
        float _2978 = _2955 * _2955;
        float _2982 = ((_2973 * _2973) * (_2978 + (-1.0))) + 1.0;
        float _2989 = exp2(log2(1.0 - (isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0)))) * 5.0);
        float _2996 = 1.0 - _2955;
        float _3006 = (0.5 / (((_2623 * ((_2969 * _2996) + _2955)) + 9.9999999392252902907785028219223e-09) + (((_2623 * _2996) + _2955) * _2969))) * _2969;
        float _4892 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
        float _3008 = (isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0))) * (_2978 / ((_2982 * _2982) * 3.141590118408203125));
        float _3009 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
        _2925 = (((((_2989 * _2645) + _1031) * cbLight._m0[_2940].x) * _3008) * _3009) + _2815;
        _2927 = (((((_2989 * _2647) + _1033) * cbLight._m0[_2940].y) * _3008) * _3009) + _2817;
        _2929 = (((((_2989 * _2648) + _1034) * cbLight._m0[_2940].z) * _3008) * _3009) + _2819;
    }
    float _3075;
    float _3077;
    float _3079;
    float _3081;
    float _3083;
    float _3085;
    if (_2345.y == 0u)
    {
        uvec4 _3030 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3031 = _3030.x;
        uint _3042 = uint((float(_3030.y) * floor(float(uint(cbSceneParam._m0[85u].y * _970) / _3031))) + floor(float(uint(cbSceneParam._m0[85u].x * _969) / _3031)));
        float _3052 = (log2(_2123 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3053 = isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0));
        uint _3056 = uint(isnan(14.0) ? _3053 : (isnan(_3053) ? 14.0 : min(_3053, 14.0)));
        uvec4 _3061 = texelFetch(g_lightClusterGridBuffer, int(((_3056 << 2u) + (_3042 << 6u)) >> 2u));
        uint _3062 = _3061.x;
        uint _3063 = _3030.z;
        float _3142;
        float _3144;
        float _3146;
        float _3148;
        float _3150;
        float _3152;
        if (((((1u << ((_3063 >> 4u) & 15u)) + 4294967295u) & _3062) == 0u) || ((_3063 & 240u) == 0u))
        {
            _3142 = 0.0;
            _3144 = 0.0;
            _3146 = 0.0;
            _3148 = 0.0;
            _3150 = 0.0;
            _3152 = 0.0;
        }
        else
        {
            float _3143;
            float _3145;
            float _3147;
            float _3149;
            float _3151;
            float _3153;
            float _3286 = 0.0;
            float _3287 = 0.0;
            float _3288 = 0.0;
            float _3289 = 0.0;
            float _3290 = 0.0;
            float _3291 = 0.0;
            uint _3292 = 0u;
            uint _3301;
            bool _3302;
            for (;;)
            {
                _3301 = texelFetch(g_lightClassification, int((((_3056 << 5u) + (_3042 << 9u)) + (_3292 << 2u)) >> 2u)).x;
                _3302 = _3301 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3302)
                {
                    frontier_phi_66_pred = _3291;
                    frontier_phi_66_pred_1 = _3290;
                    frontier_phi_66_pred_2 = _3289;
                    frontier_phi_66_pred_3 = _3288;
                    frontier_phi_66_pred_4 = _3287;
                    frontier_phi_66_pred_5 = _3286;
                }
                else
                {
                    float _3410;
                    float _3411;
                    float _3412;
                    float _3413;
                    float _3414;
                    float _3415;
                    uint _3416;
                    _3410 = _3286;
                    _3411 = _3287;
                    _3412 = _3288;
                    _3413 = _3289;
                    _3414 = _3290;
                    _3415 = _3291;
                    _3416 = _3301;
                    float _3342;
                    float _3343;
                    float _3344;
                    float _3345;
                    float _3346;
                    float _3347;
                    for (;;)
                    {
                        uint _3420 = uint(findLSB(_3416)) + (_3292 << 5u);
                        uint _3417 = (_3416 + 4294967295u) & _3416;
                        uint _3422 = _3420 * 48u;
                        vec4 _3436 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3422)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3422 + 3u)).x));
                        uint _3442 = (_3420 * 48u) + 4u;
                        vec4 _3455 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3442)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 3u)).x));
                        uint _3461 = (_3420 * 48u) + 8u;
                        vec3 _3472 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3461)).x, texelFetch(g_PointLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3461 + 2u)).x));
                        float _3476 = _3436.x - _2121;
                        float _3477 = _3436.y - _2122;
                        float _3478 = _3436.z - _2123;
                        float _3479 = dot(vec3(_3476, _3477, _3478), vec3(_3476, _3477, _3478));
                        float _3482 = inversesqrt(_3479);
                        float _3483 = _3482 * _3476;
                        float _3484 = _3482 * _3477;
                        float _3485 = _3482 * _3478;
                        float _3486 = dot(vec3(_988, _991, _994), vec3(_3483, _3484, _3485));
                        float _3491 = 1.0 - (_3479 * _3436.w);
                        float _4918 = isnan(0.0) ? _3491 : (isnan(_3491) ? 0.0 : max(_3491, 0.0));
                        float _3492 = isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0));
                        float _3493 = sqrt(_3479) * _3455.w;
                        float _3496 = 1.39999997615814208984375 / (_3493 + 1.39999997615814208984375);
                        float _3497 = _3496 * _3496;
                        float _3500 = ((1.0 - _3497) * _3486) + _3497;
                        float _3503 = _3493 * _3493;
                        float _3507 = ((isnan(0.0) ? _3500 : (isnan(_3500) ? 0.0 : max(_3500, 0.0))) * _3492) / ((_3503 * 0.699999988079071044921875) + 1.0);
                        float _3511 = (-0.0) - _2121;
                        float _3512 = (-0.0) - _2122;
                        float _3513 = (-0.0) - _2123;
                        float _3517 = inversesqrt(dot(vec3(_3511, _3512, _3513), vec3(_3511, _3512, _3513)));
                        float _3518 = _3517 * _3511;
                        float _3519 = _3517 * _3512;
                        float _3520 = _3517 * _3513;
                        float _3527 = exp2(log2(1.0 / ((_3503 * 3.5) + 5.0)) * 0.25);
                        float _3528 = 1.0 - _1063;
                        float _3535 = sqrt(1.0 - ((1.0 - (_3528 * _3528)) * (1.0 - (_3527 * _3527))));
                        float _3536 = _3535 * _3535;
                        float _3537 = _3536 * _3536;
                        float _3538 = _3518 + _3483;
                        float _3539 = _3519 + _3484;
                        float _3540 = _3520 + _3485;
                        float _3544 = inversesqrt(dot(vec3(_3538, _3539, _3540), vec3(_3538, _3539, _3540)));
                        float _3548 = dot(vec3(_988, _991, _994), vec3(_3518, _3519, _3520));
                        float _4934 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                        float _3551 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
                        float _3552 = dot(vec3(_988, _991, _994), vec3(_3544 * _3538, _3544 * _3539, _3544 * _3540));
                        float _4945 = isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0));
                        float _3555 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
                        float _3559 = ((_3555 * _3555) * (_3537 + (-1.0))) + 1.0;
                        float _3560 = _3496 * _3536;
                        float _3561 = _3560 * _3560;
                        float _3564 = ((1.0 - _3561) * _3486) + _3561;
                        float _4956 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                        float _3565 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
                        float _3566 = 1.0 - _3536;
                        float _3576 = (0.5 / (((_3565 * ((_3551 * _3566) + _3536)) + 9.9999999392252902907785028219223e-09) + (((_3565 * _3566) + _3536) * _3551))) * _3565;
                        float _4967 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                        float _3587 = (((_3537 * 3.1415927410125732421875) * (isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0)))) / ((_3559 * _3559) * ((_3503 * 2.1991131305694580078125) + 3.141590118408203125))) * _3492;
                        _3345 = (_3507 * _3455.x) + _3413;
                        _3346 = (_3507 * _3455.y) + _3414;
                        _3347 = (_3507 * _3455.z) + _3415;
                        _3342 = (_3587 * _3472.x) + _3410;
                        _3343 = (_3587 * _3472.y) + _3411;
                        _3344 = (_3587 * _3472.z) + _3412;
                        if (_3417 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3410 = _3342;
                            _3411 = _3343;
                            _3412 = _3344;
                            _3413 = _3345;
                            _3414 = _3346;
                            _3415 = _3347;
                            _3416 = _3417;
                        }
                    }
                    frontier_phi_66_pred = _3347;
                    frontier_phi_66_pred_1 = _3346;
                    frontier_phi_66_pred_2 = _3345;
                    frontier_phi_66_pred_3 = _3344;
                    frontier_phi_66_pred_4 = _3343;
                    frontier_phi_66_pred_5 = _3342;
                }
                _3153 = frontier_phi_66_pred;
                _3151 = frontier_phi_66_pred_1;
                _3149 = frontier_phi_66_pred_2;
                _3147 = frontier_phi_66_pred_3;
                _3145 = frontier_phi_66_pred_4;
                _3143 = frontier_phi_66_pred_5;
                uint _3293 = _3292 + 1u;
                if (_3293 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3286 = _3143;
                    _3287 = _3145;
                    _3288 = _3147;
                    _3289 = _3149;
                    _3290 = _3151;
                    _3291 = _3153;
                    _3292 = _3293;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3142 = _3143;
            _3144 = _3145;
            _3146 = _3147;
            _3148 = _3149;
            _3150 = _3151;
            _3152 = _3153;
        }
        uvec4 _3156 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3157 = _3156.z;
        uint _3159 = (_3157 >> 8u) & 15u;
        float _3254;
        float _3256;
        float _3258;
        float _3260;
        float _3262;
        float _3264;
        if (((4294967295u << _3159) & _3062) == 0u)
        {
            _3254 = _3142;
            _3256 = _3144;
            _3258 = _3146;
            _3260 = _3148;
            _3262 = _3150;
            _3264 = _3152;
        }
        else
        {
            float _3279 = inversesqrt(dot(vec3(_2121, _2122, _2123), vec3(_2121, _2122, _2123)));
            float _3280 = _3279 * _2121;
            float _3281 = _3279 * _2122;
            float _3282 = _3279 * _2123;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3159 < ((_3157 >> 12u) & 15u))
            {
                float _3255;
                float _3257;
                float _3259;
                float _3261;
                float _3263;
                float _3265;
                float _3393 = _3142;
                float _3394 = _3144;
                float _3395 = _3146;
                float _3396 = _3148;
                float _3397 = _3150;
                float _3398 = _3152;
                uint _3399 = _3159;
                uint _3408;
                bool _3409;
                for (;;)
                {
                    _3408 = texelFetch(g_lightClassification, int((((_3056 << 5u) + (_3042 << 9u)) + (_3399 << 2u)) >> 2u)).x;
                    _3409 = _3408 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3409)
                    {
                        frontier_phi_72_pred = _3398;
                        frontier_phi_72_pred_1 = _3397;
                        frontier_phi_72_pred_2 = _3396;
                        frontier_phi_72_pred_3 = _3395;
                        frontier_phi_72_pred_4 = _3394;
                        frontier_phi_72_pred_5 = _3393;
                    }
                    else
                    {
                        float _3592;
                        float _3593;
                        float _3594;
                        float _3595;
                        float _3596;
                        float _3597;
                        float _3885;
                        float _3886;
                        float _3887;
                        float _3888;
                        float _3889;
                        float _3890;
                        float _3605 = _3393;
                        float _3606 = _3394;
                        float _3607 = _3395;
                        float _3608 = _3396;
                        float _3609 = _3397;
                        float _3610 = _3398;
                        uint _3611 = _3408;
                        uint _3612;
                        vec4 _3637;
                        float _3638;
                        vec4 _3653;
                        vec3 _3665;
                        vec4 _3680;
                        vec4 _3695;
                        float _3741;
                        bool _3742;
                        for (;;)
                        {
                            uint _3622 = ((_3399 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3611));
                            _3612 = (_3611 + 4294967295u) & _3611;
                            uint _3624 = _3622 * 40u;
                            _3637 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3624)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 3u)).x));
                            _3638 = _3637.w;
                            uint _3640 = (_3622 * 40u) + 4u;
                            _3653 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3640)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 3u)).x));
                            uint _3655 = (_3622 * 40u) + 8u;
                            _3665 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3655)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 2u)).x));
                            uint _3667 = (_3622 * 40u) + 16u;
                            _3680 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3667)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 3u)).x));
                            uint _3682 = (_3622 * 40u) + 20u;
                            _3695 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3682)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3682 + 3u)).x));
                            uint _3697 = (_3622 * 40u) + 24u;
                            vec4 _3710 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3697)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3697 + 3u)).x));
                            uint _3716 = (_3622 * 40u) + 28u;
                            vec4 _3729 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 3u)).x));
                            _3741 = fma(_2123, _3729.z, fma(_2122, _3729.y, _3729.x * _2121)) + _3729.w;
                            _3742 = !((fma(_2123, _3710.z, fma(_2122, _3710.y, _3710.x * _2121)) + _3710.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3742)
                            {
                                float _3769 = _3637.x - _2121;
                                float _3770 = _3637.y - _2122;
                                float _3771 = _3637.z - _2123;
                                float _3772 = dot(vec3(_3769, _3770, _3771), vec3(_3769, _3770, _3771));
                                float _3775 = inversesqrt(_3772);
                                float _3776 = _3775 * _3769;
                                float _3777 = _3775 * _3770;
                                float _3778 = _3775 * _3771;
                                float _3782 = 1.0 - (_3772 / (_3638 * _3638));
                                float _4978 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                                float _3783 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
                                float _3787 = sqrt(_3772) * _3653.w;
                                float _3789 = 1.39999997615814208984375 / (_3787 + 1.39999997615814208984375);
                                float _3790 = _3789 * _3789;
                                float _3793 = ((1.0 - _3790) * dot(vec3(_3776, _3777, _3778), vec3(_988, _991, _994))) + _3790;
                                float _3796 = _3787 * _3787;
                                float _3800 = (fma(_2123, _3680.z, fma(_2122, _3680.y, _3680.x * _2121)) + _3680.w) / _3741;
                                float _3801 = (fma(_2123, _3695.z, fma(_2122, _3695.y, _3695.x * _2121)) + _3695.w) / _3741;
                                float _3805 = 1.0 - dot(vec2(_3800, _3801), vec2(_3800, _3801));
                                float _4994 = isnan(0.0) ? _3805 : (isnan(_3805) ? 0.0 : max(_3805, 0.0));
                                float _3806 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
                                float _3807 = _3806 * (((isnan(0.0) ? _3793 : (isnan(_3793) ? 0.0 : max(_3793, 0.0))) * _3783) / ((_3796 * 0.699999988079071044921875) + 1.0));
                                float _3819 = exp2(log2(1.0 / ((_3796 * 3.5) + 5.0)) * 0.25);
                                float _3820 = 1.0 - _1063;
                                float _3827 = sqrt(1.0 - ((1.0 - (_3820 * _3820)) * (1.0 - (_3819 * _3819))));
                                float _3828 = _3827 * _3827;
                                float _3829 = _3828 * _3828;
                                float _3830 = _3776 - _3280;
                                float _3831 = _3777 - _3281;
                                float _3832 = _3778 - _3282;
                                float _3836 = inversesqrt(dot(vec3(_3830, _3831, _3832), vec3(_3830, _3831, _3832)));
                                float _3840 = dot(vec3(_988, _991, _994), vec3((-0.0) - _3280, (-0.0) - _3281, (-0.0) - _3282));
                                float _5005 = isnan(0.0) ? _3840 : (isnan(_3840) ? 0.0 : max(_3840, 0.0));
                                float _3843 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                                float _3844 = dot(vec3(_988, _991, _994), vec3(_3836 * _3830, _3836 * _3831, _3836 * _3832));
                                float _5016 = isnan(0.0) ? _3844 : (isnan(_3844) ? 0.0 : max(_3844, 0.0));
                                float _3847 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
                                float _3851 = ((_3847 * _3847) * (_3829 + (-1.0))) + 1.0;
                                float _3852 = _3789 * _3828;
                                float _3853 = _3852 * _3852;
                                float _3859 = ((1.0 - _3853) * dot(vec3(_988, _991, _994), vec3(_3776, _3777, _3778))) + _3853;
                                float _5027 = isnan(0.0) ? _3859 : (isnan(_3859) ? 0.0 : max(_3859, 0.0));
                                float _3860 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
                                float _3861 = 1.0 - _3828;
                                float _3871 = (0.5 / (((_3860 * ((_3843 * _3861) + _3828)) + 9.9999999392252902907785028219223e-09) + (((_3860 * _3861) + _3828) * _3843))) * _3860;
                                float _5038 = isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0));
                                float _3881 = (_3806 * _3783) * (((_3829 * 3.1415927410125732421875) * (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0)))) / ((_3851 * _3851) * ((_3796 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3807 * _3653.y;
                                frontier_phi_78_pred_1 = _3807 * _3653.x;
                                frontier_phi_78_pred_2 = _3881 * _3665.z;
                                frontier_phi_78_pred_3 = _3881 * _3665.y;
                                frontier_phi_78_pred_4 = _3881 * _3665.x;
                                frontier_phi_78_pred_5 = _3807 * _3653.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3889 = frontier_phi_78_pred;
                            _3888 = frontier_phi_78_pred_1;
                            _3887 = frontier_phi_78_pred_2;
                            _3886 = frontier_phi_78_pred_3;
                            _3885 = frontier_phi_78_pred_4;
                            _3890 = frontier_phi_78_pred_5;
                            _3595 = _3888 + _3608;
                            _3596 = _3889 + _3609;
                            _3597 = _3890 + _3610;
                            _3592 = _3885 + _3605;
                            _3593 = _3886 + _3606;
                            _3594 = _3887 + _3607;
                            if (_3612 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3605 = _3592;
                                _3606 = _3593;
                                _3607 = _3594;
                                _3608 = _3595;
                                _3609 = _3596;
                                _3610 = _3597;
                                _3611 = _3612;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3597;
                        frontier_phi_72_pred_1 = _3596;
                        frontier_phi_72_pred_2 = _3595;
                        frontier_phi_72_pred_3 = _3594;
                        frontier_phi_72_pred_4 = _3593;
                        frontier_phi_72_pred_5 = _3592;
                    }
                    _3265 = frontier_phi_72_pred;
                    _3263 = frontier_phi_72_pred_1;
                    _3261 = frontier_phi_72_pred_2;
                    _3259 = frontier_phi_72_pred_3;
                    _3257 = frontier_phi_72_pred_4;
                    _3255 = frontier_phi_72_pred_5;
                    uint _3400 = _3399 + 1u;
                    if (_3400 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3393 = _3255;
                        _3394 = _3257;
                        _3395 = _3259;
                        _3396 = _3261;
                        _3397 = _3263;
                        _3398 = _3265;
                        _3399 = _3400;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3265;
                frontier_phi_60_61_ladder_1 = _3263;
                frontier_phi_60_61_ladder_2 = _3259;
                frontier_phi_60_61_ladder_3 = _3257;
                frontier_phi_60_61_ladder_4 = _3255;
                frontier_phi_60_61_ladder_5 = _3261;
            }
            else
            {
                frontier_phi_60_61_ladder = _3152;
                frontier_phi_60_61_ladder_1 = _3150;
                frontier_phi_60_61_ladder_2 = _3146;
                frontier_phi_60_61_ladder_3 = _3144;
                frontier_phi_60_61_ladder_4 = _3142;
                frontier_phi_60_61_ladder_5 = _3148;
            }
            _3254 = frontier_phi_60_61_ladder_4;
            _3256 = frontier_phi_60_61_ladder_3;
            _3258 = frontier_phi_60_61_ladder_2;
            _3260 = frontier_phi_60_61_ladder_5;
            _3262 = frontier_phi_60_61_ladder_1;
            _3264 = frontier_phi_60_61_ladder;
        }
        float _3269 = isnan(1.0) ? _1047 : (isnan(_1047) ? 1.0 : min(_1047, 1.0));
        _3075 = (_3269 * _3260) + _2587;
        _3077 = (_3269 * _3262) + _2589;
        _3079 = (_3269 * _3264) + _2591;
        _3081 = ((_3254 * _1031) * _3269) + _2925;
        _3083 = ((_3256 * _1033) * _3269) + _2927;
        _3085 = ((_3258 * _1034) * _3269) + _2929;
    }
    else
    {
        _3075 = _2587;
        _3077 = _2589;
        _3079 = _2591;
        _3081 = _2925;
        _3083 = _2927;
        _3085 = _2929;
    }
    float _5054 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _5065 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _5076 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    uint _3105 = _283 + 6u;
    float _3113 = _969 / cbSceneParam._m0[86u].x;
    float _3114 = _970 / cbSceneParam._m0[86u].y;
    vec4 _3128 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3113, _3114, (log2((isnan(cbSceneParam._m0[77u].w) ? _904 : (isnan(_904) ? cbSceneParam._m0[77u].w : min(_904, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3130 = _3128.x;
    float _3131 = _3128.y;
    float _3132 = _3128.z;
    float _3133 = _3128.w;
    float _3204;
    float _3206;
    float _3208;
    float _3210;
    if (_904 > cbSceneParam._m0[78u].w)
    {
        float _3167 = isnan(_904) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _904 : min(cbSceneParam._m0[80u].w, _904));
        float _3168 = _3167 / _904;
        float _3179 = _3168 * _954;
        float _3180 = _955 * _3168;
        float _3181 = (-0.0) - _3180;
        float _3182 = _3168 * _956;
        float _3184 = (cbSceneParam._m0[77u].w * _3181) / _3167;
        float _3185 = _3184 + cbSceneParam._m0[79u].w;
        float _3186 = cbSceneParam._m0[79u].w - _3180;
        float _3192 = sqrt(((_3179 * _3179) + (_3180 * _3180)) + (_3182 * _3182));
        float _3195 = (1.0 - (cbSceneParam._m0[77u].w / _3167)) * _3192;
        float _3200 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3202 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3355;
        if (abs((_3181 - _3184) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3355 = ((((_3185 > 0.0) ? exp2(_3200 * _3185) : (2.0 - exp2(_3202 * _3185))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3195;
        }
        else
        {
            float _3315 = 1.0 / cbSceneParam._m0[80u].x;
            float _3316 = isnan(_3186) ? _3185 : (isnan(_3185) ? _3186 : max(_3185, _3186));
            float _3317 = isnan(_3186) ? _3185 : (isnan(_3185) ? _3186 : min(_3185, _3186));
            float _3326 = isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : min(_3316, 0.0));
            float _3327 = isnan(0.0) ? _3317 : (isnan(_3317) ? 0.0 : min(_3317, 0.0));
            _3355 = ((abs(_3192 / _3181) * cbSceneParam._m0[80u].y) * ((((_3326 - _3327) * 2.0) - ((exp2(_3200 * (isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : max(_3316, 0.0)))) - exp2(_3200 * (isnan(0.0) ? _3317 : (isnan(_3317) ? 0.0 : max(_3317, 0.0))))) * _3315)) - ((exp2(_3202 * _3326) - exp2(_3202 * _3327)) * _3315))) + (_3195 * cbSceneParam._m0[80u].z);
        }
        vec4 _3357 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3113, _3114, 1.0), 0.0);
        float _3366 = exp2((_3355 * (-1.44269502162933349609375)) * (1.0 - _3357.w));
        float _3367 = log2(_3366);
        float _3383 = log2(_3133);
        _3204 = (exp2(_3383 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3367 * cbSceneParam._m0[78u].x)) * _3357.x) / cbSceneParam._m0[78u].x)) + _3130;
        _3206 = (exp2(_3383 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3367 * cbSceneParam._m0[78u].y)) * _3357.y) / cbSceneParam._m0[78u].y)) + _3131;
        _3208 = (exp2(_3383 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3367 * cbSceneParam._m0[78u].z)) * _3357.z) / cbSceneParam._m0[78u].z)) + _3132;
        _3210 = _3366 * _3133;
    }
    else
    {
        _3204 = _3130;
        _3206 = _3131;
        _3208 = _3132;
        _3210 = _3133;
    }
    float _3222 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3223 = _3222 == 3.0;
    float _3224 = log2(_3210);
    float _3231 = exp2(_3224 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0))) * (_3075 + ((isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0))) * _1047))) + ((_3081 + ((isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0))) * _1855)) * cbPerFrame._m0[3u].x));
    float _3232 = exp2(_3224 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0))) * (_3077 + ((isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0))) * _1047))) + ((_3083 + ((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1855)) * cbPerFrame._m0[3u].x));
    float _3233 = exp2(_3224 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0))) * (_3079 + ((isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0))) * _1047))) + ((_3085 + ((isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0))) * _1855)) * cbPerFrame._m0[3u].x));
    float _3242 = (_3222 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3242 * (_3223 ? _3231 : (_3231 + (cbSceneParam._m0[72u].w * _3204)));
    SV_Target.y = _3242 * (_3223 ? _3232 : (_3232 + (cbSceneParam._m0[72u].w * _3206)));
    SV_Target.z = _3242 * (_3223 ? _3233 : (_3233 + (cbSceneParam._m0[72u].w * _3208)));
    SV_Target.w = cbInstanceData._m0[_3105].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3105].w;
}


