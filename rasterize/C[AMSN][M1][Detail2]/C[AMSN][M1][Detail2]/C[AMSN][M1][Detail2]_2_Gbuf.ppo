#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D C_AMSN_M1_Detail2_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D C_AMSN_M1_Detail2_snp_0_Texture2D_21;
layout(set = 0, binding = 7) uniform texture2D C_AMSN_M1_Detail2_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 5) in float TEXCOORD_8;
layout(location = 5, component = 1) in float TEXCOORD_9;
layout(location = 5, component = 2) in float TEXCOORD_10;
layout(location = 5, component = 3) in float TEXCOORD_16;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _121 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _122 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _123 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _129 = inversesqrt(dot(vec3(_121, _122, _123), vec3(_121, _122, _123)));
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _143 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _166 = texture(sampler2D(C_AMSN_M1_Detail2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _172 = _166.x * cbMtdParam._m0[9u].x;
    float _173 = _166.y * cbMtdParam._m0[9u].y;
    float _174 = _166.z * cbMtdParam._m0[9u].z;
    vec4 _186 = texture(sampler2D(C_AMSN_M1_Detail2_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _188 = _186.x;
    vec4 _205 = texture(sampler2D(C_AMSN_M1_Detail2_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _213 = (_205.x * 2.0) + (-1.0);
    float _215 = (_205.y * 2.0) + (-1.0);
    float _216 = dot(vec2(_213, _215), vec2(_213, _215));
    float _325 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _222 = sqrt(1.0 - (isnan(1.0) ? _325 : (isnan(_325) ? 1.0 : min(_325, 1.0))));
    float _223 = _205.z * cbMtdParam._m0[13u].y;
    float _226 = fma(_222, _136 * NORMAL.x, fma(_215, _143 * TANGENT.x, (_129 * _121) * _213));
    float _229 = fma(_222, _136 * NORMAL.y, fma(_215, _143 * TANGENT.y, (_129 * _122) * _213));
    float _232 = fma(_222, _136 * NORMAL.z, fma(_215, _143 * TANGENT.z, (_129 * _123) * _213));
    float _236 = inversesqrt(dot(vec3(_226, _229, _232), vec3(_226, _229, _232)));
    float _336 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _347 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _358 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _369 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _380 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    uint _256 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = (_256 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _264 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _347 : (isnan(_347) ? 1.0 : min(_347, 1.0)))) * cbInstanceData._m0[_258].x;
    float _265 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _358 : (isnan(_358) ? 1.0 : min(_358, 1.0)))) * cbInstanceData._m0[_258].y;
    float _266 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _369 : (isnan(_369) ? 1.0 : min(_369, 1.0)))) * cbInstanceData._m0[_258].z;
    float _391 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _402 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _413 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    uint _270 = _256 + 6u;
    bool _299 = cbMtdParam._m0[1u].z != 0.0;
    float _300 = _299 ? cbInstanceData._m0[_270].w : 0.0;
    SV_Target.x = ((_226 * 0.5) * _236) + 0.500488758087158203125;
    SV_Target.y = ((_229 * 0.5) * _236) + 0.500488758087158203125;
    SV_Target.z = ((_232 * 0.5) * _236) + 0.500488758087158203125;
    SV_Target.w = _300;
    SV_Target_1.x = isnan(1.0) ? _380 : (isnan(_380) ? 1.0 : min(_380, 1.0));
    SV_Target_1.y = isnan(1.0) ? _336 : (isnan(_336) ? 1.0 : min(_336, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _299 ? cbInstanceData._m0[_270].w : TEXCOORD_5.w;
    SV_Target_2.x = isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0));
    SV_Target_2.y = isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0));
    SV_Target_2.z = isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0));
    SV_Target_2.w = _299 ? cbInstanceData._m0[_270].w : (float(floatBitsToUint(cbInstanceData._m0[_256 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _300;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _300;
}


