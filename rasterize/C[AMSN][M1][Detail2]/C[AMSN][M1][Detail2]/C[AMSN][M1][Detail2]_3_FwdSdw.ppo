#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D C_AMSN_M1_Detail2_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_AMSN_M1_Detail2_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _809;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _188 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _195 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _202 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _225 = texture(sampler2D(C_AMSN_M1_Detail2_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _231 = _225.x * cbMtdParam._m0[9u].x;
    float _232 = _225.y * cbMtdParam._m0[9u].y;
    float _233 = _225.z * cbMtdParam._m0[9u].z;
    vec4 _250 = texture(sampler2D(C_AMSN_M1_Detail2_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _258 = (_250.x * 2.0) + (-1.0);
    float _260 = (_250.y * 2.0) + (-1.0);
    float _261 = dot(vec2(_258, _260), vec2(_258, _260));
    float _3407 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _267 = sqrt(1.0 - (isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0))));
    float _268 = _250.z * cbMtdParam._m0[13u].y;
    float _271 = fma(_267, _195 * NORMAL.x, fma(_260, _202 * TANGENT.x, (_188 * _180) * _258));
    float _274 = fma(_267, _195 * NORMAL.y, fma(_260, _202 * TANGENT.y, (_188 * _181) * _258));
    float _277 = fma(_267, _195 * NORMAL.z, fma(_260, _202 * TANGENT.z, (_188 * _182) * _258));
    float _281 = inversesqrt(dot(vec3(_271, _274, _277), vec3(_271, _274, _277)));
    float _282 = _281 * _271;
    float _283 = _281 * _274;
    float _284 = _281 * _277;
    float _3418 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _285 = isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0));
    float _3429 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _3440 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _3451 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _304 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _347 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _357 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _347);
    float _358 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _347);
    float _359 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _347);
    float _363 = inversesqrt(dot(vec3(_357, _358, _359), vec3(_357, _358, _359)));
    float _364 = _357 * _363;
    float _365 = _358 * _363;
    float _366 = _359 * _363;
    float _372 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _373 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _393 = fma(_284, cbSceneParam._m0[5u].z, fma(_283, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _282));
    float _396 = fma(_284, cbSceneParam._m0[6u].z, fma(_283, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _282));
    float _399 = fma(_284, cbSceneParam._m0[7u].z, fma(_283, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _282));
    uint _412 = uint(roundEven(NORMAL.w)) * 13u;
    uint _414 = (_412 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _420 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3429 : (isnan(_3429) ? 1.0 : min(_3429, 1.0)))) * cbInstanceData._m0[_414].x;
    float _421 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3440 : (isnan(_3440) ? 1.0 : min(_3440, 1.0)))) * cbInstanceData._m0[_414].y;
    float _422 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3451 : (isnan(_3451) ? 1.0 : min(_3451, 1.0)))) * cbInstanceData._m0[_414].z;
    float _3462 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _423 = isnan(1.0) ? _3462 : (isnan(_3462) ? 1.0 : min(_3462, 1.0));
    float _3473 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _424 = isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0));
    float _3484 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _425 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
    vec4 _434 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _372, cbSceneParam._m0[86u].y * _373));
    float _437 = _434.x * TEXCOORD_5.w;
    float _438 = dot(vec3(_282, _283, _284), vec3(_364, _365, _366));
    float _441 = _438 * 2.0;
    float _445 = (_441 * _282) - _364;
    float _446 = (_441 * _283) - _365;
    float _447 = (_441 * _284) - _366;
    float _451 = abs(dot(vec3(_364, _365, _366), vec3(_282, _283, _284)));
    float _3495 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _453 = sqrt(_285);
    float _466 = exp2((_453 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_453 * 3.0));
    float _498 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _502 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _506 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _808;
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    float _820;
    float _821;
    float _822;
    float _823;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _533 = fma(_506, cbModelParam._m0[26u].z, fma(_502, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _498));
        float _537 = fma(_506, cbModelParam._m0[27u].z, fma(_502, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _498));
        float _541 = fma(_506, cbModelParam._m0[28u].z, fma(_502, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _498));
        float _566 = _498 + _282;
        float _567 = _502 + _283;
        float _568 = _506 + _284;
        float _578 = fma(_568, cbModelParam._m0[26u].z, fma(_567, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _566)) - _533;
        float _579 = fma(_568, cbModelParam._m0[27u].z, fma(_567, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _566)) - _537;
        float _580 = fma(_568, cbModelParam._m0[28u].z, fma(_567, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _566)) - _541;
        float _584 = inversesqrt(dot(vec3(_578, _579, _580), vec3(_578, _579, _580)));
        float _597 = ((_584 * _578) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_533 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _598 = ((_584 * _579) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_537 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _599 = ((_584 * _580) / cbModelParam._m0[34u].z) + ((((((_541 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _602 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_597, _598, _599), 0.0);
        vec4 _609 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_597, _598, _599), 0.0);
        vec4 _616 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_597, _598, _599), 0.0);
        vec4 _623 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_597, _598, _599), 0.0);
        float _636 = exp2((_602.w + (-0.5)) * 20.0) * 2.0;
        float _637 = _636 * (_602.x + (-0.5));
        float _638 = _636 * (_602.y + (-0.5));
        float _639 = _636 * (_602.z + (-0.5));
        float _646 = exp2((_609.w + (-0.5)) * 20.0) * 2.0;
        float _647 = _646 * (_609.x + (-0.5));
        float _648 = _646 * (_609.y + (-0.5));
        float _649 = _646 * (_609.z + (-0.5));
        float _656 = exp2((_616.w + (-0.5)) * 20.0) * 2.0;
        float _657 = _656 * (_616.x + (-0.5));
        float _658 = _656 * (_616.y + (-0.5));
        float _659 = _656 * (_616.z + (-0.5));
        float _666 = exp2((_623.w + (-0.5)) * 20.0) * 2.0;
        float _667 = _666 * (_623.x + (-0.5));
        float _668 = _666 * (_623.y + (-0.5));
        float _669 = _666 * (_623.z + (-0.5));
        float _670 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _671 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
        float _672 = isnan(0.0) ? _669 : (isnan(_669) ? 0.0 : max(_669, 0.0));
        float _673 = _637 * 0.5;
        float _674 = _647 * 0.5;
        float _675 = _657 * 0.5;
        float _676 = dot(vec3(_673, _674, _675), vec3(_673, _674, _675));
        float _681 = (_676 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_676);
        float _690 = (dot(vec3(_282, _283, _284), vec3(_681 * _673, _681 * _674, _681 * _675)) + 1.0) * 0.5;
        float _3521 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
        float _700 = sqrt(((_674 * _674) + (_673 * _673)) + (_675 * _675)) / (_670 + 9.9999997473787516355514526367188e-06);
        float _3532 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
        float _701 = isnan(1.0) ? _3532 : (isnan(_3532) ? 1.0 : min(_3532, 1.0));
        float _702 = _701 * 2.0;
        float _706 = (1.0 - _701) / (_701 + 1.0);
        float _3543 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
        float _707 = isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0));
        float _716 = ((((1.0 - _707) * (_702 + 2.0)) * exp2(log2(isnan(1.0) ? _3521 : (isnan(_3521) ? 1.0 : min(_3521, 1.0))) * (_702 + 1.0))) + _707) * _670;
        float _717 = _638 * 0.5;
        float _718 = _648 * 0.5;
        float _719 = _658 * 0.5;
        float _720 = dot(vec3(_717, _718, _719), vec3(_717, _718, _719));
        float _725 = (_720 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_720);
        float _733 = (dot(vec3(_282, _283, _284), vec3(_725 * _717, _725 * _718, _725 * _719)) + 1.0) * 0.5;
        float _3554 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
        float _742 = sqrt(((_718 * _718) + (_717 * _717)) + (_719 * _719)) / (_671 + 9.9999997473787516355514526367188e-06);
        float _3565 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
        float _743 = isnan(1.0) ? _3565 : (isnan(_3565) ? 1.0 : min(_3565, 1.0));
        float _744 = _743 * 2.0;
        float _748 = (1.0 - _743) / (_743 + 1.0);
        float _3576 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        float _749 = isnan(1.0) ? _3576 : (isnan(_3576) ? 1.0 : min(_3576, 1.0));
        float _758 = ((((1.0 - _749) * (_744 + 2.0)) * exp2(log2(isnan(1.0) ? _3554 : (isnan(_3554) ? 1.0 : min(_3554, 1.0))) * (_744 + 1.0))) + _749) * _671;
        float _759 = _639 * 0.5;
        float _760 = _649 * 0.5;
        float _761 = _659 * 0.5;
        float _762 = dot(vec3(_759, _760, _761), vec3(_759, _760, _761));
        float _767 = (_762 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_762);
        float _775 = (dot(vec3(_282, _283, _284), vec3(_767 * _759, _767 * _760, _767 * _761)) + 1.0) * 0.5;
        float _3587 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
        float _784 = sqrt(((_760 * _760) + (_759 * _759)) + (_761 * _761)) / (_672 + 9.9999997473787516355514526367188e-06);
        float _3598 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
        float _785 = isnan(1.0) ? _3598 : (isnan(_3598) ? 1.0 : min(_3598, 1.0));
        float _786 = _785 * 2.0;
        float _790 = (1.0 - _785) / (_785 + 1.0);
        float _3609 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
        float _791 = isnan(1.0) ? _3609 : (isnan(_3609) ? 1.0 : min(_3609, 1.0));
        float _800 = ((((1.0 - _791) * (_786 + 2.0)) * exp2(log2(isnan(1.0) ? _3587 : (isnan(_3587) ? 1.0 : min(_3587, 1.0))) * (_786 + 1.0))) + _791) * _672;
        _808 = _639;
        _810 = _638;
        _811 = _637;
        _812 = _649;
        _813 = _648;
        _814 = _647;
        _815 = _659;
        _816 = _658;
        _817 = _657;
        _818 = _672;
        _819 = _671;
        _820 = _670;
        _821 = cbModelParam._m0[36u].z * (isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0)));
        _822 = cbModelParam._m0[36u].z * (isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0)));
        _823 = cbModelParam._m0[36u].z * (isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0)));
    }
    else
    {
        _808 = _809;
        _810 = _809;
        _811 = _809;
        _812 = _809;
        _813 = _809;
        _814 = _809;
        _815 = _809;
        _816 = _809;
        _817 = _809;
        _818 = _809;
        _819 = _809;
        _820 = _809;
        _821 = 0.0;
        _822 = 0.0;
        _823 = 0.0;
    }
    float _1118;
    float _1119;
    float _1120;
    float _1121;
    float _1122;
    float _1123;
    float _1124;
    float _1125;
    float _1126;
    float _1127;
    float _1128;
    float _1129;
    float _1130;
    float _1131;
    float _1132;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _849 = fma(_506, cbModelParam._m0[30u].z, fma(_502, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _498));
        float _853 = fma(_506, cbModelParam._m0[31u].z, fma(_502, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _498));
        float _857 = fma(_506, cbModelParam._m0[32u].z, fma(_502, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _498));
        float _880 = _498 + _282;
        float _881 = _502 + _283;
        float _882 = _506 + _284;
        float _892 = fma(_882, cbModelParam._m0[30u].z, fma(_881, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _880)) - _849;
        float _893 = fma(_882, cbModelParam._m0[31u].z, fma(_881, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _880)) - _853;
        float _894 = fma(_882, cbModelParam._m0[32u].z, fma(_881, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _880)) - _857;
        float _898 = inversesqrt(dot(vec3(_892, _893, _894), vec3(_892, _893, _894)));
        float _911 = ((_898 * _892) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_849 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _912 = ((_898 * _893) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_853 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _913 = ((_898 * _894) / cbModelParam._m0[35u].z) + ((((((_857 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _915 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_911, _912, _913), 0.0);
        vec4 _922 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_911, _912, _913), 0.0);
        vec4 _929 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_911, _912, _913), 0.0);
        vec4 _936 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_911, _912, _913), 0.0);
        float _948 = exp2((_915.w + (-0.5)) * 20.0) * 2.0;
        float _949 = _948 * (_915.x + (-0.5));
        float _950 = _948 * (_915.y + (-0.5));
        float _951 = _948 * (_915.z + (-0.5));
        float _958 = exp2((_922.w + (-0.5)) * 20.0) * 2.0;
        float _959 = _958 * (_922.x + (-0.5));
        float _960 = _958 * (_922.y + (-0.5));
        float _961 = _958 * (_922.z + (-0.5));
        float _968 = exp2((_929.w + (-0.5)) * 20.0) * 2.0;
        float _969 = _968 * (_929.x + (-0.5));
        float _970 = _968 * (_929.y + (-0.5));
        float _971 = _968 * (_929.z + (-0.5));
        float _978 = exp2((_936.w + (-0.5)) * 20.0) * 2.0;
        float _979 = _978 * (_936.x + (-0.5));
        float _980 = _978 * (_936.y + (-0.5));
        float _981 = _978 * (_936.z + (-0.5));
        float _982 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _983 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _984 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
        float _985 = _949 * 0.5;
        float _986 = _959 * 0.5;
        float _987 = _969 * 0.5;
        float _988 = dot(vec3(_985, _986, _987), vec3(_985, _986, _987));
        float _993 = (_988 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_988);
        float _1001 = (dot(vec3(_282, _283, _284), vec3(_993 * _985, _993 * _986, _993 * _987)) + 1.0) * 0.5;
        float _3650 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
        float _1010 = sqrt(((_986 * _986) + (_985 * _985)) + (_987 * _987)) / (_982 + 9.9999997473787516355514526367188e-06);
        float _3661 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
        float _1011 = isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0));
        float _1012 = _1011 * 2.0;
        float _1016 = (1.0 - _1011) / (_1011 + 1.0);
        float _3672 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1017 = isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0));
        float _1026 = ((((1.0 - _1017) * (_1012 + 2.0)) * exp2(log2(isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0))) * (_1012 + 1.0))) + _1017) * _982;
        float _1027 = _950 * 0.5;
        float _1028 = _960 * 0.5;
        float _1029 = _970 * 0.5;
        float _1030 = dot(vec3(_1027, _1028, _1029), vec3(_1027, _1028, _1029));
        float _1035 = (_1030 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1030);
        float _1043 = (dot(vec3(_282, _283, _284), vec3(_1035 * _1027, _1035 * _1028, _1035 * _1029)) + 1.0) * 0.5;
        float _3683 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1052 = sqrt(((_1028 * _1028) + (_1027 * _1027)) + (_1029 * _1029)) / (_983 + 9.9999997473787516355514526367188e-06);
        float _3694 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1053 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
        float _1054 = _1053 * 2.0;
        float _1058 = (1.0 - _1053) / (_1053 + 1.0);
        float _3705 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1059 = isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0));
        float _1068 = ((((1.0 - _1059) * (_1054 + 2.0)) * exp2(log2(isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0))) * (_1054 + 1.0))) + _1059) * _983;
        float _1069 = _951 * 0.5;
        float _1070 = _961 * 0.5;
        float _1071 = _971 * 0.5;
        float _1072 = dot(vec3(_1069, _1070, _1071), vec3(_1069, _1070, _1071));
        float _1077 = (_1072 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1072);
        float _1085 = (dot(vec3(_282, _283, _284), vec3(_1077 * _1069, _1077 * _1070, _1077 * _1071)) + 1.0) * 0.5;
        float _3716 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1094 = sqrt(((_1070 * _1070) + (_1069 * _1069)) + (_1071 * _1071)) / (_984 + 9.9999997473787516355514526367188e-06);
        float _3727 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1095 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
        float _1096 = _1095 * 2.0;
        float _1100 = (1.0 - _1095) / (_1095 + 1.0);
        float _3738 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1101 = isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0));
        float _1110 = ((((1.0 - _1101) * (_1096 + 2.0)) * exp2(log2(isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0))) * (_1096 + 1.0))) + _1101) * _984;
        _1118 = _951;
        _1119 = _950;
        _1120 = _949;
        _1121 = _961;
        _1122 = _960;
        _1123 = _959;
        _1124 = _971;
        _1125 = _970;
        _1126 = _969;
        _1127 = _984;
        _1128 = _983;
        _1129 = _982;
        _1130 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0)));
        _1131 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0)));
        _1132 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0)));
    }
    else
    {
        _1118 = _809;
        _1119 = _809;
        _1120 = _809;
        _1121 = _809;
        _1122 = _809;
        _1123 = _809;
        _1124 = _809;
        _1125 = _809;
        _1126 = _809;
        _1127 = _809;
        _1128 = _809;
        _1129 = _809;
        _1130 = 0.0;
        _1131 = 0.0;
        _1132 = 0.0;
    }
    float _1142 = (cbModelParam._m0[1u].x * (_1130 - _821)) + _821;
    float _1143 = (cbModelParam._m0[1u].x * (_1131 - _822)) + _822;
    float _1144 = (cbModelParam._m0[1u].x * (_1132 - _823)) + _823;
    float _1165 = fma(_1144, cbSceneParam._m0[89u].z, fma(_1143, cbSceneParam._m0[89u].y, _1142 * cbSceneParam._m0[89u].x));
    float _1168 = fma(_1144, cbSceneParam._m0[90u].z, fma(_1143, cbSceneParam._m0[90u].y, _1142 * cbSceneParam._m0[90u].x));
    float _1171 = fma(_1144, cbSceneParam._m0[91u].z, fma(_1143, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1142));
    float _1186 = _445 * 0.5;
    float _1187 = _446 * 0.5;
    float _1188 = _447 * 0.5;
    float _1189 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_1120, _1123, _1126, _1129));
    float _1192 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_1119, _1122, _1125, _1128));
    float _1195 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_1118, _1121, _1124, _1127));
    float _1229;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1202 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_808, _812, _815, _818));
        float _1206 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_810, _813, _816, _819));
        float _1210 = dot(vec4(_1186, _1187, _1188, 1.0), vec4(_811, _814, _817, _820));
        float _1217 = dot(vec4(cbModelParam._m0[39u]), vec4(_1186, _1187, _1188, 1.0));
        _1229 = dot(vec3(isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0)), isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)), isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1217) ? 0.0 : (isnan(0.0) ? _1217 : max(0.0, _1217))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1229 = 1.0;
    }
    float _1240;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1231 = dot(vec4(cbModelParam._m0[40u]), vec4(_1186, _1187, _1188, 1.0));
        _1240 = dot(vec3(isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0)), isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0)), isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1231) ? 0.0 : (isnan(0.0) ? _1231 : max(0.0, _1231))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1240 = 1.0;
    }
    float _1244 = (_1240 * cbModelParam._m0[1u].x) + (_1229 * (1.0 - cbModelParam._m0[1u].x));
    float _1254 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _285);
    float _1255 = isnan(_1254) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1254 : min(cbModelParam._m0[25u].z, _1254));
    float _1336;
    float _1338;
    float _1340;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1303 = fma(_506, cbModelParam._m0[13u].z, fma(_502, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _498)) + cbModelParam._m0[13u].w;
        float _1307 = fma(_506, cbModelParam._m0[14u].z, fma(_502, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _498)) + cbModelParam._m0[14u].w;
        float _1311 = fma(_506, cbModelParam._m0[15u].z, fma(_502, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _498)) + cbModelParam._m0[15u].w;
        float _1314 = fma(_447, cbModelParam._m0[13u].z, fma(_446, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _445));
        float _1317 = fma(_447, cbModelParam._m0[14u].z, fma(_446, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _445));
        float _1320 = fma(_447, cbModelParam._m0[15u].z, fma(_446, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _445));
        float _1348;
        if (_1314 > 0.0)
        {
            _1348 = abs((1.0 - _1303) / _1314);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1314 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1303 + 1.0) / _1314);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1348 = frontier_phi_14_12_ladder;
        }
        float _1522;
        if (_1317 > 0.0)
        {
            _1522 = abs((1.0 - _1307) / _1317);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1317 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1307 + 1.0) / _1317);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1522 = frontier_phi_23_19_ladder;
        }
        float _1818;
        if (_1320 > 0.0)
        {
            _1818 = abs((1.0 - _1311) / _1320);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1320 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1311 + 1.0) / _1320);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1818 = frontier_phi_35_30_ladder;
        }
        float _1820 = isnan(_1522) ? _1348 : (isnan(_1348) ? _1522 : min(_1348, _1522));
        float _1821 = isnan(_1818) ? _1820 : (isnan(_1820) ? _1818 : min(_1820, _1818));
        float _1825 = (_1821 * _1314) + _1303;
        float _1826 = (_1821 * _1317) + _1307;
        float _1827 = (_1821 * _1320) + _1311;
        float _1828 = _1821 * 9.9999997473787516355514526367188e-05;
        float _1830 = (-1.0) - _1828;
        float _1832 = _1828 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1827 > _1832) || ((_1827 < _1830) || ((_1826 > _1832) || ((_1826 < _1830) || ((_1825 < _1830) || (_1825 > _1832))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1972 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1827, cbModelParam._m0[9u].z, fma(_1826, cbModelParam._m0[9u].y, _1825 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1827, cbModelParam._m0[10u].z, fma(_1826, cbModelParam._m0[10u].y, _1825 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1827, cbModelParam._m0[11u].z, fma(_1826, cbModelParam._m0[11u].y, _1825 * cbModelParam._m0[11u].x))), _1255);
            frontier_phi_13_35_ladder = _1972.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1972.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1972.x * cbModelParam._m0[1u].y;
        }
        _1336 = frontier_phi_13_35_ladder_2;
        _1338 = frontier_phi_13_35_ladder_1;
        _1340 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1324 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_445, _446, _447), _1255);
        _1336 = _1324.x * cbModelParam._m0[1u].y;
        _1338 = _1324.y * cbModelParam._m0[1u].y;
        _1340 = _1324.z * cbModelParam._m0[1u].y;
    }
    float _1344 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _285);
    float _1345 = isnan(_1344) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1344 : min(cbModelParam._m0[25u].w, _1344));
    float _1438;
    float _1440;
    float _1442;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1402 = fma(_506, cbModelParam._m0[21u].z, fma(_502, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _498)) + cbModelParam._m0[21u].w;
        float _1406 = fma(_506, cbModelParam._m0[22u].z, fma(_502, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _498)) + cbModelParam._m0[22u].w;
        float _1410 = fma(_506, cbModelParam._m0[23u].z, fma(_502, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _498)) + cbModelParam._m0[23u].w;
        float _1413 = fma(_447, cbModelParam._m0[21u].z, fma(_446, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _445));
        float _1416 = fma(_447, cbModelParam._m0[22u].z, fma(_446, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _445));
        float _1419 = fma(_447, cbModelParam._m0[23u].z, fma(_446, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _445));
        float _1527;
        if (_1413 > 0.0)
        {
            _1527 = abs((1.0 - _1402) / _1413);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1413 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1402 + 1.0) / _1413);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1527 = frontier_phi_25_21_ladder;
        }
        float _1845;
        if (_1416 > 0.0)
        {
            _1845 = abs((1.0 - _1406) / _1416);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1416 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1406 + 1.0) / _1416);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1845 = frontier_phi_37_32_ladder;
        }
        float _2172;
        if (_1419 > 0.0)
        {
            _2172 = abs((1.0 - _1410) / _1419);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1419 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1410 + 1.0) / _1419);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2172 = frontier_phi_47_44_ladder;
        }
        float _2174 = isnan(_1845) ? _1527 : (isnan(_1527) ? _1845 : min(_1527, _1845));
        float _2175 = isnan(_2172) ? _2174 : (isnan(_2174) ? _2172 : min(_2174, _2172));
        float _2179 = (_2175 * _1413) + _1402;
        float _2180 = (_2175 * _1416) + _1406;
        float _2181 = (_2175 * _1419) + _1410;
        float _2182 = _2175 * 9.9999997473787516355514526367188e-05;
        float _2183 = (-1.0) - _2182;
        float _2185 = _2182 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2181 > _2185) || ((_2181 < _2183) || ((_2180 > _2185) || ((_2180 < _2183) || ((_2179 < _2183) || (_2179 > _2185))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2299 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2181, cbModelParam._m0[17u].z, fma(_2180, cbModelParam._m0[17u].y, _2179 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2181, cbModelParam._m0[18u].z, fma(_2180, cbModelParam._m0[18u].y, _2179 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2181, cbModelParam._m0[19u].z, fma(_2180, cbModelParam._m0[19u].y, _2179 * cbModelParam._m0[19u].x))), _1345);
            frontier_phi_22_47_ladder = _2299.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2299.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2299.x * cbModelParam._m0[1u].z;
        }
        _1438 = frontier_phi_22_47_ladder_2;
        _1440 = frontier_phi_22_47_ladder_1;
        _1442 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1422 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_445, _446, _447), _1345);
        _1438 = _1422.x * cbModelParam._m0[1u].z;
        _1440 = _1422.y * cbModelParam._m0[1u].z;
        _1442 = _1422.z * cbModelParam._m0[1u].z;
    }
    float _1454 = ((((1.0 - _466) * ((_453 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_466 * _453)) * _437;
    float _1455 = _1454 * ((cbModelParam._m0[1u].w * (_1438 - _1336)) + _1336);
    float _1456 = _1454 * ((cbModelParam._m0[1u].w * (_1440 - _1338)) + _1338);
    float _1457 = _1454 * ((cbModelParam._m0[1u].w * (_1442 - _1340)) + _1340);
    float _1460 = fma(_1457, cbSceneParam._m0[89u].z, fma(_1456, cbSceneParam._m0[89u].y, _1455 * cbSceneParam._m0[89u].x));
    float _1463 = fma(_1457, cbSceneParam._m0[90u].z, fma(_1456, cbSceneParam._m0[90u].y, _1455 * cbSceneParam._m0[90u].x));
    float _1466 = fma(_1457, cbSceneParam._m0[91u].z, fma(_1456, cbSceneParam._m0[91u].y, _1455 * cbSceneParam._m0[91u].x));
    float _1501 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1505 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1509 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1513 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1514 = _1501 / _1513;
    float _1515 = _1505 / _1513;
    float _1516 = _1509 / _1513;
    float _1663;
    float _1664;
    float _1665;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1543 = ((uint(_1516 > cbSceneParam._m0[59u].y) + uint(_1516 > cbSceneParam._m0[59u].x)) + uint(_1516 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1544 = _1543 + 43u;
        uint _1552 = _1543 + 44u;
        uint _1560 = _1543 + 45u;
        uint _1568 = _1543 + 46u;
        float _1579 = fma(_1513, cbSceneParam._m0[_1544].w, fma(_1509, cbSceneParam._m0[_1544].z, fma(_1505, cbSceneParam._m0[_1544].y, _1501 * cbSceneParam._m0[_1544].x)));
        float _1583 = fma(_1513, cbSceneParam._m0[_1552].w, fma(_1509, cbSceneParam._m0[_1552].z, fma(_1505, cbSceneParam._m0[_1552].y, _1501 * cbSceneParam._m0[_1552].x)));
        float _1591 = fma(_1513, cbSceneParam._m0[_1568].w, fma(_1509, cbSceneParam._m0[_1568].z, fma(_1505, cbSceneParam._m0[_1568].y, _1501 * cbSceneParam._m0[_1568].x)));
        float _1596 = cbSceneParam._m0[33u].z * _1591;
        float _1598 = cbSceneParam._m0[33u].w * _1591;
        float _1601 = fma(_1513, cbSceneParam._m0[_1560].w, fma(_1509, cbSceneParam._m0[_1560].z, fma(_1505, cbSceneParam._m0[_1560].y, _1501 * cbSceneParam._m0[_1560].x))) / _1591;
        float _1649 = (cbSceneParam._m0[33u].x - sqrt(((_1515 * _1515) + (_1514 * _1514)) + (_1516 * _1516))) * cbSceneParam._m0[33u].y;
        float _3864 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1656 = (isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1596 + _1579) / _1591, (_1598 + _1583) / _1591), _1601), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1598 + _1579) / _1591, (_1583 - _1596) / _1591), _1601), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1579 - _1596) / _1591, (_1583 - _1598) / _1591), _1601), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1579 - _1598) / _1591, (_1596 + _1583) / _1591), _1601), 0.0)).x), vec4(0.25)));
        _1663 = 1.0 - (_1656 * cbSceneParam._m0[34u].x);
        _1664 = 1.0 - (_1656 * cbSceneParam._m0[34u].y);
        _1665 = 1.0 - (_1656 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1663 = 1.0;
        _1664 = 1.0;
        _1665 = 1.0;
    }
    float _1729;
    float _1731;
    float _1733;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1717 = fma(_1513, cbSceneParam._m0[63u].w, fma(_1509, cbSceneParam._m0[63u].z, fma(_1505, cbSceneParam._m0[63u].y, _1501 * cbSceneParam._m0[63u].x)));
        float _1718 = fma(_1513, cbSceneParam._m0[60u].w, fma(_1509, cbSceneParam._m0[60u].z, fma(_1505, cbSceneParam._m0[60u].y, _1501 * cbSceneParam._m0[60u].x))) / _1717;
        float _1719 = fma(_1513, cbSceneParam._m0[61u].w, fma(_1509, cbSceneParam._m0[61u].z, fma(_1505, cbSceneParam._m0[61u].y, _1501 * cbSceneParam._m0[61u].x))) / _1717;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1718 >= cbSceneParam._m0[64u].x) && (_1719 >= cbSceneParam._m0[64u].y)) && (_1718 <= cbSceneParam._m0[64u].z)) && (_1719 <= cbSceneParam._m0[64u].w))
        {
            float _1858 = fma(_1513, cbSceneParam._m0[62u].w, fma(_1509, cbSceneParam._m0[62u].z, fma(_1505, cbSceneParam._m0[62u].y, _1501 * cbSceneParam._m0[62u].x))) / _1717;
            float _1862 = isnan(cbSceneParam._m0[41u].w) ? _1858 : (isnan(_1858) ? cbSceneParam._m0[41u].w : max(_1858, cbSceneParam._m0[41u].w));
            float _1905 = (cbSceneParam._m0[33u].x - sqrt(((_1515 * _1515) + (_1514 * _1514)) + (_1516 * _1516))) * cbSceneParam._m0[33u].y;
            float _3880 = isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0));
            float _1912 = (isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1718, cbSceneParam._m0[33u].w + _1719), _1862), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1718, _1719 - cbSceneParam._m0[33u].z), _1862), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1718 - cbSceneParam._m0[33u].z, _1719 - cbSceneParam._m0[33u].w), _1862), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1718 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1719), _1862), 0.0)).x), vec4(0.25)));
            float _1916 = 1.0 - (_1912 * cbSceneParam._m0[34u].x);
            float _1917 = 1.0 - (_1912 * cbSceneParam._m0[34u].y);
            float _1918 = 1.0 - (_1912 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1918) ? _1665 : (isnan(_1665) ? _1918 : min(_1665, _1918));
            frontier_phi_34_33_ladder_1 = isnan(_1917) ? _1664 : (isnan(_1664) ? _1917 : min(_1664, _1917));
            frontier_phi_34_33_ladder_2 = isnan(_1916) ? _1663 : (isnan(_1663) ? _1916 : min(_1663, _1916));
        }
        else
        {
            frontier_phi_34_33_ladder = _1665;
            frontier_phi_34_33_ladder_1 = _1664;
            frontier_phi_34_33_ladder_2 = _1663;
        }
        _1729 = frontier_phi_34_33_ladder_2;
        _1731 = frontier_phi_34_33_ladder_1;
        _1733 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1729 = _1663;
        _1731 = _1664;
        _1733 = _1665;
    }
    uvec4 _1738 = floatBitsToUint(cbInstanceData._m0[_412 + 5u]);
    uint _1740 = _1738.x * 14u;
    uint _1741 = _1740 + 13u;
    float _1748 = _437 + (-1.0);
    float _1753 = (cbLight._m0[_1741].x * _1748) + 1.0;
    float _1754 = (cbLight._m0[_1741].y * _1748) + 1.0;
    float _1755 = (cbLight._m0[_1741].z * _1748) + 1.0;
    float _1756 = (cbLight._m0[_1741].w * _1748) + 1.0;
    uint _1757 = _1740 + 5u;
    float _1763 = isnan(1.0) ? _1754 : (isnan(_1754) ? 1.0 : min(_1754, 1.0));
    uint _1767 = _1740 + 4u;
    float _1777 = isnan(1.0) ? _1753 : (isnan(_1753) ? 1.0 : min(_1753, 1.0));
    uint _1781 = _1740 | 1u;
    float _1792 = dot(vec3(cbLight._m0[_1740].xyz), vec3(_282, _283, _284));
    float _1795 = dot(vec3(cbLight._m0[_1781].xyz), vec3(_282, _283, _284));
    float _3916 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
    float _3927 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
    float _1800 = (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0))) * 0.3183098733425140380859375;
    float _1802 = (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))) * 0.3183098733425140380859375;
    float _1809 = ((cbLight._m0[_1757].x * _1763) * _1802) + (((cbLight._m0[_1767].x * _1729) * _1777) * _1800);
    float _1810 = ((_1763 * cbLight._m0[_1757].y) * _1802) + (((cbLight._m0[_1767].y * _1731) * _1777) * _1800);
    float _1811 = ((_1763 * cbLight._m0[_1757].z) * _1802) + (((cbLight._m0[_1767].z * _1733) * _1777) * _1800);
    uvec4 _1815 = floatBitsToUint(cbLight._m0[_1740 + 12u]);
    bool _1817 = _1815.x == 0u;
    float _1919;
    float _1921;
    float _1923;
    if (_1817)
    {
        _1919 = _1809;
        _1921 = _1810;
        _1923 = _1811;
    }
    else
    {
        uint _1927 = _1740 + 6u;
        float _1943 = (dot(vec3(cbLight._m0[_1740 + 2u].xyz), vec3(_282, _283, _284)) * 0.5) + 0.5;
        float _1944 = _1943 * _1943;
        float _3938 = isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0));
        float _1945 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
        float _1946 = isnan(1.0) ? _1755 : (isnan(_1755) ? 1.0 : min(_1755, 1.0));
        _1919 = (((cbLight._m0[_1927].x * 0.3183098733425140380859375) * _1945) * _1946) + _1809;
        _1921 = (((cbLight._m0[_1927].y * 0.3183098733425140380859375) * _1945) * _1946) + _1810;
        _1923 = (((cbLight._m0[_1927].z * 0.3183098733425140380859375) * _1945) * _1946) + _1811;
    }
    bool _1926 = _1815.y == 0u;
    float _1981;
    float _1983;
    float _1985;
    if (_1926)
    {
        _1981 = _1919;
        _1983 = _1921;
        _1985 = _1923;
    }
    else
    {
        uint _2143 = _1740 + 7u;
        float _2159 = (dot(vec3(cbLight._m0[_1740 + 3u].xyz), vec3(_282, _283, _284)) * 0.5) + 0.5;
        float _2160 = _2159 * _2159;
        float _3954 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
        float _2161 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
        float _2162 = isnan(1.0) ? _1756 : (isnan(_1756) ? 1.0 : min(_1756, 1.0));
        _1981 = (((cbLight._m0[_2143].x * 0.3183098733425140380859375) * _2161) * _2162) + _1919;
        _1983 = (((cbLight._m0[_2143].y * 0.3183098733425140380859375) * _2161) * _2162) + _1921;
        _1985 = (((cbLight._m0[_2143].z * 0.3183098733425140380859375) * _2161) * _2162) + _1923;
    }
    uint _1988 = _1740 + 8u;
    float _2001 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1740].w)) * _285) * 0.949999988079071044921875);
    float _2002 = _2001 * _2001;
    float _2003 = cbLight._m0[_1740].x + _364;
    float _2004 = cbLight._m0[_1740].y + _365;
    float _2005 = cbLight._m0[_1740].z + _366;
    float _2009 = inversesqrt(dot(vec3(_2003, _2004, _2005), vec3(_2003, _2004, _2005)));
    float _2010 = _2009 * _2003;
    float _2011 = _2009 * _2004;
    float _2012 = _2009 * _2005;
    float _2013 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1740].xyz));
    float _3970 = isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0));
    float _2016 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _3981 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _2017 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _2018 = dot(vec3(_282, _283, _284), vec3(_2010, _2011, _2012));
    float _3992 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0));
    float _2021 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    float _2022 = dot(vec3(cbLight._m0[_1740].xyz), vec3(_2010, _2011, _2012));
    float _4003 = isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0));
    float _2026 = _2002 * _2002;
    float _2030 = ((_2021 * _2021) * (_2026 + (-1.0))) + 1.0;
    float _2041 = (exp2(log2(1.0 - (isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2042 = 1.0 - _2002;
    float _2053 = (0.5 / (((_2017 * ((_2016 * _2042) + _2002)) + 9.9999999392252902907785028219223e-09) + (((_2017 * _2042) + _2002) * _2016))) * _2016;
    float _4014 = isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0));
    float _2055 = (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0))) * (_2026 / ((_2030 * _2030) * 3.141590118408203125));
    uint _2069 = _1740 + 9u;
    float _2080 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1781].w)) * _285) * 0.949999988079071044921875);
    float _2081 = _2080 * _2080;
    float _2082 = cbLight._m0[_1781].x + _364;
    float _2083 = cbLight._m0[_1781].y + _365;
    float _2084 = cbLight._m0[_1781].z + _366;
    float _2088 = inversesqrt(dot(vec3(_2082, _2083, _2084), vec3(_2082, _2083, _2084)));
    float _2089 = _2088 * _2082;
    float _2090 = _2088 * _2083;
    float _2091 = _2088 * _2084;
    float _2092 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1781].xyz));
    float _4025 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
    float _2095 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
    float _2096 = dot(vec3(_282, _283, _284), vec3(_2089, _2090, _2091));
    float _4036 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
    float _2099 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _2100 = dot(vec3(cbLight._m0[_1781].xyz), vec3(_2089, _2090, _2091));
    float _4047 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
    float _2104 = _2081 * _2081;
    float _2108 = ((_2099 * _2099) * (_2104 + (-1.0))) + 1.0;
    float _2117 = (exp2(log2(1.0 - (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2118 = 1.0 - _2081;
    float _2128 = (0.5 / (((_2017 * ((_2095 * _2118) + _2081)) + 9.9999999392252902907785028219223e-09) + (((_2017 * _2118) + _2081) * _2095))) * _2095;
    float _4058 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
    float _2130 = (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0))) * (_2104 / ((_2108 * _2108) * 3.141590118408203125));
    float _2140 = (((_2117 * cbLight._m0[_2069].x) * _2130) * _1763) + ((((cbLight._m0[_1988].x * _1729) * _2041) * _2055) * _1777);
    float _2141 = (((_2117 * cbLight._m0[_2069].y) * _2130) * _1763) + ((((cbLight._m0[_1988].y * _1731) * _2041) * _2055) * _1777);
    float _2142 = (((_2117 * cbLight._m0[_2069].z) * _2130) * _1763) + ((((cbLight._m0[_1988].z * _1733) * _2041) * _2055) * _1777);
    float _2198;
    float _2200;
    float _2202;
    if (_1817)
    {
        _2198 = _2140;
        _2200 = _2141;
        _2202 = _2142;
    }
    else
    {
        uint _2204 = _1740 + 2u;
        uint _2208 = _1740 + 10u;
        float _2222 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2204].w)) * _285) * 0.949999988079071044921875);
        float _2223 = _2222 * _2222;
        float _2224 = cbLight._m0[_2204].x + _364;
        float _2225 = cbLight._m0[_2204].y + _365;
        float _2226 = cbLight._m0[_2204].z + _366;
        float _2230 = inversesqrt(dot(vec3(_2224, _2225, _2226), vec3(_2224, _2225, _2226)));
        float _2231 = _2230 * _2224;
        float _2232 = _2230 * _2225;
        float _2233 = _2230 * _2226;
        float _2234 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_2204].xyz));
        float _4069 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
        float _2237 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
        float _2238 = dot(vec3(_282, _283, _284), vec3(_2231, _2232, _2233));
        float _4080 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
        float _2241 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
        float _2242 = dot(vec3(cbLight._m0[_2204].xyz), vec3(_2231, _2232, _2233));
        float _4091 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
        float _2246 = _2223 * _2223;
        float _2250 = ((_2241 * _2241) * (_2246 + (-1.0))) + 1.0;
        float _2259 = (exp2(log2(1.0 - (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2260 = 1.0 - _2223;
        float _2270 = (0.5 / (((_2017 * ((_2237 * _2260) + _2223)) + 9.9999999392252902907785028219223e-09) + (((_2017 * _2260) + _2223) * _2237))) * _2237;
        float _4102 = isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0));
        float _2272 = (isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * (_2246 / ((_2250 * _2250) * 3.141590118408203125));
        float _2273 = isnan(1.0) ? _1755 : (isnan(_1755) ? 1.0 : min(_1755, 1.0));
        _2198 = (((_2259 * cbLight._m0[_2208].x) * _2272) * _2273) + _2140;
        _2200 = (((_2259 * cbLight._m0[_2208].y) * _2272) * _2273) + _2141;
        _2202 = (((_2259 * cbLight._m0[_2208].z) * _2272) * _2273) + _2142;
    }
    float _2304;
    float _2306;
    float _2308;
    if (_1926)
    {
        _2304 = _2198;
        _2306 = _2200;
        _2308 = _2202;
    }
    else
    {
        uint _2315 = _1740 + 3u;
        uint _2319 = _1740 + 11u;
        float _2333 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2315].w)) * _285) * 0.949999988079071044921875);
        float _2334 = _2333 * _2333;
        float _2335 = cbLight._m0[_2315].x + _364;
        float _2336 = cbLight._m0[_2315].y + _365;
        float _2337 = cbLight._m0[_2315].z + _366;
        float _2341 = inversesqrt(dot(vec3(_2335, _2336, _2337), vec3(_2335, _2336, _2337)));
        float _2342 = _2341 * _2335;
        float _2343 = _2341 * _2336;
        float _2344 = _2341 * _2337;
        float _2345 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_2315].xyz));
        float _4118 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
        float _2348 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
        float _2349 = dot(vec3(_282, _283, _284), vec3(_2342, _2343, _2344));
        float _4129 = isnan(0.0) ? _2349 : (isnan(_2349) ? 0.0 : max(_2349, 0.0));
        float _2352 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _2353 = dot(vec3(cbLight._m0[_2315].xyz), vec3(_2342, _2343, _2344));
        float _4140 = isnan(0.0) ? _2353 : (isnan(_2353) ? 0.0 : max(_2353, 0.0));
        float _2357 = _2334 * _2334;
        float _2361 = ((_2352 * _2352) * (_2357 + (-1.0))) + 1.0;
        float _2370 = (exp2(log2(1.0 - (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2371 = 1.0 - _2334;
        float _2381 = (0.5 / (((_2017 * ((_2348 * _2371) + _2334)) + 9.9999999392252902907785028219223e-09) + (((_2017 * _2371) + _2334) * _2348))) * _2348;
        float _4151 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
        float _2383 = (isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0))) * (_2357 / ((_2361 * _2361) * 3.141590118408203125));
        float _2384 = isnan(1.0) ? _1756 : (isnan(_1756) ? 1.0 : min(_1756, 1.0));
        _2304 = (((_2370 * cbLight._m0[_2319].x) * _2383) * _2384) + _2198;
        _2306 = (((_2370 * cbLight._m0[_2319].y) * _2383) * _2384) + _2200;
        _2308 = (((_2370 * cbLight._m0[_2319].z) * _2383) * _2384) + _2202;
    }
    float _2450;
    float _2452;
    float _2454;
    float _2456;
    float _2458;
    float _2460;
    if (_1738.y == 0u)
    {
        uvec4 _2405 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2406 = _2405.x;
        uint _2417 = uint((float(_2405.y) * floor(float(uint(cbSceneParam._m0[85u].y * _373) / _2406))) + floor(float(uint(cbSceneParam._m0[85u].x * _372) / _2406)));
        float _2427 = (log2(_1516 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2428 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
        uint _2431 = uint(isnan(14.0) ? _2428 : (isnan(_2428) ? 14.0 : min(_2428, 14.0)));
        uvec4 _2436 = texelFetch(g_lightClusterGridBuffer, int(((_2431 << 2u) + (_2417 << 6u)) >> 2u));
        uint _2437 = _2436.x;
        uint _2438 = _2405.z;
        float _2517;
        float _2519;
        float _2521;
        float _2523;
        float _2525;
        float _2527;
        if (((((1u << ((_2438 >> 4u) & 15u)) + 4294967295u) & _2437) == 0u) || ((_2438 & 240u) == 0u))
        {
            _2517 = 0.0;
            _2519 = 0.0;
            _2521 = 0.0;
            _2523 = 0.0;
            _2525 = 0.0;
            _2527 = 0.0;
        }
        else
        {
            float _2518;
            float _2520;
            float _2522;
            float _2524;
            float _2526;
            float _2528;
            float _2662 = 0.0;
            float _2663 = 0.0;
            float _2664 = 0.0;
            float _2665 = 0.0;
            float _2666 = 0.0;
            float _2667 = 0.0;
            uint _2668 = 0u;
            uint _2677;
            bool _2678;
            for (;;)
            {
                _2677 = texelFetch(g_lightClassification, int((((_2431 << 5u) + (_2417 << 9u)) + (_2668 << 2u)) >> 2u)).x;
                _2678 = _2677 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2678)
                {
                    frontier_phi_66_pred = _2667;
                    frontier_phi_66_pred_1 = _2666;
                    frontier_phi_66_pred_2 = _2665;
                    frontier_phi_66_pred_3 = _2664;
                    frontier_phi_66_pred_4 = _2663;
                    frontier_phi_66_pred_5 = _2662;
                }
                else
                {
                    float _2786;
                    float _2787;
                    float _2788;
                    float _2789;
                    float _2790;
                    float _2791;
                    uint _2792;
                    _2786 = _2662;
                    _2787 = _2663;
                    _2788 = _2664;
                    _2789 = _2665;
                    _2790 = _2666;
                    _2791 = _2667;
                    _2792 = _2677;
                    float _2718;
                    float _2719;
                    float _2720;
                    float _2721;
                    float _2722;
                    float _2723;
                    for (;;)
                    {
                        uint _2796 = uint(findLSB(_2792)) + (_2668 << 5u);
                        uint _2793 = (_2792 + 4294967295u) & _2792;
                        uint _2798 = _2796 * 48u;
                        vec4 _2812 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2798)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2798 + 3u)).x));
                        uint _2818 = (_2796 * 48u) + 4u;
                        vec4 _2831 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2818)).x, texelFetch(g_PointLightRenderingBuffer, int(_2818 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2818 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2818 + 3u)).x));
                        uint _2837 = (_2796 * 48u) + 8u;
                        vec3 _2848 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2837)).x, texelFetch(g_PointLightRenderingBuffer, int(_2837 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2837 + 2u)).x));
                        float _2852 = _2812.x - _1514;
                        float _2853 = _2812.y - _1515;
                        float _2854 = _2812.z - _1516;
                        float _2855 = dot(vec3(_2852, _2853, _2854), vec3(_2852, _2853, _2854));
                        float _2858 = inversesqrt(_2855);
                        float _2859 = _2858 * _2852;
                        float _2860 = _2858 * _2853;
                        float _2861 = _2858 * _2854;
                        float _2862 = dot(vec3(_393, _396, _399), vec3(_2859, _2860, _2861));
                        float _2867 = 1.0 - (_2855 * _2812.w);
                        float _4177 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
                        float _2868 = isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0));
                        float _2869 = sqrt(_2855) * _2831.w;
                        float _2872 = 1.39999997615814208984375 / (_2869 + 1.39999997615814208984375);
                        float _2873 = _2872 * _2872;
                        float _2876 = ((1.0 - _2873) * _2862) + _2873;
                        float _2879 = _2869 * _2869;
                        float _2883 = ((isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0))) * _2868) / ((_2879 * 0.699999988079071044921875) + 1.0);
                        float _2887 = (-0.0) - _1514;
                        float _2888 = (-0.0) - _1515;
                        float _2889 = (-0.0) - _1516;
                        float _2893 = inversesqrt(dot(vec3(_2887, _2888, _2889), vec3(_2887, _2888, _2889)));
                        float _2894 = _2893 * _2887;
                        float _2895 = _2893 * _2888;
                        float _2896 = _2893 * _2889;
                        float _2903 = exp2(log2(1.0 / ((_2879 * 3.5) + 5.0)) * 0.25);
                        float _2904 = 1.0 - _453;
                        float _2911 = sqrt(1.0 - ((1.0 - (_2904 * _2904)) * (1.0 - (_2903 * _2903))));
                        float _2912 = _2911 * _2911;
                        float _2913 = _2912 * _2912;
                        float _2914 = _2894 + _2859;
                        float _2915 = _2895 + _2860;
                        float _2916 = _2896 + _2861;
                        float _2920 = inversesqrt(dot(vec3(_2914, _2915, _2916), vec3(_2914, _2915, _2916)));
                        float _2924 = dot(vec3(_393, _396, _399), vec3(_2894, _2895, _2896));
                        float _4193 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
                        float _2927 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
                        float _2928 = dot(vec3(_393, _396, _399), vec3(_2920 * _2914, _2920 * _2915, _2920 * _2916));
                        float _4204 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
                        float _2931 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
                        float _2935 = ((_2931 * _2931) * (_2913 + (-1.0))) + 1.0;
                        float _2936 = _2872 * _2912;
                        float _2937 = _2936 * _2936;
                        float _2940 = ((1.0 - _2937) * _2862) + _2937;
                        float _4215 = isnan(0.0) ? _2940 : (isnan(_2940) ? 0.0 : max(_2940, 0.0));
                        float _2941 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
                        float _2942 = 1.0 - _2912;
                        float _2952 = (0.5 / (((_2941 * ((_2927 * _2942) + _2912)) + 9.9999999392252902907785028219223e-09) + (((_2941 * _2942) + _2912) * _2927))) * _2941;
                        float _4226 = isnan(0.0) ? _2952 : (isnan(_2952) ? 0.0 : max(_2952, 0.0));
                        float _2963 = (((_2913 * 3.1415927410125732421875) * (isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0)))) / ((_2935 * _2935) * ((_2879 * 2.1991131305694580078125) + 3.141590118408203125))) * _2868;
                        _2721 = (_2883 * _2831.x) + _2789;
                        _2722 = (_2883 * _2831.y) + _2790;
                        _2723 = (_2883 * _2831.z) + _2791;
                        _2718 = (_2963 * _2848.x) + _2786;
                        _2719 = (_2963 * _2848.y) + _2787;
                        _2720 = (_2963 * _2848.z) + _2788;
                        if (_2793 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2786 = _2718;
                            _2787 = _2719;
                            _2788 = _2720;
                            _2789 = _2721;
                            _2790 = _2722;
                            _2791 = _2723;
                            _2792 = _2793;
                        }
                    }
                    frontier_phi_66_pred = _2723;
                    frontier_phi_66_pred_1 = _2722;
                    frontier_phi_66_pred_2 = _2721;
                    frontier_phi_66_pred_3 = _2720;
                    frontier_phi_66_pred_4 = _2719;
                    frontier_phi_66_pred_5 = _2718;
                }
                _2528 = frontier_phi_66_pred;
                _2526 = frontier_phi_66_pred_1;
                _2524 = frontier_phi_66_pred_2;
                _2522 = frontier_phi_66_pred_3;
                _2520 = frontier_phi_66_pred_4;
                _2518 = frontier_phi_66_pred_5;
                uint _2669 = _2668 + 1u;
                if (_2669 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2662 = _2518;
                    _2663 = _2520;
                    _2664 = _2522;
                    _2665 = _2524;
                    _2666 = _2526;
                    _2667 = _2528;
                    _2668 = _2669;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2517 = _2518;
            _2519 = _2520;
            _2521 = _2522;
            _2523 = _2524;
            _2525 = _2526;
            _2527 = _2528;
        }
        uvec4 _2531 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2532 = _2531.z;
        uint _2534 = (_2532 >> 8u) & 15u;
        float _2630;
        float _2632;
        float _2634;
        float _2636;
        float _2638;
        float _2640;
        if (((4294967295u << _2534) & _2437) == 0u)
        {
            _2630 = _2517;
            _2632 = _2519;
            _2634 = _2521;
            _2636 = _2523;
            _2638 = _2525;
            _2640 = _2527;
        }
        else
        {
            float _2655 = inversesqrt(dot(vec3(_1514, _1515, _1516), vec3(_1514, _1515, _1516)));
            float _2656 = _2655 * _1514;
            float _2657 = _2655 * _1515;
            float _2658 = _2655 * _1516;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2534 < ((_2532 >> 12u) & 15u))
            {
                float _2631;
                float _2633;
                float _2635;
                float _2637;
                float _2639;
                float _2641;
                float _2769 = _2517;
                float _2770 = _2519;
                float _2771 = _2521;
                float _2772 = _2523;
                float _2773 = _2525;
                float _2774 = _2527;
                uint _2775 = _2534;
                uint _2784;
                bool _2785;
                for (;;)
                {
                    _2784 = texelFetch(g_lightClassification, int((((_2431 << 5u) + (_2417 << 9u)) + (_2775 << 2u)) >> 2u)).x;
                    _2785 = _2784 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2785)
                    {
                        frontier_phi_72_pred = _2774;
                        frontier_phi_72_pred_1 = _2773;
                        frontier_phi_72_pred_2 = _2772;
                        frontier_phi_72_pred_3 = _2771;
                        frontier_phi_72_pred_4 = _2770;
                        frontier_phi_72_pred_5 = _2769;
                    }
                    else
                    {
                        float _2968;
                        float _2969;
                        float _2970;
                        float _2971;
                        float _2972;
                        float _2973;
                        float _3264;
                        float _3265;
                        float _3266;
                        float _3267;
                        float _3268;
                        float _3269;
                        float _2981 = _2769;
                        float _2982 = _2770;
                        float _2983 = _2771;
                        float _2984 = _2772;
                        float _2985 = _2773;
                        float _2986 = _2774;
                        uint _2987 = _2784;
                        uint _2988;
                        vec4 _3013;
                        float _3014;
                        vec4 _3029;
                        vec3 _3041;
                        vec4 _3057;
                        vec4 _3073;
                        float _3120;
                        bool _3121;
                        for (;;)
                        {
                            uint _2998 = ((_2775 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2987));
                            _2988 = (_2987 + 4294967295u) & _2987;
                            uint _3000 = _2998 * 40u;
                            _3013 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3000)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 3u)).x));
                            _3014 = _3013.w;
                            uint _3016 = (_2998 * 40u) + 4u;
                            _3029 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3016)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3016 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3016 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3016 + 3u)).x));
                            uint _3031 = (_2998 * 40u) + 8u;
                            _3041 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3031)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3031 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3031 + 2u)).x));
                            uint _3044 = (_2998 * 40u) + 16u;
                            _3057 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3044)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3044 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3044 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3044 + 3u)).x));
                            uint _3060 = (_2998 * 40u) + 20u;
                            _3073 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3060)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3060 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3060 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3060 + 3u)).x));
                            uint _3076 = (_2998 * 40u) + 24u;
                            vec4 _3089 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3076)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3076 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3076 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3076 + 3u)).x));
                            uint _3095 = (_2998 * 40u) + 28u;
                            vec4 _3108 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3095)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3095 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3095 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3095 + 3u)).x));
                            _3120 = fma(_1516, _3108.z, fma(_1515, _3108.y, _3108.x * _1514)) + _3108.w;
                            _3121 = !((fma(_1516, _3089.z, fma(_1515, _3089.y, _3089.x * _1514)) + _3089.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3121)
                            {
                                float _3148 = _3013.x - _1514;
                                float _3149 = _3013.y - _1515;
                                float _3150 = _3013.z - _1516;
                                float _3151 = dot(vec3(_3148, _3149, _3150), vec3(_3148, _3149, _3150));
                                float _3154 = inversesqrt(_3151);
                                float _3155 = _3154 * _3148;
                                float _3156 = _3154 * _3149;
                                float _3157 = _3154 * _3150;
                                float _3161 = 1.0 - (_3151 / (_3014 * _3014));
                                float _4237 = isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : max(_3161, 0.0));
                                float _3162 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
                                float _3166 = sqrt(_3151) * _3029.w;
                                float _3168 = 1.39999997615814208984375 / (_3166 + 1.39999997615814208984375);
                                float _3169 = _3168 * _3168;
                                float _3172 = ((1.0 - _3169) * dot(vec3(_3155, _3156, _3157), vec3(_393, _396, _399))) + _3169;
                                float _3175 = _3166 * _3166;
                                float _3179 = (fma(_1516, _3057.z, fma(_1515, _3057.y, _3057.x * _1514)) + _3057.w) / _3120;
                                float _3180 = (fma(_1516, _3073.z, fma(_1515, _3073.y, _3073.x * _1514)) + _3073.w) / _3120;
                                float _3184 = 1.0 - dot(vec2(_3179, _3180), vec2(_3179, _3180));
                                float _4253 = isnan(0.0) ? _3184 : (isnan(_3184) ? 0.0 : max(_3184, 0.0));
                                float _3185 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
                                float _3186 = _3185 * (((isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : max(_3172, 0.0))) * _3162) / ((_3175 * 0.699999988079071044921875) + 1.0));
                                float _3198 = exp2(log2(1.0 / ((_3175 * 3.5) + 5.0)) * 0.25);
                                float _3199 = 1.0 - _453;
                                float _3206 = sqrt(1.0 - ((1.0 - (_3199 * _3199)) * (1.0 - (_3198 * _3198))));
                                float _3207 = _3206 * _3206;
                                float _3208 = _3207 * _3207;
                                float _3209 = _3155 - _2656;
                                float _3210 = _3156 - _2657;
                                float _3211 = _3157 - _2658;
                                float _3215 = inversesqrt(dot(vec3(_3209, _3210, _3211), vec3(_3209, _3210, _3211)));
                                float _3219 = dot(vec3(_393, _396, _399), vec3((-0.0) - _2656, (-0.0) - _2657, (-0.0) - _2658));
                                float _4264 = isnan(0.0) ? _3219 : (isnan(_3219) ? 0.0 : max(_3219, 0.0));
                                float _3222 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
                                float _3223 = dot(vec3(_393, _396, _399), vec3(_3215 * _3209, _3215 * _3210, _3215 * _3211));
                                float _4275 = isnan(0.0) ? _3223 : (isnan(_3223) ? 0.0 : max(_3223, 0.0));
                                float _3226 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
                                float _3230 = ((_3226 * _3226) * (_3208 + (-1.0))) + 1.0;
                                float _3231 = _3168 * _3207;
                                float _3232 = _3231 * _3231;
                                float _3238 = ((1.0 - _3232) * dot(vec3(_393, _396, _399), vec3(_3155, _3156, _3157))) + _3232;
                                float _4286 = isnan(0.0) ? _3238 : (isnan(_3238) ? 0.0 : max(_3238, 0.0));
                                float _3239 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
                                float _3240 = 1.0 - _3207;
                                float _3250 = (0.5 / (((_3239 * ((_3222 * _3240) + _3207)) + 9.9999999392252902907785028219223e-09) + (((_3239 * _3240) + _3207) * _3222))) * _3239;
                                float _4297 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
                                float _3260 = (_3185 * _3162) * (((_3208 * 3.1415927410125732421875) * (isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0)))) / ((_3230 * _3230) * ((_3175 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3186 * _3029.y;
                                frontier_phi_78_pred_1 = _3186 * _3029.x;
                                frontier_phi_78_pred_2 = _3260 * _3041.z;
                                frontier_phi_78_pred_3 = _3260 * _3041.y;
                                frontier_phi_78_pred_4 = _3260 * _3041.x;
                                frontier_phi_78_pred_5 = _3186 * _3029.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3268 = frontier_phi_78_pred;
                            _3267 = frontier_phi_78_pred_1;
                            _3266 = frontier_phi_78_pred_2;
                            _3265 = frontier_phi_78_pred_3;
                            _3264 = frontier_phi_78_pred_4;
                            _3269 = frontier_phi_78_pred_5;
                            _2971 = _3267 + _2984;
                            _2972 = _3268 + _2985;
                            _2973 = _3269 + _2986;
                            _2968 = _3264 + _2981;
                            _2969 = _3265 + _2982;
                            _2970 = _3266 + _2983;
                            if (_2988 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2981 = _2968;
                                _2982 = _2969;
                                _2983 = _2970;
                                _2984 = _2971;
                                _2985 = _2972;
                                _2986 = _2973;
                                _2987 = _2988;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2973;
                        frontier_phi_72_pred_1 = _2972;
                        frontier_phi_72_pred_2 = _2971;
                        frontier_phi_72_pred_3 = _2970;
                        frontier_phi_72_pred_4 = _2969;
                        frontier_phi_72_pred_5 = _2968;
                    }
                    _2641 = frontier_phi_72_pred;
                    _2639 = frontier_phi_72_pred_1;
                    _2637 = frontier_phi_72_pred_2;
                    _2635 = frontier_phi_72_pred_3;
                    _2633 = frontier_phi_72_pred_4;
                    _2631 = frontier_phi_72_pred_5;
                    uint _2776 = _2775 + 1u;
                    if (_2776 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2769 = _2631;
                        _2770 = _2633;
                        _2771 = _2635;
                        _2772 = _2637;
                        _2773 = _2639;
                        _2774 = _2641;
                        _2775 = _2776;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2641;
                frontier_phi_60_61_ladder_1 = _2639;
                frontier_phi_60_61_ladder_2 = _2635;
                frontier_phi_60_61_ladder_3 = _2633;
                frontier_phi_60_61_ladder_4 = _2631;
                frontier_phi_60_61_ladder_5 = _2637;
            }
            else
            {
                frontier_phi_60_61_ladder = _2527;
                frontier_phi_60_61_ladder_1 = _2525;
                frontier_phi_60_61_ladder_2 = _2521;
                frontier_phi_60_61_ladder_3 = _2519;
                frontier_phi_60_61_ladder_4 = _2517;
                frontier_phi_60_61_ladder_5 = _2523;
            }
            _2630 = frontier_phi_60_61_ladder_4;
            _2632 = frontier_phi_60_61_ladder_3;
            _2634 = frontier_phi_60_61_ladder_2;
            _2636 = frontier_phi_60_61_ladder_5;
            _2638 = frontier_phi_60_61_ladder_1;
            _2640 = frontier_phi_60_61_ladder;
        }
        float _2645 = isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0));
        _2450 = (_2645 * _2636) + _1981;
        _2452 = (_2645 * _2638) + _1983;
        _2454 = (_2645 * _2640) + _1985;
        _2456 = ((_2630 * 0.039999999105930328369140625) * _2645) + _2304;
        _2458 = ((_2632 * 0.039999999105930328369140625) * _2645) + _2306;
        _2460 = ((_2634 * 0.039999999105930328369140625) * _2645) + _2308;
    }
    else
    {
        _2450 = _1981;
        _2452 = _1983;
        _2454 = _1985;
        _2456 = _2304;
        _2458 = _2306;
        _2460 = _2308;
    }
    float _4313 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _4324 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _4335 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    uint _2480 = _412 + 6u;
    float _2488 = _372 / cbSceneParam._m0[86u].x;
    float _2489 = _373 / cbSceneParam._m0[86u].y;
    vec4 _2503 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2488, _2489, (log2((isnan(cbSceneParam._m0[77u].w) ? _304 : (isnan(_304) ? cbSceneParam._m0[77u].w : min(_304, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2505 = _2503.x;
    float _2506 = _2503.y;
    float _2507 = _2503.z;
    float _2508 = _2503.w;
    float _2580;
    float _2582;
    float _2584;
    float _2586;
    if (_304 > cbSceneParam._m0[78u].w)
    {
        float _2542 = isnan(_304) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _304 : min(cbSceneParam._m0[80u].w, _304));
        float _2543 = _2542 / _304;
        float _2554 = _2543 * _357;
        float _2555 = _358 * _2543;
        float _2556 = (-0.0) - _2555;
        float _2558 = _2543 * _359;
        float _2560 = (cbSceneParam._m0[77u].w * _2556) / _2542;
        float _2561 = _2560 + cbSceneParam._m0[79u].w;
        float _2562 = cbSceneParam._m0[79u].w - _2555;
        float _2568 = sqrt(((_2554 * _2554) + (_2555 * _2555)) + (_2558 * _2558));
        float _2571 = (1.0 - (cbSceneParam._m0[77u].w / _2542)) * _2568;
        float _2576 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2578 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2731;
        if (abs((_2556 - _2560) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2731 = ((((_2561 > 0.0) ? exp2(_2576 * _2561) : (2.0 - exp2(_2578 * _2561))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2571;
        }
        else
        {
            float _2691 = 1.0 / cbSceneParam._m0[80u].x;
            float _2692 = isnan(_2562) ? _2561 : (isnan(_2561) ? _2562 : max(_2561, _2562));
            float _2693 = isnan(_2562) ? _2561 : (isnan(_2561) ? _2562 : min(_2561, _2562));
            float _2702 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : min(_2692, 0.0));
            float _2703 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : min(_2693, 0.0));
            _2731 = ((abs(_2568 / _2556) * cbSceneParam._m0[80u].y) * ((((_2702 - _2703) * 2.0) - ((exp2(_2576 * (isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0)))) - exp2(_2576 * (isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0))))) * _2691)) - ((exp2(_2578 * _2702) - exp2(_2578 * _2703)) * _2691))) + (_2571 * cbSceneParam._m0[80u].z);
        }
        vec4 _2733 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2488, _2489, 1.0), 0.0);
        float _2742 = exp2((_2731 * (-1.44269502162933349609375)) * (1.0 - _2733.w));
        float _2743 = log2(_2742);
        float _2759 = log2(_2508);
        _2580 = (exp2(_2759 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2743 * cbSceneParam._m0[78u].x)) * _2733.x) / cbSceneParam._m0[78u].x)) + _2505;
        _2582 = (exp2(_2759 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2743 * cbSceneParam._m0[78u].y)) * _2733.y) / cbSceneParam._m0[78u].y)) + _2506;
        _2584 = (exp2(_2759 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2743 * cbSceneParam._m0[78u].z)) * _2733.z) / cbSceneParam._m0[78u].z)) + _2507;
        _2586 = _2742 * _2508;
    }
    else
    {
        _2580 = _2505;
        _2582 = _2506;
        _2584 = _2507;
        _2586 = _2508;
    }
    float _2598 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2599 = _2598 == 3.0;
    float _2600 = log2(_2586);
    float _2607 = exp2(_2600 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0))) * (_2450 + ((isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0))) * _437))) + ((_2456 + ((isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0))) * _1244)) * cbPerFrame._m0[3u].x));
    float _2608 = exp2(_2600 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_2452 + ((isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0))) * _437))) + ((_2458 + ((isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0))) * _1244)) * cbPerFrame._m0[3u].x));
    float _2609 = exp2(_2600 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_2454 + ((isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0))) * _437))) + ((_2460 + ((isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0))) * _1244)) * cbPerFrame._m0[3u].x));
    float _2618 = (_2598 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2618 * (_2599 ? _2607 : (_2607 + (cbSceneParam._m0[72u].w * _2580)));
    SV_Target.y = _2618 * (_2599 ? _2608 : (_2608 + (cbSceneParam._m0[72u].w * _2582)));
    SV_Target.z = _2618 * (_2599 ? _2609 : (_2609 + (cbSceneParam._m0[72u].w * _2584)));
    SV_Target.w = cbInstanceData._m0[_2480].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2480].w;
}


