#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _177 = texture(sampler2D(M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _183 = _177.w;
    float _184 = _177.x * cbMtdParam._m0[9u].x;
    float _185 = _177.y * cbMtdParam._m0[9u].y;
    float _186 = _177.z * cbMtdParam._m0[9u].z;
    vec4 _198 = texture(sampler2D(M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _200 = _198.x;
    vec4 _212 = texture(sampler2D(M_AMSN_M0_M1_Edge_DecalBlend_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _216 = _212.z;
    float _220 = (_212.x * 2.0) + (-1.0);
    float _222 = (_212.y * 2.0) + (-1.0);
    float _223 = dot(vec2(_220, _222), vec2(_220, _222));
    float _438 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _229 = sqrt(1.0 - (isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0))));
    float _238 = fma(_229, _147 * NORMAL.x, fma(_222, _154 * TANGENT.x, (_140 * _133) * _220));
    float _241 = fma(_229, _147 * NORMAL.y, fma(_222, _154 * TANGENT.y, (_140 * _134) * _220));
    float _244 = fma(_229, _147 * NORMAL.z, fma(_222, _154 * TANGENT.z, (_140 * _135) * _220));
    float _248 = inversesqrt(dot(vec3(_238, _241, _244), vec3(_238, _241, _244)));
    float _449 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _460 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _250 = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    float _471 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _251 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    float _482 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _252 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
    float _493 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    uint _255 = uint(roundEven(NORMAL.w));
    vec4 _260 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _262 = _260.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _328 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _504 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
        float _329 = isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0));
        float _333 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _515 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0))) - _329)) + _329) < ((_262 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _362;
    uint _282;
    vec4 _287;
    float _294;
    float _295;
    float _296;
    float _300;
    float _301;
    float _302;
    float _303;
    vec4 _307;
    float _309;
    float _310;
    bool _321;
    for (;;)
    {
        _282 = _255 * 13u;
        _287 = cbInstanceData._m0[(_282 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _291 = (cbMtdParam._m0[0u].x * _250) * _287.x;
        float _292 = (cbMtdParam._m0[0u].y * _251) * _287.y;
        float _293 = (cbMtdParam._m0[0u].z * _252) * _287.z;
        float _526 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
        _294 = isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0));
        float _537 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
        _295 = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
        float _548 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
        _296 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
        _300 = cbInstanceData._m0[_282 + 6u].w;
        _301 = _300 * cbMtdParam._m0[10u].x;
        _302 = _300 * cbMtdParam._m0[10u].y;
        _303 = _300 * cbMtdParam._m0[10u].z;
        float _304 = _262 + (-0.5);
        _307 = cbMtdParam._m0[1u];
        _309 = _307.y * _304;
        _310 = _304 * 0.999000012874603271484375;
        _321 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_321)
        {
            if ((cbInstanceData._m0[_282 + 7u].x + _310) < 0.5)
            {
                _362 = true;
                break;
            }
        }
        if ((_287.w < 1.0) && ((_287.w + _310) < 0.5))
        {
            _362 = true;
            break;
        }
        if ((_309 + _183) < _307.x)
        {
            _362 = true;
            break;
        }
        _362 = false;
        break;
    }
    if (_362)
    {
        discard_state = true;
    }
    float _389;
    float _390;
    float _391;
    float _392;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _389 = _300;
        _390 = _303;
        _391 = _302;
        _392 = _301;
    }
    else
    {
        _389 = 0.0;
        _390 = float(floatBitsToUint(cbInstanceData._m0[_282 + 5u]).x) * 0.0039215688593685626983642578125;
        _391 = TEXCOORD.z;
        _392 = 0.0;
    }
    SV_Target.x = ((_238 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.y = ((_241 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.z = ((_244 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.w = _392;
    SV_Target_1.x = isnan(1.0) ? _493 : (isnan(_493) ? 1.0 : min(_493, 1.0));
    SV_Target_1.y = isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _391;
    SV_Target_2.x = _294;
    SV_Target_2.y = _295;
    SV_Target_2.z = _296;
    SV_Target_2.w = _390;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _389;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _389;
    discard_exit();
}


