#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _124 = _123 * NORMAL.x;
    float _125 = _123 * NORMAL.y;
    float _126 = _123 * NORMAL.z;
    float _131;
    float _132;
    float _133;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _131 = (-0.0) - _124;
        _132 = (-0.0) - _125;
        _133 = (-0.0) - _126;
    }
    else
    {
        _131 = _124;
        _132 = _125;
        _133 = _126;
    }
    vec4 _151 = texture(sampler2D(C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _154 = _151.x;
    float _155 = _151.y;
    float _156 = _151.z;
    vec4 _168 = texture(sampler2D(C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _180 = (cbMatDynParam._m0[17u].x * (_168.x - _154)) + _154;
    float _181 = (cbMatDynParam._m0[17u].x * (_168.y - _155)) + _155;
    float _182 = (cbMatDynParam._m0[17u].x * (_168.z - _156)) + _156;
    float _190 = (((-0.0500000007450580596923828125) - _180) * cbMatDynParam._m0[17u].y) + _180;
    float _191 = (((-0.0500000007450580596923828125) - _181) * cbMatDynParam._m0[17u].y) + _181;
    float _192 = (((-0.0500000007450580596923828125) - _182) * cbMatDynParam._m0[17u].y) + _182;
    float _196 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _197 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _198 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _199 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    uint _201 = uint(roundEven(NORMAL.w));
    vec4 _206 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _208 = _206.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _325 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _447 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
        float _326 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
        float _330 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _458 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0))) - _326)) + _326) < ((_208 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _359;
    uint _228;
    vec4 _233;
    float _294;
    float _295;
    float _296;
    float _300;
    vec4 _304;
    float _306;
    float _307;
    bool _318;
    for (;;)
    {
        _228 = _201 * 13u;
        _233 = cbInstanceData._m0[(_228 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _237 = (cbMtdParam._m0[0u].x * _197) * _233.x;
        float _238 = (cbMtdParam._m0[0u].y * _198) * _233.y;
        float _239 = (cbMtdParam._m0[0u].z * _199) * _233.z;
        float _240 = isnan(0.0039369477890431880950927734375) ? _237 : (isnan(_237) ? 0.0039369477890431880950927734375 : max(_237, 0.0039369477890431880950927734375));
        float _242 = isnan(0.0039369477890431880950927734375) ? _238 : (isnan(_238) ? 0.0039369477890431880950927734375 : max(_238, 0.0039369477890431880950927734375));
        float _243 = isnan(0.0039369477890431880950927734375) ? _239 : (isnan(_239) ? 0.0039369477890431880950927734375 : max(_239, 0.0039369477890431880950927734375));
        float _244 = _240 + (-0.0599999986588954925537109375);
        float _246 = _242 + (-0.0599999986588954925537109375);
        float _247 = _243 + (-0.0599999986588954925537109375);
        float _251 = (_244 * _244) + (-0.0035999999381601810455322265625);
        float _253 = (_246 * _246) + (-0.0035999999381601810455322265625);
        float _254 = (_247 * _247) + (-0.0035999999381601810455322265625);
        float _264 = (sqrt(isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0))) - _244) * 16.666667938232421875;
        float _266 = (sqrt(isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0))) - _246) * 16.666667938232421875;
        float _267 = (sqrt(isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0))) - _247) * 16.666667938232421875;
        float _268 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
        float _269 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        float _270 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        float _282 = (((isnan(1.0) ? _269 : (isnan(_269) ? 1.0 : min(_269, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _268 : (isnan(_268) ? 1.0 : min(_268, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _270 : (isnan(_270) ? 1.0 : min(_270, 1.0))) * 0.114000000059604644775390625);
        float _283 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
        float _284 = isnan(1.0) ? _283 : (isnan(_283) ? 1.0 : min(_283, 1.0));
        float _287 = 1.0 - (isnan(0.99989998340606689453125) ? _284 : (isnan(_284) ? 0.99989998340606689453125 : min(_284, 0.99989998340606689453125)));
        _294 = (cbMtdParam._m0[0u].x * (_240 / _287)) * _233.x;
        _295 = (cbMtdParam._m0[0u].y * (_242 / _287)) * _233.y;
        _296 = (cbMtdParam._m0[0u].z * (_243 / _287)) * _233.z;
        _300 = cbInstanceData._m0[_228 + 6u].w;
        float _301 = _208 + (-0.5);
        _304 = cbMtdParam._m0[1u];
        _306 = _304.y * _301;
        _307 = _301 * 0.999000012874603271484375;
        _318 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_318)
        {
            if ((cbInstanceData._m0[_228 + 7u].x + _307) < 0.5)
            {
                _359 = true;
                break;
            }
        }
        if ((_233.w < 1.0) && ((_233.w + _307) < 0.5))
        {
            _359 = true;
            break;
        }
        if ((_306 + 1.0) < _304.x)
        {
            _359 = true;
            break;
        }
        _359 = false;
        break;
    }
    if (_359)
    {
        discard_state = true;
    }
    bool _384 = cbMtdParam._m0[1u].z != 0.0;
    float _385 = _384 ? _300 : 0.0;
    SV_Target.x = ((_131 * 0.5) * _196) + 0.500488758087158203125;
    SV_Target.y = ((_132 * 0.5) * _196) + 0.500488758087158203125;
    SV_Target.z = ((_133 * 0.5) * _196) + 0.500488758087158203125;
    SV_Target.w = _385;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _384 ? _300 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _300;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _385;
    SV_Target_4.x = _294 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _295 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _296 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _385;
    discard_exit();
}


