#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _622;
float _623;
float _624;
float _625;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _122 = texture(sampler2D(C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _125 = _122.x;
    float _126 = _122.y;
    float _127 = _122.z;
    vec4 _139 = texture(sampler2D(C_EyeLight_A_Emissive_EXAM_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _151 = (cbMatDynParam._m0[17u].x * (_139.x - _125)) + _125;
    float _152 = (cbMatDynParam._m0[17u].x * (_139.y - _126)) + _126;
    float _153 = (cbMatDynParam._m0[17u].x * (_139.z - _127)) + _127;
    float _161 = (((-0.0500000007450580596923828125) - _151) * cbMatDynParam._m0[17u].y) + _151;
    float _162 = (((-0.0500000007450580596923828125) - _152) * cbMatDynParam._m0[17u].y) + _152;
    float _163 = (((-0.0500000007450580596923828125) - _153) * cbMatDynParam._m0[17u].y) + _153;
    float _165 = _161 * cbMatDynParam._m0[17u].z;
    float _166 = _162 * cbMatDynParam._m0[17u].z;
    float _167 = _163 * cbMatDynParam._m0[17u].z;
    float _187 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _230 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _240 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _230);
    float _241 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _230);
    float _242 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _230);
    vec4 _247 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _249 = _247.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _351 = sqrt(((_240 * _240) + (_241 * _241)) + (_242 * _242));
        float _358 = (cbMatDynParam._m0[5u].x * _351) + cbMatDynParam._m0[5u].y;
        float _649 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        float _359 = isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0));
        float _363 = (cbMatDynParam._m0[5u].z * _351) + cbMatDynParam._m0[5u].w;
        float _660 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0))) - _359)) + _359) < ((_249 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _275 = uint(roundEven(NORMAL.w)) * 13u;
    uint _277 = _275 + 9u;
    uint _278 = _277 + uint(cbMatDynParam._m0[0u].w);
    float _288 = cbInstanceData._m0[_278].x * (_165 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0)))));
    float _290 = cbInstanceData._m0[_278].y * (_166 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _162 : (isnan(_162) ? 0.0 : max(_162, 0.0)))));
    float _292 = cbInstanceData._m0[_278].z * (_167 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _163 : (isnan(_163) ? 0.0 : max(_163, 0.0)))));
    float _293 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _294 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _295 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _301 = cbMtdParam._m0[2u].x * (_165 * cbInstanceData._m0[_278].x);
    float _302 = cbMtdParam._m0[2u].y * (_166 * cbInstanceData._m0[_278].y);
    float _303 = cbMtdParam._m0[2u].z * (_167 * cbInstanceData._m0[_278].z);
    float _686 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _306 = isnan(1.0) ? _686 : (isnan(_686) ? 1.0 : min(_686, 1.0));
    uint _307 = _275 + 6u;
    float _316 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _317 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _332 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_316, _317, (log2((isnan(cbSceneParam._m0[77u].w) ? _187 : (isnan(_187) ? cbSceneParam._m0[77u].w : min(_187, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _334 = _332.x;
    float _335 = _332.y;
    float _336 = _332.z;
    float _337 = _332.w;
    float _419;
    float _421;
    float _423;
    float _425;
    if (_187 > cbSceneParam._m0[78u].w)
    {
        float _380 = isnan(_187) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _187 : min(cbSceneParam._m0[80u].w, _187));
        float _381 = _380 / _187;
        float _392 = _381 * _240;
        float _393 = _241 * _381;
        float _394 = (-0.0) - _393;
        float _396 = _381 * _242;
        float _398 = (cbSceneParam._m0[77u].w * _394) / _380;
        float _399 = _398 + cbSceneParam._m0[79u].w;
        float _400 = cbSceneParam._m0[79u].w - _393;
        float _406 = sqrt(((_392 * _392) + (_393 * _393)) + (_396 * _396));
        float _409 = (1.0 - (cbSceneParam._m0[77u].w / _380)) * _406;
        float _415 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _417 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _550;
        if (abs((_394 - _398) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _550 = ((((_399 > 0.0) ? exp2(_415 * _399) : (2.0 - exp2(_417 * _399))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _409;
        }
        else
        {
            float _505 = 1.0 / cbSceneParam._m0[80u].x;
            float _506 = isnan(_400) ? _399 : (isnan(_399) ? _400 : max(_399, _400));
            float _507 = isnan(_400) ? _399 : (isnan(_399) ? _400 : min(_399, _400));
            float _516 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : min(_506, 0.0));
            float _517 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : min(_507, 0.0));
            _550 = ((abs(_406 / _394) * cbSceneParam._m0[80u].y) * ((((_516 - _517) * 2.0) - ((exp2(_415 * (isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0)))) - exp2(_415 * (isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0))))) * _505)) - ((exp2(_417 * _516) - exp2(_417 * _517)) * _505))) + (_409 * cbSceneParam._m0[80u].z);
        }
        vec4 _552 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_316, _317, 1.0), 0.0);
        float _561 = exp2((_550 * (-1.44269502162933349609375)) * (1.0 - _552.w));
        float _562 = log2(_561);
        float _578 = log2(_337);
        _419 = (exp2(_578 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].x)) * _552.x) / cbSceneParam._m0[78u].x)) + _334;
        _421 = (exp2(_578 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].y)) * _552.y) / cbSceneParam._m0[78u].y)) + _335;
        _423 = (exp2(_578 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_562 * cbSceneParam._m0[78u].z)) * _552.z) / cbSceneParam._m0[78u].z)) + _336;
        _425 = _561 * _337;
    }
    else
    {
        _419 = _334;
        _421 = _335;
        _423 = _336;
        _425 = _337;
    }
    bool _588;
    vec4 _435;
    vec4 _459;
    float _461;
    float _466;
    float _467;
    float _468;
    float _471;
    float _474;
    float _477;
    float _478;
    bool _489;
    for (;;)
    {
        _435 = cbMatDynParam._m0[0u];
        float _437 = roundEven(_435.y);
        bool _438 = _437 == 3.0;
        float _440 = log2(_425);
        float _444 = exp2(_440 * cbSceneParam._m0[78u].x);
        float _445 = exp2(_440 * cbSceneParam._m0[78u].y);
        float _446 = exp2(_440 * cbSceneParam._m0[78u].z);
        float _447 = _444 * _293;
        float _448 = _445 * _294;
        float _449 = _446 * _295;
        float _456 = _249 + (-0.5);
        _459 = cbMtdParam._m0[1u];
        _461 = _459.y * _456;
        float _465 = (_437 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _466 = _465 * (_438 ? _447 : (_447 + (cbSceneParam._m0[72u].w * _419)));
        _467 = _465 * (_438 ? _448 : (_448 + (cbSceneParam._m0[72u].w * _421)));
        _468 = _465 * (_438 ? _449 : (_449 + (cbSceneParam._m0[72u].w * _423)));
        _471 = ((_301 * _306) * _444) * _465;
        _474 = ((_302 * _306) * _445) * _465;
        _477 = ((_303 * _306) * _446) * _465;
        _478 = _456 * 0.999000012874603271484375;
        _489 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_489)
        {
            if ((cbInstanceData._m0[_275 + 7u].x + _478) < 0.5)
            {
                _588 = true;
                break;
            }
        }
        uint _542 = _277 + uint(_435.w);
        if ((cbInstanceData._m0[_542].w < 1.0) && ((cbInstanceData._m0[_542].w + _478) < 0.5))
        {
            _588 = true;
            break;
        }
        if ((_461 + 1.0) < _459.x)
        {
            _588 = true;
            break;
        }
        _588 = false;
        break;
    }
    float _593;
    if (_588)
    {
        discard_state = true;
        _593 = 0.0;
    }
    else
    {
        _593 = cbInstanceData._m0[_307].w;
    }
    SV_Target.x = _466;
    SV_Target.y = _467;
    SV_Target.z = _468;
    SV_Target.w = _593;
    SV_Target_1.x = _471;
    SV_Target_1.y = _474;
    SV_Target_1.z = _477;
    SV_Target_1.w = cbInstanceData._m0[_307].w;
    discard_exit();
}


