#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _712;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    vec4 _196 = texture(sampler2D(M_A_M0_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _203 = _196.x * cbMtdParam._m0[9u].x;
    float _204 = _196.y * cbMtdParam._m0[9u].y;
    float _205 = _196.z * cbMtdParam._m0[9u].z;
    float _206 = _196.w * TEXCOORD_1.z;
    float _210 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _211 = _210 * _174;
    float _212 = _210 * _175;
    float _213 = _210 * _176;
    float _3108 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _215 = isnan(1.0) ? _3108 : (isnan(_3108) ? 1.0 : min(_3108, 1.0));
    float _3119 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _3130 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _3141 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _234 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _276 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _286 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _276);
    float _287 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _276);
    float _288 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _276);
    float _292 = inversesqrt(dot(vec3(_286, _287, _288), vec3(_286, _287, _288)));
    float _293 = _286 * _292;
    float _294 = _287 * _292;
    float _295 = _288 * _292;
    float _301 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _302 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _323 = fma(_213, cbSceneParam._m0[5u].z, fma(_212, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _211));
    float _326 = fma(_213, cbSceneParam._m0[6u].z, fma(_212, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _211));
    float _329 = fma(_213, cbSceneParam._m0[7u].z, fma(_212, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _211));
    uint _342 = uint(roundEven(NORMAL.w)) * 13u;
    uint _345 = (_342 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _351 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3119 : (isnan(_3119) ? 1.0 : min(_3119, 1.0)))) * cbInstanceData._m0[_345].x;
    float _352 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0)))) * cbInstanceData._m0[_345].y;
    float _353 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0)))) * cbInstanceData._m0[_345].z;
    float _3152 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _354 = isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0));
    float _3163 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _355 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
    float _3174 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _356 = isnan(1.0) ? _3174 : (isnan(_3174) ? 1.0 : min(_3174, 1.0));
    vec4 _365 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _301, cbSceneParam._m0[86u].y * _302));
    float _368 = _365.x * TEXCOORD_1.w;
    float _369 = dot(vec3(_211, _212, _213), vec3(_293, _294, _295));
    float _372 = _369 * 2.0;
    float _377 = (_372 * _211) - _293;
    float _378 = (_372 * _212) - _294;
    float _379 = (_372 * _213) - _295;
    float _401 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _405 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _409 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _711;
    float _713;
    float _714;
    float _715;
    float _716;
    float _717;
    float _718;
    float _719;
    float _720;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _436 = fma(_409, cbModelParam._m0[26u].z, fma(_405, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _401));
        float _440 = fma(_409, cbModelParam._m0[27u].z, fma(_405, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _401));
        float _444 = fma(_409, cbModelParam._m0[28u].z, fma(_405, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _401));
        float _469 = _401 + _211;
        float _470 = _405 + _212;
        float _471 = _409 + _213;
        float _481 = fma(_471, cbModelParam._m0[26u].z, fma(_470, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _469)) - _436;
        float _482 = fma(_471, cbModelParam._m0[27u].z, fma(_470, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _469)) - _440;
        float _483 = fma(_471, cbModelParam._m0[28u].z, fma(_470, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _469)) - _444;
        float _487 = inversesqrt(dot(vec3(_481, _482, _483), vec3(_481, _482, _483)));
        float _500 = ((_487 * _481) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_436 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _501 = ((_487 * _482) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_440 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _502 = ((_487 * _483) / cbModelParam._m0[34u].z) + ((((((_444 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _505 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_500, _501, _502), 0.0);
        vec4 _512 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_500, _501, _502), 0.0);
        vec4 _519 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_500, _501, _502), 0.0);
        vec4 _526 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_500, _501, _502), 0.0);
        float _539 = exp2((_505.w + (-0.5)) * 20.0) * 2.0;
        float _540 = _539 * (_505.x + (-0.5));
        float _541 = _539 * (_505.y + (-0.5));
        float _542 = _539 * (_505.z + (-0.5));
        float _549 = exp2((_512.w + (-0.5)) * 20.0) * 2.0;
        float _550 = _549 * (_512.x + (-0.5));
        float _551 = _549 * (_512.y + (-0.5));
        float _552 = _549 * (_512.z + (-0.5));
        float _559 = exp2((_519.w + (-0.5)) * 20.0) * 2.0;
        float _560 = _559 * (_519.x + (-0.5));
        float _561 = _559 * (_519.y + (-0.5));
        float _562 = _559 * (_519.z + (-0.5));
        float _569 = exp2((_526.w + (-0.5)) * 20.0) * 2.0;
        float _570 = _569 * (_526.x + (-0.5));
        float _571 = _569 * (_526.y + (-0.5));
        float _572 = _569 * (_526.z + (-0.5));
        float _573 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
        float _574 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
        float _575 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
        float _576 = _540 * 0.5;
        float _577 = _550 * 0.5;
        float _578 = _560 * 0.5;
        float _579 = dot(vec3(_576, _577, _578), vec3(_576, _577, _578));
        float _584 = (_579 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_579);
        float _593 = (dot(vec3(_211, _212, _213), vec3(_584 * _576, _584 * _577, _584 * _578)) + 1.0) * 0.5;
        float _3200 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
        float _603 = sqrt(((_577 * _577) + (_576 * _576)) + (_578 * _578)) / (_573 + 9.9999997473787516355514526367188e-06);
        float _3211 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
        float _604 = isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0));
        float _605 = _604 * 2.0;
        float _609 = (1.0 - _604) / (_604 + 1.0);
        float _3222 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
        float _610 = isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0));
        float _619 = ((((1.0 - _610) * (_605 + 2.0)) * exp2(log2(isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0))) * (_605 + 1.0))) + _610) * _573;
        float _620 = _541 * 0.5;
        float _621 = _551 * 0.5;
        float _622 = _561 * 0.5;
        float _623 = dot(vec3(_620, _621, _622), vec3(_620, _621, _622));
        float _628 = (_623 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_623);
        float _636 = (dot(vec3(_211, _212, _213), vec3(_628 * _620, _628 * _621, _628 * _622)) + 1.0) * 0.5;
        float _3233 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
        float _645 = sqrt(((_621 * _621) + (_620 * _620)) + (_622 * _622)) / (_574 + 9.9999997473787516355514526367188e-06);
        float _3244 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
        float _646 = isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0));
        float _647 = _646 * 2.0;
        float _651 = (1.0 - _646) / (_646 + 1.0);
        float _3255 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        float _652 = isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0));
        float _661 = ((((1.0 - _652) * (_647 + 2.0)) * exp2(log2(isnan(1.0) ? _3233 : (isnan(_3233) ? 1.0 : min(_3233, 1.0))) * (_647 + 1.0))) + _652) * _574;
        float _662 = _542 * 0.5;
        float _663 = _552 * 0.5;
        float _664 = _562 * 0.5;
        float _665 = dot(vec3(_662, _663, _664), vec3(_662, _663, _664));
        float _670 = (_665 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_665);
        float _678 = (dot(vec3(_211, _212, _213), vec3(_670 * _662, _670 * _663, _670 * _664)) + 1.0) * 0.5;
        float _3266 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
        float _687 = sqrt(((_663 * _663) + (_662 * _662)) + (_664 * _664)) / (_575 + 9.9999997473787516355514526367188e-06);
        float _3277 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
        float _688 = isnan(1.0) ? _3277 : (isnan(_3277) ? 1.0 : min(_3277, 1.0));
        float _689 = _688 * 2.0;
        float _693 = (1.0 - _688) / (_688 + 1.0);
        float _3288 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
        float _694 = isnan(1.0) ? _3288 : (isnan(_3288) ? 1.0 : min(_3288, 1.0));
        float _703 = ((((1.0 - _694) * (_689 + 2.0)) * exp2(log2(isnan(1.0) ? _3266 : (isnan(_3266) ? 1.0 : min(_3266, 1.0))) * (_689 + 1.0))) + _694) * _575;
        _711 = _542;
        _713 = _541;
        _714 = _540;
        _715 = _552;
        _716 = _551;
        _717 = _550;
        _718 = _562;
        _719 = _561;
        _720 = _560;
        _721 = _575;
        _722 = _574;
        _723 = _573;
        _724 = cbModelParam._m0[36u].z * (isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0)));
        _725 = cbModelParam._m0[36u].z * (isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0)));
        _726 = cbModelParam._m0[36u].z * (isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0)));
    }
    else
    {
        _711 = _712;
        _713 = _712;
        _714 = _712;
        _715 = _712;
        _716 = _712;
        _717 = _712;
        _718 = _712;
        _719 = _712;
        _720 = _712;
        _721 = _712;
        _722 = _712;
        _723 = _712;
        _724 = 0.0;
        _725 = 0.0;
        _726 = 0.0;
    }
    float _1021;
    float _1022;
    float _1023;
    float _1024;
    float _1025;
    float _1026;
    float _1027;
    float _1028;
    float _1029;
    float _1030;
    float _1031;
    float _1032;
    float _1033;
    float _1034;
    float _1035;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _752 = fma(_409, cbModelParam._m0[30u].z, fma(_405, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _401));
        float _756 = fma(_409, cbModelParam._m0[31u].z, fma(_405, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _401));
        float _760 = fma(_409, cbModelParam._m0[32u].z, fma(_405, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _401));
        float _783 = _401 + _211;
        float _784 = _405 + _212;
        float _785 = _409 + _213;
        float _795 = fma(_785, cbModelParam._m0[30u].z, fma(_784, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _783)) - _752;
        float _796 = fma(_785, cbModelParam._m0[31u].z, fma(_784, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _783)) - _756;
        float _797 = fma(_785, cbModelParam._m0[32u].z, fma(_784, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _783)) - _760;
        float _801 = inversesqrt(dot(vec3(_795, _796, _797), vec3(_795, _796, _797)));
        float _814 = ((_801 * _795) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_752 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _815 = ((_801 * _796) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_756 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _816 = ((_801 * _797) / cbModelParam._m0[35u].z) + ((((((_760 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _818 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_814, _815, _816), 0.0);
        vec4 _825 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_814, _815, _816), 0.0);
        vec4 _832 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_814, _815, _816), 0.0);
        vec4 _839 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_814, _815, _816), 0.0);
        float _851 = exp2((_818.w + (-0.5)) * 20.0) * 2.0;
        float _852 = _851 * (_818.x + (-0.5));
        float _853 = _851 * (_818.y + (-0.5));
        float _854 = _851 * (_818.z + (-0.5));
        float _861 = exp2((_825.w + (-0.5)) * 20.0) * 2.0;
        float _862 = _861 * (_825.x + (-0.5));
        float _863 = _861 * (_825.y + (-0.5));
        float _864 = _861 * (_825.z + (-0.5));
        float _871 = exp2((_832.w + (-0.5)) * 20.0) * 2.0;
        float _872 = _871 * (_832.x + (-0.5));
        float _873 = _871 * (_832.y + (-0.5));
        float _874 = _871 * (_832.z + (-0.5));
        float _881 = exp2((_839.w + (-0.5)) * 20.0) * 2.0;
        float _882 = _881 * (_839.x + (-0.5));
        float _883 = _881 * (_839.y + (-0.5));
        float _884 = _881 * (_839.z + (-0.5));
        float _885 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _886 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
        float _887 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _888 = _852 * 0.5;
        float _889 = _862 * 0.5;
        float _890 = _872 * 0.5;
        float _891 = dot(vec3(_888, _889, _890), vec3(_888, _889, _890));
        float _896 = (_891 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_891);
        float _904 = (dot(vec3(_211, _212, _213), vec3(_896 * _888, _896 * _889, _896 * _890)) + 1.0) * 0.5;
        float _3329 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
        float _913 = sqrt(((_889 * _889) + (_888 * _888)) + (_890 * _890)) / (_885 + 9.9999997473787516355514526367188e-06);
        float _3340 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
        float _914 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
        float _915 = _914 * 2.0;
        float _919 = (1.0 - _914) / (_914 + 1.0);
        float _3351 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        float _920 = isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0));
        float _929 = ((((1.0 - _920) * (_915 + 2.0)) * exp2(log2(isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0))) * (_915 + 1.0))) + _920) * _885;
        float _930 = _853 * 0.5;
        float _931 = _863 * 0.5;
        float _932 = _873 * 0.5;
        float _933 = dot(vec3(_930, _931, _932), vec3(_930, _931, _932));
        float _938 = (_933 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_933);
        float _946 = (dot(vec3(_211, _212, _213), vec3(_938 * _930, _938 * _931, _938 * _932)) + 1.0) * 0.5;
        float _3362 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _955 = sqrt(((_931 * _931) + (_930 * _930)) + (_932 * _932)) / (_886 + 9.9999997473787516355514526367188e-06);
        float _3373 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _956 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
        float _957 = _956 * 2.0;
        float _961 = (1.0 - _956) / (_956 + 1.0);
        float _3384 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
        float _962 = isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0));
        float _971 = ((((1.0 - _962) * (_957 + 2.0)) * exp2(log2(isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0))) * (_957 + 1.0))) + _962) * _886;
        float _972 = _854 * 0.5;
        float _973 = _864 * 0.5;
        float _974 = _874 * 0.5;
        float _975 = dot(vec3(_972, _973, _974), vec3(_972, _973, _974));
        float _980 = (_975 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_975);
        float _988 = (dot(vec3(_211, _212, _213), vec3(_980 * _972, _980 * _973, _980 * _974)) + 1.0) * 0.5;
        float _3395 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _997 = sqrt(((_973 * _973) + (_972 * _972)) + (_974 * _974)) / (_887 + 9.9999997473787516355514526367188e-06);
        float _3406 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
        float _998 = isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0));
        float _999 = _998 * 2.0;
        float _1003 = (1.0 - _998) / (_998 + 1.0);
        float _3417 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
        float _1004 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
        float _1013 = ((((1.0 - _1004) * (_999 + 2.0)) * exp2(log2(isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0))) * (_999 + 1.0))) + _1004) * _887;
        _1021 = _854;
        _1022 = _853;
        _1023 = _852;
        _1024 = _864;
        _1025 = _863;
        _1026 = _862;
        _1027 = _874;
        _1028 = _873;
        _1029 = _872;
        _1030 = _887;
        _1031 = _886;
        _1032 = _885;
        _1033 = cbModelParam._m0[36u].w * (isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0)));
        _1034 = cbModelParam._m0[36u].w * (isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0)));
        _1035 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0)));
    }
    else
    {
        _1021 = _712;
        _1022 = _712;
        _1023 = _712;
        _1024 = _712;
        _1025 = _712;
        _1026 = _712;
        _1027 = _712;
        _1028 = _712;
        _1029 = _712;
        _1030 = _712;
        _1031 = _712;
        _1032 = _712;
        _1033 = 0.0;
        _1034 = 0.0;
        _1035 = 0.0;
    }
    float _1045 = (cbModelParam._m0[1u].x * (_1033 - _724)) + _724;
    float _1046 = (cbModelParam._m0[1u].x * (_1034 - _725)) + _725;
    float _1047 = (cbModelParam._m0[1u].x * (_1035 - _726)) + _726;
    float _1068 = fma(_1047, cbSceneParam._m0[89u].z, fma(_1046, cbSceneParam._m0[89u].y, _1045 * cbSceneParam._m0[89u].x));
    float _1071 = fma(_1047, cbSceneParam._m0[90u].z, fma(_1046, cbSceneParam._m0[90u].y, _1045 * cbSceneParam._m0[90u].x));
    float _1074 = fma(_1047, cbSceneParam._m0[91u].z, fma(_1046, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1045));
    float _1089 = _377 * 0.5;
    float _1090 = _378 * 0.5;
    float _1091 = _379 * 0.5;
    float _1092 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_1023, _1026, _1029, _1032));
    float _1095 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_1022, _1025, _1028, _1031));
    float _1098 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_1021, _1024, _1027, _1030));
    float _1132;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1105 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_711, _715, _718, _721));
        float _1109 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_713, _716, _719, _722));
        float _1113 = dot(vec4(_1089, _1090, _1091, 1.0), vec4(_714, _717, _720, _723));
        float _1120 = dot(vec4(cbModelParam._m0[39u]), vec4(_1089, _1090, _1091, 1.0));
        _1132 = dot(vec3(isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0)), isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0)), isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1120) ? 0.0 : (isnan(0.0) ? _1120 : max(0.0, _1120))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1132 = 1.0;
    }
    float _1143;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1134 = dot(vec4(cbModelParam._m0[40u]), vec4(_1089, _1090, _1091, 1.0));
        _1143 = dot(vec3(isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0)), isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0)), isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1134) ? 0.0 : (isnan(0.0) ? _1134 : max(0.0, _1134))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1143 = 1.0;
    }
    float _1147 = (_1143 * cbModelParam._m0[1u].x) + (_1132 * (1.0 - cbModelParam._m0[1u].x));
    float _1156 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1238;
    float _1240;
    float _1242;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1205 = fma(_409, cbModelParam._m0[13u].z, fma(_405, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _401)) + cbModelParam._m0[13u].w;
        float _1209 = fma(_409, cbModelParam._m0[14u].z, fma(_405, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _401)) + cbModelParam._m0[14u].w;
        float _1213 = fma(_409, cbModelParam._m0[15u].z, fma(_405, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _401)) + cbModelParam._m0[15u].w;
        float _1216 = fma(_379, cbModelParam._m0[13u].z, fma(_378, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _377));
        float _1219 = fma(_379, cbModelParam._m0[14u].z, fma(_378, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _377));
        float _1222 = fma(_379, cbModelParam._m0[15u].z, fma(_378, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _377));
        float _1248;
        if (_1216 > 0.0)
        {
            _1248 = abs((1.0 - _1205) / _1216);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1216 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1205 + 1.0) / _1216);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1248 = frontier_phi_16_14_ladder;
        }
        float _1423;
        if (_1219 > 0.0)
        {
            _1423 = abs((1.0 - _1209) / _1219);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1219 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1209 + 1.0) / _1219);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1423 = frontier_phi_25_21_ladder;
        }
        float _1720;
        if (_1222 > 0.0)
        {
            _1720 = abs((1.0 - _1213) / _1222);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1222 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1213 + 1.0) / _1222);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1720 = frontier_phi_37_32_ladder;
        }
        float _1722 = isnan(_1423) ? _1248 : (isnan(_1248) ? _1423 : min(_1248, _1423));
        float _1723 = isnan(_1720) ? _1722 : (isnan(_1722) ? _1720 : min(_1722, _1720));
        float _1727 = (_1723 * _1216) + _1205;
        float _1728 = (_1723 * _1219) + _1209;
        float _1729 = (_1723 * _1222) + _1213;
        float _1730 = _1723 * 9.9999997473787516355514526367188e-05;
        float _1732 = (-1.0) - _1730;
        float _1734 = _1730 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1729 > _1734) || ((_1729 < _1732) || ((_1728 > _1734) || ((_1728 < _1732) || ((_1727 < _1732) || (_1727 > _1734))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1874 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1729, cbModelParam._m0[9u].z, fma(_1728, cbModelParam._m0[9u].y, _1727 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1729, cbModelParam._m0[10u].z, fma(_1728, cbModelParam._m0[10u].y, _1727 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1729, cbModelParam._m0[11u].z, fma(_1728, cbModelParam._m0[11u].y, _1727 * cbModelParam._m0[11u].x))), _1156);
            frontier_phi_15_37_ladder = _1874.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1874.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1874.z * cbModelParam._m0[1u].y;
        }
        _1238 = frontier_phi_15_37_ladder_1;
        _1240 = frontier_phi_15_37_ladder;
        _1242 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1226 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_377, _378, _379), _1156);
        _1238 = _1226.x * cbModelParam._m0[1u].y;
        _1240 = _1226.y * cbModelParam._m0[1u].y;
        _1242 = _1226.z * cbModelParam._m0[1u].y;
    }
    float _1245 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1338;
    float _1340;
    float _1342;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1302 = fma(_409, cbModelParam._m0[21u].z, fma(_405, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _401)) + cbModelParam._m0[21u].w;
        float _1306 = fma(_409, cbModelParam._m0[22u].z, fma(_405, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _401)) + cbModelParam._m0[22u].w;
        float _1310 = fma(_409, cbModelParam._m0[23u].z, fma(_405, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _401)) + cbModelParam._m0[23u].w;
        float _1313 = fma(_379, cbModelParam._m0[21u].z, fma(_378, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _377));
        float _1316 = fma(_379, cbModelParam._m0[22u].z, fma(_378, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _377));
        float _1319 = fma(_379, cbModelParam._m0[23u].z, fma(_378, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _377));
        float _1428;
        if (_1313 > 0.0)
        {
            _1428 = abs((1.0 - _1302) / _1313);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1313 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1302 + 1.0) / _1313);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1428 = frontier_phi_27_23_ladder;
        }
        float _1747;
        if (_1316 > 0.0)
        {
            _1747 = abs((1.0 - _1306) / _1316);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1316 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1306 + 1.0) / _1316);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1747 = frontier_phi_39_34_ladder;
        }
        float _2020;
        if (_1319 > 0.0)
        {
            _2020 = abs((1.0 - _1310) / _1319);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1319 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1310 + 1.0) / _1319);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2020 = frontier_phi_49_46_ladder;
        }
        float _2022 = isnan(_1747) ? _1428 : (isnan(_1428) ? _1747 : min(_1428, _1747));
        float _2023 = isnan(_2020) ? _2022 : (isnan(_2022) ? _2020 : min(_2022, _2020));
        float _2027 = (_2023 * _1313) + _1302;
        float _2028 = (_2023 * _1316) + _1306;
        float _2029 = (_2023 * _1319) + _1310;
        float _2030 = _2023 * 9.9999997473787516355514526367188e-05;
        float _2031 = (-1.0) - _2030;
        float _2033 = _2030 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2029 > _2033) || ((_2029 < _2031) || ((_2028 > _2033) || ((_2028 < _2031) || ((_2027 < _2031) || (_2027 > _2033))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2120 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2029, cbModelParam._m0[17u].z, fma(_2028, cbModelParam._m0[17u].y, _2027 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2029, cbModelParam._m0[18u].z, fma(_2028, cbModelParam._m0[18u].y, _2027 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2029, cbModelParam._m0[19u].z, fma(_2028, cbModelParam._m0[19u].y, _2027 * cbModelParam._m0[19u].x))), _1245);
            frontier_phi_24_49_ladder = _2120.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2120.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2120.x * cbModelParam._m0[1u].z;
        }
        _1338 = frontier_phi_24_49_ladder_2;
        _1340 = frontier_phi_24_49_ladder_1;
        _1342 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1322 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_377, _378, _379), _1245);
        _1338 = _1322.x * cbModelParam._m0[1u].z;
        _1340 = _1322.y * cbModelParam._m0[1u].z;
        _1342 = _1322.z * cbModelParam._m0[1u].z;
    }
    float _1354 = _368 * 0.01200000010430812835693359375;
    float _1356 = _1354 * ((cbModelParam._m0[1u].w * (_1338 - _1238)) + _1238);
    float _1357 = _1354 * ((cbModelParam._m0[1u].w * (_1340 - _1240)) + _1240);
    float _1358 = _1354 * ((cbModelParam._m0[1u].w * (_1342 - _1242)) + _1242);
    float _1361 = fma(_1358, cbSceneParam._m0[89u].z, fma(_1357, cbSceneParam._m0[89u].y, _1356 * cbSceneParam._m0[89u].x));
    float _1364 = fma(_1358, cbSceneParam._m0[90u].z, fma(_1357, cbSceneParam._m0[90u].y, _1356 * cbSceneParam._m0[90u].x));
    float _1367 = fma(_1358, cbSceneParam._m0[91u].z, fma(_1357, cbSceneParam._m0[91u].y, _1356 * cbSceneParam._m0[91u].x));
    float _1402 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1406 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1410 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1414 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1415 = _1402 / _1414;
    float _1416 = _1406 / _1414;
    float _1417 = _1410 / _1414;
    float _1564;
    float _1565;
    float _1566;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1444 = ((uint(_1417 > cbSceneParam._m0[59u].y) + uint(_1417 > cbSceneParam._m0[59u].x)) + uint(_1417 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1445 = _1444 + 43u;
        uint _1453 = _1444 + 44u;
        uint _1461 = _1444 + 45u;
        uint _1469 = _1444 + 46u;
        float _1480 = fma(_1414, cbSceneParam._m0[_1445].w, fma(_1410, cbSceneParam._m0[_1445].z, fma(_1406, cbSceneParam._m0[_1445].y, _1402 * cbSceneParam._m0[_1445].x)));
        float _1484 = fma(_1414, cbSceneParam._m0[_1453].w, fma(_1410, cbSceneParam._m0[_1453].z, fma(_1406, cbSceneParam._m0[_1453].y, _1402 * cbSceneParam._m0[_1453].x)));
        float _1492 = fma(_1414, cbSceneParam._m0[_1469].w, fma(_1410, cbSceneParam._m0[_1469].z, fma(_1406, cbSceneParam._m0[_1469].y, _1402 * cbSceneParam._m0[_1469].x)));
        float _1497 = cbSceneParam._m0[33u].z * _1492;
        float _1499 = cbSceneParam._m0[33u].w * _1492;
        float _1502 = fma(_1414, cbSceneParam._m0[_1461].w, fma(_1410, cbSceneParam._m0[_1461].z, fma(_1406, cbSceneParam._m0[_1461].y, _1402 * cbSceneParam._m0[_1461].x))) / _1492;
        float _1550 = (cbSceneParam._m0[33u].x - sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417))) * cbSceneParam._m0[33u].y;
        float _3543 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1557 = (isnan(1.0) ? _3543 : (isnan(_3543) ? 1.0 : min(_3543, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1497 + _1480) / _1492, (_1499 + _1484) / _1492), _1502), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1499 + _1480) / _1492, (_1484 - _1497) / _1492), _1502), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1480 - _1497) / _1492, (_1484 - _1499) / _1492), _1502), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1480 - _1499) / _1492, (_1497 + _1484) / _1492), _1502), 0.0)).x), vec4(0.25)));
        _1564 = 1.0 - (_1557 * cbSceneParam._m0[34u].x);
        _1565 = 1.0 - (_1557 * cbSceneParam._m0[34u].y);
        _1566 = 1.0 - (_1557 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1564 = 1.0;
        _1565 = 1.0;
        _1566 = 1.0;
    }
    float _1630;
    float _1632;
    float _1634;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1618 = fma(_1414, cbSceneParam._m0[63u].w, fma(_1410, cbSceneParam._m0[63u].z, fma(_1406, cbSceneParam._m0[63u].y, _1402 * cbSceneParam._m0[63u].x)));
        float _1619 = fma(_1414, cbSceneParam._m0[60u].w, fma(_1410, cbSceneParam._m0[60u].z, fma(_1406, cbSceneParam._m0[60u].y, _1402 * cbSceneParam._m0[60u].x))) / _1618;
        float _1620 = fma(_1414, cbSceneParam._m0[61u].w, fma(_1410, cbSceneParam._m0[61u].z, fma(_1406, cbSceneParam._m0[61u].y, _1402 * cbSceneParam._m0[61u].x))) / _1618;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1619 >= cbSceneParam._m0[64u].x) && (_1620 >= cbSceneParam._m0[64u].y)) && (_1619 <= cbSceneParam._m0[64u].z)) && (_1620 <= cbSceneParam._m0[64u].w))
        {
            float _1760 = fma(_1414, cbSceneParam._m0[62u].w, fma(_1410, cbSceneParam._m0[62u].z, fma(_1406, cbSceneParam._m0[62u].y, _1402 * cbSceneParam._m0[62u].x))) / _1618;
            float _1764 = isnan(cbSceneParam._m0[41u].w) ? _1760 : (isnan(_1760) ? cbSceneParam._m0[41u].w : max(_1760, cbSceneParam._m0[41u].w));
            float _1807 = (cbSceneParam._m0[33u].x - sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417))) * cbSceneParam._m0[33u].y;
            float _3559 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
            float _1814 = (isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1619, cbSceneParam._m0[33u].w + _1620), _1764), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1619, _1620 - cbSceneParam._m0[33u].z), _1764), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1619 - cbSceneParam._m0[33u].z, _1620 - cbSceneParam._m0[33u].w), _1764), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1619 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1620), _1764), 0.0)).x), vec4(0.25)));
            float _1818 = 1.0 - (_1814 * cbSceneParam._m0[34u].x);
            float _1819 = 1.0 - (_1814 * cbSceneParam._m0[34u].y);
            float _1820 = 1.0 - (_1814 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1819) ? _1565 : (isnan(_1565) ? _1819 : min(_1565, _1819));
            frontier_phi_36_35_ladder_1 = isnan(_1820) ? _1566 : (isnan(_1566) ? _1820 : min(_1566, _1820));
            frontier_phi_36_35_ladder_2 = isnan(_1818) ? _1564 : (isnan(_1564) ? _1818 : min(_1564, _1818));
        }
        else
        {
            frontier_phi_36_35_ladder = _1565;
            frontier_phi_36_35_ladder_1 = _1566;
            frontier_phi_36_35_ladder_2 = _1564;
        }
        _1630 = frontier_phi_36_35_ladder_2;
        _1632 = frontier_phi_36_35_ladder;
        _1634 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1630 = _1564;
        _1632 = _1565;
        _1634 = _1566;
    }
    uvec4 _1639 = floatBitsToUint(cbInstanceData._m0[_342 + 5u]);
    uint _1641 = _1639.x * 14u;
    uint _1642 = _1641 + 13u;
    float _1649 = _368 + (-1.0);
    float _1655 = (cbLight._m0[_1642].x * _1649) + 1.0;
    float _1656 = (cbLight._m0[_1642].y * _1649) + 1.0;
    float _1657 = (cbLight._m0[_1642].z * _1649) + 1.0;
    float _1658 = (cbLight._m0[_1642].w * _1649) + 1.0;
    uint _1659 = _1641 + 5u;
    float _1665 = isnan(1.0) ? _1656 : (isnan(_1656) ? 1.0 : min(_1656, 1.0));
    uint _1669 = _1641 + 4u;
    float _1679 = isnan(1.0) ? _1655 : (isnan(_1655) ? 1.0 : min(_1655, 1.0));
    uint _1683 = _1641 | 1u;
    float _1694 = dot(vec3(cbLight._m0[_1641].xyz), vec3(_211, _212, _213));
    float _1697 = dot(vec3(cbLight._m0[_1683].xyz), vec3(_211, _212, _213));
    float _3595 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
    float _3606 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
    float _1702 = (isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0))) * 0.3183098733425140380859375;
    float _1704 = (isnan(1.0) ? _3606 : (isnan(_3606) ? 1.0 : min(_3606, 1.0))) * 0.3183098733425140380859375;
    float _1711 = ((cbLight._m0[_1659].x * _1665) * _1704) + (((cbLight._m0[_1669].x * _1630) * _1679) * _1702);
    float _1712 = ((_1665 * cbLight._m0[_1659].y) * _1704) + (((cbLight._m0[_1669].y * _1632) * _1679) * _1702);
    float _1713 = ((_1665 * cbLight._m0[_1659].z) * _1704) + (((cbLight._m0[_1669].z * _1634) * _1679) * _1702);
    uvec4 _1717 = floatBitsToUint(cbLight._m0[_1641 + 12u]);
    bool _1719 = _1717.x == 0u;
    float _1821;
    float _1823;
    float _1825;
    if (_1719)
    {
        _1821 = _1711;
        _1823 = _1712;
        _1825 = _1713;
    }
    else
    {
        uint _1829 = _1641 + 6u;
        float _1845 = (dot(vec3(cbLight._m0[_1641 + 2u].xyz), vec3(_211, _212, _213)) * 0.5) + 0.5;
        float _1846 = _1845 * _1845;
        float _3617 = isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0));
        float _1847 = isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0));
        float _1848 = isnan(1.0) ? _1657 : (isnan(_1657) ? 1.0 : min(_1657, 1.0));
        _1821 = (((cbLight._m0[_1829].x * 0.3183098733425140380859375) * _1847) * _1848) + _1711;
        _1823 = (((cbLight._m0[_1829].y * 0.3183098733425140380859375) * _1847) * _1848) + _1712;
        _1825 = (((cbLight._m0[_1829].z * 0.3183098733425140380859375) * _1847) * _1848) + _1713;
    }
    bool _1828 = _1717.y == 0u;
    float _1883;
    float _1885;
    float _1887;
    if (_1828)
    {
        _1883 = _1821;
        _1885 = _1823;
        _1887 = _1825;
    }
    else
    {
        uint _1991 = _1641 + 7u;
        float _2007 = (dot(vec3(cbLight._m0[_1641 + 3u].xyz), vec3(_211, _212, _213)) * 0.5) + 0.5;
        float _2008 = _2007 * _2007;
        float _3633 = isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0));
        float _2009 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
        float _2010 = isnan(1.0) ? _1658 : (isnan(_1658) ? 1.0 : min(_1658, 1.0));
        _1883 = (((cbLight._m0[_1991].x * 0.3183098733425140380859375) * _2009) * _2010) + _1821;
        _1885 = (((cbLight._m0[_1991].y * 0.3183098733425140380859375) * _2009) * _2010) + _1823;
        _1887 = (((cbLight._m0[_1991].z * 0.3183098733425140380859375) * _2009) * _2010) + _1825;
    }
    uint _1889 = _1641 + 8u;
    float _1895 = cbLight._m0[_1641].x + _293;
    float _1896 = cbLight._m0[_1641].y + _294;
    float _1897 = cbLight._m0[_1641].z + _295;
    float _1901 = inversesqrt(dot(vec3(_1895, _1896, _1897), vec3(_1895, _1896, _1897)));
    float _1905 = dot(vec3(_211, _212, _213), vec3(cbLight._m0[_1641].xyz));
    float _3649 = isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0));
    float _1908 = isnan(1.0) ? _3649 : (isnan(_3649) ? 1.0 : min(_3649, 1.0));
    float _3660 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _1909 = isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0));
    float _1910 = dot(vec3(cbLight._m0[_1641].xyz), vec3(_1895 * _1901, _1896 * _1901, _1897 * _1901));
    float _3671 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
    float _1921 = (exp2(log2(1.0 - (isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1927 = (0.5 / ((_1908 + 9.9999999392252902907785028219223e-09) + _1909)) * _1908;
    float _3682 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
    float _1929 = (isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0))) * 0.31831014156341552734375;
    uint _1943 = _1641 + 9u;
    float _1949 = cbLight._m0[_1683].x + _293;
    float _1950 = cbLight._m0[_1683].y + _294;
    float _1951 = cbLight._m0[_1683].z + _295;
    float _1955 = inversesqrt(dot(vec3(_1949, _1950, _1951), vec3(_1949, _1950, _1951)));
    float _1959 = dot(vec3(_211, _212, _213), vec3(cbLight._m0[_1683].xyz));
    float _3693 = isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0));
    float _1962 = isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0));
    float _1963 = dot(vec3(cbLight._m0[_1683].xyz), vec3(_1949 * _1955, _1950 * _1955, _1951 * _1955));
    float _3704 = isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0));
    float _1972 = (exp2(log2(1.0 - (isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1976 = (0.5 / ((_1962 + 9.9999999392252902907785028219223e-09) + _1909)) * _1962;
    float _3715 = isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0));
    float _1978 = (isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0))) * 0.31831014156341552734375;
    float _1988 = (((_1972 * cbLight._m0[_1943].x) * _1978) * _1665) + ((((cbLight._m0[_1889].x * _1630) * _1921) * _1929) * _1679);
    float _1989 = (((_1972 * cbLight._m0[_1943].y) * _1978) * _1665) + ((((cbLight._m0[_1889].y * _1632) * _1921) * _1929) * _1679);
    float _1990 = (((_1972 * cbLight._m0[_1943].z) * _1978) * _1665) + ((((cbLight._m0[_1889].z * _1634) * _1921) * _1929) * _1679);
    float _2046;
    float _2048;
    float _2050;
    if (_1719)
    {
        _2046 = _1988;
        _2048 = _1989;
        _2050 = _1990;
    }
    else
    {
        uint _2052 = _1641 + 10u;
        uint _2058 = _1641 + 2u;
        float _2064 = cbLight._m0[_2058].x + _293;
        float _2065 = cbLight._m0[_2058].y + _294;
        float _2066 = cbLight._m0[_2058].z + _295;
        float _2070 = inversesqrt(dot(vec3(_2064, _2065, _2066), vec3(_2064, _2065, _2066)));
        float _2074 = dot(vec3(_211, _212, _213), vec3(cbLight._m0[_2058].xyz));
        float _3726 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
        float _2077 = isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0));
        float _2078 = dot(vec3(cbLight._m0[_2058].xyz), vec3(_2064 * _2070, _2065 * _2070, _2066 * _2070));
        float _3737 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2087 = (exp2(log2(1.0 - (isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2091 = (0.5 / ((_2077 + 9.9999999392252902907785028219223e-09) + _1909)) * _2077;
        float _3748 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
        float _2093 = (isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0))) * 0.31831014156341552734375;
        float _2094 = isnan(1.0) ? _1657 : (isnan(_1657) ? 1.0 : min(_1657, 1.0));
        _2046 = (((_2087 * cbLight._m0[_2052].x) * _2093) * _2094) + _1988;
        _2048 = (((_2087 * cbLight._m0[_2052].y) * _2093) * _2094) + _1989;
        _2050 = (((_2087 * cbLight._m0[_2052].z) * _2093) * _2094) + _1990;
    }
    float _2125;
    float _2127;
    float _2129;
    if (_1828)
    {
        _2125 = _2046;
        _2127 = _2048;
        _2129 = _2050;
    }
    else
    {
        uint _2136 = _1641 + 11u;
        uint _2142 = _1641 + 3u;
        float _2148 = cbLight._m0[_2142].x + _293;
        float _2149 = cbLight._m0[_2142].y + _294;
        float _2150 = cbLight._m0[_2142].z + _295;
        float _2154 = inversesqrt(dot(vec3(_2148, _2149, _2150), vec3(_2148, _2149, _2150)));
        float _2158 = dot(vec3(_211, _212, _213), vec3(cbLight._m0[_2142].xyz));
        float _3764 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
        float _2161 = isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0));
        float _2162 = dot(vec3(cbLight._m0[_2142].xyz), vec3(_2148 * _2154, _2149 * _2154, _2150 * _2154));
        float _3775 = isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0));
        float _2171 = (exp2(log2(1.0 - (isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2175 = (0.5 / ((_2161 + 9.9999999392252902907785028219223e-09) + _1909)) * _2161;
        float _3786 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
        float _2177 = (isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0))) * 0.31831014156341552734375;
        float _2178 = isnan(1.0) ? _1658 : (isnan(_1658) ? 1.0 : min(_1658, 1.0));
        _2125 = (((_2171 * cbLight._m0[_2136].x) * _2177) * _2178) + _2046;
        _2127 = (((_2171 * cbLight._m0[_2136].y) * _2177) * _2178) + _2048;
        _2129 = (((_2171 * cbLight._m0[_2136].z) * _2177) * _2178) + _2050;
    }
    float _2243;
    float _2245;
    float _2247;
    float _2249;
    float _2251;
    float _2253;
    if (_1639.y == 0u)
    {
        uvec4 _2199 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2200 = _2199.x;
        uint _2211 = uint((float(_2199.y) * floor(float(uint(cbSceneParam._m0[85u].y * _302) / _2200))) + floor(float(uint(cbSceneParam._m0[85u].x * _301) / _2200)));
        float _2221 = (log2(_1417 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2222 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
        uint _2225 = uint(isnan(14.0) ? _2222 : (isnan(_2222) ? 14.0 : min(_2222, 14.0)));
        uvec4 _2230 = texelFetch(g_lightClusterGridBuffer, int(((_2225 << 2u) + (_2211 << 6u)) >> 2u));
        uint _2231 = _2230.x;
        uint _2232 = _2199.z;
        float _2312;
        float _2314;
        float _2316;
        float _2318;
        float _2320;
        float _2322;
        if (((((1u << ((_2232 >> 4u) & 15u)) + 4294967295u) & _2231) == 0u) || ((_2232 & 240u) == 0u))
        {
            _2312 = 0.0;
            _2314 = 0.0;
            _2316 = 0.0;
            _2318 = 0.0;
            _2320 = 0.0;
            _2322 = 0.0;
        }
        else
        {
            float _2313;
            float _2315;
            float _2317;
            float _2319;
            float _2321;
            float _2323;
            float _2454 = 0.0;
            float _2455 = 0.0;
            float _2456 = 0.0;
            float _2457 = 0.0;
            float _2458 = 0.0;
            float _2459 = 0.0;
            uint _2460 = 0u;
            uint _2469;
            bool _2470;
            for (;;)
            {
                _2469 = texelFetch(g_lightClassification, int((((_2225 << 5u) + (_2211 << 9u)) + (_2460 << 2u)) >> 2u)).x;
                _2470 = _2469 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2470)
                {
                    frontier_phi_68_pred = _2459;
                    frontier_phi_68_pred_1 = _2458;
                    frontier_phi_68_pred_2 = _2457;
                    frontier_phi_68_pred_3 = _2455;
                    frontier_phi_68_pred_4 = _2454;
                    frontier_phi_68_pred_5 = _2456;
                }
                else
                {
                    float _2578;
                    float _2579;
                    float _2580;
                    float _2581;
                    float _2582;
                    float _2583;
                    uint _2584;
                    _2578 = _2454;
                    _2579 = _2455;
                    _2580 = _2456;
                    _2581 = _2457;
                    _2582 = _2458;
                    _2583 = _2459;
                    _2584 = _2469;
                    float _2510;
                    float _2511;
                    float _2512;
                    float _2513;
                    float _2514;
                    float _2515;
                    for (;;)
                    {
                        uint _2588 = uint(findLSB(_2584)) + (_2460 << 5u);
                        uint _2585 = (_2584 + 4294967295u) & _2584;
                        uint _2590 = _2588 * 48u;
                        vec4 _2604 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2590)).x, texelFetch(g_PointLightRenderingBuffer, int(_2590 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2590 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2590 + 3u)).x));
                        uint _2610 = (_2588 * 48u) + 4u;
                        vec4 _2623 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2610)).x, texelFetch(g_PointLightRenderingBuffer, int(_2610 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2610 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2610 + 3u)).x));
                        uint _2629 = (_2588 * 48u) + 8u;
                        vec3 _2640 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2629)).x, texelFetch(g_PointLightRenderingBuffer, int(_2629 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2629 + 2u)).x));
                        float _2644 = _2604.x - _1415;
                        float _2645 = _2604.y - _1416;
                        float _2646 = _2604.z - _1417;
                        float _2647 = dot(vec3(_2644, _2645, _2646), vec3(_2644, _2645, _2646));
                        float _2650 = inversesqrt(_2647);
                        float _2659 = 1.0 - (_2647 * _2604.w);
                        float _3812 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
                        float _2660 = isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0));
                        float _2661 = sqrt(_2647) * _2623.w;
                        float _2664 = 1.39999997615814208984375 / (_2661 + 1.39999997615814208984375);
                        float _2665 = _2664 * _2664;
                        float _2668 = ((1.0 - _2665) * dot(vec3(_323, _326, _329), vec3(_2650 * _2644, _2650 * _2645, _2650 * _2646))) + _2665;
                        float _2671 = _2661 * _2661;
                        float _2675 = ((isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0))) * _2660) / ((_2671 * 0.699999988079071044921875) + 1.0);
                        float _2679 = (-0.0) - _1415;
                        float _2680 = (-0.0) - _1416;
                        float _2681 = (-0.0) - _1417;
                        float _2685 = inversesqrt(dot(vec3(_2679, _2680, _2681), vec3(_2679, _2680, _2681)));
                        float _2689 = dot(vec3(_323, _326, _329), vec3(_2685 * _2679, _2685 * _2680, _2685 * _2681));
                        float _3828 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
                        float _3839 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
                        float _2693 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
                        float _2697 = (0.5 / (((isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))) + 9.9999999392252902907785028219223e-09) + _2693)) * _2693;
                        float _3850 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
                        float _2706 = (((isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0))) * 3.1415927410125732421875) / ((_2671 * 2.1991131305694580078125) + 3.141590118408203125)) * _2660;
                        _2513 = (_2675 * _2623.x) + _2581;
                        _2514 = (_2675 * _2623.y) + _2582;
                        _2515 = (_2675 * _2623.z) + _2583;
                        _2510 = (_2706 * _2640.x) + _2578;
                        _2511 = (_2706 * _2640.y) + _2579;
                        _2512 = (_2706 * _2640.z) + _2580;
                        if (_2585 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2578 = _2510;
                            _2579 = _2511;
                            _2580 = _2512;
                            _2581 = _2513;
                            _2582 = _2514;
                            _2583 = _2515;
                            _2584 = _2585;
                        }
                    }
                    frontier_phi_68_pred = _2515;
                    frontier_phi_68_pred_1 = _2514;
                    frontier_phi_68_pred_2 = _2513;
                    frontier_phi_68_pred_3 = _2511;
                    frontier_phi_68_pred_4 = _2510;
                    frontier_phi_68_pred_5 = _2512;
                }
                _2323 = frontier_phi_68_pred;
                _2321 = frontier_phi_68_pred_1;
                _2319 = frontier_phi_68_pred_2;
                _2315 = frontier_phi_68_pred_3;
                _2313 = frontier_phi_68_pred_4;
                _2317 = frontier_phi_68_pred_5;
                uint _2461 = _2460 + 1u;
                if (_2461 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2454 = _2313;
                    _2455 = _2315;
                    _2456 = _2317;
                    _2457 = _2319;
                    _2458 = _2321;
                    _2459 = _2323;
                    _2460 = _2461;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2312 = _2313;
            _2314 = _2315;
            _2316 = _2317;
            _2318 = _2319;
            _2320 = _2321;
            _2322 = _2323;
        }
        uvec4 _2326 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2327 = _2326.z;
        uint _2329 = (_2327 >> 8u) & 15u;
        float _2425;
        float _2427;
        float _2429;
        float _2431;
        float _2433;
        float _2435;
        if (((4294967295u << _2329) & _2231) == 0u)
        {
            _2425 = _2312;
            _2427 = _2314;
            _2429 = _2316;
            _2431 = _2318;
            _2433 = _2320;
            _2435 = _2322;
        }
        else
        {
            float _2450 = inversesqrt(dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2329 < ((_2327 >> 12u) & 15u))
            {
                float _2426;
                float _2428;
                float _2430;
                float _2432;
                float _2434;
                float _2436;
                float _2561 = _2312;
                float _2562 = _2314;
                float _2563 = _2316;
                float _2564 = _2318;
                float _2565 = _2320;
                float _2566 = _2322;
                uint _2567 = _2329;
                uint _2576;
                bool _2577;
                for (;;)
                {
                    _2576 = texelFetch(g_lightClassification, int((((_2225 << 5u) + (_2211 << 9u)) + (_2567 << 2u)) >> 2u)).x;
                    _2577 = _2576 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_2577)
                    {
                        frontier_phi_74_pred = _2563;
                        frontier_phi_74_pred_1 = _2562;
                        frontier_phi_74_pred_2 = _2561;
                        frontier_phi_74_pred_3 = _2566;
                        frontier_phi_74_pred_4 = _2565;
                        frontier_phi_74_pred_5 = _2564;
                    }
                    else
                    {
                        float _2711;
                        float _2712;
                        float _2713;
                        float _2714;
                        float _2715;
                        float _2716;
                        float _2963;
                        float _2964;
                        float _2965;
                        float _2966;
                        float _2967;
                        float _2968;
                        float _2724 = _2561;
                        float _2725 = _2562;
                        float _2726 = _2563;
                        float _2727 = _2564;
                        float _2728 = _2565;
                        float _2729 = _2566;
                        uint _2730 = _2576;
                        uint _2731;
                        vec4 _2756;
                        float _2757;
                        vec4 _2772;
                        vec3 _2784;
                        vec4 _2800;
                        vec4 _2816;
                        float _2863;
                        bool _2864;
                        for (;;)
                        {
                            uint _2741 = ((_2567 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2730));
                            _2731 = (_2730 + 4294967295u) & _2730;
                            uint _2743 = _2741 * 40u;
                            _2756 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2743)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2743 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2743 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2743 + 3u)).x));
                            _2757 = _2756.w;
                            uint _2759 = (_2741 * 40u) + 4u;
                            _2772 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2759)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2759 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2759 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2759 + 3u)).x));
                            uint _2774 = (_2741 * 40u) + 8u;
                            _2784 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2774)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2774 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2774 + 2u)).x));
                            uint _2787 = (_2741 * 40u) + 16u;
                            _2800 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2787)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2787 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2787 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2787 + 3u)).x));
                            uint _2803 = (_2741 * 40u) + 20u;
                            _2816 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2803)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2803 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2803 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2803 + 3u)).x));
                            uint _2819 = (_2741 * 40u) + 24u;
                            vec4 _2832 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2819)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2819 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2819 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2819 + 3u)).x));
                            uint _2838 = (_2741 * 40u) + 28u;
                            vec4 _2851 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2838)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2838 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2838 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2838 + 3u)).x));
                            _2863 = fma(_1417, _2851.z, fma(_1416, _2851.y, _2851.x * _1415)) + _2851.w;
                            _2864 = !((fma(_1417, _2832.z, fma(_1416, _2832.y, _2832.x * _1415)) + _2832.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_2864)
                            {
                                float _2891 = _2756.x - _1415;
                                float _2892 = _2756.y - _1416;
                                float _2893 = _2756.z - _1417;
                                float _2894 = dot(vec3(_2891, _2892, _2893), vec3(_2891, _2892, _2893));
                                float _2897 = inversesqrt(_2894);
                                float _2898 = _2897 * _2891;
                                float _2899 = _2897 * _2892;
                                float _2900 = _2897 * _2893;
                                float _2904 = 1.0 - (_2894 / (_2757 * _2757));
                                float _3861 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
                                float _2905 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
                                float _2909 = sqrt(_2894) * _2772.w;
                                float _2911 = 1.39999997615814208984375 / (_2909 + 1.39999997615814208984375);
                                float _2912 = _2911 * _2911;
                                float _2913 = 1.0 - _2912;
                                float _2915 = (_2913 * dot(vec3(_2898, _2899, _2900), vec3(_323, _326, _329))) + _2912;
                                float _2918 = _2909 * _2909;
                                float _2922 = (fma(_1417, _2800.z, fma(_1416, _2800.y, _2800.x * _1415)) + _2800.w) / _2863;
                                float _2923 = (fma(_1417, _2816.z, fma(_1416, _2816.y, _2816.x * _1415)) + _2816.w) / _2863;
                                float _2927 = 1.0 - dot(vec2(_2922, _2923), vec2(_2922, _2923));
                                float _3877 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
                                float _2928 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
                                float _2929 = _2928 * (((isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0))) * _2905) / ((_2918 * 0.699999988079071044921875) + 1.0));
                                float _2939 = dot(vec3(_323, _326, _329), vec3((-0.0) - (_1415 * _2450), (-0.0) - (_1416 * _2450), (-0.0) - (_1417 * _2450)));
                                float _3888 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
                                float _2947 = (_2913 * dot(vec3(_323, _326, _329), vec3(_2898, _2899, _2900))) + _2912;
                                float _3899 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0));
                                float _2948 = isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0));
                                float _2952 = (0.5 / (((isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0))) + 9.9999999392252902907785028219223e-09) + _2948)) * _2948;
                                float _3910 = isnan(0.0) ? _2952 : (isnan(_2952) ? 0.0 : max(_2952, 0.0));
                                float _2959 = (_2928 * _2905) * (((isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0))) * 3.1415927410125732421875) / ((_2918 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_80_pred = _2959 * _2784.z;
                                frontier_phi_80_pred_1 = _2959 * _2784.y;
                                frontier_phi_80_pred_2 = _2959 * _2784.x;
                                frontier_phi_80_pred_3 = _2929 * _2772.z;
                                frontier_phi_80_pred_4 = _2929 * _2772.y;
                                frontier_phi_80_pred_5 = _2929 * _2772.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _2965 = frontier_phi_80_pred;
                            _2964 = frontier_phi_80_pred_1;
                            _2963 = frontier_phi_80_pred_2;
                            _2968 = frontier_phi_80_pred_3;
                            _2967 = frontier_phi_80_pred_4;
                            _2966 = frontier_phi_80_pred_5;
                            _2714 = _2966 + _2727;
                            _2715 = _2967 + _2728;
                            _2716 = _2968 + _2729;
                            _2711 = _2963 + _2724;
                            _2712 = _2964 + _2725;
                            _2713 = _2965 + _2726;
                            if (_2731 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2724 = _2711;
                                _2725 = _2712;
                                _2726 = _2713;
                                _2727 = _2714;
                                _2728 = _2715;
                                _2729 = _2716;
                                _2730 = _2731;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _2713;
                        frontier_phi_74_pred_1 = _2712;
                        frontier_phi_74_pred_2 = _2711;
                        frontier_phi_74_pred_3 = _2716;
                        frontier_phi_74_pred_4 = _2715;
                        frontier_phi_74_pred_5 = _2714;
                    }
                    _2430 = frontier_phi_74_pred;
                    _2428 = frontier_phi_74_pred_1;
                    _2426 = frontier_phi_74_pred_2;
                    _2436 = frontier_phi_74_pred_3;
                    _2434 = frontier_phi_74_pred_4;
                    _2432 = frontier_phi_74_pred_5;
                    uint _2568 = _2567 + 1u;
                    if (_2568 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2561 = _2426;
                        _2562 = _2428;
                        _2563 = _2430;
                        _2564 = _2432;
                        _2565 = _2434;
                        _2566 = _2436;
                        _2567 = _2568;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2434;
                frontier_phi_62_63_ladder_1 = _2432;
                frontier_phi_62_63_ladder_2 = _2430;
                frontier_phi_62_63_ladder_3 = _2436;
                frontier_phi_62_63_ladder_4 = _2428;
                frontier_phi_62_63_ladder_5 = _2426;
            }
            else
            {
                frontier_phi_62_63_ladder = _2320;
                frontier_phi_62_63_ladder_1 = _2318;
                frontier_phi_62_63_ladder_2 = _2316;
                frontier_phi_62_63_ladder_3 = _2322;
                frontier_phi_62_63_ladder_4 = _2314;
                frontier_phi_62_63_ladder_5 = _2312;
            }
            _2425 = frontier_phi_62_63_ladder_5;
            _2427 = frontier_phi_62_63_ladder_4;
            _2429 = frontier_phi_62_63_ladder_2;
            _2431 = frontier_phi_62_63_ladder_1;
            _2433 = frontier_phi_62_63_ladder;
            _2435 = frontier_phi_62_63_ladder_3;
        }
        float _2440 = isnan(1.0) ? _368 : (isnan(_368) ? 1.0 : min(_368, 1.0));
        _2243 = (_2440 * _2431) + _1883;
        _2245 = (_2440 * _2433) + _1885;
        _2247 = (_2440 * _2435) + _1887;
        _2249 = ((_2425 * 0.039999999105930328369140625) * _2440) + _2125;
        _2251 = ((_2427 * 0.039999999105930328369140625) * _2440) + _2127;
        _2253 = ((_2429 * 0.039999999105930328369140625) * _2440) + _2129;
    }
    else
    {
        _2243 = _1883;
        _2245 = _1885;
        _2247 = _1887;
        _2249 = _2125;
        _2251 = _2127;
        _2253 = _2129;
    }
    float _3926 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _3937 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _3948 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _3959 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _2278 = cbInstanceData._m0[_342 + 6u].w * (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0)));
    float _2283 = _301 / cbSceneParam._m0[86u].x;
    float _2284 = _302 / cbSceneParam._m0[86u].y;
    vec4 _2298 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2283, _2284, (log2((isnan(cbSceneParam._m0[77u].w) ? _234 : (isnan(_234) ? cbSceneParam._m0[77u].w : min(_234, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2300 = _2298.x;
    float _2301 = _2298.y;
    float _2302 = _2298.z;
    float _2303 = _2298.w;
    float _2374;
    float _2376;
    float _2378;
    float _2380;
    if (_234 > cbSceneParam._m0[78u].w)
    {
        float _2337 = isnan(_234) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _234 : min(cbSceneParam._m0[80u].w, _234));
        float _2338 = _2337 / _234;
        float _2349 = _2338 * _286;
        float _2350 = _287 * _2338;
        float _2351 = (-0.0) - _2350;
        float _2352 = _2338 * _288;
        float _2354 = (cbSceneParam._m0[77u].w * _2351) / _2337;
        float _2355 = _2354 + cbSceneParam._m0[79u].w;
        float _2356 = cbSceneParam._m0[79u].w - _2350;
        float _2362 = sqrt(((_2349 * _2349) + (_2350 * _2350)) + (_2352 * _2352));
        float _2365 = (1.0 - (cbSceneParam._m0[77u].w / _2337)) * _2362;
        float _2370 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2372 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2523;
        if (abs((_2351 - _2354) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2523 = ((((_2355 > 0.0) ? exp2(_2370 * _2355) : (2.0 - exp2(_2372 * _2355))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2365;
        }
        else
        {
            float _2483 = 1.0 / cbSceneParam._m0[80u].x;
            float _2484 = isnan(_2356) ? _2355 : (isnan(_2355) ? _2356 : max(_2355, _2356));
            float _2485 = isnan(_2356) ? _2355 : (isnan(_2355) ? _2356 : min(_2355, _2356));
            float _2494 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : min(_2484, 0.0));
            float _2495 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : min(_2485, 0.0));
            _2523 = ((abs(_2362 / _2351) * cbSceneParam._m0[80u].y) * ((((_2494 - _2495) * 2.0) - ((exp2(_2370 * (isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0)))) - exp2(_2370 * (isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0))))) * _2483)) - ((exp2(_2372 * _2494) - exp2(_2372 * _2495)) * _2483))) + (_2365 * cbSceneParam._m0[80u].z);
        }
        vec4 _2525 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2283, _2284, 1.0), 0.0);
        float _2534 = exp2((_2523 * (-1.44269502162933349609375)) * (1.0 - _2525.w));
        float _2535 = log2(_2534);
        float _2551 = log2(_2303);
        _2374 = (exp2(_2551 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2535 * cbSceneParam._m0[78u].x)) * _2525.x) / cbSceneParam._m0[78u].x)) + _2300;
        _2376 = (exp2(_2551 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2535 * cbSceneParam._m0[78u].y)) * _2525.y) / cbSceneParam._m0[78u].y)) + _2301;
        _2378 = (exp2(_2551 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2535 * cbSceneParam._m0[78u].z)) * _2525.z) / cbSceneParam._m0[78u].z)) + _2302;
        _2380 = _2534 * _2303;
    }
    else
    {
        _2374 = _2300;
        _2376 = _2301;
        _2378 = _2302;
        _2380 = _2303;
    }
    float _2392 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2393 = _2392 == 3.0;
    float _2395 = log2(_2380);
    float _2402 = exp2(_2395 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * (_2243 + ((isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0))) * _368))) + ((_2249 + ((isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0))) * _1147)) * cbPerFrame._m0[3u].x));
    float _2403 = exp2(_2395 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * (_2245 + ((isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0))) * _368))) + ((_2251 + ((isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0))) * _1147)) * cbPerFrame._m0[3u].x));
    float _2404 = exp2(_2395 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0))) * (_2247 + ((isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0))) * _368))) + ((_2253 + ((isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0))) * _1147)) * cbPerFrame._m0[3u].x));
    float _2413 = (_2392 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2413 * (_2393 ? _2402 : (_2402 + (cbSceneParam._m0[72u].w * _2374)));
    SV_Target.y = _2413 * (_2393 ? _2403 : (_2403 + (cbSceneParam._m0[72u].w * _2376)));
    SV_Target.z = _2413 * (_2393 ? _2404 : (_2404 + (cbSceneParam._m0[72u].w * _2378)));
    SV_Target.w = _2278;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2278;
}


