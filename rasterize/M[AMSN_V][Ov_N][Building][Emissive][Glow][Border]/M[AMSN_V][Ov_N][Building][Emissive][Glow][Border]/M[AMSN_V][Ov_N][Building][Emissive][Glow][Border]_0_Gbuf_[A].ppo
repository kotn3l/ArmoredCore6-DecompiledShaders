#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TANGENT_2;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_5;
layout(location = 5, component = 1) in float TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 5, component = 2) in float TEXCOORD_15;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _163 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _164 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _165 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _171 = inversesqrt(dot(vec3(_163, _164, _165), vec3(_163, _164, _165)));
    float _172 = _171 * _163;
    float _173 = _171 * _164;
    float _174 = _171 * _165;
    float _184 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _185 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _186 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _190 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _191 = _190 * _184;
    float _192 = _190 * _185;
    float _193 = _190 * _186;
    float _197 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _198 = _197 * NORMAL.x;
    float _199 = _197 * NORMAL.y;
    float _200 = _197 * NORMAL.z;
    float _204 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _205 = _204 * TANGENT.x;
    float _206 = _204 * TANGENT.y;
    float _207 = _204 * TANGENT.z;
    float _211 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _212 = _211 * TANGENT_2.x;
    float _213 = _211 * TANGENT_2.y;
    float _214 = _211 * TANGENT_2.z;
    float _219;
    float _220;
    float _221;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _219 = (-0.0) - _198;
        _220 = (-0.0) - _199;
        _221 = (-0.0) - _200;
    }
    else
    {
        _219 = _198;
        _220 = _199;
        _221 = _200;
    }
    vec4 _260 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _272 = 1.0 - ((1.0 - _260.x) * 1.39999997615814208984375);
    float _873 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _273 = isnan(1.0) ? _873 : (isnan(_873) ? 1.0 : min(_873, 1.0));
    float _280 = (_273 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x;
    float _281 = (_273 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[15u].y)) + cbMtdParam._m0[15u].y;
    float _282 = (_273 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[15u].z)) + cbMtdParam._m0[15u].z;
    float _284 = 1.0 - ((1.0 - _260.y) * 1.39999997615814208984375);
    float _884 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _285 = isnan(1.0) ? _884 : (isnan(_884) ? 1.0 : min(_884, 1.0));
    float _292 = (_285 * (cbMtdParam._m0[13u].x - _280)) + _280;
    float _293 = (_285 * (cbMtdParam._m0[13u].y - _281)) + _281;
    float _294 = (_285 * (cbMtdParam._m0[13u].z - _282)) + _282;
    float _296 = 1.0 - ((1.0 - _260.z) * 1.39999997615814208984375);
    float _895 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _297 = isnan(1.0) ? _895 : (isnan(_895) ? 1.0 : min(_895, 1.0));
    float _326 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w)).x * cbMtdParam._m0[19u].z;
    float _340 = ((cbMtdParam._m0[18u].y * (-1.39999997615814208984375)) * ((TEXCOORD_6 - _326) + (cbMtdParam._m0[17u].w * TEXCOORD_6))) + 1.0;
    float _906 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _342 = 1.0 - (isnan(1.0) ? _906 : (isnan(_906) ? 1.0 : min(_906, 1.0)));
    float _343 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _344 = isnan(1.0) ? _343 : (isnan(_343) ? 1.0 : min(_343, 1.0));
    float _352 = ((cbMtdParam._m0[18u].x * (-1.39999997615814208984375)) * ((TEXCOORD_5 - _326) + (cbMtdParam._m0[17u].z * TEXCOORD_5))) + 1.0;
    float _927 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _354 = 1.0 - (isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0)));
    float _355 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _356 = isnan(1.0) ? _355 : (isnan(_355) ? 1.0 : min(_355, 1.0));
    vec4 _374 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _376 = _374.x;
    float _377 = _374.y;
    float _378 = _374.z;
    float _379 = cbMtdParam._m0[12u].x * _356;
    float _381 = cbMtdParam._m0[12u].y * _356;
    float _383 = cbMtdParam._m0[12u].z * _356;
    float _403 = _354 + _342;
    float _404 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _405 = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
    vec4 _423 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _428 = _423.w;
    float _429 = _423.x * cbMtdParam._m0[10u].x;
    float _430 = _423.y * cbMtdParam._m0[10u].y;
    float _431 = _423.z * cbMtdParam._m0[10u].z;
    float _451 = ((_429 - (_405 * _429)) + ((((((_376 * (cbMtdParam._m0[11u].x - _379)) * _344) + (_379 * _376)) * 4.55000019073486328125) * _405) * _429)) * ((_297 * (cbMtdParam._m0[14u].x - _292)) + _292);
    float _452 = ((((((((_377 * (cbMtdParam._m0[11u].y - _381)) * _344) + (_381 * _377)) * 4.55000019073486328125) * _405) * _430) + _430) - (_405 * _430)) * ((_297 * (cbMtdParam._m0[14u].y - _293)) + _293);
    float _453 = ((((((((_378 * (cbMtdParam._m0[11u].z - _383)) * _344) + (_383 * _378)) * 4.55000019073486328125) * _405) * _431) + _431) - (_405 * _431)) * ((_297 * (cbMtdParam._m0[14u].z - _294)) + _294);
    vec4 _470 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _474 = _470.z;
    float _478 = (_470.x * 2.0) + (-1.0);
    float _480 = (_470.y * 2.0) + (-1.0);
    float _481 = dot(vec2(_478, _480), vec2(_478, _480));
    float _958 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _486 = sqrt(1.0 - (isnan(1.0) ? _958 : (isnan(_958) ? 1.0 : min(_958, 1.0))));
    float _489 = fma(_486, _219, fma(_480, _212, _478 * _191));
    float _492 = fma(_486, _220, fma(_480, _213, _478 * _192));
    float _495 = fma(_486, _221, fma(_480, _214, _478 * _193));
    float _499 = inversesqrt(dot(vec3(_489, _492, _495), vec3(_489, _492, _495)));
    float _500 = _499 * _489;
    float _501 = _499 * _492;
    float _502 = _499 * _495;
    vec4 _514 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _520 = (_514.x * 2.0) + (-1.0);
    float _521 = (_514.y * 2.0) + (-1.0);
    float _522 = dot(vec2(_520, _521), vec2(_520, _521));
    float _969 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _527 = sqrt(1.0 - (isnan(1.0) ? _969 : (isnan(_969) ? 1.0 : min(_969, 1.0))));
    float _530 = fma(_527, _219, fma(_521, _212, _520 * _191));
    float _533 = fma(_527, _220, fma(_521, _213, _520 * _192));
    float _536 = fma(_527, _221, fma(_521, _214, _520 * _193));
    float _540 = inversesqrt(dot(vec3(_530, _533, _536), vec3(_530, _533, _536)));
    float _541 = _540 * _530;
    float _542 = _540 * _533;
    float _543 = _540 * _536;
    float _546 = fma(_543, _174, fma(_542, _173, _541 * _172));
    float _549 = fma(_543, _207, fma(_542, _206, _541 * _205));
    float _552 = fma(_543, _221, fma(_542, _220, _541 * _219));
    float _556 = inversesqrt(dot(vec3(_546, _549, _552), vec3(_546, _549, _552)));
    float _560 = fma(_502, _174, fma(_501, _173, _500 * _172));
    float _563 = fma(_502, _207, fma(_501, _206, _500 * _205));
    float _566 = fma(_502, _221, fma(_501, _220, _500 * _219));
    float _570 = inversesqrt(dot(vec3(_560, _563, _566), vec3(_560, _563, _566)));
    vec4 _586 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _592 = (_586.x * 2.0) + (-1.0);
    float _593 = (_586.y * 2.0) + (-1.0);
    float _594 = dot(vec2(_592, _593), vec2(_592, _593));
    float _980 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _599 = sqrt(1.0 - (isnan(1.0) ? _980 : (isnan(_980) ? 1.0 : min(_980, 1.0))));
    vec4 _614 = texture(sampler2D(M_AMSN_V_Ov_N_Building_Emissive_Glow_Border_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _620 = (_614.x * 2.0) + (-1.0);
    float _621 = (_614.y * 2.0) + (-1.0);
    float _622 = dot(vec2(_620, _621), vec2(_620, _621));
    float _991 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _627 = sqrt(1.0 - (isnan(1.0) ? _991 : (isnan(_991) ? 1.0 : min(_991, 1.0))));
    float _630 = fma(_627, _219, fma(_621, _212, _620 * _191));
    float _633 = fma(_627, _220, fma(_621, _213, _620 * _192));
    float _636 = fma(_627, _221, fma(_621, _214, _620 * _193));
    float _640 = inversesqrt(dot(vec3(_630, _633, _636), vec3(_630, _633, _636)));
    float _641 = _640 * _630;
    float _642 = _640 * _633;
    float _643 = _640 * _636;
    float _646 = fma(_643, _174, fma(_642, _173, _641 * _172));
    float _649 = fma(_643, _207, fma(_642, _206, _641 * _205));
    float _652 = fma(_643, _221, fma(_642, _220, _641 * _219));
    float _656 = inversesqrt(dot(vec3(_646, _649, _652), vec3(_646, _649, _652)));
    float _672 = ((((_570 * _560) * cbMtdParam._m0[19u].x) + (((_546 * _344) * _556) * cbMtdParam._m0[18u].z)) + _592) + (((_646 * _356) * _656) * cbMtdParam._m0[18u].w);
    float _675 = ((((_570 * _563) * cbMtdParam._m0[19u].x) + (((_549 * _344) * _556) * cbMtdParam._m0[18u].z)) + _593) + (((_649 * _356) * _656) * cbMtdParam._m0[18u].w);
    float _678 = fma(_599, _219, fma(_675, _205, _672 * _172));
    float _681 = fma(_599, _220, fma(_675, _206, _672 * _173));
    float _684 = fma(_599, _221, fma(_675, _207, _672 * _174));
    float _688 = inversesqrt(dot(vec3(_678, _681, _684), vec3(_678, _681, _684)));
    float _1002 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _689 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
    float _1013 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _1024 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _691 = isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0));
    float _1035 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _692 = isnan(1.0) ? _1035 : (isnan(_1035) ? 1.0 : min(_1035, 1.0));
    float _1046 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _693 = isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0));
    float _1057 = isnan(0.0) ? cbMtdParam._m0[20u].x : (isnan(cbMtdParam._m0[20u].x) ? 0.0 : max(cbMtdParam._m0[20u].x, 0.0));
    uint _696 = uint(roundEven(NORMAL.w));
    vec4 _701 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _703 = _701.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _765 = (cbMatDynParam._m0[5u].x * TEXCOORD_15) + cbMatDynParam._m0[5u].y;
        float _1068 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _766 = isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0));
        float _770 = (cbMatDynParam._m0[5u].z * TEXCOORD_15) + cbMatDynParam._m0[5u].w;
        float _1079 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0))) - _766)) + _766) < ((_703 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _798;
    uint _722;
    vec4 _726;
    float _733;
    float _734;
    float _735;
    float _741;
    vec4 _745;
    float _747;
    float _748;
    bool _759;
    for (;;)
    {
        _722 = _696 * 13u;
        _726 = cbInstanceData._m0[(_722 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _730 = (cbMtdParam._m0[0u].x * _691) * _726.x;
        float _731 = (cbMtdParam._m0[0u].y * _692) * _726.y;
        float _732 = (cbMtdParam._m0[0u].z * _693) * _726.z;
        float _1090 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
        _733 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
        float _1101 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
        _734 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
        float _1112 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        _735 = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
        float _1123 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
        _741 = cbInstanceData._m0[_722 + 6u].w * (isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0)));
        float _742 = _703 + (-0.5);
        _745 = cbMtdParam._m0[1u];
        _747 = _745.y * _742;
        _748 = _742 * 0.999000012874603271484375;
        _759 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_759)
        {
            if ((cbInstanceData._m0[_722 + 7u].x + _748) < 0.5)
            {
                _798 = true;
                break;
            }
        }
        if ((_726.w < 1.0) && ((_726.w + _748) < 0.5))
        {
            _798 = true;
            break;
        }
        if ((_747 + _428) < _745.x)
        {
            _798 = true;
            break;
        }
        _798 = false;
        break;
    }
    if (_798)
    {
        discard_state = true;
    }
    bool _824 = cbMtdParam._m0[1u].z != 0.0;
    float _825 = _824 ? _741 : 0.0;
    SV_Target.x = ((_678 * 0.5) * _688) + 0.500488758087158203125;
    SV_Target.y = ((_681 * 0.5) * _688) + 0.500488758087158203125;
    SV_Target.z = ((_684 * 0.5) * _688) + 0.500488758087158203125;
    SV_Target.w = _825;
    SV_Target_1.x = isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _824 ? _741 : TEXCOORD_7.w;
    SV_Target_2.x = _733;
    SV_Target_2.y = _734;
    SV_Target_2.z = _735;
    SV_Target_2.w = _824 ? _741 : (float(floatBitsToUint(cbInstanceData._m0[_722 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _825;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _825;
    discard_exit();
}


