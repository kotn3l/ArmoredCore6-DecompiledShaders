#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in float TEXCOORD;
layout(location = 3, component = 1) in float TEXCOORD_1;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 3, component = 2) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _132 = _131 * _123;
    float _133 = _131 * _124;
    float _134 = _131 * _125;
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _139 = _138 * NORMAL.x;
    float _140 = _138 * NORMAL.y;
    float _141 = _138 * NORMAL.z;
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _146 = _145 * TANGENT.x;
    float _147 = _145 * TANGENT.y;
    float _148 = _145 * TANGENT.z;
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
    }
    else
    {
        _153 = _139;
        _154 = _140;
        _155 = _141;
    }
    vec4 _181 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _187 = _181.x * cbMtdParam._m0[9u].x;
    float _188 = _181.y * cbMtdParam._m0[9u].y;
    float _189 = _181.z * cbMtdParam._m0[9u].z;
    vec4 _207 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _211 = _207.z;
    float _215 = (_207.x * 2.0) + (-1.0);
    float _217 = (_207.y * 2.0) + (-1.0);
    float _218 = dot(vec2(_215, _217), vec2(_215, _217));
    float _421 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _224 = sqrt(1.0 - (isnan(1.0) ? _421 : (isnan(_421) ? 1.0 : min(_421, 1.0))));
    float _227 = fma(_224, _153, fma(_217, _146, _215 * _132));
    float _230 = fma(_224, _154, fma(_217, _147, _215 * _133));
    float _233 = fma(_224, _155, fma(_217, _148, _215 * _134));
    float _237 = inversesqrt(dot(vec3(_227, _230, _233), vec3(_227, _230, _233)));
    float _248 = cbMtdParam._m0[12u].x + dot(vec4(_237 * _227, _237 * _230, _237 * _233, 0.0), vec4(cbMtdParam._m0[13u].xyz, 0.0));
    float _432 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _249 = isnan(1.0) ? _432 : (isnan(_432) ? 1.0 : min(_432, 1.0));
    float _256 = (_249 * (cbMtdParam._m0[10u].x - _187)) + _187;
    float _257 = (_249 * (cbMtdParam._m0[10u].y - _188)) + _188;
    float _258 = (_249 * (cbMtdParam._m0[10u].z - _189)) + _189;
    vec4 _270 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _272 = _270.x;
    float _274 = _272 - (_272 * _249);
    vec4 _286 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _293 = (_286.x * 2.0) + (-1.0);
    float _294 = (_286.y * 2.0) + (-1.0);
    float _295 = dot(vec2(_293, _294), vec2(_293, _294));
    float _443 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _303 = ((_286.z - _211) * _249) + _211;
    float _315 = (((_293 - _215) + (cbMtdParam._m0[12u].w * _215)) * _249) + _215;
    float _316 = (((_294 - _217) + (cbMtdParam._m0[12u].w * _217)) * _249) + _217;
    float _317 = ((sqrt(1.0 - (isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0)))) - _224) * _249) + _224;
    float _320 = fma(_317, _153, fma(_316, _146, _315 * _132));
    float _323 = fma(_317, _154, fma(_316, _147, _315 * _133));
    float _326 = fma(_317, _155, fma(_316, _148, _315 * _134));
    float _330 = inversesqrt(dot(vec3(_320, _323, _326), vec3(_320, _323, _326)));
    float _454 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _465 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _476 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _487 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _498 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    uint _350 = uint(roundEven(NORMAL.w)) * 13u;
    uint _352 = (_350 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _358 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0)))) * cbInstanceData._m0[_352].x;
    float _359 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _476 : (isnan(_476) ? 1.0 : min(_476, 1.0)))) * cbInstanceData._m0[_352].y;
    float _360 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _487 : (isnan(_487) ? 1.0 : min(_487, 1.0)))) * cbInstanceData._m0[_352].z;
    float _509 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _520 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _531 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    uint _364 = _350 + 6u;
    bool _393 = cbMtdParam._m0[1u].z != 0.0;
    float _394 = _393 ? cbInstanceData._m0[_364].w : 0.0;
    SV_Target.x = ((_320 * 0.5) * _330) + 0.500488758087158203125;
    SV_Target.y = ((_323 * 0.5) * _330) + 0.500488758087158203125;
    SV_Target.z = ((_326 * 0.5) * _330) + 0.500488758087158203125;
    SV_Target.w = _394;
    SV_Target_1.x = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
    SV_Target_1.y = isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _393 ? cbInstanceData._m0[_364].w : TEXCOORD_3.w;
    SV_Target_2.x = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
    SV_Target_2.y = isnan(1.0) ? _520 : (isnan(_520) ? 1.0 : min(_520, 1.0));
    SV_Target_2.z = isnan(1.0) ? _531 : (isnan(_531) ? 1.0 : min(_531, 1.0));
    SV_Target_2.w = _393 ? cbInstanceData._m0[_364].w : (float(floatBitsToUint(cbInstanceData._m0[_350 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _394;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _394;
}


