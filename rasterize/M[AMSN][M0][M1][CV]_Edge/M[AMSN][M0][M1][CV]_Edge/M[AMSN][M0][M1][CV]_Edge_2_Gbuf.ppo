#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in float TEXCOORD;
layout(location = 3, component = 1) in float TEXCOORD_1;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 3, component = 2) in float TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _132 = _131 * _123;
    float _133 = _131 * _124;
    float _134 = _131 * _125;
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _139 = _138 * NORMAL.x;
    float _140 = _138 * NORMAL.y;
    float _141 = _138 * NORMAL.z;
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _146 = _145 * TANGENT.x;
    float _147 = _145 * TANGENT.y;
    float _148 = _145 * TANGENT.z;
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
    }
    else
    {
        _153 = _139;
        _154 = _140;
        _155 = _141;
    }
    vec4 _181 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _187 = _181.x * cbMtdParam._m0[9u].x;
    float _188 = _181.y * cbMtdParam._m0[9u].y;
    float _189 = _181.z * cbMtdParam._m0[9u].z;
    vec4 _207 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _211 = _207.z;
    float _215 = (_207.x * 2.0) + (-1.0);
    float _217 = (_207.y * 2.0) + (-1.0);
    float _218 = dot(vec2(_215, _217), vec2(_215, _217));
    float _422 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _224 = sqrt(1.0 - (isnan(1.0) ? _422 : (isnan(_422) ? 1.0 : min(_422, 1.0))));
    float _227 = fma(_224, _153, fma(_217, _146, _215 * _132));
    float _230 = fma(_224, _154, fma(_217, _147, _215 * _133));
    float _233 = fma(_224, _155, fma(_217, _148, _215 * _134));
    float _237 = inversesqrt(dot(vec3(_227, _230, _233), vec3(_227, _230, _233)));
    float _266 = (cbMtdParam._m0[12u].x + dot(vec4(_237 * _227, _237 * _230, _237 * _233, 0.0), vec4(cbMtdParam._m0[13u].xyz, 0.0))) - (texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w)).x * cbMtdParam._m0[12u].y);
    float _433 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _267 = isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0));
    float _274 = (_267 * (cbMtdParam._m0[10u].x - _187)) + _187;
    float _275 = (_267 * (cbMtdParam._m0[10u].y - _188)) + _188;
    float _276 = (_267 * (cbMtdParam._m0[10u].z - _189)) + _189;
    vec4 _288 = texture(sampler2D(M_AMSN_M0_M1_CV_Edge_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _295 = (_288.x * 2.0) + (-1.0);
    float _296 = (_288.y * 2.0) + (-1.0);
    float _297 = dot(vec2(_295, _296), vec2(_295, _296));
    float _444 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _305 = ((_288.z - _211) * _267) + _211;
    float _317 = (((_295 - _215) + (cbMtdParam._m0[12u].w * _215)) * _267) + _215;
    float _318 = (((_296 - _217) + (cbMtdParam._m0[12u].w * _217)) * _267) + _217;
    float _319 = ((sqrt(1.0 - (isnan(1.0) ? _444 : (isnan(_444) ? 1.0 : min(_444, 1.0)))) - _224) * _267) + _224;
    float _322 = fma(_319, _153, fma(_318, _146, _317 * _132));
    float _325 = fma(_319, _154, fma(_318, _147, _317 * _133));
    float _328 = fma(_319, _155, fma(_318, _148, _317 * _134));
    float _332 = inversesqrt(dot(vec3(_322, _325, _328), vec3(_322, _325, _328)));
    float _455 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _466 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _477 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _488 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    uint _351 = uint(roundEven(NORMAL.w)) * 13u;
    uint _353 = (_351 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _359 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _466 : (isnan(_466) ? 1.0 : min(_466, 1.0)))) * cbInstanceData._m0[_353].x;
    float _360 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _477 : (isnan(_477) ? 1.0 : min(_477, 1.0)))) * cbInstanceData._m0[_353].y;
    float _361 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _488 : (isnan(_488) ? 1.0 : min(_488, 1.0)))) * cbInstanceData._m0[_353].z;
    float _499 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _510 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _521 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    uint _365 = _351 + 6u;
    bool _394 = cbMtdParam._m0[1u].z != 0.0;
    float _395 = _394 ? cbInstanceData._m0[_365].w : 0.0;
    SV_Target.x = ((_322 * 0.5) * _332) + 0.500488758087158203125;
    SV_Target.y = ((_325 * 0.5) * _332) + 0.500488758087158203125;
    SV_Target.z = ((_328 * 0.5) * _332) + 0.500488758087158203125;
    SV_Target.w = _395;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _455 : (isnan(_455) ? 1.0 : min(_455, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _394 ? cbInstanceData._m0[_365].w : TEXCOORD_3.w;
    SV_Target_2.x = isnan(1.0) ? _499 : (isnan(_499) ? 1.0 : min(_499, 1.0));
    SV_Target_2.y = isnan(1.0) ? _510 : (isnan(_510) ? 1.0 : min(_510, 1.0));
    SV_Target_2.z = isnan(1.0) ? _521 : (isnan(_521) ? 1.0 : min(_521, 1.0));
    SV_Target_2.w = _394 ? cbInstanceData._m0[_365].w : (float(floatBitsToUint(cbInstanceData._m0[_351 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _395;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _395;
}


