#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _169 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _170 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _171 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _177 = inversesqrt(dot(vec3(_169, _170, _171), vec3(_169, _170, _171)));
    float _184 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _191 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _248 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _238);
    float _249 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _238);
    float _250 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _238);
    vec4 _269 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _308 = cbMtdParam._m0[27u].w + _248;
    float _309 = cbMtdParam._m0[28u].x + _249;
    float _310 = cbMtdParam._m0[28u].y + _250;
    float _324 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_177 * _169, _177 * _170, _177 * _171));
    float _325 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_191 * TANGENT.x, _191 * TANGENT.y, _191 * TANGENT.z));
    float _326 = (-0.0) - dot(vec3(_308, _309, _310), vec3((-0.0) - (_184 * NORMAL.x), (-0.0) - (_184 * NORMAL.y), (-0.0) - (_184 * NORMAL.z)));
    float _330 = inversesqrt(dot(vec3(_324, _325, _326), vec3(_324, _325, _326)));
    float _333 = _330 * _326;
    float _334 = (_330 * _324) + (((_269.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _335 = (_330 * _325) + (((_269.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _336 = _334 * cbMtdParam._m0[24u].x;
    float _337 = _335 * cbMtdParam._m0[23u].w;
    float _338 = fract(TEXCOORD.x);
    float _339 = fract(TEXCOORD.y);
    float _345;
    if (_336 > 0.0)
    {
        _345 = (1.0 - _338) / _336;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_336 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _338) / _336;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _345 = frontier_phi_3_2_ladder;
    }
    float _353;
    if (_337 > 0.0)
    {
        _353 = (1.0 - _339) / _337;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_337 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _339) / _337;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _353 = frontier_phi_7_6_ladder;
    }
    bool _355 = _333 > 0.0;
    float _357 = _355 ? (cbMtdParam._m0[17u].x / _333) : 5000.0;
    float _358 = isnan(_353) ? _345 : (isnan(_345) ? _353 : min(_345, _353));
    float _359 = isnan(_357) ? _358 : (isnan(_358) ? _357 : min(_358, _357));
    float _363 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _364 = _338 + (-0.5);
    float _367 = _339 + (-0.5);
    float _370 = ((_359 * _333) + _363) / _363;
    vec4 _395 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_364 + (_359 * _336)) / _370) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_367 + (_359 * _337)) / _370) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _405 = cbMtdParam._m0[9u].x * _395.x;
    float _406 = cbMtdParam._m0[9u].y * _395.y;
    float _407 = cbMtdParam._m0[9u].z * _395.z;
    float _425 = _334 * cbMtdParam._m0[26u].z;
    float _426 = _335 * cbMtdParam._m0[26u].y;
    bool _427 = _425 > 0.0;
    float _432;
    if (_427)
    {
        _432 = (1.0 - _338) / _425;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_425 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _338) / _425;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _432 = frontier_phi_11_10_ladder;
    }
    bool _434 = _426 > 0.0;
    float _439;
    if (_434)
    {
        _439 = (1.0 - _339) / _426;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_426 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _339) / _426;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _439 = frontier_phi_15_14_ladder;
    }
    float _442 = _355 ? (cbMtdParam._m0[19u].z / _333) : 5000.0;
    float _443 = isnan(_439) ? _432 : (isnan(_432) ? _439 : min(_432, _439));
    float _444 = isnan(_442) ? _443 : (isnan(_443) ? _442 : min(_443, _442));
    float _448 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _452 = ((_444 * _333) + _448) / _448;
    float _457 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _459 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _475 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_364 + (_444 * _425)) / _452) + 0.5) + _457) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_367 + (_444 * _426)) / _452) + 0.5) + _459) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _487;
    if (_427)
    {
        _487 = (1.0 - _338) / _425;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_425 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _338) / _425;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _487 = frontier_phi_19_18_ladder;
    }
    float _493;
    if (_434)
    {
        _493 = (1.0 - _339) / _426;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_426 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _339) / _426;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _493 = frontier_phi_23_22_ladder;
    }
    float _495 = isnan(_493) ? _487 : (isnan(_487) ? _493 : min(_487, _493));
    float _496 = isnan(_442) ? _495 : (isnan(_495) ? _442 : min(_495, _442));
    float _503 = ((_496 * _333) + _448) / _448;
    vec4 _523 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_364 + (_496 * _425)) / _503) + 0.5) + _457) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_367 + (_496 * _426)) / _503) + 0.5) + _459) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _525 = _523.x;
    float _532 = (_525 * ((_475.x * cbMtdParam._m0[10u].x) - _405)) + _405;
    float _533 = (_525 * ((_475.y * cbMtdParam._m0[10u].y) - _406)) + _406;
    float _534 = (_525 * ((_475.z * cbMtdParam._m0[10u].z) - _407)) + _407;
    float _543 = (cbMtdParam._m0[16u].x * cbMtdParam._m0[19u].y) * _532;
    float _545 = (_533 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].y;
    float _547 = (_534 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].z;
    vec4 _571 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _576 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _582 = ((_571.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _584 = (-0.0) - (cbMtdParam._m0[21u].x * ((_571.x * 0.5) + (-0.25)));
    float _585 = fract(_576);
    float _587 = fract(_576 + 0.5);
    vec4 _614 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_585 * _584) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_582 * _585) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _616 = _614.x;
    float _622 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_587 * _584) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_582 * _587) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _616) * abs((_585 * 2.0) + (-1.0))) + _616;
    float _628 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _632 = fract(abs(_628));
    float _642 = sin(cbMtdParam._m0[21u].z);
    float _643 = cos(cbMtdParam._m0[21u].z);
    float _644 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _645 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _670 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_645, (-0.0) - _642, _643 * _644) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_645, _643, _644 * _642) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_628 >= ((-0.0) - _628)) ? _632 : ((-0.0) - _632)) * cbMtdParam._m0[18u].z) - _622)) + cbMtdParam._m0[18u].w;
    float _671 = ceil(_670);
    float _998 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _672 = isnan(1.0) ? _998 : (isnan(_998) ? 1.0 : min(_998, 1.0));
    float _692 = ((((cbMtdParam._m0[21u].w * _532) * cbMtdParam._m0[15u].x) - _543) * _672) + _543;
    float _693 = ((((cbMtdParam._m0[21u].w * _533) * cbMtdParam._m0[15u].y) - _545) * _672) + _545;
    float _694 = ((((cbMtdParam._m0[21u].w * _534) * cbMtdParam._m0[15u].z) - _547) * _672) + _547;
    float _698 = abs(cbMtdParam._m0[20u].w * _670);
    float _702 = (((_698 * cbMtdParam._m0[18u].y) - _622) * _698) + _622;
    float _1009 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _1009 : (isnan(_1009) ? 1.0 : min(_1009, 1.0));
    vec4 _715 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _730 = (cbMtdParam._m0[14u].x * _715.x) * cbMtdParam._m0[19u].x;
    float _731 = (cbMtdParam._m0[14u].y * _715.y) * cbMtdParam._m0[19u].x;
    float _732 = (cbMtdParam._m0[14u].z * _715.z) * cbMtdParam._m0[19u].x;
    float _739 = exp2(log2(_703) * cbMtdParam._m0[20u].x);
    float _756 = cbSceneParam._m0[72u].y * ((_739 * ((_730 - _692) - (_730 * _703))) + _692);
    float _757 = cbSceneParam._m0[72u].y * ((_739 * ((_731 - _693) - (_731 * _703))) + _693);
    float _758 = ((_739 * ((_732 - _694) - (_732 * _703))) + _694) * cbSceneParam._m0[72u].y;
    uint _760 = uint(roundEven(NORMAL.w));
    vec4 _765 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _767 = _765.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _821 = sqrt(((_248 * _248) + (_249 * _249)) + (_250 * _250));
        float _827 = (cbMatDynParam._m0[5u].x * _821) + cbMatDynParam._m0[5u].y;
        float _1020 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
        float _828 = isnan(1.0) ? _1020 : (isnan(_1020) ? 1.0 : min(_1020, 1.0));
        float _832 = (cbMatDynParam._m0[5u].z * _821) + cbMatDynParam._m0[5u].w;
        float _1031 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1031 : (isnan(_1031) ? 1.0 : min(_1031, 1.0))) - _828)) + _828) < ((_767 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _859;
    uint _780;
    vec4 _785;
    float _789;
    float _790;
    float _791;
    float _794;
    float _798;
    vec4 _801;
    float _803;
    float _804;
    bool _815;
    for (;;)
    {
        _780 = _760 * 13u;
        _785 = cbInstanceData._m0[(_780 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _789 = _756 * _785.x;
        _790 = _757 * _785.y;
        _791 = _758 * _785.z;
        _794 = cbMtdParam._m0[2u].w;
        _798 = cbInstanceData._m0[_780 + 6u].w;
        float _799 = _767 + (-0.5);
        _801 = cbMtdParam._m0[1u];
        _803 = _801.y * _799;
        _804 = _799 * 0.999000012874603271484375;
        _815 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_815)
        {
            if ((cbInstanceData._m0[_780 + 7u].x + _804) < 0.5)
            {
                _859 = true;
                break;
            }
        }
        if ((_785.w < 1.0) && ((_785.w + _804) < 0.5))
        {
            _859 = true;
            break;
        }
        if ((_803 + 1.0) < _801.x)
        {
            _859 = true;
            break;
        }
        _859 = false;
        break;
    }
    if (_859)
    {
        discard_state = true;
    }
    float _882;
    float _883;
    float _884;
    float _885;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _882 = _798;
        _883 = _798;
        _884 = _798;
        _885 = _798;
    }
    else
    {
        _882 = _794;
        _883 = 0.0;
        _884 = float(floatBitsToUint(cbInstanceData._m0[_780 + 5u]).x) * 0.0039215688593685626983642578125;
        _885 = TEXCOORD_4;
    }
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _883;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _885;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _884;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _883;
    SV_Target_4.x = _789 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _790 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _791 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _882;
    discard_exit();
}


