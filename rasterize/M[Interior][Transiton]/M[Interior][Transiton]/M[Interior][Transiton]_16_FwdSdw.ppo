#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1467;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _278 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _288 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _278);
    float _289 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _278);
    float _290 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _278);
    vec4 _304 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _307 = _304.x;
    vec4 _325 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _342 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _307) + cbMtdParam._m0[12u].x) * _325.x;
    float _344 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _307) + cbMtdParam._m0[12u].y) * _325.y;
    float _346 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _307) + cbMtdParam._m0[12u].z) * _325.z;
    vec4 _364 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _403 = cbMtdParam._m0[27u].w + _288;
    float _404 = cbMtdParam._m0[28u].x + _289;
    float _405 = cbMtdParam._m0[28u].y + _290;
    float _419 = (-0.0) - dot(vec3(_403, _404, _405), vec3(_218, _219, _220));
    float _420 = (-0.0) - dot(vec3(_403, _404, _405), vec3(_232, _233, _234));
    float _421 = (-0.0) - dot(vec3(_403, _404, _405), vec3((-0.0) - _225, (-0.0) - _226, (-0.0) - _227));
    float _425 = inversesqrt(dot(vec3(_419, _420, _421), vec3(_419, _420, _421)));
    float _428 = _425 * _421;
    float _429 = (_425 * _419) + ((cbMtdParam._m0[25u].w * _307) * ((_364.x * 2.0) + (-1.0)));
    float _430 = (_425 * _420) + ((cbMtdParam._m0[26u].x * _307) * ((_364.y * 2.0) + (-1.0)));
    float _431 = _429 * cbMtdParam._m0[24u].x;
    float _432 = _430 * cbMtdParam._m0[23u].w;
    float _433 = fract(TEXCOORD.x);
    float _434 = fract(TEXCOORD.y);
    float _440;
    if (_431 > 0.0)
    {
        _440 = (1.0 - _433) / _431;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_431 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _433) / _431;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _440 = frontier_phi_3_2_ladder;
    }
    float _448;
    if (_432 > 0.0)
    {
        _448 = (1.0 - _434) / _432;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_432 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _434) / _432;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _448 = frontier_phi_7_6_ladder;
    }
    bool _450 = _428 > 0.0;
    float _452 = _450 ? (cbMtdParam._m0[17u].x / _428) : 5000.0;
    float _453 = isnan(_448) ? _440 : (isnan(_440) ? _448 : min(_440, _448));
    float _454 = isnan(_452) ? _453 : (isnan(_453) ? _452 : min(_453, _452));
    float _458 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _459 = _433 + (-0.5);
    float _462 = _434 + (-0.5);
    float _465 = ((_454 * _428) + _458) / _458;
    vec4 _490 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_459 + (_454 * _431)) / _465) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_462 + (_454 * _432)) / _465) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _503 = (_490.x * _307) * cbMtdParam._m0[9u].x;
    float _504 = (_490.y * _307) * cbMtdParam._m0[9u].y;
    float _505 = (_490.z * _307) * cbMtdParam._m0[9u].z;
    float _523 = _429 * cbMtdParam._m0[26u].z;
    float _524 = _430 * cbMtdParam._m0[26u].y;
    bool _525 = _523 > 0.0;
    float _530;
    if (_525)
    {
        _530 = (1.0 - _433) / _523;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_523 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _433) / _523;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _530 = frontier_phi_11_10_ladder;
    }
    bool _532 = _524 > 0.0;
    float _537;
    if (_532)
    {
        _537 = (1.0 - _434) / _524;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_524 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _434) / _524;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _537 = frontier_phi_15_14_ladder;
    }
    float _540 = _450 ? (cbMtdParam._m0[19u].z / _428) : 5000.0;
    float _541 = isnan(_537) ? _530 : (isnan(_530) ? _537 : min(_530, _537));
    float _542 = isnan(_540) ? _541 : (isnan(_541) ? _540 : min(_541, _540));
    float _546 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _550 = ((_542 * _428) + _546) / _546;
    float _555 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _557 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _573 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_459 + (_542 * _523)) / _550) + 0.5) + _555) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_462 + (_542 * _524)) / _550) + 0.5) + _557) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _588;
    if (_525)
    {
        _588 = (1.0 - _433) / _523;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_523 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _433) / _523;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _588 = frontier_phi_19_18_ladder;
    }
    float _594;
    if (_532)
    {
        _594 = (1.0 - _434) / _524;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_524 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _434) / _524;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _594 = frontier_phi_23_22_ladder;
    }
    float _596 = isnan(_594) ? _588 : (isnan(_588) ? _594 : min(_588, _594));
    float _597 = isnan(_540) ? _596 : (isnan(_596) ? _540 : min(_596, _540));
    float _604 = ((_597 * _428) + _546) / _546;
    vec4 _624 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_459 + (_597 * _523)) / _604) + 0.5) + _555) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_462 + (_597 * _524)) / _604) + 0.5) + _557) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _626 = _624.x;
    float _636 = (((((cbMtdParam._m0[10u].x * _307) * _573.x) - _503) * _307) * _626) + _503;
    float _637 = (((((cbMtdParam._m0[10u].y * _307) * _573.y) - _504) * _307) * _626) + _504;
    float _638 = (((((cbMtdParam._m0[10u].z * _307) * _573.z) - _505) * _307) * _626) + _505;
    float _651 = _429 * cbMtdParam._m0[27u].x;
    float _652 = _430 * cbMtdParam._m0[26u].w;
    bool _653 = _651 > 0.0;
    float _658;
    if (_653)
    {
        _658 = (1.0 - _433) / _651;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_651 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _433) / _651;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _658 = frontier_phi_27_26_ladder;
    }
    bool _660 = _652 > 0.0;
    float _665;
    if (_660)
    {
        _665 = (1.0 - _434) / _652;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_652 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _434) / _652;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _665 = frontier_phi_31_30_ladder;
    }
    float _668 = _450 ? (cbMtdParam._m0[23u].x / _428) : 5000.0;
    float _669 = isnan(_665) ? _658 : (isnan(_658) ? _665 : min(_658, _665));
    float _670 = isnan(_668) ? _669 : (isnan(_669) ? _668 : min(_669, _668));
    float _674 = cbMtdParam._m0[23u].x * cbMtdParam._m0[17u].z;
    float _678 = ((_670 * _428) + _674) / _674;
    float _683 = cbMtdParam._m0[22u].w - cbMtdParam._m0[27u].y * trunc(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    float _685 = floor(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    vec4 _701 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * (((((_459 + (_670 * _651)) / _678) + 0.5) + _683) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * (((((_462 + (_670 * _652)) / _678) + 0.5) + _685) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[11u].w));
    float _716;
    if (_653)
    {
        _716 = (1.0 - _433) / _651;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_651 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _433) / _651;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _716 = frontier_phi_35_34_ladder;
    }
    float _722;
    if (_660)
    {
        _722 = (1.0 - _434) / _652;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_652 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _434) / _652;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _722 = frontier_phi_39_38_ladder;
    }
    float _724 = isnan(_722) ? _716 : (isnan(_716) ? _722 : min(_716, _722));
    float _725 = isnan(_668) ? _724 : (isnan(_724) ? _668 : min(_724, _668));
    float _732 = ((_725 * _428) + _674) / _674;
    vec4 _752 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * (((((_459 + (_725 * _651)) / _732) + 0.5) + _683) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * (((((_462 + (_725 * _652)) / _732) + 0.5) + _685) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[12u].w));
    float _754 = _752.x;
    float _764 = _307 * 0.1500000059604644775390625;
    float _775 = (_764 * ((_636 - _342) + (((((cbMtdParam._m0[13u].x * _307) * _701.x) - _636) * _307) * _754))) + _342;
    float _776 = (_764 * ((_637 - _344) + (((((cbMtdParam._m0[13u].y * _307) * _701.y) - _637) * _307) * _754))) + _344;
    float _777 = (_764 * ((_638 - _346) + (((((cbMtdParam._m0[13u].z * _307) * _701.z) - _638) * _307) * _754))) + _346;
    vec4 _790 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _794 = _790.z;
    float _797 = (_790.x * 2.0) + (-1.0);
    float _798 = (_790.y * 2.0) + (-1.0);
    float _799 = dot(vec2(_797, _798), vec2(_797, _798));
    float _3939 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _804 = sqrt(1.0 - (isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0))));
    vec4 _828 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _833 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _839 = ((_828.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _841 = (-0.0) - (cbMtdParam._m0[21u].x * ((_828.x * 0.5) + (-0.25)));
    float _842 = fract(_833);
    float _844 = fract(_833 + 0.5);
    vec4 _871 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_842 * _841) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_839 * _842) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _873 = _871.x;
    float _879 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_844 * _841) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_839 * _844) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _873) * abs((_842 * 2.0) + (-1.0))) + _873;
    float _885 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _889 = fract(abs(_885));
    float _898 = sin(cbMtdParam._m0[21u].z);
    float _899 = cos(cbMtdParam._m0[21u].z);
    float _900 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _901 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _931 = abs(cbMtdParam._m0[20u].w * (((_879 - (((_885 >= ((-0.0) - _885)) ? _889 : ((-0.0) - _889)) * cbMtdParam._m0[18u].z)) + texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_901, (-0.0) - _898, _899 * _900) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_901, _899, _900 * _898) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[18u].w));
    float _935 = (((_931 * cbMtdParam._m0[18u].y) - _879) * _931) + _879;
    float _3950 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _936 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
    vec4 _948 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _963 = (cbMtdParam._m0[14u].x * _948.x) * cbMtdParam._m0[19u].x;
    float _964 = (cbMtdParam._m0[14u].y * _948.y) * cbMtdParam._m0[19u].x;
    float _965 = (cbMtdParam._m0[14u].z * _948.z) * cbMtdParam._m0[19u].x;
    float _975 = exp2(log2(_936) * cbMtdParam._m0[20u].x);
    float _988 = fma(_804, _225, fma(_798, _232, _797 * _218));
    float _991 = fma(_804, _226, fma(_798, _233, _797 * _219));
    float _994 = fma(_804, _227, fma(_798, _234, _797 * _220));
    float _998 = inversesqrt(dot(vec3(_988, _991, _994), vec3(_988, _991, _994)));
    float _999 = _998 * _988;
    float _1000 = _998 * _991;
    float _1001 = _998 * _994;
    float _3961 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _1002 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
    float _3972 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _3983 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _3994 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _1021 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1025 = inversesqrt(dot(vec3(_288, _289, _290), vec3(_288, _289, _290)));
    float _1026 = _288 * _1025;
    float _1027 = _289 * _1025;
    float _1028 = _290 * _1025;
    float _1034 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1035 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1053 = fma(_1001, cbSceneParam._m0[5u].z, fma(_1000, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _999));
    float _1056 = fma(_1001, cbSceneParam._m0[6u].z, fma(_1000, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _999));
    float _1059 = fma(_1001, cbSceneParam._m0[7u].z, fma(_1000, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _999));
    uint _1072 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1073 = _1072 + 9u;
    uint _1074 = _1073 + uint(cbMatDynParam._m0[0u].w);
    float _1080 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0)))) * cbInstanceData._m0[_1074].x;
    float _1081 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) * cbInstanceData._m0[_1074].y;
    float _1082 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0)))) * cbInstanceData._m0[_1074].z;
    float _4005 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1083 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _4016 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _1084 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
    float _4027 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1085 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    vec4 _1094 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1034, cbSceneParam._m0[86u].y * _1035));
    float _1097 = _1094.x * TEXCOORD_4;
    float _1098 = dot(vec3(_999, _1000, _1001), vec3(_1026, _1027, _1028));
    float _1101 = _1098 * 2.0;
    float _1105 = (_1101 * _999) - _1026;
    float _1106 = (_1101 * _1000) - _1027;
    float _1107 = (_1101 * _1001) - _1028;
    float _1111 = abs(dot(vec3(_1026, _1027, _1028), vec3(_999, _1000, _1001)));
    float _4038 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _1113 = sqrt(_1002);
    float _1126 = exp2((_1113 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1113 * 3.0));
    float _1158 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1166 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1466;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1193 = fma(_1166, cbModelParam._m0[26u].z, fma(_1162, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1158));
        float _1197 = fma(_1166, cbModelParam._m0[27u].z, fma(_1162, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1158));
        float _1201 = fma(_1166, cbModelParam._m0[28u].z, fma(_1162, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1158));
        float _1224 = _1158 + _999;
        float _1225 = _1162 + _1000;
        float _1226 = _1166 + _1001;
        float _1236 = fma(_1226, cbModelParam._m0[26u].z, fma(_1225, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1224)) - _1193;
        float _1237 = fma(_1226, cbModelParam._m0[27u].z, fma(_1225, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1224)) - _1197;
        float _1238 = fma(_1226, cbModelParam._m0[28u].z, fma(_1225, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1224)) - _1201;
        float _1242 = inversesqrt(dot(vec3(_1236, _1237, _1238), vec3(_1236, _1237, _1238)));
        float _1255 = ((_1242 * _1236) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1193 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1256 = ((_1242 * _1237) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1197 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1257 = ((_1242 * _1238) / cbModelParam._m0[34u].z) + ((((((_1201 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1260 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1255, _1256, _1257), 0.0);
        vec4 _1267 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1255, _1256, _1257), 0.0);
        vec4 _1274 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1255, _1256, _1257), 0.0);
        vec4 _1281 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1255, _1256, _1257), 0.0);
        float _1294 = exp2((_1260.w + (-0.5)) * 20.0) * 2.0;
        float _1295 = _1294 * (_1260.x + (-0.5));
        float _1296 = _1294 * (_1260.y + (-0.5));
        float _1297 = _1294 * (_1260.z + (-0.5));
        float _1304 = exp2((_1267.w + (-0.5)) * 20.0) * 2.0;
        float _1305 = _1304 * (_1267.x + (-0.5));
        float _1306 = _1304 * (_1267.y + (-0.5));
        float _1307 = _1304 * (_1267.z + (-0.5));
        float _1314 = exp2((_1274.w + (-0.5)) * 20.0) * 2.0;
        float _1315 = _1314 * (_1274.x + (-0.5));
        float _1316 = _1314 * (_1274.y + (-0.5));
        float _1317 = _1314 * (_1274.z + (-0.5));
        float _1324 = exp2((_1281.w + (-0.5)) * 20.0) * 2.0;
        float _1325 = _1324 * (_1281.x + (-0.5));
        float _1326 = _1324 * (_1281.y + (-0.5));
        float _1327 = _1324 * (_1281.z + (-0.5));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = _1295 * 0.5;
        float _1332 = _1305 * 0.5;
        float _1333 = _1315 * 0.5;
        float _1334 = dot(vec3(_1331, _1332, _1333), vec3(_1331, _1332, _1333));
        float _1339 = (_1334 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1334);
        float _1348 = (dot(vec3(_999, _1000, _1001), vec3(_1339 * _1331, _1339 * _1332, _1339 * _1333)) + 1.0) * 0.5;
        float _4064 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1358 = sqrt(((_1332 * _1332) + (_1331 * _1331)) + (_1333 * _1333)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4075 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1359 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
        float _1360 = _1359 * 2.0;
        float _1364 = (1.0 - _1359) / (_1359 + 1.0);
        float _4086 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
        float _1374 = ((((1.0 - _1365) * (_1360 + 2.0)) * exp2(log2(isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0))) * (_1360 + 1.0))) + _1365) * _1328;
        float _1375 = _1296 * 0.5;
        float _1376 = _1306 * 0.5;
        float _1377 = _1316 * 0.5;
        float _1378 = dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377));
        float _1383 = (_1378 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1378);
        float _1391 = (dot(vec3(_999, _1000, _1001), vec3(_1383 * _1375, _1383 * _1376, _1383 * _1377)) + 1.0) * 0.5;
        float _4097 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1400 = sqrt(((_1376 * _1376) + (_1375 * _1375)) + (_1377 * _1377)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _4108 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1401 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
        float _1402 = _1401 * 2.0;
        float _1406 = (1.0 - _1401) / (_1401 + 1.0);
        float _4119 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
        float _1416 = ((((1.0 - _1407) * (_1402 + 2.0)) * exp2(log2(isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0))) * (_1402 + 1.0))) + _1407) * _1329;
        float _1417 = _1297 * 0.5;
        float _1418 = _1307 * 0.5;
        float _1419 = _1317 * 0.5;
        float _1420 = dot(vec3(_1417, _1418, _1419), vec3(_1417, _1418, _1419));
        float _1425 = (_1420 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1420);
        float _1433 = (dot(vec3(_999, _1000, _1001), vec3(_1425 * _1417, _1425 * _1418, _1425 * _1419)) + 1.0) * 0.5;
        float _4130 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1442 = sqrt(((_1418 * _1418) + (_1417 * _1417)) + (_1419 * _1419)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _4141 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
        float _1444 = _1443 * 2.0;
        float _1448 = (1.0 - _1443) / (_1443 + 1.0);
        float _4152 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1458 = ((((1.0 - _1449) * (_1444 + 2.0)) * exp2(log2(isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0))) * (_1444 + 1.0))) + _1449) * _1330;
        _1466 = _1297;
        _1468 = _1296;
        _1469 = _1295;
        _1470 = _1307;
        _1471 = _1306;
        _1472 = _1305;
        _1473 = _1317;
        _1474 = _1316;
        _1475 = _1315;
        _1476 = _1330;
        _1477 = _1329;
        _1478 = _1328;
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0)));
        _1480 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0)));
        _1481 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0)));
    }
    else
    {
        _1466 = _1467;
        _1468 = _1467;
        _1469 = _1467;
        _1470 = _1467;
        _1471 = _1467;
        _1472 = _1467;
        _1473 = _1467;
        _1474 = _1467;
        _1475 = _1467;
        _1476 = _1467;
        _1477 = _1467;
        _1478 = _1467;
        _1479 = 0.0;
        _1480 = 0.0;
        _1481 = 0.0;
    }
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1506 = fma(_1166, cbModelParam._m0[30u].z, fma(_1162, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1158));
        float _1510 = fma(_1166, cbModelParam._m0[31u].z, fma(_1162, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1158));
        float _1514 = fma(_1166, cbModelParam._m0[32u].z, fma(_1162, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1158));
        float _1537 = _1158 + _999;
        float _1538 = _1162 + _1000;
        float _1539 = _1166 + _1001;
        float _1549 = fma(_1539, cbModelParam._m0[30u].z, fma(_1538, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1537)) - _1506;
        float _1550 = fma(_1539, cbModelParam._m0[31u].z, fma(_1538, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1537)) - _1510;
        float _1551 = fma(_1539, cbModelParam._m0[32u].z, fma(_1538, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1537)) - _1514;
        float _1555 = inversesqrt(dot(vec3(_1549, _1550, _1551), vec3(_1549, _1550, _1551)));
        float _1568 = ((_1555 * _1549) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1506 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1569 = ((_1555 * _1550) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1510 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1570 = ((_1555 * _1551) / cbModelParam._m0[35u].z) + ((((((_1514 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1586 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1593 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        float _1605 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1606 = _1605 * (_1572.x + (-0.5));
        float _1607 = _1605 * (_1572.y + (-0.5));
        float _1608 = _1605 * (_1572.z + (-0.5));
        float _1615 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1616 = _1615 * (_1579.x + (-0.5));
        float _1617 = _1615 * (_1579.y + (-0.5));
        float _1618 = _1615 * (_1579.z + (-0.5));
        float _1625 = exp2((_1586.w + (-0.5)) * 20.0) * 2.0;
        float _1626 = _1625 * (_1586.x + (-0.5));
        float _1627 = _1625 * (_1586.y + (-0.5));
        float _1628 = _1625 * (_1586.z + (-0.5));
        float _1635 = exp2((_1593.w + (-0.5)) * 20.0) * 2.0;
        float _1636 = _1635 * (_1593.x + (-0.5));
        float _1637 = _1635 * (_1593.y + (-0.5));
        float _1638 = _1635 * (_1593.z + (-0.5));
        float _1639 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1640 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = _1606 * 0.5;
        float _1643 = _1616 * 0.5;
        float _1644 = _1626 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_999, _1000, _1001), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4193 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1639 + 9.9999997473787516355514526367188e-06);
        float _4204 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4215 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))) * (_1669 + 1.0))) + _1674) * _1639;
        float _1684 = _1607 * 0.5;
        float _1685 = _1617 * 0.5;
        float _1686 = _1627 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_999, _1000, _1001), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4226 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1640 + 9.9999997473787516355514526367188e-06);
        float _4237 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4248 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))) * (_1711 + 1.0))) + _1716) * _1640;
        float _1726 = _1608 * 0.5;
        float _1727 = _1618 * 0.5;
        float _1728 = _1628 * 0.5;
        float _1729 = dot(vec3(_1726, _1727, _1728), vec3(_1726, _1727, _1728));
        float _1734 = (_1729 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1729);
        float _1742 = (dot(vec3(_999, _1000, _1001), vec3(_1734 * _1726, _1734 * _1727, _1734 * _1728)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1751 = sqrt(((_1727 * _1727) + (_1726 * _1726)) + (_1728 * _1728)) / (_1641 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1752 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1753 = _1752 * 2.0;
        float _1757 = (1.0 - _1752) / (_1752 + 1.0);
        float _4281 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
        float _1758 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1767 = ((((1.0 - _1758) * (_1753 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1753 + 1.0))) + _1758) * _1641;
        _1775 = _1608;
        _1776 = _1607;
        _1777 = _1606;
        _1778 = _1618;
        _1779 = _1617;
        _1780 = _1616;
        _1781 = _1628;
        _1782 = _1627;
        _1783 = _1626;
        _1784 = _1641;
        _1785 = _1640;
        _1786 = _1639;
        _1787 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1788 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
        _1789 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)));
    }
    else
    {
        _1775 = _1467;
        _1776 = _1467;
        _1777 = _1467;
        _1778 = _1467;
        _1779 = _1467;
        _1780 = _1467;
        _1781 = _1467;
        _1782 = _1467;
        _1783 = _1467;
        _1784 = _1467;
        _1785 = _1467;
        _1786 = _1467;
        _1787 = 0.0;
        _1788 = 0.0;
        _1789 = 0.0;
    }
    float _1799 = (cbModelParam._m0[1u].x * (_1787 - _1479)) + _1479;
    float _1800 = (cbModelParam._m0[1u].x * (_1788 - _1480)) + _1480;
    float _1801 = (cbModelParam._m0[1u].x * (_1789 - _1481)) + _1481;
    float _1822 = fma(_1801, cbSceneParam._m0[89u].z, fma(_1800, cbSceneParam._m0[89u].y, _1799 * cbSceneParam._m0[89u].x));
    float _1825 = fma(_1801, cbSceneParam._m0[90u].z, fma(_1800, cbSceneParam._m0[90u].y, _1799 * cbSceneParam._m0[90u].x));
    float _1828 = fma(_1801, cbSceneParam._m0[91u].z, fma(_1800, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1799));
    float _1843 = _1105 * 0.5;
    float _1844 = _1106 * 0.5;
    float _1845 = _1107 * 0.5;
    float _1846 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1777, _1780, _1783, _1786));
    float _1849 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1776, _1779, _1782, _1785));
    float _1852 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1775, _1778, _1781, _1784));
    float _1886;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1859 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1466, _1470, _1473, _1476));
        float _1863 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1468, _1471, _1474, _1477));
        float _1867 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1469, _1472, _1475, _1478));
        float _1874 = dot(vec4(cbModelParam._m0[39u]), vec4(_1843, _1844, _1845, 1.0));
        _1886 = dot(vec3(isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1874) ? 0.0 : (isnan(0.0) ? _1874 : max(0.0, _1874))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1886 = 1.0;
    }
    float _1897;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1888 = dot(vec4(cbModelParam._m0[40u]), vec4(_1843, _1844, _1845, 1.0));
        _1897 = dot(vec3(isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1888) ? 0.0 : (isnan(0.0) ? _1888 : max(0.0, _1888))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1897 = 1.0;
    }
    float _1901 = (_1897 * cbModelParam._m0[1u].x) + (_1886 * (1.0 - cbModelParam._m0[1u].x));
    float _1911 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1002);
    float _1912 = isnan(_1911) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1911 : min(cbModelParam._m0[25u].z, _1911));
    float _1993;
    float _1995;
    float _1997;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1960 = fma(_1166, cbModelParam._m0[13u].z, fma(_1162, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1158)) + cbModelParam._m0[13u].w;
        float _1964 = fma(_1166, cbModelParam._m0[14u].z, fma(_1162, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1158)) + cbModelParam._m0[14u].w;
        float _1968 = fma(_1166, cbModelParam._m0[15u].z, fma(_1162, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1158)) + cbModelParam._m0[15u].w;
        float _1971 = fma(_1107, cbModelParam._m0[13u].z, fma(_1106, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1105));
        float _1974 = fma(_1107, cbModelParam._m0[14u].z, fma(_1106, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1105));
        float _1977 = fma(_1107, cbModelParam._m0[15u].z, fma(_1106, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1105));
        float _2005;
        if (_1971 > 0.0)
        {
            _2005 = abs((1.0 - _1960) / _1971);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1971 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1960 + 1.0) / _1971);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _2005 = frontier_phi_54_52_ladder;
        }
        float _2173;
        if (_1974 > 0.0)
        {
            _2173 = abs((1.0 - _1964) / _1974);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1964 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _2173 = frontier_phi_63_59_ladder;
        }
        float _2617;
        if (_1977 > 0.0)
        {
            _2617 = abs((1.0 - _1968) / _1977);
        }
        else
        {
            float frontier_phi_75_70_ladder;
            if (_1977 < 0.0)
            {
                frontier_phi_75_70_ladder = abs((_1968 + 1.0) / _1977);
            }
            else
            {
                frontier_phi_75_70_ladder = 5000.0;
            }
            _2617 = frontier_phi_75_70_ladder;
        }
        float _2619 = isnan(_2173) ? _2005 : (isnan(_2005) ? _2173 : min(_2005, _2173));
        float _2620 = isnan(_2617) ? _2619 : (isnan(_2619) ? _2617 : min(_2619, _2617));
        float _2624 = (_2620 * _1971) + _1960;
        float _2625 = (_2620 * _1974) + _1964;
        float _2626 = (_2620 * _1977) + _1968;
        float _2627 = _2620 * 9.9999997473787516355514526367188e-05;
        float _2629 = (-1.0) - _2627;
        float _2631 = _2627 + 1.0;
        float frontier_phi_53_75_ladder;
        float frontier_phi_53_75_ladder_1;
        float frontier_phi_53_75_ladder_2;
        if ((_2626 > _2631) || ((_2626 < _2629) || ((_2625 > _2631) || ((_2625 < _2629) || ((_2624 < _2629) || (_2624 > _2631))))))
        {
            frontier_phi_53_75_ladder = 0.0;
            frontier_phi_53_75_ladder_1 = 0.0;
            frontier_phi_53_75_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2886 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2626, cbModelParam._m0[9u].z, fma(_2625, cbModelParam._m0[9u].y, _2624 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2626, cbModelParam._m0[10u].z, fma(_2625, cbModelParam._m0[10u].y, _2624 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2626, cbModelParam._m0[11u].z, fma(_2625, cbModelParam._m0[11u].y, _2624 * cbModelParam._m0[11u].x))), _1912);
            frontier_phi_53_75_ladder = _2886.z * cbModelParam._m0[1u].y;
            frontier_phi_53_75_ladder_1 = _2886.y * cbModelParam._m0[1u].y;
            frontier_phi_53_75_ladder_2 = _2886.x * cbModelParam._m0[1u].y;
        }
        _1993 = frontier_phi_53_75_ladder_2;
        _1995 = frontier_phi_53_75_ladder_1;
        _1997 = frontier_phi_53_75_ladder;
    }
    else
    {
        vec4 _1981 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1105, _1106, _1107), _1912);
        _1993 = _1981.x * cbModelParam._m0[1u].y;
        _1995 = _1981.y * cbModelParam._m0[1u].y;
        _1997 = _1981.z * cbModelParam._m0[1u].y;
    }
    float _2001 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1002);
    float _2002 = isnan(_2001) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2001 : min(cbModelParam._m0[25u].w, _2001));
    float _2090;
    float _2092;
    float _2094;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2054 = fma(_1166, cbModelParam._m0[21u].z, fma(_1162, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1158)) + cbModelParam._m0[21u].w;
        float _2058 = fma(_1166, cbModelParam._m0[22u].z, fma(_1162, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1158)) + cbModelParam._m0[22u].w;
        float _2062 = fma(_1166, cbModelParam._m0[23u].z, fma(_1162, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1158)) + cbModelParam._m0[23u].w;
        float _2065 = fma(_1107, cbModelParam._m0[21u].z, fma(_1106, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1105));
        float _2068 = fma(_1107, cbModelParam._m0[22u].z, fma(_1106, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1105));
        float _2071 = fma(_1107, cbModelParam._m0[23u].z, fma(_1106, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1105));
        float _2178;
        if (_2065 > 0.0)
        {
            _2178 = abs((1.0 - _2054) / _2065);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_2054 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _2178 = frontier_phi_65_61_ladder;
        }
        float _2644;
        if (_2068 > 0.0)
        {
            _2644 = abs((1.0 - _2058) / _2068);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_2058 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _2644 = frontier_phi_77_72_ladder;
        }
        float _3015;
        if (_2071 > 0.0)
        {
            _3015 = abs((1.0 - _2062) / _2071);
        }
        else
        {
            float frontier_phi_89_84_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_89_84_ladder = abs((_2062 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_89_84_ladder = 5000.0;
            }
            _3015 = frontier_phi_89_84_ladder;
        }
        float _3017 = isnan(_2644) ? _2178 : (isnan(_2178) ? _2644 : min(_2178, _2644));
        float _3018 = isnan(_3015) ? _3017 : (isnan(_3017) ? _3015 : min(_3017, _3015));
        float _3022 = (_3018 * _2065) + _2054;
        float _3023 = (_3018 * _2068) + _2058;
        float _3024 = (_3018 * _2071) + _2062;
        float _3025 = _3018 * 9.9999997473787516355514526367188e-05;
        float _3026 = (-1.0) - _3025;
        float _3028 = _3025 + 1.0;
        float frontier_phi_62_89_ladder;
        float frontier_phi_62_89_ladder_1;
        float frontier_phi_62_89_ladder_2;
        if ((_3024 > _3028) || ((_3024 < _3026) || ((_3023 > _3028) || ((_3023 < _3026) || ((_3022 < _3026) || (_3022 > _3028))))))
        {
            frontier_phi_62_89_ladder = 0.0;
            frontier_phi_62_89_ladder_1 = 0.0;
            frontier_phi_62_89_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3145 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3024, cbModelParam._m0[17u].z, fma(_3023, cbModelParam._m0[17u].y, _3022 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3024, cbModelParam._m0[18u].z, fma(_3023, cbModelParam._m0[18u].y, _3022 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3024, cbModelParam._m0[19u].z, fma(_3023, cbModelParam._m0[19u].y, _3022 * cbModelParam._m0[19u].x))), _2002);
            frontier_phi_62_89_ladder = _3145.z * cbModelParam._m0[1u].z;
            frontier_phi_62_89_ladder_1 = _3145.y * cbModelParam._m0[1u].z;
            frontier_phi_62_89_ladder_2 = _3145.x * cbModelParam._m0[1u].z;
        }
        _2090 = frontier_phi_62_89_ladder_2;
        _2092 = frontier_phi_62_89_ladder_1;
        _2094 = frontier_phi_62_89_ladder;
    }
    else
    {
        vec4 _2074 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1105, _1106, _1107), _2002);
        _2090 = _2074.x * cbModelParam._m0[1u].z;
        _2092 = _2074.y * cbModelParam._m0[1u].z;
        _2094 = _2074.z * cbModelParam._m0[1u].z;
    }
    float _2106 = ((((1.0 - _1126) * ((_1113 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1126 * _1113)) * _1097;
    float _2107 = _2106 * ((cbModelParam._m0[1u].w * (_2090 - _1993)) + _1993);
    float _2108 = _2106 * ((cbModelParam._m0[1u].w * (_2092 - _1995)) + _1995);
    float _2109 = _2106 * ((cbModelParam._m0[1u].w * (_2094 - _1997)) + _1997);
    float _2112 = fma(_2109, cbSceneParam._m0[89u].z, fma(_2108, cbSceneParam._m0[89u].y, _2107 * cbSceneParam._m0[89u].x));
    float _2115 = fma(_2109, cbSceneParam._m0[90u].z, fma(_2108, cbSceneParam._m0[90u].y, _2107 * cbSceneParam._m0[90u].x));
    float _2118 = fma(_2109, cbSceneParam._m0[91u].z, fma(_2108, cbSceneParam._m0[91u].y, _2107 * cbSceneParam._m0[91u].x));
    float _2152 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2156 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2160 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2164 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2165 = _2152 / _2164;
    float _2166 = _2156 / _2164;
    float _2167 = _2160 / _2164;
    float _2314;
    float _2315;
    float _2316;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2194 = ((uint(_2167 > cbSceneParam._m0[59u].y) + uint(_2167 > cbSceneParam._m0[59u].x)) + uint(_2167 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2195 = _2194 + 43u;
        uint _2203 = _2194 + 44u;
        uint _2211 = _2194 + 45u;
        uint _2219 = _2194 + 46u;
        float _2230 = fma(_2164, cbSceneParam._m0[_2195].w, fma(_2160, cbSceneParam._m0[_2195].z, fma(_2156, cbSceneParam._m0[_2195].y, _2152 * cbSceneParam._m0[_2195].x)));
        float _2234 = fma(_2164, cbSceneParam._m0[_2203].w, fma(_2160, cbSceneParam._m0[_2203].z, fma(_2156, cbSceneParam._m0[_2203].y, _2152 * cbSceneParam._m0[_2203].x)));
        float _2242 = fma(_2164, cbSceneParam._m0[_2219].w, fma(_2160, cbSceneParam._m0[_2219].z, fma(_2156, cbSceneParam._m0[_2219].y, _2152 * cbSceneParam._m0[_2219].x)));
        float _2247 = cbSceneParam._m0[33u].z * _2242;
        float _2249 = cbSceneParam._m0[33u].w * _2242;
        float _2252 = fma(_2164, cbSceneParam._m0[_2211].w, fma(_2160, cbSceneParam._m0[_2211].z, fma(_2156, cbSceneParam._m0[_2211].y, _2152 * cbSceneParam._m0[_2211].x))) / _2242;
        float _2300 = (cbSceneParam._m0[33u].x - sqrt(((_2166 * _2166) + (_2165 * _2165)) + (_2167 * _2167))) * cbSceneParam._m0[33u].y;
        float _4407 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
        float _2307 = (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2247 + _2230) / _2242, (_2249 + _2234) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2249 + _2230) / _2242, (_2234 - _2247) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2230 - _2247) / _2242, (_2234 - _2249) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2230 - _2249) / _2242, (_2247 + _2234) / _2242), _2252), 0.0)).x), vec4(0.25)));
        _2314 = 1.0 - (_2307 * cbSceneParam._m0[34u].x);
        _2315 = 1.0 - (_2307 * cbSceneParam._m0[34u].y);
        _2316 = 1.0 - (_2307 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2314 = 1.0;
        _2315 = 1.0;
        _2316 = 1.0;
    }
    float _2380;
    float _2382;
    float _2384;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2368 = fma(_2164, cbSceneParam._m0[63u].w, fma(_2160, cbSceneParam._m0[63u].z, fma(_2156, cbSceneParam._m0[63u].y, _2152 * cbSceneParam._m0[63u].x)));
        float _2369 = fma(_2164, cbSceneParam._m0[60u].w, fma(_2160, cbSceneParam._m0[60u].z, fma(_2156, cbSceneParam._m0[60u].y, _2152 * cbSceneParam._m0[60u].x))) / _2368;
        float _2370 = fma(_2164, cbSceneParam._m0[61u].w, fma(_2160, cbSceneParam._m0[61u].z, fma(_2156, cbSceneParam._m0[61u].y, _2152 * cbSceneParam._m0[61u].x))) / _2368;
        float frontier_phi_74_73_ladder;
        float frontier_phi_74_73_ladder_1;
        float frontier_phi_74_73_ladder_2;
        if ((((_2369 >= cbSceneParam._m0[64u].x) && (_2370 >= cbSceneParam._m0[64u].y)) && (_2369 <= cbSceneParam._m0[64u].z)) && (_2370 <= cbSceneParam._m0[64u].w))
        {
            float _2657 = fma(_2164, cbSceneParam._m0[62u].w, fma(_2160, cbSceneParam._m0[62u].z, fma(_2156, cbSceneParam._m0[62u].y, _2152 * cbSceneParam._m0[62u].x))) / _2368;
            float _2661 = isnan(cbSceneParam._m0[41u].w) ? _2657 : (isnan(_2657) ? cbSceneParam._m0[41u].w : max(_2657, cbSceneParam._m0[41u].w));
            float _2704 = (cbSceneParam._m0[33u].x - sqrt(((_2166 * _2166) + (_2165 * _2165)) + (_2167 * _2167))) * cbSceneParam._m0[33u].y;
            float _4423 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
            float _2711 = (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2369, cbSceneParam._m0[33u].w + _2370), _2661), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2369, _2370 - cbSceneParam._m0[33u].z), _2661), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2369 - cbSceneParam._m0[33u].z, _2370 - cbSceneParam._m0[33u].w), _2661), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2369 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2370), _2661), 0.0)).x), vec4(0.25)));
            float _2715 = 1.0 - (_2711 * cbSceneParam._m0[34u].x);
            float _2716 = 1.0 - (_2711 * cbSceneParam._m0[34u].y);
            float _2717 = 1.0 - (_2711 * cbSceneParam._m0[34u].z);
            frontier_phi_74_73_ladder = isnan(_2715) ? _2314 : (isnan(_2314) ? _2715 : min(_2314, _2715));
            frontier_phi_74_73_ladder_1 = isnan(_2716) ? _2315 : (isnan(_2315) ? _2716 : min(_2315, _2716));
            frontier_phi_74_73_ladder_2 = isnan(_2717) ? _2316 : (isnan(_2316) ? _2717 : min(_2316, _2717));
        }
        else
        {
            frontier_phi_74_73_ladder = _2314;
            frontier_phi_74_73_ladder_1 = _2315;
            frontier_phi_74_73_ladder_2 = _2316;
        }
        _2380 = frontier_phi_74_73_ladder;
        _2382 = frontier_phi_74_73_ladder_1;
        _2384 = frontier_phi_74_73_ladder_2;
    }
    else
    {
        _2380 = _2314;
        _2382 = _2315;
        _2384 = _2316;
    }
    uvec4 _2389 = floatBitsToUint(cbInstanceData._m0[_1072 + 5u]);
    uint _2391 = _2389.x * 14u;
    uint _2392 = _2391 + 13u;
    float _2397 = _1097 + (-1.0);
    float _2400 = (cbLight._m0[_2392].x * _2397) + 1.0;
    float _2401 = (cbLight._m0[_2392].y * _2397) + 1.0;
    uint _2402 = _2391 + 5u;
    float _2408 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
    uint _2412 = _2391 + 4u;
    float _2421 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
    uint _2425 = _2391 | 1u;
    float _2436 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_999, _1000, _1001));
    float _2439 = dot(vec3(cbLight._m0[_2425].xyz), vec3(_999, _1000, _1001));
    float _4459 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
    float _4470 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
    float _2444 = (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * 0.3183098733425140380859375;
    float _2446 = (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * 0.3183098733425140380859375;
    float _2453 = ((cbLight._m0[_2402].x * _2408) * _2446) + (((cbLight._m0[_2412].x * _2380) * _2421) * _2444);
    float _2454 = ((_2408 * cbLight._m0[_2402].y) * _2446) + (((cbLight._m0[_2412].y * _2382) * _2421) * _2444);
    float _2455 = ((_2408 * cbLight._m0[_2402].z) * _2446) + (((cbLight._m0[_2412].z * _2384) * _2421) * _2444);
    uint _2457 = _2391 + 8u;
    float _2470 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2391].w)) * _1002) * 0.949999988079071044921875);
    float _2471 = _2470 * _2470;
    float _2472 = cbLight._m0[_2391].x + _1026;
    float _2473 = cbLight._m0[_2391].y + _1027;
    float _2474 = cbLight._m0[_2391].z + _1028;
    float _2478 = inversesqrt(dot(vec3(_2472, _2473, _2474), vec3(_2472, _2473, _2474)));
    float _2479 = _2478 * _2472;
    float _2480 = _2478 * _2473;
    float _2481 = _2478 * _2474;
    float _2482 = dot(vec3(_999, _1000, _1001), vec3(cbLight._m0[_2391].xyz));
    float _4481 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
    float _2485 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
    float _4492 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _2486 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
    float _2487 = dot(vec3(_999, _1000, _1001), vec3(_2479, _2480, _2481));
    float _4503 = isnan(0.0) ? _2487 : (isnan(_2487) ? 0.0 : max(_2487, 0.0));
    float _2490 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
    float _2491 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_2479, _2480, _2481));
    float _4514 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2495 = _2471 * _2471;
    float _2499 = ((_2490 * _2490) * (_2495 + (-1.0))) + 1.0;
    float _2510 = (exp2(log2(1.0 - (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2511 = 1.0 - _2471;
    float _2522 = (0.5 / (((_2486 * ((_2485 * _2511) + _2471)) + 9.9999999392252902907785028219223e-09) + (((_2486 * _2511) + _2471) * _2485))) * _2485;
    float _4525 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0));
    float _2524 = (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0))) * (_2495 / ((_2499 * _2499) * 3.141590118408203125));
    uint _2538 = _2391 + 9u;
    float _2549 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2425].w)) * _1002) * 0.949999988079071044921875);
    float _2550 = _2549 * _2549;
    float _2551 = cbLight._m0[_2425].x + _1026;
    float _2552 = cbLight._m0[_2425].y + _1027;
    float _2553 = cbLight._m0[_2425].z + _1028;
    float _2557 = inversesqrt(dot(vec3(_2551, _2552, _2553), vec3(_2551, _2552, _2553)));
    float _2558 = _2557 * _2551;
    float _2559 = _2557 * _2552;
    float _2560 = _2557 * _2553;
    float _2561 = dot(vec3(_999, _1000, _1001), vec3(cbLight._m0[_2425].xyz));
    float _4536 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
    float _2564 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
    float _2565 = dot(vec3(_999, _1000, _1001), vec3(_2558, _2559, _2560));
    float _4547 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2568 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
    float _2569 = dot(vec3(cbLight._m0[_2425].xyz), vec3(_2558, _2559, _2560));
    float _4558 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2573 = _2550 * _2550;
    float _2577 = ((_2568 * _2568) * (_2573 + (-1.0))) + 1.0;
    float _2586 = (exp2(log2(1.0 - (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2587 = 1.0 - _2550;
    float _2597 = (0.5 / (((_2486 * ((_2564 * _2587) + _2550)) + 9.9999999392252902907785028219223e-09) + (((_2486 * _2587) + _2550) * _2564))) * _2564;
    float _4569 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
    float _2599 = (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (_2573 / ((_2577 * _2577) * 3.141590118408203125));
    float _2609 = (((_2586 * cbLight._m0[_2538].x) * _2599) * _2408) + ((((cbLight._m0[_2457].x * _2380) * _2510) * _2524) * _2421);
    float _2610 = (((_2586 * cbLight._m0[_2538].y) * _2599) * _2408) + ((((cbLight._m0[_2457].y * _2382) * _2510) * _2524) * _2421);
    float _2611 = (((_2586 * cbLight._m0[_2538].z) * _2599) * _2408) + ((((cbLight._m0[_2457].z * _2384) * _2510) * _2524) * _2421);
    float _2774;
    float _2776;
    float _2778;
    float _2780;
    float _2782;
    float _2784;
    if (_2389.y == 0u)
    {
        uvec4 _2729 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2730 = _2729.x;
        uint _2741 = uint((float(_2729.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1035) / _2730))) + floor(float(uint(cbSceneParam._m0[85u].x * _1034) / _2730)));
        float _2751 = (log2(_2167 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2752 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
        uint _2755 = uint(isnan(14.0) ? _2752 : (isnan(_2752) ? 14.0 : min(_2752, 14.0)));
        uvec4 _2760 = texelFetch(g_lightClusterGridBuffer, int(((_2755 << 2u) + (_2741 << 6u)) >> 2u));
        uint _2761 = _2760.x;
        uint _2762 = _2729.z;
        float _2895;
        float _2897;
        float _2899;
        float _2901;
        float _2903;
        float _2905;
        if (((((1u << ((_2762 >> 4u) & 15u)) + 4294967295u) & _2761) == 0u) || ((_2762 & 240u) == 0u))
        {
            _2895 = 0.0;
            _2897 = 0.0;
            _2899 = 0.0;
            _2901 = 0.0;
            _2903 = 0.0;
            _2905 = 0.0;
        }
        else
        {
            float _2896;
            float _2898;
            float _2900;
            float _2902;
            float _2904;
            float _2906;
            float _3073 = 0.0;
            float _3074 = 0.0;
            float _3075 = 0.0;
            float _3076 = 0.0;
            float _3077 = 0.0;
            float _3078 = 0.0;
            uint _3079 = 0u;
            uint _3088;
            bool _3089;
            for (;;)
            {
                _3088 = texelFetch(g_lightClassification, int((((_2755 << 5u) + (_2741 << 9u)) + (_3079 << 2u)) >> 2u)).x;
                _3089 = _3088 == 0u;
                float frontier_phi_98_pred;
                float frontier_phi_98_pred_1;
                float frontier_phi_98_pred_2;
                float frontier_phi_98_pred_3;
                float frontier_phi_98_pred_4;
                float frontier_phi_98_pred_5;
                if (_3089)
                {
                    frontier_phi_98_pred = _3073;
                    frontier_phi_98_pred_1 = _3074;
                    frontier_phi_98_pred_2 = _3078;
                    frontier_phi_98_pred_3 = _3077;
                    frontier_phi_98_pred_4 = _3076;
                    frontier_phi_98_pred_5 = _3075;
                }
                else
                {
                    float _3218;
                    float _3219;
                    float _3220;
                    float _3221;
                    float _3222;
                    float _3223;
                    uint _3224;
                    _3218 = _3073;
                    _3219 = _3074;
                    _3220 = _3075;
                    _3221 = _3076;
                    _3222 = _3077;
                    _3223 = _3078;
                    _3224 = _3088;
                    float _3150;
                    float _3151;
                    float _3152;
                    float _3153;
                    float _3154;
                    float _3155;
                    for (;;)
                    {
                        uint _3228 = uint(findLSB(_3224)) + (_3079 << 5u);
                        uint _3225 = (_3224 + 4294967295u) & _3224;
                        uint _3230 = _3228 * 48u;
                        vec4 _3244 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3230)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 3u)).x));
                        uint _3250 = (_3228 * 48u) + 4u;
                        vec4 _3263 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3250)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 3u)).x));
                        uint _3269 = (_3228 * 48u) + 8u;
                        vec3 _3280 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3269)).x, texelFetch(g_PointLightRenderingBuffer, int(_3269 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3269 + 2u)).x));
                        float _3284 = _3244.x - _2165;
                        float _3285 = _3244.y - _2166;
                        float _3286 = _3244.z - _2167;
                        float _3287 = dot(vec3(_3284, _3285, _3286), vec3(_3284, _3285, _3286));
                        float _3290 = inversesqrt(_3287);
                        float _3291 = _3290 * _3284;
                        float _3292 = _3290 * _3285;
                        float _3293 = _3290 * _3286;
                        float _3294 = dot(vec3(_1053, _1056, _1059), vec3(_3291, _3292, _3293));
                        float _3299 = 1.0 - (_3287 * _3244.w);
                        float _4590 = isnan(0.0) ? _3299 : (isnan(_3299) ? 0.0 : max(_3299, 0.0));
                        float _3300 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
                        float _3301 = sqrt(_3287) * _3263.w;
                        float _3304 = 1.39999997615814208984375 / (_3301 + 1.39999997615814208984375);
                        float _3305 = _3304 * _3304;
                        float _3308 = ((1.0 - _3305) * _3294) + _3305;
                        float _3311 = _3301 * _3301;
                        float _3315 = ((isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0))) * _3300) / ((_3311 * 0.699999988079071044921875) + 1.0);
                        float _3319 = (-0.0) - _2165;
                        float _3320 = (-0.0) - _2166;
                        float _3321 = (-0.0) - _2167;
                        float _3325 = inversesqrt(dot(vec3(_3319, _3320, _3321), vec3(_3319, _3320, _3321)));
                        float _3326 = _3325 * _3319;
                        float _3327 = _3325 * _3320;
                        float _3328 = _3325 * _3321;
                        float _3335 = exp2(log2(1.0 / ((_3311 * 3.5) + 5.0)) * 0.25);
                        float _3336 = 1.0 - _1113;
                        float _3343 = sqrt(1.0 - ((1.0 - (_3336 * _3336)) * (1.0 - (_3335 * _3335))));
                        float _3344 = _3343 * _3343;
                        float _3345 = _3344 * _3344;
                        float _3346 = _3326 + _3291;
                        float _3347 = _3327 + _3292;
                        float _3348 = _3328 + _3293;
                        float _3352 = inversesqrt(dot(vec3(_3346, _3347, _3348), vec3(_3346, _3347, _3348)));
                        float _3356 = dot(vec3(_1053, _1056, _1059), vec3(_3326, _3327, _3328));
                        float _4606 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
                        float _3359 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
                        float _3360 = dot(vec3(_1053, _1056, _1059), vec3(_3352 * _3346, _3352 * _3347, _3352 * _3348));
                        float _4617 = isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0));
                        float _3363 = isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0));
                        float _3367 = ((_3363 * _3363) * (_3345 + (-1.0))) + 1.0;
                        float _3368 = _3304 * _3344;
                        float _3369 = _3368 * _3368;
                        float _3372 = ((1.0 - _3369) * _3294) + _3369;
                        float _4628 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                        float _3373 = isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0));
                        float _3374 = 1.0 - _3344;
                        float _3384 = (0.5 / (((_3373 * ((_3359 * _3374) + _3344)) + 9.9999999392252902907785028219223e-09) + (((_3373 * _3374) + _3344) * _3359))) * _3373;
                        float _4639 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3395 = (((_3345 * 3.1415927410125732421875) * (isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0)))) / ((_3367 * _3367) * ((_3311 * 2.1991131305694580078125) + 3.141590118408203125))) * _3300;
                        _3153 = (_3315 * _3263.x) + _3221;
                        _3154 = (_3315 * _3263.y) + _3222;
                        _3155 = (_3315 * _3263.z) + _3223;
                        _3150 = (_3395 * _3280.x) + _3218;
                        _3151 = (_3395 * _3280.y) + _3219;
                        _3152 = (_3395 * _3280.z) + _3220;
                        if (_3225 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3218 = _3150;
                            _3219 = _3151;
                            _3220 = _3152;
                            _3221 = _3153;
                            _3222 = _3154;
                            _3223 = _3155;
                            _3224 = _3225;
                        }
                    }
                    frontier_phi_98_pred = _3150;
                    frontier_phi_98_pred_1 = _3151;
                    frontier_phi_98_pred_2 = _3155;
                    frontier_phi_98_pred_3 = _3154;
                    frontier_phi_98_pred_4 = _3153;
                    frontier_phi_98_pred_5 = _3152;
                }
                _2896 = frontier_phi_98_pred;
                _2898 = frontier_phi_98_pred_1;
                _2906 = frontier_phi_98_pred_2;
                _2904 = frontier_phi_98_pred_3;
                _2902 = frontier_phi_98_pred_4;
                _2900 = frontier_phi_98_pred_5;
                uint _3080 = _3079 + 1u;
                if (_3080 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3073 = _2896;
                    _3074 = _2898;
                    _3075 = _2900;
                    _3076 = _2902;
                    _3077 = _2904;
                    _3078 = _2906;
                    _3079 = _3080;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2895 = _2896;
            _2897 = _2898;
            _2899 = _2900;
            _2901 = _2902;
            _2903 = _2904;
            _2905 = _2906;
        }
        uvec4 _2909 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2910 = _2909.z;
        uint _2912 = (_2910 >> 8u) & 15u;
        float _3041;
        float _3043;
        float _3045;
        float _3047;
        float _3049;
        float _3051;
        if (((4294967295u << _2912) & _2761) == 0u)
        {
            _3041 = _2895;
            _3043 = _2897;
            _3045 = _2899;
            _3047 = _2901;
            _3049 = _2903;
            _3051 = _2905;
        }
        else
        {
            float _3066 = inversesqrt(dot(vec3(_2165, _2166, _2167), vec3(_2165, _2166, _2167)));
            float _3067 = _3066 * _2165;
            float _3068 = _3066 * _2166;
            float _3069 = _3066 * _2167;
            float frontier_phi_91_92_ladder;
            float frontier_phi_91_92_ladder_1;
            float frontier_phi_91_92_ladder_2;
            float frontier_phi_91_92_ladder_3;
            float frontier_phi_91_92_ladder_4;
            float frontier_phi_91_92_ladder_5;
            if (_2912 < ((_2910 >> 12u) & 15u))
            {
                float _3042;
                float _3044;
                float _3046;
                float _3048;
                float _3050;
                float _3052;
                float _3201 = _2895;
                float _3202 = _2897;
                float _3203 = _2899;
                float _3204 = _2901;
                float _3205 = _2903;
                float _3206 = _2905;
                uint _3207 = _2912;
                uint _3216;
                bool _3217;
                for (;;)
                {
                    _3216 = texelFetch(g_lightClassification, int((((_2755 << 5u) + (_2741 << 9u)) + (_3207 << 2u)) >> 2u)).x;
                    _3217 = _3216 == 0u;
                    float frontier_phi_104_pred;
                    float frontier_phi_104_pred_1;
                    float frontier_phi_104_pred_2;
                    float frontier_phi_104_pred_3;
                    float frontier_phi_104_pred_4;
                    float frontier_phi_104_pred_5;
                    if (_3217)
                    {
                        frontier_phi_104_pred = _3206;
                        frontier_phi_104_pred_1 = _3205;
                        frontier_phi_104_pred_2 = _3204;
                        frontier_phi_104_pred_3 = _3203;
                        frontier_phi_104_pred_4 = _3202;
                        frontier_phi_104_pred_5 = _3201;
                    }
                    else
                    {
                        float _3400;
                        float _3401;
                        float _3402;
                        float _3403;
                        float _3404;
                        float _3405;
                        float _3694;
                        float _3695;
                        float _3696;
                        float _3697;
                        float _3698;
                        float _3699;
                        float _3413 = _3201;
                        float _3414 = _3202;
                        float _3415 = _3203;
                        float _3416 = _3204;
                        float _3417 = _3205;
                        float _3418 = _3206;
                        uint _3419 = _3216;
                        uint _3420;
                        vec4 _3445;
                        float _3446;
                        vec4 _3461;
                        vec3 _3473;
                        vec4 _3489;
                        vec4 _3504;
                        float _3550;
                        bool _3551;
                        for (;;)
                        {
                            uint _3430 = ((_3207 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3419));
                            _3420 = (_3419 + 4294967295u) & _3419;
                            uint _3432 = _3430 * 40u;
                            _3445 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3432)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 3u)).x));
                            _3446 = _3445.w;
                            uint _3448 = (_3430 * 40u) + 4u;
                            _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            uint _3463 = (_3430 * 40u) + 8u;
                            _3473 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x));
                            uint _3476 = (_3430 * 40u) + 16u;
                            _3489 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3476)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 3u)).x));
                            uint _3491 = (_3430 * 40u) + 20u;
                            _3504 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3491)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 3u)).x));
                            uint _3506 = (_3430 * 40u) + 24u;
                            vec4 _3519 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 3u)).x));
                            uint _3525 = (_3430 * 40u) + 28u;
                            vec4 _3538 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3525)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3525 + 3u)).x));
                            _3550 = fma(_2167, _3538.z, fma(_2166, _3538.y, _3538.x * _2165)) + _3538.w;
                            _3551 = !((fma(_2167, _3519.z, fma(_2166, _3519.y, _3519.x * _2165)) + _3519.w) <= 0.0);
                            float frontier_phi_110_pred;
                            float frontier_phi_110_pred_1;
                            float frontier_phi_110_pred_2;
                            float frontier_phi_110_pred_3;
                            float frontier_phi_110_pred_4;
                            float frontier_phi_110_pred_5;
                            if (_3551)
                            {
                                float _3578 = _3445.x - _2165;
                                float _3579 = _3445.y - _2166;
                                float _3580 = _3445.z - _2167;
                                float _3581 = dot(vec3(_3578, _3579, _3580), vec3(_3578, _3579, _3580));
                                float _3584 = inversesqrt(_3581);
                                float _3585 = _3584 * _3578;
                                float _3586 = _3584 * _3579;
                                float _3587 = _3584 * _3580;
                                float _3591 = 1.0 - (_3581 / (_3446 * _3446));
                                float _4650 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0));
                                float _3592 = isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0));
                                float _3596 = sqrt(_3581) * _3461.w;
                                float _3598 = 1.39999997615814208984375 / (_3596 + 1.39999997615814208984375);
                                float _3599 = _3598 * _3598;
                                float _3602 = ((1.0 - _3599) * dot(vec3(_3585, _3586, _3587), vec3(_1053, _1056, _1059))) + _3599;
                                float _3605 = _3596 * _3596;
                                float _3609 = (fma(_2167, _3489.z, fma(_2166, _3489.y, _3489.x * _2165)) + _3489.w) / _3550;
                                float _3610 = (fma(_2167, _3504.z, fma(_2166, _3504.y, _3504.x * _2165)) + _3504.w) / _3550;
                                float _3614 = 1.0 - dot(vec2(_3609, _3610), vec2(_3609, _3610));
                                float _4666 = isnan(0.0) ? _3614 : (isnan(_3614) ? 0.0 : max(_3614, 0.0));
                                float _3615 = isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0));
                                float _3616 = _3615 * (((isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0))) * _3592) / ((_3605 * 0.699999988079071044921875) + 1.0));
                                float _3628 = exp2(log2(1.0 / ((_3605 * 3.5) + 5.0)) * 0.25);
                                float _3629 = 1.0 - _1113;
                                float _3636 = sqrt(1.0 - ((1.0 - (_3629 * _3629)) * (1.0 - (_3628 * _3628))));
                                float _3637 = _3636 * _3636;
                                float _3638 = _3637 * _3637;
                                float _3639 = _3585 - _3067;
                                float _3640 = _3586 - _3068;
                                float _3641 = _3587 - _3069;
                                float _3645 = inversesqrt(dot(vec3(_3639, _3640, _3641), vec3(_3639, _3640, _3641)));
                                float _3649 = dot(vec3(_1053, _1056, _1059), vec3((-0.0) - _3067, (-0.0) - _3068, (-0.0) - _3069));
                                float _4677 = isnan(0.0) ? _3649 : (isnan(_3649) ? 0.0 : max(_3649, 0.0));
                                float _3652 = isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0));
                                float _3653 = dot(vec3(_1053, _1056, _1059), vec3(_3645 * _3639, _3645 * _3640, _3645 * _3641));
                                float _4688 = isnan(0.0) ? _3653 : (isnan(_3653) ? 0.0 : max(_3653, 0.0));
                                float _3656 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
                                float _3660 = ((_3656 * _3656) * (_3638 + (-1.0))) + 1.0;
                                float _3661 = _3598 * _3637;
                                float _3662 = _3661 * _3661;
                                float _3668 = ((1.0 - _3662) * dot(vec3(_1053, _1056, _1059), vec3(_3585, _3586, _3587))) + _3662;
                                float _4699 = isnan(0.0) ? _3668 : (isnan(_3668) ? 0.0 : max(_3668, 0.0));
                                float _3669 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
                                float _3670 = 1.0 - _3637;
                                float _3680 = (0.5 / (((_3669 * ((_3652 * _3670) + _3637)) + 9.9999999392252902907785028219223e-09) + (((_3669 * _3670) + _3637) * _3652))) * _3669;
                                float _4710 = isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0));
                                float _3690 = (_3615 * _3592) * (((_3638 * 3.1415927410125732421875) * (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0)))) / ((_3660 * _3660) * ((_3605 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_110_pred = _3690 * _3473.z;
                                frontier_phi_110_pred_1 = _3616 * _3461.z;
                                frontier_phi_110_pred_2 = _3616 * _3461.y;
                                frontier_phi_110_pred_3 = _3616 * _3461.x;
                                frontier_phi_110_pred_4 = _3690 * _3473.y;
                                frontier_phi_110_pred_5 = _3690 * _3473.x;
                            }
                            else
                            {
                                frontier_phi_110_pred = 0.0;
                                frontier_phi_110_pred_1 = 0.0;
                                frontier_phi_110_pred_2 = 0.0;
                                frontier_phi_110_pred_3 = 0.0;
                                frontier_phi_110_pred_4 = 0.0;
                                frontier_phi_110_pred_5 = 0.0;
                            }
                            _3696 = frontier_phi_110_pred;
                            _3699 = frontier_phi_110_pred_1;
                            _3698 = frontier_phi_110_pred_2;
                            _3697 = frontier_phi_110_pred_3;
                            _3695 = frontier_phi_110_pred_4;
                            _3694 = frontier_phi_110_pred_5;
                            _3403 = _3697 + _3416;
                            _3404 = _3698 + _3417;
                            _3405 = _3699 + _3418;
                            _3400 = _3694 + _3413;
                            _3401 = _3695 + _3414;
                            _3402 = _3696 + _3415;
                            if (_3420 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3413 = _3400;
                                _3414 = _3401;
                                _3415 = _3402;
                                _3416 = _3403;
                                _3417 = _3404;
                                _3418 = _3405;
                                _3419 = _3420;
                                continue;
                            }
                        }
                        frontier_phi_104_pred = _3405;
                        frontier_phi_104_pred_1 = _3404;
                        frontier_phi_104_pred_2 = _3403;
                        frontier_phi_104_pred_3 = _3402;
                        frontier_phi_104_pred_4 = _3401;
                        frontier_phi_104_pred_5 = _3400;
                    }
                    _3052 = frontier_phi_104_pred;
                    _3050 = frontier_phi_104_pred_1;
                    _3048 = frontier_phi_104_pred_2;
                    _3046 = frontier_phi_104_pred_3;
                    _3044 = frontier_phi_104_pred_4;
                    _3042 = frontier_phi_104_pred_5;
                    uint _3208 = _3207 + 1u;
                    if (_3208 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3201 = _3042;
                        _3202 = _3044;
                        _3203 = _3046;
                        _3204 = _3048;
                        _3205 = _3050;
                        _3206 = _3052;
                        _3207 = _3208;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_91_92_ladder = _3052;
                frontier_phi_91_92_ladder_1 = _3050;
                frontier_phi_91_92_ladder_2 = _3048;
                frontier_phi_91_92_ladder_3 = _3046;
                frontier_phi_91_92_ladder_4 = _3044;
                frontier_phi_91_92_ladder_5 = _3042;
            }
            else
            {
                frontier_phi_91_92_ladder = _2905;
                frontier_phi_91_92_ladder_1 = _2903;
                frontier_phi_91_92_ladder_2 = _2901;
                frontier_phi_91_92_ladder_3 = _2899;
                frontier_phi_91_92_ladder_4 = _2897;
                frontier_phi_91_92_ladder_5 = _2895;
            }
            _3041 = frontier_phi_91_92_ladder_5;
            _3043 = frontier_phi_91_92_ladder_4;
            _3045 = frontier_phi_91_92_ladder_3;
            _3047 = frontier_phi_91_92_ladder_2;
            _3049 = frontier_phi_91_92_ladder_1;
            _3051 = frontier_phi_91_92_ladder;
        }
        float _3056 = isnan(1.0) ? _1097 : (isnan(_1097) ? 1.0 : min(_1097, 1.0));
        _2774 = (_3056 * _3047) + _2453;
        _2776 = (_3056 * _3049) + _2454;
        _2778 = (_3056 * _3051) + _2455;
        _2780 = ((_3041 * 0.039999999105930328369140625) * _3056) + _2609;
        _2782 = ((_3043 * 0.039999999105930328369140625) * _3056) + _2610;
        _2784 = ((_3045 * 0.039999999105930328369140625) * _3056) + _2611;
    }
    else
    {
        _2774 = _2453;
        _2776 = _2454;
        _2778 = _2455;
        _2780 = _2609;
        _2782 = _2610;
        _2784 = _2611;
    }
    uint _2790 = _1073 + uint(cbMatDynParam._m0[0u].w);
    float _2796 = ((_975 * (_963 - (_963 * _936))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2790].x;
    float _2797 = ((_975 * (_964 - (_964 * _936))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2790].y;
    float _2798 = ((_975 * (_965 - (_965 * _936))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2790].z;
    float _4726 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _4737 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _4748 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _2815 = (((isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0))) * (_2774 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1097))) + ((_2780 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + _2796;
    float _2817 = (_2797 + ((_2782 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0))) * (_2776 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1097)));
    float _2819 = (_2798 + ((_2784 + ((isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0))) * (_2778 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1097)));
    float _4774 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2832 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    uint _2833 = _1072 + 6u;
    float _2841 = _1034 / cbSceneParam._m0[86u].x;
    float _2842 = _1035 / cbSceneParam._m0[86u].y;
    vec4 _2856 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2841, _2842, (log2((isnan(cbSceneParam._m0[77u].w) ? _1021 : (isnan(_1021) ? cbSceneParam._m0[77u].w : min(_1021, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2858 = _2856.x;
    float _2859 = _2856.y;
    float _2860 = _2856.z;
    float _2861 = _2856.w;
    float _2957;
    float _2959;
    float _2961;
    float _2963;
    if (_1021 > cbSceneParam._m0[78u].w)
    {
        float _2920 = isnan(_1021) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1021 : min(cbSceneParam._m0[80u].w, _1021));
        float _2921 = _2920 / _1021;
        float _2932 = _2921 * _288;
        float _2933 = _289 * _2921;
        float _2934 = (-0.0) - _2933;
        float _2935 = _2921 * _290;
        float _2937 = (cbSceneParam._m0[77u].w * _2934) / _2920;
        float _2938 = _2937 + cbSceneParam._m0[79u].w;
        float _2939 = cbSceneParam._m0[79u].w - _2933;
        float _2945 = sqrt(((_2932 * _2932) + (_2933 * _2933)) + (_2935 * _2935));
        float _2948 = (1.0 - (cbSceneParam._m0[77u].w / _2920)) * _2945;
        float _2953 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2955 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3163;
        if (abs((_2934 - _2937) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3163 = ((((_2938 > 0.0) ? exp2(_2953 * _2938) : (2.0 - exp2(_2955 * _2938))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2948;
        }
        else
        {
            float _3102 = 1.0 / cbSceneParam._m0[80u].x;
            float _3103 = isnan(_2939) ? _2938 : (isnan(_2938) ? _2939 : max(_2938, _2939));
            float _3104 = isnan(_2939) ? _2938 : (isnan(_2938) ? _2939 : min(_2938, _2939));
            float _3113 = isnan(0.0) ? _3103 : (isnan(_3103) ? 0.0 : min(_3103, 0.0));
            float _3114 = isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : min(_3104, 0.0));
            _3163 = ((abs(_2945 / _2934) * cbSceneParam._m0[80u].y) * ((((_3113 - _3114) * 2.0) - ((exp2(_2953 * (isnan(0.0) ? _3103 : (isnan(_3103) ? 0.0 : max(_3103, 0.0)))) - exp2(_2953 * (isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : max(_3104, 0.0))))) * _3102)) - ((exp2(_2955 * _3113) - exp2(_2955 * _3114)) * _3102))) + (_2948 * cbSceneParam._m0[80u].z);
        }
        vec4 _3165 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2841, _2842, 1.0), 0.0);
        float _3174 = exp2((_3163 * (-1.44269502162933349609375)) * (1.0 - _3165.w));
        float _3175 = log2(_3174);
        float _3191 = log2(_2861);
        _2957 = (exp2(_3191 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].x)) * _3165.x) / cbSceneParam._m0[78u].x)) + _2858;
        _2959 = (exp2(_3191 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].y)) * _3165.y) / cbSceneParam._m0[78u].y)) + _2859;
        _2961 = (exp2(_3191 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].z)) * _3165.z) / cbSceneParam._m0[78u].z)) + _2860;
        _2963 = _3174 * _2861;
    }
    else
    {
        _2957 = _2858;
        _2959 = _2859;
        _2961 = _2860;
        _2963 = _2861;
    }
    float _2974 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2975 = _2974 == 3.0;
    float _2976 = log2(_2963);
    float _2980 = exp2(_2976 * cbSceneParam._m0[78u].x);
    float _2981 = exp2(_2976 * cbSceneParam._m0[78u].y);
    float _2982 = exp2(_2976 * cbSceneParam._m0[78u].z);
    float _2983 = _2980 * (isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0)));
    float _2984 = _2981 * (isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0)));
    float _2985 = _2982 * (isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0)));
    float _2994 = (_2974 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2994 * (_2975 ? _2983 : (_2983 + (cbSceneParam._m0[72u].w * _2957)));
    SV_Target.y = _2994 * (_2975 ? _2984 : (_2984 + (cbSceneParam._m0[72u].w * _2959)));
    SV_Target.z = _2994 * (_2975 ? _2985 : (_2985 + (cbSceneParam._m0[72u].w * _2961)));
    SV_Target.w = cbInstanceData._m0[_2833].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2796) * _2832) * _2980) * _2994;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2797) * _2832) * _2981) * _2994;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2798) * _2832) * _2982) * _2994;
    SV_Target_1.w = cbInstanceData._m0[_2833].w;
}


