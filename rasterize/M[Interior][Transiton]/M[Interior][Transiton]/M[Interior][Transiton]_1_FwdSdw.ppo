#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _867;
uint _2318;
uint _2319;
uint _2320;
uint _2533;
uint _2534;
uint _2535;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _195 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _196 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _197 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _203 = inversesqrt(dot(vec3(_195, _196, _197), vec3(_195, _196, _197)));
    float _210 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _214 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _261 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _271 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _261);
    float _272 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _261);
    float _273 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _261);
    vec4 _292 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _330 = cbMtdParam._m0[27u].w + _271;
    float _331 = cbMtdParam._m0[28u].x + _272;
    float _332 = cbMtdParam._m0[28u].y + _273;
    float _349 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_203 * _195, _203 * _196, _203 * _197));
    float _350 = (-0.0) - dot(vec3(_330, _331, _332), vec3(_214 * TANGENT.x, _214 * TANGENT.y, _214 * TANGENT.z));
    float _351 = (-0.0) - dot(vec3(_330, _331, _332), vec3((-0.0) - (NORMAL.x * _210), (-0.0) - (NORMAL.y * _210), (-0.0) - (NORMAL.z * _210)));
    float _355 = inversesqrt(dot(vec3(_349, _350, _351), vec3(_349, _350, _351)));
    float _358 = _355 * _351;
    float _361 = ((_355 * _349) + (((_292.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w)) * cbMtdParam._m0[24u].x;
    float _362 = ((_355 * _350) + (((_292.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x)) * cbMtdParam._m0[23u].w;
    float _363 = fract(TEXCOORD.x);
    float _364 = fract(TEXCOORD.y);
    float _370;
    if (_361 > 0.0)
    {
        _370 = (1.0 - _363) / _361;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_361 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _363) / _361;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _370 = frontier_phi_3_2_ladder;
    }
    float _378;
    if (_362 > 0.0)
    {
        _378 = (1.0 - _364) / _362;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_362 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _364) / _362;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _378 = frontier_phi_7_6_ladder;
    }
    float _382 = (_358 > 0.0) ? (cbMtdParam._m0[17u].x / _358) : 5000.0;
    float _383 = isnan(_378) ? _370 : (isnan(_370) ? _378 : min(_370, _378));
    float _384 = isnan(_382) ? _383 : (isnan(_383) ? _382 : min(_383, _382));
    float _388 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _395 = ((_384 * _358) + _388) / _388;
    vec4 _420 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((((_363 + (-0.5)) + (_384 * _361)) / _395) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((((_364 + (-0.5)) + (_384 * _362)) / _395) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _430 = cbMtdParam._m0[9u].x * _420.x;
    float _431 = cbMtdParam._m0[9u].y * _420.y;
    float _432 = cbMtdParam._m0[9u].z * _420.z;
    float _444 = (cbMtdParam._m0[19u].y * _430) * cbMtdParam._m0[16u].x;
    float _446 = (cbMtdParam._m0[19u].y * _431) * cbMtdParam._m0[16u].y;
    float _448 = (cbMtdParam._m0[19u].y * _432) * cbMtdParam._m0[16u].z;
    vec4 _472 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _477 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _483 = ((_472.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _485 = (-0.0) - (cbMtdParam._m0[21u].x * ((_472.x * 0.5) + (-0.25)));
    float _486 = fract(_477);
    float _488 = fract(_477 + 0.5);
    vec4 _515 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_486 * _485) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_483 * _486) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _517 = _515.x;
    float _523 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_488 * _485) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_483 * _488) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _517) * abs((_486 * 2.0) + (-1.0))) + _517;
    float _529 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _533 = fract(abs(_529));
    float _543 = sin(cbMtdParam._m0[21u].z);
    float _544 = cos(cbMtdParam._m0[21u].z);
    float _545 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _546 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _571 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_546, (-0.0) - _543, _544 * _545) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_546, _544, _545 * _543) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_529 >= ((-0.0) - _529)) ? _533 : ((-0.0) - _533)) * cbMtdParam._m0[18u].z) - _523)) + cbMtdParam._m0[18u].w;
    float _572 = ceil(_571);
    float _2764 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _573 = isnan(1.0) ? _2764 : (isnan(_2764) ? 1.0 : min(_2764, 1.0));
    float _593 = ((((cbMtdParam._m0[21u].w * _430) * cbMtdParam._m0[15u].x) - _444) * _573) + _444;
    float _594 = ((((cbMtdParam._m0[21u].w * _431) * cbMtdParam._m0[15u].y) - _446) * _573) + _446;
    float _595 = ((((cbMtdParam._m0[21u].w * _432) * cbMtdParam._m0[15u].z) - _448) * _573) + _448;
    float _599 = abs(cbMtdParam._m0[20u].w * _571);
    float _603 = (((_599 * cbMtdParam._m0[18u].y) - _523) * _599) + _523;
    float _2775 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _604 = isnan(1.0) ? _2775 : (isnan(_2775) ? 1.0 : min(_2775, 1.0));
    vec4 _616 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _631 = (cbMtdParam._m0[14u].x * _616.x) * cbMtdParam._m0[19u].x;
    float _632 = (cbMtdParam._m0[14u].y * _616.y) * cbMtdParam._m0[19u].x;
    float _633 = (cbMtdParam._m0[14u].z * _616.z) * cbMtdParam._m0[19u].x;
    float _640 = exp2(log2(_604) * cbMtdParam._m0[20u].x);
    float _675 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _679 = inversesqrt(dot(vec3(_271, _272, _273), vec3(_271, _272, _273)));
    float _680 = _271 * _679;
    float _681 = _272 * _679;
    float _682 = _273 * _679;
    float _688 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _689 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _698 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_688 * cbSceneParam._m0[86u].x, _689 * cbSceneParam._m0[86u].y));
    float _701 = _698.x * TEXCOORD_4;
    float _702 = (-0.0) - _680;
    float _703 = (-0.0) - _681;
    float _704 = (-0.0) - _682;
    float _726 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _730 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _734 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _866;
    float _868;
    float _869;
    float _870;
    float _871;
    float _872;
    float _873;
    float _874;
    float _875;
    float _876;
    float _877;
    float _878;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _789 = (cbModelParam._m0[37u].x * ((((fma(_734, cbModelParam._m0[26u].z, fma(_730, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _726)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _791 = (cbModelParam._m0[37u].y * ((((fma(_734, cbModelParam._m0[27u].z, fma(_730, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _726)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _792 = (((((fma(_734, cbModelParam._m0[28u].z, fma(_730, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _726)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _795 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_789, _791, _792), 0.0);
        vec4 _802 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_789, _791, _792), 0.0);
        vec4 _809 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_789, _791, _792), 0.0);
        vec4 _816 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_789, _791, _792), 0.0);
        float _829 = exp2((_795.w + (-0.5)) * 20.0) * 2.0;
        float _839 = exp2((_802.w + (-0.5)) * 20.0) * 2.0;
        float _849 = exp2((_809.w + (-0.5)) * 20.0) * 2.0;
        float _859 = exp2((_816.w + (-0.5)) * 20.0) * 2.0;
        float _860 = _859 * (_816.x + (-0.5));
        float _861 = _859 * (_816.y + (-0.5));
        float _862 = _859 * (_816.z + (-0.5));
        _866 = _829 * (_795.z + (-0.5));
        _868 = _829 * (_795.y + (-0.5));
        _869 = _829 * (_795.x + (-0.5));
        _870 = _839 * (_802.z + (-0.5));
        _871 = _839 * (_802.y + (-0.5));
        _872 = _839 * (_802.x + (-0.5));
        _873 = _849 * (_809.z + (-0.5));
        _874 = _849 * (_809.y + (-0.5));
        _875 = _849 * (_809.x + (-0.5));
        _876 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
        _877 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
        _878 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    }
    else
    {
        _866 = _867;
        _868 = _867;
        _869 = _867;
        _870 = _867;
        _871 = _867;
        _872 = _867;
        _873 = _867;
        _874 = _867;
        _875 = _867;
        _876 = _867;
        _877 = _867;
        _878 = _867;
    }
    float _1005;
    float _1006;
    float _1007;
    float _1008;
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    float _1016;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _931 = (cbModelParam._m0[38u].x * ((((fma(_734, cbModelParam._m0[30u].z, fma(_730, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _726)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _932 = (cbModelParam._m0[38u].y * ((((fma(_734, cbModelParam._m0[31u].z, fma(_730, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _726)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _933 = (((((fma(_734, cbModelParam._m0[32u].z, fma(_730, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _726)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _935 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_931, _932, _933), 0.0);
        vec4 _942 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_931, _932, _933), 0.0);
        vec4 _949 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_931, _932, _933), 0.0);
        vec4 _956 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_931, _932, _933), 0.0);
        float _968 = exp2((_935.w + (-0.5)) * 20.0) * 2.0;
        float _978 = exp2((_942.w + (-0.5)) * 20.0) * 2.0;
        float _988 = exp2((_949.w + (-0.5)) * 20.0) * 2.0;
        float _998 = exp2((_956.w + (-0.5)) * 20.0) * 2.0;
        float _999 = _998 * (_956.x + (-0.5));
        float _1000 = _998 * (_956.y + (-0.5));
        float _1001 = _998 * (_956.z + (-0.5));
        _1005 = _968 * (_935.z + (-0.5));
        _1006 = _968 * (_935.y + (-0.5));
        _1007 = _968 * (_935.x + (-0.5));
        _1008 = _978 * (_942.z + (-0.5));
        _1009 = _978 * (_942.y + (-0.5));
        _1010 = _978 * (_942.x + (-0.5));
        _1011 = _988 * (_949.z + (-0.5));
        _1012 = _988 * (_949.y + (-0.5));
        _1013 = _988 * (_949.x + (-0.5));
        _1014 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
        _1015 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
        _1016 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    }
    else
    {
        _1005 = _867;
        _1006 = _867;
        _1007 = _867;
        _1008 = _867;
        _1009 = _867;
        _1010 = _867;
        _1011 = _867;
        _1012 = _867;
        _1013 = _867;
        _1014 = _867;
        _1015 = _867;
        _1016 = _867;
    }
    float _1031 = _680 * (-0.5);
    float _1032 = _681 * (-0.5);
    float _1033 = _682 * (-0.5);
    float _1034 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_1007, _1010, _1013, _1016));
    float _1037 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_1006, _1009, _1012, _1015));
    float _1040 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_1005, _1008, _1011, _1014));
    float _1075;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1047 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_866, _870, _873, _876));
        float _1051 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_868, _871, _874, _877));
        float _1055 = dot(vec4(_1031, _1032, _1033, 1.0), vec4(_869, _872, _875, _878));
        float _1062 = dot(vec4(cbModelParam._m0[39u]), vec4(_1031, _1032, _1033, 1.0));
        _1075 = dot(vec3(isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0)), isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0)), isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1062) ? 0.0 : (isnan(0.0) ? _1062 : max(0.0, _1062))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1075 = 1.0;
    }
    float _1086;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1077 = dot(vec4(cbModelParam._m0[40u]), vec4(_1031, _1032, _1033, 1.0));
        _1086 = dot(vec3(isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0)), isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0)), isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1077) ? 0.0 : (isnan(0.0) ? _1077 : max(0.0, _1077))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1086 = 1.0;
    }
    float _1090 = (_1086 * cbModelParam._m0[1u].x) + (_1075 * (1.0 - cbModelParam._m0[1u].x));
    float _1096 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1177;
    float _1179;
    float _1181;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1144 = fma(_734, cbModelParam._m0[13u].z, fma(_730, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _726)) + cbModelParam._m0[13u].w;
        float _1148 = fma(_734, cbModelParam._m0[14u].z, fma(_730, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _726)) + cbModelParam._m0[14u].w;
        float _1152 = fma(_734, cbModelParam._m0[15u].z, fma(_730, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _726)) + cbModelParam._m0[15u].w;
        float _1155 = fma(_704, cbModelParam._m0[13u].z, fma(_703, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _702));
        float _1158 = fma(_704, cbModelParam._m0[14u].z, fma(_703, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _702));
        float _1161 = fma(_704, cbModelParam._m0[15u].z, fma(_703, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _702));
        float _1187;
        if (_1155 > 0.0)
        {
            _1187 = abs((1.0 - _1144) / _1155);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1155 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1144 + 1.0) / _1155);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1187 = frontier_phi_22_20_ladder;
        }
        float _1375;
        if (_1158 > 0.0)
        {
            _1375 = abs((1.0 - _1148) / _1158);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1158 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1148 + 1.0) / _1158);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1375 = frontier_phi_31_27_ladder;
        }
        float _1729;
        if (_1161 > 0.0)
        {
            _1729 = abs((1.0 - _1152) / _1161);
        }
        else
        {
            float frontier_phi_43_38_ladder;
            if (_1161 < 0.0)
            {
                frontier_phi_43_38_ladder = abs((_1152 + 1.0) / _1161);
            }
            else
            {
                frontier_phi_43_38_ladder = 5000.0;
            }
            _1729 = frontier_phi_43_38_ladder;
        }
        float _1731 = isnan(_1375) ? _1187 : (isnan(_1187) ? _1375 : min(_1187, _1375));
        float _1732 = isnan(_1729) ? _1731 : (isnan(_1731) ? _1729 : min(_1731, _1729));
        float _1736 = (_1732 * _1155) + _1144;
        float _1737 = (_1732 * _1158) + _1148;
        float _1738 = (_1732 * _1161) + _1152;
        float _1739 = _1732 * 9.9999997473787516355514526367188e-05;
        float _1741 = (-1.0) - _1739;
        float _1743 = _1739 + 1.0;
        float frontier_phi_21_43_ladder;
        float frontier_phi_21_43_ladder_1;
        float frontier_phi_21_43_ladder_2;
        if ((_1738 > _1743) || ((_1738 < _1741) || ((_1737 > _1743) || ((_1737 < _1741) || ((_1736 < _1741) || (_1736 > _1743))))))
        {
            frontier_phi_21_43_ladder = 0.0;
            frontier_phi_21_43_ladder_1 = 0.0;
            frontier_phi_21_43_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1982 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1738, cbModelParam._m0[9u].z, fma(_1737, cbModelParam._m0[9u].y, _1736 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1738, cbModelParam._m0[10u].z, fma(_1737, cbModelParam._m0[10u].y, _1736 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1738, cbModelParam._m0[11u].z, fma(_1737, cbModelParam._m0[11u].y, _1736 * cbModelParam._m0[11u].x))), _1096);
            frontier_phi_21_43_ladder = _1982.y * cbModelParam._m0[1u].y;
            frontier_phi_21_43_ladder_1 = _1982.z * cbModelParam._m0[1u].y;
            frontier_phi_21_43_ladder_2 = _1982.x * cbModelParam._m0[1u].y;
        }
        _1177 = frontier_phi_21_43_ladder_2;
        _1179 = frontier_phi_21_43_ladder;
        _1181 = frontier_phi_21_43_ladder_1;
    }
    else
    {
        vec4 _1165 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_702, _703, _704), _1096);
        _1177 = _1165.x * cbModelParam._m0[1u].y;
        _1179 = _1165.y * cbModelParam._m0[1u].y;
        _1181 = _1165.z * cbModelParam._m0[1u].y;
    }
    float _1184 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1272;
    float _1274;
    float _1276;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1236 = fma(_734, cbModelParam._m0[21u].z, fma(_730, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _726)) + cbModelParam._m0[21u].w;
        float _1240 = fma(_734, cbModelParam._m0[22u].z, fma(_730, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _726)) + cbModelParam._m0[22u].w;
        float _1244 = fma(_734, cbModelParam._m0[23u].z, fma(_730, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _726)) + cbModelParam._m0[23u].w;
        float _1247 = fma(_704, cbModelParam._m0[21u].z, fma(_703, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _702));
        float _1250 = fma(_704, cbModelParam._m0[22u].z, fma(_703, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _702));
        float _1253 = fma(_704, cbModelParam._m0[23u].z, fma(_703, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _702));
        float _1380;
        if (_1247 > 0.0)
        {
            _1380 = abs((1.0 - _1236) / _1247);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1247 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1236 + 1.0) / _1247);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1380 = frontier_phi_33_29_ladder;
        }
        float _1756;
        if (_1250 > 0.0)
        {
            _1756 = abs((1.0 - _1240) / _1250);
        }
        else
        {
            float frontier_phi_45_40_ladder;
            if (_1250 < 0.0)
            {
                frontier_phi_45_40_ladder = abs((_1240 + 1.0) / _1250);
            }
            else
            {
                frontier_phi_45_40_ladder = 5000.0;
            }
            _1756 = frontier_phi_45_40_ladder;
        }
        float _2106;
        if (_1253 > 0.0)
        {
            _2106 = abs((1.0 - _1244) / _1253);
        }
        else
        {
            float frontier_phi_57_52_ladder;
            if (_1253 < 0.0)
            {
                frontier_phi_57_52_ladder = abs((_1244 + 1.0) / _1253);
            }
            else
            {
                frontier_phi_57_52_ladder = 5000.0;
            }
            _2106 = frontier_phi_57_52_ladder;
        }
        float _2108 = isnan(_1756) ? _1380 : (isnan(_1380) ? _1756 : min(_1380, _1756));
        float _2109 = isnan(_2106) ? _2108 : (isnan(_2108) ? _2106 : min(_2108, _2106));
        float _2113 = (_2109 * _1247) + _1236;
        float _2114 = (_2109 * _1250) + _1240;
        float _2115 = (_2109 * _1253) + _1244;
        float _2116 = _2109 * 9.9999997473787516355514526367188e-05;
        float _2117 = (-1.0) - _2116;
        float _2119 = _2116 + 1.0;
        float frontier_phi_30_57_ladder;
        float frontier_phi_30_57_ladder_1;
        float frontier_phi_30_57_ladder_2;
        if ((_2115 > _2119) || ((_2115 < _2117) || ((_2114 > _2119) || ((_2114 < _2117) || ((_2113 < _2117) || (_2113 > _2119))))))
        {
            frontier_phi_30_57_ladder = 0.0;
            frontier_phi_30_57_ladder_1 = 0.0;
            frontier_phi_30_57_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2221 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2115, cbModelParam._m0[17u].z, fma(_2114, cbModelParam._m0[17u].y, _2113 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2115, cbModelParam._m0[18u].z, fma(_2114, cbModelParam._m0[18u].y, _2113 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2115, cbModelParam._m0[19u].z, fma(_2114, cbModelParam._m0[19u].y, _2113 * cbModelParam._m0[19u].x))), _1184);
            frontier_phi_30_57_ladder = _2221.x * cbModelParam._m0[1u].z;
            frontier_phi_30_57_ladder_1 = _2221.y * cbModelParam._m0[1u].z;
            frontier_phi_30_57_ladder_2 = _2221.z * cbModelParam._m0[1u].z;
        }
        _1272 = frontier_phi_30_57_ladder;
        _1274 = frontier_phi_30_57_ladder_1;
        _1276 = frontier_phi_30_57_ladder_2;
    }
    else
    {
        vec4 _1256 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_702, _703, _704), _1184);
        _1272 = _1256.x * cbModelParam._m0[1u].z;
        _1274 = _1256.y * cbModelParam._m0[1u].z;
        _1276 = _1256.z * cbModelParam._m0[1u].z;
    }
    float _1288 = _701 * 0.01200000010430812835693359375;
    float _1290 = _1288 * ((cbModelParam._m0[1u].w * (_1272 - _1177)) + _1177);
    float _1291 = _1288 * ((cbModelParam._m0[1u].w * (_1274 - _1179)) + _1179);
    float _1292 = _1288 * ((cbModelParam._m0[1u].w * (_1276 - _1181)) + _1181);
    float _1313 = fma(_1292, cbSceneParam._m0[89u].z, fma(_1291, cbSceneParam._m0[89u].y, _1290 * cbSceneParam._m0[89u].x));
    float _1316 = fma(_1292, cbSceneParam._m0[90u].z, fma(_1291, cbSceneParam._m0[90u].y, _1290 * cbSceneParam._m0[90u].x));
    float _1319 = fma(_1292, cbSceneParam._m0[91u].z, fma(_1291, cbSceneParam._m0[91u].y, _1290 * cbSceneParam._m0[91u].x));
    float _1354 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1358 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1362 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1366 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1367 = _1354 / _1366;
    float _1368 = _1358 / _1366;
    float _1369 = _1362 / _1366;
    float _1517;
    float _1518;
    float _1519;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1396 = ((uint(_1369 > cbSceneParam._m0[59u].y) + uint(_1369 > cbSceneParam._m0[59u].x)) + uint(_1369 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1397 = _1396 + 43u;
        uint _1405 = _1396 + 44u;
        uint _1413 = _1396 + 45u;
        uint _1421 = _1396 + 46u;
        float _1432 = fma(_1366, cbSceneParam._m0[_1397].w, fma(_1362, cbSceneParam._m0[_1397].z, fma(_1358, cbSceneParam._m0[_1397].y, _1354 * cbSceneParam._m0[_1397].x)));
        float _1436 = fma(_1366, cbSceneParam._m0[_1405].w, fma(_1362, cbSceneParam._m0[_1405].z, fma(_1358, cbSceneParam._m0[_1405].y, _1354 * cbSceneParam._m0[_1405].x)));
        float _1444 = fma(_1366, cbSceneParam._m0[_1421].w, fma(_1362, cbSceneParam._m0[_1421].z, fma(_1358, cbSceneParam._m0[_1421].y, _1354 * cbSceneParam._m0[_1421].x)));
        float _1449 = cbSceneParam._m0[33u].z * _1444;
        float _1451 = cbSceneParam._m0[33u].w * _1444;
        float _1454 = fma(_1366, cbSceneParam._m0[_1413].w, fma(_1362, cbSceneParam._m0[_1413].z, fma(_1358, cbSceneParam._m0[_1413].y, _1354 * cbSceneParam._m0[_1413].x))) / _1444;
        float _1502 = (cbSceneParam._m0[33u].x - sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369))) * cbSceneParam._m0[33u].y;
        float _2901 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1510 = (isnan(1.0) ? _2901 : (isnan(_2901) ? 1.0 : min(_2901, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1449 + _1432) / _1444, (_1451 + _1436) / _1444), _1454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1451 + _1432) / _1444, (_1436 - _1449) / _1444), _1454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1432 - _1449) / _1444, (_1436 - _1451) / _1444), _1454), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1432 - _1451) / _1444, (_1449 + _1436) / _1444), _1454), 0.0)).x), vec4(0.25)));
        _1517 = 1.0 - (_1510 * cbSceneParam._m0[34u].x);
        _1518 = 1.0 - (_1510 * cbSceneParam._m0[34u].y);
        _1519 = 1.0 - (_1510 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1517 = 1.0;
        _1518 = 1.0;
        _1519 = 1.0;
    }
    float _1583;
    float _1585;
    float _1587;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1571 = fma(_1366, cbSceneParam._m0[63u].w, fma(_1362, cbSceneParam._m0[63u].z, fma(_1358, cbSceneParam._m0[63u].y, _1354 * cbSceneParam._m0[63u].x)));
        float _1572 = fma(_1366, cbSceneParam._m0[60u].w, fma(_1362, cbSceneParam._m0[60u].z, fma(_1358, cbSceneParam._m0[60u].y, _1354 * cbSceneParam._m0[60u].x))) / _1571;
        float _1573 = fma(_1366, cbSceneParam._m0[61u].w, fma(_1362, cbSceneParam._m0[61u].z, fma(_1358, cbSceneParam._m0[61u].y, _1354 * cbSceneParam._m0[61u].x))) / _1571;
        float frontier_phi_42_41_ladder;
        float frontier_phi_42_41_ladder_1;
        float frontier_phi_42_41_ladder_2;
        if ((((_1572 >= cbSceneParam._m0[64u].x) && (_1573 >= cbSceneParam._m0[64u].y)) && (_1572 <= cbSceneParam._m0[64u].z)) && (_1573 <= cbSceneParam._m0[64u].w))
        {
            float _1769 = fma(_1366, cbSceneParam._m0[62u].w, fma(_1362, cbSceneParam._m0[62u].z, fma(_1358, cbSceneParam._m0[62u].y, _1354 * cbSceneParam._m0[62u].x))) / _1571;
            float _1773 = isnan(cbSceneParam._m0[41u].w) ? _1769 : (isnan(_1769) ? cbSceneParam._m0[41u].w : max(_1769, cbSceneParam._m0[41u].w));
            float _1816 = (cbSceneParam._m0[33u].x - sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369))) * cbSceneParam._m0[33u].y;
            float _2917 = isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0));
            float _1823 = (isnan(1.0) ? _2917 : (isnan(_2917) ? 1.0 : min(_2917, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1572, cbSceneParam._m0[33u].w + _1573), _1773), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1572, _1573 - cbSceneParam._m0[33u].z), _1773), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1572 - cbSceneParam._m0[33u].z, _1573 - cbSceneParam._m0[33u].w), _1773), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1572 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1573), _1773), 0.0)).x), vec4(0.25)));
            float _1827 = 1.0 - (_1823 * cbSceneParam._m0[34u].x);
            float _1828 = 1.0 - (_1823 * cbSceneParam._m0[34u].y);
            float _1829 = 1.0 - (_1823 * cbSceneParam._m0[34u].z);
            frontier_phi_42_41_ladder = isnan(_1829) ? _1519 : (isnan(_1519) ? _1829 : min(_1519, _1829));
            frontier_phi_42_41_ladder_1 = isnan(_1828) ? _1518 : (isnan(_1518) ? _1828 : min(_1518, _1828));
            frontier_phi_42_41_ladder_2 = isnan(_1827) ? _1517 : (isnan(_1517) ? _1827 : min(_1517, _1827));
        }
        else
        {
            frontier_phi_42_41_ladder = _1519;
            frontier_phi_42_41_ladder_1 = _1518;
            frontier_phi_42_41_ladder_2 = _1517;
        }
        _1583 = frontier_phi_42_41_ladder_2;
        _1585 = frontier_phi_42_41_ladder_1;
        _1587 = frontier_phi_42_41_ladder;
    }
    else
    {
        _1583 = _1517;
        _1585 = _1518;
        _1587 = _1519;
    }
    uint _1589 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1593 = floatBitsToUint(cbInstanceData._m0[_1589 + 5u]);
    uint _1595 = _1593.x * 14u;
    uint _1596 = _1595 + 13u;
    float _1601 = _701 + (-1.0);
    float _1604 = (cbLight._m0[_1596].x * _1601) + 1.0;
    float _1605 = (cbLight._m0[_1596].y * _1601) + 1.0;
    uint _1606 = _1595 + 8u;
    float _1617 = cbLight._m0[_1595].x + _680;
    float _1618 = cbLight._m0[_1595].y + _681;
    float _1619 = cbLight._m0[_1595].z + _682;
    float _1623 = inversesqrt(dot(vec3(_1617, _1618, _1619), vec3(_1617, _1618, _1619)));
    float _1627 = dot(vec3(0.0), vec3(cbLight._m0[_1595].xyz));
    float _2943 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
    float _1630 = isnan(1.0) ? _2943 : (isnan(_2943) ? 1.0 : min(_2943, 1.0));
    float _1631 = dot(vec3(0.0), vec3(_680, _681, _682));
    float _2954 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
    float _1634 = isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0));
    float _1635 = dot(vec3(cbLight._m0[_1595].xyz), vec3(_1617 * _1623, _1618 * _1623, _1619 * _1623));
    float _2965 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    float _1646 = (exp2(log2(1.0 - (isnan(1.0) ? _2965 : (isnan(_2965) ? 1.0 : min(_2965, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1652 = (0.5 / ((_1630 + 9.9999999392252902907785028219223e-09) + _1634)) * _1630;
    float _2976 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
    float _1654 = (isnan(1.0) ? _2976 : (isnan(_2976) ? 1.0 : min(_2976, 1.0))) * 0.31831014156341552734375;
    float _1656 = isnan(1.0) ? _1604 : (isnan(_1604) ? 1.0 : min(_1604, 1.0));
    uint _1669 = _1595 + 9u;
    uint _1675 = _1595 | 1u;
    float _1681 = cbLight._m0[_1675].x + _680;
    float _1682 = cbLight._m0[_1675].y + _681;
    float _1683 = cbLight._m0[_1675].z + _682;
    float _1687 = inversesqrt(dot(vec3(_1681, _1682, _1683), vec3(_1681, _1682, _1683)));
    float _1691 = dot(vec3(0.0), vec3(cbLight._m0[_1675].xyz));
    float _2992 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
    float _1694 = isnan(1.0) ? _2992 : (isnan(_2992) ? 1.0 : min(_2992, 1.0));
    float _1695 = dot(vec3(cbLight._m0[_1675].xyz), vec3(_1681 * _1687, _1682 * _1687, _1683 * _1687));
    float _3003 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
    float _1704 = (exp2(log2(1.0 - (isnan(1.0) ? _3003 : (isnan(_3003) ? 1.0 : min(_3003, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1708 = (0.5 / ((_1694 + 9.9999999392252902907785028219223e-09) + _1634)) * _1694;
    float _3014 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
    float _1710 = (isnan(1.0) ? _3014 : (isnan(_3014) ? 1.0 : min(_3014, 1.0))) * 0.31831014156341552734375;
    float _1711 = isnan(1.0) ? _1605 : (isnan(_1605) ? 1.0 : min(_1605, 1.0));
    float _1721 = (((_1704 * cbLight._m0[_1669].x) * _1710) * _1711) + ((((cbLight._m0[_1606].x * _1583) * _1646) * _1654) * _1656);
    float _1722 = (((_1704 * cbLight._m0[_1669].y) * _1710) * _1711) + ((((cbLight._m0[_1606].y * _1585) * _1646) * _1654) * _1656);
    float _1723 = (((_1704 * cbLight._m0[_1669].z) * _1710) * _1711) + ((((cbLight._m0[_1606].z * _1587) * _1646) * _1654) * _1656);
    float _1887;
    float _1889;
    float _1891;
    if (_1593.y == 0u)
    {
        uvec4 _1841 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1842 = _1841.x;
        uint _1853 = uint((float(_1841.y) * floor(float(uint(cbSceneParam._m0[85u].y * _689) / _1842))) + floor(float(uint(cbSceneParam._m0[85u].x * _688) / _1842)));
        float _1863 = (log2(_1369 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1864 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        uint _1867 = uint(isnan(14.0) ? _1864 : (isnan(_1864) ? 14.0 : min(_1864, 14.0)));
        uvec4 _1873 = texelFetch(g_lightClusterGridBuffer, int(((_1867 << 2u) + (_1853 << 6u)) >> 2u));
        uint _1874 = _1873.x;
        uint _1875 = _1841.z;
        float _1991;
        float _1993;
        float _1995;
        if (((((1u << ((_1875 >> 4u) & 15u)) + 4294967295u) & _1874) == 0u) || ((_1875 & 240u) == 0u))
        {
            _1991 = 0.0;
            _1993 = 0.0;
            _1995 = 0.0;
        }
        else
        {
            float _1992;
            float _1994;
            float _1996;
            float _2152 = 0.0;
            float _2153 = 0.0;
            float _2154 = 0.0;
            uint _2155 = 0u;
            uint _2164;
            bool _2165;
            for (;;)
            {
                _2164 = texelFetch(g_lightClassification, int((((_1867 << 5u) + (_1853 << 9u)) + (_2155 << 2u)) >> 2u)).x;
                _2165 = _2164 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                if (_2165)
                {
                    frontier_phi_66_pred = _2154;
                    frontier_phi_66_pred_1 = _2153;
                    frontier_phi_66_pred_2 = _2152;
                }
                else
                {
                    float _2288;
                    float _2289;
                    float _2290;
                    uint _2291;
                    _2288 = _2152;
                    _2289 = _2153;
                    _2290 = _2154;
                    _2291 = _2164;
                    float _2226;
                    float _2227;
                    float _2228;
                    for (;;)
                    {
                        uint _2295 = uint(findLSB(_2291)) + (_2155 << 5u);
                        uint _2292 = (_2291 + 4294967295u) & _2291;
                        uint _2297 = _2295 * 48u;
                        vec4 _2311 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2297)).x, texelFetch(g_PointLightRenderingBuffer, int(_2297 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2297 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2297 + 3u)).x));
                        uint _2328 = (_2295 * 48u) + 8u;
                        vec3 _2339 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2328)).x, texelFetch(g_PointLightRenderingBuffer, int(_2328 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2328 + 2u)).x));
                        float _2343 = _2311.x - _1367;
                        float _2344 = _2311.y - _1368;
                        float _2345 = _2311.z - _1369;
                        float _2346 = dot(vec3(_2343, _2344, _2345), vec3(_2343, _2344, _2345));
                        float _2349 = inversesqrt(_2346);
                        float _2358 = 1.0 - (_2346 * _2311.w);
                        float _3040 = isnan(0.0) ? _2358 : (isnan(_2358) ? 0.0 : max(_2358, 0.0));
                        float _2360 = sqrt(_2346) * uintBitsToFloat(uvec4(_2318, _2319, _2320, texelFetch(g_PointLightRenderingBuffer, int(((_2295 * 48u) + 4u) + 3u)).x)).w;
                        float _2363 = 1.39999997615814208984375 / (_2360 + 1.39999997615814208984375);
                        float _2364 = _2363 * _2363;
                        float _2367 = ((1.0 - _2364) * dot(vec3(0.0), vec3(_2349 * _2343, _2349 * _2344, _2349 * _2345))) + _2364;
                        float _2369 = (-0.0) - _1367;
                        float _2370 = (-0.0) - _1368;
                        float _2371 = (-0.0) - _1369;
                        float _2375 = inversesqrt(dot(vec3(_2369, _2370, _2371), vec3(_2369, _2370, _2371)));
                        float _2379 = dot(vec3(0.0), vec3(_2375 * _2369, _2375 * _2370, _2375 * _2371));
                        float _3051 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
                        float _3062 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
                        float _2383 = isnan(1.0) ? _3062 : (isnan(_3062) ? 1.0 : min(_3062, 1.0));
                        float _2387 = (0.5 / (((isnan(1.0) ? _3051 : (isnan(_3051) ? 1.0 : min(_3051, 1.0))) + 9.9999999392252902907785028219223e-09) + _2383)) * _2383;
                        float _3073 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
                        float _2396 = (((isnan(1.0) ? _3073 : (isnan(_3073) ? 1.0 : min(_3073, 1.0))) * 3.1415927410125732421875) / (((_2360 * _2360) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _3040 : (isnan(_3040) ? 1.0 : min(_3040, 1.0)));
                        _2226 = (_2396 * _2339.x) + _2288;
                        _2227 = (_2396 * _2339.y) + _2289;
                        _2228 = (_2396 * _2339.z) + _2290;
                        if (_2292 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2288 = _2226;
                            _2289 = _2227;
                            _2290 = _2228;
                            _2291 = _2292;
                        }
                    }
                    frontier_phi_66_pred = _2228;
                    frontier_phi_66_pred_1 = _2227;
                    frontier_phi_66_pred_2 = _2226;
                }
                _1996 = frontier_phi_66_pred;
                _1994 = frontier_phi_66_pred_1;
                _1992 = frontier_phi_66_pred_2;
                uint _2156 = _2155 + 1u;
                if (_2156 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2152 = _1992;
                    _2153 = _1994;
                    _2154 = _1996;
                    _2155 = _2156;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1991 = _1992;
            _1993 = _1994;
            _1995 = _1996;
        }
        uvec4 _1999 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2000 = _1999.z;
        uint _2002 = (_2000 >> 8u) & 15u;
        float _2132;
        float _2134;
        float _2136;
        if (((4294967295u << _2002) & _1874) == 0u)
        {
            _2132 = _1991;
            _2134 = _1993;
            _2136 = _1995;
        }
        else
        {
            float _2148 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
            float frontier_phi_59_60_ladder;
            float frontier_phi_59_60_ladder_1;
            float frontier_phi_59_60_ladder_2;
            if (_2002 < ((_2000 >> 12u) & 15u))
            {
                float _2133;
                float _2135;
                float _2137;
                float _2274 = _1991;
                float _2275 = _1993;
                float _2276 = _1995;
                uint _2277 = _2002;
                uint _2286;
                bool _2287;
                for (;;)
                {
                    _2286 = texelFetch(g_lightClassification, int((((_1867 << 5u) + (_1853 << 9u)) + (_2277 << 2u)) >> 2u)).x;
                    _2287 = _2286 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    if (_2287)
                    {
                        frontier_phi_72_pred = _2276;
                        frontier_phi_72_pred_1 = _2275;
                        frontier_phi_72_pred_2 = _2274;
                    }
                    else
                    {
                        float _2401;
                        float _2402;
                        float _2403;
                        float _2622;
                        float _2623;
                        float _2624;
                        float _2411 = _2274;
                        float _2412 = _2275;
                        float _2413 = _2276;
                        uint _2414 = _2286;
                        uint _2415;
                        uint _2425;
                        vec4 _2440;
                        float _2441;
                        vec3 _2453;
                        vec4 _2468;
                        vec4 _2483;
                        float _2529;
                        bool _2530;
                        for (;;)
                        {
                            _2425 = ((_2277 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2414));
                            _2415 = (_2414 + 4294967295u) & _2414;
                            uint _2427 = _2425 * 40u;
                            _2440 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2427)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 3u)).x));
                            _2441 = _2440.w;
                            uint _2443 = (_2425 * 40u) + 8u;
                            _2453 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2443)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2443 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2443 + 2u)).x));
                            uint _2455 = (_2425 * 40u) + 16u;
                            _2468 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2455)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2455 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2455 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2455 + 3u)).x));
                            uint _2470 = (_2425 * 40u) + 20u;
                            _2483 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2470)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2470 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2470 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2470 + 3u)).x));
                            uint _2485 = (_2425 * 40u) + 24u;
                            vec4 _2498 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2485)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2485 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2485 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2485 + 3u)).x));
                            uint _2504 = (_2425 * 40u) + 28u;
                            vec4 _2517 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2504)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2504 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2504 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2504 + 3u)).x));
                            _2529 = fma(_1369, _2517.z, fma(_1368, _2517.y, _2517.x * _1367)) + _2517.w;
                            _2530 = !((fma(_1369, _2498.z, fma(_1368, _2498.y, _2498.x * _1367)) + _2498.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            if (_2530)
                            {
                                float _2564 = _2440.x - _1367;
                                float _2565 = _2440.y - _1368;
                                float _2566 = _2440.z - _1369;
                                float _2567 = dot(vec3(_2564, _2565, _2566), vec3(_2564, _2565, _2566));
                                float _2570 = inversesqrt(_2567);
                                float _2577 = 1.0 - (_2567 / (_2441 * _2441));
                                float _3084 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
                                float _2579 = sqrt(_2567) * uintBitsToFloat(uvec4(_2533, _2534, _2535, texelFetch(g_SpotLightRenderingBuffer, int(((_2425 * 40u) + 4u) + 3u)).x)).w;
                                float _2581 = 1.39999997615814208984375 / (_2579 + 1.39999997615814208984375);
                                float _2582 = _2581 * _2581;
                                float _2585 = (fma(_1369, _2468.z, fma(_1368, _2468.y, _2468.x * _1367)) + _2468.w) / _2529;
                                float _2586 = (fma(_1369, _2483.z, fma(_1368, _2483.y, _2483.x * _1367)) + _2483.w) / _2529;
                                float _2590 = 1.0 - dot(vec2(_2585, _2586), vec2(_2585, _2586));
                                float _3095 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
                                float _2598 = dot(vec3(0.0), vec3((-0.0) - (_1367 * _2148), (-0.0) - (_1368 * _2148), (-0.0) - (_1369 * _2148)));
                                float _3106 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
                                float _2606 = ((1.0 - _2582) * dot(vec3(0.0), vec3(_2570 * _2564, _2570 * _2565, _2570 * _2566))) + _2582;
                                float _3117 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
                                float _2607 = isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0));
                                float _2611 = (0.5 / (((isnan(1.0) ? _3106 : (isnan(_3106) ? 1.0 : min(_3106, 1.0))) + 9.9999999392252902907785028219223e-09) + _2607)) * _2607;
                                float _3128 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
                                float _2618 = ((isnan(1.0) ? _3095 : (isnan(_3095) ? 1.0 : min(_3095, 1.0))) * (isnan(1.0) ? _3084 : (isnan(_3084) ? 1.0 : min(_3084, 1.0)))) * (((isnan(1.0) ? _3128 : (isnan(_3128) ? 1.0 : min(_3128, 1.0))) * 3.1415927410125732421875) / (((_2579 * _2579) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_78_pred = _2618 * _2453.z;
                                frontier_phi_78_pred_1 = _2618 * _2453.y;
                                frontier_phi_78_pred_2 = _2618 * _2453.x;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                            }
                            _2624 = frontier_phi_78_pred;
                            _2623 = frontier_phi_78_pred_1;
                            _2622 = frontier_phi_78_pred_2;
                            _2401 = _2622 + _2411;
                            _2402 = _2623 + _2412;
                            _2403 = _2624 + _2413;
                            if (_2415 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2411 = _2401;
                                _2412 = _2402;
                                _2413 = _2403;
                                _2414 = _2415;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2403;
                        frontier_phi_72_pred_1 = _2402;
                        frontier_phi_72_pred_2 = _2401;
                    }
                    _2137 = frontier_phi_72_pred;
                    _2135 = frontier_phi_72_pred_1;
                    _2133 = frontier_phi_72_pred_2;
                    uint _2278 = _2277 + 1u;
                    if (_2278 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2274 = _2133;
                        _2275 = _2135;
                        _2276 = _2137;
                        _2277 = _2278;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_59_60_ladder = _2137;
                frontier_phi_59_60_ladder_1 = _2135;
                frontier_phi_59_60_ladder_2 = _2133;
            }
            else
            {
                frontier_phi_59_60_ladder = _1995;
                frontier_phi_59_60_ladder_1 = _1993;
                frontier_phi_59_60_ladder_2 = _1991;
            }
            _2132 = frontier_phi_59_60_ladder_2;
            _2134 = frontier_phi_59_60_ladder_1;
            _2136 = frontier_phi_59_60_ladder;
        }
        float _2141 = isnan(1.0) ? _701 : (isnan(_701) ? 1.0 : min(_701, 1.0));
        _1887 = ((_2132 * 0.039999999105930328369140625) * _2141) + _1721;
        _1889 = ((_2134 * 0.039999999105930328369140625) * _2141) + _1722;
        _1891 = ((_2136 * 0.039999999105930328369140625) * _2141) + _1723;
    }
    else
    {
        _1887 = _1721;
        _1889 = _1722;
        _1891 = _1723;
    }
    uint _1898 = (_1589 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1904 = (cbSceneParam._m0[72u].y * ((_640 * ((_631 - _593) - (_631 * _604))) + _593)) * cbInstanceData._m0[_1898].x;
    float _1905 = (cbSceneParam._m0[72u].y * ((_640 * ((_632 - _594) - (_632 * _604))) + _594)) * cbInstanceData._m0[_1898].y;
    float _1906 = (((_640 * ((_633 - _595) - (_633 * _604))) + _595) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_1898].z;
    float _1913 = _1904 + ((_1887 + ((isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0))) * _1090)) * cbPerFrame._m0[3u].x);
    float _1914 = _1905 + ((_1889 + ((isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0))) * _1090)) * cbPerFrame._m0[3u].x);
    float _1915 = _1906 + ((_1891 + ((isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0))) * _1090)) * cbPerFrame._m0[3u].x);
    float _3159 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1928 = isnan(1.0) ? _3159 : (isnan(_3159) ? 1.0 : min(_3159, 1.0));
    uint _1929 = _1589 + 6u;
    float _1937 = _688 / cbSceneParam._m0[86u].x;
    float _1938 = _689 / cbSceneParam._m0[86u].y;
    vec4 _1952 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1937, _1938, (log2((isnan(cbSceneParam._m0[77u].w) ? _675 : (isnan(_675) ? cbSceneParam._m0[77u].w : min(_675, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1954 = _1952.x;
    float _1955 = _1952.y;
    float _1956 = _1952.z;
    float _1957 = _1952.w;
    float _2047;
    float _2049;
    float _2051;
    float _2053;
    if (_675 > cbSceneParam._m0[78u].w)
    {
        float _2010 = isnan(_675) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _675 : min(cbSceneParam._m0[80u].w, _675));
        float _2011 = _2010 / _675;
        float _2022 = _2011 * _271;
        float _2023 = _272 * _2011;
        float _2024 = (-0.0) - _2023;
        float _2025 = _2011 * _273;
        float _2027 = (cbSceneParam._m0[77u].w * _2024) / _2010;
        float _2028 = _2027 + cbSceneParam._m0[79u].w;
        float _2029 = cbSceneParam._m0[79u].w - _2023;
        float _2035 = sqrt(((_2022 * _2022) + (_2023 * _2023)) + (_2025 * _2025));
        float _2038 = (1.0 - (cbSceneParam._m0[77u].w / _2010)) * _2035;
        float _2043 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2045 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2236;
        if (abs((_2024 - _2027) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2236 = ((((_2028 > 0.0) ? exp2(_2043 * _2028) : (2.0 - exp2(_2045 * _2028))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2038;
        }
        else
        {
            float _2178 = 1.0 / cbSceneParam._m0[80u].x;
            float _2179 = isnan(_2029) ? _2028 : (isnan(_2028) ? _2029 : max(_2028, _2029));
            float _2180 = isnan(_2029) ? _2028 : (isnan(_2028) ? _2029 : min(_2028, _2029));
            float _2189 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : min(_2179, 0.0));
            float _2190 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : min(_2180, 0.0));
            _2236 = ((abs(_2035 / _2024) * cbSceneParam._m0[80u].y) * ((((_2189 - _2190) * 2.0) - ((exp2(_2043 * (isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0)))) - exp2(_2043 * (isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0))))) * _2178)) - ((exp2(_2045 * _2189) - exp2(_2045 * _2190)) * _2178))) + (_2038 * cbSceneParam._m0[80u].z);
        }
        vec4 _2238 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1937, _1938, 1.0), 0.0);
        float _2247 = exp2((_2236 * (-1.44269502162933349609375)) * (1.0 - _2238.w));
        float _2248 = log2(_2247);
        float _2264 = log2(_1957);
        _2047 = (exp2(_2264 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2248 * cbSceneParam._m0[78u].x)) * _2238.x) / cbSceneParam._m0[78u].x)) + _1954;
        _2049 = (exp2(_2264 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2248 * cbSceneParam._m0[78u].y)) * _2238.y) / cbSceneParam._m0[78u].y)) + _1955;
        _2051 = (exp2(_2264 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2248 * cbSceneParam._m0[78u].z)) * _2238.z) / cbSceneParam._m0[78u].z)) + _1956;
        _2053 = _2247 * _1957;
    }
    else
    {
        _2047 = _1954;
        _2049 = _1955;
        _2051 = _1956;
        _2053 = _1957;
    }
    float _2064 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2065 = _2064 == 3.0;
    float _2067 = log2(_2053);
    float _2071 = exp2(_2067 * cbSceneParam._m0[78u].x);
    float _2072 = exp2(_2067 * cbSceneParam._m0[78u].y);
    float _2073 = exp2(_2067 * cbSceneParam._m0[78u].z);
    float _2074 = _2071 * (isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0)));
    float _2075 = _2072 * (isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0)));
    float _2076 = _2073 * (isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0)));
    float _2085 = (_2064 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2085 * (_2065 ? _2074 : (_2074 + (cbSceneParam._m0[72u].w * _2047)));
    SV_Target.y = _2085 * (_2065 ? _2075 : (_2075 + (cbSceneParam._m0[72u].w * _2049)));
    SV_Target.z = _2085 * (_2065 ? _2076 : (_2076 + (cbSceneParam._m0[72u].w * _2051)));
    SV_Target.w = cbInstanceData._m0[_1929].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1904) * _1928) * _2071) * _2085;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1905) * _1928) * _2072) * _2085;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1906) * _1928) * _2073) * _2085;
    SV_Target_1.w = cbInstanceData._m0[_1929].w;
}


