#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1290;
float _3585;
float _3586;
float _3587;
float _3588;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _286 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _276);
    float _287 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _276);
    float _288 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _276);
    vec4 _307 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _345 = cbMtdParam._m0[27u].w + _286;
    float _346 = cbMtdParam._m0[28u].x + _287;
    float _347 = cbMtdParam._m0[28u].y + _288;
    float _361 = (-0.0) - dot(vec3(_345, _346, _347), vec3(_215 * _207, _215 * _208, _215 * _209));
    float _362 = (-0.0) - dot(vec3(_345, _346, _347), vec3(_229 * TANGENT.x, _229 * TANGENT.y, _229 * TANGENT.z));
    float _363 = (-0.0) - dot(vec3(_345, _346, _347), vec3((-0.0) - (_222 * NORMAL.x), (-0.0) - (_222 * NORMAL.y), (-0.0) - (_222 * NORMAL.z)));
    float _367 = inversesqrt(dot(vec3(_361, _362, _363), vec3(_361, _362, _363)));
    float _370 = _367 * _363;
    float _371 = (_367 * _361) + (((_307.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _372 = (_367 * _362) + (((_307.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _373 = _371 * cbMtdParam._m0[24u].x;
    float _374 = _372 * cbMtdParam._m0[23u].w;
    float _375 = fract(TEXCOORD.x);
    float _376 = fract(TEXCOORD.y);
    float _382;
    if (_373 > 0.0)
    {
        _382 = (1.0 - _375) / _373;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_373 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _375) / _373;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _382 = frontier_phi_3_2_ladder;
    }
    float _390;
    if (_374 > 0.0)
    {
        _390 = (1.0 - _376) / _374;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_374 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _376) / _374;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _390 = frontier_phi_7_6_ladder;
    }
    bool _392 = _370 > 0.0;
    float _394 = _392 ? (cbMtdParam._m0[17u].x / _370) : 5000.0;
    float _395 = isnan(_390) ? _382 : (isnan(_382) ? _390 : min(_382, _390));
    float _396 = isnan(_394) ? _395 : (isnan(_395) ? _394 : min(_395, _394));
    float _400 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _401 = _375 + (-0.5);
    float _404 = _376 + (-0.5);
    float _407 = ((_396 * _370) + _400) / _400;
    vec4 _432 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_401 + (_396 * _373)) / _407) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_404 + (_396 * _374)) / _407) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _442 = cbMtdParam._m0[9u].x * _432.x;
    float _443 = cbMtdParam._m0[9u].y * _432.y;
    float _444 = cbMtdParam._m0[9u].z * _432.z;
    float _462 = _371 * cbMtdParam._m0[26u].z;
    float _463 = _372 * cbMtdParam._m0[26u].y;
    bool _464 = _462 > 0.0;
    float _469;
    if (_464)
    {
        _469 = (1.0 - _375) / _462;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_462 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _375) / _462;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _469 = frontier_phi_11_10_ladder;
    }
    bool _471 = _463 > 0.0;
    float _476;
    if (_471)
    {
        _476 = (1.0 - _376) / _463;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_463 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _376) / _463;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _476 = frontier_phi_15_14_ladder;
    }
    float _479 = _392 ? (cbMtdParam._m0[19u].z / _370) : 5000.0;
    float _480 = isnan(_476) ? _469 : (isnan(_469) ? _476 : min(_469, _476));
    float _481 = isnan(_479) ? _480 : (isnan(_480) ? _479 : min(_480, _479));
    float _485 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _489 = ((_481 * _370) + _485) / _485;
    float _494 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _496 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _512 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_401 + (_481 * _462)) / _489) + 0.5) + _494) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_404 + (_481 * _463)) / _489) + 0.5) + _496) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _524;
    if (_464)
    {
        _524 = (1.0 - _375) / _462;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_462 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _375) / _462;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _524 = frontier_phi_19_18_ladder;
    }
    float _530;
    if (_471)
    {
        _530 = (1.0 - _376) / _463;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_463 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _376) / _463;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _530 = frontier_phi_23_22_ladder;
    }
    float _532 = isnan(_530) ? _524 : (isnan(_524) ? _530 : min(_524, _530));
    float _533 = isnan(_479) ? _532 : (isnan(_532) ? _479 : min(_532, _479));
    float _540 = ((_533 * _370) + _485) / _485;
    vec4 _560 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_401 + (_533 * _462)) / _540) + 0.5) + _494) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_404 + (_533 * _463)) / _540) + 0.5) + _496) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _562 = _560.x;
    float _569 = (_562 * ((_512.x * cbMtdParam._m0[10u].x) - _442)) + _442;
    float _570 = (_562 * ((_512.y * cbMtdParam._m0[10u].y) - _443)) + _443;
    float _571 = (_562 * ((_512.z * cbMtdParam._m0[10u].z) - _444)) + _444;
    float _585 = _371 * cbMtdParam._m0[27u].x;
    float _586 = _372 * cbMtdParam._m0[26u].w;
    bool _587 = _585 > 0.0;
    float _592;
    if (_587)
    {
        _592 = (1.0 - _375) / _585;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _375) / _585;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _592 = frontier_phi_27_26_ladder;
    }
    bool _594 = _586 > 0.0;
    float _599;
    if (_594)
    {
        _599 = (1.0 - _376) / _586;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_586 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _376) / _586;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _599 = frontier_phi_31_30_ladder;
    }
    float _602 = _392 ? (cbMtdParam._m0[23u].x / _370) : 5000.0;
    float _603 = isnan(_599) ? _592 : (isnan(_592) ? _599 : min(_592, _599));
    float _604 = isnan(_602) ? _603 : (isnan(_603) ? _602 : min(_603, _602));
    float _608 = cbMtdParam._m0[23u].x * cbMtdParam._m0[17u].z;
    float _612 = ((_604 * _370) + _608) / _608;
    float _617 = cbMtdParam._m0[22u].w - cbMtdParam._m0[27u].y * trunc(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    float _619 = floor(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    vec4 _635 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * (((((_401 + (_604 * _585)) / _612) + 0.5) + _617) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * (((((_404 + (_604 * _586)) / _612) + 0.5) + _619) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[11u].w));
    float _647;
    if (_587)
    {
        _647 = (1.0 - _375) / _585;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _375) / _585;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _647 = frontier_phi_35_34_ladder;
    }
    float _653;
    if (_594)
    {
        _653 = (1.0 - _376) / _586;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_586 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _376) / _586;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _653 = frontier_phi_39_38_ladder;
    }
    float _655 = isnan(_653) ? _647 : (isnan(_647) ? _653 : min(_647, _653));
    float _656 = isnan(_602) ? _655 : (isnan(_655) ? _602 : min(_655, _602));
    float _663 = ((_656 * _370) + _608) / _608;
    vec4 _684 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * (((((_401 + (_656 * _585)) / _663) + 0.5) + _617) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * (((((_404 + (_656 * _586)) / _663) + 0.5) + _619) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[12u].w));
    float _686 = _684.x;
    float _693 = (_686 * ((_635.x * cbMtdParam._m0[13u].x) - _569)) + _569;
    float _694 = (_686 * ((_635.y * cbMtdParam._m0[13u].y) - _570)) + _570;
    float _695 = (_686 * ((_635.z * cbMtdParam._m0[13u].z) - _571)) + _571;
    vec4 _719 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _724 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _730 = ((_719.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _732 = (-0.0) - (cbMtdParam._m0[21u].x * ((_719.x * 0.5) + (-0.25)));
    float _733 = fract(_724);
    float _735 = fract(_724 + 0.5);
    vec4 _762 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_733 * _732) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_730 * _733) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _764 = _762.x;
    float _770 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_735 * _732) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_730 * _735) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _764) * abs((_733 * 2.0) + (-1.0))) + _764;
    float _776 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _780 = fract(abs(_776));
    float _789 = sin(cbMtdParam._m0[21u].z);
    float _790 = cos(cbMtdParam._m0[21u].z);
    float _791 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _792 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _822 = abs(cbMtdParam._m0[20u].w * (((_770 - (((_776 >= ((-0.0) - _776)) ? _780 : ((-0.0) - _780)) * cbMtdParam._m0[18u].z)) + texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_792, (-0.0) - _789, _790 * _791) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_792, _790, _791 * _789) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[18u].w));
    float _826 = (((_822 * cbMtdParam._m0[18u].y) - _770) * _822) + _770;
    float _3647 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _827 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
    vec4 _839 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _854 = (cbMtdParam._m0[14u].x * _839.x) * cbMtdParam._m0[19u].x;
    float _855 = (cbMtdParam._m0[14u].y * _839.y) * cbMtdParam._m0[19u].x;
    float _856 = (cbMtdParam._m0[14u].z * _839.z) * cbMtdParam._m0[19u].x;
    float _866 = exp2(log2(_827) * cbMtdParam._m0[20u].x);
    float _3658 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _3669 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _3680 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _895 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _899 = inversesqrt(dot(vec3(_286, _287, _288), vec3(_286, _287, _288)));
    float _900 = _286 * _899;
    float _901 = _287 * _899;
    float _902 = _288 * _899;
    vec4 _907 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _909 = _907.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1005 = sqrt(((_286 * _286) + (_287 * _287)) + (_288 * _288));
        float _1011 = (cbMatDynParam._m0[5u].x * _1005) + cbMatDynParam._m0[5u].y;
        float _3691 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
        float _1012 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
        float _1016 = (cbMatDynParam._m0[5u].z * _1005) + cbMatDynParam._m0[5u].w;
        float _3702 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0))) - _1012)) + _1012) < ((_909 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _922 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _923 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _936 = uint(roundEven(NORMAL.w)) * 13u;
    uint _937 = _936 + 9u;
    uint _938 = _937 + uint(cbMatDynParam._m0[0u].w);
    float _944 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0)))) * cbInstanceData._m0[_938].x;
    float _945 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0)))) * cbInstanceData._m0[_938].y;
    float _946 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0)))) * cbInstanceData._m0[_938].z;
    float _3713 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
    float _947 = isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0));
    float _3724 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
    float _948 = isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0));
    float _3735 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
    float _949 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
    vec4 _958 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _922, cbSceneParam._m0[86u].y * _923));
    float _961 = _958.x * TEXCOORD_4;
    float _962 = (-0.0) - _900;
    float _963 = (-0.0) - _901;
    float _964 = (-0.0) - _902;
    float _986 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _990 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _994 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1289;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1077 = (cbModelParam._m0[37u].x * ((((fma(_994, cbModelParam._m0[26u].z, fma(_990, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _986)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1079 = (cbModelParam._m0[37u].y * ((((fma(_994, cbModelParam._m0[27u].z, fma(_990, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _986)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1080 = (((((fma(_994, cbModelParam._m0[28u].z, fma(_990, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _986)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1083 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1077, _1079, _1080), 0.0);
        vec4 _1090 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1077, _1079, _1080), 0.0);
        vec4 _1097 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1077, _1079, _1080), 0.0);
        vec4 _1104 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1077, _1079, _1080), 0.0);
        float _1117 = exp2((_1083.w + (-0.5)) * 20.0) * 2.0;
        float _1118 = _1117 * (_1083.x + (-0.5));
        float _1119 = _1117 * (_1083.y + (-0.5));
        float _1120 = _1117 * (_1083.z + (-0.5));
        float _1127 = exp2((_1090.w + (-0.5)) * 20.0) * 2.0;
        float _1128 = _1127 * (_1090.x + (-0.5));
        float _1129 = _1127 * (_1090.y + (-0.5));
        float _1130 = _1127 * (_1090.z + (-0.5));
        float _1137 = exp2((_1097.w + (-0.5)) * 20.0) * 2.0;
        float _1138 = _1137 * (_1097.x + (-0.5));
        float _1139 = _1137 * (_1097.y + (-0.5));
        float _1140 = _1137 * (_1097.z + (-0.5));
        float _1147 = exp2((_1104.w + (-0.5)) * 20.0) * 2.0;
        float _1148 = _1147 * (_1104.x + (-0.5));
        float _1149 = _1147 * (_1104.y + (-0.5));
        float _1150 = _1147 * (_1104.z + (-0.5));
        float _1151 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1152 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1153 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1154 = _1118 * 0.5;
        float _1155 = _1128 * 0.5;
        float _1156 = _1138 * 0.5;
        float _1157 = dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156));
        float _1162 = (_1157 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1157);
        float _1171 = (dot(vec3(0.0), vec3(_1162 * _1154, _1162 * _1155, _1162 * _1156)) + 1.0) * 0.5;
        float _3761 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1181 = sqrt(((_1155 * _1155) + (_1154 * _1154)) + (_1156 * _1156)) / (_1151 + 9.9999997473787516355514526367188e-06);
        float _3772 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
        float _1183 = _1182 * 2.0;
        float _1187 = (1.0 - _1182) / (_1182 + 1.0);
        float _3783 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1188 = isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0));
        float _1197 = ((((1.0 - _1188) * (_1183 + 2.0)) * exp2(log2(isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0))) * (_1183 + 1.0))) + _1188) * _1151;
        float _1198 = _1119 * 0.5;
        float _1199 = _1129 * 0.5;
        float _1200 = _1139 * 0.5;
        float _1201 = dot(vec3(_1198, _1199, _1200), vec3(_1198, _1199, _1200));
        float _1206 = (_1201 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1201);
        float _1214 = (dot(vec3(0.0), vec3(_1206 * _1198, _1206 * _1199, _1206 * _1200)) + 1.0) * 0.5;
        float _3794 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1223 = sqrt(((_1199 * _1199) + (_1198 * _1198)) + (_1200 * _1200)) / (_1152 + 9.9999997473787516355514526367188e-06);
        float _3805 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0));
        float _1225 = _1224 * 2.0;
        float _1229 = (1.0 - _1224) / (_1224 + 1.0);
        float _3816 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1230 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
        float _1239 = ((((1.0 - _1230) * (_1225 + 2.0)) * exp2(log2(isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0))) * (_1225 + 1.0))) + _1230) * _1152;
        float _1240 = _1120 * 0.5;
        float _1241 = _1130 * 0.5;
        float _1242 = _1140 * 0.5;
        float _1243 = dot(vec3(_1240, _1241, _1242), vec3(_1240, _1241, _1242));
        float _1248 = (_1243 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1243);
        float _1256 = (dot(vec3(0.0), vec3(_1248 * _1240, _1248 * _1241, _1248 * _1242)) + 1.0) * 0.5;
        float _3827 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1265 = sqrt(((_1241 * _1241) + (_1240 * _1240)) + (_1242 * _1242)) / (_1153 + 9.9999997473787516355514526367188e-06);
        float _3838 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1266 = isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0));
        float _1267 = _1266 * 2.0;
        float _1271 = (1.0 - _1266) / (_1266 + 1.0);
        float _3849 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1272 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
        float _1281 = ((((1.0 - _1272) * (_1267 + 2.0)) * exp2(log2(isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0))) * (_1267 + 1.0))) + _1272) * _1153;
        _1289 = _1120;
        _1291 = _1119;
        _1292 = _1118;
        _1293 = _1130;
        _1294 = _1129;
        _1295 = _1128;
        _1296 = _1140;
        _1297 = _1139;
        _1298 = _1138;
        _1299 = _1153;
        _1300 = _1152;
        _1301 = _1151;
        _1302 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0)));
        _1303 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0)));
        _1304 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0)));
    }
    else
    {
        _1289 = _1290;
        _1291 = _1290;
        _1292 = _1290;
        _1293 = _1290;
        _1294 = _1290;
        _1295 = _1290;
        _1296 = _1290;
        _1297 = _1290;
        _1298 = _1290;
        _1299 = _1290;
        _1300 = _1290;
        _1301 = _1290;
        _1302 = 0.0;
        _1303 = 0.0;
        _1304 = 0.0;
    }
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1360 = (cbModelParam._m0[38u].x * ((((fma(_994, cbModelParam._m0[30u].z, fma(_990, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _986)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1361 = (cbModelParam._m0[38u].y * ((((fma(_994, cbModelParam._m0[31u].z, fma(_990, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _986)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1362 = (((((fma(_994, cbModelParam._m0[32u].z, fma(_990, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _986)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1378 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1385 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        float _1397 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1364.x + (-0.5));
        float _1399 = _1397 * (_1364.y + (-0.5));
        float _1400 = _1397 * (_1364.z + (-0.5));
        float _1407 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1371.x + (-0.5));
        float _1409 = _1407 * (_1371.y + (-0.5));
        float _1410 = _1407 * (_1371.z + (-0.5));
        float _1417 = exp2((_1378.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1378.x + (-0.5));
        float _1419 = _1417 * (_1378.y + (-0.5));
        float _1420 = _1417 * (_1378.z + (-0.5));
        float _1427 = exp2((_1385.w + (-0.5)) * 20.0) * 2.0;
        float _1428 = _1427 * (_1385.x + (-0.5));
        float _1429 = _1427 * (_1385.y + (-0.5));
        float _1430 = _1427 * (_1385.z + (-0.5));
        float _1431 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1432 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1433 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1434 = _1398 * 0.5;
        float _1435 = _1408 * 0.5;
        float _1436 = _1418 * 0.5;
        float _1437 = dot(vec3(_1434, _1435, _1436), vec3(_1434, _1435, _1436));
        float _1442 = (_1437 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1437);
        float _1450 = (dot(vec3(0.0), vec3(_1442 * _1434, _1442 * _1435, _1442 * _1436)) + 1.0) * 0.5;
        float _3890 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1459 = sqrt(((_1435 * _1435) + (_1434 * _1434)) + (_1436 * _1436)) / (_1431 + 9.9999997473787516355514526367188e-06);
        float _3901 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0));
        float _1461 = _1460 * 2.0;
        float _1465 = (1.0 - _1460) / (_1460 + 1.0);
        float _3912 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1466 = isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0));
        float _1475 = ((((1.0 - _1466) * (_1461 + 2.0)) * exp2(log2(isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0))) * (_1461 + 1.0))) + _1466) * _1431;
        float _1476 = _1399 * 0.5;
        float _1477 = _1409 * 0.5;
        float _1478 = _1419 * 0.5;
        float _1479 = dot(vec3(_1476, _1477, _1478), vec3(_1476, _1477, _1478));
        float _1484 = (_1479 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1479);
        float _1492 = (dot(vec3(0.0), vec3(_1484 * _1476, _1484 * _1477, _1484 * _1478)) + 1.0) * 0.5;
        float _3923 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1501 = sqrt(((_1477 * _1477) + (_1476 * _1476)) + (_1478 * _1478)) / (_1432 + 9.9999997473787516355514526367188e-06);
        float _3934 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1502 = isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0));
        float _1503 = _1502 * 2.0;
        float _1507 = (1.0 - _1502) / (_1502 + 1.0);
        float _3945 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1508 = isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0));
        float _1517 = ((((1.0 - _1508) * (_1503 + 2.0)) * exp2(log2(isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0))) * (_1503 + 1.0))) + _1508) * _1432;
        float _1518 = _1400 * 0.5;
        float _1519 = _1410 * 0.5;
        float _1520 = _1420 * 0.5;
        float _1521 = dot(vec3(_1518, _1519, _1520), vec3(_1518, _1519, _1520));
        float _1526 = (_1521 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1521);
        float _1534 = (dot(vec3(0.0), vec3(_1526 * _1518, _1526 * _1519, _1526 * _1520)) + 1.0) * 0.5;
        float _3956 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1543 = sqrt(((_1519 * _1519) + (_1518 * _1518)) + (_1520 * _1520)) / (_1433 + 9.9999997473787516355514526367188e-06);
        float _3967 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1544 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
        float _1545 = _1544 * 2.0;
        float _1549 = (1.0 - _1544) / (_1544 + 1.0);
        float _3978 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
        float _1559 = ((((1.0 - _1550) * (_1545 + 2.0)) * exp2(log2(isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) * (_1545 + 1.0))) + _1550) * _1433;
        _1567 = _1400;
        _1568 = _1399;
        _1569 = _1398;
        _1570 = _1410;
        _1571 = _1409;
        _1572 = _1408;
        _1573 = _1420;
        _1574 = _1419;
        _1575 = _1418;
        _1576 = _1433;
        _1577 = _1432;
        _1578 = _1431;
        _1579 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)));
        _1580 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0)));
        _1581 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)));
    }
    else
    {
        _1567 = _1290;
        _1568 = _1290;
        _1569 = _1290;
        _1570 = _1290;
        _1571 = _1290;
        _1572 = _1290;
        _1573 = _1290;
        _1574 = _1290;
        _1575 = _1290;
        _1576 = _1290;
        _1577 = _1290;
        _1578 = _1290;
        _1579 = 0.0;
        _1580 = 0.0;
        _1581 = 0.0;
    }
    float _1591 = (cbModelParam._m0[1u].x * (_1579 - _1302)) + _1302;
    float _1592 = (cbModelParam._m0[1u].x * (_1580 - _1303)) + _1303;
    float _1593 = (cbModelParam._m0[1u].x * (_1581 - _1304)) + _1304;
    float _1614 = fma(_1593, cbSceneParam._m0[89u].z, fma(_1592, cbSceneParam._m0[89u].y, _1591 * cbSceneParam._m0[89u].x));
    float _1617 = fma(_1593, cbSceneParam._m0[90u].z, fma(_1592, cbSceneParam._m0[90u].y, _1591 * cbSceneParam._m0[90u].x));
    float _1620 = fma(_1593, cbSceneParam._m0[91u].z, fma(_1592, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1591));
    float _1635 = _900 * (-0.5);
    float _1636 = _901 * (-0.5);
    float _1637 = _902 * (-0.5);
    float _1638 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1569, _1572, _1575, _1578));
    float _1641 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1568, _1571, _1574, _1577));
    float _1644 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1567, _1570, _1573, _1576));
    float _1678;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1651 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1289, _1293, _1296, _1299));
        float _1655 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1291, _1294, _1297, _1300));
        float _1659 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1292, _1295, _1298, _1301));
        float _1666 = dot(vec4(cbModelParam._m0[39u]), vec4(_1635, _1636, _1637, 1.0));
        _1678 = dot(vec3(isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0)), isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1666) ? 0.0 : (isnan(0.0) ? _1666 : max(0.0, _1666))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1678 = 1.0;
    }
    float _1689;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1680 = dot(vec4(cbModelParam._m0[40u]), vec4(_1635, _1636, _1637, 1.0));
        _1689 = dot(vec3(isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1680) ? 0.0 : (isnan(0.0) ? _1680 : max(0.0, _1680))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1689 = 1.0;
    }
    float _1693 = (_1689 * cbModelParam._m0[1u].x) + (_1678 * (1.0 - cbModelParam._m0[1u].x));
    float _1702 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1783;
    float _1785;
    float _1787;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1750 = fma(_994, cbModelParam._m0[13u].z, fma(_990, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _986)) + cbModelParam._m0[13u].w;
        float _1754 = fma(_994, cbModelParam._m0[14u].z, fma(_990, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _986)) + cbModelParam._m0[14u].w;
        float _1758 = fma(_994, cbModelParam._m0[15u].z, fma(_990, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _986)) + cbModelParam._m0[15u].w;
        float _1761 = fma(_964, cbModelParam._m0[13u].z, fma(_963, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _962));
        float _1764 = fma(_964, cbModelParam._m0[14u].z, fma(_963, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _962));
        float _1767 = fma(_964, cbModelParam._m0[15u].z, fma(_963, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _962));
        float _1793;
        if (_1761 > 0.0)
        {
            _1793 = abs((1.0 - _1750) / _1761);
        }
        else
        {
            float frontier_phi_57_55_ladder;
            if (_1761 < 0.0)
            {
                frontier_phi_57_55_ladder = abs((_1750 + 1.0) / _1761);
            }
            else
            {
                frontier_phi_57_55_ladder = 5000.0;
            }
            _1793 = frontier_phi_57_55_ladder;
        }
        float _1962;
        if (_1764 > 0.0)
        {
            _1962 = abs((1.0 - _1754) / _1764);
        }
        else
        {
            float frontier_phi_66_62_ladder;
            if (_1764 < 0.0)
            {
                frontier_phi_66_62_ladder = abs((_1754 + 1.0) / _1764);
            }
            else
            {
                frontier_phi_66_62_ladder = 5000.0;
            }
            _1962 = frontier_phi_66_62_ladder;
        }
        float _2356;
        if (_1767 > 0.0)
        {
            _2356 = abs((1.0 - _1758) / _1767);
        }
        else
        {
            float frontier_phi_78_73_ladder;
            if (_1767 < 0.0)
            {
                frontier_phi_78_73_ladder = abs((_1758 + 1.0) / _1767);
            }
            else
            {
                frontier_phi_78_73_ladder = 5000.0;
            }
            _2356 = frontier_phi_78_73_ladder;
        }
        float _2358 = isnan(_1962) ? _1793 : (isnan(_1793) ? _1962 : min(_1793, _1962));
        float _2359 = isnan(_2356) ? _2358 : (isnan(_2358) ? _2356 : min(_2358, _2356));
        float _2363 = (_2359 * _1761) + _1750;
        float _2364 = (_2359 * _1764) + _1754;
        float _2365 = (_2359 * _1767) + _1758;
        float _2366 = _2359 * 9.9999997473787516355514526367188e-05;
        float _2368 = (-1.0) - _2366;
        float _2370 = _2366 + 1.0;
        float frontier_phi_56_78_ladder;
        float frontier_phi_56_78_ladder_1;
        float frontier_phi_56_78_ladder_2;
        if ((_2365 > _2370) || ((_2365 < _2368) || ((_2364 > _2370) || ((_2364 < _2368) || ((_2363 < _2368) || (_2363 > _2370))))))
        {
            frontier_phi_56_78_ladder = 0.0;
            frontier_phi_56_78_ladder_1 = 0.0;
            frontier_phi_56_78_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2625 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2365, cbModelParam._m0[9u].z, fma(_2364, cbModelParam._m0[9u].y, _2363 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2365, cbModelParam._m0[10u].z, fma(_2364, cbModelParam._m0[10u].y, _2363 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2365, cbModelParam._m0[11u].z, fma(_2364, cbModelParam._m0[11u].y, _2363 * cbModelParam._m0[11u].x))), _1702);
            frontier_phi_56_78_ladder = _2625.z * cbModelParam._m0[1u].y;
            frontier_phi_56_78_ladder_1 = _2625.y * cbModelParam._m0[1u].y;
            frontier_phi_56_78_ladder_2 = _2625.x * cbModelParam._m0[1u].y;
        }
        _1783 = frontier_phi_56_78_ladder_2;
        _1785 = frontier_phi_56_78_ladder_1;
        _1787 = frontier_phi_56_78_ladder;
    }
    else
    {
        vec4 _1771 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_962, _963, _964), _1702);
        _1783 = _1771.x * cbModelParam._m0[1u].y;
        _1785 = _1771.y * cbModelParam._m0[1u].y;
        _1787 = _1771.z * cbModelParam._m0[1u].y;
    }
    float _1790 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1878;
    float _1880;
    float _1882;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1842 = fma(_994, cbModelParam._m0[21u].z, fma(_990, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _986)) + cbModelParam._m0[21u].w;
        float _1846 = fma(_994, cbModelParam._m0[22u].z, fma(_990, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _986)) + cbModelParam._m0[22u].w;
        float _1850 = fma(_994, cbModelParam._m0[23u].z, fma(_990, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _986)) + cbModelParam._m0[23u].w;
        float _1853 = fma(_964, cbModelParam._m0[21u].z, fma(_963, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _962));
        float _1856 = fma(_964, cbModelParam._m0[22u].z, fma(_963, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _962));
        float _1859 = fma(_964, cbModelParam._m0[23u].z, fma(_963, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _962));
        float _1967;
        if (_1853 > 0.0)
        {
            _1967 = abs((1.0 - _1842) / _1853);
        }
        else
        {
            float frontier_phi_68_64_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_68_64_ladder = abs((_1842 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_68_64_ladder = 5000.0;
            }
            _1967 = frontier_phi_68_64_ladder;
        }
        float _2383;
        if (_1856 > 0.0)
        {
            _2383 = abs((1.0 - _1846) / _1856);
        }
        else
        {
            float frontier_phi_80_75_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_80_75_ladder = abs((_1846 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_80_75_ladder = 5000.0;
            }
            _2383 = frontier_phi_80_75_ladder;
        }
        float _2764;
        if (_1859 > 0.0)
        {
            _2764 = abs((1.0 - _1850) / _1859);
        }
        else
        {
            float frontier_phi_92_87_ladder;
            if (_1859 < 0.0)
            {
                frontier_phi_92_87_ladder = abs((_1850 + 1.0) / _1859);
            }
            else
            {
                frontier_phi_92_87_ladder = 5000.0;
            }
            _2764 = frontier_phi_92_87_ladder;
        }
        float _2766 = isnan(_2383) ? _1967 : (isnan(_1967) ? _2383 : min(_1967, _2383));
        float _2767 = isnan(_2764) ? _2766 : (isnan(_2766) ? _2764 : min(_2766, _2764));
        float _2771 = (_2767 * _1853) + _1842;
        float _2772 = (_2767 * _1856) + _1846;
        float _2773 = (_2767 * _1859) + _1850;
        float _2774 = _2767 * 9.9999997473787516355514526367188e-05;
        float _2775 = (-1.0) - _2774;
        float _2777 = _2774 + 1.0;
        float frontier_phi_65_92_ladder;
        float frontier_phi_65_92_ladder_1;
        float frontier_phi_65_92_ladder_2;
        if ((_2773 > _2777) || ((_2773 < _2775) || ((_2772 > _2777) || ((_2772 < _2775) || ((_2771 < _2775) || (_2771 > _2777))))))
        {
            frontier_phi_65_92_ladder = 0.0;
            frontier_phi_65_92_ladder_1 = 0.0;
            frontier_phi_65_92_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2907 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2773, cbModelParam._m0[17u].z, fma(_2772, cbModelParam._m0[17u].y, _2771 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2773, cbModelParam._m0[18u].z, fma(_2772, cbModelParam._m0[18u].y, _2771 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2773, cbModelParam._m0[19u].z, fma(_2772, cbModelParam._m0[19u].y, _2771 * cbModelParam._m0[19u].x))), _1790);
            frontier_phi_65_92_ladder = _2907.z * cbModelParam._m0[1u].z;
            frontier_phi_65_92_ladder_1 = _2907.y * cbModelParam._m0[1u].z;
            frontier_phi_65_92_ladder_2 = _2907.x * cbModelParam._m0[1u].z;
        }
        _1878 = frontier_phi_65_92_ladder_2;
        _1880 = frontier_phi_65_92_ladder_1;
        _1882 = frontier_phi_65_92_ladder;
    }
    else
    {
        vec4 _1862 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_962, _963, _964), _1790);
        _1878 = _1862.x * cbModelParam._m0[1u].z;
        _1880 = _1862.y * cbModelParam._m0[1u].z;
        _1882 = _1862.z * cbModelParam._m0[1u].z;
    }
    float _1894 = _961 * 0.01200000010430812835693359375;
    float _1896 = _1894 * ((cbModelParam._m0[1u].w * (_1878 - _1783)) + _1783);
    float _1897 = _1894 * ((cbModelParam._m0[1u].w * (_1880 - _1785)) + _1785);
    float _1898 = _1894 * ((cbModelParam._m0[1u].w * (_1882 - _1787)) + _1787);
    float _1901 = fma(_1898, cbSceneParam._m0[89u].z, fma(_1897, cbSceneParam._m0[89u].y, _1896 * cbSceneParam._m0[89u].x));
    float _1904 = fma(_1898, cbSceneParam._m0[90u].z, fma(_1897, cbSceneParam._m0[90u].y, _1896 * cbSceneParam._m0[90u].x));
    float _1907 = fma(_1898, cbSceneParam._m0[91u].z, fma(_1897, cbSceneParam._m0[91u].y, _1896 * cbSceneParam._m0[91u].x));
    float _1941 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1945 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1949 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1953 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1954 = _1941 / _1953;
    float _1955 = _1945 / _1953;
    float _1956 = _1949 / _1953;
    float _2104;
    float _2105;
    float _2106;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1983 = ((uint(_1956 > cbSceneParam._m0[59u].y) + uint(_1956 > cbSceneParam._m0[59u].x)) + uint(_1956 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1984 = _1983 + 43u;
        uint _1992 = _1983 + 44u;
        uint _2000 = _1983 + 45u;
        uint _2008 = _1983 + 46u;
        float _2019 = fma(_1953, cbSceneParam._m0[_1984].w, fma(_1949, cbSceneParam._m0[_1984].z, fma(_1945, cbSceneParam._m0[_1984].y, _1941 * cbSceneParam._m0[_1984].x)));
        float _2023 = fma(_1953, cbSceneParam._m0[_1992].w, fma(_1949, cbSceneParam._m0[_1992].z, fma(_1945, cbSceneParam._m0[_1992].y, _1941 * cbSceneParam._m0[_1992].x)));
        float _2031 = fma(_1953, cbSceneParam._m0[_2008].w, fma(_1949, cbSceneParam._m0[_2008].z, fma(_1945, cbSceneParam._m0[_2008].y, _1941 * cbSceneParam._m0[_2008].x)));
        float _2036 = cbSceneParam._m0[33u].z * _2031;
        float _2038 = cbSceneParam._m0[33u].w * _2031;
        float _2041 = fma(_1953, cbSceneParam._m0[_2000].w, fma(_1949, cbSceneParam._m0[_2000].z, fma(_1945, cbSceneParam._m0[_2000].y, _1941 * cbSceneParam._m0[_2000].x))) / _2031;
        float _2089 = (cbSceneParam._m0[33u].x - sqrt(((_1955 * _1955) + (_1954 * _1954)) + (_1956 * _1956))) * cbSceneParam._m0[33u].y;
        float _4104 = isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0));
        float _2097 = (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2036 + _2019) / _2031, (_2038 + _2023) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2038 + _2019) / _2031, (_2023 - _2036) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2019 - _2036) / _2031, (_2023 - _2038) / _2031), _2041), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2019 - _2038) / _2031, (_2036 + _2023) / _2031), _2041), 0.0)).x), vec4(0.25)));
        _2104 = 1.0 - (_2097 * cbSceneParam._m0[34u].x);
        _2105 = 1.0 - (_2097 * cbSceneParam._m0[34u].y);
        _2106 = 1.0 - (_2097 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2104 = 1.0;
        _2105 = 1.0;
        _2106 = 1.0;
    }
    float _2170;
    float _2172;
    float _2174;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2158 = fma(_1953, cbSceneParam._m0[63u].w, fma(_1949, cbSceneParam._m0[63u].z, fma(_1945, cbSceneParam._m0[63u].y, _1941 * cbSceneParam._m0[63u].x)));
        float _2159 = fma(_1953, cbSceneParam._m0[60u].w, fma(_1949, cbSceneParam._m0[60u].z, fma(_1945, cbSceneParam._m0[60u].y, _1941 * cbSceneParam._m0[60u].x))) / _2158;
        float _2160 = fma(_1953, cbSceneParam._m0[61u].w, fma(_1949, cbSceneParam._m0[61u].z, fma(_1945, cbSceneParam._m0[61u].y, _1941 * cbSceneParam._m0[61u].x))) / _2158;
        float frontier_phi_77_76_ladder;
        float frontier_phi_77_76_ladder_1;
        float frontier_phi_77_76_ladder_2;
        if ((((_2159 >= cbSceneParam._m0[64u].x) && (_2160 >= cbSceneParam._m0[64u].y)) && (_2159 <= cbSceneParam._m0[64u].z)) && (_2160 <= cbSceneParam._m0[64u].w))
        {
            float _2396 = fma(_1953, cbSceneParam._m0[62u].w, fma(_1949, cbSceneParam._m0[62u].z, fma(_1945, cbSceneParam._m0[62u].y, _1941 * cbSceneParam._m0[62u].x))) / _2158;
            float _2400 = isnan(cbSceneParam._m0[41u].w) ? _2396 : (isnan(_2396) ? cbSceneParam._m0[41u].w : max(_2396, cbSceneParam._m0[41u].w));
            float _2443 = (cbSceneParam._m0[33u].x - sqrt(((_1955 * _1955) + (_1954 * _1954)) + (_1956 * _1956))) * cbSceneParam._m0[33u].y;
            float _4120 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
            float _2450 = (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2159, cbSceneParam._m0[33u].w + _2160), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2159, _2160 - cbSceneParam._m0[33u].z), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2159 - cbSceneParam._m0[33u].z, _2160 - cbSceneParam._m0[33u].w), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2159 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2160), _2400), 0.0)).x), vec4(0.25)));
            float _2454 = 1.0 - (_2450 * cbSceneParam._m0[34u].x);
            float _2455 = 1.0 - (_2450 * cbSceneParam._m0[34u].y);
            float _2456 = 1.0 - (_2450 * cbSceneParam._m0[34u].z);
            frontier_phi_77_76_ladder = isnan(_2456) ? _2106 : (isnan(_2106) ? _2456 : min(_2106, _2456));
            frontier_phi_77_76_ladder_1 = isnan(_2455) ? _2105 : (isnan(_2105) ? _2455 : min(_2105, _2455));
            frontier_phi_77_76_ladder_2 = isnan(_2454) ? _2104 : (isnan(_2104) ? _2454 : min(_2104, _2454));
        }
        else
        {
            frontier_phi_77_76_ladder = _2106;
            frontier_phi_77_76_ladder_1 = _2105;
            frontier_phi_77_76_ladder_2 = _2104;
        }
        _2170 = frontier_phi_77_76_ladder_2;
        _2172 = frontier_phi_77_76_ladder_1;
        _2174 = frontier_phi_77_76_ladder;
    }
    else
    {
        _2170 = _2104;
        _2172 = _2105;
        _2174 = _2106;
    }
    uvec4 _2179 = floatBitsToUint(cbInstanceData._m0[_936 + 5u]);
    uint _2181 = _2179.x * 14u;
    uint _2182 = _2181 + 13u;
    float _2187 = _961 + (-1.0);
    float _2190 = (cbLight._m0[_2182].x * _2187) + 1.0;
    float _2191 = (cbLight._m0[_2182].y * _2187) + 1.0;
    uint _2192 = _2181 + 5u;
    float _2198 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2202 = _2181 + 4u;
    float _2211 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2215 = _2181 | 1u;
    float _2226 = dot(vec3(cbLight._m0[_2181].xyz), vec3(0.0));
    float _2229 = dot(vec3(cbLight._m0[_2215].xyz), vec3(0.0));
    float _4156 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _4167 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
    float _2234 = (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))) * 0.3183098733425140380859375;
    float _2236 = (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0))) * 0.3183098733425140380859375;
    float _2243 = ((cbLight._m0[_2192].x * _2198) * _2236) + (((cbLight._m0[_2202].x * _2170) * _2211) * _2234);
    float _2244 = ((_2198 * cbLight._m0[_2192].y) * _2236) + (((cbLight._m0[_2202].y * _2172) * _2211) * _2234);
    float _2245 = ((_2198 * cbLight._m0[_2192].z) * _2236) + (((cbLight._m0[_2202].z * _2174) * _2211) * _2234);
    uint _2246 = _2181 + 8u;
    float _2252 = cbLight._m0[_2181].x + _900;
    float _2253 = cbLight._m0[_2181].y + _901;
    float _2254 = cbLight._m0[_2181].z + _902;
    float _2258 = inversesqrt(dot(vec3(_2252, _2253, _2254), vec3(_2252, _2253, _2254)));
    float _2262 = dot(vec3(0.0), vec3(cbLight._m0[_2181].xyz));
    float _4178 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2265 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _2266 = dot(vec3(0.0), vec3(_900, _901, _902));
    float _4189 = isnan(0.0) ? _2266 : (isnan(_2266) ? 0.0 : max(_2266, 0.0));
    float _2269 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
    float _2270 = dot(vec3(cbLight._m0[_2181].xyz), vec3(_2252 * _2258, _2253 * _2258, _2254 * _2258));
    float _4200 = isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0));
    float _2281 = (exp2(log2(1.0 - (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2287 = (0.5 / ((_2265 + 9.9999999392252902907785028219223e-09) + _2269)) * _2265;
    float _4211 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _2289 = (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * 0.31831014156341552734375;
    uint _2303 = _2181 + 9u;
    float _2309 = cbLight._m0[_2215].x + _900;
    float _2310 = cbLight._m0[_2215].y + _901;
    float _2311 = cbLight._m0[_2215].z + _902;
    float _2315 = inversesqrt(dot(vec3(_2309, _2310, _2311), vec3(_2309, _2310, _2311)));
    float _2319 = dot(vec3(0.0), vec3(cbLight._m0[_2215].xyz));
    float _4222 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2322 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
    float _2323 = dot(vec3(cbLight._m0[_2215].xyz), vec3(_2309 * _2315, _2310 * _2315, _2311 * _2315));
    float _4233 = isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0));
    float _2332 = (exp2(log2(1.0 - (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2336 = (0.5 / ((_2322 + 9.9999999392252902907785028219223e-09) + _2269)) * _2322;
    float _4244 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
    float _2338 = (isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * 0.31831014156341552734375;
    float _2348 = (((_2332 * cbLight._m0[_2303].x) * _2338) * _2198) + ((((cbLight._m0[_2246].x * _2170) * _2281) * _2289) * _2211);
    float _2349 = (((_2332 * cbLight._m0[_2303].y) * _2338) * _2198) + ((((cbLight._m0[_2246].y * _2172) * _2281) * _2289) * _2211);
    float _2350 = (((_2332 * cbLight._m0[_2303].z) * _2338) * _2198) + ((((cbLight._m0[_2246].z * _2174) * _2281) * _2289) * _2211);
    float _2513;
    float _2515;
    float _2517;
    float _2519;
    float _2521;
    float _2523;
    if (_2179.y == 0u)
    {
        uvec4 _2468 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2469 = _2468.x;
        uint _2480 = uint((float(_2468.y) * floor(float(uint(cbSceneParam._m0[85u].y * _923) / _2469))) + floor(float(uint(cbSceneParam._m0[85u].x * _922) / _2469)));
        float _2490 = (log2(_1956 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2491 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        uint _2494 = uint(isnan(14.0) ? _2491 : (isnan(_2491) ? 14.0 : min(_2491, 14.0)));
        uvec4 _2499 = texelFetch(g_lightClusterGridBuffer, int(((_2494 << 2u) + (_2480 << 6u)) >> 2u));
        uint _2500 = _2499.x;
        uint _2501 = _2468.z;
        float _2634;
        float _2636;
        float _2638;
        float _2640;
        float _2642;
        float _2644;
        if (((((1u << ((_2501 >> 4u) & 15u)) + 4294967295u) & _2500) == 0u) || ((_2501 & 240u) == 0u))
        {
            _2634 = 0.0;
            _2636 = 0.0;
            _2638 = 0.0;
            _2640 = 0.0;
            _2642 = 0.0;
            _2644 = 0.0;
        }
        else
        {
            float _2635;
            float _2637;
            float _2639;
            float _2641;
            float _2643;
            float _2645;
            float _2819 = 0.0;
            float _2820 = 0.0;
            float _2821 = 0.0;
            float _2822 = 0.0;
            float _2823 = 0.0;
            float _2824 = 0.0;
            uint _2825 = 0u;
            uint _2834;
            bool _2835;
            for (;;)
            {
                _2834 = texelFetch(g_lightClassification, int((((_2494 << 5u) + (_2480 << 9u)) + (_2825 << 2u)) >> 2u)).x;
                _2835 = _2834 == 0u;
                float frontier_phi_103_pred;
                float frontier_phi_103_pred_1;
                float frontier_phi_103_pred_2;
                float frontier_phi_103_pred_3;
                float frontier_phi_103_pred_4;
                float frontier_phi_103_pred_5;
                if (_2835)
                {
                    frontier_phi_103_pred = _2820;
                    frontier_phi_103_pred_1 = _2824;
                    frontier_phi_103_pred_2 = _2823;
                    frontier_phi_103_pred_3 = _2822;
                    frontier_phi_103_pred_4 = _2821;
                    frontier_phi_103_pred_5 = _2819;
                }
                else
                {
                    float _2985;
                    float _2986;
                    float _2987;
                    float _2988;
                    float _2989;
                    float _2990;
                    uint _2991;
                    _2985 = _2819;
                    _2986 = _2820;
                    _2987 = _2821;
                    _2988 = _2822;
                    _2989 = _2823;
                    _2990 = _2824;
                    _2991 = _2834;
                    float _2912;
                    float _2913;
                    float _2914;
                    float _2915;
                    float _2916;
                    float _2917;
                    for (;;)
                    {
                        uint _2995 = uint(findLSB(_2991)) + (_2825 << 5u);
                        uint _2992 = (_2991 + 4294967295u) & _2991;
                        uint _2997 = _2995 * 48u;
                        vec4 _3011 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2997)).x, texelFetch(g_PointLightRenderingBuffer, int(_2997 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2997 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2997 + 3u)).x));
                        uint _3017 = (_2995 * 48u) + 4u;
                        vec4 _3030 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3017)).x, texelFetch(g_PointLightRenderingBuffer, int(_3017 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3017 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3017 + 3u)).x));
                        uint _3036 = (_2995 * 48u) + 8u;
                        vec3 _3047 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x));
                        float _3051 = _3011.x - _1954;
                        float _3052 = _3011.y - _1955;
                        float _3053 = _3011.z - _1956;
                        float _3054 = dot(vec3(_3051, _3052, _3053), vec3(_3051, _3052, _3053));
                        float _3057 = inversesqrt(_3054);
                        float _3066 = 1.0 - (_3054 * _3011.w);
                        float _4265 = isnan(0.0) ? _3066 : (isnan(_3066) ? 0.0 : max(_3066, 0.0));
                        float _3067 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
                        float _3068 = sqrt(_3054) * _3030.w;
                        float _3071 = 1.39999997615814208984375 / (_3068 + 1.39999997615814208984375);
                        float _3072 = _3071 * _3071;
                        float _3075 = ((1.0 - _3072) * dot(vec3(0.0), vec3(_3057 * _3051, _3057 * _3052, _3057 * _3053))) + _3072;
                        float _3078 = _3068 * _3068;
                        float _3082 = ((isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0))) * _3067) / ((_3078 * 0.699999988079071044921875) + 1.0);
                        float _3086 = (-0.0) - _1954;
                        float _3087 = (-0.0) - _1955;
                        float _3088 = (-0.0) - _1956;
                        float _3092 = inversesqrt(dot(vec3(_3086, _3087, _3088), vec3(_3086, _3087, _3088)));
                        float _3096 = dot(vec3(0.0), vec3(_3092 * _3086, _3092 * _3087, _3092 * _3088));
                        float _4281 = isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0));
                        float _4292 = isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0));
                        float _3100 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
                        float _3104 = (0.5 / (((isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0))) + 9.9999999392252902907785028219223e-09) + _3100)) * _3100;
                        float _4303 = isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : max(_3104, 0.0));
                        float _3113 = (((isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * 3.1415927410125732421875) / ((_3078 * 2.1991131305694580078125) + 3.141590118408203125)) * _3067;
                        _2915 = (_3082 * _3030.x) + _2988;
                        _2916 = (_3082 * _3030.y) + _2989;
                        _2917 = (_3082 * _3030.z) + _2990;
                        _2912 = (_3113 * _3047.x) + _2985;
                        _2913 = (_3113 * _3047.y) + _2986;
                        _2914 = (_3113 * _3047.z) + _2987;
                        if (_2992 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2985 = _2912;
                            _2986 = _2913;
                            _2987 = _2914;
                            _2988 = _2915;
                            _2989 = _2916;
                            _2990 = _2917;
                            _2991 = _2992;
                        }
                    }
                    frontier_phi_103_pred = _2913;
                    frontier_phi_103_pred_1 = _2917;
                    frontier_phi_103_pred_2 = _2916;
                    frontier_phi_103_pred_3 = _2915;
                    frontier_phi_103_pred_4 = _2914;
                    frontier_phi_103_pred_5 = _2912;
                }
                _2637 = frontier_phi_103_pred;
                _2645 = frontier_phi_103_pred_1;
                _2643 = frontier_phi_103_pred_2;
                _2641 = frontier_phi_103_pred_3;
                _2639 = frontier_phi_103_pred_4;
                _2635 = frontier_phi_103_pred_5;
                uint _2826 = _2825 + 1u;
                if (_2826 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2819 = _2635;
                    _2820 = _2637;
                    _2821 = _2639;
                    _2822 = _2641;
                    _2823 = _2643;
                    _2824 = _2645;
                    _2825 = _2826;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2634 = _2635;
            _2636 = _2637;
            _2638 = _2639;
            _2640 = _2641;
            _2642 = _2643;
            _2644 = _2645;
        }
        uvec4 _2648 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2649 = _2648.z;
        uint _2651 = (_2649 >> 8u) & 15u;
        float _2790;
        float _2792;
        float _2794;
        float _2796;
        float _2798;
        float _2800;
        if (((4294967295u << _2651) & _2500) == 0u)
        {
            _2790 = _2634;
            _2792 = _2636;
            _2794 = _2638;
            _2796 = _2640;
            _2798 = _2642;
            _2800 = _2644;
        }
        else
        {
            float _2815 = inversesqrt(dot(vec3(_1954, _1955, _1956), vec3(_1954, _1955, _1956)));
            float frontier_phi_94_95_ladder;
            float frontier_phi_94_95_ladder_1;
            float frontier_phi_94_95_ladder_2;
            float frontier_phi_94_95_ladder_3;
            float frontier_phi_94_95_ladder_4;
            float frontier_phi_94_95_ladder_5;
            if (_2651 < ((_2649 >> 12u) & 15u))
            {
                float _2791;
                float _2793;
                float _2795;
                float _2797;
                float _2799;
                float _2801;
                float _2968 = _2634;
                float _2969 = _2636;
                float _2970 = _2638;
                float _2971 = _2640;
                float _2972 = _2642;
                float _2973 = _2644;
                uint _2974 = _2651;
                uint _2983;
                bool _2984;
                for (;;)
                {
                    _2983 = texelFetch(g_lightClassification, int((((_2494 << 5u) + (_2480 << 9u)) + (_2974 << 2u)) >> 2u)).x;
                    _2984 = _2983 == 0u;
                    float frontier_phi_114_pred;
                    float frontier_phi_114_pred_1;
                    float frontier_phi_114_pred_2;
                    float frontier_phi_114_pred_3;
                    float frontier_phi_114_pred_4;
                    float frontier_phi_114_pred_5;
                    if (_2984)
                    {
                        frontier_phi_114_pred = _2973;
                        frontier_phi_114_pred_1 = _2972;
                        frontier_phi_114_pred_2 = _2971;
                        frontier_phi_114_pred_3 = _2970;
                        frontier_phi_114_pred_4 = _2969;
                        frontier_phi_114_pred_5 = _2968;
                    }
                    else
                    {
                        float _3127;
                        float _3128;
                        float _3129;
                        float _3130;
                        float _3131;
                        float _3132;
                        float _3377;
                        float _3378;
                        float _3379;
                        float _3380;
                        float _3381;
                        float _3382;
                        float _3140 = _2968;
                        float _3141 = _2969;
                        float _3142 = _2970;
                        float _3143 = _2971;
                        float _3144 = _2972;
                        float _3145 = _2973;
                        uint _3146 = _2983;
                        uint _3147;
                        vec4 _3172;
                        float _3173;
                        vec4 _3188;
                        vec3 _3200;
                        vec4 _3216;
                        vec4 _3231;
                        float _3277;
                        bool _3278;
                        for (;;)
                        {
                            uint _3157 = ((_2974 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3146));
                            _3147 = (_3146 + 4294967295u) & _3146;
                            uint _3159 = _3157 * 40u;
                            _3172 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3159)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3159 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3159 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3159 + 3u)).x));
                            _3173 = _3172.w;
                            uint _3175 = (_3157 * 40u) + 4u;
                            _3188 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3175)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3175 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3175 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3175 + 3u)).x));
                            uint _3190 = (_3157 * 40u) + 8u;
                            _3200 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3190)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3190 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3190 + 2u)).x));
                            uint _3203 = (_3157 * 40u) + 16u;
                            _3216 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3203)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3203 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3203 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3203 + 3u)).x));
                            uint _3218 = (_3157 * 40u) + 20u;
                            _3231 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3218)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3218 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3218 + 3u)).x));
                            uint _3233 = (_3157 * 40u) + 24u;
                            vec4 _3246 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3233)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 3u)).x));
                            uint _3252 = (_3157 * 40u) + 28u;
                            vec4 _3265 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3252)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3252 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3252 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3252 + 3u)).x));
                            _3277 = fma(_1956, _3265.z, fma(_1955, _3265.y, _3265.x * _1954)) + _3265.w;
                            _3278 = !((fma(_1956, _3246.z, fma(_1955, _3246.y, _3246.x * _1954)) + _3246.w) <= 0.0);
                            float frontier_phi_120_pred;
                            float frontier_phi_120_pred_1;
                            float frontier_phi_120_pred_2;
                            float frontier_phi_120_pred_3;
                            float frontier_phi_120_pred_4;
                            float frontier_phi_120_pred_5;
                            if (_3278)
                            {
                                float _3305 = _3172.x - _1954;
                                float _3306 = _3172.y - _1955;
                                float _3307 = _3172.z - _1956;
                                float _3308 = dot(vec3(_3305, _3306, _3307), vec3(_3305, _3306, _3307));
                                float _3311 = inversesqrt(_3308);
                                float _3312 = _3311 * _3305;
                                float _3313 = _3311 * _3306;
                                float _3314 = _3311 * _3307;
                                float _3318 = 1.0 - (_3308 / (_3173 * _3173));
                                float _4314 = isnan(0.0) ? _3318 : (isnan(_3318) ? 0.0 : max(_3318, 0.0));
                                float _3319 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
                                float _3323 = sqrt(_3308) * _3188.w;
                                float _3325 = 1.39999997615814208984375 / (_3323 + 1.39999997615814208984375);
                                float _3326 = _3325 * _3325;
                                float _3327 = 1.0 - _3326;
                                float _3329 = (_3327 * dot(vec3(_3312, _3313, _3314), vec3(0.0))) + _3326;
                                float _3332 = _3323 * _3323;
                                float _3336 = (fma(_1956, _3216.z, fma(_1955, _3216.y, _3216.x * _1954)) + _3216.w) / _3277;
                                float _3337 = (fma(_1956, _3231.z, fma(_1955, _3231.y, _3231.x * _1954)) + _3231.w) / _3277;
                                float _3341 = 1.0 - dot(vec2(_3336, _3337), vec2(_3336, _3337));
                                float _4330 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0));
                                float _3342 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
                                float _3343 = _3342 * (((isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0))) * _3319) / ((_3332 * 0.699999988079071044921875) + 1.0));
                                float _3353 = dot(vec3(0.0), vec3((-0.0) - (_1954 * _2815), (-0.0) - (_1955 * _2815), (-0.0) - (_1956 * _2815)));
                                float _4341 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0));
                                float _3361 = (_3327 * dot(vec3(0.0), vec3(_3312, _3313, _3314))) + _3326;
                                float _4352 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0));
                                float _3362 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
                                float _3366 = (0.5 / (((isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) + 9.9999999392252902907785028219223e-09) + _3362)) * _3362;
                                float _4363 = isnan(0.0) ? _3366 : (isnan(_3366) ? 0.0 : max(_3366, 0.0));
                                float _3373 = (_3342 * _3319) * (((isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * 3.1415927410125732421875) / ((_3332 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_120_pred = _3343 * _3188.z;
                                frontier_phi_120_pred_1 = _3343 * _3188.y;
                                frontier_phi_120_pred_2 = _3343 * _3188.x;
                                frontier_phi_120_pred_3 = _3373 * _3200.z;
                                frontier_phi_120_pred_4 = _3373 * _3200.y;
                                frontier_phi_120_pred_5 = _3373 * _3200.x;
                            }
                            else
                            {
                                frontier_phi_120_pred = 0.0;
                                frontier_phi_120_pred_1 = 0.0;
                                frontier_phi_120_pred_2 = 0.0;
                                frontier_phi_120_pred_3 = 0.0;
                                frontier_phi_120_pred_4 = 0.0;
                                frontier_phi_120_pred_5 = 0.0;
                            }
                            _3382 = frontier_phi_120_pred;
                            _3381 = frontier_phi_120_pred_1;
                            _3380 = frontier_phi_120_pred_2;
                            _3379 = frontier_phi_120_pred_3;
                            _3378 = frontier_phi_120_pred_4;
                            _3377 = frontier_phi_120_pred_5;
                            _3130 = _3380 + _3143;
                            _3131 = _3381 + _3144;
                            _3132 = _3382 + _3145;
                            _3127 = _3377 + _3140;
                            _3128 = _3378 + _3141;
                            _3129 = _3379 + _3142;
                            if (_3147 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3140 = _3127;
                                _3141 = _3128;
                                _3142 = _3129;
                                _3143 = _3130;
                                _3144 = _3131;
                                _3145 = _3132;
                                _3146 = _3147;
                                continue;
                            }
                        }
                        frontier_phi_114_pred = _3132;
                        frontier_phi_114_pred_1 = _3131;
                        frontier_phi_114_pred_2 = _3130;
                        frontier_phi_114_pred_3 = _3129;
                        frontier_phi_114_pred_4 = _3128;
                        frontier_phi_114_pred_5 = _3127;
                    }
                    _2801 = frontier_phi_114_pred;
                    _2799 = frontier_phi_114_pred_1;
                    _2797 = frontier_phi_114_pred_2;
                    _2795 = frontier_phi_114_pred_3;
                    _2793 = frontier_phi_114_pred_4;
                    _2791 = frontier_phi_114_pred_5;
                    uint _2975 = _2974 + 1u;
                    if (_2975 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2968 = _2791;
                        _2969 = _2793;
                        _2970 = _2795;
                        _2971 = _2797;
                        _2972 = _2799;
                        _2973 = _2801;
                        _2974 = _2975;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_94_95_ladder = _2797;
                frontier_phi_94_95_ladder_1 = _2801;
                frontier_phi_94_95_ladder_2 = _2799;
                frontier_phi_94_95_ladder_3 = _2795;
                frontier_phi_94_95_ladder_4 = _2793;
                frontier_phi_94_95_ladder_5 = _2791;
            }
            else
            {
                frontier_phi_94_95_ladder = _2640;
                frontier_phi_94_95_ladder_1 = _2644;
                frontier_phi_94_95_ladder_2 = _2642;
                frontier_phi_94_95_ladder_3 = _2638;
                frontier_phi_94_95_ladder_4 = _2636;
                frontier_phi_94_95_ladder_5 = _2634;
            }
            _2790 = frontier_phi_94_95_ladder_5;
            _2792 = frontier_phi_94_95_ladder_4;
            _2794 = frontier_phi_94_95_ladder_3;
            _2796 = frontier_phi_94_95_ladder;
            _2798 = frontier_phi_94_95_ladder_2;
            _2800 = frontier_phi_94_95_ladder_1;
        }
        float _2805 = isnan(1.0) ? _961 : (isnan(_961) ? 1.0 : min(_961, 1.0));
        _2513 = (_2805 * _2796) + _2243;
        _2515 = (_2805 * _2798) + _2244;
        _2517 = (_2805 * _2800) + _2245;
        _2519 = ((_2790 * 0.039999999105930328369140625) * _2805) + _2348;
        _2521 = ((_2792 * 0.039999999105930328369140625) * _2805) + _2349;
        _2523 = ((_2794 * 0.039999999105930328369140625) * _2805) + _2350;
    }
    else
    {
        _2513 = _2243;
        _2515 = _2244;
        _2517 = _2245;
        _2519 = _2348;
        _2521 = _2349;
        _2523 = _2350;
    }
    uint _2529 = _937 + uint(cbMatDynParam._m0[0u].w);
    float _2535 = ((_866 * (_854 - (_854 * _827))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2529].x;
    float _2536 = ((_866 * (_855 - (_855 * _827))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2529].y;
    float _2537 = ((_866 * (_856 - (_856 * _827))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2529].z;
    float _4379 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    float _4390 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
    float _4401 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _2554 = (((isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * (_2513 + ((isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))) * _961))) + ((_2519 + ((isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))) * _1693)) * cbPerFrame._m0[3u].x)) + _2535;
    float _2556 = (_2536 + ((_2521 + ((isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))) * _1693)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_2515 + ((isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))) * _961)));
    float _2558 = (_2537 + ((_2523 + ((isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0))) * _1693)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (_2517 + ((isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))) * _961)));
    float _2559 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
    float _2560 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
    float _2561 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
    float _2567 = cbMtdParam._m0[2u].x * _2535;
    float _2568 = cbMtdParam._m0[2u].y * _2536;
    float _2569 = cbMtdParam._m0[2u].z * _2537;
    float _4427 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2571 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
    uint _2572 = _936 + 6u;
    float _2580 = _922 / cbSceneParam._m0[86u].x;
    float _2581 = _923 / cbSceneParam._m0[86u].y;
    vec4 _2595 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2580, _2581, (log2((isnan(cbSceneParam._m0[77u].w) ? _895 : (isnan(_895) ? cbSceneParam._m0[77u].w : min(_895, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2597 = _2595.x;
    float _2598 = _2595.y;
    float _2599 = _2595.z;
    float _2600 = _2595.w;
    float _2696;
    float _2698;
    float _2700;
    float _2702;
    if (_895 > cbSceneParam._m0[78u].w)
    {
        float _2659 = isnan(_895) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _895 : min(cbSceneParam._m0[80u].w, _895));
        float _2660 = _2659 / _895;
        float _2671 = _2660 * _286;
        float _2672 = _287 * _2660;
        float _2673 = (-0.0) - _2672;
        float _2674 = _2660 * _288;
        float _2676 = (cbSceneParam._m0[77u].w * _2673) / _2659;
        float _2677 = _2676 + cbSceneParam._m0[79u].w;
        float _2678 = cbSceneParam._m0[79u].w - _2672;
        float _2684 = sqrt(((_2671 * _2671) + (_2672 * _2672)) + (_2674 * _2674));
        float _2687 = (1.0 - (cbSceneParam._m0[77u].w / _2659)) * _2684;
        float _2692 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2694 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2925;
        if (abs((_2673 - _2676) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2925 = ((((_2677 > 0.0) ? exp2(_2692 * _2677) : (2.0 - exp2(_2694 * _2677))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2687;
        }
        else
        {
            float _2848 = 1.0 / cbSceneParam._m0[80u].x;
            float _2849 = isnan(_2678) ? _2677 : (isnan(_2677) ? _2678 : max(_2677, _2678));
            float _2850 = isnan(_2678) ? _2677 : (isnan(_2677) ? _2678 : min(_2677, _2678));
            float _2859 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : min(_2849, 0.0));
            float _2860 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : min(_2850, 0.0));
            _2925 = ((abs(_2684 / _2673) * cbSceneParam._m0[80u].y) * ((((_2859 - _2860) * 2.0) - ((exp2(_2692 * (isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0)))) - exp2(_2692 * (isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0))))) * _2848)) - ((exp2(_2694 * _2859) - exp2(_2694 * _2860)) * _2848))) + (_2687 * cbSceneParam._m0[80u].z);
        }
        vec4 _2927 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2580, _2581, 1.0), 0.0);
        float _2936 = exp2((_2925 * (-1.44269502162933349609375)) * (1.0 - _2927.w));
        float _2937 = log2(_2936);
        float _2953 = log2(_2600);
        _2696 = (exp2(_2953 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2937 * cbSceneParam._m0[78u].x)) * _2927.x) / cbSceneParam._m0[78u].x)) + _2597;
        _2698 = (exp2(_2953 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2937 * cbSceneParam._m0[78u].y)) * _2927.y) / cbSceneParam._m0[78u].y)) + _2598;
        _2700 = (exp2(_2953 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2937 * cbSceneParam._m0[78u].z)) * _2927.z) / cbSceneParam._m0[78u].z)) + _2599;
        _2702 = _2936 * _2600;
    }
    else
    {
        _2696 = _2597;
        _2698 = _2598;
        _2700 = _2599;
        _2702 = _2600;
    }
    bool _2963;
    vec4 _2711;
    vec4 _2734;
    float _2736;
    float _2740;
    float _2741;
    float _2742;
    float _2745;
    float _2748;
    float _2751;
    float _2752;
    bool _2763;
    for (;;)
    {
        _2711 = cbMatDynParam._m0[0u];
        float _2713 = roundEven(_2711.y);
        bool _2714 = _2713 == 3.0;
        float _2716 = log2(_2702);
        float _2720 = exp2(_2716 * cbSceneParam._m0[78u].x);
        float _2721 = exp2(_2716 * cbSceneParam._m0[78u].y);
        float _2722 = exp2(_2716 * cbSceneParam._m0[78u].z);
        float _2723 = _2720 * _2559;
        float _2724 = _2721 * _2560;
        float _2725 = _2722 * _2561;
        float _2732 = _909 + (-0.5);
        _2734 = cbMtdParam._m0[1u];
        _2736 = _2734.y * _2732;
        float _2739 = (_2713 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2740 = _2739 * (_2714 ? _2723 : (_2723 + (cbSceneParam._m0[72u].w * _2696)));
        _2741 = _2739 * (_2714 ? _2724 : (_2724 + (cbSceneParam._m0[72u].w * _2698)));
        _2742 = _2739 * (_2714 ? _2725 : (_2725 + (cbSceneParam._m0[72u].w * _2700)));
        _2745 = ((_2567 * _2571) * _2720) * _2739;
        _2748 = ((_2568 * _2571) * _2721) * _2739;
        _2751 = ((_2569 * _2571) * _2722) * _2739;
        _2752 = _2732 * 0.999000012874603271484375;
        _2763 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2763)
        {
            if ((cbInstanceData._m0[_936 + 7u].x + _2752) < 0.5)
            {
                _2963 = true;
                break;
            }
        }
        uint _2883 = _937 + uint(_2711.w);
        if ((cbInstanceData._m0[_2883].w < 1.0) && ((cbInstanceData._m0[_2883].w + _2752) < 0.5))
        {
            _2963 = true;
            break;
        }
        if ((_2736 + 1.0) < _2734.x)
        {
            _2963 = true;
            break;
        }
        _2963 = false;
        break;
    }
    float _3118;
    if (_2963)
    {
        discard_state = true;
        _3118 = 0.0;
    }
    else
    {
        _3118 = cbInstanceData._m0[_2572].w;
    }
    SV_Target.x = _2740;
    SV_Target.y = _2741;
    SV_Target.z = _2742;
    SV_Target.w = _3118;
    SV_Target_1.x = _2745;
    SV_Target_1.y = _2748;
    SV_Target_1.z = _2751;
    SV_Target_1.w = cbInstanceData._m0[_2572].w;
    discard_exit();
}


