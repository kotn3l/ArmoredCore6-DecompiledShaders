#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_1;
layout(location = 7) out float TEXCOORD_4;
layout(location = 8) out vec4 TEXCOORD_7;
layout(location = 9) out vec4 TEXCOORD_8;
layout(location = 7, component = 1) out vec3 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _231 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _267 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _268 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _279 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _281 = texelFetch(g_InstanceIndexBuffer, int(_279));
    uint _282 = _281.x;
    precise float _283 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _288 = isnan(_283) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _283 : max(0.001000000047497451305389404296875, _283));
    precise float _290 = BLENDWEIGHT.x / _288;
    precise float _291 = BLENDWEIGHT.y / _288;
    precise float _292 = BLENDWEIGHT.z / _288;
    precise float _293 = BLENDWEIGHT.w / _288;
    uint _295 = _282 * 13u;
    uvec4 _300 = floatBitsToUint(cbInstanceData._m0[_295 + 4u]);
    uint _301 = _300.x;
    uint _303 = (_301 + uint(float(BLENDINDICES.x))) * 3u;
    uint _310 = _303 + 1u;
    uint _317 = _303 + 2u;
    precise float _324 = _290 * cbObjMatrix._m0[_303].x;
    precise float _325 = _290 * cbObjMatrix._m0[_310].x;
    precise float _326 = _290 * cbObjMatrix._m0[_317].x;
    precise float _327 = _290 * cbObjMatrix._m0[_303].y;
    precise float _328 = _290 * cbObjMatrix._m0[_310].y;
    precise float _329 = _290 * cbObjMatrix._m0[_317].y;
    precise float _330 = _290 * cbObjMatrix._m0[_303].z;
    precise float _331 = _290 * cbObjMatrix._m0[_310].z;
    precise float _332 = _290 * cbObjMatrix._m0[_317].z;
    precise float _333 = _290 * cbObjMatrix._m0[_303].w;
    precise float _334 = _290 * cbObjMatrix._m0[_310].w;
    precise float _335 = _290 * cbObjMatrix._m0[_317].w;
    uint _338 = (_301 + uint(float(BLENDINDICES.y))) * 3u;
    uint _345 = _338 + 1u;
    uint _352 = _338 + 2u;
    precise float _359 = _291 * cbObjMatrix._m0[_338].x;
    precise float _360 = _291 * cbObjMatrix._m0[_345].x;
    precise float _361 = _291 * cbObjMatrix._m0[_352].x;
    precise float _362 = _291 * cbObjMatrix._m0[_338].y;
    precise float _363 = _291 * cbObjMatrix._m0[_345].y;
    precise float _364 = _291 * cbObjMatrix._m0[_352].y;
    precise float _365 = _291 * cbObjMatrix._m0[_338].z;
    precise float _366 = _291 * cbObjMatrix._m0[_345].z;
    precise float _367 = _291 * cbObjMatrix._m0[_352].z;
    precise float _368 = _291 * cbObjMatrix._m0[_338].w;
    precise float _369 = _291 * cbObjMatrix._m0[_345].w;
    precise float _370 = _291 * cbObjMatrix._m0[_352].w;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    uint _385 = (_301 + uint(float(BLENDINDICES.z))) * 3u;
    uint _392 = _385 + 1u;
    uint _399 = _385 + 2u;
    precise float _406 = _292 * cbObjMatrix._m0[_385].x;
    precise float _407 = _292 * cbObjMatrix._m0[_392].x;
    precise float _408 = _292 * cbObjMatrix._m0[_399].x;
    precise float _409 = _292 * cbObjMatrix._m0[_385].y;
    precise float _410 = _292 * cbObjMatrix._m0[_392].y;
    precise float _411 = _292 * cbObjMatrix._m0[_399].y;
    precise float _412 = _292 * cbObjMatrix._m0[_385].z;
    precise float _413 = _292 * cbObjMatrix._m0[_392].z;
    precise float _414 = _292 * cbObjMatrix._m0[_399].z;
    precise float _415 = _292 * cbObjMatrix._m0[_385].w;
    precise float _416 = _292 * cbObjMatrix._m0[_392].w;
    precise float _417 = _292 * cbObjMatrix._m0[_399].w;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    uint _432 = (_301 + uint(float(BLENDINDICES.w))) * 3u;
    uint _439 = _432 + 1u;
    uint _446 = _432 + 2u;
    precise float _453 = _293 * cbObjMatrix._m0[_432].x;
    precise float _454 = _293 * cbObjMatrix._m0[_439].x;
    precise float _455 = _293 * cbObjMatrix._m0[_446].x;
    precise float _456 = _293 * cbObjMatrix._m0[_432].y;
    precise float _457 = _293 * cbObjMatrix._m0[_439].y;
    precise float _458 = _293 * cbObjMatrix._m0[_446].y;
    precise float _459 = _293 * cbObjMatrix._m0[_432].z;
    precise float _460 = _293 * cbObjMatrix._m0[_439].z;
    precise float _461 = _293 * cbObjMatrix._m0[_446].z;
    precise float _462 = _293 * cbObjMatrix._m0[_432].w;
    precise float _463 = _293 * cbObjMatrix._m0[_439].w;
    precise float _464 = _293 * cbObjMatrix._m0[_446].w;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = POSITION.x * _465;
    precise float _478 = POSITION.y * _468;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.z * _471;
    precise float _481 = _480 + _479;
    precise float _482 = 1.0 * _474;
    precise float _483 = _482 + _481;
    precise float _484 = POSITION.x * _466;
    precise float _485 = POSITION.y * _469;
    precise float _486 = _485 + _484;
    precise float _487 = POSITION.z * _472;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * _475;
    precise float _490 = _489 + _488;
    precise float _491 = POSITION.x * _467;
    precise float _492 = POSITION.y * _470;
    precise float _493 = _492 + _491;
    precise float _494 = POSITION.z * _473;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _476;
    precise float _497 = _496 + _495;
    float _672 = (((((cbPrevObjMatrix._m0[_338].w * _291) + (cbPrevObjMatrix._m0[_303].w * _290)) + (cbPrevObjMatrix._m0[_385].w * _292)) + (cbPrevObjMatrix._m0[_432].w * _293)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_338].z * _291) + (cbPrevObjMatrix._m0[_303].z * _290)) + (cbPrevObjMatrix._m0[_385].z * _292)) + (cbPrevObjMatrix._m0[_432].z * _293), fma(POSITION.y, (((cbPrevObjMatrix._m0[_338].y * _291) + (cbPrevObjMatrix._m0[_303].y * _290)) + (cbPrevObjMatrix._m0[_385].y * _292)) + (cbPrevObjMatrix._m0[_432].y * _293), ((((cbPrevObjMatrix._m0[_338].x * _291) + (cbPrevObjMatrix._m0[_303].x * _290)) + (cbPrevObjMatrix._m0[_385].x * _292)) + (cbPrevObjMatrix._m0[_432].x * _293)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _673 = (((((cbPrevObjMatrix._m0[_345].w * _291) + (cbPrevObjMatrix._m0[_310].w * _290)) + (cbPrevObjMatrix._m0[_392].w * _292)) + (cbPrevObjMatrix._m0[_439].w * _293)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_345].z * _291) + (cbPrevObjMatrix._m0[_310].z * _290)) + (cbPrevObjMatrix._m0[_392].z * _292)) + (cbPrevObjMatrix._m0[_439].z * _293), fma(POSITION.y, (((cbPrevObjMatrix._m0[_345].y * _291) + (cbPrevObjMatrix._m0[_310].y * _290)) + (cbPrevObjMatrix._m0[_392].y * _292)) + (cbPrevObjMatrix._m0[_439].y * _293), ((((cbPrevObjMatrix._m0[_345].x * _291) + (cbPrevObjMatrix._m0[_310].x * _290)) + (cbPrevObjMatrix._m0[_392].x * _292)) + (cbPrevObjMatrix._m0[_439].x * _293)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _674 = (((((cbPrevObjMatrix._m0[_352].w * _291) + (cbPrevObjMatrix._m0[_317].w * _290)) + (cbPrevObjMatrix._m0[_399].w * _292)) + (cbPrevObjMatrix._m0[_446].w * _293)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_352].z * _291) + (cbPrevObjMatrix._m0[_317].z * _290)) + (cbPrevObjMatrix._m0[_399].z * _292)) + (cbPrevObjMatrix._m0[_446].z * _293), fma(POSITION.y, (((cbPrevObjMatrix._m0[_352].y * _291) + (cbPrevObjMatrix._m0[_317].y * _290)) + (cbPrevObjMatrix._m0[_399].y * _292)) + (cbPrevObjMatrix._m0[_446].y * _293), ((((cbPrevObjMatrix._m0[_352].x * _291) + (cbPrevObjMatrix._m0[_317].x * _290)) + (cbPrevObjMatrix._m0[_399].x * _292)) + (cbPrevObjMatrix._m0[_446].x * _293)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _721 = fma(_234, _471, fma(_233, _468, _465 * _231));
    float _724 = fma(_234, _472, fma(_233, _469, _466 * _231));
    float _727 = fma(_234, _473, fma(_233, _470, _467 * _231));
    precise float _761 = _483 - cbSceneParam._m0[3u].x;
    precise float _762 = _490 - cbSceneParam._m0[3u].y;
    precise float _763 = _497 - cbSceneParam._m0[3u].z;
    precise float _791 = _761 * cbSceneParam._m0[24u].x;
    precise float _792 = _762 * cbSceneParam._m0[24u].y;
    precise float _793 = _792 + _791;
    precise float _794 = _763 * cbSceneParam._m0[24u].z;
    precise float _795 = _794 + _793;
    precise float _796 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _797 = _796 + _795;
    precise float _798 = _761 * cbSceneParam._m0[25u].x;
    precise float _799 = _762 * cbSceneParam._m0[25u].y;
    precise float _800 = _799 + _798;
    precise float _801 = _763 * cbSceneParam._m0[25u].z;
    precise float _802 = _801 + _800;
    precise float _803 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _804 = _803 + _802;
    precise float _805 = _761 * cbSceneParam._m0[26u].x;
    precise float _806 = _762 * cbSceneParam._m0[26u].y;
    precise float _807 = _806 + _805;
    precise float _808 = _763 * cbSceneParam._m0[26u].z;
    precise float _809 = _808 + _807;
    precise float _810 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _811 = _810 + _809;
    precise float _812 = _761 * cbSceneParam._m0[27u].x;
    precise float _813 = _762 * cbSceneParam._m0[27u].y;
    precise float _814 = _813 + _812;
    precise float _815 = _763 * cbSceneParam._m0[27u].z;
    precise float _816 = _815 + _814;
    precise float _817 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _818 = _817 + _816;
    gl_Position.x = _797;
    gl_Position.y = _804;
    gl_Position.z = _811;
    gl_Position.w = _818;
    POSITION_1.x = _797;
    POSITION_1.y = _804;
    POSITION_1.z = _811;
    POSITION_1.w = _818;
    NORMAL_1.x = _721;
    NORMAL_1.y = _724;
    NORMAL_1.z = _727;
    NORMAL_1.w = float(_282);
    TANGENT_1.x = fma(_245, _471, fma(_244, _468, _465 * _243));
    TANGENT_1.y = fma(_245, _472, fma(_244, _469, _466 * _243));
    TANGENT_1.z = fma(_245, _473, fma(_244, _470, _467 * _243));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_257, _471, fma(_256, _468, _465 * _255));
    TANGENT_2_1.y = fma(_257, _472, fma(_256, _469, _466 * _255));
    TANGENT_2_1.z = fma(_257, _473, fma(_256, _470, _467 * _255));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_269, _471, fma(_268, _468, _465 * _267));
    TANGENT_4_1.y = fma(_269, _472, fma(_268, _469, _466 * _267));
    TANGENT_4_1.z = fma(_269, _473, fma(_268, _470, _467 * _267));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_7.x = _797;
    TEXCOORD_7.y = _804;
    TEXCOORD_7.z = _811;
    TEXCOORD_7.w = _818;
    TEXCOORD_8.x = fma(_674, cbSceneParam._m0[29u].z, fma(_673, cbSceneParam._m0[29u].y, _672 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_674, cbSceneParam._m0[30u].z, fma(_673, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _672)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_674, cbSceneParam._m0[31u].z, fma(_673, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _672)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_674, cbSceneParam._m0[32u].z, fma(_673, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _672)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _721;
    TEXCOORD_9.y = _724;
    TEXCOORD_9.z = _727;
    gl_ClipDistance[0u] = dot(vec4(_797, _804, _811, _818), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_797, _804, _811, _818), vec4(cbInstanceData._m0[_295 + 3u]));
}


