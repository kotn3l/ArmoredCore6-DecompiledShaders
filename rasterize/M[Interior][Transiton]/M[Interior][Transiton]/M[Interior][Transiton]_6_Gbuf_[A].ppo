#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _179 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _180 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _181 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_179, _180, _181), vec3(_179, _180, _181)));
    float _188 = _187 * _179;
    float _189 = _187 * _180;
    float _190 = _187 * _181;
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _195 = _194 * NORMAL.x;
    float _196 = _194 * NORMAL.y;
    float _197 = _194 * NORMAL.z;
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _202 = _201 * TANGENT.x;
    float _203 = _201 * TANGENT.y;
    float _204 = _201 * TANGENT.z;
    float _248 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _258 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _248);
    float _259 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _248);
    float _260 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _248);
    vec4 _274 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _277 = _274.x;
    vec4 _295 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _312 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _277) + cbMtdParam._m0[12u].x) * _295.x;
    float _314 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _277) + cbMtdParam._m0[12u].y) * _295.y;
    float _316 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _277) + cbMtdParam._m0[12u].z) * _295.z;
    vec4 _334 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _374 = cbMtdParam._m0[27u].w + _258;
    float _375 = cbMtdParam._m0[28u].x + _259;
    float _376 = cbMtdParam._m0[28u].y + _260;
    float _390 = (-0.0) - dot(vec3(_374, _375, _376), vec3(_188, _189, _190));
    float _391 = (-0.0) - dot(vec3(_374, _375, _376), vec3(_202, _203, _204));
    float _392 = (-0.0) - dot(vec3(_374, _375, _376), vec3((-0.0) - _195, (-0.0) - _196, (-0.0) - _197));
    float _396 = inversesqrt(dot(vec3(_390, _391, _392), vec3(_390, _391, _392)));
    float _399 = _396 * _392;
    float _400 = (_396 * _390) + ((cbMtdParam._m0[25u].w * _277) * ((_334.x * 2.0) + (-1.0)));
    float _401 = (_396 * _391) + ((cbMtdParam._m0[26u].x * _277) * ((_334.y * 2.0) + (-1.0)));
    float _402 = _400 * cbMtdParam._m0[24u].x;
    float _403 = _401 * cbMtdParam._m0[23u].w;
    float _404 = fract(TEXCOORD.x);
    float _405 = fract(TEXCOORD.y);
    float _411;
    if (_402 > 0.0)
    {
        _411 = (1.0 - _404) / _402;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_402 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _404) / _402;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _411 = frontier_phi_3_2_ladder;
    }
    float _419;
    if (_403 > 0.0)
    {
        _419 = (1.0 - _405) / _403;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_403 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _405) / _403;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _419 = frontier_phi_7_6_ladder;
    }
    bool _421 = _399 > 0.0;
    float _423 = _421 ? (cbMtdParam._m0[17u].x / _399) : 5000.0;
    float _424 = isnan(_419) ? _411 : (isnan(_411) ? _419 : min(_411, _419));
    float _425 = isnan(_423) ? _424 : (isnan(_424) ? _423 : min(_424, _423));
    float _429 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _430 = _404 + (-0.5);
    float _433 = _405 + (-0.5);
    float _436 = ((_425 * _399) + _429) / _429;
    vec4 _461 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_430 + (_425 * _402)) / _436) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_433 + (_425 * _403)) / _436) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _474 = (_461.x * _277) * cbMtdParam._m0[9u].x;
    float _475 = (_461.y * _277) * cbMtdParam._m0[9u].y;
    float _476 = (_461.z * _277) * cbMtdParam._m0[9u].z;
    float _494 = _400 * cbMtdParam._m0[26u].z;
    float _495 = _401 * cbMtdParam._m0[26u].y;
    bool _496 = _494 > 0.0;
    float _501;
    if (_496)
    {
        _501 = (1.0 - _404) / _494;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_494 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _404) / _494;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _501 = frontier_phi_11_10_ladder;
    }
    bool _503 = _495 > 0.0;
    float _508;
    if (_503)
    {
        _508 = (1.0 - _405) / _495;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_495 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _405) / _495;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _508 = frontier_phi_15_14_ladder;
    }
    float _511 = _421 ? (cbMtdParam._m0[19u].z / _399) : 5000.0;
    float _512 = isnan(_508) ? _501 : (isnan(_501) ? _508 : min(_501, _508));
    float _513 = isnan(_511) ? _512 : (isnan(_512) ? _511 : min(_512, _511));
    float _517 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _521 = ((_513 * _399) + _517) / _517;
    float _526 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _528 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _544 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_430 + (_513 * _494)) / _521) + 0.5) + _526) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_433 + (_513 * _495)) / _521) + 0.5) + _528) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _559;
    if (_496)
    {
        _559 = (1.0 - _404) / _494;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_494 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _404) / _494;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _559 = frontier_phi_19_18_ladder;
    }
    float _565;
    if (_503)
    {
        _565 = (1.0 - _405) / _495;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_495 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _405) / _495;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _565 = frontier_phi_23_22_ladder;
    }
    float _567 = isnan(_565) ? _559 : (isnan(_559) ? _565 : min(_559, _565));
    float _568 = isnan(_511) ? _567 : (isnan(_567) ? _511 : min(_567, _511));
    float _575 = ((_568 * _399) + _517) / _517;
    vec4 _595 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_430 + (_568 * _494)) / _575) + 0.5) + _526) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_433 + (_568 * _495)) / _575) + 0.5) + _528) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _597 = _595.x;
    float _607 = (((((cbMtdParam._m0[10u].x * _277) * _544.x) - _474) * _277) * _597) + _474;
    float _608 = (((((cbMtdParam._m0[10u].y * _277) * _544.y) - _475) * _277) * _597) + _475;
    float _609 = (((((cbMtdParam._m0[10u].z * _277) * _544.z) - _476) * _277) * _597) + _476;
    float _622 = _400 * cbMtdParam._m0[27u].x;
    float _623 = _401 * cbMtdParam._m0[26u].w;
    bool _624 = _622 > 0.0;
    float _629;
    if (_624)
    {
        _629 = (1.0 - _404) / _622;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_622 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _404) / _622;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _629 = frontier_phi_27_26_ladder;
    }
    bool _631 = _623 > 0.0;
    float _636;
    if (_631)
    {
        _636 = (1.0 - _405) / _623;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_623 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _405) / _623;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _636 = frontier_phi_31_30_ladder;
    }
    float _639 = _421 ? (cbMtdParam._m0[23u].x / _399) : 5000.0;
    float _640 = isnan(_636) ? _629 : (isnan(_629) ? _636 : min(_629, _636));
    float _641 = isnan(_639) ? _640 : (isnan(_640) ? _639 : min(_640, _639));
    float _645 = cbMtdParam._m0[23u].x * cbMtdParam._m0[17u].z;
    float _649 = ((_641 * _399) + _645) / _645;
    float _654 = cbMtdParam._m0[22u].w - cbMtdParam._m0[27u].y * trunc(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    float _656 = floor(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    vec4 _672 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * (((((_430 + (_641 * _622)) / _649) + 0.5) + _654) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * (((((_433 + (_641 * _623)) / _649) + 0.5) + _656) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[11u].w));
    float _687;
    if (_624)
    {
        _687 = (1.0 - _404) / _622;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_622 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _404) / _622;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _687 = frontier_phi_35_34_ladder;
    }
    float _693;
    if (_631)
    {
        _693 = (1.0 - _405) / _623;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_623 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _405) / _623;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _693 = frontier_phi_39_38_ladder;
    }
    float _695 = isnan(_693) ? _687 : (isnan(_687) ? _693 : min(_687, _693));
    float _696 = isnan(_639) ? _695 : (isnan(_695) ? _639 : min(_695, _639));
    float _703 = ((_696 * _399) + _645) / _645;
    vec4 _723 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * (((((_430 + (_696 * _622)) / _703) + 0.5) + _654) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * (((((_433 + (_696 * _623)) / _703) + 0.5) + _656) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[12u].w));
    float _725 = _723.x;
    float _735 = (((((cbMtdParam._m0[13u].x * _277) * _672.x) - _607) * _277) * _725) + _607;
    float _736 = (((((cbMtdParam._m0[13u].y * _277) * _672.y) - _608) * _277) * _725) + _608;
    float _737 = (((((cbMtdParam._m0[13u].z * _277) * _672.z) - _609) * _277) * _725) + _609;
    vec4 _750 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _754 = _750.z;
    float _757 = (_750.x * 2.0) + (-1.0);
    float _758 = (_750.y * 2.0) + (-1.0);
    float _759 = dot(vec2(_757, _758), vec2(_757, _758));
    float _1310 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _764 = sqrt(1.0 - (isnan(1.0) ? _1310 : (isnan(_1310) ? 1.0 : min(_1310, 1.0))));
    float _773 = (cbMtdParam._m0[19u].y * _735) * cbMtdParam._m0[16u].x;
    float _775 = (cbMtdParam._m0[19u].y * _736) * cbMtdParam._m0[16u].y;
    float _777 = (cbMtdParam._m0[19u].y * _737) * cbMtdParam._m0[16u].z;
    vec4 _801 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _806 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _812 = ((_801.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _814 = (-0.0) - (cbMtdParam._m0[21u].x * ((_801.x * 0.5) + (-0.25)));
    float _815 = fract(_806);
    float _817 = fract(_806 + 0.5);
    vec4 _844 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_815 * _814) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_812 * _815) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _846 = _844.x;
    float _852 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_817 * _814) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_812 * _817) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _846) * abs((_815 * 2.0) + (-1.0))) + _846;
    float _858 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _862 = fract(abs(_858));
    float _872 = sin(cbMtdParam._m0[21u].z);
    float _873 = cos(cbMtdParam._m0[21u].z);
    float _874 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _875 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _900 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_875, (-0.0) - _872, _873 * _874) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_875, _873, _874 * _872) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_858 >= ((-0.0) - _858)) ? _862 : ((-0.0) - _862)) * cbMtdParam._m0[18u].z) - _852)) + cbMtdParam._m0[18u].w;
    float _901 = ceil(_900);
    float _1321 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _902 = isnan(1.0) ? _1321 : (isnan(_1321) ? 1.0 : min(_1321, 1.0));
    float _922 = ((((cbMtdParam._m0[21u].w * _735) * cbMtdParam._m0[15u].x) - _773) * _902) + _773;
    float _923 = ((((cbMtdParam._m0[21u].w * _736) * cbMtdParam._m0[15u].y) - _775) * _902) + _775;
    float _924 = ((((cbMtdParam._m0[21u].w * _737) * cbMtdParam._m0[15u].z) - _777) * _902) + _777;
    float _928 = abs(cbMtdParam._m0[20u].w * _900);
    float _932 = (((_928 * cbMtdParam._m0[18u].y) - _852) * _928) + _852;
    float _1332 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _933 = isnan(1.0) ? _1332 : (isnan(_1332) ? 1.0 : min(_1332, 1.0));
    vec4 _945 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _960 = (cbMtdParam._m0[14u].x * _945.x) * cbMtdParam._m0[19u].x;
    float _961 = (cbMtdParam._m0[14u].y * _945.y) * cbMtdParam._m0[19u].x;
    float _962 = (cbMtdParam._m0[14u].z * _945.z) * cbMtdParam._m0[19u].x;
    float _969 = exp2(log2(_933) * cbMtdParam._m0[20u].x);
    float _986 = cbSceneParam._m0[72u].y * ((_969 * ((_960 - _922) - (_960 * _933))) + _922);
    float _987 = cbSceneParam._m0[72u].y * ((_969 * ((_961 - _923) - (_961 * _933))) + _923);
    float _988 = ((_969 * ((_962 - _924) - (_962 * _933))) + _924) * cbSceneParam._m0[72u].y;
    float _991 = fma(_764, _195, fma(_758, _202, _757 * _188));
    float _994 = fma(_764, _196, fma(_758, _203, _757 * _189));
    float _997 = fma(_764, _197, fma(_758, _204, _757 * _190));
    float _1001 = inversesqrt(dot(vec3(_991, _994, _997), vec3(_991, _994, _997)));
    float _1343 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
    float _1354 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
    float _1003 = isnan(1.0) ? _1354 : (isnan(_1354) ? 1.0 : min(_1354, 1.0));
    float _1365 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _1004 = isnan(1.0) ? _1365 : (isnan(_1365) ? 1.0 : min(_1365, 1.0));
    float _1376 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _1005 = isnan(1.0) ? _1376 : (isnan(_1376) ? 1.0 : min(_1376, 1.0));
    uint _1007 = uint(roundEven(NORMAL.w));
    vec4 _1012 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1014 = _1012.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1080 = sqrt(((_258 * _258) + (_259 * _259)) + (_260 * _260));
        float _1086 = (cbMatDynParam._m0[5u].x * _1080) + cbMatDynParam._m0[5u].y;
        float _1387 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1087 = isnan(1.0) ? _1387 : (isnan(_1387) ? 1.0 : min(_1387, 1.0));
        float _1091 = (cbMatDynParam._m0[5u].z * _1080) + cbMatDynParam._m0[5u].w;
        float _1398 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0))) - _1087)) + _1087) < ((_1014 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1118;
    uint _1034;
    vec4 _1038;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1053;
    float _1057;
    vec4 _1060;
    float _1062;
    float _1063;
    bool _1074;
    for (;;)
    {
        _1034 = _1007 * 13u;
        _1038 = cbInstanceData._m0[(_1034 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _1042 = (cbMtdParam._m0[0u].x * _1003) * _1038.x;
        float _1043 = (cbMtdParam._m0[0u].y * _1004) * _1038.y;
        float _1044 = (cbMtdParam._m0[0u].z * _1005) * _1038.z;
        float _1409 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        _1045 = isnan(1.0) ? _1409 : (isnan(_1409) ? 1.0 : min(_1409, 1.0));
        float _1420 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        _1046 = isnan(1.0) ? _1420 : (isnan(_1420) ? 1.0 : min(_1420, 1.0));
        float _1431 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
        _1047 = isnan(1.0) ? _1431 : (isnan(_1431) ? 1.0 : min(_1431, 1.0));
        _1048 = _986 * _1038.x;
        _1049 = _987 * _1038.y;
        _1050 = _988 * _1038.z;
        _1053 = cbMtdParam._m0[2u].w;
        _1057 = cbInstanceData._m0[_1034 + 6u].w;
        float _1058 = _1014 + (-0.5);
        _1060 = cbMtdParam._m0[1u];
        _1062 = _1060.y * _1058;
        _1063 = _1058 * 0.999000012874603271484375;
        _1074 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1074)
        {
            if ((cbInstanceData._m0[_1034 + 7u].x + _1063) < 0.5)
            {
                _1118 = true;
                break;
            }
        }
        if ((_1038.w < 1.0) && ((_1038.w + _1063) < 0.5))
        {
            _1118 = true;
            break;
        }
        if ((_1062 + 1.0) < _1060.x)
        {
            _1118 = true;
            break;
        }
        _1118 = false;
        break;
    }
    if (_1118)
    {
        discard_state = true;
    }
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _1151 = _1057;
        _1152 = _1057;
        _1153 = _1057;
        _1154 = _1057;
    }
    else
    {
        _1151 = _1053;
        _1152 = 0.0;
        _1153 = float(floatBitsToUint(cbInstanceData._m0[_1034 + 5u]).x) * 0.0039215688593685626983642578125;
        _1154 = TEXCOORD_4;
    }
    SV_Target.x = ((_991 * 0.5) * _1001) + 0.500488758087158203125;
    SV_Target.y = ((_994 * 0.5) * _1001) + 0.500488758087158203125;
    SV_Target.z = ((_997 * 0.5) * _1001) + 0.500488758087158203125;
    SV_Target.w = _1152;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1343 : (isnan(_1343) ? 1.0 : min(_1343, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1154;
    SV_Target_2.x = _1045;
    SV_Target_2.y = _1046;
    SV_Target_2.z = _1047;
    SV_Target_2.w = _1153;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1152;
    SV_Target_4.x = _1048 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _1049 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _1050 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _1151;
    discard_exit();
}


