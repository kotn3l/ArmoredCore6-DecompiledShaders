#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _993;
uint _2172;
uint _2173;
uint _2174;
uint _2408;
uint _2409;
uint _2410;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _197 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _198 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _199 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _205 = inversesqrt(dot(vec3(_197, _198, _199), vec3(_197, _198, _199)));
    float _212 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _219 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _276 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _266);
    float _277 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _266);
    float _278 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _266);
    vec4 _297 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _335 = cbMtdParam._m0[27u].w + _276;
    float _336 = cbMtdParam._m0[28u].x + _277;
    float _337 = cbMtdParam._m0[28u].y + _278;
    float _351 = (-0.0) - dot(vec3(_335, _336, _337), vec3(_205 * _197, _205 * _198, _205 * _199));
    float _352 = (-0.0) - dot(vec3(_335, _336, _337), vec3(_219 * TANGENT.x, _219 * TANGENT.y, _219 * TANGENT.z));
    float _353 = (-0.0) - dot(vec3(_335, _336, _337), vec3((-0.0) - (_212 * NORMAL.x), (-0.0) - (_212 * NORMAL.y), (-0.0) - (_212 * NORMAL.z)));
    float _357 = inversesqrt(dot(vec3(_351, _352, _353), vec3(_351, _352, _353)));
    float _360 = _357 * _353;
    float _361 = (_357 * _351) + (((_297.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _362 = (_357 * _352) + (((_297.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _363 = _361 * cbMtdParam._m0[24u].x;
    float _364 = _362 * cbMtdParam._m0[23u].w;
    float _365 = fract(TEXCOORD.x);
    float _366 = fract(TEXCOORD.y);
    float _372;
    if (_363 > 0.0)
    {
        _372 = (1.0 - _365) / _363;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_363 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _365) / _363;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _372 = frontier_phi_3_2_ladder;
    }
    float _380;
    if (_364 > 0.0)
    {
        _380 = (1.0 - _366) / _364;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_364 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _366) / _364;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _380 = frontier_phi_7_6_ladder;
    }
    bool _382 = _360 > 0.0;
    float _384 = _382 ? (cbMtdParam._m0[17u].x / _360) : 5000.0;
    float _385 = isnan(_380) ? _372 : (isnan(_372) ? _380 : min(_372, _380));
    float _386 = isnan(_384) ? _385 : (isnan(_385) ? _384 : min(_385, _384));
    float _390 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _391 = _365 + (-0.5);
    float _394 = _366 + (-0.5);
    float _397 = ((_386 * _360) + _390) / _390;
    vec4 _422 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_391 + (_386 * _363)) / _397) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_394 + (_386 * _364)) / _397) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _432 = cbMtdParam._m0[9u].x * _422.x;
    float _433 = cbMtdParam._m0[9u].y * _422.y;
    float _434 = cbMtdParam._m0[9u].z * _422.z;
    float _452 = _361 * cbMtdParam._m0[26u].z;
    float _453 = _362 * cbMtdParam._m0[26u].y;
    bool _454 = _452 > 0.0;
    float _459;
    if (_454)
    {
        _459 = (1.0 - _365) / _452;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_452 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _365) / _452;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _459 = frontier_phi_11_10_ladder;
    }
    bool _461 = _453 > 0.0;
    float _466;
    if (_461)
    {
        _466 = (1.0 - _366) / _453;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _366) / _453;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _466 = frontier_phi_15_14_ladder;
    }
    float _469 = _382 ? (cbMtdParam._m0[19u].z / _360) : 5000.0;
    float _470 = isnan(_466) ? _459 : (isnan(_459) ? _466 : min(_459, _466));
    float _471 = isnan(_469) ? _470 : (isnan(_470) ? _469 : min(_470, _469));
    float _475 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _479 = ((_471 * _360) + _475) / _475;
    float _484 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _486 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _502 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_391 + (_471 * _452)) / _479) + 0.5) + _484) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_394 + (_471 * _453)) / _479) + 0.5) + _486) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _514;
    if (_454)
    {
        _514 = (1.0 - _365) / _452;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_452 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _365) / _452;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _514 = frontier_phi_19_18_ladder;
    }
    float _520;
    if (_461)
    {
        _520 = (1.0 - _366) / _453;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_453 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _366) / _453;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _520 = frontier_phi_23_22_ladder;
    }
    float _522 = isnan(_520) ? _514 : (isnan(_514) ? _520 : min(_514, _520));
    float _523 = isnan(_469) ? _522 : (isnan(_522) ? _469 : min(_522, _469));
    float _530 = ((_523 * _360) + _475) / _475;
    vec4 _550 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_391 + (_523 * _452)) / _530) + 0.5) + _484) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_394 + (_523 * _453)) / _530) + 0.5) + _486) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _552 = _550.x;
    float _559 = (_552 * ((_502.x * cbMtdParam._m0[10u].x) - _432)) + _432;
    float _560 = (_552 * ((_502.y * cbMtdParam._m0[10u].y) - _433)) + _433;
    float _561 = (_552 * ((_502.z * cbMtdParam._m0[10u].z) - _434)) + _434;
    float _570 = (cbMtdParam._m0[16u].x * cbMtdParam._m0[19u].y) * _559;
    float _572 = (_560 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].y;
    float _574 = (_561 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].z;
    vec4 _598 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _603 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _609 = ((_598.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _611 = (-0.0) - (cbMtdParam._m0[21u].x * ((_598.x * 0.5) + (-0.25)));
    float _612 = fract(_603);
    float _614 = fract(_603 + 0.5);
    vec4 _641 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_612 * _611) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_609 * _612) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _643 = _641.x;
    float _649 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_614 * _611) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_609 * _614) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _643) * abs((_612 * 2.0) + (-1.0))) + _643;
    float _655 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _659 = fract(abs(_655));
    float _669 = sin(cbMtdParam._m0[21u].z);
    float _670 = cos(cbMtdParam._m0[21u].z);
    float _671 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _672 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _697 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_672, (-0.0) - _669, _670 * _671) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_672, _670, _671 * _669) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_655 >= ((-0.0) - _655)) ? _659 : ((-0.0) - _659)) * cbMtdParam._m0[18u].z) - _649)) + cbMtdParam._m0[18u].w;
    float _698 = ceil(_697);
    float _2674 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _699 = isnan(1.0) ? _2674 : (isnan(_2674) ? 1.0 : min(_2674, 1.0));
    float _719 = ((((cbMtdParam._m0[21u].w * _559) * cbMtdParam._m0[15u].x) - _570) * _699) + _570;
    float _720 = ((((cbMtdParam._m0[21u].w * _560) * cbMtdParam._m0[15u].y) - _572) * _699) + _572;
    float _721 = ((((cbMtdParam._m0[21u].w * _561) * cbMtdParam._m0[15u].z) - _574) * _699) + _574;
    float _725 = abs(cbMtdParam._m0[20u].w * _697);
    float _729 = (((_725 * cbMtdParam._m0[18u].y) - _649) * _725) + _649;
    float _2685 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _730 = isnan(1.0) ? _2685 : (isnan(_2685) ? 1.0 : min(_2685, 1.0));
    vec4 _742 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _757 = (cbMtdParam._m0[14u].x * _742.x) * cbMtdParam._m0[19u].x;
    float _758 = (cbMtdParam._m0[14u].y * _742.y) * cbMtdParam._m0[19u].x;
    float _759 = (cbMtdParam._m0[14u].z * _742.z) * cbMtdParam._m0[19u].x;
    float _766 = exp2(log2(_730) * cbMtdParam._m0[20u].x);
    float _801 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _805 = inversesqrt(dot(vec3(_276, _277, _278), vec3(_276, _277, _278)));
    float _806 = _276 * _805;
    float _807 = _277 * _805;
    float _808 = _278 * _805;
    float _814 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _815 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _824 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_814 * cbSceneParam._m0[86u].x, _815 * cbSceneParam._m0[86u].y));
    float _827 = _824.x * TEXCOORD_4;
    float _828 = (-0.0) - _806;
    float _829 = (-0.0) - _807;
    float _830 = (-0.0) - _808;
    float _852 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _856 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _860 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _992;
    float _994;
    float _995;
    float _996;
    float _997;
    float _998;
    float _999;
    float _1000;
    float _1001;
    float _1002;
    float _1003;
    float _1004;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _915 = (cbModelParam._m0[37u].x * ((((fma(_860, cbModelParam._m0[26u].z, fma(_856, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _852)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _917 = (cbModelParam._m0[37u].y * ((((fma(_860, cbModelParam._m0[27u].z, fma(_856, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _852)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _918 = (((((fma(_860, cbModelParam._m0[28u].z, fma(_856, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _852)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _921 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_915, _917, _918), 0.0);
        vec4 _928 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_915, _917, _918), 0.0);
        vec4 _935 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_915, _917, _918), 0.0);
        vec4 _942 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_915, _917, _918), 0.0);
        float _955 = exp2((_921.w + (-0.5)) * 20.0) * 2.0;
        float _965 = exp2((_928.w + (-0.5)) * 20.0) * 2.0;
        float _975 = exp2((_935.w + (-0.5)) * 20.0) * 2.0;
        float _985 = exp2((_942.w + (-0.5)) * 20.0) * 2.0;
        float _986 = _985 * (_942.x + (-0.5));
        float _987 = _985 * (_942.y + (-0.5));
        float _988 = _985 * (_942.z + (-0.5));
        _992 = _955 * (_921.z + (-0.5));
        _994 = _955 * (_921.y + (-0.5));
        _995 = _955 * (_921.x + (-0.5));
        _996 = _965 * (_928.z + (-0.5));
        _997 = _965 * (_928.y + (-0.5));
        _998 = _965 * (_928.x + (-0.5));
        _999 = _975 * (_935.z + (-0.5));
        _1000 = _975 * (_935.y + (-0.5));
        _1001 = _975 * (_935.x + (-0.5));
        _1002 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        _1003 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        _1004 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    }
    else
    {
        _992 = _993;
        _994 = _993;
        _995 = _993;
        _996 = _993;
        _997 = _993;
        _998 = _993;
        _999 = _993;
        _1000 = _993;
        _1001 = _993;
        _1002 = _993;
        _1003 = _993;
        _1004 = _993;
    }
    float _1131;
    float _1132;
    float _1133;
    float _1134;
    float _1135;
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    float _1142;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1057 = (cbModelParam._m0[38u].x * ((((fma(_860, cbModelParam._m0[30u].z, fma(_856, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _852)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1058 = (cbModelParam._m0[38u].y * ((((fma(_860, cbModelParam._m0[31u].z, fma(_856, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _852)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1059 = (((((fma(_860, cbModelParam._m0[32u].z, fma(_856, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _852)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1061 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1068 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1075 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1082 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        float _1094 = exp2((_1061.w + (-0.5)) * 20.0) * 2.0;
        float _1104 = exp2((_1068.w + (-0.5)) * 20.0) * 2.0;
        float _1114 = exp2((_1075.w + (-0.5)) * 20.0) * 2.0;
        float _1124 = exp2((_1082.w + (-0.5)) * 20.0) * 2.0;
        float _1125 = _1124 * (_1082.x + (-0.5));
        float _1126 = _1124 * (_1082.y + (-0.5));
        float _1127 = _1124 * (_1082.z + (-0.5));
        _1131 = _1094 * (_1061.z + (-0.5));
        _1132 = _1094 * (_1061.y + (-0.5));
        _1133 = _1094 * (_1061.x + (-0.5));
        _1134 = _1104 * (_1068.z + (-0.5));
        _1135 = _1104 * (_1068.y + (-0.5));
        _1136 = _1104 * (_1068.x + (-0.5));
        _1137 = _1114 * (_1075.z + (-0.5));
        _1138 = _1114 * (_1075.y + (-0.5));
        _1139 = _1114 * (_1075.x + (-0.5));
        _1140 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        _1141 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        _1142 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
    }
    else
    {
        _1131 = _993;
        _1132 = _993;
        _1133 = _993;
        _1134 = _993;
        _1135 = _993;
        _1136 = _993;
        _1137 = _993;
        _1138 = _993;
        _1139 = _993;
        _1140 = _993;
        _1141 = _993;
        _1142 = _993;
    }
    float _1157 = _806 * (-0.5);
    float _1158 = _807 * (-0.5);
    float _1159 = _808 * (-0.5);
    float _1160 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_1133, _1136, _1139, _1142));
    float _1163 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_1132, _1135, _1138, _1141));
    float _1166 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_1131, _1134, _1137, _1140));
    float _1201;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1173 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_992, _996, _999, _1002));
        float _1177 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_994, _997, _1000, _1003));
        float _1181 = dot(vec4(_1157, _1158, _1159, 1.0), vec4(_995, _998, _1001, _1004));
        float _1188 = dot(vec4(cbModelParam._m0[39u]), vec4(_1157, _1158, _1159, 1.0));
        _1201 = dot(vec3(isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0)), isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0)), isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1188) ? 0.0 : (isnan(0.0) ? _1188 : max(0.0, _1188))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1201 = 1.0;
    }
    float _1212;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1203 = dot(vec4(cbModelParam._m0[40u]), vec4(_1157, _1158, _1159, 1.0));
        _1212 = dot(vec3(isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0)), isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0)), isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1203) ? 0.0 : (isnan(0.0) ? _1203 : max(0.0, _1203))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1212 = 1.0;
    }
    float _1216 = (_1212 * cbModelParam._m0[1u].x) + (_1201 * (1.0 - cbModelParam._m0[1u].x));
    float _1222 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1303;
    float _1305;
    float _1307;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1270 = fma(_860, cbModelParam._m0[13u].z, fma(_856, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _852)) + cbModelParam._m0[13u].w;
        float _1274 = fma(_860, cbModelParam._m0[14u].z, fma(_856, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _852)) + cbModelParam._m0[14u].w;
        float _1278 = fma(_860, cbModelParam._m0[15u].z, fma(_856, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _852)) + cbModelParam._m0[15u].w;
        float _1281 = fma(_830, cbModelParam._m0[13u].z, fma(_829, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _828));
        float _1284 = fma(_830, cbModelParam._m0[14u].z, fma(_829, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _828));
        float _1287 = fma(_830, cbModelParam._m0[15u].z, fma(_829, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _828));
        float _1313;
        if (_1281 > 0.0)
        {
            _1313 = abs((1.0 - _1270) / _1281);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1281 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1270 + 1.0) / _1281);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1313 = frontier_phi_38_36_ladder;
        }
        float _1611;
        if (_1284 > 0.0)
        {
            _1611 = abs((1.0 - _1274) / _1284);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1284 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1274 + 1.0) / _1284);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1611 = frontier_phi_47_43_ladder;
        }
        float _1925;
        if (_1287 > 0.0)
        {
            _1925 = abs((1.0 - _1278) / _1287);
        }
        else
        {
            float frontier_phi_61_54_ladder;
            if (_1287 < 0.0)
            {
                frontier_phi_61_54_ladder = abs((_1278 + 1.0) / _1287);
            }
            else
            {
                frontier_phi_61_54_ladder = 5000.0;
            }
            _1925 = frontier_phi_61_54_ladder;
        }
        float _1927 = isnan(_1611) ? _1313 : (isnan(_1313) ? _1611 : min(_1313, _1611));
        float _1928 = isnan(_1925) ? _1927 : (isnan(_1927) ? _1925 : min(_1927, _1925));
        float _1932 = (_1928 * _1281) + _1270;
        float _1933 = (_1928 * _1284) + _1274;
        float _1934 = (_1928 * _1287) + _1278;
        float _1935 = _1928 * 9.9999997473787516355514526367188e-05;
        float _1936 = (-1.0) - _1935;
        float _1938 = _1935 + 1.0;
        float frontier_phi_37_61_ladder;
        float frontier_phi_37_61_ladder_1;
        float frontier_phi_37_61_ladder_2;
        if ((_1934 > _1938) || ((_1934 < _1936) || ((_1933 > _1938) || ((_1933 < _1936) || ((_1932 < _1936) || (_1932 > _1938))))))
        {
            frontier_phi_37_61_ladder = 0.0;
            frontier_phi_37_61_ladder_1 = 0.0;
            frontier_phi_37_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2045 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1934, cbModelParam._m0[9u].z, fma(_1933, cbModelParam._m0[9u].y, _1932 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1934, cbModelParam._m0[10u].z, fma(_1933, cbModelParam._m0[10u].y, _1932 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1934, cbModelParam._m0[11u].z, fma(_1933, cbModelParam._m0[11u].y, _1932 * cbModelParam._m0[11u].x))), _1222);
            frontier_phi_37_61_ladder = _2045.z * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_1 = _2045.y * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_2 = _2045.x * cbModelParam._m0[1u].y;
        }
        _1303 = frontier_phi_37_61_ladder_2;
        _1305 = frontier_phi_37_61_ladder_1;
        _1307 = frontier_phi_37_61_ladder;
    }
    else
    {
        vec4 _1291 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_828, _829, _830), _1222);
        _1303 = _1291.x * cbModelParam._m0[1u].y;
        _1305 = _1291.y * cbModelParam._m0[1u].y;
        _1307 = _1291.z * cbModelParam._m0[1u].y;
    }
    float _1310 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1398;
    float _1400;
    float _1402;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1362 = fma(_860, cbModelParam._m0[21u].z, fma(_856, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _852)) + cbModelParam._m0[21u].w;
        float _1366 = fma(_860, cbModelParam._m0[22u].z, fma(_856, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _852)) + cbModelParam._m0[22u].w;
        float _1370 = fma(_860, cbModelParam._m0[23u].z, fma(_856, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _852)) + cbModelParam._m0[23u].w;
        float _1373 = fma(_830, cbModelParam._m0[21u].z, fma(_829, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _828));
        float _1376 = fma(_830, cbModelParam._m0[22u].z, fma(_829, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _828));
        float _1379 = fma(_830, cbModelParam._m0[23u].z, fma(_829, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _828));
        float _1616;
        if (_1373 > 0.0)
        {
            _1616 = abs((1.0 - _1362) / _1373);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1373 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1362 + 1.0) / _1373);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1616 = frontier_phi_49_45_ladder;
        }
        float _1951;
        if (_1376 > 0.0)
        {
            _1951 = abs((1.0 - _1366) / _1376);
        }
        else
        {
            float frontier_phi_63_56_ladder;
            if (_1376 < 0.0)
            {
                frontier_phi_63_56_ladder = abs((_1366 + 1.0) / _1376);
            }
            else
            {
                frontier_phi_63_56_ladder = 5000.0;
            }
            _1951 = frontier_phi_63_56_ladder;
        }
        float _2102;
        if (_1379 > 0.0)
        {
            _2102 = abs((1.0 - _1370) / _1379);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_1379 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_1370 + 1.0) / _1379);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _2102 = frontier_phi_77_72_ladder;
        }
        float _2104 = isnan(_1951) ? _1616 : (isnan(_1616) ? _1951 : min(_1616, _1951));
        float _2105 = isnan(_2102) ? _2104 : (isnan(_2104) ? _2102 : min(_2104, _2102));
        float _2109 = (_2105 * _1373) + _1362;
        float _2110 = (_2105 * _1376) + _1366;
        float _2111 = (_2105 * _1379) + _1370;
        float _2112 = _2105 * 9.9999997473787516355514526367188e-05;
        float _2113 = (-1.0) - _2112;
        float _2115 = _2112 + 1.0;
        float frontier_phi_46_77_ladder;
        float frontier_phi_46_77_ladder_1;
        float frontier_phi_46_77_ladder_2;
        if ((_2111 > _2115) || ((_2111 < _2113) || ((_2110 > _2115) || ((_2110 < _2113) || ((_2109 < _2113) || (_2109 > _2115))))))
        {
            frontier_phi_46_77_ladder = 0.0;
            frontier_phi_46_77_ladder_1 = 0.0;
            frontier_phi_46_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2271 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2111, cbModelParam._m0[17u].z, fma(_2110, cbModelParam._m0[17u].y, _2109 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2111, cbModelParam._m0[18u].z, fma(_2110, cbModelParam._m0[18u].y, _2109 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2111, cbModelParam._m0[19u].z, fma(_2110, cbModelParam._m0[19u].y, _2109 * cbModelParam._m0[19u].x))), _1310);
            frontier_phi_46_77_ladder = _2271.z * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_1 = _2271.x * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_2 = _2271.y * cbModelParam._m0[1u].z;
        }
        _1398 = frontier_phi_46_77_ladder_1;
        _1400 = frontier_phi_46_77_ladder_2;
        _1402 = frontier_phi_46_77_ladder;
    }
    else
    {
        vec4 _1382 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_828, _829, _830), _1310);
        _1398 = _1382.x * cbModelParam._m0[1u].z;
        _1400 = _1382.y * cbModelParam._m0[1u].z;
        _1402 = _1382.z * cbModelParam._m0[1u].z;
    }
    float _1414 = _827 * 0.01200000010430812835693359375;
    float _1416 = _1414 * ((cbModelParam._m0[1u].w * (_1398 - _1303)) + _1303);
    float _1417 = _1414 * ((cbModelParam._m0[1u].w * (_1400 - _1305)) + _1305);
    float _1418 = _1414 * ((cbModelParam._m0[1u].w * (_1402 - _1307)) + _1307);
    float _1439 = fma(_1418, cbSceneParam._m0[89u].z, fma(_1417, cbSceneParam._m0[89u].y, _1416 * cbSceneParam._m0[89u].x));
    float _1442 = fma(_1418, cbSceneParam._m0[90u].z, fma(_1417, cbSceneParam._m0[90u].y, _1416 * cbSceneParam._m0[90u].x));
    float _1445 = fma(_1418, cbSceneParam._m0[91u].z, fma(_1417, cbSceneParam._m0[91u].y, _1416 * cbSceneParam._m0[91u].x));
    vec4 _1453 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_814, _815));
    float _1455 = _1453.w;
    uint _1471 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1475 = floatBitsToUint(cbInstanceData._m0[_1471 + 5u]);
    uint _1477 = _1475.x * 14u;
    uint _1478 = _1477 + 13u;
    float _1483 = _827 + (-1.0);
    float _1486 = (cbLight._m0[_1478].x * _1483) + 1.0;
    float _1487 = (cbLight._m0[_1478].y * _1483) + 1.0;
    uint _1488 = _1477 + 8u;
    float _1499 = cbLight._m0[_1477].x + _806;
    float _1500 = cbLight._m0[_1477].y + _807;
    float _1501 = cbLight._m0[_1477].z + _808;
    float _1505 = inversesqrt(dot(vec3(_1499, _1500, _1501), vec3(_1499, _1500, _1501)));
    float _1509 = dot(vec3(0.0), vec3(cbLight._m0[_1477].xyz));
    float _2811 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    float _1512 = isnan(1.0) ? _2811 : (isnan(_2811) ? 1.0 : min(_2811, 1.0));
    float _1513 = dot(vec3(0.0), vec3(_806, _807, _808));
    float _2822 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1516 = isnan(1.0) ? _2822 : (isnan(_2822) ? 1.0 : min(_2822, 1.0));
    float _1517 = dot(vec3(cbLight._m0[_1477].xyz), vec3(_1499 * _1505, _1500 * _1505, _1501 * _1505));
    float _2833 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _1528 = (exp2(log2(1.0 - (isnan(1.0) ? _2833 : (isnan(_2833) ? 1.0 : min(_2833, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1534 = (0.5 / ((_1512 + 9.9999999392252902907785028219223e-09) + _1516)) * _1512;
    float _2844 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
    float _1536 = (isnan(1.0) ? _2844 : (isnan(_2844) ? 1.0 : min(_2844, 1.0))) * 0.31831014156341552734375;
    float _1538 = isnan(1.0) ? _1486 : (isnan(_1486) ? 1.0 : min(_1486, 1.0));
    uint _1551 = _1477 + 9u;
    uint _1557 = _1477 | 1u;
    float _1563 = cbLight._m0[_1557].x + _806;
    float _1564 = cbLight._m0[_1557].y + _807;
    float _1565 = cbLight._m0[_1557].z + _808;
    float _1569 = inversesqrt(dot(vec3(_1563, _1564, _1565), vec3(_1563, _1564, _1565)));
    float _1573 = dot(vec3(0.0), vec3(cbLight._m0[_1557].xyz));
    float _2860 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
    float _1576 = isnan(1.0) ? _2860 : (isnan(_2860) ? 1.0 : min(_2860, 1.0));
    float _1577 = dot(vec3(cbLight._m0[_1557].xyz), vec3(_1563 * _1569, _1564 * _1569, _1565 * _1569));
    float _2871 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
    float _1586 = (exp2(log2(1.0 - (isnan(1.0) ? _2871 : (isnan(_2871) ? 1.0 : min(_2871, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1590 = (0.5 / ((_1576 + 9.9999999392252902907785028219223e-09) + _1516)) * _1576;
    float _2882 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
    float _1592 = (isnan(1.0) ? _2882 : (isnan(_2882) ? 1.0 : min(_2882, 1.0))) * 0.31831014156341552734375;
    float _1593 = isnan(1.0) ? _1487 : (isnan(_1487) ? 1.0 : min(_1487, 1.0));
    float _1603 = (((_1586 * cbLight._m0[_1551].x) * _1592) * _1593) + ((((cbLight._m0[_1488].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1455))) * _1528) * _1536) * _1538);
    float _1604 = (((_1586 * cbLight._m0[_1551].y) * _1592) * _1593) + ((((cbLight._m0[_1488].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1455))) * _1528) * _1536) * _1538);
    float _1605 = (((_1586 * cbLight._m0[_1551].z) * _1592) * _1593) + ((((cbLight._m0[_1488].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1455))) * _1528) * _1536) * _1538);
    float _1722;
    float _1724;
    float _1726;
    if (_1475.y == 0u)
    {
        float _1661 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1662 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1661;
        float _1663 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1661;
        float _1664 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1661;
        uvec4 _1676 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1677 = _1676.x;
        uint _1688 = uint((float(_1676.y) * floor(float(uint(cbSceneParam._m0[85u].y * _815) / _1677))) + floor(float(uint(cbSceneParam._m0[85u].x * _814) / _1677)));
        float _1698 = (log2(_1664 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1699 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        uint _1702 = uint(isnan(14.0) ? _1699 : (isnan(_1699) ? 14.0 : min(_1699, 14.0)));
        uvec4 _1708 = texelFetch(g_lightClusterGridBuffer, int(((_1702 << 2u) + (_1688 << 6u)) >> 2u));
        uint _1709 = _1708.x;
        uint _1710 = _1676.z;
        float _1809;
        float _1811;
        float _1813;
        if (((((1u << ((_1710 >> 4u) & 15u)) + 4294967295u) & _1709) == 0u) || ((_1710 & 240u) == 0u))
        {
            _1809 = 0.0;
            _1811 = 0.0;
            _1813 = 0.0;
        }
        else
        {
            float _1810;
            float _1812;
            float _1814;
            float _1976 = 0.0;
            float _1977 = 0.0;
            float _1978 = 0.0;
            uint _1979 = 0u;
            uint _1988;
            bool _1989;
            for (;;)
            {
                _1988 = texelFetch(g_lightClassification, int((((_1702 << 5u) + (_1688 << 9u)) + (_1979 << 2u)) >> 2u)).x;
                _1989 = _1988 == 0u;
                float frontier_phi_74_pred;
                float frontier_phi_74_pred_1;
                float frontier_phi_74_pred_2;
                if (_1989)
                {
                    frontier_phi_74_pred = _1978;
                    frontier_phi_74_pred_1 = _1977;
                    frontier_phi_74_pred_2 = _1976;
                }
                else
                {
                    float _2142;
                    float _2143;
                    float _2144;
                    uint _2145;
                    _2142 = _1976;
                    _2143 = _1977;
                    _2144 = _1978;
                    _2145 = _1988;
                    float _2054;
                    float _2055;
                    float _2056;
                    for (;;)
                    {
                        uint _2149 = uint(findLSB(_2145)) + (_1979 << 5u);
                        uint _2146 = (_2145 + 4294967295u) & _2145;
                        uint _2151 = _2149 * 48u;
                        vec4 _2165 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2151)).x, texelFetch(g_PointLightRenderingBuffer, int(_2151 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2151 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2151 + 3u)).x));
                        uint _2182 = (_2149 * 48u) + 8u;
                        vec3 _2193 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2182)).x, texelFetch(g_PointLightRenderingBuffer, int(_2182 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2182 + 2u)).x));
                        float _2197 = _2165.x - _1662;
                        float _2198 = _2165.y - _1663;
                        float _2199 = _2165.z - _1664;
                        float _2200 = dot(vec3(_2197, _2198, _2199), vec3(_2197, _2198, _2199));
                        float _2203 = inversesqrt(_2200);
                        float _2212 = 1.0 - (_2200 * _2165.w);
                        float _2908 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
                        float _2214 = sqrt(_2200) * uintBitsToFloat(uvec4(_2172, _2173, _2174, texelFetch(g_PointLightRenderingBuffer, int(((_2149 * 48u) + 4u) + 3u)).x)).w;
                        float _2217 = 1.39999997615814208984375 / (_2214 + 1.39999997615814208984375);
                        float _2218 = _2217 * _2217;
                        float _2221 = ((1.0 - _2218) * dot(vec3(0.0), vec3(_2203 * _2197, _2203 * _2198, _2203 * _2199))) + _2218;
                        float _2223 = (-0.0) - _1662;
                        float _2224 = (-0.0) - _1663;
                        float _2225 = (-0.0) - _1664;
                        float _2229 = inversesqrt(dot(vec3(_2223, _2224, _2225), vec3(_2223, _2224, _2225)));
                        float _2233 = dot(vec3(0.0), vec3(_2229 * _2223, _2229 * _2224, _2229 * _2225));
                        float _2919 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
                        float _2930 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
                        float _2237 = isnan(1.0) ? _2930 : (isnan(_2930) ? 1.0 : min(_2930, 1.0));
                        float _2241 = (0.5 / (((isnan(1.0) ? _2919 : (isnan(_2919) ? 1.0 : min(_2919, 1.0))) + 9.9999999392252902907785028219223e-09) + _2237)) * _2237;
                        float _2941 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
                        float _2250 = (((isnan(1.0) ? _2941 : (isnan(_2941) ? 1.0 : min(_2941, 1.0))) * 3.1415927410125732421875) / (((_2214 * _2214) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2908 : (isnan(_2908) ? 1.0 : min(_2908, 1.0)));
                        _2054 = (_2250 * _2193.x) + _2142;
                        _2055 = (_2250 * _2193.y) + _2143;
                        _2056 = (_2250 * _2193.z) + _2144;
                        if (_2146 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2142 = _2054;
                            _2143 = _2055;
                            _2144 = _2056;
                            _2145 = _2146;
                        }
                    }
                    frontier_phi_74_pred = _2056;
                    frontier_phi_74_pred_1 = _2055;
                    frontier_phi_74_pred_2 = _2054;
                }
                _1814 = frontier_phi_74_pred;
                _1812 = frontier_phi_74_pred_1;
                _1810 = frontier_phi_74_pred_2;
                uint _1980 = _1979 + 1u;
                if (_1980 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1976 = _1810;
                    _1977 = _1812;
                    _1978 = _1814;
                    _1979 = _1980;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1809 = _1810;
            _1811 = _1812;
            _1813 = _1814;
        }
        uvec4 _1817 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1818 = _1817.z;
        uint _1820 = (_1818 >> 8u) & 15u;
        float _1956;
        float _1958;
        float _1960;
        if (((4294967295u << _1820) & _1709) == 0u)
        {
            _1956 = _1809;
            _1958 = _1811;
            _1960 = _1813;
        }
        else
        {
            float _1972 = inversesqrt(dot(vec3(_1662, _1663, _1664), vec3(_1662, _1663, _1664)));
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            if (_1820 < ((_1818 >> 12u) & 15u))
            {
                float _1957;
                float _1959;
                float _1961;
                float _2128 = _1809;
                float _2129 = _1811;
                float _2130 = _1813;
                uint _2131 = _1820;
                uint _2140;
                bool _2141;
                for (;;)
                {
                    _2140 = texelFetch(g_lightClassification, int((((_1702 << 5u) + (_1688 << 9u)) + (_2131 << 2u)) >> 2u)).x;
                    _2141 = _2140 == 0u;
                    float frontier_phi_83_pred;
                    float frontier_phi_83_pred_1;
                    float frontier_phi_83_pred_2;
                    if (_2141)
                    {
                        frontier_phi_83_pred = _2130;
                        frontier_phi_83_pred_1 = _2129;
                        frontier_phi_83_pred_2 = _2128;
                    }
                    else
                    {
                        float _2276;
                        float _2277;
                        float _2278;
                        float _2497;
                        float _2498;
                        float _2499;
                        float _2286 = _2128;
                        float _2287 = _2129;
                        float _2288 = _2130;
                        uint _2289 = _2140;
                        uint _2290;
                        uint _2300;
                        vec4 _2315;
                        float _2316;
                        vec3 _2328;
                        vec4 _2343;
                        vec4 _2358;
                        float _2404;
                        bool _2405;
                        for (;;)
                        {
                            _2300 = ((_2131 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2289));
                            _2290 = (_2289 + 4294967295u) & _2289;
                            uint _2302 = _2300 * 40u;
                            _2315 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2302)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2302 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2302 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2302 + 3u)).x));
                            _2316 = _2315.w;
                            uint _2318 = (_2300 * 40u) + 8u;
                            _2328 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2318)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2318 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2318 + 2u)).x));
                            uint _2330 = (_2300 * 40u) + 16u;
                            _2343 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2330)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2330 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2330 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2330 + 3u)).x));
                            uint _2345 = (_2300 * 40u) + 20u;
                            _2358 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2345)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2345 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2345 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2345 + 3u)).x));
                            uint _2360 = (_2300 * 40u) + 24u;
                            vec4 _2373 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2360)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2360 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2360 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2360 + 3u)).x));
                            uint _2379 = (_2300 * 40u) + 28u;
                            vec4 _2392 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2379)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2379 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2379 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2379 + 3u)).x));
                            _2404 = fma(_1664, _2392.z, fma(_1663, _2392.y, _2392.x * _1662)) + _2392.w;
                            _2405 = !((fma(_1664, _2373.z, fma(_1663, _2373.y, _2373.x * _1662)) + _2373.w) <= 0.0);
                            float frontier_phi_89_pred;
                            float frontier_phi_89_pred_1;
                            float frontier_phi_89_pred_2;
                            if (_2405)
                            {
                                float _2439 = _2315.x - _1662;
                                float _2440 = _2315.y - _1663;
                                float _2441 = _2315.z - _1664;
                                float _2442 = dot(vec3(_2439, _2440, _2441), vec3(_2439, _2440, _2441));
                                float _2445 = inversesqrt(_2442);
                                float _2452 = 1.0 - (_2442 / (_2316 * _2316));
                                float _2952 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
                                float _2454 = sqrt(_2442) * uintBitsToFloat(uvec4(_2408, _2409, _2410, texelFetch(g_SpotLightRenderingBuffer, int(((_2300 * 40u) + 4u) + 3u)).x)).w;
                                float _2456 = 1.39999997615814208984375 / (_2454 + 1.39999997615814208984375);
                                float _2457 = _2456 * _2456;
                                float _2460 = (fma(_1664, _2343.z, fma(_1663, _2343.y, _2343.x * _1662)) + _2343.w) / _2404;
                                float _2461 = (fma(_1664, _2358.z, fma(_1663, _2358.y, _2358.x * _1662)) + _2358.w) / _2404;
                                float _2465 = 1.0 - dot(vec2(_2460, _2461), vec2(_2460, _2461));
                                float _2963 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
                                float _2473 = dot(vec3(0.0), vec3((-0.0) - (_1662 * _1972), (-0.0) - (_1663 * _1972), (-0.0) - (_1664 * _1972)));
                                float _2974 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
                                float _2481 = ((1.0 - _2457) * dot(vec3(0.0), vec3(_2445 * _2439, _2445 * _2440, _2445 * _2441))) + _2457;
                                float _2985 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
                                float _2482 = isnan(1.0) ? _2985 : (isnan(_2985) ? 1.0 : min(_2985, 1.0));
                                float _2486 = (0.5 / (((isnan(1.0) ? _2974 : (isnan(_2974) ? 1.0 : min(_2974, 1.0))) + 9.9999999392252902907785028219223e-09) + _2482)) * _2482;
                                float _2996 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
                                float _2493 = ((isnan(1.0) ? _2963 : (isnan(_2963) ? 1.0 : min(_2963, 1.0))) * (isnan(1.0) ? _2952 : (isnan(_2952) ? 1.0 : min(_2952, 1.0)))) * (((isnan(1.0) ? _2996 : (isnan(_2996) ? 1.0 : min(_2996, 1.0))) * 3.1415927410125732421875) / (((_2454 * _2454) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_89_pred = _2493 * _2328.x;
                                frontier_phi_89_pred_1 = _2493 * _2328.z;
                                frontier_phi_89_pred_2 = _2493 * _2328.y;
                            }
                            else
                            {
                                frontier_phi_89_pred = 0.0;
                                frontier_phi_89_pred_1 = 0.0;
                                frontier_phi_89_pred_2 = 0.0;
                            }
                            _2497 = frontier_phi_89_pred;
                            _2499 = frontier_phi_89_pred_1;
                            _2498 = frontier_phi_89_pred_2;
                            _2276 = _2497 + _2286;
                            _2277 = _2498 + _2287;
                            _2278 = _2499 + _2288;
                            if (_2290 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2286 = _2276;
                                _2287 = _2277;
                                _2288 = _2278;
                                _2289 = _2290;
                                continue;
                            }
                        }
                        frontier_phi_83_pred = _2278;
                        frontier_phi_83_pred_1 = _2277;
                        frontier_phi_83_pred_2 = _2276;
                    }
                    _1961 = frontier_phi_83_pred;
                    _1959 = frontier_phi_83_pred_1;
                    _1957 = frontier_phi_83_pred_2;
                    uint _2132 = _2131 + 1u;
                    if (_2132 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2128 = _1957;
                        _2129 = _1959;
                        _2130 = _1961;
                        _2131 = _2132;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _1959;
                frontier_phi_65_66_ladder_1 = _1957;
                frontier_phi_65_66_ladder_2 = _1961;
            }
            else
            {
                frontier_phi_65_66_ladder = _1811;
                frontier_phi_65_66_ladder_1 = _1809;
                frontier_phi_65_66_ladder_2 = _1813;
            }
            _1956 = frontier_phi_65_66_ladder_1;
            _1958 = frontier_phi_65_66_ladder;
            _1960 = frontier_phi_65_66_ladder_2;
        }
        float _1965 = isnan(1.0) ? _827 : (isnan(_827) ? 1.0 : min(_827, 1.0));
        _1722 = ((_1956 * 0.039999999105930328369140625) * _1965) + _1603;
        _1724 = ((_1958 * 0.039999999105930328369140625) * _1965) + _1604;
        _1726 = ((_1960 * 0.039999999105930328369140625) * _1965) + _1605;
    }
    else
    {
        _1722 = _1603;
        _1724 = _1604;
        _1726 = _1605;
    }
    uint _1733 = (_1471 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1739 = (cbSceneParam._m0[72u].y * ((_766 * ((_757 - _719) - (_757 * _730))) + _719)) * cbInstanceData._m0[_1733].x;
    float _1740 = (cbSceneParam._m0[72u].y * ((_766 * ((_758 - _720) - (_758 * _730))) + _720)) * cbInstanceData._m0[_1733].y;
    float _1741 = (((_766 * ((_759 - _721) - (_759 * _730))) + _721) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_1733].z;
    float _1748 = _1739 + ((_1722 + ((isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0))) * _1216)) * cbPerFrame._m0[3u].x);
    float _1749 = _1740 + ((_1724 + ((isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0))) * _1216)) * cbPerFrame._m0[3u].x);
    float _1750 = _1741 + ((_1726 + ((isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0))) * _1216)) * cbPerFrame._m0[3u].x);
    float _3027 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1763 = isnan(1.0) ? _3027 : (isnan(_3027) ? 1.0 : min(_3027, 1.0));
    uint _1764 = _1471 + 6u;
    float _1772 = _814 / cbSceneParam._m0[86u].x;
    float _1773 = _815 / cbSceneParam._m0[86u].y;
    vec4 _1787 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1772, _1773, (log2((isnan(cbSceneParam._m0[77u].w) ? _801 : (isnan(_801) ? cbSceneParam._m0[77u].w : min(_801, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1789 = _1787.x;
    float _1790 = _1787.y;
    float _1791 = _1787.z;
    float _1792 = _1787.w;
    float _1866;
    float _1868;
    float _1870;
    float _1872;
    if (_801 > cbSceneParam._m0[78u].w)
    {
        float _1828 = isnan(_801) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _801 : min(cbSceneParam._m0[80u].w, _801));
        float _1829 = _1828 / _801;
        float _1840 = _1829 * _276;
        float _1841 = _277 * _1829;
        float _1842 = (-0.0) - _1841;
        float _1843 = _1829 * _278;
        float _1845 = (cbSceneParam._m0[77u].w * _1842) / _1828;
        float _1846 = _1845 + cbSceneParam._m0[79u].w;
        float _1847 = cbSceneParam._m0[79u].w - _1841;
        float _1853 = sqrt(((_1840 * _1840) + (_1841 * _1841)) + (_1843 * _1843));
        float _1856 = (1.0 - (cbSceneParam._m0[77u].w / _1828)) * _1853;
        float _1862 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1864 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2064;
        if (abs((_1842 - _1845) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2064 = ((((_1846 > 0.0) ? exp2(_1862 * _1846) : (2.0 - exp2(_1864 * _1846))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1856;
        }
        else
        {
            float _2002 = 1.0 / cbSceneParam._m0[80u].x;
            float _2003 = isnan(_1847) ? _1846 : (isnan(_1846) ? _1847 : max(_1846, _1847));
            float _2004 = isnan(_1847) ? _1846 : (isnan(_1846) ? _1847 : min(_1846, _1847));
            float _2013 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : min(_2003, 0.0));
            float _2014 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : min(_2004, 0.0));
            _2064 = ((abs(_1853 / _1842) * cbSceneParam._m0[80u].y) * ((((_2013 - _2014) * 2.0) - ((exp2(_1862 * (isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0)))) - exp2(_1862 * (isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0))))) * _2002)) - ((exp2(_1864 * _2013) - exp2(_1864 * _2014)) * _2002))) + (_1856 * cbSceneParam._m0[80u].z);
        }
        vec4 _2066 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1772, _1773, 1.0), 0.0);
        float _2075 = exp2((_2064 * (-1.44269502162933349609375)) * (1.0 - _2066.w));
        float _2076 = log2(_2075);
        float _2092 = log2(_1792);
        _1866 = (exp2(_2092 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2076 * cbSceneParam._m0[78u].x)) * _2066.x) / cbSceneParam._m0[78u].x)) + _1789;
        _1868 = (exp2(_2092 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2076 * cbSceneParam._m0[78u].y)) * _2066.y) / cbSceneParam._m0[78u].y)) + _1790;
        _1870 = (exp2(_2092 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2076 * cbSceneParam._m0[78u].z)) * _2066.z) / cbSceneParam._m0[78u].z)) + _1791;
        _1872 = _2075 * _1792;
    }
    else
    {
        _1866 = _1789;
        _1868 = _1790;
        _1870 = _1791;
        _1872 = _1792;
    }
    float _1883 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1884 = _1883 == 3.0;
    float _1886 = log2(_1872);
    float _1890 = exp2(_1886 * cbSceneParam._m0[78u].x);
    float _1891 = exp2(_1886 * cbSceneParam._m0[78u].y);
    float _1892 = exp2(_1886 * cbSceneParam._m0[78u].z);
    float _1893 = _1890 * (isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0)));
    float _1894 = _1891 * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
    float _1895 = _1892 * (isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0)));
    float _1904 = (_1883 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1904 * (_1884 ? _1893 : (_1893 + (cbSceneParam._m0[72u].w * _1866)));
    SV_Target.y = _1904 * (_1884 ? _1894 : (_1894 + (cbSceneParam._m0[72u].w * _1868)));
    SV_Target.z = _1904 * (_1884 ? _1895 : (_1895 + (cbSceneParam._m0[72u].w * _1870)));
    SV_Target.w = cbInstanceData._m0[_1764].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1739) * _1763) * _1890) * _1904;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1740) * _1763) * _1891) * _1904;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1741) * _1763) * _1892) * _1904;
    SV_Target_1.w = cbInstanceData._m0[_1764].w;
}


