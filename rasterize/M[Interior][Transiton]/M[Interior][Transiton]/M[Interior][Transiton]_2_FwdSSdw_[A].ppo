#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1039;
uint _2250;
uint _2251;
uint _2252;
uint _2495;
uint _2496;
uint _2497;
float _2744;
float _2745;
float _2746;
float _2747;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _201 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _202 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _203 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _209 = inversesqrt(dot(vec3(_201, _202, _203), vec3(_201, _202, _203)));
    float _216 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _270 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _280 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _270);
    float _281 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _270);
    float _282 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _270);
    vec4 _301 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _339 = cbMtdParam._m0[27u].w + _280;
    float _340 = cbMtdParam._m0[28u].x + _281;
    float _341 = cbMtdParam._m0[28u].y + _282;
    float _355 = (-0.0) - dot(vec3(_339, _340, _341), vec3(_209 * _201, _209 * _202, _209 * _203));
    float _356 = (-0.0) - dot(vec3(_339, _340, _341), vec3(_223 * TANGENT.x, _223 * TANGENT.y, _223 * TANGENT.z));
    float _357 = (-0.0) - dot(vec3(_339, _340, _341), vec3((-0.0) - (_216 * NORMAL.x), (-0.0) - (_216 * NORMAL.y), (-0.0) - (_216 * NORMAL.z)));
    float _361 = inversesqrt(dot(vec3(_355, _356, _357), vec3(_355, _356, _357)));
    float _364 = _361 * _357;
    float _365 = (_361 * _355) + (((_301.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _366 = (_361 * _356) + (((_301.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _367 = _365 * cbMtdParam._m0[24u].x;
    float _368 = _366 * cbMtdParam._m0[23u].w;
    float _369 = fract(TEXCOORD.x);
    float _370 = fract(TEXCOORD.y);
    float _376;
    if (_367 > 0.0)
    {
        _376 = (1.0 - _369) / _367;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_367 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _369) / _367;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _376 = frontier_phi_3_2_ladder;
    }
    float _384;
    if (_368 > 0.0)
    {
        _384 = (1.0 - _370) / _368;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_368 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _370) / _368;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _384 = frontier_phi_7_6_ladder;
    }
    bool _386 = _364 > 0.0;
    float _388 = _386 ? (cbMtdParam._m0[17u].x / _364) : 5000.0;
    float _389 = isnan(_384) ? _376 : (isnan(_376) ? _384 : min(_376, _384));
    float _390 = isnan(_388) ? _389 : (isnan(_389) ? _388 : min(_389, _388));
    float _394 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _395 = _369 + (-0.5);
    float _398 = _370 + (-0.5);
    float _401 = ((_390 * _364) + _394) / _394;
    vec4 _426 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_395 + (_390 * _367)) / _401) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_398 + (_390 * _368)) / _401) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _436 = cbMtdParam._m0[9u].x * _426.x;
    float _437 = cbMtdParam._m0[9u].y * _426.y;
    float _438 = cbMtdParam._m0[9u].z * _426.z;
    float _456 = _365 * cbMtdParam._m0[26u].z;
    float _457 = _366 * cbMtdParam._m0[26u].y;
    bool _458 = _456 > 0.0;
    float _463;
    if (_458)
    {
        _463 = (1.0 - _369) / _456;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _369) / _456;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _463 = frontier_phi_11_10_ladder;
    }
    bool _465 = _457 > 0.0;
    float _470;
    if (_465)
    {
        _470 = (1.0 - _370) / _457;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_457 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _370) / _457;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _470 = frontier_phi_15_14_ladder;
    }
    float _473 = _386 ? (cbMtdParam._m0[19u].z / _364) : 5000.0;
    float _474 = isnan(_470) ? _463 : (isnan(_463) ? _470 : min(_463, _470));
    float _475 = isnan(_473) ? _474 : (isnan(_474) ? _473 : min(_474, _473));
    float _479 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _483 = ((_475 * _364) + _479) / _479;
    float _488 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _490 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _506 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_395 + (_475 * _456)) / _483) + 0.5) + _488) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_398 + (_475 * _457)) / _483) + 0.5) + _490) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _518;
    if (_458)
    {
        _518 = (1.0 - _369) / _456;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_456 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _369) / _456;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _518 = frontier_phi_19_18_ladder;
    }
    float _524;
    if (_465)
    {
        _524 = (1.0 - _370) / _457;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_457 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _370) / _457;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _524 = frontier_phi_23_22_ladder;
    }
    float _526 = isnan(_524) ? _518 : (isnan(_518) ? _524 : min(_518, _524));
    float _527 = isnan(_473) ? _526 : (isnan(_526) ? _473 : min(_526, _473));
    float _534 = ((_527 * _364) + _479) / _479;
    vec4 _554 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_395 + (_527 * _456)) / _534) + 0.5) + _488) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_398 + (_527 * _457)) / _534) + 0.5) + _490) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _556 = _554.x;
    float _563 = (_556 * ((_506.x * cbMtdParam._m0[10u].x) - _436)) + _436;
    float _564 = (_556 * ((_506.y * cbMtdParam._m0[10u].y) - _437)) + _437;
    float _565 = (_556 * ((_506.z * cbMtdParam._m0[10u].z) - _438)) + _438;
    float _574 = (cbMtdParam._m0[16u].x * cbMtdParam._m0[19u].y) * _563;
    float _576 = (_564 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].y;
    float _578 = (_565 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].z;
    vec4 _602 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _607 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _613 = ((_602.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _615 = (-0.0) - (cbMtdParam._m0[21u].x * ((_602.x * 0.5) + (-0.25)));
    float _616 = fract(_607);
    float _618 = fract(_607 + 0.5);
    vec4 _645 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_616 * _615) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_613 * _616) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _647 = _645.x;
    float _653 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_618 * _615) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_613 * _618) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _647) * abs((_616 * 2.0) + (-1.0))) + _647;
    float _659 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _663 = fract(abs(_659));
    float _673 = sin(cbMtdParam._m0[21u].z);
    float _674 = cos(cbMtdParam._m0[21u].z);
    float _675 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _676 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _701 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_676, (-0.0) - _673, _674 * _675) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_676, _674, _675 * _673) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_659 >= ((-0.0) - _659)) ? _663 : ((-0.0) - _663)) * cbMtdParam._m0[18u].z) - _653)) + cbMtdParam._m0[18u].w;
    float _702 = ceil(_701);
    float _2786 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _2786 : (isnan(_2786) ? 1.0 : min(_2786, 1.0));
    float _723 = ((((cbMtdParam._m0[21u].w * _563) * cbMtdParam._m0[15u].x) - _574) * _703) + _574;
    float _724 = ((((cbMtdParam._m0[21u].w * _564) * cbMtdParam._m0[15u].y) - _576) * _703) + _576;
    float _725 = ((((cbMtdParam._m0[21u].w * _565) * cbMtdParam._m0[15u].z) - _578) * _703) + _578;
    float _729 = abs(cbMtdParam._m0[20u].w * _701);
    float _733 = (((_729 * cbMtdParam._m0[18u].y) - _653) * _729) + _653;
    float _2797 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _734 = isnan(1.0) ? _2797 : (isnan(_2797) ? 1.0 : min(_2797, 1.0));
    vec4 _746 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _761 = (cbMtdParam._m0[14u].x * _746.x) * cbMtdParam._m0[19u].x;
    float _762 = (cbMtdParam._m0[14u].y * _746.y) * cbMtdParam._m0[19u].x;
    float _763 = (cbMtdParam._m0[14u].z * _746.z) * cbMtdParam._m0[19u].x;
    float _770 = exp2(log2(_734) * cbMtdParam._m0[20u].x);
    float _805 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _809 = inversesqrt(dot(vec3(_280, _281, _282), vec3(_280, _281, _282)));
    float _810 = _280 * _809;
    float _811 = _281 * _809;
    float _812 = _282 * _809;
    vec4 _817 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _819 = _817.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _889 = sqrt(((_280 * _280) + (_281 * _281)) + (_282 * _282));
        float _895 = (cbMatDynParam._m0[5u].x * _889) + cbMatDynParam._m0[5u].y;
        float _2808 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _896 = isnan(1.0) ? _2808 : (isnan(_2808) ? 1.0 : min(_2808, 1.0));
        float _900 = (cbMatDynParam._m0[5u].z * _889) + cbMatDynParam._m0[5u].w;
        float _2819 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2819 : (isnan(_2819) ? 1.0 : min(_2819, 1.0))) - _896)) + _896) < ((_819 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _832 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _833 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _842 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_832 * cbSceneParam._m0[86u].x, _833 * cbSceneParam._m0[86u].y));
    float _845 = _842.x * TEXCOORD_4;
    float _846 = (-0.0) - _810;
    float _847 = (-0.0) - _811;
    float _848 = (-0.0) - _812;
    float _870 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _874 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _878 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1038;
    float _1040;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _961 = (cbModelParam._m0[37u].x * ((((fma(_878, cbModelParam._m0[26u].z, fma(_874, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _870)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _963 = (cbModelParam._m0[37u].y * ((((fma(_878, cbModelParam._m0[27u].z, fma(_874, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _870)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _964 = (((((fma(_878, cbModelParam._m0[28u].z, fma(_874, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _870)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _967 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_961, _963, _964), 0.0);
        vec4 _974 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_961, _963, _964), 0.0);
        vec4 _981 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_961, _963, _964), 0.0);
        vec4 _988 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_961, _963, _964), 0.0);
        float _1001 = exp2((_967.w + (-0.5)) * 20.0) * 2.0;
        float _1011 = exp2((_974.w + (-0.5)) * 20.0) * 2.0;
        float _1021 = exp2((_981.w + (-0.5)) * 20.0) * 2.0;
        float _1031 = exp2((_988.w + (-0.5)) * 20.0) * 2.0;
        float _1032 = _1031 * (_988.x + (-0.5));
        float _1033 = _1031 * (_988.y + (-0.5));
        float _1034 = _1031 * (_988.z + (-0.5));
        _1038 = _1001 * (_967.z + (-0.5));
        _1040 = _1001 * (_967.y + (-0.5));
        _1041 = _1001 * (_967.x + (-0.5));
        _1042 = _1011 * (_974.z + (-0.5));
        _1043 = _1011 * (_974.y + (-0.5));
        _1044 = _1011 * (_974.x + (-0.5));
        _1045 = _1021 * (_981.z + (-0.5));
        _1046 = _1021 * (_981.y + (-0.5));
        _1047 = _1021 * (_981.x + (-0.5));
        _1048 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
        _1049 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        _1050 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    }
    else
    {
        _1038 = _1039;
        _1040 = _1039;
        _1041 = _1039;
        _1042 = _1039;
        _1043 = _1039;
        _1044 = _1039;
        _1045 = _1039;
        _1046 = _1039;
        _1047 = _1039;
        _1048 = _1039;
        _1049 = _1039;
        _1050 = _1039;
    }
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1106 = (cbModelParam._m0[38u].x * ((((fma(_878, cbModelParam._m0[30u].z, fma(_874, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _870)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1107 = (cbModelParam._m0[38u].y * ((((fma(_878, cbModelParam._m0[31u].z, fma(_874, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _870)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1108 = (((((fma(_878, cbModelParam._m0[32u].z, fma(_874, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _870)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1110 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1106, _1107, _1108), 0.0);
        vec4 _1117 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1106, _1107, _1108), 0.0);
        vec4 _1124 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1106, _1107, _1108), 0.0);
        vec4 _1131 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1106, _1107, _1108), 0.0);
        float _1143 = exp2((_1110.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = exp2((_1117.w + (-0.5)) * 20.0) * 2.0;
        float _1163 = exp2((_1124.w + (-0.5)) * 20.0) * 2.0;
        float _1173 = exp2((_1131.w + (-0.5)) * 20.0) * 2.0;
        float _1174 = _1173 * (_1131.x + (-0.5));
        float _1175 = _1173 * (_1131.y + (-0.5));
        float _1176 = _1173 * (_1131.z + (-0.5));
        _1180 = _1143 * (_1110.z + (-0.5));
        _1181 = _1143 * (_1110.y + (-0.5));
        _1182 = _1143 * (_1110.x + (-0.5));
        _1183 = _1153 * (_1117.z + (-0.5));
        _1184 = _1153 * (_1117.y + (-0.5));
        _1185 = _1153 * (_1117.x + (-0.5));
        _1186 = _1163 * (_1124.z + (-0.5));
        _1187 = _1163 * (_1124.y + (-0.5));
        _1188 = _1163 * (_1124.x + (-0.5));
        _1189 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        _1190 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        _1191 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
    }
    else
    {
        _1180 = _1039;
        _1181 = _1039;
        _1182 = _1039;
        _1183 = _1039;
        _1184 = _1039;
        _1185 = _1039;
        _1186 = _1039;
        _1187 = _1039;
        _1188 = _1039;
        _1189 = _1039;
        _1190 = _1039;
        _1191 = _1039;
    }
    float _1206 = _810 * (-0.5);
    float _1207 = _811 * (-0.5);
    float _1208 = _812 * (-0.5);
    float _1209 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1182, _1185, _1188, _1191));
    float _1212 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1181, _1184, _1187, _1190));
    float _1215 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1180, _1183, _1186, _1189));
    float _1250;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1222 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1038, _1042, _1045, _1048));
        float _1226 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1040, _1043, _1046, _1049));
        float _1230 = dot(vec4(_1206, _1207, _1208, 1.0), vec4(_1041, _1044, _1047, _1050));
        float _1237 = dot(vec4(cbModelParam._m0[39u]), vec4(_1206, _1207, _1208, 1.0));
        _1250 = dot(vec3(isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0)), isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0)), isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1237) ? 0.0 : (isnan(0.0) ? _1237 : max(0.0, _1237))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1250 = 1.0;
    }
    float _1261;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1252 = dot(vec4(cbModelParam._m0[40u]), vec4(_1206, _1207, _1208, 1.0));
        _1261 = dot(vec3(isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0)), isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)), isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1252) ? 0.0 : (isnan(0.0) ? _1252 : max(0.0, _1252))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1261 = 1.0;
    }
    float _1265 = (_1261 * cbModelParam._m0[1u].x) + (_1250 * (1.0 - cbModelParam._m0[1u].x));
    float _1271 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1352;
    float _1354;
    float _1356;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1319 = fma(_878, cbModelParam._m0[13u].z, fma(_874, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _870)) + cbModelParam._m0[13u].w;
        float _1323 = fma(_878, cbModelParam._m0[14u].z, fma(_874, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _870)) + cbModelParam._m0[14u].w;
        float _1327 = fma(_878, cbModelParam._m0[15u].z, fma(_874, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _870)) + cbModelParam._m0[15u].w;
        float _1330 = fma(_848, cbModelParam._m0[13u].z, fma(_847, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _846));
        float _1333 = fma(_848, cbModelParam._m0[14u].z, fma(_847, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _846));
        float _1336 = fma(_848, cbModelParam._m0[15u].z, fma(_847, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _846));
        float _1362;
        if (_1330 > 0.0)
        {
            _1362 = abs((1.0 - _1319) / _1330);
        }
        else
        {
            float frontier_phi_41_39_ladder;
            if (_1330 < 0.0)
            {
                frontier_phi_41_39_ladder = abs((_1319 + 1.0) / _1330);
            }
            else
            {
                frontier_phi_41_39_ladder = 5000.0;
            }
            _1362 = frontier_phi_41_39_ladder;
        }
        float _1660;
        if (_1333 > 0.0)
        {
            _1660 = abs((1.0 - _1323) / _1333);
        }
        else
        {
            float frontier_phi_50_46_ladder;
            if (_1333 < 0.0)
            {
                frontier_phi_50_46_ladder = abs((_1323 + 1.0) / _1333);
            }
            else
            {
                frontier_phi_50_46_ladder = 5000.0;
            }
            _1660 = frontier_phi_50_46_ladder;
        }
        float _1982;
        if (_1336 > 0.0)
        {
            _1982 = abs((1.0 - _1327) / _1336);
        }
        else
        {
            float frontier_phi_64_57_ladder;
            if (_1336 < 0.0)
            {
                frontier_phi_64_57_ladder = abs((_1327 + 1.0) / _1336);
            }
            else
            {
                frontier_phi_64_57_ladder = 5000.0;
            }
            _1982 = frontier_phi_64_57_ladder;
        }
        float _1984 = isnan(_1660) ? _1362 : (isnan(_1362) ? _1660 : min(_1362, _1660));
        float _1985 = isnan(_1982) ? _1984 : (isnan(_1984) ? _1982 : min(_1984, _1982));
        float _1989 = (_1985 * _1330) + _1319;
        float _1990 = (_1985 * _1333) + _1323;
        float _1991 = (_1985 * _1336) + _1327;
        float _1992 = _1985 * 9.9999997473787516355514526367188e-05;
        float _1993 = (-1.0) - _1992;
        float _1995 = _1992 + 1.0;
        float frontier_phi_40_64_ladder;
        float frontier_phi_40_64_ladder_1;
        float frontier_phi_40_64_ladder_2;
        if ((_1991 > _1995) || ((_1991 < _1993) || ((_1990 > _1995) || ((_1990 < _1993) || ((_1989 < _1993) || (_1989 > _1995))))))
        {
            frontier_phi_40_64_ladder = 0.0;
            frontier_phi_40_64_ladder_1 = 0.0;
            frontier_phi_40_64_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2118 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1991, cbModelParam._m0[9u].z, fma(_1990, cbModelParam._m0[9u].y, _1989 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1991, cbModelParam._m0[10u].z, fma(_1990, cbModelParam._m0[10u].y, _1989 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1991, cbModelParam._m0[11u].z, fma(_1990, cbModelParam._m0[11u].y, _1989 * cbModelParam._m0[11u].x))), _1271);
            frontier_phi_40_64_ladder = _2118.z * cbModelParam._m0[1u].y;
            frontier_phi_40_64_ladder_1 = _2118.y * cbModelParam._m0[1u].y;
            frontier_phi_40_64_ladder_2 = _2118.x * cbModelParam._m0[1u].y;
        }
        _1352 = frontier_phi_40_64_ladder_2;
        _1354 = frontier_phi_40_64_ladder_1;
        _1356 = frontier_phi_40_64_ladder;
    }
    else
    {
        vec4 _1340 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_846, _847, _848), _1271);
        _1352 = _1340.x * cbModelParam._m0[1u].y;
        _1354 = _1340.y * cbModelParam._m0[1u].y;
        _1356 = _1340.z * cbModelParam._m0[1u].y;
    }
    float _1359 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1447;
    float _1449;
    float _1451;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1411 = fma(_878, cbModelParam._m0[21u].z, fma(_874, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _870)) + cbModelParam._m0[21u].w;
        float _1415 = fma(_878, cbModelParam._m0[22u].z, fma(_874, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _870)) + cbModelParam._m0[22u].w;
        float _1419 = fma(_878, cbModelParam._m0[23u].z, fma(_874, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _870)) + cbModelParam._m0[23u].w;
        float _1422 = fma(_848, cbModelParam._m0[21u].z, fma(_847, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _846));
        float _1425 = fma(_848, cbModelParam._m0[22u].z, fma(_847, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _846));
        float _1428 = fma(_848, cbModelParam._m0[23u].z, fma(_847, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _846));
        float _1665;
        if (_1422 > 0.0)
        {
            _1665 = abs((1.0 - _1411) / _1422);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1422 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1411 + 1.0) / _1422);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1665 = frontier_phi_52_48_ladder;
        }
        float _2008;
        if (_1425 > 0.0)
        {
            _2008 = abs((1.0 - _1415) / _1425);
        }
        else
        {
            float frontier_phi_66_59_ladder;
            if (_1425 < 0.0)
            {
                frontier_phi_66_59_ladder = abs((_1415 + 1.0) / _1425);
            }
            else
            {
                frontier_phi_66_59_ladder = 5000.0;
            }
            _2008 = frontier_phi_66_59_ladder;
        }
        float _2180;
        if (_1428 > 0.0)
        {
            _2180 = abs((1.0 - _1419) / _1428);
        }
        else
        {
            float frontier_phi_84_77_ladder;
            if (_1428 < 0.0)
            {
                frontier_phi_84_77_ladder = abs((_1419 + 1.0) / _1428);
            }
            else
            {
                frontier_phi_84_77_ladder = 5000.0;
            }
            _2180 = frontier_phi_84_77_ladder;
        }
        float _2182 = isnan(_2008) ? _1665 : (isnan(_1665) ? _2008 : min(_1665, _2008));
        float _2183 = isnan(_2180) ? _2182 : (isnan(_2182) ? _2180 : min(_2182, _2180));
        float _2187 = (_2183 * _1422) + _1411;
        float _2188 = (_2183 * _1425) + _1415;
        float _2189 = (_2183 * _1428) + _1419;
        float _2190 = _2183 * 9.9999997473787516355514526367188e-05;
        float _2191 = (-1.0) - _2190;
        float _2193 = _2190 + 1.0;
        float frontier_phi_49_84_ladder;
        float frontier_phi_49_84_ladder_1;
        float frontier_phi_49_84_ladder_2;
        if ((_2189 > _2193) || ((_2189 < _2191) || ((_2188 > _2193) || ((_2188 < _2191) || ((_2187 < _2191) || (_2187 > _2193))))))
        {
            frontier_phi_49_84_ladder = 0.0;
            frontier_phi_49_84_ladder_1 = 0.0;
            frontier_phi_49_84_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2358 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2189, cbModelParam._m0[17u].z, fma(_2188, cbModelParam._m0[17u].y, _2187 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2189, cbModelParam._m0[18u].z, fma(_2188, cbModelParam._m0[18u].y, _2187 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2189, cbModelParam._m0[19u].z, fma(_2188, cbModelParam._m0[19u].y, _2187 * cbModelParam._m0[19u].x))), _1359);
            frontier_phi_49_84_ladder = _2358.x * cbModelParam._m0[1u].z;
            frontier_phi_49_84_ladder_1 = _2358.y * cbModelParam._m0[1u].z;
            frontier_phi_49_84_ladder_2 = _2358.z * cbModelParam._m0[1u].z;
        }
        _1447 = frontier_phi_49_84_ladder;
        _1449 = frontier_phi_49_84_ladder_1;
        _1451 = frontier_phi_49_84_ladder_2;
    }
    else
    {
        vec4 _1431 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_846, _847, _848), _1359);
        _1447 = _1431.x * cbModelParam._m0[1u].z;
        _1449 = _1431.y * cbModelParam._m0[1u].z;
        _1451 = _1431.z * cbModelParam._m0[1u].z;
    }
    float _1463 = _845 * 0.01200000010430812835693359375;
    float _1465 = _1463 * ((cbModelParam._m0[1u].w * (_1447 - _1352)) + _1352);
    float _1466 = _1463 * ((cbModelParam._m0[1u].w * (_1449 - _1354)) + _1354);
    float _1467 = _1463 * ((cbModelParam._m0[1u].w * (_1451 - _1356)) + _1356);
    float _1488 = fma(_1467, cbSceneParam._m0[89u].z, fma(_1466, cbSceneParam._m0[89u].y, _1465 * cbSceneParam._m0[89u].x));
    float _1491 = fma(_1467, cbSceneParam._m0[90u].z, fma(_1466, cbSceneParam._m0[90u].y, _1465 * cbSceneParam._m0[90u].x));
    float _1494 = fma(_1467, cbSceneParam._m0[91u].z, fma(_1466, cbSceneParam._m0[91u].y, _1465 * cbSceneParam._m0[91u].x));
    vec4 _1502 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_832, _833));
    float _1504 = _1502.w;
    uint _1520 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1524 = floatBitsToUint(cbInstanceData._m0[_1520 + 5u]);
    uint _1526 = _1524.x * 14u;
    uint _1527 = _1526 + 13u;
    float _1532 = _845 + (-1.0);
    float _1535 = (cbLight._m0[_1527].x * _1532) + 1.0;
    float _1536 = (cbLight._m0[_1527].y * _1532) + 1.0;
    uint _1537 = _1526 + 8u;
    float _1548 = cbLight._m0[_1526].x + _810;
    float _1549 = cbLight._m0[_1526].y + _811;
    float _1550 = cbLight._m0[_1526].z + _812;
    float _1554 = inversesqrt(dot(vec3(_1548, _1549, _1550), vec3(_1548, _1549, _1550)));
    float _1558 = dot(vec3(0.0), vec3(cbLight._m0[_1526].xyz));
    float _2945 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
    float _1561 = isnan(1.0) ? _2945 : (isnan(_2945) ? 1.0 : min(_2945, 1.0));
    float _1562 = dot(vec3(0.0), vec3(_810, _811, _812));
    float _2956 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
    float _1565 = isnan(1.0) ? _2956 : (isnan(_2956) ? 1.0 : min(_2956, 1.0));
    float _1566 = dot(vec3(cbLight._m0[_1526].xyz), vec3(_1548 * _1554, _1549 * _1554, _1550 * _1554));
    float _2967 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
    float _1577 = (exp2(log2(1.0 - (isnan(1.0) ? _2967 : (isnan(_2967) ? 1.0 : min(_2967, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1583 = (0.5 / ((_1561 + 9.9999999392252902907785028219223e-09) + _1565)) * _1561;
    float _2978 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
    float _1585 = (isnan(1.0) ? _2978 : (isnan(_2978) ? 1.0 : min(_2978, 1.0))) * 0.31831014156341552734375;
    float _1587 = isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0));
    uint _1600 = _1526 + 9u;
    uint _1606 = _1526 | 1u;
    float _1612 = cbLight._m0[_1606].x + _810;
    float _1613 = cbLight._m0[_1606].y + _811;
    float _1614 = cbLight._m0[_1606].z + _812;
    float _1618 = inversesqrt(dot(vec3(_1612, _1613, _1614), vec3(_1612, _1613, _1614)));
    float _1622 = dot(vec3(0.0), vec3(cbLight._m0[_1606].xyz));
    float _2994 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
    float _1625 = isnan(1.0) ? _2994 : (isnan(_2994) ? 1.0 : min(_2994, 1.0));
    float _1626 = dot(vec3(cbLight._m0[_1606].xyz), vec3(_1612 * _1618, _1613 * _1618, _1614 * _1618));
    float _3005 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
    float _1635 = (exp2(log2(1.0 - (isnan(1.0) ? _3005 : (isnan(_3005) ? 1.0 : min(_3005, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1639 = (0.5 / ((_1625 + 9.9999999392252902907785028219223e-09) + _1565)) * _1625;
    float _3016 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
    float _1641 = (isnan(1.0) ? _3016 : (isnan(_3016) ? 1.0 : min(_3016, 1.0))) * 0.31831014156341552734375;
    float _1642 = isnan(1.0) ? _1536 : (isnan(_1536) ? 1.0 : min(_1536, 1.0));
    float _1652 = (((_1635 * cbLight._m0[_1600].x) * _1641) * _1642) + ((((cbLight._m0[_1537].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1504))) * _1577) * _1585) * _1587);
    float _1653 = (((_1635 * cbLight._m0[_1600].y) * _1641) * _1642) + ((((cbLight._m0[_1537].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1504))) * _1577) * _1585) * _1587);
    float _1654 = (((_1635 * cbLight._m0[_1600].z) * _1641) * _1642) + ((((cbLight._m0[_1537].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1504))) * _1577) * _1585) * _1587);
    float _1770;
    float _1772;
    float _1774;
    if (_1524.y == 0u)
    {
        float _1710 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1711 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1710;
        float _1712 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1710;
        float _1713 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1710;
        uvec4 _1725 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1726 = _1725.x;
        uint _1737 = uint((float(_1725.y) * floor(float(uint(cbSceneParam._m0[85u].y * _833) / _1726))) + floor(float(uint(cbSceneParam._m0[85u].x * _832) / _1726)));
        float _1747 = (log2(_1713 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1748 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        uint _1751 = uint(isnan(14.0) ? _1748 : (isnan(_1748) ? 14.0 : min(_1748, 14.0)));
        uvec4 _1756 = texelFetch(g_lightClusterGridBuffer, int(((_1751 << 2u) + (_1737 << 6u)) >> 2u));
        uint _1757 = _1756.x;
        uint _1758 = _1725.z;
        float _1857;
        float _1859;
        float _1861;
        if (((((1u << ((_1758 >> 4u) & 15u)) + 4294967295u) & _1757) == 0u) || ((_1758 & 240u) == 0u))
        {
            _1857 = 0.0;
            _1859 = 0.0;
            _1861 = 0.0;
        }
        else
        {
            float _1858;
            float _1860;
            float _1862;
            float _2033 = 0.0;
            float _2034 = 0.0;
            float _2035 = 0.0;
            uint _2036 = 0u;
            uint _2045;
            bool _2046;
            for (;;)
            {
                _2045 = texelFetch(g_lightClassification, int((((_1751 << 5u) + (_1737 << 9u)) + (_2036 << 2u)) >> 2u)).x;
                _2046 = _2045 == 0u;
                float frontier_phi_79_pred;
                float frontier_phi_79_pred_1;
                float frontier_phi_79_pred_2;
                if (_2046)
                {
                    frontier_phi_79_pred = _2035;
                    frontier_phi_79_pred_1 = _2034;
                    frontier_phi_79_pred_2 = _2033;
                }
                else
                {
                    float _2220;
                    float _2221;
                    float _2222;
                    uint _2223;
                    _2220 = _2033;
                    _2221 = _2034;
                    _2222 = _2035;
                    _2223 = _2045;
                    float _2127;
                    float _2128;
                    float _2129;
                    for (;;)
                    {
                        uint _2227 = uint(findLSB(_2223)) + (_2036 << 5u);
                        uint _2224 = (_2223 + 4294967295u) & _2223;
                        uint _2229 = _2227 * 48u;
                        vec4 _2243 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2229)).x, texelFetch(g_PointLightRenderingBuffer, int(_2229 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2229 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2229 + 3u)).x));
                        uint _2260 = (_2227 * 48u) + 8u;
                        vec3 _2271 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2260)).x, texelFetch(g_PointLightRenderingBuffer, int(_2260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2260 + 2u)).x));
                        float _2275 = _2243.x - _1711;
                        float _2276 = _2243.y - _1712;
                        float _2277 = _2243.z - _1713;
                        float _2278 = dot(vec3(_2275, _2276, _2277), vec3(_2275, _2276, _2277));
                        float _2281 = inversesqrt(_2278);
                        float _2290 = 1.0 - (_2278 * _2243.w);
                        float _3042 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
                        float _2292 = sqrt(_2278) * uintBitsToFloat(uvec4(_2250, _2251, _2252, texelFetch(g_PointLightRenderingBuffer, int(((_2227 * 48u) + 4u) + 3u)).x)).w;
                        float _2295 = 1.39999997615814208984375 / (_2292 + 1.39999997615814208984375);
                        float _2296 = _2295 * _2295;
                        float _2299 = ((1.0 - _2296) * dot(vec3(0.0), vec3(_2281 * _2275, _2281 * _2276, _2281 * _2277))) + _2296;
                        float _2301 = (-0.0) - _1711;
                        float _2302 = (-0.0) - _1712;
                        float _2303 = (-0.0) - _1713;
                        float _2307 = inversesqrt(dot(vec3(_2301, _2302, _2303), vec3(_2301, _2302, _2303)));
                        float _2311 = dot(vec3(0.0), vec3(_2307 * _2301, _2307 * _2302, _2307 * _2303));
                        float _3053 = isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0));
                        float _3064 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
                        float _2315 = isnan(1.0) ? _3064 : (isnan(_3064) ? 1.0 : min(_3064, 1.0));
                        float _2319 = (0.5 / (((isnan(1.0) ? _3053 : (isnan(_3053) ? 1.0 : min(_3053, 1.0))) + 9.9999999392252902907785028219223e-09) + _2315)) * _2315;
                        float _3075 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
                        float _2328 = (((isnan(1.0) ? _3075 : (isnan(_3075) ? 1.0 : min(_3075, 1.0))) * 3.1415927410125732421875) / (((_2292 * _2292) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _3042 : (isnan(_3042) ? 1.0 : min(_3042, 1.0)));
                        _2127 = (_2328 * _2271.x) + _2220;
                        _2128 = (_2328 * _2271.y) + _2221;
                        _2129 = (_2328 * _2271.z) + _2222;
                        if (_2224 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2220 = _2127;
                            _2221 = _2128;
                            _2222 = _2129;
                            _2223 = _2224;
                        }
                    }
                    frontier_phi_79_pred = _2129;
                    frontier_phi_79_pred_1 = _2128;
                    frontier_phi_79_pred_2 = _2127;
                }
                _1862 = frontier_phi_79_pred;
                _1860 = frontier_phi_79_pred_1;
                _1858 = frontier_phi_79_pred_2;
                uint _2037 = _2036 + 1u;
                if (_2037 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2033 = _1858;
                    _2034 = _1860;
                    _2035 = _1862;
                    _2036 = _2037;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1857 = _1858;
            _1859 = _1860;
            _1861 = _1862;
        }
        uvec4 _1865 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1866 = _1865.z;
        uint _1868 = (_1866 >> 8u) & 15u;
        float _2013;
        float _2015;
        float _2017;
        if (((4294967295u << _1868) & _1757) == 0u)
        {
            _2013 = _1857;
            _2015 = _1859;
            _2017 = _1861;
        }
        else
        {
            float _2029 = inversesqrt(dot(vec3(_1711, _1712, _1713), vec3(_1711, _1712, _1713)));
            float frontier_phi_68_69_ladder;
            float frontier_phi_68_69_ladder_1;
            float frontier_phi_68_69_ladder_2;
            if (_1868 < ((_1866 >> 12u) & 15u))
            {
                float _2014;
                float _2016;
                float _2018;
                float _2206 = _1857;
                float _2207 = _1859;
                float _2208 = _1861;
                uint _2209 = _1868;
                uint _2218;
                bool _2219;
                for (;;)
                {
                    _2218 = texelFetch(g_lightClassification, int((((_1751 << 5u) + (_1737 << 9u)) + (_2209 << 2u)) >> 2u)).x;
                    _2219 = _2218 == 0u;
                    float frontier_phi_93_pred;
                    float frontier_phi_93_pred_1;
                    float frontier_phi_93_pred_2;
                    if (_2219)
                    {
                        frontier_phi_93_pred = _2208;
                        frontier_phi_93_pred_1 = _2207;
                        frontier_phi_93_pred_2 = _2206;
                    }
                    else
                    {
                        float _2363;
                        float _2364;
                        float _2365;
                        float _2584;
                        float _2585;
                        float _2586;
                        float _2373 = _2206;
                        float _2374 = _2207;
                        float _2375 = _2208;
                        uint _2376 = _2218;
                        uint _2377;
                        uint _2387;
                        vec4 _2402;
                        float _2403;
                        vec3 _2415;
                        vec4 _2430;
                        vec4 _2445;
                        float _2491;
                        bool _2492;
                        for (;;)
                        {
                            _2387 = ((_2209 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2376));
                            _2377 = (_2376 + 4294967295u) & _2376;
                            uint _2389 = _2387 * 40u;
                            _2402 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2389)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2389 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2389 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2389 + 3u)).x));
                            _2403 = _2402.w;
                            uint _2405 = (_2387 * 40u) + 8u;
                            _2415 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2405 + 2u)).x));
                            uint _2417 = (_2387 * 40u) + 16u;
                            _2430 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2417)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 3u)).x));
                            uint _2432 = (_2387 * 40u) + 20u;
                            _2445 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2432)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2432 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2432 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2432 + 3u)).x));
                            uint _2447 = (_2387 * 40u) + 24u;
                            vec4 _2460 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2447)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2447 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2447 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2447 + 3u)).x));
                            uint _2466 = (_2387 * 40u) + 28u;
                            vec4 _2479 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2466)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 3u)).x));
                            _2491 = fma(_1713, _2479.z, fma(_1712, _2479.y, _2479.x * _1711)) + _2479.w;
                            _2492 = !((fma(_1713, _2460.z, fma(_1712, _2460.y, _2460.x * _1711)) + _2460.w) <= 0.0);
                            float frontier_phi_99_pred;
                            float frontier_phi_99_pred_1;
                            float frontier_phi_99_pred_2;
                            if (_2492)
                            {
                                float _2526 = _2402.x - _1711;
                                float _2527 = _2402.y - _1712;
                                float _2528 = _2402.z - _1713;
                                float _2529 = dot(vec3(_2526, _2527, _2528), vec3(_2526, _2527, _2528));
                                float _2532 = inversesqrt(_2529);
                                float _2539 = 1.0 - (_2529 / (_2403 * _2403));
                                float _3086 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
                                float _2541 = sqrt(_2529) * uintBitsToFloat(uvec4(_2495, _2496, _2497, texelFetch(g_SpotLightRenderingBuffer, int(((_2387 * 40u) + 4u) + 3u)).x)).w;
                                float _2543 = 1.39999997615814208984375 / (_2541 + 1.39999997615814208984375);
                                float _2544 = _2543 * _2543;
                                float _2547 = (fma(_1713, _2430.z, fma(_1712, _2430.y, _2430.x * _1711)) + _2430.w) / _2491;
                                float _2548 = (fma(_1713, _2445.z, fma(_1712, _2445.y, _2445.x * _1711)) + _2445.w) / _2491;
                                float _2552 = 1.0 - dot(vec2(_2547, _2548), vec2(_2547, _2548));
                                float _3097 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
                                float _2560 = dot(vec3(0.0), vec3((-0.0) - (_1711 * _2029), (-0.0) - (_1712 * _2029), (-0.0) - (_1713 * _2029)));
                                float _3108 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
                                float _2568 = ((1.0 - _2544) * dot(vec3(0.0), vec3(_2532 * _2526, _2532 * _2527, _2532 * _2528))) + _2544;
                                float _3119 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
                                float _2569 = isnan(1.0) ? _3119 : (isnan(_3119) ? 1.0 : min(_3119, 1.0));
                                float _2573 = (0.5 / (((isnan(1.0) ? _3108 : (isnan(_3108) ? 1.0 : min(_3108, 1.0))) + 9.9999999392252902907785028219223e-09) + _2569)) * _2569;
                                float _3130 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
                                float _2580 = ((isnan(1.0) ? _3097 : (isnan(_3097) ? 1.0 : min(_3097, 1.0))) * (isnan(1.0) ? _3086 : (isnan(_3086) ? 1.0 : min(_3086, 1.0)))) * (((isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0))) * 3.1415927410125732421875) / (((_2541 * _2541) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_99_pred = _2580 * _2415.z;
                                frontier_phi_99_pred_1 = _2580 * _2415.y;
                                frontier_phi_99_pred_2 = _2580 * _2415.x;
                            }
                            else
                            {
                                frontier_phi_99_pred = 0.0;
                                frontier_phi_99_pred_1 = 0.0;
                                frontier_phi_99_pred_2 = 0.0;
                            }
                            _2586 = frontier_phi_99_pred;
                            _2585 = frontier_phi_99_pred_1;
                            _2584 = frontier_phi_99_pred_2;
                            _2363 = _2584 + _2373;
                            _2364 = _2585 + _2374;
                            _2365 = _2586 + _2375;
                            if (_2377 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2373 = _2363;
                                _2374 = _2364;
                                _2375 = _2365;
                                _2376 = _2377;
                                continue;
                            }
                        }
                        frontier_phi_93_pred = _2365;
                        frontier_phi_93_pred_1 = _2364;
                        frontier_phi_93_pred_2 = _2363;
                    }
                    _2018 = frontier_phi_93_pred;
                    _2016 = frontier_phi_93_pred_1;
                    _2014 = frontier_phi_93_pred_2;
                    uint _2210 = _2209 + 1u;
                    if (_2210 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2206 = _2014;
                        _2207 = _2016;
                        _2208 = _2018;
                        _2209 = _2210;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_68_69_ladder = _2018;
                frontier_phi_68_69_ladder_1 = _2016;
                frontier_phi_68_69_ladder_2 = _2014;
            }
            else
            {
                frontier_phi_68_69_ladder = _1861;
                frontier_phi_68_69_ladder_1 = _1859;
                frontier_phi_68_69_ladder_2 = _1857;
            }
            _2013 = frontier_phi_68_69_ladder_2;
            _2015 = frontier_phi_68_69_ladder_1;
            _2017 = frontier_phi_68_69_ladder;
        }
        float _2022 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
        _1770 = ((_2013 * 0.039999999105930328369140625) * _2022) + _1652;
        _1772 = ((_2015 * 0.039999999105930328369140625) * _2022) + _1653;
        _1774 = ((_2017 * 0.039999999105930328369140625) * _2022) + _1654;
    }
    else
    {
        _1770 = _1652;
        _1772 = _1653;
        _1774 = _1654;
    }
    uint _1780 = _1520 + 9u;
    uint _1781 = _1780 + uint(cbMatDynParam._m0[0u].w);
    float _1787 = (cbSceneParam._m0[72u].y * ((_770 * ((_761 - _723) - (_761 * _734))) + _723)) * cbInstanceData._m0[_1781].x;
    float _1788 = (cbSceneParam._m0[72u].y * ((_770 * ((_762 - _724) - (_762 * _734))) + _724)) * cbInstanceData._m0[_1781].y;
    float _1789 = (((_770 * ((_763 - _725) - (_763 * _734))) + _725) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_1781].z;
    float _1796 = _1787 + ((_1770 + ((isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0))) * _1265)) * cbPerFrame._m0[3u].x);
    float _1797 = _1788 + ((_1772 + ((isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0))) * _1265)) * cbPerFrame._m0[3u].x);
    float _1798 = _1789 + ((_1774 + ((isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0))) * _1265)) * cbPerFrame._m0[3u].x);
    float _1799 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
    float _1800 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
    float _1801 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
    float _1807 = cbMtdParam._m0[2u].x * _1787;
    float _1808 = cbMtdParam._m0[2u].y * _1788;
    float _1809 = cbMtdParam._m0[2u].z * _1789;
    float _3161 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1811 = isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0));
    uint _1812 = _1520 + 6u;
    float _1820 = _832 / cbSceneParam._m0[86u].x;
    float _1821 = _833 / cbSceneParam._m0[86u].y;
    vec4 _1835 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1820, _1821, (log2((isnan(cbSceneParam._m0[77u].w) ? _805 : (isnan(_805) ? cbSceneParam._m0[77u].w : min(_805, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1837 = _1835.x;
    float _1838 = _1835.y;
    float _1839 = _1835.z;
    float _1840 = _1835.w;
    float _1914;
    float _1916;
    float _1918;
    float _1920;
    if (_805 > cbSceneParam._m0[78u].w)
    {
        float _1876 = isnan(_805) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _805 : min(cbSceneParam._m0[80u].w, _805));
        float _1877 = _1876 / _805;
        float _1888 = _1877 * _280;
        float _1889 = _281 * _1877;
        float _1890 = (-0.0) - _1889;
        float _1891 = _1877 * _282;
        float _1893 = (cbSceneParam._m0[77u].w * _1890) / _1876;
        float _1894 = _1893 + cbSceneParam._m0[79u].w;
        float _1895 = cbSceneParam._m0[79u].w - _1889;
        float _1901 = sqrt(((_1888 * _1888) + (_1889 * _1889)) + (_1891 * _1891));
        float _1904 = (1.0 - (cbSceneParam._m0[77u].w / _1876)) * _1901;
        float _1910 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1912 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2137;
        if (abs((_1890 - _1893) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2137 = ((((_1894 > 0.0) ? exp2(_1910 * _1894) : (2.0 - exp2(_1912 * _1894))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1904;
        }
        else
        {
            float _2059 = 1.0 / cbSceneParam._m0[80u].x;
            float _2060 = isnan(_1895) ? _1894 : (isnan(_1894) ? _1895 : max(_1894, _1895));
            float _2061 = isnan(_1895) ? _1894 : (isnan(_1894) ? _1895 : min(_1894, _1895));
            float _2070 = isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : min(_2060, 0.0));
            float _2071 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : min(_2061, 0.0));
            _2137 = ((abs(_1901 / _1890) * cbSceneParam._m0[80u].y) * ((((_2070 - _2071) * 2.0) - ((exp2(_1910 * (isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0)))) - exp2(_1910 * (isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0))))) * _2059)) - ((exp2(_1912 * _2070) - exp2(_1912 * _2071)) * _2059))) + (_1904 * cbSceneParam._m0[80u].z);
        }
        vec4 _2139 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1820, _1821, 1.0), 0.0);
        float _2148 = exp2((_2137 * (-1.44269502162933349609375)) * (1.0 - _2139.w));
        float _2149 = log2(_2148);
        float _2165 = log2(_1840);
        _1914 = (exp2(_2165 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2149 * cbSceneParam._m0[78u].x)) * _2139.x) / cbSceneParam._m0[78u].x)) + _1837;
        _1916 = (exp2(_2165 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2149 * cbSceneParam._m0[78u].y)) * _2139.y) / cbSceneParam._m0[78u].y)) + _1838;
        _1918 = (exp2(_2165 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2149 * cbSceneParam._m0[78u].z)) * _2139.z) / cbSceneParam._m0[78u].z)) + _1839;
        _1920 = _2148 * _1840;
    }
    else
    {
        _1914 = _1837;
        _1916 = _1838;
        _1918 = _1839;
        _1920 = _1840;
    }
    bool _2175;
    vec4 _1929;
    vec4 _1952;
    float _1954;
    float _1958;
    float _1959;
    float _1960;
    float _1963;
    float _1966;
    float _1969;
    float _1970;
    bool _1981;
    for (;;)
    {
        _1929 = cbMatDynParam._m0[0u];
        float _1931 = roundEven(_1929.y);
        bool _1932 = _1931 == 3.0;
        float _1934 = log2(_1920);
        float _1938 = exp2(_1934 * cbSceneParam._m0[78u].x);
        float _1939 = exp2(_1934 * cbSceneParam._m0[78u].y);
        float _1940 = exp2(_1934 * cbSceneParam._m0[78u].z);
        float _1941 = _1938 * _1799;
        float _1942 = _1939 * _1800;
        float _1943 = _1940 * _1801;
        float _1950 = _819 + (-0.5);
        _1952 = cbMtdParam._m0[1u];
        _1954 = _1952.y * _1950;
        float _1957 = (_1931 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1958 = _1957 * (_1932 ? _1941 : (_1941 + (cbSceneParam._m0[72u].w * _1914)));
        _1959 = _1957 * (_1932 ? _1942 : (_1942 + (cbSceneParam._m0[72u].w * _1916)));
        _1960 = _1957 * (_1932 ? _1943 : (_1943 + (cbSceneParam._m0[72u].w * _1918)));
        _1963 = ((_1807 * _1811) * _1938) * _1957;
        _1966 = ((_1808 * _1811) * _1939) * _1957;
        _1969 = ((_1809 * _1811) * _1940) * _1957;
        _1970 = _1950 * 0.999000012874603271484375;
        _1981 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1981)
        {
            if ((cbInstanceData._m0[_1520 + 7u].x + _1970) < 0.5)
            {
                _2175 = true;
                break;
            }
        }
        uint _2094 = _1780 + uint(_1929.w);
        if ((cbInstanceData._m0[_2094].w < 1.0) && ((cbInstanceData._m0[_2094].w + _1970) < 0.5))
        {
            _2175 = true;
            break;
        }
        if ((_1954 + 1.0) < _1952.x)
        {
            _2175 = true;
            break;
        }
        _2175 = false;
        break;
    }
    float _2333;
    if (_2175)
    {
        discard_state = true;
        _2333 = 0.0;
    }
    else
    {
        _2333 = cbInstanceData._m0[_1812].w;
    }
    SV_Target.x = _1958;
    SV_Target.y = _1959;
    SV_Target.z = _1960;
    SV_Target.w = _2333;
    SV_Target_1.x = _1963;
    SV_Target_1.y = _1966;
    SV_Target_1.z = _1969;
    SV_Target_1.w = cbInstanceData._m0[_1812].w;
    discard_exit();
}


