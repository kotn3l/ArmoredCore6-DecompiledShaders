#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _160 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _161 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _162 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _168 = inversesqrt(dot(vec3(_160, _161, _162), vec3(_160, _161, _162)));
    float _175 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _182 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _260 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _299 = cbMtdParam._m0[27u].w + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _229));
    float _300 = cbMtdParam._m0[28u].x + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _229));
    float _301 = cbMtdParam._m0[28u].y + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _229));
    float _315 = (-0.0) - dot(vec3(_299, _300, _301), vec3(_168 * _160, _168 * _161, _168 * _162));
    float _316 = (-0.0) - dot(vec3(_299, _300, _301), vec3(_182 * TANGENT.x, _182 * TANGENT.y, _182 * TANGENT.z));
    float _317 = (-0.0) - dot(vec3(_299, _300, _301), vec3((-0.0) - (_175 * NORMAL.x), (-0.0) - (_175 * NORMAL.y), (-0.0) - (_175 * NORMAL.z)));
    float _321 = inversesqrt(dot(vec3(_315, _316, _317), vec3(_315, _316, _317)));
    float _324 = _321 * _317;
    float _325 = (_321 * _315) + (((_260.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _326 = (_321 * _316) + (((_260.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _327 = _325 * cbMtdParam._m0[24u].x;
    float _328 = _326 * cbMtdParam._m0[23u].w;
    float _329 = fract(TEXCOORD.x);
    float _330 = fract(TEXCOORD.y);
    float _336;
    if (_327 > 0.0)
    {
        _336 = (1.0 - _329) / _327;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_327 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _329) / _327;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _336 = frontier_phi_3_2_ladder;
    }
    float _344;
    if (_328 > 0.0)
    {
        _344 = (1.0 - _330) / _328;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_328 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _330) / _328;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _344 = frontier_phi_7_6_ladder;
    }
    bool _346 = _324 > 0.0;
    float _348 = _346 ? (cbMtdParam._m0[17u].x / _324) : 5000.0;
    float _349 = isnan(_344) ? _336 : (isnan(_336) ? _344 : min(_336, _344));
    float _350 = isnan(_348) ? _349 : (isnan(_349) ? _348 : min(_349, _348));
    float _354 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _355 = _329 + (-0.5);
    float _358 = _330 + (-0.5);
    float _361 = ((_350 * _324) + _354) / _354;
    vec4 _386 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_355 + (_350 * _327)) / _361) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_358 + (_350 * _328)) / _361) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _396 = cbMtdParam._m0[9u].x * _386.x;
    float _397 = cbMtdParam._m0[9u].y * _386.y;
    float _398 = cbMtdParam._m0[9u].z * _386.z;
    float _416 = _325 * cbMtdParam._m0[26u].z;
    float _417 = _326 * cbMtdParam._m0[26u].y;
    bool _418 = _416 > 0.0;
    float _423;
    if (_418)
    {
        _423 = (1.0 - _329) / _416;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_416 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _329) / _416;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _423 = frontier_phi_11_10_ladder;
    }
    bool _425 = _417 > 0.0;
    float _430;
    if (_425)
    {
        _430 = (1.0 - _330) / _417;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_417 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _330) / _417;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _430 = frontier_phi_15_14_ladder;
    }
    float _433 = _346 ? (cbMtdParam._m0[19u].z / _324) : 5000.0;
    float _434 = isnan(_430) ? _423 : (isnan(_423) ? _430 : min(_423, _430));
    float _435 = isnan(_433) ? _434 : (isnan(_434) ? _433 : min(_434, _433));
    float _439 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _443 = ((_435 * _324) + _439) / _439;
    float _448 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _450 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _466 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_355 + (_435 * _416)) / _443) + 0.5) + _448) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_358 + (_435 * _417)) / _443) + 0.5) + _450) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _478;
    if (_418)
    {
        _478 = (1.0 - _329) / _416;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_416 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _329) / _416;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _478 = frontier_phi_19_18_ladder;
    }
    float _484;
    if (_425)
    {
        _484 = (1.0 - _330) / _417;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_417 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _330) / _417;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _484 = frontier_phi_23_22_ladder;
    }
    float _486 = isnan(_484) ? _478 : (isnan(_478) ? _484 : min(_478, _484));
    float _487 = isnan(_433) ? _486 : (isnan(_486) ? _433 : min(_486, _433));
    float _494 = ((_487 * _324) + _439) / _439;
    vec4 _514 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_355 + (_487 * _416)) / _494) + 0.5) + _448) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_358 + (_487 * _417)) / _494) + 0.5) + _450) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _516 = _514.x;
    float _523 = (_516 * ((_466.x * cbMtdParam._m0[10u].x) - _396)) + _396;
    float _524 = (_516 * ((_466.y * cbMtdParam._m0[10u].y) - _397)) + _397;
    float _525 = (_516 * ((_466.z * cbMtdParam._m0[10u].z) - _398)) + _398;
    float _539 = _325 * cbMtdParam._m0[27u].x;
    float _540 = _326 * cbMtdParam._m0[26u].w;
    bool _541 = _539 > 0.0;
    float _546;
    if (_541)
    {
        _546 = (1.0 - _329) / _539;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_539 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _329) / _539;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _546 = frontier_phi_27_26_ladder;
    }
    bool _548 = _540 > 0.0;
    float _553;
    if (_548)
    {
        _553 = (1.0 - _330) / _540;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_540 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _330) / _540;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _553 = frontier_phi_31_30_ladder;
    }
    float _556 = _346 ? (cbMtdParam._m0[23u].x / _324) : 5000.0;
    float _557 = isnan(_553) ? _546 : (isnan(_546) ? _553 : min(_546, _553));
    float _558 = isnan(_556) ? _557 : (isnan(_557) ? _556 : min(_557, _556));
    float _562 = cbMtdParam._m0[23u].x * cbMtdParam._m0[17u].z;
    float _566 = ((_558 * _324) + _562) / _562;
    float _571 = cbMtdParam._m0[22u].w - cbMtdParam._m0[27u].y * trunc(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    float _573 = floor(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    vec4 _589 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * (((((_355 + (_558 * _539)) / _566) + 0.5) + _571) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * (((((_358 + (_558 * _540)) / _566) + 0.5) + _573) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[11u].w));
    float _601;
    if (_541)
    {
        _601 = (1.0 - _329) / _539;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_539 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _329) / _539;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _601 = frontier_phi_35_34_ladder;
    }
    float _607;
    if (_548)
    {
        _607 = (1.0 - _330) / _540;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_540 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _330) / _540;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _607 = frontier_phi_39_38_ladder;
    }
    float _609 = isnan(_607) ? _601 : (isnan(_601) ? _607 : min(_601, _607));
    float _610 = isnan(_556) ? _609 : (isnan(_609) ? _556 : min(_609, _556));
    float _617 = ((_610 * _324) + _562) / _562;
    vec4 _638 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * (((((_355 + (_610 * _539)) / _617) + 0.5) + _571) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * (((((_358 + (_610 * _540)) / _617) + 0.5) + _573) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[12u].w));
    float _640 = _638.x;
    float _647 = (_640 * ((_589.x * cbMtdParam._m0[13u].x) - _523)) + _523;
    float _648 = (_640 * ((_589.y * cbMtdParam._m0[13u].y) - _524)) + _524;
    float _649 = (_640 * ((_589.z * cbMtdParam._m0[13u].z) - _525)) + _525;
    float _658 = (cbMtdParam._m0[16u].x * cbMtdParam._m0[19u].y) * _647;
    float _660 = (_648 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].y;
    float _662 = (_649 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].z;
    vec4 _686 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _691 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _697 = ((_686.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _699 = (-0.0) - (cbMtdParam._m0[21u].x * ((_686.x * 0.5) + (-0.25)));
    float _700 = fract(_691);
    float _702 = fract(_691 + 0.5);
    vec4 _729 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_700 * _699) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_697 * _700) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _731 = _729.x;
    float _737 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_702 * _699) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_697 * _702) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _731) * abs((_700 * 2.0) + (-1.0))) + _731;
    float _743 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _747 = fract(abs(_743));
    float _757 = sin(cbMtdParam._m0[21u].z);
    float _758 = cos(cbMtdParam._m0[21u].z);
    float _759 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _760 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _785 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_760, (-0.0) - _757, _758 * _759) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_760, _758, _759 * _757) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_743 >= ((-0.0) - _743)) ? _747 : ((-0.0) - _747)) * cbMtdParam._m0[18u].z) - _737)) + cbMtdParam._m0[18u].w;
    float _786 = ceil(_785);
    float _1056 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _787 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
    float _807 = ((((cbMtdParam._m0[21u].w * _647) * cbMtdParam._m0[15u].x) - _658) * _787) + _658;
    float _808 = ((((cbMtdParam._m0[21u].w * _648) * cbMtdParam._m0[15u].y) - _660) * _787) + _660;
    float _809 = ((((cbMtdParam._m0[21u].w * _649) * cbMtdParam._m0[15u].z) - _662) * _787) + _662;
    float _813 = abs(cbMtdParam._m0[20u].w * _785);
    float _817 = (((_813 * cbMtdParam._m0[18u].y) - _737) * _813) + _737;
    float _1067 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _818 = isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0));
    vec4 _830 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _845 = (cbMtdParam._m0[14u].x * _830.x) * cbMtdParam._m0[19u].x;
    float _846 = (cbMtdParam._m0[14u].y * _830.y) * cbMtdParam._m0[19u].x;
    float _847 = (cbMtdParam._m0[14u].z * _830.z) * cbMtdParam._m0[19u].x;
    float _854 = exp2(log2(_818) * cbMtdParam._m0[20u].x);
    uint _880 = uint(roundEven(NORMAL.w)) * 13u;
    uint _882 = (_880 + 9u) + uint(cbMatDynParam._m0[0u].w);
    uint _894 = _880 + 6u;
    float _917;
    float _918;
    float _919;
    float _920;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _917 = cbInstanceData._m0[_894].w;
        _918 = cbInstanceData._m0[_894].w;
        _919 = cbInstanceData._m0[_894].w;
        _920 = cbInstanceData._m0[_894].w;
    }
    else
    {
        _917 = cbMtdParam._m0[2u].w;
        _918 = 0.0;
        _919 = float(floatBitsToUint(cbInstanceData._m0[_880 + 5u]).x) * 0.0039215688593685626983642578125;
        _920 = TEXCOORD_4;
    }
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _918;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _920;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _919;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _918;
    SV_Target_4.x = ((cbSceneParam._m0[72u].y * ((_854 * ((_845 - _807) - (_845 * _818))) + _807)) * cbInstanceData._m0[_882].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((cbSceneParam._m0[72u].y * ((_854 * ((_846 - _808) - (_846 * _818))) + _808)) * cbInstanceData._m0[_882].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((_854 * ((_847 - _809) - (_847 * _818))) + _809) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_882].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _917;
}


