#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _450;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _199 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _200 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _201 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _208 = _207 * _199;
    float _209 = _207 * _200;
    float _210 = _207 * _201;
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _215 = _214 * NORMAL.x;
    float _216 = _214 * NORMAL.y;
    float _217 = _214 * NORMAL.z;
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _222 = _221 * TANGENT.x;
    float _223 = _221 * TANGENT.y;
    float _224 = _221 * TANGENT.z;
    float _268 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _278 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _268);
    float _279 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _268);
    float _280 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _268);
    vec4 _294 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _297 = _294.x;
    vec4 _315 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _332 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _297) + cbMtdParam._m0[12u].x) * _315.x;
    float _334 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _297) + cbMtdParam._m0[12u].y) * _315.y;
    float _336 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _297) + cbMtdParam._m0[12u].z) * _315.z;
    vec4 _363 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _378 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _385 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _397 = cbMtdParam._m0[28u].z + _278;
    float _398 = cbMtdParam._m0[28u].w + _279;
    float _399 = cbMtdParam._m0[29u].x + _280;
    float _413 = (-0.0) - dot(vec3(_397, _398, _399), vec3(_378 * _208, _378 * _209, _378 * _210));
    float _414 = (-0.0) - dot(vec3(_397, _398, _399), vec3(_385 * _222, _385 * _223, _385 * _224));
    float _415 = (-0.0) - dot(vec3(_397, _398, _399), vec3((-0.0) - _215, (-0.0) - _216, (-0.0) - _217));
    float _419 = inversesqrt(dot(vec3(_413, _414, _415), vec3(_413, _414, _415)));
    float _420 = _419 * _415;
    float _425 = ((cbMtdParam._m0[25u].y * _413) * _419) + (((_363.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _426 = ((cbMtdParam._m0[25u].z * _414) * _419) + (((_363.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _429 = fract(cbMtdParam._m0[25u].y * TEXCOORD.x);
    float _430 = fract(cbMtdParam._m0[25u].z * TEXCOORD.y);
    float _448;
    float _451;
    float _453;
    if (_425 > 0.0)
    {
        float _434 = (1.0 - _429) / _425;
        _448 = _434;
        _451 = ((cbMtdParam._m0[22u].x + 1.0) - fract(_434 * _420)) * 0.16666667163372039794921875;
        _453 = (fract((_434 * _426) + _430) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_425 < 0.0)
        {
            float _449 = ((-0.0) - _429) / _425;
            frontier_phi_3_2_ladder = (fract((_449 * _426) + _430) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _449;
            frontier_phi_3_2_ladder_2 = (fract(_449 * _420) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _450;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _448 = frontier_phi_3_2_ladder_1;
        _451 = frontier_phi_3_2_ladder_2;
        _453 = frontier_phi_3_2_ladder;
    }
    float _479;
    float _481;
    float _483;
    if (_426 > 0.0)
    {
        float _466 = (1.0 - _430) / _426;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_466 < _448)
        {
            frontier_phi_8_5_ladder = (fract((_466 * _425) + _429) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _466;
            frontier_phi_8_5_ladder_2 = (fract(_466 * _420) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _451;
            frontier_phi_8_5_ladder_1 = _448;
            frontier_phi_8_5_ladder_2 = _453;
        }
        _479 = frontier_phi_8_5_ladder_1;
        _481 = frontier_phi_8_5_ladder;
        _483 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_426 < 0.0)
        {
            float _480 = ((-0.0) - _430) / _426;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_480 < _448)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_480 * _425) + _429) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _480;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_480 * _420) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _451;
                frontier_phi_8_6_ladder_9_ladder_1 = _448;
                frontier_phi_8_6_ladder_9_ladder_2 = _453;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _451;
            frontier_phi_8_6_ladder_1 = _448;
            frontier_phi_8_6_ladder_2 = _453;
        }
        _479 = frontier_phi_8_6_ladder_1;
        _481 = frontier_phi_8_6_ladder;
        _483 = frontier_phi_8_6_ladder_2;
    }
    float _487 = (_420 > 0.0) ? (cbMtdParam._m0[20u].z / _420) : 5000.0;
    float _500;
    float _501;
    if (_487 < _479)
    {
        _500 = ((_429 + cbMtdParam._m0[22u].x) + (_487 * _425)) * 0.16666667163372039794921875;
        _501 = (((_487 * _426) + _430) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _500 = _481;
        _501 = _483;
    }
    vec4 _503 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_500, _501));
    float _511 = _297 * 0.1500000059604644775390625;
    float _519 = (_511 * ((_503.x * _297) - _332)) + _332;
    float _520 = (_511 * ((_503.y * _297) - _334)) + _334;
    float _521 = (_511 * ((_503.z * _297) - _336)) + _336;
    vec4 _534 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _538 = _534.z;
    float _541 = (_534.x * 2.0) + (-1.0);
    float _542 = (_534.y * 2.0) + (-1.0);
    float _543 = dot(vec2(_541, _542), vec2(_541, _542));
    float _3357 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _548 = sqrt(1.0 - (isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0))));
    vec4 _575 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _580 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _586 = ((_575.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _588 = (-0.0) - (cbMtdParam._m0[21u].x * ((_575.x * 0.5) + (-0.25)));
    float _589 = fract(_580);
    float _591 = fract(_580 + 0.5);
    vec4 _618 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_589 * _588) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_586 * _589) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _620 = _618.x;
    float _626 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_591 * _588) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_586 * _591) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _620) * abs((_589 * 2.0) + (-1.0))) + _620;
    float _640 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _644 = fract(abs(_640));
    float _650 = sin(cbMtdParam._m0[21u].z);
    float _651 = cos(cbMtdParam._m0[21u].z);
    float _652 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _653 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _683 = abs(cbMtdParam._m0[20u].w * (((_626 - (((_640 >= ((-0.0) - _640)) ? _644 : ((-0.0) - _644)) * cbMtdParam._m0[18u].z)) + texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_653, (-0.0) - _650, _651 * _652) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_653, _651, _652 * _650) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[18u].w));
    float _687 = (((_683 * cbMtdParam._m0[18u].y) - _626) * _683) + _626;
    float _3368 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _688 = isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0));
    vec4 _700 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _715 = (cbMtdParam._m0[14u].x * _700.x) * cbMtdParam._m0[19u].x;
    float _716 = (cbMtdParam._m0[14u].y * _700.y) * cbMtdParam._m0[19u].x;
    float _717 = (cbMtdParam._m0[14u].z * _700.z) * cbMtdParam._m0[19u].x;
    float _727 = exp2(log2(_688) * cbMtdParam._m0[20u].x);
    float _740 = fma(_548, _215, fma(_542, _222, _541 * _208));
    float _743 = fma(_548, _216, fma(_542, _223, _541 * _209));
    float _746 = fma(_548, _217, fma(_542, _224, _541 * _210));
    float _750 = inversesqrt(dot(vec3(_740, _743, _746), vec3(_740, _743, _746)));
    float _751 = _750 * _740;
    float _752 = _750 * _743;
    float _753 = _750 * _746;
    float _3379 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _754 = isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0));
    float _3390 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _3401 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _3412 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    float _773 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _777 = inversesqrt(dot(vec3(_278, _279, _280), vec3(_278, _279, _280)));
    float _778 = _278 * _777;
    float _779 = _279 * _777;
    float _780 = _280 * _777;
    float _786 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _787 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _806 = fma(_753, cbSceneParam._m0[5u].z, fma(_752, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _751));
    float _809 = fma(_753, cbSceneParam._m0[6u].z, fma(_752, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _751));
    float _812 = fma(_753, cbSceneParam._m0[7u].z, fma(_752, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _751));
    uint _825 = uint(roundEven(NORMAL.w)) * 13u;
    uint _826 = _825 + 9u;
    uint _827 = _826 + uint(cbMatDynParam._m0[0u].w);
    float _833 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0)))) * cbInstanceData._m0[_827].x;
    float _834 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0)))) * cbInstanceData._m0[_827].y;
    float _835 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0)))) * cbInstanceData._m0[_827].z;
    float _3423 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _836 = isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0));
    float _3434 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _837 = isnan(1.0) ? _3434 : (isnan(_3434) ? 1.0 : min(_3434, 1.0));
    float _3445 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _838 = isnan(1.0) ? _3445 : (isnan(_3445) ? 1.0 : min(_3445, 1.0));
    vec4 _847 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _786, cbSceneParam._m0[86u].y * _787));
    float _850 = _847.x * TEXCOORD_4;
    float _851 = dot(vec3(_751, _752, _753), vec3(_778, _779, _780));
    float _854 = _851 * 2.0;
    float _858 = (_854 * _751) - _778;
    float _859 = (_854 * _752) - _779;
    float _860 = (_854 * _753) - _780;
    float _864 = abs(dot(vec3(_778, _779, _780), vec3(_751, _752, _753)));
    float _3456 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _866 = sqrt(_754);
    float _879 = exp2((_866 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3456 : (isnan(_3456) ? 1.0 : min(_3456, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_866 * 3.0));
    float _911 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _915 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _919 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _952 = fma(_919, cbModelParam._m0[26u].z, fma(_915, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _911));
        float _956 = fma(_919, cbModelParam._m0[27u].z, fma(_915, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _911));
        float _960 = fma(_919, cbModelParam._m0[28u].z, fma(_915, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _911));
        float _984 = _911 + _751;
        float _985 = _915 + _752;
        float _986 = _919 + _753;
        float _996 = fma(_986, cbModelParam._m0[26u].z, fma(_985, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _984)) - _952;
        float _997 = fma(_986, cbModelParam._m0[27u].z, fma(_985, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _984)) - _956;
        float _998 = fma(_986, cbModelParam._m0[28u].z, fma(_985, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _984)) - _960;
        float _1002 = inversesqrt(dot(vec3(_996, _997, _998), vec3(_996, _997, _998)));
        float _1015 = ((_1002 * _996) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_952 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1016 = ((_1002 * _997) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_956 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1017 = ((_1002 * _998) / cbModelParam._m0[34u].z) + ((((((_960 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        vec4 _1041 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1015, _1016, _1017), 0.0);
        float _1054 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1055 = _1054 * (_1020.x + (-0.5));
        float _1056 = _1054 * (_1020.y + (-0.5));
        float _1057 = _1054 * (_1020.z + (-0.5));
        float _1064 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1027.x + (-0.5));
        float _1066 = _1064 * (_1027.y + (-0.5));
        float _1067 = _1064 * (_1027.z + (-0.5));
        float _1074 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1034.x + (-0.5));
        float _1076 = _1074 * (_1034.y + (-0.5));
        float _1077 = _1074 * (_1034.z + (-0.5));
        float _1084 = exp2((_1041.w + (-0.5)) * 20.0) * 2.0;
        float _1085 = _1084 * (_1041.x + (-0.5));
        float _1086 = _1084 * (_1041.y + (-0.5));
        float _1087 = _1084 * (_1041.z + (-0.5));
        float _1088 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1089 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = _1055 * 0.5;
        float _1092 = _1065 * 0.5;
        float _1093 = _1075 * 0.5;
        float _1094 = dot(vec3(_1091, _1092, _1093), vec3(_1091, _1092, _1093));
        float _1099 = (_1094 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1094);
        float _1108 = (dot(vec3(_751, _752, _753), vec3(_1099 * _1091, _1099 * _1092, _1099 * _1093)) + 1.0) * 0.5;
        float _3482 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1118 = sqrt(((_1092 * _1092) + (_1091 * _1091)) + (_1093 * _1093)) / (_1088 + 9.9999997473787516355514526367188e-06);
        float _3493 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0));
        float _1120 = _1119 * 2.0;
        float _1124 = (1.0 - _1119) / (_1119 + 1.0);
        float _3504 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
        float _1134 = ((((1.0 - _1125) * (_1120 + 2.0)) * exp2(log2(isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0))) * (_1120 + 1.0))) + _1125) * _1088;
        float _1135 = _1056 * 0.5;
        float _1136 = _1066 * 0.5;
        float _1137 = _1076 * 0.5;
        float _1138 = dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137));
        float _1143 = (_1138 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1138);
        float _1151 = (dot(vec3(_751, _752, _753), vec3(_1143 * _1135, _1143 * _1136, _1143 * _1137)) + 1.0) * 0.5;
        float _3515 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1160 = sqrt(((_1136 * _1136) + (_1135 * _1135)) + (_1137 * _1137)) / (_1089 + 9.9999997473787516355514526367188e-06);
        float _3526 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _3537 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0))) * (_1162 + 1.0))) + _1167) * _1089;
        float _1177 = _1057 * 0.5;
        float _1178 = _1067 * 0.5;
        float _1179 = _1077 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1193 = (dot(vec3(_751, _752, _753), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _3548 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1202 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3559 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _3570 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0))) * (_1204 + 1.0))) + _1209) * _1090;
        _1226 = _1057;
        _1227 = _1056;
        _1228 = _1055;
        _1229 = _1067;
        _1230 = _1066;
        _1231 = _1065;
        _1232 = _1077;
        _1233 = _1076;
        _1234 = _1075;
        _1235 = _1090;
        _1236 = _1089;
        _1237 = _1088;
        _1238 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0)));
        _1239 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
        _1240 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
    }
    else
    {
        _1226 = _450;
        _1227 = _450;
        _1228 = _450;
        _1229 = _450;
        _1230 = _450;
        _1231 = _450;
        _1232 = _450;
        _1233 = _450;
        _1234 = _450;
        _1235 = _450;
        _1236 = _450;
        _1237 = _450;
        _1238 = 0.0;
        _1239 = 0.0;
        _1240 = 0.0;
    }
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1265 = fma(_919, cbModelParam._m0[30u].z, fma(_915, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _911));
        float _1269 = fma(_919, cbModelParam._m0[31u].z, fma(_915, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _911));
        float _1273 = fma(_919, cbModelParam._m0[32u].z, fma(_915, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _911));
        float _1296 = _911 + _751;
        float _1297 = _915 + _752;
        float _1298 = _919 + _753;
        float _1308 = fma(_1298, cbModelParam._m0[30u].z, fma(_1297, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1296)) - _1265;
        float _1309 = fma(_1298, cbModelParam._m0[31u].z, fma(_1297, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1296)) - _1269;
        float _1310 = fma(_1298, cbModelParam._m0[32u].z, fma(_1297, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1296)) - _1273;
        float _1314 = inversesqrt(dot(vec3(_1308, _1309, _1310), vec3(_1308, _1309, _1310)));
        float _1327 = ((_1314 * _1308) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1265 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1328 = ((_1314 * _1309) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1269 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1329 = ((_1314 * _1310) / cbModelParam._m0[35u].z) + ((((((_1273 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1345 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1327, _1328, _1329), 0.0);
        float _1364 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1365 = _1364 * (_1331.x + (-0.5));
        float _1366 = _1364 * (_1331.y + (-0.5));
        float _1367 = _1364 * (_1331.z + (-0.5));
        float _1374 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1375 = _1374 * (_1338.x + (-0.5));
        float _1376 = _1374 * (_1338.y + (-0.5));
        float _1377 = _1374 * (_1338.z + (-0.5));
        float _1384 = exp2((_1345.w + (-0.5)) * 20.0) * 2.0;
        float _1385 = _1384 * (_1345.x + (-0.5));
        float _1386 = _1384 * (_1345.y + (-0.5));
        float _1387 = _1384 * (_1345.z + (-0.5));
        float _1394 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1395 = _1394 * (_1352.x + (-0.5));
        float _1396 = _1394 * (_1352.y + (-0.5));
        float _1397 = _1394 * (_1352.z + (-0.5));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1401 = _1365 * 0.5;
        float _1402 = _1375 * 0.5;
        float _1403 = _1385 * 0.5;
        float _1404 = dot(vec3(_1401, _1402, _1403), vec3(_1401, _1402, _1403));
        float _1409 = (_1404 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1404);
        float _1417 = (dot(vec3(_751, _752, _753), vec3(_1409 * _1401, _1409 * _1402, _1409 * _1403)) + 1.0) * 0.5;
        float _3611 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1426 = sqrt(((_1402 * _1402) + (_1401 * _1401)) + (_1403 * _1403)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _3622 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0));
        float _1428 = _1427 * 2.0;
        float _1432 = (1.0 - _1427) / (_1427 + 1.0);
        float _3633 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
        float _1442 = ((((1.0 - _1433) * (_1428 + 2.0)) * exp2(log2(isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0))) * (_1428 + 1.0))) + _1433) * _1398;
        float _1443 = _1366 * 0.5;
        float _1444 = _1376 * 0.5;
        float _1445 = _1386 * 0.5;
        float _1446 = dot(vec3(_1443, _1444, _1445), vec3(_1443, _1444, _1445));
        float _1451 = (_1446 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1446);
        float _1459 = (dot(vec3(_751, _752, _753), vec3(_1451 * _1443, _1451 * _1444, _1451 * _1445)) + 1.0) * 0.5;
        float _3644 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1468 = sqrt(((_1444 * _1444) + (_1443 * _1443)) + (_1445 * _1445)) / (_1399 + 9.9999997473787516355514526367188e-06);
        float _3655 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0));
        float _1470 = _1469 * 2.0;
        float _1474 = (1.0 - _1469) / (_1469 + 1.0);
        float _3666 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
        float _1484 = ((((1.0 - _1475) * (_1470 + 2.0)) * exp2(log2(isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0))) * (_1470 + 1.0))) + _1475) * _1399;
        float _1485 = _1367 * 0.5;
        float _1486 = _1377 * 0.5;
        float _1487 = _1387 * 0.5;
        float _1488 = dot(vec3(_1485, _1486, _1487), vec3(_1485, _1486, _1487));
        float _1493 = (_1488 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1488);
        float _1501 = (dot(vec3(_751, _752, _753), vec3(_1493 * _1485, _1493 * _1486, _1493 * _1487)) + 1.0) * 0.5;
        float _3677 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1510 = sqrt(((_1486 * _1486) + (_1485 * _1485)) + (_1487 * _1487)) / (_1400 + 9.9999997473787516355514526367188e-06);
        float _3688 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0));
        float _1512 = _1511 * 2.0;
        float _1516 = (1.0 - _1511) / (_1511 + 1.0);
        float _3699 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
        float _1526 = ((((1.0 - _1517) * (_1512 + 2.0)) * exp2(log2(isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0))) * (_1512 + 1.0))) + _1517) * _1400;
        _1534 = _1367;
        _1535 = _1366;
        _1536 = _1365;
        _1537 = _1377;
        _1538 = _1376;
        _1539 = _1375;
        _1540 = _1387;
        _1541 = _1386;
        _1542 = _1385;
        _1543 = _1400;
        _1544 = _1399;
        _1545 = _1398;
        _1546 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0)));
        _1547 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0)));
        _1548 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)));
    }
    else
    {
        _1534 = _450;
        _1535 = _450;
        _1536 = _450;
        _1537 = _450;
        _1538 = _450;
        _1539 = _450;
        _1540 = _450;
        _1541 = _450;
        _1542 = _450;
        _1543 = _450;
        _1544 = _450;
        _1545 = _450;
        _1546 = 0.0;
        _1547 = 0.0;
        _1548 = 0.0;
    }
    float _1558 = (cbModelParam._m0[1u].x * (_1546 - _1238)) + _1238;
    float _1559 = (cbModelParam._m0[1u].x * (_1547 - _1239)) + _1239;
    float _1560 = (cbModelParam._m0[1u].x * (_1548 - _1240)) + _1240;
    float _1581 = fma(_1560, cbSceneParam._m0[89u].z, fma(_1559, cbSceneParam._m0[89u].y, _1558 * cbSceneParam._m0[89u].x));
    float _1584 = fma(_1560, cbSceneParam._m0[90u].z, fma(_1559, cbSceneParam._m0[90u].y, _1558 * cbSceneParam._m0[90u].x));
    float _1587 = fma(_1560, cbSceneParam._m0[91u].z, fma(_1559, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1558));
    float _1602 = _858 * 0.5;
    float _1603 = _859 * 0.5;
    float _1604 = _860 * 0.5;
    float _1605 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1536, _1539, _1542, _1545));
    float _1608 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1535, _1538, _1541, _1544));
    float _1611 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1534, _1537, _1540, _1543));
    float _1645;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1618 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1226, _1229, _1232, _1235));
        float _1622 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1227, _1230, _1233, _1236));
        float _1626 = dot(vec4(_1602, _1603, _1604, 1.0), vec4(_1228, _1231, _1234, _1237));
        float _1633 = dot(vec4(cbModelParam._m0[39u]), vec4(_1602, _1603, _1604, 1.0));
        _1645 = dot(vec3(isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)), isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1645 = 1.0;
    }
    float _1656;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1647 = dot(vec4(cbModelParam._m0[40u]), vec4(_1602, _1603, _1604, 1.0));
        _1656 = dot(vec3(isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1647) ? 0.0 : (isnan(0.0) ? _1647 : max(0.0, _1647))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1656 = 1.0;
    }
    float _1660 = (_1656 * cbModelParam._m0[1u].x) + (_1645 * (1.0 - cbModelParam._m0[1u].x));
    float _1670 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _754);
    float _1671 = isnan(_1670) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1670 : min(cbModelParam._m0[25u].z, _1670));
    float _1752;
    float _1754;
    float _1756;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1719 = fma(_919, cbModelParam._m0[13u].z, fma(_915, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _911)) + cbModelParam._m0[13u].w;
        float _1723 = fma(_919, cbModelParam._m0[14u].z, fma(_915, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _911)) + cbModelParam._m0[14u].w;
        float _1727 = fma(_919, cbModelParam._m0[15u].z, fma(_915, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _911)) + cbModelParam._m0[15u].w;
        float _1730 = fma(_860, cbModelParam._m0[13u].z, fma(_859, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _858));
        float _1733 = fma(_860, cbModelParam._m0[14u].z, fma(_859, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _858));
        float _1736 = fma(_860, cbModelParam._m0[15u].z, fma(_859, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _858));
        float _1764;
        if (_1730 > 0.0)
        {
            _1764 = abs((1.0 - _1719) / _1730);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1730 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1719 + 1.0) / _1730);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1764 = frontier_phi_26_24_ladder;
        }
        float _2133;
        if (_1733 > 0.0)
        {
            _2133 = abs((1.0 - _1723) / _1733);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1733 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1723 + 1.0) / _1733);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _2133 = frontier_phi_35_31_ladder;
        }
        float _2467;
        if (_1736 > 0.0)
        {
            _2467 = abs((1.0 - _1727) / _1736);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1736 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1727 + 1.0) / _1736);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _2467 = frontier_phi_49_42_ladder;
        }
        float _2469 = isnan(_2133) ? _1764 : (isnan(_1764) ? _2133 : min(_1764, _2133));
        float _2470 = isnan(_2467) ? _2469 : (isnan(_2469) ? _2467 : min(_2469, _2467));
        float _2474 = (_2470 * _1730) + _1719;
        float _2475 = (_2470 * _1733) + _1723;
        float _2476 = (_2470 * _1736) + _1727;
        float _2477 = _2470 * 9.9999997473787516355514526367188e-05;
        float _2478 = (-1.0) - _2477;
        float _2480 = _2477 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2476 > _2480) || ((_2476 < _2478) || ((_2475 > _2480) || ((_2475 < _2478) || ((_2474 < _2478) || (_2474 > _2480))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2602 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2476, cbModelParam._m0[9u].z, fma(_2475, cbModelParam._m0[9u].y, _2474 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2476, cbModelParam._m0[10u].z, fma(_2475, cbModelParam._m0[10u].y, _2474 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2476, cbModelParam._m0[11u].z, fma(_2475, cbModelParam._m0[11u].y, _2474 * cbModelParam._m0[11u].x))), _1671);
            frontier_phi_25_49_ladder = _2602.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2602.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2602.x * cbModelParam._m0[1u].y;
        }
        _1752 = frontier_phi_25_49_ladder_2;
        _1754 = frontier_phi_25_49_ladder_1;
        _1756 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1740 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_858, _859, _860), _1671);
        _1752 = _1740.x * cbModelParam._m0[1u].y;
        _1754 = _1740.y * cbModelParam._m0[1u].y;
        _1756 = _1740.z * cbModelParam._m0[1u].y;
    }
    float _1760 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _754);
    float _1761 = isnan(_1760) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1760 : min(cbModelParam._m0[25u].w, _1760));
    float _1849;
    float _1851;
    float _1853;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1813 = fma(_919, cbModelParam._m0[21u].z, fma(_915, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _911)) + cbModelParam._m0[21u].w;
        float _1817 = fma(_919, cbModelParam._m0[22u].z, fma(_915, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _911)) + cbModelParam._m0[22u].w;
        float _1821 = fma(_919, cbModelParam._m0[23u].z, fma(_915, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _911)) + cbModelParam._m0[23u].w;
        float _1824 = fma(_860, cbModelParam._m0[21u].z, fma(_859, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _858));
        float _1827 = fma(_860, cbModelParam._m0[22u].z, fma(_859, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _858));
        float _1830 = fma(_860, cbModelParam._m0[23u].z, fma(_859, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _858));
        float _2138;
        if (_1824 > 0.0)
        {
            _2138 = abs((1.0 - _1813) / _1824);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1824 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1813 + 1.0) / _1824);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _2138 = frontier_phi_37_33_ladder;
        }
        float _2493;
        if (_1827 > 0.0)
        {
            _2493 = abs((1.0 - _1817) / _1827);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1827 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1817 + 1.0) / _1827);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _2493 = frontier_phi_51_44_ladder;
        }
        float _2662;
        if (_1830 > 0.0)
        {
            _2662 = abs((1.0 - _1821) / _1830);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1830 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1821 + 1.0) / _1830);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2662 = frontier_phi_65_60_ladder;
        }
        float _2664 = isnan(_2493) ? _2138 : (isnan(_2138) ? _2493 : min(_2138, _2493));
        float _2665 = isnan(_2662) ? _2664 : (isnan(_2664) ? _2662 : min(_2664, _2662));
        float _2669 = (_2665 * _1824) + _1813;
        float _2670 = (_2665 * _1827) + _1817;
        float _2671 = (_2665 * _1830) + _1821;
        float _2672 = _2665 * 9.9999997473787516355514526367188e-05;
        float _2673 = (-1.0) - _2672;
        float _2675 = _2672 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2671 > _2675) || ((_2671 < _2673) || ((_2670 > _2675) || ((_2670 < _2673) || ((_2669 < _2673) || (_2669 > _2675))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2904 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2671, cbModelParam._m0[17u].z, fma(_2670, cbModelParam._m0[17u].y, _2669 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2671, cbModelParam._m0[18u].z, fma(_2670, cbModelParam._m0[18u].y, _2669 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2671, cbModelParam._m0[19u].z, fma(_2670, cbModelParam._m0[19u].y, _2669 * cbModelParam._m0[19u].x))), _1761);
            frontier_phi_34_65_ladder = _2904.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2904.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2904.z * cbModelParam._m0[1u].z;
        }
        _1849 = frontier_phi_34_65_ladder_1;
        _1851 = frontier_phi_34_65_ladder;
        _1853 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1833 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_858, _859, _860), _1761);
        _1849 = _1833.x * cbModelParam._m0[1u].z;
        _1851 = _1833.y * cbModelParam._m0[1u].z;
        _1853 = _1833.z * cbModelParam._m0[1u].z;
    }
    float _1865 = ((((1.0 - _879) * ((_866 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_879 * _866)) * _850;
    float _1866 = _1865 * ((cbModelParam._m0[1u].w * (_1849 - _1752)) + _1752);
    float _1867 = _1865 * ((cbModelParam._m0[1u].w * (_1851 - _1754)) + _1754);
    float _1868 = _1865 * ((cbModelParam._m0[1u].w * (_1853 - _1756)) + _1756);
    float _1871 = fma(_1868, cbSceneParam._m0[89u].z, fma(_1867, cbSceneParam._m0[89u].y, _1866 * cbSceneParam._m0[89u].x));
    float _1874 = fma(_1868, cbSceneParam._m0[90u].z, fma(_1867, cbSceneParam._m0[90u].y, _1866 * cbSceneParam._m0[90u].x));
    float _1877 = fma(_1868, cbSceneParam._m0[91u].z, fma(_1867, cbSceneParam._m0[91u].y, _1866 * cbSceneParam._m0[91u].x));
    vec4 _1885 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_786, _787));
    float _1887 = _1885.w;
    float _1899 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1887);
    float _1900 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1887);
    float _1901 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1887);
    uvec4 _1905 = floatBitsToUint(cbInstanceData._m0[_825 + 5u]);
    uint _1907 = _1905.x * 14u;
    uint _1908 = _1907 + 13u;
    float _1913 = _850 + (-1.0);
    float _1916 = (cbLight._m0[_1908].x * _1913) + 1.0;
    float _1917 = (cbLight._m0[_1908].y * _1913) + 1.0;
    uint _1918 = _1907 + 5u;
    float _1924 = isnan(1.0) ? _1917 : (isnan(_1917) ? 1.0 : min(_1917, 1.0));
    uint _1928 = _1907 + 4u;
    float _1937 = isnan(1.0) ? _1916 : (isnan(_1916) ? 1.0 : min(_1916, 1.0));
    uint _1941 = _1907 | 1u;
    float _1952 = dot(vec3(cbLight._m0[_1907].xyz), vec3(_751, _752, _753));
    float _1955 = dot(vec3(cbLight._m0[_1941].xyz), vec3(_751, _752, _753));
    float _3835 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
    float _3846 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
    float _1960 = (isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0))) * 0.3183098733425140380859375;
    float _1962 = (isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0))) * 0.3183098733425140380859375;
    float _1969 = ((cbLight._m0[_1918].x * _1924) * _1962) + (((cbLight._m0[_1928].x * _1899) * _1937) * _1960);
    float _1970 = ((_1924 * cbLight._m0[_1918].y) * _1962) + (((cbLight._m0[_1928].y * _1900) * _1937) * _1960);
    float _1971 = ((_1924 * cbLight._m0[_1918].z) * _1962) + (((cbLight._m0[_1928].z * _1901) * _1937) * _1960);
    uint _1973 = _1907 + 8u;
    float _1986 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1907].w)) * _754) * 0.949999988079071044921875);
    float _1987 = _1986 * _1986;
    float _1988 = cbLight._m0[_1907].x + _778;
    float _1989 = cbLight._m0[_1907].y + _779;
    float _1990 = cbLight._m0[_1907].z + _780;
    float _1994 = inversesqrt(dot(vec3(_1988, _1989, _1990), vec3(_1988, _1989, _1990)));
    float _1995 = _1994 * _1988;
    float _1996 = _1994 * _1989;
    float _1997 = _1994 * _1990;
    float _1998 = dot(vec3(_751, _752, _753), vec3(cbLight._m0[_1907].xyz));
    float _3857 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    float _2001 = isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0));
    float _3868 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _2002 = isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0));
    float _2003 = dot(vec3(_751, _752, _753), vec3(_1995, _1996, _1997));
    float _3879 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
    float _2006 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
    float _2007 = dot(vec3(cbLight._m0[_1907].xyz), vec3(_1995, _1996, _1997));
    float _3890 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
    float _2011 = _1987 * _1987;
    float _2015 = ((_2006 * _2006) * (_2011 + (-1.0))) + 1.0;
    float _2026 = (exp2(log2(1.0 - (isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2027 = 1.0 - _1987;
    float _2038 = (0.5 / (((_2002 * ((_2001 * _2027) + _1987)) + 9.9999999392252902907785028219223e-09) + (((_2002 * _2027) + _1987) * _2001))) * _2001;
    float _3901 = isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0));
    float _2040 = (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0))) * (_2011 / ((_2015 * _2015) * 3.141590118408203125));
    uint _2054 = _1907 + 9u;
    float _2065 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1941].w)) * _754) * 0.949999988079071044921875);
    float _2066 = _2065 * _2065;
    float _2067 = cbLight._m0[_1941].x + _778;
    float _2068 = cbLight._m0[_1941].y + _779;
    float _2069 = cbLight._m0[_1941].z + _780;
    float _2073 = inversesqrt(dot(vec3(_2067, _2068, _2069), vec3(_2067, _2068, _2069)));
    float _2074 = _2073 * _2067;
    float _2075 = _2073 * _2068;
    float _2076 = _2073 * _2069;
    float _2077 = dot(vec3(_751, _752, _753), vec3(cbLight._m0[_1941].xyz));
    float _3912 = isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0));
    float _2080 = isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0));
    float _2081 = dot(vec3(_751, _752, _753), vec3(_2074, _2075, _2076));
    float _3923 = isnan(0.0) ? _2081 : (isnan(_2081) ? 0.0 : max(_2081, 0.0));
    float _2084 = isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0));
    float _2085 = dot(vec3(cbLight._m0[_1941].xyz), vec3(_2074, _2075, _2076));
    float _3934 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
    float _2089 = _2066 * _2066;
    float _2093 = ((_2084 * _2084) * (_2089 + (-1.0))) + 1.0;
    float _2102 = (exp2(log2(1.0 - (isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2103 = 1.0 - _2066;
    float _2113 = (0.5 / (((_2002 * ((_2080 * _2103) + _2066)) + 9.9999999392252902907785028219223e-09) + (((_2002 * _2103) + _2066) * _2080))) * _2080;
    float _3945 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
    float _2115 = (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))) * (_2089 / ((_2093 * _2093) * 3.141590118408203125));
    float _2125 = (((_2102 * cbLight._m0[_2054].x) * _2115) * _1924) + ((((cbLight._m0[_1973].x * _1899) * _2026) * _2040) * _1937);
    float _2126 = (((_2102 * cbLight._m0[_2054].y) * _2115) * _1924) + ((((cbLight._m0[_1973].y * _1900) * _2026) * _2040) * _1937);
    float _2127 = (((_2102 * cbLight._m0[_2054].z) * _2115) * _1924) + ((((cbLight._m0[_1973].z * _1901) * _2026) * _2040) * _1937);
    float _2242;
    float _2244;
    float _2246;
    float _2248;
    float _2250;
    float _2252;
    if (_1905.y == 0u)
    {
        float _2182 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2183 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2182;
        float _2184 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2182;
        float _2185 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2182;
        uvec4 _2197 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2198 = _2197.x;
        uint _2209 = uint((float(_2197.y) * floor(float(uint(cbSceneParam._m0[85u].y * _787) / _2198))) + floor(float(uint(cbSceneParam._m0[85u].x * _786) / _2198)));
        float _2219 = (log2(_2185 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2220 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
        uint _2223 = uint(isnan(14.0) ? _2220 : (isnan(_2220) ? 14.0 : min(_2220, 14.0)));
        uvec4 _2228 = texelFetch(g_lightClusterGridBuffer, int(((_2223 << 2u) + (_2209 << 6u)) >> 2u));
        uint _2229 = _2228.x;
        uint _2230 = _2197.z;
        float _2346;
        float _2348;
        float _2350;
        float _2352;
        float _2354;
        float _2356;
        if (((((1u << ((_2230 >> 4u) & 15u)) + 4294967295u) & _2229) == 0u) || ((_2230 & 240u) == 0u))
        {
            _2346 = 0.0;
            _2348 = 0.0;
            _2350 = 0.0;
            _2352 = 0.0;
            _2354 = 0.0;
            _2356 = 0.0;
        }
        else
        {
            float _2347;
            float _2349;
            float _2351;
            float _2353;
            float _2355;
            float _2357;
            float _2530 = 0.0;
            float _2531 = 0.0;
            float _2532 = 0.0;
            float _2533 = 0.0;
            float _2534 = 0.0;
            float _2535 = 0.0;
            uint _2536 = 0u;
            uint _2545;
            bool _2546;
            for (;;)
            {
                _2545 = texelFetch(g_lightClassification, int((((_2223 << 5u) + (_2209 << 9u)) + (_2536 << 2u)) >> 2u)).x;
                _2546 = _2545 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_2546)
                {
                    frontier_phi_62_pred = _2531;
                    frontier_phi_62_pred_1 = _2530;
                    frontier_phi_62_pred_2 = _2532;
                    frontier_phi_62_pred_3 = _2535;
                    frontier_phi_62_pred_4 = _2534;
                    frontier_phi_62_pred_5 = _2533;
                }
                else
                {
                    float _2705;
                    float _2706;
                    float _2707;
                    float _2708;
                    float _2709;
                    float _2710;
                    uint _2711;
                    _2705 = _2530;
                    _2706 = _2531;
                    _2707 = _2532;
                    _2708 = _2533;
                    _2709 = _2534;
                    _2710 = _2535;
                    _2711 = _2545;
                    float _2611;
                    float _2612;
                    float _2613;
                    float _2614;
                    float _2615;
                    float _2616;
                    for (;;)
                    {
                        uint _2715 = uint(findLSB(_2711)) + (_2536 << 5u);
                        uint _2712 = (_2711 + 4294967295u) & _2711;
                        uint _2717 = _2715 * 48u;
                        vec4 _2731 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2717)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2717 + 3u)).x));
                        uint _2737 = (_2715 * 48u) + 4u;
                        vec4 _2750 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2737)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2737 + 3u)).x));
                        uint _2756 = (_2715 * 48u) + 8u;
                        vec3 _2767 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2756)).x, texelFetch(g_PointLightRenderingBuffer, int(_2756 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2756 + 2u)).x));
                        float _2771 = _2731.x - _2183;
                        float _2772 = _2731.y - _2184;
                        float _2773 = _2731.z - _2185;
                        float _2774 = dot(vec3(_2771, _2772, _2773), vec3(_2771, _2772, _2773));
                        float _2777 = inversesqrt(_2774);
                        float _2778 = _2777 * _2771;
                        float _2779 = _2777 * _2772;
                        float _2780 = _2777 * _2773;
                        float _2781 = dot(vec3(_806, _809, _812), vec3(_2778, _2779, _2780));
                        float _2786 = 1.0 - (_2774 * _2731.w);
                        float _3966 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
                        float _2787 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
                        float _2788 = sqrt(_2774) * _2750.w;
                        float _2791 = 1.39999997615814208984375 / (_2788 + 1.39999997615814208984375);
                        float _2792 = _2791 * _2791;
                        float _2795 = ((1.0 - _2792) * _2781) + _2792;
                        float _2798 = _2788 * _2788;
                        float _2802 = ((isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0))) * _2787) / ((_2798 * 0.699999988079071044921875) + 1.0);
                        float _2806 = (-0.0) - _2183;
                        float _2807 = (-0.0) - _2184;
                        float _2808 = (-0.0) - _2185;
                        float _2812 = inversesqrt(dot(vec3(_2806, _2807, _2808), vec3(_2806, _2807, _2808)));
                        float _2813 = _2812 * _2806;
                        float _2814 = _2812 * _2807;
                        float _2815 = _2812 * _2808;
                        float _2823 = exp2(log2(1.0 / ((_2798 * 3.5) + 5.0)) * 0.25);
                        float _2824 = 1.0 - _866;
                        float _2831 = sqrt(1.0 - ((1.0 - (_2824 * _2824)) * (1.0 - (_2823 * _2823))));
                        float _2832 = _2831 * _2831;
                        float _2833 = _2832 * _2832;
                        float _2834 = _2813 + _2778;
                        float _2835 = _2814 + _2779;
                        float _2836 = _2815 + _2780;
                        float _2840 = inversesqrt(dot(vec3(_2834, _2835, _2836), vec3(_2834, _2835, _2836)));
                        float _2844 = dot(vec3(_806, _809, _812), vec3(_2813, _2814, _2815));
                        float _3982 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
                        float _2847 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
                        float _2848 = dot(vec3(_806, _809, _812), vec3(_2840 * _2834, _2840 * _2835, _2840 * _2836));
                        float _3993 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
                        float _2851 = isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0));
                        float _2855 = ((_2851 * _2851) * (_2833 + (-1.0))) + 1.0;
                        float _2856 = _2791 * _2832;
                        float _2857 = _2856 * _2856;
                        float _2860 = ((1.0 - _2857) * _2781) + _2857;
                        float _4004 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
                        float _2861 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
                        float _2862 = 1.0 - _2832;
                        float _2872 = (0.5 / (((_2861 * ((_2847 * _2862) + _2832)) + 9.9999999392252902907785028219223e-09) + (((_2861 * _2862) + _2832) * _2847))) * _2861;
                        float _4015 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
                        float _2883 = (((_2833 * 3.1415927410125732421875) * (isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0)))) / ((_2855 * _2855) * ((_2798 * 2.1991131305694580078125) + 3.141590118408203125))) * _2787;
                        _2614 = (_2802 * _2750.x) + _2708;
                        _2615 = (_2802 * _2750.y) + _2709;
                        _2616 = (_2802 * _2750.z) + _2710;
                        _2611 = (_2883 * _2767.x) + _2705;
                        _2612 = (_2883 * _2767.y) + _2706;
                        _2613 = (_2883 * _2767.z) + _2707;
                        if (_2712 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2705 = _2611;
                            _2706 = _2612;
                            _2707 = _2613;
                            _2708 = _2614;
                            _2709 = _2615;
                            _2710 = _2616;
                            _2711 = _2712;
                        }
                    }
                    frontier_phi_62_pred = _2612;
                    frontier_phi_62_pred_1 = _2611;
                    frontier_phi_62_pred_2 = _2613;
                    frontier_phi_62_pred_3 = _2616;
                    frontier_phi_62_pred_4 = _2615;
                    frontier_phi_62_pred_5 = _2614;
                }
                _2349 = frontier_phi_62_pred;
                _2347 = frontier_phi_62_pred_1;
                _2351 = frontier_phi_62_pred_2;
                _2357 = frontier_phi_62_pred_3;
                _2355 = frontier_phi_62_pred_4;
                _2353 = frontier_phi_62_pred_5;
                uint _2537 = _2536 + 1u;
                if (_2537 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2530 = _2347;
                    _2531 = _2349;
                    _2532 = _2351;
                    _2533 = _2353;
                    _2534 = _2355;
                    _2535 = _2357;
                    _2536 = _2537;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2346 = _2347;
            _2348 = _2349;
            _2350 = _2351;
            _2352 = _2353;
            _2354 = _2355;
            _2356 = _2357;
        }
        uvec4 _2360 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2361 = _2360.z;
        uint _2363 = (_2361 >> 8u) & 15u;
        float _2498;
        float _2500;
        float _2502;
        float _2504;
        float _2506;
        float _2508;
        if (((4294967295u << _2363) & _2229) == 0u)
        {
            _2498 = _2346;
            _2500 = _2348;
            _2502 = _2350;
            _2504 = _2352;
            _2506 = _2354;
            _2508 = _2356;
        }
        else
        {
            float _2523 = inversesqrt(dot(vec3(_2183, _2184, _2185), vec3(_2183, _2184, _2185)));
            float _2524 = _2523 * _2183;
            float _2525 = _2523 * _2184;
            float _2526 = _2523 * _2185;
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_2363 < ((_2361 >> 12u) & 15u))
            {
                float _2499;
                float _2501;
                float _2503;
                float _2505;
                float _2507;
                float _2509;
                float _2688 = _2346;
                float _2689 = _2348;
                float _2690 = _2350;
                float _2691 = _2352;
                float _2692 = _2354;
                float _2693 = _2356;
                uint _2694 = _2363;
                uint _2703;
                bool _2704;
                for (;;)
                {
                    _2703 = texelFetch(g_lightClassification, int((((_2223 << 5u) + (_2209 << 9u)) + (_2694 << 2u)) >> 2u)).x;
                    _2704 = _2703 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2704)
                    {
                        frontier_phi_71_pred = _2689;
                        frontier_phi_71_pred_1 = _2688;
                        frontier_phi_71_pred_2 = _2693;
                        frontier_phi_71_pred_3 = _2692;
                        frontier_phi_71_pred_4 = _2691;
                        frontier_phi_71_pred_5 = _2690;
                    }
                    else
                    {
                        float _2909;
                        float _2910;
                        float _2911;
                        float _2912;
                        float _2913;
                        float _2914;
                        float _3203;
                        float _3204;
                        float _3205;
                        float _3206;
                        float _3207;
                        float _3208;
                        float _2922 = _2688;
                        float _2923 = _2689;
                        float _2924 = _2690;
                        float _2925 = _2691;
                        float _2926 = _2692;
                        float _2927 = _2693;
                        uint _2928 = _2703;
                        uint _2929;
                        vec4 _2954;
                        float _2955;
                        vec4 _2970;
                        vec3 _2982;
                        vec4 _2998;
                        vec4 _3013;
                        float _3059;
                        bool _3060;
                        for (;;)
                        {
                            uint _2939 = ((_2694 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2928));
                            _2929 = (_2928 + 4294967295u) & _2928;
                            uint _2941 = _2939 * 40u;
                            _2954 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2941)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2941 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2941 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2941 + 3u)).x));
                            _2955 = _2954.w;
                            uint _2957 = (_2939 * 40u) + 4u;
                            _2970 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2957)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2957 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2957 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2957 + 3u)).x));
                            uint _2972 = (_2939 * 40u) + 8u;
                            _2982 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2972)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2972 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2972 + 2u)).x));
                            uint _2985 = (_2939 * 40u) + 16u;
                            _2998 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2985)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2985 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2985 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2985 + 3u)).x));
                            uint _3000 = (_2939 * 40u) + 20u;
                            _3013 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3000)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3000 + 3u)).x));
                            uint _3015 = (_2939 * 40u) + 24u;
                            vec4 _3028 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3015)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3015 + 3u)).x));
                            uint _3034 = (_2939 * 40u) + 28u;
                            vec4 _3047 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3034)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3034 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3034 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3034 + 3u)).x));
                            _3059 = fma(_2185, _3047.z, fma(_2184, _3047.y, _3047.x * _2183)) + _3047.w;
                            _3060 = !((fma(_2185, _3028.z, fma(_2184, _3028.y, _3028.x * _2183)) + _3028.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_3060)
                            {
                                float _3087 = _2954.x - _2183;
                                float _3088 = _2954.y - _2184;
                                float _3089 = _2954.z - _2185;
                                float _3090 = dot(vec3(_3087, _3088, _3089), vec3(_3087, _3088, _3089));
                                float _3093 = inversesqrt(_3090);
                                float _3094 = _3093 * _3087;
                                float _3095 = _3093 * _3088;
                                float _3096 = _3093 * _3089;
                                float _3100 = 1.0 - (_3090 / (_2955 * _2955));
                                float _4026 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0));
                                float _3101 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
                                float _3105 = sqrt(_3090) * _2970.w;
                                float _3107 = 1.39999997615814208984375 / (_3105 + 1.39999997615814208984375);
                                float _3108 = _3107 * _3107;
                                float _3111 = ((1.0 - _3108) * dot(vec3(_3094, _3095, _3096), vec3(_806, _809, _812))) + _3108;
                                float _3114 = _3105 * _3105;
                                float _3118 = (fma(_2185, _2998.z, fma(_2184, _2998.y, _2998.x * _2183)) + _2998.w) / _3059;
                                float _3119 = (fma(_2185, _3013.z, fma(_2184, _3013.y, _3013.x * _2183)) + _3013.w) / _3059;
                                float _3123 = 1.0 - dot(vec2(_3118, _3119), vec2(_3118, _3119));
                                float _4042 = isnan(0.0) ? _3123 : (isnan(_3123) ? 0.0 : max(_3123, 0.0));
                                float _3124 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
                                float _3125 = _3124 * (((isnan(0.0) ? _3111 : (isnan(_3111) ? 0.0 : max(_3111, 0.0))) * _3101) / ((_3114 * 0.699999988079071044921875) + 1.0));
                                float _3137 = exp2(log2(1.0 / ((_3114 * 3.5) + 5.0)) * 0.25);
                                float _3138 = 1.0 - _866;
                                float _3145 = sqrt(1.0 - ((1.0 - (_3138 * _3138)) * (1.0 - (_3137 * _3137))));
                                float _3146 = _3145 * _3145;
                                float _3147 = _3146 * _3146;
                                float _3148 = _3094 - _2524;
                                float _3149 = _3095 - _2525;
                                float _3150 = _3096 - _2526;
                                float _3154 = inversesqrt(dot(vec3(_3148, _3149, _3150), vec3(_3148, _3149, _3150)));
                                float _3158 = dot(vec3(_806, _809, _812), vec3((-0.0) - _2524, (-0.0) - _2525, (-0.0) - _2526));
                                float _4053 = isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0));
                                float _3161 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
                                float _3162 = dot(vec3(_806, _809, _812), vec3(_3154 * _3148, _3154 * _3149, _3154 * _3150));
                                float _4064 = isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : max(_3162, 0.0));
                                float _3165 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
                                float _3169 = ((_3165 * _3165) * (_3147 + (-1.0))) + 1.0;
                                float _3170 = _3107 * _3146;
                                float _3171 = _3170 * _3170;
                                float _3177 = ((1.0 - _3171) * dot(vec3(_806, _809, _812), vec3(_3094, _3095, _3096))) + _3171;
                                float _4075 = isnan(0.0) ? _3177 : (isnan(_3177) ? 0.0 : max(_3177, 0.0));
                                float _3178 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
                                float _3179 = 1.0 - _3146;
                                float _3189 = (0.5 / (((_3178 * ((_3161 * _3179) + _3146)) + 9.9999999392252902907785028219223e-09) + (((_3178 * _3179) + _3146) * _3161))) * _3178;
                                float _4086 = isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : max(_3189, 0.0));
                                float _3199 = (_3124 * _3101) * (((_3147 * 3.1415927410125732421875) * (isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0)))) / ((_3169 * _3169) * ((_3114 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_77_pred = _3199 * _2982.y;
                                frontier_phi_77_pred_1 = _3199 * _2982.x;
                                frontier_phi_77_pred_2 = _3125 * _2970.z;
                                frontier_phi_77_pred_3 = _3125 * _2970.y;
                                frontier_phi_77_pred_4 = _3125 * _2970.x;
                                frontier_phi_77_pred_5 = _3199 * _2982.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _3204 = frontier_phi_77_pred;
                            _3203 = frontier_phi_77_pred_1;
                            _3208 = frontier_phi_77_pred_2;
                            _3207 = frontier_phi_77_pred_3;
                            _3206 = frontier_phi_77_pred_4;
                            _3205 = frontier_phi_77_pred_5;
                            _2912 = _3206 + _2925;
                            _2913 = _3207 + _2926;
                            _2914 = _3208 + _2927;
                            _2909 = _3203 + _2922;
                            _2910 = _3204 + _2923;
                            _2911 = _3205 + _2924;
                            if (_2929 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2922 = _2909;
                                _2923 = _2910;
                                _2924 = _2911;
                                _2925 = _2912;
                                _2926 = _2913;
                                _2927 = _2914;
                                _2928 = _2929;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2910;
                        frontier_phi_71_pred_1 = _2909;
                        frontier_phi_71_pred_2 = _2914;
                        frontier_phi_71_pred_3 = _2913;
                        frontier_phi_71_pred_4 = _2912;
                        frontier_phi_71_pred_5 = _2911;
                    }
                    _2501 = frontier_phi_71_pred;
                    _2499 = frontier_phi_71_pred_1;
                    _2509 = frontier_phi_71_pred_2;
                    _2507 = frontier_phi_71_pred_3;
                    _2505 = frontier_phi_71_pred_4;
                    _2503 = frontier_phi_71_pred_5;
                    uint _2695 = _2694 + 1u;
                    if (_2695 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2688 = _2499;
                        _2689 = _2501;
                        _2690 = _2503;
                        _2691 = _2505;
                        _2692 = _2507;
                        _2693 = _2509;
                        _2694 = _2695;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _2509;
                frontier_phi_53_54_ladder_1 = _2505;
                frontier_phi_53_54_ladder_2 = _2503;
                frontier_phi_53_54_ladder_3 = _2501;
                frontier_phi_53_54_ladder_4 = _2499;
                frontier_phi_53_54_ladder_5 = _2507;
            }
            else
            {
                frontier_phi_53_54_ladder = _2356;
                frontier_phi_53_54_ladder_1 = _2352;
                frontier_phi_53_54_ladder_2 = _2350;
                frontier_phi_53_54_ladder_3 = _2348;
                frontier_phi_53_54_ladder_4 = _2346;
                frontier_phi_53_54_ladder_5 = _2354;
            }
            _2498 = frontier_phi_53_54_ladder_4;
            _2500 = frontier_phi_53_54_ladder_3;
            _2502 = frontier_phi_53_54_ladder_2;
            _2504 = frontier_phi_53_54_ladder_1;
            _2506 = frontier_phi_53_54_ladder_5;
            _2508 = frontier_phi_53_54_ladder;
        }
        float _2513 = isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0));
        _2242 = (_2513 * _2504) + _1969;
        _2244 = (_2513 * _2506) + _1970;
        _2246 = (_2513 * _2508) + _1971;
        _2248 = ((_2498 * 0.039999999105930328369140625) * _2513) + _2125;
        _2250 = ((_2500 * 0.039999999105930328369140625) * _2513) + _2126;
        _2252 = ((_2502 * 0.039999999105930328369140625) * _2513) + _2127;
    }
    else
    {
        _2242 = _1969;
        _2244 = _1970;
        _2246 = _1971;
        _2248 = _2125;
        _2250 = _2126;
        _2252 = _2127;
    }
    uint _2258 = _826 + uint(cbMatDynParam._m0[0u].w);
    float _2264 = ((_727 * (_715 - (_715 * _688))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2258].x;
    float _2265 = ((_727 * (_716 - (_716 * _688))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2258].y;
    float _2266 = ((_727 * (_717 - (_717 * _688))) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2258].z;
    float _4102 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4113 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _4124 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _2283 = (((isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * (_2242 + ((isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0))) * _850))) + ((_2248 + ((isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + _2264;
    float _2285 = (_2265 + ((_2250 + ((isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_2244 + ((isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))) * _850)));
    float _2287 = (_2266 + ((_2252 + ((isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0))) * _1660)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (_2246 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _850)));
    float _4150 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2300 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    uint _2301 = _825 + 6u;
    float _2309 = _786 / cbSceneParam._m0[86u].x;
    float _2310 = _787 / cbSceneParam._m0[86u].y;
    vec4 _2324 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2309, _2310, (log2((isnan(cbSceneParam._m0[77u].w) ? _773 : (isnan(_773) ? cbSceneParam._m0[77u].w : min(_773, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2326 = _2324.x;
    float _2327 = _2324.y;
    float _2328 = _2324.z;
    float _2329 = _2324.w;
    float _2409;
    float _2411;
    float _2413;
    float _2415;
    if (_773 > cbSceneParam._m0[78u].w)
    {
        float _2371 = isnan(_773) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _773 : min(cbSceneParam._m0[80u].w, _773));
        float _2372 = _2371 / _773;
        float _2383 = _2372 * _278;
        float _2384 = _279 * _2372;
        float _2385 = (-0.0) - _2384;
        float _2386 = _2372 * _280;
        float _2388 = (cbSceneParam._m0[77u].w * _2385) / _2371;
        float _2389 = _2388 + cbSceneParam._m0[79u].w;
        float _2390 = cbSceneParam._m0[79u].w - _2384;
        float _2396 = sqrt(((_2383 * _2383) + (_2384 * _2384)) + (_2386 * _2386));
        float _2399 = (1.0 - (cbSceneParam._m0[77u].w / _2371)) * _2396;
        float _2405 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2407 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2624;
        if (abs((_2385 - _2388) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2624 = ((((_2389 > 0.0) ? exp2(_2405 * _2389) : (2.0 - exp2(_2407 * _2389))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2399;
        }
        else
        {
            float _2559 = 1.0 / cbSceneParam._m0[80u].x;
            float _2560 = isnan(_2390) ? _2389 : (isnan(_2389) ? _2390 : max(_2389, _2390));
            float _2561 = isnan(_2390) ? _2389 : (isnan(_2389) ? _2390 : min(_2389, _2390));
            float _2570 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : min(_2560, 0.0));
            float _2571 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : min(_2561, 0.0));
            _2624 = ((abs(_2396 / _2385) * cbSceneParam._m0[80u].y) * ((((_2570 - _2571) * 2.0) - ((exp2(_2405 * (isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0)))) - exp2(_2405 * (isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0))))) * _2559)) - ((exp2(_2407 * _2570) - exp2(_2407 * _2571)) * _2559))) + (_2399 * cbSceneParam._m0[80u].z);
        }
        vec4 _2626 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2309, _2310, 1.0), 0.0);
        float _2635 = exp2((_2624 * (-1.44269502162933349609375)) * (1.0 - _2626.w));
        float _2636 = log2(_2635);
        float _2652 = log2(_2329);
        _2409 = (exp2(_2652 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2636 * cbSceneParam._m0[78u].x)) * _2626.x) / cbSceneParam._m0[78u].x)) + _2326;
        _2411 = (exp2(_2652 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2636 * cbSceneParam._m0[78u].y)) * _2626.y) / cbSceneParam._m0[78u].y)) + _2327;
        _2413 = (exp2(_2652 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2636 * cbSceneParam._m0[78u].z)) * _2626.z) / cbSceneParam._m0[78u].z)) + _2328;
        _2415 = _2635 * _2329;
    }
    else
    {
        _2409 = _2326;
        _2411 = _2327;
        _2413 = _2328;
        _2415 = _2329;
    }
    float _2426 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2427 = _2426 == 3.0;
    float _2428 = log2(_2415);
    float _2432 = exp2(_2428 * cbSceneParam._m0[78u].x);
    float _2433 = exp2(_2428 * cbSceneParam._m0[78u].y);
    float _2434 = exp2(_2428 * cbSceneParam._m0[78u].z);
    float _2435 = _2432 * (isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0)));
    float _2436 = _2433 * (isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0)));
    float _2437 = _2434 * (isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0)));
    float _2446 = (_2426 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2446 * (_2427 ? _2435 : (_2435 + (cbSceneParam._m0[72u].w * _2409)));
    SV_Target.y = _2446 * (_2427 ? _2436 : (_2436 + (cbSceneParam._m0[72u].w * _2411)));
    SV_Target.z = _2446 * (_2427 ? _2437 : (_2437 + (cbSceneParam._m0[72u].w * _2413)));
    SV_Target.w = cbInstanceData._m0[_2301].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2264) * _2300) * _2432) * _2446;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2265) * _2300) * _2433) * _2446;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2266) * _2300) * _2434) * _2446;
    SV_Target_1.w = cbInstanceData._m0[_2301].w;
}


