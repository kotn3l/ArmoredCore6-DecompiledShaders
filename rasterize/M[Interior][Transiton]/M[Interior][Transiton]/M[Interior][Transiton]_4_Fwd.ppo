#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1229;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _197 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _198 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _199 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _205 = inversesqrt(dot(vec3(_197, _198, _199), vec3(_197, _198, _199)));
    float _206 = _205 * _197;
    float _207 = _205 * _198;
    float _208 = _205 * _199;
    float _212 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _213 = _212 * NORMAL.x;
    float _214 = _212 * NORMAL.y;
    float _215 = _212 * NORMAL.z;
    float _219 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _220 = _219 * TANGENT.x;
    float _221 = _219 * TANGENT.y;
    float _222 = _219 * TANGENT.z;
    float _266 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _276 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _266);
    float _277 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _266);
    float _278 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _266);
    vec4 _292 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _295 = _292.x;
    vec4 _313 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _330 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _295) + cbMtdParam._m0[12u].x) * _313.x;
    float _332 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _295) + cbMtdParam._m0[12u].y) * _313.y;
    float _334 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _295) + cbMtdParam._m0[12u].z) * _313.z;
    vec4 _352 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _391 = cbMtdParam._m0[27u].w + _276;
    float _392 = cbMtdParam._m0[28u].x + _277;
    float _393 = cbMtdParam._m0[28u].y + _278;
    float _407 = (-0.0) - dot(vec3(_391, _392, _393), vec3(_206, _207, _208));
    float _408 = (-0.0) - dot(vec3(_391, _392, _393), vec3(_220, _221, _222));
    float _409 = (-0.0) - dot(vec3(_391, _392, _393), vec3((-0.0) - _213, (-0.0) - _214, (-0.0) - _215));
    float _413 = inversesqrt(dot(vec3(_407, _408, _409), vec3(_407, _408, _409)));
    float _416 = _413 * _409;
    float _419 = ((_413 * _407) + ((cbMtdParam._m0[25u].w * _295) * ((_352.x * 2.0) + (-1.0)))) * cbMtdParam._m0[24u].x;
    float _420 = ((_413 * _408) + ((cbMtdParam._m0[26u].x * _295) * ((_352.y * 2.0) + (-1.0)))) * cbMtdParam._m0[23u].w;
    float _421 = fract(TEXCOORD.x);
    float _422 = fract(TEXCOORD.y);
    float _428;
    if (_419 > 0.0)
    {
        _428 = (1.0 - _421) / _419;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_419 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _421) / _419;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _428 = frontier_phi_3_2_ladder;
    }
    float _436;
    if (_420 > 0.0)
    {
        _436 = (1.0 - _422) / _420;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_420 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _422) / _420;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _436 = frontier_phi_7_6_ladder;
    }
    float _440 = (_416 > 0.0) ? (cbMtdParam._m0[17u].x / _416) : 5000.0;
    float _441 = isnan(_436) ? _428 : (isnan(_428) ? _436 : min(_428, _436));
    float _442 = isnan(_440) ? _441 : (isnan(_441) ? _440 : min(_441, _440));
    float _446 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _453 = ((_442 * _416) + _446) / _446;
    vec4 _478 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((((_421 + (-0.5)) + (_442 * _419)) / _453) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((((_422 + (-0.5)) + (_442 * _420)) / _453) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _491 = (_478.x * _295) * cbMtdParam._m0[9u].x;
    float _492 = (_478.y * _295) * cbMtdParam._m0[9u].y;
    float _493 = (_478.z * _295) * cbMtdParam._m0[9u].z;
    vec4 _506 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _510 = _506.z;
    float _513 = (_506.x * 2.0) + (-1.0);
    float _514 = (_506.y * 2.0) + (-1.0);
    float _515 = dot(vec2(_513, _514), vec2(_513, _514));
    float _3328 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _520 = sqrt(1.0 - (isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0))));
    float _532 = (cbMtdParam._m0[19u].y * _491) * cbMtdParam._m0[16u].x;
    float _534 = (cbMtdParam._m0[19u].y * _492) * cbMtdParam._m0[16u].y;
    float _536 = (cbMtdParam._m0[19u].y * _493) * cbMtdParam._m0[16u].z;
    vec4 _560 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _565 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _571 = ((_560.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _573 = (-0.0) - (cbMtdParam._m0[21u].x * ((_560.x * 0.5) + (-0.25)));
    float _574 = fract(_565);
    float _576 = fract(_565 + 0.5);
    vec4 _603 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_574 * _573) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_571 * _574) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _605 = _603.x;
    float _611 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_576 * _573) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_571 * _576) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _605) * abs((_574 * 2.0) + (-1.0))) + _605;
    float _617 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _621 = fract(abs(_617));
    float _631 = sin(cbMtdParam._m0[21u].z);
    float _632 = cos(cbMtdParam._m0[21u].z);
    float _633 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _634 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _659 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_634, (-0.0) - _631, _632 * _633) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_634, _632, _633 * _631) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_617 >= ((-0.0) - _617)) ? _621 : ((-0.0) - _621)) * cbMtdParam._m0[18u].z) - _611)) + cbMtdParam._m0[18u].w;
    float _660 = ceil(_659);
    float _3339 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _661 = isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0));
    float _681 = ((((cbMtdParam._m0[21u].w * _491) * cbMtdParam._m0[15u].x) - _532) * _661) + _532;
    float _682 = ((((cbMtdParam._m0[21u].w * _492) * cbMtdParam._m0[15u].y) - _534) * _661) + _534;
    float _683 = ((((cbMtdParam._m0[21u].w * _493) * cbMtdParam._m0[15u].z) - _536) * _661) + _536;
    float _687 = abs(cbMtdParam._m0[20u].w * _659);
    float _691 = (((_687 * cbMtdParam._m0[18u].y) - _611) * _687) + _611;
    float _3350 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _692 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
    vec4 _704 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _719 = (cbMtdParam._m0[14u].x * _704.x) * cbMtdParam._m0[19u].x;
    float _720 = (cbMtdParam._m0[14u].y * _704.y) * cbMtdParam._m0[19u].x;
    float _721 = (cbMtdParam._m0[14u].z * _704.z) * cbMtdParam._m0[19u].x;
    float _728 = exp2(log2(_692) * cbMtdParam._m0[20u].x);
    float _750 = fma(_520, _213, fma(_514, _220, _513 * _206));
    float _753 = fma(_520, _214, fma(_514, _221, _513 * _207));
    float _756 = fma(_520, _215, fma(_514, _222, _513 * _208));
    float _760 = inversesqrt(dot(vec3(_750, _753, _756), vec3(_750, _753, _756)));
    float _761 = _760 * _750;
    float _762 = _760 * _753;
    float _763 = _760 * _756;
    float _3361 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _764 = isnan(1.0) ? _3361 : (isnan(_3361) ? 1.0 : min(_3361, 1.0));
    float _3372 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _3383 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _3394 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _783 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _787 = inversesqrt(dot(vec3(_276, _277, _278), vec3(_276, _277, _278)));
    float _788 = _276 * _787;
    float _789 = _277 * _787;
    float _790 = _278 * _787;
    float _796 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _797 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _815 = fma(_763, cbSceneParam._m0[5u].z, fma(_762, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _761));
    float _818 = fma(_763, cbSceneParam._m0[6u].z, fma(_762, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _761));
    float _821 = fma(_763, cbSceneParam._m0[7u].z, fma(_762, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _761));
    uint _834 = uint(roundEven(NORMAL.w)) * 13u;
    uint _835 = _834 + 9u;
    uint _836 = _835 + uint(cbMatDynParam._m0[0u].w);
    float _842 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3372 : (isnan(_3372) ? 1.0 : min(_3372, 1.0)))) * cbInstanceData._m0[_836].x;
    float _843 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3383 : (isnan(_3383) ? 1.0 : min(_3383, 1.0)))) * cbInstanceData._m0[_836].y;
    float _844 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3394 : (isnan(_3394) ? 1.0 : min(_3394, 1.0)))) * cbInstanceData._m0[_836].z;
    float _3405 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _845 = isnan(1.0) ? _3405 : (isnan(_3405) ? 1.0 : min(_3405, 1.0));
    float _3416 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _846 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
    float _3427 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _847 = isnan(1.0) ? _3427 : (isnan(_3427) ? 1.0 : min(_3427, 1.0));
    vec4 _856 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _796, cbSceneParam._m0[86u].y * _797));
    float _859 = _856.x * TEXCOORD_4;
    float _860 = dot(vec3(_761, _762, _763), vec3(_788, _789, _790));
    float _863 = _860 * 2.0;
    float _867 = (_863 * _761) - _788;
    float _868 = (_863 * _762) - _789;
    float _869 = (_863 * _763) - _790;
    float _873 = abs(dot(vec3(_788, _789, _790), vec3(_761, _762, _763)));
    float _3438 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _875 = sqrt(_764);
    float _888 = exp2((_875 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3438 : (isnan(_3438) ? 1.0 : min(_3438, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_875 * 3.0));
    float _920 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _924 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _928 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1228;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _955 = fma(_928, cbModelParam._m0[26u].z, fma(_924, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _920));
        float _959 = fma(_928, cbModelParam._m0[27u].z, fma(_924, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _920));
        float _963 = fma(_928, cbModelParam._m0[28u].z, fma(_924, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _920));
        float _986 = _920 + _761;
        float _987 = _924 + _762;
        float _988 = _928 + _763;
        float _998 = fma(_988, cbModelParam._m0[26u].z, fma(_987, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _986)) - _955;
        float _999 = fma(_988, cbModelParam._m0[27u].z, fma(_987, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _986)) - _959;
        float _1000 = fma(_988, cbModelParam._m0[28u].z, fma(_987, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _986)) - _963;
        float _1004 = inversesqrt(dot(vec3(_998, _999, _1000), vec3(_998, _999, _1000)));
        float _1017 = ((_1004 * _998) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_955 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1018 = ((_1004 * _999) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_959 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1019 = ((_1004 * _1000) / cbModelParam._m0[34u].z) + ((((((_963 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1022 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1029 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1036 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1017, _1018, _1019), 0.0);
        float _1056 = exp2((_1022.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1022.x + (-0.5));
        float _1058 = _1056 * (_1022.y + (-0.5));
        float _1059 = _1056 * (_1022.z + (-0.5));
        float _1066 = exp2((_1029.w + (-0.5)) * 20.0) * 2.0;
        float _1067 = _1066 * (_1029.x + (-0.5));
        float _1068 = _1066 * (_1029.y + (-0.5));
        float _1069 = _1066 * (_1029.z + (-0.5));
        float _1076 = exp2((_1036.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1036.x + (-0.5));
        float _1078 = _1076 * (_1036.y + (-0.5));
        float _1079 = _1076 * (_1036.z + (-0.5));
        float _1086 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1043.x + (-0.5));
        float _1088 = _1086 * (_1043.y + (-0.5));
        float _1089 = _1086 * (_1043.z + (-0.5));
        float _1090 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
        float _1091 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1092 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
        float _1093 = _1057 * 0.5;
        float _1094 = _1067 * 0.5;
        float _1095 = _1077 * 0.5;
        float _1096 = dot(vec3(_1093, _1094, _1095), vec3(_1093, _1094, _1095));
        float _1101 = (_1096 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1096);
        float _1110 = (dot(vec3(_761, _762, _763), vec3(_1101 * _1093, _1101 * _1094, _1101 * _1095)) + 1.0) * 0.5;
        float _3464 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1120 = sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095)) / (_1090 + 9.9999997473787516355514526367188e-06);
        float _3475 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1121 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
        float _1122 = _1121 * 2.0;
        float _1126 = (1.0 - _1121) / (_1121 + 1.0);
        float _3486 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1127 = isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0));
        float _1136 = ((((1.0 - _1127) * (_1122 + 2.0)) * exp2(log2(isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0))) * (_1122 + 1.0))) + _1127) * _1090;
        float _1137 = _1058 * 0.5;
        float _1138 = _1068 * 0.5;
        float _1139 = _1078 * 0.5;
        float _1140 = dot(vec3(_1137, _1138, _1139), vec3(_1137, _1138, _1139));
        float _1145 = (_1140 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1140);
        float _1153 = (dot(vec3(_761, _762, _763), vec3(_1145 * _1137, _1145 * _1138, _1145 * _1139)) + 1.0) * 0.5;
        float _3497 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1162 = sqrt(((_1138 * _1138) + (_1137 * _1137)) + (_1139 * _1139)) / (_1091 + 9.9999997473787516355514526367188e-06);
        float _3508 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0));
        float _1164 = _1163 * 2.0;
        float _1168 = (1.0 - _1163) / (_1163 + 1.0);
        float _3519 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1169 = isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0));
        float _1178 = ((((1.0 - _1169) * (_1164 + 2.0)) * exp2(log2(isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * (_1164 + 1.0))) + _1169) * _1091;
        float _1179 = _1059 * 0.5;
        float _1180 = _1069 * 0.5;
        float _1181 = _1079 * 0.5;
        float _1182 = dot(vec3(_1179, _1180, _1181), vec3(_1179, _1180, _1181));
        float _1187 = (_1182 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1182);
        float _1195 = (dot(vec3(_761, _762, _763), vec3(_1187 * _1179, _1187 * _1180, _1187 * _1181)) + 1.0) * 0.5;
        float _3530 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1204 = sqrt(((_1180 * _1180) + (_1179 * _1179)) + (_1181 * _1181)) / (_1092 + 9.9999997473787516355514526367188e-06);
        float _3541 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _3541 : (isnan(_3541) ? 1.0 : min(_3541, 1.0));
        float _1206 = _1205 * 2.0;
        float _1210 = (1.0 - _1205) / (_1205 + 1.0);
        float _3552 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0));
        float _1220 = ((((1.0 - _1211) * (_1206 + 2.0)) * exp2(log2(isnan(1.0) ? _3530 : (isnan(_3530) ? 1.0 : min(_3530, 1.0))) * (_1206 + 1.0))) + _1211) * _1092;
        _1228 = _1059;
        _1230 = _1058;
        _1231 = _1057;
        _1232 = _1069;
        _1233 = _1068;
        _1234 = _1067;
        _1235 = _1079;
        _1236 = _1078;
        _1237 = _1077;
        _1238 = _1092;
        _1239 = _1091;
        _1240 = _1090;
        _1241 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0)));
        _1242 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0)));
        _1243 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)));
    }
    else
    {
        _1228 = _1229;
        _1230 = _1229;
        _1231 = _1229;
        _1232 = _1229;
        _1233 = _1229;
        _1234 = _1229;
        _1235 = _1229;
        _1236 = _1229;
        _1237 = _1229;
        _1238 = _1229;
        _1239 = _1229;
        _1240 = _1229;
        _1241 = 0.0;
        _1242 = 0.0;
        _1243 = 0.0;
    }
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1268 = fma(_928, cbModelParam._m0[30u].z, fma(_924, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _920));
        float _1272 = fma(_928, cbModelParam._m0[31u].z, fma(_924, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _920));
        float _1276 = fma(_928, cbModelParam._m0[32u].z, fma(_924, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _920));
        float _1299 = _920 + _761;
        float _1300 = _924 + _762;
        float _1301 = _928 + _763;
        float _1311 = fma(_1301, cbModelParam._m0[30u].z, fma(_1300, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1299)) - _1268;
        float _1312 = fma(_1301, cbModelParam._m0[31u].z, fma(_1300, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1299)) - _1272;
        float _1313 = fma(_1301, cbModelParam._m0[32u].z, fma(_1300, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1299)) - _1276;
        float _1317 = inversesqrt(dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313)));
        float _1330 = ((_1317 * _1311) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1268 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1331 = ((_1317 * _1312) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1272 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1332 = ((_1317 * _1313) / cbModelParam._m0[35u].z) + ((((((_1276 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1330, _1331, _1332), 0.0);
        float _1367 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1334.x + (-0.5));
        float _1369 = _1367 * (_1334.y + (-0.5));
        float _1370 = _1367 * (_1334.z + (-0.5));
        float _1377 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1378 = _1377 * (_1341.x + (-0.5));
        float _1379 = _1377 * (_1341.y + (-0.5));
        float _1380 = _1377 * (_1341.z + (-0.5));
        float _1387 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1388 = _1387 * (_1348.x + (-0.5));
        float _1389 = _1387 * (_1348.y + (-0.5));
        float _1390 = _1387 * (_1348.z + (-0.5));
        float _1397 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1355.x + (-0.5));
        float _1399 = _1397 * (_1355.y + (-0.5));
        float _1400 = _1397 * (_1355.z + (-0.5));
        float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1402 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1403 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1404 = _1368 * 0.5;
        float _1405 = _1378 * 0.5;
        float _1406 = _1388 * 0.5;
        float _1407 = dot(vec3(_1404, _1405, _1406), vec3(_1404, _1405, _1406));
        float _1412 = (_1407 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1407);
        float _1420 = (dot(vec3(_761, _762, _763), vec3(_1412 * _1404, _1412 * _1405, _1412 * _1406)) + 1.0) * 0.5;
        float _3593 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1429 = sqrt(((_1405 * _1405) + (_1404 * _1404)) + (_1406 * _1406)) / (_1401 + 9.9999997473787516355514526367188e-06);
        float _3604 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1430 = isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0));
        float _1431 = _1430 * 2.0;
        float _1435 = (1.0 - _1430) / (_1430 + 1.0);
        float _3615 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1436 = isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0));
        float _1445 = ((((1.0 - _1436) * (_1431 + 2.0)) * exp2(log2(isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0))) * (_1431 + 1.0))) + _1436) * _1401;
        float _1446 = _1369 * 0.5;
        float _1447 = _1379 * 0.5;
        float _1448 = _1389 * 0.5;
        float _1449 = dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448));
        float _1454 = (_1449 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1449);
        float _1462 = (dot(vec3(_761, _762, _763), vec3(_1454 * _1446, _1454 * _1447, _1454 * _1448)) + 1.0) * 0.5;
        float _3626 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1471 = sqrt(((_1447 * _1447) + (_1446 * _1446)) + (_1448 * _1448)) / (_1402 + 9.9999997473787516355514526367188e-06);
        float _3637 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
        float _1473 = _1472 * 2.0;
        float _1477 = (1.0 - _1472) / (_1472 + 1.0);
        float _3648 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0));
        float _1487 = ((((1.0 - _1478) * (_1473 + 2.0)) * exp2(log2(isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0))) * (_1473 + 1.0))) + _1478) * _1402;
        float _1488 = _1370 * 0.5;
        float _1489 = _1380 * 0.5;
        float _1490 = _1390 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_761, _762, _763), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _3659 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1403 + 9.9999997473787516355514526367188e-06);
        float _3670 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _3681 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _3681 : (isnan(_3681) ? 1.0 : min(_3681, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0))) * (_1515 + 1.0))) + _1520) * _1403;
        _1537 = _1370;
        _1538 = _1369;
        _1539 = _1368;
        _1540 = _1380;
        _1541 = _1379;
        _1542 = _1378;
        _1543 = _1390;
        _1544 = _1389;
        _1545 = _1388;
        _1546 = _1403;
        _1547 = _1402;
        _1548 = _1401;
        _1549 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0)));
        _1550 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
        _1551 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
    }
    else
    {
        _1537 = _1229;
        _1538 = _1229;
        _1539 = _1229;
        _1540 = _1229;
        _1541 = _1229;
        _1542 = _1229;
        _1543 = _1229;
        _1544 = _1229;
        _1545 = _1229;
        _1546 = _1229;
        _1547 = _1229;
        _1548 = _1229;
        _1549 = 0.0;
        _1550 = 0.0;
        _1551 = 0.0;
    }
    float _1561 = (cbModelParam._m0[1u].x * (_1549 - _1241)) + _1241;
    float _1562 = (cbModelParam._m0[1u].x * (_1550 - _1242)) + _1242;
    float _1563 = (cbModelParam._m0[1u].x * (_1551 - _1243)) + _1243;
    float _1584 = fma(_1563, cbSceneParam._m0[89u].z, fma(_1562, cbSceneParam._m0[89u].y, _1561 * cbSceneParam._m0[89u].x));
    float _1587 = fma(_1563, cbSceneParam._m0[90u].z, fma(_1562, cbSceneParam._m0[90u].y, _1561 * cbSceneParam._m0[90u].x));
    float _1590 = fma(_1563, cbSceneParam._m0[91u].z, fma(_1562, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1561));
    float _1605 = _867 * 0.5;
    float _1606 = _868 * 0.5;
    float _1607 = _869 * 0.5;
    float _1608 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1539, _1542, _1545, _1548));
    float _1611 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1538, _1541, _1544, _1547));
    float _1614 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1537, _1540, _1543, _1546));
    float _1648;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1621 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1228, _1232, _1235, _1238));
        float _1625 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1230, _1233, _1236, _1239));
        float _1629 = dot(vec4(_1605, _1606, _1607, 1.0), vec4(_1231, _1234, _1237, _1240));
        float _1636 = dot(vec4(cbModelParam._m0[39u]), vec4(_1605, _1606, _1607, 1.0));
        _1648 = dot(vec3(isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)), isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)), isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1636) ? 0.0 : (isnan(0.0) ? _1636 : max(0.0, _1636))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1648 = 1.0;
    }
    float _1659;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1650 = dot(vec4(cbModelParam._m0[40u]), vec4(_1605, _1606, _1607, 1.0));
        _1659 = dot(vec3(isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1650) ? 0.0 : (isnan(0.0) ? _1650 : max(0.0, _1650))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1659 = 1.0;
    }
    float _1663 = (_1659 * cbModelParam._m0[1u].x) + (_1648 * (1.0 - cbModelParam._m0[1u].x));
    float _1673 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _764);
    float _1674 = isnan(_1673) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1673 : min(cbModelParam._m0[25u].z, _1673));
    float _1754;
    float _1756;
    float _1758;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1721 = fma(_928, cbModelParam._m0[13u].z, fma(_924, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _920)) + cbModelParam._m0[13u].w;
        float _1725 = fma(_928, cbModelParam._m0[14u].z, fma(_924, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _920)) + cbModelParam._m0[14u].w;
        float _1729 = fma(_928, cbModelParam._m0[15u].z, fma(_924, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _920)) + cbModelParam._m0[15u].w;
        float _1732 = fma(_869, cbModelParam._m0[13u].z, fma(_868, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _867));
        float _1735 = fma(_869, cbModelParam._m0[14u].z, fma(_868, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _867));
        float _1738 = fma(_869, cbModelParam._m0[15u].z, fma(_868, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _867));
        float _1766;
        if (_1732 > 0.0)
        {
            _1766 = abs((1.0 - _1721) / _1732);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1732 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1721 + 1.0) / _1732);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1766 = frontier_phi_22_20_ladder;
        }
        float _2111;
        if (_1735 > 0.0)
        {
            _2111 = abs((1.0 - _1725) / _1735);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1735 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1725 + 1.0) / _1735);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _2111 = frontier_phi_31_27_ladder;
        }
        float _2445;
        if (_1738 > 0.0)
        {
            _2445 = abs((1.0 - _1729) / _1738);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1738 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1729 + 1.0) / _1738);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _2445 = frontier_phi_45_38_ladder;
        }
        float _2447 = isnan(_2111) ? _1766 : (isnan(_1766) ? _2111 : min(_1766, _2111));
        float _2448 = isnan(_2445) ? _2447 : (isnan(_2447) ? _2445 : min(_2447, _2445));
        float _2452 = (_2448 * _1732) + _1721;
        float _2453 = (_2448 * _1735) + _1725;
        float _2454 = (_2448 * _1738) + _1729;
        float _2455 = _2448 * 9.9999997473787516355514526367188e-05;
        float _2456 = (-1.0) - _2455;
        float _2458 = _2455 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_2454 > _2458) || ((_2454 < _2456) || ((_2453 > _2458) || ((_2453 < _2456) || ((_2452 < _2456) || (_2452 > _2458))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2580 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2454, cbModelParam._m0[9u].z, fma(_2453, cbModelParam._m0[9u].y, _2452 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2454, cbModelParam._m0[10u].z, fma(_2453, cbModelParam._m0[10u].y, _2452 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2454, cbModelParam._m0[11u].z, fma(_2453, cbModelParam._m0[11u].y, _2452 * cbModelParam._m0[11u].x))), _1674);
            frontier_phi_21_45_ladder = _2580.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2580.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2580.x * cbModelParam._m0[1u].y;
        }
        _1754 = frontier_phi_21_45_ladder_2;
        _1756 = frontier_phi_21_45_ladder_1;
        _1758 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1742 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_867, _868, _869), _1674);
        _1754 = _1742.x * cbModelParam._m0[1u].y;
        _1756 = _1742.y * cbModelParam._m0[1u].y;
        _1758 = _1742.z * cbModelParam._m0[1u].y;
    }
    float _1762 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _764);
    float _1763 = isnan(_1762) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1762 : min(cbModelParam._m0[25u].w, _1762));
    float _1851;
    float _1853;
    float _1855;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1815 = fma(_928, cbModelParam._m0[21u].z, fma(_924, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _920)) + cbModelParam._m0[21u].w;
        float _1819 = fma(_928, cbModelParam._m0[22u].z, fma(_924, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _920)) + cbModelParam._m0[22u].w;
        float _1823 = fma(_928, cbModelParam._m0[23u].z, fma(_924, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _920)) + cbModelParam._m0[23u].w;
        float _1826 = fma(_869, cbModelParam._m0[21u].z, fma(_868, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _867));
        float _1829 = fma(_869, cbModelParam._m0[22u].z, fma(_868, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _867));
        float _1832 = fma(_869, cbModelParam._m0[23u].z, fma(_868, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _867));
        float _2116;
        if (_1826 > 0.0)
        {
            _2116 = abs((1.0 - _1815) / _1826);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1826 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1815 + 1.0) / _1826);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _2116 = frontier_phi_33_29_ladder;
        }
        float _2471;
        if (_1829 > 0.0)
        {
            _2471 = abs((1.0 - _1819) / _1829);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1829 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1819 + 1.0) / _1829);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _2471 = frontier_phi_47_40_ladder;
        }
        float _2640;
        if (_1832 > 0.0)
        {
            _2640 = abs((1.0 - _1823) / _1832);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1832 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1823 + 1.0) / _1832);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2640 = frontier_phi_61_56_ladder;
        }
        float _2642 = isnan(_2471) ? _2116 : (isnan(_2116) ? _2471 : min(_2116, _2471));
        float _2643 = isnan(_2640) ? _2642 : (isnan(_2642) ? _2640 : min(_2642, _2640));
        float _2647 = (_2643 * _1826) + _1815;
        float _2648 = (_2643 * _1829) + _1819;
        float _2649 = (_2643 * _1832) + _1823;
        float _2650 = _2643 * 9.9999997473787516355514526367188e-05;
        float _2651 = (-1.0) - _2650;
        float _2653 = _2650 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2649 > _2653) || ((_2649 < _2651) || ((_2648 > _2653) || ((_2648 < _2651) || ((_2647 < _2651) || (_2647 > _2653))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2882 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2649, cbModelParam._m0[17u].z, fma(_2648, cbModelParam._m0[17u].y, _2647 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2649, cbModelParam._m0[18u].z, fma(_2648, cbModelParam._m0[18u].y, _2647 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2649, cbModelParam._m0[19u].z, fma(_2648, cbModelParam._m0[19u].y, _2647 * cbModelParam._m0[19u].x))), _1763);
            frontier_phi_30_61_ladder = _2882.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2882.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2882.x * cbModelParam._m0[1u].z;
        }
        _1851 = frontier_phi_30_61_ladder_2;
        _1853 = frontier_phi_30_61_ladder_1;
        _1855 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1835 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_867, _868, _869), _1763);
        _1851 = _1835.x * cbModelParam._m0[1u].z;
        _1853 = _1835.y * cbModelParam._m0[1u].z;
        _1855 = _1835.z * cbModelParam._m0[1u].z;
    }
    float _1867 = ((((1.0 - _888) * ((_875 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_888 * _875)) * _859;
    float _1868 = _1867 * ((cbModelParam._m0[1u].w * (_1851 - _1754)) + _1754);
    float _1869 = _1867 * ((cbModelParam._m0[1u].w * (_1853 - _1756)) + _1756);
    float _1870 = _1867 * ((cbModelParam._m0[1u].w * (_1855 - _1758)) + _1758);
    float _1873 = fma(_1870, cbSceneParam._m0[89u].z, fma(_1869, cbSceneParam._m0[89u].y, _1868 * cbSceneParam._m0[89u].x));
    float _1876 = fma(_1870, cbSceneParam._m0[90u].z, fma(_1869, cbSceneParam._m0[90u].y, _1868 * cbSceneParam._m0[90u].x));
    float _1879 = fma(_1870, cbSceneParam._m0[91u].z, fma(_1869, cbSceneParam._m0[91u].y, _1868 * cbSceneParam._m0[91u].x));
    uvec4 _1889 = floatBitsToUint(cbInstanceData._m0[_834 + 5u]);
    uint _1891 = _1889.x * 14u;
    uint _1892 = _1891 + 13u;
    float _1897 = _859 + (-1.0);
    float _1900 = (cbLight._m0[_1892].x * _1897) + 1.0;
    float _1901 = (cbLight._m0[_1892].y * _1897) + 1.0;
    uint _1902 = _1891 + 5u;
    float _1908 = isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0));
    uint _1912 = _1891 + 4u;
    float _1918 = isnan(1.0) ? _1900 : (isnan(_1900) ? 1.0 : min(_1900, 1.0));
    uint _1922 = _1891 | 1u;
    float _1933 = dot(vec3(cbLight._m0[_1891].xyz), vec3(_761, _762, _763));
    float _1936 = dot(vec3(cbLight._m0[_1922].xyz), vec3(_761, _762, _763));
    float _3817 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
    float _3828 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
    float _1941 = (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0))) * 0.3183098733425140380859375;
    float _1943 = (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))) * 0.3183098733425140380859375;
    float _1950 = ((cbLight._m0[_1902].x * _1908) * _1943) + ((cbLight._m0[_1912].x * _1918) * _1941);
    float _1951 = ((_1908 * cbLight._m0[_1902].y) * _1943) + ((_1918 * cbLight._m0[_1912].y) * _1941);
    float _1952 = ((_1908 * cbLight._m0[_1902].z) * _1943) + ((_1918 * cbLight._m0[_1912].z) * _1941);
    uint _1954 = _1891 + 8u;
    float _1967 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1891].w)) * _764) * 0.949999988079071044921875);
    float _1968 = _1967 * _1967;
    float _1969 = cbLight._m0[_1891].x + _788;
    float _1970 = cbLight._m0[_1891].y + _789;
    float _1971 = cbLight._m0[_1891].z + _790;
    float _1975 = inversesqrt(dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971)));
    float _1976 = _1975 * _1969;
    float _1977 = _1975 * _1970;
    float _1978 = _1975 * _1971;
    float _1979 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_1891].xyz));
    float _3839 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
    float _1982 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    float _3850 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _1983 = isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0));
    float _1984 = dot(vec3(_761, _762, _763), vec3(_1976, _1977, _1978));
    float _3861 = isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0));
    float _1987 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _1988 = dot(vec3(cbLight._m0[_1891].xyz), vec3(_1976, _1977, _1978));
    float _3872 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
    float _1992 = _1968 * _1968;
    float _1996 = ((_1987 * _1987) * (_1992 + (-1.0))) + 1.0;
    float _2007 = (exp2(log2(1.0 - (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2008 = 1.0 - _1968;
    float _2019 = (0.5 / (((_1983 * ((_1982 * _2008) + _1968)) + 9.9999999392252902907785028219223e-09) + (((_1983 * _2008) + _1968) * _1982))) * _1982;
    float _3883 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2021 = (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * (_1992 / ((_1996 * _1996) * 3.141590118408203125));
    uint _2032 = _1891 + 9u;
    float _2043 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1922].w)) * _764) * 0.949999988079071044921875);
    float _2044 = _2043 * _2043;
    float _2045 = cbLight._m0[_1922].x + _788;
    float _2046 = cbLight._m0[_1922].y + _789;
    float _2047 = cbLight._m0[_1922].z + _790;
    float _2051 = inversesqrt(dot(vec3(_2045, _2046, _2047), vec3(_2045, _2046, _2047)));
    float _2052 = _2051 * _2045;
    float _2053 = _2051 * _2046;
    float _2054 = _2051 * _2047;
    float _2055 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_1922].xyz));
    float _3894 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
    float _2058 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _2059 = dot(vec3(_761, _762, _763), vec3(_2052, _2053, _2054));
    float _3905 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2062 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _2063 = dot(vec3(cbLight._m0[_1922].xyz), vec3(_2052, _2053, _2054));
    float _3916 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
    float _2067 = _2044 * _2044;
    float _2071 = ((_2062 * _2062) * (_2067 + (-1.0))) + 1.0;
    float _2080 = (exp2(log2(1.0 - (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2081 = 1.0 - _2044;
    float _2091 = (0.5 / (((_1983 * ((_2058 * _2081) + _2044)) + 9.9999999392252902907785028219223e-09) + (((_1983 * _2081) + _2044) * _2058))) * _2058;
    float _3927 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
    float _2093 = (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))) * (_2067 / ((_2071 * _2071) * 3.141590118408203125));
    float _2103 = (((_2080 * cbLight._m0[_2032].x) * _2093) * _1908) + (((_2007 * cbLight._m0[_1954].x) * _2021) * _1918);
    float _2104 = (((_2080 * cbLight._m0[_2032].y) * _2093) * _1908) + (((_2007 * cbLight._m0[_1954].y) * _2021) * _1918);
    float _2105 = (((_2080 * cbLight._m0[_2032].z) * _2093) * _1908) + (((_2007 * cbLight._m0[_1954].z) * _2021) * _1918);
    float _2220;
    float _2222;
    float _2224;
    float _2226;
    float _2228;
    float _2230;
    if (_1889.y == 0u)
    {
        float _2160 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2161 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2160;
        float _2162 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2160;
        float _2163 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2160;
        uvec4 _2175 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2176 = _2175.x;
        uint _2187 = uint((float(_2175.y) * floor(float(uint(cbSceneParam._m0[85u].y * _797) / _2176))) + floor(float(uint(cbSceneParam._m0[85u].x * _796) / _2176)));
        float _2197 = (log2(_2163 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2198 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
        uint _2201 = uint(isnan(14.0) ? _2198 : (isnan(_2198) ? 14.0 : min(_2198, 14.0)));
        uvec4 _2206 = texelFetch(g_lightClusterGridBuffer, int(((_2201 << 2u) + (_2187 << 6u)) >> 2u));
        uint _2207 = _2206.x;
        uint _2208 = _2175.z;
        float _2324;
        float _2326;
        float _2328;
        float _2330;
        float _2332;
        float _2334;
        if (((((1u << ((_2208 >> 4u) & 15u)) + 4294967295u) & _2207) == 0u) || ((_2208 & 240u) == 0u))
        {
            _2324 = 0.0;
            _2326 = 0.0;
            _2328 = 0.0;
            _2330 = 0.0;
            _2332 = 0.0;
            _2334 = 0.0;
        }
        else
        {
            float _2325;
            float _2327;
            float _2329;
            float _2331;
            float _2333;
            float _2335;
            float _2508 = 0.0;
            float _2509 = 0.0;
            float _2510 = 0.0;
            float _2511 = 0.0;
            float _2512 = 0.0;
            float _2513 = 0.0;
            uint _2514 = 0u;
            uint _2523;
            bool _2524;
            for (;;)
            {
                _2523 = texelFetch(g_lightClassification, int((((_2201 << 5u) + (_2187 << 9u)) + (_2514 << 2u)) >> 2u)).x;
                _2524 = _2523 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2524)
                {
                    frontier_phi_58_pred = _2509;
                    frontier_phi_58_pred_1 = _2513;
                    frontier_phi_58_pred_2 = _2512;
                    frontier_phi_58_pred_3 = _2511;
                    frontier_phi_58_pred_4 = _2510;
                    frontier_phi_58_pred_5 = _2508;
                }
                else
                {
                    float _2683;
                    float _2684;
                    float _2685;
                    float _2686;
                    float _2687;
                    float _2688;
                    uint _2689;
                    _2683 = _2508;
                    _2684 = _2509;
                    _2685 = _2510;
                    _2686 = _2511;
                    _2687 = _2512;
                    _2688 = _2513;
                    _2689 = _2523;
                    float _2589;
                    float _2590;
                    float _2591;
                    float _2592;
                    float _2593;
                    float _2594;
                    for (;;)
                    {
                        uint _2693 = uint(findLSB(_2689)) + (_2514 << 5u);
                        uint _2690 = (_2689 + 4294967295u) & _2689;
                        uint _2695 = _2693 * 48u;
                        vec4 _2709 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2695)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2695 + 3u)).x));
                        uint _2715 = (_2693 * 48u) + 4u;
                        vec4 _2728 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2715)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2715 + 3u)).x));
                        uint _2734 = (_2693 * 48u) + 8u;
                        vec3 _2745 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2734)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 2u)).x));
                        float _2749 = _2709.x - _2161;
                        float _2750 = _2709.y - _2162;
                        float _2751 = _2709.z - _2163;
                        float _2752 = dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751));
                        float _2755 = inversesqrt(_2752);
                        float _2756 = _2755 * _2749;
                        float _2757 = _2755 * _2750;
                        float _2758 = _2755 * _2751;
                        float _2759 = dot(vec3(_815, _818, _821), vec3(_2756, _2757, _2758));
                        float _2764 = 1.0 - (_2752 * _2709.w);
                        float _3948 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
                        float _2765 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
                        float _2766 = sqrt(_2752) * _2728.w;
                        float _2769 = 1.39999997615814208984375 / (_2766 + 1.39999997615814208984375);
                        float _2770 = _2769 * _2769;
                        float _2773 = ((1.0 - _2770) * _2759) + _2770;
                        float _2776 = _2766 * _2766;
                        float _2780 = ((isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0))) * _2765) / ((_2776 * 0.699999988079071044921875) + 1.0);
                        float _2784 = (-0.0) - _2161;
                        float _2785 = (-0.0) - _2162;
                        float _2786 = (-0.0) - _2163;
                        float _2790 = inversesqrt(dot(vec3(_2784, _2785, _2786), vec3(_2784, _2785, _2786)));
                        float _2791 = _2790 * _2784;
                        float _2792 = _2790 * _2785;
                        float _2793 = _2790 * _2786;
                        float _2801 = exp2(log2(1.0 / ((_2776 * 3.5) + 5.0)) * 0.25);
                        float _2802 = 1.0 - _875;
                        float _2809 = sqrt(1.0 - ((1.0 - (_2802 * _2802)) * (1.0 - (_2801 * _2801))));
                        float _2810 = _2809 * _2809;
                        float _2811 = _2810 * _2810;
                        float _2812 = _2791 + _2756;
                        float _2813 = _2792 + _2757;
                        float _2814 = _2793 + _2758;
                        float _2818 = inversesqrt(dot(vec3(_2812, _2813, _2814), vec3(_2812, _2813, _2814)));
                        float _2822 = dot(vec3(_815, _818, _821), vec3(_2791, _2792, _2793));
                        float _3964 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
                        float _2825 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
                        float _2826 = dot(vec3(_815, _818, _821), vec3(_2818 * _2812, _2818 * _2813, _2818 * _2814));
                        float _3975 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
                        float _2829 = isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0));
                        float _2833 = ((_2829 * _2829) * (_2811 + (-1.0))) + 1.0;
                        float _2834 = _2769 * _2810;
                        float _2835 = _2834 * _2834;
                        float _2838 = ((1.0 - _2835) * _2759) + _2835;
                        float _3986 = isnan(0.0) ? _2838 : (isnan(_2838) ? 0.0 : max(_2838, 0.0));
                        float _2839 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
                        float _2840 = 1.0 - _2810;
                        float _2850 = (0.5 / (((_2839 * ((_2825 * _2840) + _2810)) + 9.9999999392252902907785028219223e-09) + (((_2839 * _2840) + _2810) * _2825))) * _2839;
                        float _3997 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
                        float _2861 = (((_2811 * 3.1415927410125732421875) * (isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0)))) / ((_2833 * _2833) * ((_2776 * 2.1991131305694580078125) + 3.141590118408203125))) * _2765;
                        _2592 = (_2780 * _2728.x) + _2686;
                        _2593 = (_2780 * _2728.y) + _2687;
                        _2594 = (_2780 * _2728.z) + _2688;
                        _2589 = (_2861 * _2745.x) + _2683;
                        _2590 = (_2861 * _2745.y) + _2684;
                        _2591 = (_2861 * _2745.z) + _2685;
                        if (_2690 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2683 = _2589;
                            _2684 = _2590;
                            _2685 = _2591;
                            _2686 = _2592;
                            _2687 = _2593;
                            _2688 = _2594;
                            _2689 = _2690;
                        }
                    }
                    frontier_phi_58_pred = _2590;
                    frontier_phi_58_pred_1 = _2594;
                    frontier_phi_58_pred_2 = _2593;
                    frontier_phi_58_pred_3 = _2592;
                    frontier_phi_58_pred_4 = _2591;
                    frontier_phi_58_pred_5 = _2589;
                }
                _2327 = frontier_phi_58_pred;
                _2335 = frontier_phi_58_pred_1;
                _2333 = frontier_phi_58_pred_2;
                _2331 = frontier_phi_58_pred_3;
                _2329 = frontier_phi_58_pred_4;
                _2325 = frontier_phi_58_pred_5;
                uint _2515 = _2514 + 1u;
                if (_2515 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2508 = _2325;
                    _2509 = _2327;
                    _2510 = _2329;
                    _2511 = _2331;
                    _2512 = _2333;
                    _2513 = _2335;
                    _2514 = _2515;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2324 = _2325;
            _2326 = _2327;
            _2328 = _2329;
            _2330 = _2331;
            _2332 = _2333;
            _2334 = _2335;
        }
        uvec4 _2338 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2339 = _2338.z;
        uint _2341 = (_2339 >> 8u) & 15u;
        float _2476;
        float _2478;
        float _2480;
        float _2482;
        float _2484;
        float _2486;
        if (((4294967295u << _2341) & _2207) == 0u)
        {
            _2476 = _2324;
            _2478 = _2326;
            _2480 = _2328;
            _2482 = _2330;
            _2484 = _2332;
            _2486 = _2334;
        }
        else
        {
            float _2501 = inversesqrt(dot(vec3(_2161, _2162, _2163), vec3(_2161, _2162, _2163)));
            float _2502 = _2501 * _2161;
            float _2503 = _2501 * _2162;
            float _2504 = _2501 * _2163;
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_2341 < ((_2339 >> 12u) & 15u))
            {
                float _2477;
                float _2479;
                float _2481;
                float _2483;
                float _2485;
                float _2487;
                float _2666 = _2324;
                float _2667 = _2326;
                float _2668 = _2328;
                float _2669 = _2330;
                float _2670 = _2332;
                float _2671 = _2334;
                uint _2672 = _2341;
                uint _2681;
                bool _2682;
                for (;;)
                {
                    _2681 = texelFetch(g_lightClassification, int((((_2201 << 5u) + (_2187 << 9u)) + (_2672 << 2u)) >> 2u)).x;
                    _2682 = _2681 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2682)
                    {
                        frontier_phi_67_pred = _2671;
                        frontier_phi_67_pred_1 = _2670;
                        frontier_phi_67_pred_2 = _2669;
                        frontier_phi_67_pred_3 = _2668;
                        frontier_phi_67_pred_4 = _2667;
                        frontier_phi_67_pred_5 = _2666;
                    }
                    else
                    {
                        float _2887;
                        float _2888;
                        float _2889;
                        float _2890;
                        float _2891;
                        float _2892;
                        float _3180;
                        float _3181;
                        float _3182;
                        float _3183;
                        float _3184;
                        float _3185;
                        float _2900 = _2666;
                        float _2901 = _2667;
                        float _2902 = _2668;
                        float _2903 = _2669;
                        float _2904 = _2670;
                        float _2905 = _2671;
                        uint _2906 = _2681;
                        uint _2907;
                        vec4 _2932;
                        float _2933;
                        vec4 _2948;
                        vec3 _2960;
                        vec4 _2975;
                        vec4 _2990;
                        float _3036;
                        bool _3037;
                        for (;;)
                        {
                            uint _2917 = ((_2672 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2906));
                            _2907 = (_2906 + 4294967295u) & _2906;
                            uint _2919 = _2917 * 40u;
                            _2932 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2919)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2919 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2919 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2919 + 3u)).x));
                            _2933 = _2932.w;
                            uint _2935 = (_2917 * 40u) + 4u;
                            _2948 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2935)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2935 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2935 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2935 + 3u)).x));
                            uint _2950 = (_2917 * 40u) + 8u;
                            _2960 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2950)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2950 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2950 + 2u)).x));
                            uint _2962 = (_2917 * 40u) + 16u;
                            _2975 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2962)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 3u)).x));
                            uint _2977 = (_2917 * 40u) + 20u;
                            _2990 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2977)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 3u)).x));
                            uint _2992 = (_2917 * 40u) + 24u;
                            vec4 _3005 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2992)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2992 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2992 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2992 + 3u)).x));
                            uint _3011 = (_2917 * 40u) + 28u;
                            vec4 _3024 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3011)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3011 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3011 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3011 + 3u)).x));
                            _3036 = fma(_2163, _3024.z, fma(_2162, _3024.y, _3024.x * _2161)) + _3024.w;
                            _3037 = !((fma(_2163, _3005.z, fma(_2162, _3005.y, _3005.x * _2161)) + _3005.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3037)
                            {
                                float _3064 = _2932.x - _2161;
                                float _3065 = _2932.y - _2162;
                                float _3066 = _2932.z - _2163;
                                float _3067 = dot(vec3(_3064, _3065, _3066), vec3(_3064, _3065, _3066));
                                float _3070 = inversesqrt(_3067);
                                float _3071 = _3070 * _3064;
                                float _3072 = _3070 * _3065;
                                float _3073 = _3070 * _3066;
                                float _3077 = 1.0 - (_3067 / (_2933 * _2933));
                                float _4008 = isnan(0.0) ? _3077 : (isnan(_3077) ? 0.0 : max(_3077, 0.0));
                                float _3078 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
                                float _3082 = sqrt(_3067) * _2948.w;
                                float _3084 = 1.39999997615814208984375 / (_3082 + 1.39999997615814208984375);
                                float _3085 = _3084 * _3084;
                                float _3088 = ((1.0 - _3085) * dot(vec3(_3071, _3072, _3073), vec3(_815, _818, _821))) + _3085;
                                float _3091 = _3082 * _3082;
                                float _3095 = (fma(_2163, _2975.z, fma(_2162, _2975.y, _2975.x * _2161)) + _2975.w) / _3036;
                                float _3096 = (fma(_2163, _2990.z, fma(_2162, _2990.y, _2990.x * _2161)) + _2990.w) / _3036;
                                float _3100 = 1.0 - dot(vec2(_3095, _3096), vec2(_3095, _3096));
                                float _4024 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0));
                                float _3101 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
                                float _3102 = _3101 * (((isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0))) * _3078) / ((_3091 * 0.699999988079071044921875) + 1.0));
                                float _3114 = exp2(log2(1.0 / ((_3091 * 3.5) + 5.0)) * 0.25);
                                float _3115 = 1.0 - _875;
                                float _3122 = sqrt(1.0 - ((1.0 - (_3115 * _3115)) * (1.0 - (_3114 * _3114))));
                                float _3123 = _3122 * _3122;
                                float _3124 = _3123 * _3123;
                                float _3125 = _3071 - _2502;
                                float _3126 = _3072 - _2503;
                                float _3127 = _3073 - _2504;
                                float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
                                float _3135 = dot(vec3(_815, _818, _821), vec3((-0.0) - _2502, (-0.0) - _2503, (-0.0) - _2504));
                                float _4035 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
                                float _3138 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
                                float _3139 = dot(vec3(_815, _818, _821), vec3(_3131 * _3125, _3131 * _3126, _3131 * _3127));
                                float _4046 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0));
                                float _3142 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
                                float _3146 = ((_3142 * _3142) * (_3124 + (-1.0))) + 1.0;
                                float _3147 = _3084 * _3123;
                                float _3148 = _3147 * _3147;
                                float _3154 = ((1.0 - _3148) * dot(vec3(_815, _818, _821), vec3(_3071, _3072, _3073))) + _3148;
                                float _4057 = isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : max(_3154, 0.0));
                                float _3155 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
                                float _3156 = 1.0 - _3123;
                                float _3166 = (0.5 / (((_3155 * ((_3138 * _3156) + _3123)) + 9.9999999392252902907785028219223e-09) + (((_3155 * _3156) + _3123) * _3138))) * _3155;
                                float _4068 = isnan(0.0) ? _3166 : (isnan(_3166) ? 0.0 : max(_3166, 0.0));
                                float _3176 = (_3101 * _3078) * (((_3124 * 3.1415927410125732421875) * (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0)))) / ((_3146 * _3146) * ((_3091 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3102 * _2948.z;
                                frontier_phi_73_pred_1 = _3102 * _2948.y;
                                frontier_phi_73_pred_2 = _3102 * _2948.x;
                                frontier_phi_73_pred_3 = _3176 * _2960.z;
                                frontier_phi_73_pred_4 = _3176 * _2960.y;
                                frontier_phi_73_pred_5 = _3176 * _2960.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3185 = frontier_phi_73_pred;
                            _3184 = frontier_phi_73_pred_1;
                            _3183 = frontier_phi_73_pred_2;
                            _3182 = frontier_phi_73_pred_3;
                            _3181 = frontier_phi_73_pred_4;
                            _3180 = frontier_phi_73_pred_5;
                            _2890 = _3183 + _2903;
                            _2891 = _3184 + _2904;
                            _2892 = _3185 + _2905;
                            _2887 = _3180 + _2900;
                            _2888 = _3181 + _2901;
                            _2889 = _3182 + _2902;
                            if (_2907 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2900 = _2887;
                                _2901 = _2888;
                                _2902 = _2889;
                                _2903 = _2890;
                                _2904 = _2891;
                                _2905 = _2892;
                                _2906 = _2907;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2892;
                        frontier_phi_67_pred_1 = _2891;
                        frontier_phi_67_pred_2 = _2890;
                        frontier_phi_67_pred_3 = _2889;
                        frontier_phi_67_pred_4 = _2888;
                        frontier_phi_67_pred_5 = _2887;
                    }
                    _2487 = frontier_phi_67_pred;
                    _2485 = frontier_phi_67_pred_1;
                    _2483 = frontier_phi_67_pred_2;
                    _2481 = frontier_phi_67_pred_3;
                    _2479 = frontier_phi_67_pred_4;
                    _2477 = frontier_phi_67_pred_5;
                    uint _2673 = _2672 + 1u;
                    if (_2673 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2666 = _2477;
                        _2667 = _2479;
                        _2668 = _2481;
                        _2669 = _2483;
                        _2670 = _2485;
                        _2671 = _2487;
                        _2672 = _2673;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _2483;
                frontier_phi_49_50_ladder_1 = _2487;
                frontier_phi_49_50_ladder_2 = _2485;
                frontier_phi_49_50_ladder_3 = _2481;
                frontier_phi_49_50_ladder_4 = _2479;
                frontier_phi_49_50_ladder_5 = _2477;
            }
            else
            {
                frontier_phi_49_50_ladder = _2330;
                frontier_phi_49_50_ladder_1 = _2334;
                frontier_phi_49_50_ladder_2 = _2332;
                frontier_phi_49_50_ladder_3 = _2328;
                frontier_phi_49_50_ladder_4 = _2326;
                frontier_phi_49_50_ladder_5 = _2324;
            }
            _2476 = frontier_phi_49_50_ladder_5;
            _2478 = frontier_phi_49_50_ladder_4;
            _2480 = frontier_phi_49_50_ladder_3;
            _2482 = frontier_phi_49_50_ladder;
            _2484 = frontier_phi_49_50_ladder_2;
            _2486 = frontier_phi_49_50_ladder_1;
        }
        float _2491 = isnan(1.0) ? _859 : (isnan(_859) ? 1.0 : min(_859, 1.0));
        _2220 = (_2491 * _2482) + _1950;
        _2222 = (_2491 * _2484) + _1951;
        _2224 = (_2491 * _2486) + _1952;
        _2226 = ((_2476 * 0.039999999105930328369140625) * _2491) + _2103;
        _2228 = ((_2478 * 0.039999999105930328369140625) * _2491) + _2104;
        _2230 = ((_2480 * 0.039999999105930328369140625) * _2491) + _2105;
    }
    else
    {
        _2220 = _1950;
        _2222 = _1951;
        _2224 = _1952;
        _2226 = _2103;
        _2228 = _2104;
        _2230 = _2105;
    }
    uint _2236 = _835 + uint(cbMatDynParam._m0[0u].w);
    float _2242 = (cbSceneParam._m0[72u].y * ((_728 * ((_719 - _681) - (_719 * _692))) + _681)) * cbInstanceData._m0[_2236].x;
    float _2243 = (cbSceneParam._m0[72u].y * ((_728 * ((_720 - _682) - (_720 * _692))) + _682)) * cbInstanceData._m0[_2236].y;
    float _2244 = (((_728 * ((_721 - _683) - (_721 * _692))) + _683) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2236].z;
    float _4084 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _4095 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _4106 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _2261 = (((isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * (_2220 + ((isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0))) * _859))) + ((_2226 + ((isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + _2242;
    float _2263 = (_2243 + ((_2228 + ((isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * (_2222 + ((isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0))) * _859)));
    float _2265 = (_2244 + ((_2230 + ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) * _1663)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * (_2224 + ((isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0))) * _859)));
    float _4132 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2278 = isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0));
    uint _2279 = _834 + 6u;
    float _2287 = _796 / cbSceneParam._m0[86u].x;
    float _2288 = _797 / cbSceneParam._m0[86u].y;
    vec4 _2302 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2287, _2288, (log2((isnan(cbSceneParam._m0[77u].w) ? _783 : (isnan(_783) ? cbSceneParam._m0[77u].w : min(_783, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2304 = _2302.x;
    float _2305 = _2302.y;
    float _2306 = _2302.z;
    float _2307 = _2302.w;
    float _2387;
    float _2389;
    float _2391;
    float _2393;
    if (_783 > cbSceneParam._m0[78u].w)
    {
        float _2349 = isnan(_783) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _783 : min(cbSceneParam._m0[80u].w, _783));
        float _2350 = _2349 / _783;
        float _2361 = _2350 * _276;
        float _2362 = _277 * _2350;
        float _2363 = (-0.0) - _2362;
        float _2364 = _2350 * _278;
        float _2366 = (cbSceneParam._m0[77u].w * _2363) / _2349;
        float _2367 = _2366 + cbSceneParam._m0[79u].w;
        float _2368 = cbSceneParam._m0[79u].w - _2362;
        float _2374 = sqrt(((_2361 * _2361) + (_2362 * _2362)) + (_2364 * _2364));
        float _2377 = (1.0 - (cbSceneParam._m0[77u].w / _2349)) * _2374;
        float _2383 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2385 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2602;
        if (abs((_2363 - _2366) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2602 = ((((_2367 > 0.0) ? exp2(_2383 * _2367) : (2.0 - exp2(_2385 * _2367))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2377;
        }
        else
        {
            float _2537 = 1.0 / cbSceneParam._m0[80u].x;
            float _2538 = isnan(_2368) ? _2367 : (isnan(_2367) ? _2368 : max(_2367, _2368));
            float _2539 = isnan(_2368) ? _2367 : (isnan(_2367) ? _2368 : min(_2367, _2368));
            float _2548 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : min(_2538, 0.0));
            float _2549 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : min(_2539, 0.0));
            _2602 = ((abs(_2374 / _2363) * cbSceneParam._m0[80u].y) * ((((_2548 - _2549) * 2.0) - ((exp2(_2383 * (isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0)))) - exp2(_2383 * (isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0))))) * _2537)) - ((exp2(_2385 * _2548) - exp2(_2385 * _2549)) * _2537))) + (_2377 * cbSceneParam._m0[80u].z);
        }
        vec4 _2604 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2287, _2288, 1.0), 0.0);
        float _2613 = exp2((_2602 * (-1.44269502162933349609375)) * (1.0 - _2604.w));
        float _2614 = log2(_2613);
        float _2630 = log2(_2307);
        _2387 = (exp2(_2630 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2614 * cbSceneParam._m0[78u].x)) * _2604.x) / cbSceneParam._m0[78u].x)) + _2304;
        _2389 = (exp2(_2630 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2614 * cbSceneParam._m0[78u].y)) * _2604.y) / cbSceneParam._m0[78u].y)) + _2305;
        _2391 = (exp2(_2630 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2614 * cbSceneParam._m0[78u].z)) * _2604.z) / cbSceneParam._m0[78u].z)) + _2306;
        _2393 = _2613 * _2307;
    }
    else
    {
        _2387 = _2304;
        _2389 = _2305;
        _2391 = _2306;
        _2393 = _2307;
    }
    float _2404 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2405 = _2404 == 3.0;
    float _2406 = log2(_2393);
    float _2410 = exp2(_2406 * cbSceneParam._m0[78u].x);
    float _2411 = exp2(_2406 * cbSceneParam._m0[78u].y);
    float _2412 = exp2(_2406 * cbSceneParam._m0[78u].z);
    float _2413 = _2410 * (isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0)));
    float _2414 = _2411 * (isnan(0.0) ? _2263 : (isnan(_2263) ? 0.0 : max(_2263, 0.0)));
    float _2415 = _2412 * (isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0)));
    float _2424 = (_2404 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2424 * (_2405 ? _2413 : (_2413 + (cbSceneParam._m0[72u].w * _2387)));
    SV_Target.y = _2424 * (_2405 ? _2414 : (_2414 + (cbSceneParam._m0[72u].w * _2389)));
    SV_Target.z = _2424 * (_2405 ? _2415 : (_2415 + (cbSceneParam._m0[72u].w * _2391)));
    SV_Target.w = cbInstanceData._m0[_2279].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2242) * _2278) * _2410) * _2424;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2243) * _2278) * _2411) * _2424;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2244) * _2278) * _2412) * _2424;
    SV_Target_1.w = cbInstanceData._m0[_2279].w;
}


