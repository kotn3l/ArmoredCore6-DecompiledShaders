#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_1;
layout(set = 0, binding = 13) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _423;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _171 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _172 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _173 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _179 = inversesqrt(dot(vec3(_171, _172, _173), vec3(_171, _172, _173)));
    float _180 = _179 * _171;
    float _181 = _179 * _172;
    float _182 = _179 * _173;
    float _186 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _187 = _186 * NORMAL.x;
    float _188 = _186 * NORMAL.y;
    float _189 = _186 * NORMAL.z;
    float _193 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _194 = _193 * TANGENT.x;
    float _195 = _193 * TANGENT.y;
    float _196 = _193 * TANGENT.z;
    float _240 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _250 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _240);
    float _251 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _240);
    float _252 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _240);
    vec4 _266 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _269 = _266.x;
    vec4 _287 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _304 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _269) + cbMtdParam._m0[12u].x) * _287.x;
    float _306 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _269) + cbMtdParam._m0[12u].y) * _287.y;
    float _308 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _269) + cbMtdParam._m0[12u].z) * _287.z;
    vec4 _335 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _350 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _357 = inversesqrt(dot(vec3(_194, _195, _196), vec3(_194, _195, _196)));
    float _370 = cbMtdParam._m0[28u].z + _250;
    float _371 = cbMtdParam._m0[28u].w + _251;
    float _372 = cbMtdParam._m0[29u].x + _252;
    float _386 = (-0.0) - dot(vec3(_370, _371, _372), vec3(_350 * _180, _350 * _181, _350 * _182));
    float _387 = (-0.0) - dot(vec3(_370, _371, _372), vec3(_357 * _194, _357 * _195, _357 * _196));
    float _388 = (-0.0) - dot(vec3(_370, _371, _372), vec3((-0.0) - _187, (-0.0) - _188, (-0.0) - _189));
    float _392 = inversesqrt(dot(vec3(_386, _387, _388), vec3(_386, _387, _388)));
    float _393 = _392 * _388;
    float _398 = ((cbMtdParam._m0[25u].y * _386) * _392) + (((_335.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _399 = ((cbMtdParam._m0[25u].z * _387) * _392) + (((_335.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _402 = fract(cbMtdParam._m0[25u].y * TEXCOORD.x);
    float _403 = fract(cbMtdParam._m0[25u].z * TEXCOORD.y);
    float _421;
    float _424;
    float _426;
    if (_398 > 0.0)
    {
        float _407 = (1.0 - _402) / _398;
        _421 = _407;
        _424 = ((cbMtdParam._m0[22u].x + 1.0) - fract(_407 * _393)) * 0.16666667163372039794921875;
        _426 = (fract((_407 * _399) + _403) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_398 < 0.0)
        {
            float _422 = ((-0.0) - _402) / _398;
            frontier_phi_3_2_ladder = _422;
            frontier_phi_3_2_ladder_1 = (fract(_422 * _393) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_422 * _399) + _403) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _423;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _421 = frontier_phi_3_2_ladder;
        _424 = frontier_phi_3_2_ladder_1;
        _426 = frontier_phi_3_2_ladder_2;
    }
    float _452;
    float _454;
    float _456;
    if (_399 > 0.0)
    {
        float _439 = (1.0 - _403) / _399;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_439 < _421)
        {
            frontier_phi_8_5_ladder = _439;
            frontier_phi_8_5_ladder_1 = (fract((_439 * _398) + _402) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_439 * _393) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _421;
            frontier_phi_8_5_ladder_1 = _424;
            frontier_phi_8_5_ladder_2 = _426;
        }
        _452 = frontier_phi_8_5_ladder;
        _454 = frontier_phi_8_5_ladder_1;
        _456 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_399 < 0.0)
        {
            float _453 = ((-0.0) - _403) / _399;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_453 < _421)
            {
                frontier_phi_8_6_ladder_9_ladder = _453;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_453 * _398) + _402) + cbMtdParam._m0[22u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_453 * _393) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _421;
                frontier_phi_8_6_ladder_9_ladder_1 = _424;
                frontier_phi_8_6_ladder_9_ladder_2 = _426;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _421;
            frontier_phi_8_6_ladder_1 = _424;
            frontier_phi_8_6_ladder_2 = _426;
        }
        _452 = frontier_phi_8_6_ladder;
        _454 = frontier_phi_8_6_ladder_1;
        _456 = frontier_phi_8_6_ladder_2;
    }
    float _460 = (_393 > 0.0) ? (cbMtdParam._m0[20u].z / _393) : 5000.0;
    float _473;
    float _474;
    if (_460 < _452)
    {
        _473 = ((_402 + cbMtdParam._m0[22u].x) + (_460 * _398)) * 0.16666667163372039794921875;
        _474 = (((_460 * _399) + _403) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _473 = _454;
        _474 = _456;
    }
    vec4 _476 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_473, _474));
    float _484 = _269 * 0.1500000059604644775390625;
    float _492 = (_484 * ((_476.x * _269) - _304)) + _304;
    float _493 = (_484 * ((_476.y * _269) - _306)) + _306;
    float _494 = (_484 * ((_476.z * _269) - _308)) + _308;
    vec4 _507 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _511 = _507.z;
    float _514 = (_507.x * 2.0) + (-1.0);
    float _515 = (_507.y * 2.0) + (-1.0);
    float _516 = dot(vec2(_514, _515), vec2(_514, _515));
    float _957 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _521 = sqrt(1.0 - (isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0))));
    vec4 _548 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _553 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _559 = ((_548.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _561 = (-0.0) - (cbMtdParam._m0[21u].x * ((_548.x * 0.5) + (-0.25)));
    float _562 = fract(_553);
    float _564 = fract(_553 + 0.5);
    vec4 _591 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_562 * _561) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_559 * _562) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _593 = _591.x;
    float _599 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_564 * _561) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_559 * _564) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _593) * abs((_562 * 2.0) + (-1.0))) + _593;
    float _613 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _617 = fract(abs(_613));
    float _623 = sin(cbMtdParam._m0[21u].z);
    float _624 = cos(cbMtdParam._m0[21u].z);
    float _625 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _626 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _656 = abs(cbMtdParam._m0[20u].w * (((_599 - (((_613 >= ((-0.0) - _613)) ? _617 : ((-0.0) - _617)) * cbMtdParam._m0[18u].z)) + texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_626, (-0.0) - _623, _624 * _625) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_626, _624, _625 * _623) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x) + cbMtdParam._m0[18u].w));
    float _660 = (((_656 * cbMtdParam._m0[18u].y) - _599) * _656) + _599;
    float _968 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _661 = isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0));
    vec4 _673 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _688 = (cbMtdParam._m0[14u].x * _673.x) * cbMtdParam._m0[19u].x;
    float _689 = (cbMtdParam._m0[14u].y * _673.y) * cbMtdParam._m0[19u].x;
    float _690 = (cbMtdParam._m0[14u].z * _673.z) * cbMtdParam._m0[19u].x;
    float _700 = exp2(log2(_661) * cbMtdParam._m0[20u].x);
    float _708 = (_700 * (_688 - (_688 * _661))) * cbSceneParam._m0[72u].y;
    float _709 = (_700 * (_689 - (_689 * _661))) * cbSceneParam._m0[72u].y;
    float _710 = (_700 * (_690 - (_690 * _661))) * cbSceneParam._m0[72u].y;
    float _713 = fma(_521, _187, fma(_515, _194, _514 * _180));
    float _716 = fma(_521, _188, fma(_515, _195, _514 * _181));
    float _719 = fma(_521, _189, fma(_515, _196, _514 * _182));
    float _723 = inversesqrt(dot(vec3(_713, _716, _719), vec3(_713, _716, _719)));
    float _979 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _990 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _725 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
    float _1001 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _726 = isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0));
    float _1012 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _727 = isnan(1.0) ? _1012 : (isnan(_1012) ? 1.0 : min(_1012, 1.0));
    uint _729 = uint(roundEven(NORMAL.w));
    vec4 _734 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _736 = _734.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _808 = sqrt(((_250 * _250) + (_251 * _251)) + (_252 * _252));
        float _814 = (cbMatDynParam._m0[5u].x * _808) + cbMatDynParam._m0[5u].y;
        float _1023 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
        float _815 = isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0));
        float _819 = (cbMatDynParam._m0[5u].z * _808) + cbMatDynParam._m0[5u].w;
        float _1034 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1034 : (isnan(_1034) ? 1.0 : min(_1034, 1.0))) - _815)) + _815) < ((_736 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _847;
    uint _761;
    vec4 _765;
    float _772;
    float _773;
    float _774;
    float _775;
    float _776;
    float _777;
    float _780;
    float _784;
    vec4 _788;
    float _790;
    float _791;
    bool _802;
    for (;;)
    {
        _761 = _729 * 13u;
        _765 = cbInstanceData._m0[(_761 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _769 = (cbMtdParam._m0[0u].x * _725) * _765.x;
        float _770 = (cbMtdParam._m0[0u].y * _726) * _765.y;
        float _771 = (cbMtdParam._m0[0u].z * _727) * _765.z;
        float _1045 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
        _772 = isnan(1.0) ? _1045 : (isnan(_1045) ? 1.0 : min(_1045, 1.0));
        float _1056 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
        _773 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
        float _1067 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        _774 = isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0));
        _775 = _708 * _765.x;
        _776 = _709 * _765.y;
        _777 = _710 * _765.z;
        _780 = cbMtdParam._m0[2u].w;
        _784 = cbInstanceData._m0[_761 + 6u].w;
        float _785 = _736 + (-0.5);
        _788 = cbMtdParam._m0[1u];
        _790 = _788.y * _785;
        _791 = _785 * 0.999000012874603271484375;
        _802 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_802)
        {
            if ((cbInstanceData._m0[_761 + 7u].x + _791) < 0.5)
            {
                _847 = true;
                break;
            }
        }
        if ((_765.w < 1.0) && ((_765.w + _791) < 0.5))
        {
            _847 = true;
            break;
        }
        if ((_790 + 1.0) < _788.x)
        {
            _847 = true;
            break;
        }
        _847 = false;
        break;
    }
    if (_847)
    {
        discard_state = true;
    }
    float _880;
    float _881;
    float _882;
    float _883;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _880 = _784;
        _881 = _784;
        _882 = _784;
        _883 = _784;
    }
    else
    {
        _880 = _780;
        _881 = 0.0;
        _882 = float(floatBitsToUint(cbInstanceData._m0[_761 + 5u]).x) * 0.0039215688593685626983642578125;
        _883 = TEXCOORD_4;
    }
    SV_Target.x = ((_713 * 0.5) * _723) + 0.500488758087158203125;
    SV_Target.y = ((_716 * 0.5) * _723) + 0.500488758087158203125;
    SV_Target.z = ((_719 * 0.5) * _723) + 0.500488758087158203125;
    SV_Target.w = _881;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _979 : (isnan(_979) ? 1.0 : min(_979, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _883;
    SV_Target_2.x = _772;
    SV_Target_2.y = _773;
    SV_Target_2.z = _774;
    SV_Target_2.w = _882;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _881;
    SV_Target_4.x = _775 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _776 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _777 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _880;
    discard_exit();
}


