#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[30];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_Interior_Transiton_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1169;
uint _2650;
uint _2651;
uint _2652;
uint _2874;
uint _2875;
uint _2876;
float _3156;
float _3157;
float _3158;
float _3159;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _286 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _276);
    float _287 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _276);
    float _288 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _276);
    vec4 _307 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _345 = cbMtdParam._m0[27u].w + _286;
    float _346 = cbMtdParam._m0[28u].x + _287;
    float _347 = cbMtdParam._m0[28u].y + _288;
    float _361 = (-0.0) - dot(vec3(_345, _346, _347), vec3(_215 * _207, _215 * _208, _215 * _209));
    float _362 = (-0.0) - dot(vec3(_345, _346, _347), vec3(_229 * TANGENT.x, _229 * TANGENT.y, _229 * TANGENT.z));
    float _363 = (-0.0) - dot(vec3(_345, _346, _347), vec3((-0.0) - (_222 * NORMAL.x), (-0.0) - (_222 * NORMAL.y), (-0.0) - (_222 * NORMAL.z)));
    float _367 = inversesqrt(dot(vec3(_361, _362, _363), vec3(_361, _362, _363)));
    float _370 = _367 * _363;
    float _371 = (_367 * _361) + (((_307.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].w);
    float _372 = (_367 * _362) + (((_307.y * 2.0) + (-1.0)) * cbMtdParam._m0[26u].x);
    float _373 = _371 * cbMtdParam._m0[24u].x;
    float _374 = _372 * cbMtdParam._m0[23u].w;
    float _375 = fract(TEXCOORD.x);
    float _376 = fract(TEXCOORD.y);
    float _382;
    if (_373 > 0.0)
    {
        _382 = (1.0 - _375) / _373;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_373 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _375) / _373;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _382 = frontier_phi_3_2_ladder;
    }
    float _390;
    if (_374 > 0.0)
    {
        _390 = (1.0 - _376) / _374;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_374 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _376) / _374;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _390 = frontier_phi_7_6_ladder;
    }
    bool _392 = _370 > 0.0;
    float _394 = _392 ? (cbMtdParam._m0[17u].x / _370) : 5000.0;
    float _395 = isnan(_390) ? _382 : (isnan(_382) ? _390 : min(_382, _390));
    float _396 = isnan(_394) ? _395 : (isnan(_395) ? _394 : min(_395, _394));
    float _400 = cbMtdParam._m0[17u].y * cbMtdParam._m0[17u].x;
    float _401 = _375 + (-0.5);
    float _404 = _376 + (-0.5);
    float _407 = ((_396 * _370) + _400) / _400;
    vec4 _432 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_401 + (_396 * _373)) / _407) + 0.5) + (cbMtdParam._m0[18u].x - cbMtdParam._m0[24u].w * trunc(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w))) / cbMtdParam._m0[24u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_404 + (_396 * _374)) / _407) + 0.5) + floor(cbMtdParam._m0[18u].x / cbMtdParam._m0[24u].w)) / cbMtdParam._m0[25u].x)) + cbTextureTilingScale._m0[7u].w));
    float _442 = cbMtdParam._m0[9u].x * _432.x;
    float _443 = cbMtdParam._m0[9u].y * _432.y;
    float _444 = cbMtdParam._m0[9u].z * _432.z;
    float _462 = _371 * cbMtdParam._m0[26u].z;
    float _463 = _372 * cbMtdParam._m0[26u].y;
    bool _464 = _462 > 0.0;
    float _469;
    if (_464)
    {
        _469 = (1.0 - _375) / _462;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_462 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _375) / _462;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _469 = frontier_phi_11_10_ladder;
    }
    bool _471 = _463 > 0.0;
    float _476;
    if (_471)
    {
        _476 = (1.0 - _376) / _463;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_463 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _376) / _463;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _476 = frontier_phi_15_14_ladder;
    }
    float _479 = _392 ? (cbMtdParam._m0[19u].z / _370) : 5000.0;
    float _480 = isnan(_476) ? _469 : (isnan(_469) ? _476 : min(_469, _476));
    float _481 = isnan(_479) ? _480 : (isnan(_480) ? _479 : min(_480, _479));
    float _485 = cbMtdParam._m0[22u].z * cbMtdParam._m0[19u].z;
    float _489 = ((_481 * _370) + _485) / _485;
    float _494 = cbMtdParam._m0[22u].y - cbMtdParam._m0[23u].y * trunc(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    float _496 = floor(cbMtdParam._m0[22u].y / cbMtdParam._m0[23u].y);
    vec4 _512 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_401 + (_481 * _462)) / _489) + 0.5) + _494) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_404 + (_481 * _463)) / _489) + 0.5) + _496) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[0u].w));
    float _524;
    if (_464)
    {
        _524 = (1.0 - _375) / _462;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_462 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _375) / _462;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _524 = frontier_phi_19_18_ladder;
    }
    float _530;
    if (_471)
    {
        _530 = (1.0 - _376) / _463;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_463 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _376) / _463;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _530 = frontier_phi_23_22_ladder;
    }
    float _532 = isnan(_530) ? _524 : (isnan(_524) ? _530 : min(_524, _530));
    float _533 = isnan(_479) ? _532 : (isnan(_532) ? _479 : min(_532, _479));
    float _540 = ((_533 * _370) + _485) / _485;
    vec4 _560 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_401 + (_533 * _462)) / _540) + 0.5) + _494) / cbMtdParam._m0[23u].y)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_404 + (_533 * _463)) / _540) + 0.5) + _496) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].w));
    float _562 = _560.x;
    float _569 = (_562 * ((_512.x * cbMtdParam._m0[10u].x) - _442)) + _442;
    float _570 = (_562 * ((_512.y * cbMtdParam._m0[10u].y) - _443)) + _443;
    float _571 = (_562 * ((_512.z * cbMtdParam._m0[10u].z) - _444)) + _444;
    float _585 = _371 * cbMtdParam._m0[27u].x;
    float _586 = _372 * cbMtdParam._m0[26u].w;
    bool _587 = _585 > 0.0;
    float _592;
    if (_587)
    {
        _592 = (1.0 - _375) / _585;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _375) / _585;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _592 = frontier_phi_27_26_ladder;
    }
    bool _594 = _586 > 0.0;
    float _599;
    if (_594)
    {
        _599 = (1.0 - _376) / _586;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_586 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _376) / _586;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _599 = frontier_phi_31_30_ladder;
    }
    float _602 = _392 ? (cbMtdParam._m0[23u].x / _370) : 5000.0;
    float _603 = isnan(_599) ? _592 : (isnan(_592) ? _599 : min(_592, _599));
    float _604 = isnan(_602) ? _603 : (isnan(_603) ? _602 : min(_603, _602));
    float _608 = cbMtdParam._m0[23u].x * cbMtdParam._m0[17u].z;
    float _612 = ((_604 * _370) + _608) / _608;
    float _617 = cbMtdParam._m0[22u].w - cbMtdParam._m0[27u].y * trunc(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    float _619 = floor(cbMtdParam._m0[22u].w / cbMtdParam._m0[27u].y);
    vec4 _635 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * (((((_401 + (_604 * _585)) / _612) + 0.5) + _617) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * (((((_404 + (_604 * _586)) / _612) + 0.5) + _619) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[11u].w));
    float _647;
    if (_587)
    {
        _647 = (1.0 - _375) / _585;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _375) / _585;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _647 = frontier_phi_35_34_ladder;
    }
    float _653;
    if (_594)
    {
        _653 = (1.0 - _376) / _586;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_586 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _376) / _586;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _653 = frontier_phi_39_38_ladder;
    }
    float _655 = isnan(_653) ? _647 : (isnan(_647) ? _653 : min(_647, _653));
    float _656 = isnan(_602) ? _655 : (isnan(_655) ? _602 : min(_655, _602));
    float _663 = ((_656 * _370) + _608) / _608;
    vec4 _684 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * (((((_401 + (_656 * _585)) / _663) + 0.5) + _617) / cbMtdParam._m0[27u].y)) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * (((((_404 + (_656 * _586)) / _663) + 0.5) + _619) / cbMtdParam._m0[27u].z)) + cbTextureTilingScale._m0[12u].w));
    float _686 = _684.x;
    float _693 = (_686 * ((_635.x * cbMtdParam._m0[13u].x) - _569)) + _569;
    float _694 = (_686 * ((_635.y * cbMtdParam._m0[13u].y) - _570)) + _570;
    float _695 = (_686 * ((_635.z * cbMtdParam._m0[13u].z) - _571)) + _571;
    float _704 = (cbMtdParam._m0[16u].x * cbMtdParam._m0[19u].y) * _693;
    float _706 = (_694 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].y;
    float _708 = (_695 * cbMtdParam._m0[19u].y) * cbMtdParam._m0[16u].z;
    vec4 _732 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * ((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD.z)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD.w)) + cbTextureTilingScale._m0[4u].w));
    float _737 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[21u].y;
    float _743 = ((_732.y * 0.5) + (-0.25)) * cbMtdParam._m0[21u].x;
    float _745 = (-0.0) - (cbMtdParam._m0[21u].x * ((_732.x * 0.5) + (-0.25)));
    float _746 = fract(_737);
    float _748 = fract(_737 + 0.5);
    vec4 _775 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_746 * _745) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_743 * _746) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _777 = _775.x;
    float _783 = ((texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_14, SS_WrapLinear), vec2((((_748 * _745) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_743 * _748) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _777) * abs((_746 * 2.0) + (-1.0))) + _777;
    float _789 = ((cbMtdParam._m0[17u].w * 0.5) * cbMtdParam._m0[19u].w) / cbMtdParam._m0[18u].z;
    float _793 = fract(abs(_789));
    float _803 = sin(cbMtdParam._m0[21u].z);
    float _804 = cos(cbMtdParam._m0[21u].z);
    float _805 = TEXCOORD.z - cbMtdParam._m0[20u].y;
    float _806 = TEXCOORD.w - cbMtdParam._m0[20u].y;
    float _831 = (texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_16, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (fma(_806, (-0.0) - _803, _804 * _805) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (fma(_806, _804, _805 * _803) + cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[5u].w)).x - ((((_789 >= ((-0.0) - _789)) ? _793 : ((-0.0) - _793)) * cbMtdParam._m0[18u].z) - _783)) + cbMtdParam._m0[18u].w;
    float _832 = ceil(_831);
    float _3218 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _833 = isnan(1.0) ? _3218 : (isnan(_3218) ? 1.0 : min(_3218, 1.0));
    float _853 = ((((cbMtdParam._m0[21u].w * _693) * cbMtdParam._m0[15u].x) - _704) * _833) + _704;
    float _854 = ((((cbMtdParam._m0[21u].w * _694) * cbMtdParam._m0[15u].y) - _706) * _833) + _706;
    float _855 = ((((cbMtdParam._m0[21u].w * _695) * cbMtdParam._m0[15u].z) - _708) * _833) + _708;
    float _859 = abs(cbMtdParam._m0[20u].w * _831);
    float _863 = (((_859 * cbMtdParam._m0[18u].y) - _783) * _859) + _783;
    float _3229 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _864 = isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0));
    vec4 _876 = texture(sampler2D(M_Interior_Transiton_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _891 = (cbMtdParam._m0[14u].x * _876.x) * cbMtdParam._m0[19u].x;
    float _892 = (cbMtdParam._m0[14u].y * _876.y) * cbMtdParam._m0[19u].x;
    float _893 = (cbMtdParam._m0[14u].z * _876.z) * cbMtdParam._m0[19u].x;
    float _900 = exp2(log2(_864) * cbMtdParam._m0[20u].x);
    float _935 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _939 = inversesqrt(dot(vec3(_286, _287, _288), vec3(_286, _287, _288)));
    float _940 = _286 * _939;
    float _941 = _287 * _939;
    float _942 = _288 * _939;
    vec4 _947 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _949 = _947.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1019 = sqrt(((_286 * _286) + (_287 * _287)) + (_288 * _288));
        float _1025 = (cbMatDynParam._m0[5u].x * _1019) + cbMatDynParam._m0[5u].y;
        float _3240 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1026 = isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0));
        float _1030 = (cbMatDynParam._m0[5u].z * _1019) + cbMatDynParam._m0[5u].w;
        float _3251 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0))) - _1026)) + _1026) < ((_949 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _962 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _963 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _972 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_962 * cbSceneParam._m0[86u].x, _963 * cbSceneParam._m0[86u].y));
    float _975 = _972.x * TEXCOORD_4;
    float _976 = (-0.0) - _940;
    float _977 = (-0.0) - _941;
    float _978 = (-0.0) - _942;
    float _1000 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1008 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1168;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1091 = (cbModelParam._m0[37u].x * ((((fma(_1008, cbModelParam._m0[26u].z, fma(_1004, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1000)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1093 = (cbModelParam._m0[37u].y * ((((fma(_1008, cbModelParam._m0[27u].z, fma(_1004, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1000)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1094 = (((((fma(_1008, cbModelParam._m0[28u].z, fma(_1004, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1000)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1097 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1091, _1093, _1094), 0.0);
        vec4 _1104 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1091, _1093, _1094), 0.0);
        vec4 _1111 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1091, _1093, _1094), 0.0);
        vec4 _1118 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1091, _1093, _1094), 0.0);
        float _1131 = exp2((_1097.w + (-0.5)) * 20.0) * 2.0;
        float _1141 = exp2((_1104.w + (-0.5)) * 20.0) * 2.0;
        float _1151 = exp2((_1111.w + (-0.5)) * 20.0) * 2.0;
        float _1161 = exp2((_1118.w + (-0.5)) * 20.0) * 2.0;
        float _1162 = _1161 * (_1118.x + (-0.5));
        float _1163 = _1161 * (_1118.y + (-0.5));
        float _1164 = _1161 * (_1118.z + (-0.5));
        _1168 = _1131 * (_1097.z + (-0.5));
        _1170 = _1131 * (_1097.y + (-0.5));
        _1171 = _1131 * (_1097.x + (-0.5));
        _1172 = _1141 * (_1104.z + (-0.5));
        _1173 = _1141 * (_1104.y + (-0.5));
        _1174 = _1141 * (_1104.x + (-0.5));
        _1175 = _1151 * (_1111.z + (-0.5));
        _1176 = _1151 * (_1111.y + (-0.5));
        _1177 = _1151 * (_1111.x + (-0.5));
        _1178 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        _1179 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        _1180 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    }
    else
    {
        _1168 = _1169;
        _1170 = _1169;
        _1171 = _1169;
        _1172 = _1169;
        _1173 = _1169;
        _1174 = _1169;
        _1175 = _1169;
        _1176 = _1169;
        _1177 = _1169;
        _1178 = _1169;
        _1179 = _1169;
        _1180 = _1169;
    }
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1236 = (cbModelParam._m0[38u].x * ((((fma(_1008, cbModelParam._m0[30u].z, fma(_1004, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1000)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1237 = (cbModelParam._m0[38u].y * ((((fma(_1008, cbModelParam._m0[31u].z, fma(_1004, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1000)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1238 = (((((fma(_1008, cbModelParam._m0[32u].z, fma(_1004, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1000)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1240 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1247 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1254 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1236, _1237, _1238), 0.0);
        float _1273 = exp2((_1240.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = exp2((_1247.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = exp2((_1254.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1304 = _1303 * (_1261.x + (-0.5));
        float _1305 = _1303 * (_1261.y + (-0.5));
        float _1306 = _1303 * (_1261.z + (-0.5));
        _1310 = _1273 * (_1240.z + (-0.5));
        _1311 = _1273 * (_1240.y + (-0.5));
        _1312 = _1273 * (_1240.x + (-0.5));
        _1313 = _1283 * (_1247.z + (-0.5));
        _1314 = _1283 * (_1247.y + (-0.5));
        _1315 = _1283 * (_1247.x + (-0.5));
        _1316 = _1293 * (_1254.z + (-0.5));
        _1317 = _1293 * (_1254.y + (-0.5));
        _1318 = _1293 * (_1254.x + (-0.5));
        _1319 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        _1320 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
        _1321 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
    }
    else
    {
        _1310 = _1169;
        _1311 = _1169;
        _1312 = _1169;
        _1313 = _1169;
        _1314 = _1169;
        _1315 = _1169;
        _1316 = _1169;
        _1317 = _1169;
        _1318 = _1169;
        _1319 = _1169;
        _1320 = _1169;
        _1321 = _1169;
    }
    float _1336 = _940 * (-0.5);
    float _1337 = _941 * (-0.5);
    float _1338 = _942 * (-0.5);
    float _1339 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1312, _1315, _1318, _1321));
    float _1342 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1311, _1314, _1317, _1320));
    float _1345 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1310, _1313, _1316, _1319));
    float _1380;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1352 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1168, _1172, _1175, _1178));
        float _1356 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1170, _1173, _1176, _1179));
        float _1360 = dot(vec4(_1336, _1337, _1338, 1.0), vec4(_1171, _1174, _1177, _1180));
        float _1367 = dot(vec4(cbModelParam._m0[39u]), vec4(_1336, _1337, _1338, 1.0));
        _1380 = dot(vec3(isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0)), isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0)), isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1367) ? 0.0 : (isnan(0.0) ? _1367 : max(0.0, _1367))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1380 = 1.0;
    }
    float _1391;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1382 = dot(vec4(cbModelParam._m0[40u]), vec4(_1336, _1337, _1338, 1.0));
        _1391 = dot(vec3(isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0)), isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0)), isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1382) ? 0.0 : (isnan(0.0) ? _1382 : max(0.0, _1382))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1391 = 1.0;
    }
    float _1395 = (_1391 * cbModelParam._m0[1u].x) + (_1380 * (1.0 - cbModelParam._m0[1u].x));
    float _1401 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1481;
    float _1483;
    float _1485;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1448 = fma(_1008, cbModelParam._m0[13u].z, fma(_1004, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1000)) + cbModelParam._m0[13u].w;
        float _1452 = fma(_1008, cbModelParam._m0[14u].z, fma(_1004, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1000)) + cbModelParam._m0[14u].w;
        float _1456 = fma(_1008, cbModelParam._m0[15u].z, fma(_1004, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1000)) + cbModelParam._m0[15u].w;
        float _1459 = fma(_978, cbModelParam._m0[13u].z, fma(_977, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _976));
        float _1462 = fma(_978, cbModelParam._m0[14u].z, fma(_977, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _976));
        float _1465 = fma(_978, cbModelParam._m0[15u].z, fma(_977, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _976));
        float _1491;
        if (_1459 > 0.0)
        {
            _1491 = abs((1.0 - _1448) / _1459);
        }
        else
        {
            float frontier_phi_57_55_ladder;
            if (_1459 < 0.0)
            {
                frontier_phi_57_55_ladder = abs((_1448 + 1.0) / _1459);
            }
            else
            {
                frontier_phi_57_55_ladder = 5000.0;
            }
            _1491 = frontier_phi_57_55_ladder;
        }
        float _1678;
        if (_1462 > 0.0)
        {
            _1678 = abs((1.0 - _1452) / _1462);
        }
        else
        {
            float frontier_phi_66_62_ladder;
            if (_1462 < 0.0)
            {
                frontier_phi_66_62_ladder = abs((_1452 + 1.0) / _1462);
            }
            else
            {
                frontier_phi_66_62_ladder = 5000.0;
            }
            _1678 = frontier_phi_66_62_ladder;
        }
        float _2032;
        if (_1465 > 0.0)
        {
            _2032 = abs((1.0 - _1456) / _1465);
        }
        else
        {
            float frontier_phi_78_73_ladder;
            if (_1465 < 0.0)
            {
                frontier_phi_78_73_ladder = abs((_1456 + 1.0) / _1465);
            }
            else
            {
                frontier_phi_78_73_ladder = 5000.0;
            }
            _2032 = frontier_phi_78_73_ladder;
        }
        float _2034 = isnan(_1678) ? _1491 : (isnan(_1491) ? _1678 : min(_1491, _1678));
        float _2035 = isnan(_2032) ? _2034 : (isnan(_2034) ? _2032 : min(_2034, _2032));
        float _2039 = (_2035 * _1459) + _1448;
        float _2040 = (_2035 * _1462) + _1452;
        float _2041 = (_2035 * _1465) + _1456;
        float _2042 = _2035 * 9.9999997473787516355514526367188e-05;
        float _2044 = (-1.0) - _2042;
        float _2046 = _2042 + 1.0;
        float frontier_phi_56_78_ladder;
        float frontier_phi_56_78_ladder_1;
        float frontier_phi_56_78_ladder_2;
        if ((_2041 > _2046) || ((_2041 < _2044) || ((_2040 > _2046) || ((_2040 < _2044) || ((_2039 < _2044) || (_2039 > _2046))))))
        {
            frontier_phi_56_78_ladder = 0.0;
            frontier_phi_56_78_ladder_1 = 0.0;
            frontier_phi_56_78_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2284 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2041, cbModelParam._m0[9u].z, fma(_2040, cbModelParam._m0[9u].y, _2039 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2041, cbModelParam._m0[10u].z, fma(_2040, cbModelParam._m0[10u].y, _2039 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2041, cbModelParam._m0[11u].z, fma(_2040, cbModelParam._m0[11u].y, _2039 * cbModelParam._m0[11u].x))), _1401);
            frontier_phi_56_78_ladder = _2284.z * cbModelParam._m0[1u].y;
            frontier_phi_56_78_ladder_1 = _2284.y * cbModelParam._m0[1u].y;
            frontier_phi_56_78_ladder_2 = _2284.x * cbModelParam._m0[1u].y;
        }
        _1481 = frontier_phi_56_78_ladder_2;
        _1483 = frontier_phi_56_78_ladder_1;
        _1485 = frontier_phi_56_78_ladder;
    }
    else
    {
        vec4 _1469 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_976, _977, _978), _1401);
        _1481 = _1469.x * cbModelParam._m0[1u].y;
        _1483 = _1469.y * cbModelParam._m0[1u].y;
        _1485 = _1469.z * cbModelParam._m0[1u].y;
    }
    float _1488 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1576;
    float _1578;
    float _1580;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1540 = fma(_1008, cbModelParam._m0[21u].z, fma(_1004, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1000)) + cbModelParam._m0[21u].w;
        float _1544 = fma(_1008, cbModelParam._m0[22u].z, fma(_1004, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1000)) + cbModelParam._m0[22u].w;
        float _1548 = fma(_1008, cbModelParam._m0[23u].z, fma(_1004, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1000)) + cbModelParam._m0[23u].w;
        float _1551 = fma(_978, cbModelParam._m0[21u].z, fma(_977, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _976));
        float _1554 = fma(_978, cbModelParam._m0[22u].z, fma(_977, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _976));
        float _1557 = fma(_978, cbModelParam._m0[23u].z, fma(_977, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _976));
        float _1683;
        if (_1551 > 0.0)
        {
            _1683 = abs((1.0 - _1540) / _1551);
        }
        else
        {
            float frontier_phi_68_64_ladder;
            if (_1551 < 0.0)
            {
                frontier_phi_68_64_ladder = abs((_1540 + 1.0) / _1551);
            }
            else
            {
                frontier_phi_68_64_ladder = 5000.0;
            }
            _1683 = frontier_phi_68_64_ladder;
        }
        float _2059;
        if (_1554 > 0.0)
        {
            _2059 = abs((1.0 - _1544) / _1554);
        }
        else
        {
            float frontier_phi_80_75_ladder;
            if (_1554 < 0.0)
            {
                frontier_phi_80_75_ladder = abs((_1544 + 1.0) / _1554);
            }
            else
            {
                frontier_phi_80_75_ladder = 5000.0;
            }
            _2059 = frontier_phi_80_75_ladder;
        }
        float _2417;
        if (_1557 > 0.0)
        {
            _2417 = abs((1.0 - _1548) / _1557);
        }
        else
        {
            float frontier_phi_92_87_ladder;
            if (_1557 < 0.0)
            {
                frontier_phi_92_87_ladder = abs((_1548 + 1.0) / _1557);
            }
            else
            {
                frontier_phi_92_87_ladder = 5000.0;
            }
            _2417 = frontier_phi_92_87_ladder;
        }
        float _2419 = isnan(_2059) ? _1683 : (isnan(_1683) ? _2059 : min(_1683, _2059));
        float _2420 = isnan(_2417) ? _2419 : (isnan(_2419) ? _2417 : min(_2419, _2417));
        float _2424 = (_2420 * _1551) + _1540;
        float _2425 = (_2420 * _1554) + _1544;
        float _2426 = (_2420 * _1557) + _1548;
        float _2427 = _2420 * 9.9999997473787516355514526367188e-05;
        float _2428 = (-1.0) - _2427;
        float _2430 = _2427 + 1.0;
        float frontier_phi_65_92_ladder;
        float frontier_phi_65_92_ladder_1;
        float frontier_phi_65_92_ladder_2;
        if ((_2426 > _2430) || ((_2426 < _2428) || ((_2425 > _2430) || ((_2425 < _2428) || ((_2424 < _2428) || (_2424 > _2430))))))
        {
            frontier_phi_65_92_ladder = 0.0;
            frontier_phi_65_92_ladder_1 = 0.0;
            frontier_phi_65_92_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2548 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2426, cbModelParam._m0[17u].z, fma(_2425, cbModelParam._m0[17u].y, _2424 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2426, cbModelParam._m0[18u].z, fma(_2425, cbModelParam._m0[18u].y, _2424 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2426, cbModelParam._m0[19u].z, fma(_2425, cbModelParam._m0[19u].y, _2424 * cbModelParam._m0[19u].x))), _1488);
            frontier_phi_65_92_ladder = _2548.y * cbModelParam._m0[1u].z;
            frontier_phi_65_92_ladder_1 = _2548.z * cbModelParam._m0[1u].z;
            frontier_phi_65_92_ladder_2 = _2548.x * cbModelParam._m0[1u].z;
        }
        _1576 = frontier_phi_65_92_ladder_2;
        _1578 = frontier_phi_65_92_ladder;
        _1580 = frontier_phi_65_92_ladder_1;
    }
    else
    {
        vec4 _1560 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_976, _977, _978), _1488);
        _1576 = _1560.x * cbModelParam._m0[1u].z;
        _1578 = _1560.y * cbModelParam._m0[1u].z;
        _1580 = _1560.z * cbModelParam._m0[1u].z;
    }
    float _1592 = _975 * 0.01200000010430812835693359375;
    float _1594 = _1592 * ((cbModelParam._m0[1u].w * (_1576 - _1481)) + _1481);
    float _1595 = _1592 * ((cbModelParam._m0[1u].w * (_1578 - _1483)) + _1483);
    float _1596 = _1592 * ((cbModelParam._m0[1u].w * (_1580 - _1485)) + _1485);
    float _1617 = fma(_1596, cbSceneParam._m0[89u].z, fma(_1595, cbSceneParam._m0[89u].y, _1594 * cbSceneParam._m0[89u].x));
    float _1620 = fma(_1596, cbSceneParam._m0[90u].z, fma(_1595, cbSceneParam._m0[90u].y, _1594 * cbSceneParam._m0[90u].x));
    float _1623 = fma(_1596, cbSceneParam._m0[91u].z, fma(_1595, cbSceneParam._m0[91u].y, _1594 * cbSceneParam._m0[91u].x));
    float _1657 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1661 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1665 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1669 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1670 = _1657 / _1669;
    float _1671 = _1661 / _1669;
    float _1672 = _1665 / _1669;
    float _1820;
    float _1821;
    float _1822;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1699 = ((uint(_1672 > cbSceneParam._m0[59u].y) + uint(_1672 > cbSceneParam._m0[59u].x)) + uint(_1672 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1700 = _1699 + 43u;
        uint _1708 = _1699 + 44u;
        uint _1716 = _1699 + 45u;
        uint _1724 = _1699 + 46u;
        float _1735 = fma(_1669, cbSceneParam._m0[_1700].w, fma(_1665, cbSceneParam._m0[_1700].z, fma(_1661, cbSceneParam._m0[_1700].y, _1657 * cbSceneParam._m0[_1700].x)));
        float _1739 = fma(_1669, cbSceneParam._m0[_1708].w, fma(_1665, cbSceneParam._m0[_1708].z, fma(_1661, cbSceneParam._m0[_1708].y, _1657 * cbSceneParam._m0[_1708].x)));
        float _1747 = fma(_1669, cbSceneParam._m0[_1724].w, fma(_1665, cbSceneParam._m0[_1724].z, fma(_1661, cbSceneParam._m0[_1724].y, _1657 * cbSceneParam._m0[_1724].x)));
        float _1752 = cbSceneParam._m0[33u].z * _1747;
        float _1754 = cbSceneParam._m0[33u].w * _1747;
        float _1757 = fma(_1669, cbSceneParam._m0[_1716].w, fma(_1665, cbSceneParam._m0[_1716].z, fma(_1661, cbSceneParam._m0[_1716].y, _1657 * cbSceneParam._m0[_1716].x))) / _1747;
        float _1805 = (cbSceneParam._m0[33u].x - sqrt(((_1671 * _1671) + (_1670 * _1670)) + (_1672 * _1672))) * cbSceneParam._m0[33u].y;
        float _3377 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1813 = (isnan(1.0) ? _3377 : (isnan(_3377) ? 1.0 : min(_3377, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1752 + _1735) / _1747, (_1754 + _1739) / _1747), _1757), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1754 + _1735) / _1747, (_1739 - _1752) / _1747), _1757), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1735 - _1752) / _1747, (_1739 - _1754) / _1747), _1757), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1735 - _1754) / _1747, (_1752 + _1739) / _1747), _1757), 0.0)).x), vec4(0.25)));
        _1820 = 1.0 - (_1813 * cbSceneParam._m0[34u].x);
        _1821 = 1.0 - (_1813 * cbSceneParam._m0[34u].y);
        _1822 = 1.0 - (_1813 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1820 = 1.0;
        _1821 = 1.0;
        _1822 = 1.0;
    }
    float _1886;
    float _1888;
    float _1890;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1874 = fma(_1669, cbSceneParam._m0[63u].w, fma(_1665, cbSceneParam._m0[63u].z, fma(_1661, cbSceneParam._m0[63u].y, _1657 * cbSceneParam._m0[63u].x)));
        float _1875 = fma(_1669, cbSceneParam._m0[60u].w, fma(_1665, cbSceneParam._m0[60u].z, fma(_1661, cbSceneParam._m0[60u].y, _1657 * cbSceneParam._m0[60u].x))) / _1874;
        float _1876 = fma(_1669, cbSceneParam._m0[61u].w, fma(_1665, cbSceneParam._m0[61u].z, fma(_1661, cbSceneParam._m0[61u].y, _1657 * cbSceneParam._m0[61u].x))) / _1874;
        float frontier_phi_77_76_ladder;
        float frontier_phi_77_76_ladder_1;
        float frontier_phi_77_76_ladder_2;
        if ((((_1875 >= cbSceneParam._m0[64u].x) && (_1876 >= cbSceneParam._m0[64u].y)) && (_1875 <= cbSceneParam._m0[64u].z)) && (_1876 <= cbSceneParam._m0[64u].w))
        {
            float _2072 = fma(_1669, cbSceneParam._m0[62u].w, fma(_1665, cbSceneParam._m0[62u].z, fma(_1661, cbSceneParam._m0[62u].y, _1657 * cbSceneParam._m0[62u].x))) / _1874;
            float _2076 = isnan(cbSceneParam._m0[41u].w) ? _2072 : (isnan(_2072) ? cbSceneParam._m0[41u].w : max(_2072, cbSceneParam._m0[41u].w));
            float _2119 = (cbSceneParam._m0[33u].x - sqrt(((_1671 * _1671) + (_1670 * _1670)) + (_1672 * _1672))) * cbSceneParam._m0[33u].y;
            float _3393 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
            float _2126 = (isnan(1.0) ? _3393 : (isnan(_3393) ? 1.0 : min(_3393, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1875, cbSceneParam._m0[33u].w + _1876), _2076), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1875, _1876 - cbSceneParam._m0[33u].z), _2076), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1875 - cbSceneParam._m0[33u].z, _1876 - cbSceneParam._m0[33u].w), _2076), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1875 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1876), _2076), 0.0)).x), vec4(0.25)));
            float _2130 = 1.0 - (_2126 * cbSceneParam._m0[34u].x);
            float _2131 = 1.0 - (_2126 * cbSceneParam._m0[34u].y);
            float _2132 = 1.0 - (_2126 * cbSceneParam._m0[34u].z);
            frontier_phi_77_76_ladder = isnan(_2132) ? _1822 : (isnan(_1822) ? _2132 : min(_1822, _2132));
            frontier_phi_77_76_ladder_1 = isnan(_2131) ? _1821 : (isnan(_1821) ? _2131 : min(_1821, _2131));
            frontier_phi_77_76_ladder_2 = isnan(_2130) ? _1820 : (isnan(_1820) ? _2130 : min(_1820, _2130));
        }
        else
        {
            frontier_phi_77_76_ladder = _1822;
            frontier_phi_77_76_ladder_1 = _1821;
            frontier_phi_77_76_ladder_2 = _1820;
        }
        _1886 = frontier_phi_77_76_ladder_2;
        _1888 = frontier_phi_77_76_ladder_1;
        _1890 = frontier_phi_77_76_ladder;
    }
    else
    {
        _1886 = _1820;
        _1888 = _1821;
        _1890 = _1822;
    }
    uint _1892 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1896 = floatBitsToUint(cbInstanceData._m0[_1892 + 5u]);
    uint _1898 = _1896.x * 14u;
    uint _1899 = _1898 + 13u;
    float _1904 = _975 + (-1.0);
    float _1907 = (cbLight._m0[_1899].x * _1904) + 1.0;
    float _1908 = (cbLight._m0[_1899].y * _1904) + 1.0;
    uint _1909 = _1898 + 8u;
    float _1920 = cbLight._m0[_1898].x + _940;
    float _1921 = cbLight._m0[_1898].y + _941;
    float _1922 = cbLight._m0[_1898].z + _942;
    float _1926 = inversesqrt(dot(vec3(_1920, _1921, _1922), vec3(_1920, _1921, _1922)));
    float _1930 = dot(vec3(0.0), vec3(cbLight._m0[_1898].xyz));
    float _3419 = isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0));
    float _1933 = isnan(1.0) ? _3419 : (isnan(_3419) ? 1.0 : min(_3419, 1.0));
    float _1934 = dot(vec3(0.0), vec3(_940, _941, _942));
    float _3430 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0));
    float _1937 = isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0));
    float _1938 = dot(vec3(cbLight._m0[_1898].xyz), vec3(_1920 * _1926, _1921 * _1926, _1922 * _1926));
    float _3441 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
    float _1949 = (exp2(log2(1.0 - (isnan(1.0) ? _3441 : (isnan(_3441) ? 1.0 : min(_3441, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1955 = (0.5 / ((_1933 + 9.9999999392252902907785028219223e-09) + _1937)) * _1933;
    float _3452 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
    float _1957 = (isnan(1.0) ? _3452 : (isnan(_3452) ? 1.0 : min(_3452, 1.0))) * 0.31831014156341552734375;
    float _1959 = isnan(1.0) ? _1907 : (isnan(_1907) ? 1.0 : min(_1907, 1.0));
    uint _1972 = _1898 + 9u;
    uint _1978 = _1898 | 1u;
    float _1984 = cbLight._m0[_1978].x + _940;
    float _1985 = cbLight._m0[_1978].y + _941;
    float _1986 = cbLight._m0[_1978].z + _942;
    float _1990 = inversesqrt(dot(vec3(_1984, _1985, _1986), vec3(_1984, _1985, _1986)));
    float _1994 = dot(vec3(0.0), vec3(cbLight._m0[_1978].xyz));
    float _3468 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
    float _1997 = isnan(1.0) ? _3468 : (isnan(_3468) ? 1.0 : min(_3468, 1.0));
    float _1998 = dot(vec3(cbLight._m0[_1978].xyz), vec3(_1984 * _1990, _1985 * _1990, _1986 * _1990));
    float _3479 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    float _2007 = (exp2(log2(1.0 - (isnan(1.0) ? _3479 : (isnan(_3479) ? 1.0 : min(_3479, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2011 = (0.5 / ((_1997 + 9.9999999392252902907785028219223e-09) + _1937)) * _1997;
    float _3490 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
    float _2013 = (isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0))) * 0.31831014156341552734375;
    float _2014 = isnan(1.0) ? _1908 : (isnan(_1908) ? 1.0 : min(_1908, 1.0));
    float _2024 = (((_2007 * cbLight._m0[_1972].x) * _2013) * _2014) + ((((cbLight._m0[_1909].x * _1886) * _1949) * _1957) * _1959);
    float _2025 = (((_2007 * cbLight._m0[_1972].y) * _2013) * _2014) + ((((cbLight._m0[_1909].y * _1888) * _1949) * _1957) * _1959);
    float _2026 = (((_2007 * cbLight._m0[_1972].z) * _2013) * _2014) + ((((cbLight._m0[_1909].z * _1890) * _1949) * _1957) * _1959);
    float _2189;
    float _2191;
    float _2193;
    if (_1896.y == 0u)
    {
        uvec4 _2144 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2145 = _2144.x;
        uint _2156 = uint((float(_2144.y) * floor(float(uint(cbSceneParam._m0[85u].y * _963) / _2145))) + floor(float(uint(cbSceneParam._m0[85u].x * _962) / _2145)));
        float _2166 = (log2(_1672 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2167 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
        uint _2170 = uint(isnan(14.0) ? _2167 : (isnan(_2167) ? 14.0 : min(_2167, 14.0)));
        uvec4 _2175 = texelFetch(g_lightClusterGridBuffer, int(((_2170 << 2u) + (_2156 << 6u)) >> 2u));
        uint _2176 = _2175.x;
        uint _2177 = _2144.z;
        float _2293;
        float _2295;
        float _2297;
        if (((((1u << ((_2177 >> 4u) & 15u)) + 4294967295u) & _2176) == 0u) || ((_2177 & 240u) == 0u))
        {
            _2293 = 0.0;
            _2295 = 0.0;
            _2297 = 0.0;
        }
        else
        {
            float _2294;
            float _2296;
            float _2298;
            float _2463 = 0.0;
            float _2464 = 0.0;
            float _2465 = 0.0;
            uint _2466 = 0u;
            uint _2475;
            bool _2476;
            for (;;)
            {
                _2475 = texelFetch(g_lightClassification, int((((_2170 << 5u) + (_2156 << 9u)) + (_2466 << 2u)) >> 2u)).x;
                _2476 = _2475 == 0u;
                float frontier_phi_103_pred;
                float frontier_phi_103_pred_1;
                float frontier_phi_103_pred_2;
                if (_2476)
                {
                    frontier_phi_103_pred = _2465;
                    frontier_phi_103_pred_1 = _2464;
                    frontier_phi_103_pred_2 = _2463;
                }
                else
                {
                    float _2620;
                    float _2621;
                    float _2622;
                    uint _2623;
                    _2620 = _2463;
                    _2621 = _2464;
                    _2622 = _2465;
                    _2623 = _2475;
                    float _2553;
                    float _2554;
                    float _2555;
                    for (;;)
                    {
                        uint _2627 = uint(findLSB(_2623)) + (_2466 << 5u);
                        uint _2624 = (_2623 + 4294967295u) & _2623;
                        uint _2629 = _2627 * 48u;
                        vec4 _2643 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2629)).x, texelFetch(g_PointLightRenderingBuffer, int(_2629 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2629 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2629 + 3u)).x));
                        uint _2660 = (_2627 * 48u) + 8u;
                        vec3 _2671 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2660)).x, texelFetch(g_PointLightRenderingBuffer, int(_2660 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2660 + 2u)).x));
                        float _2675 = _2643.x - _1670;
                        float _2676 = _2643.y - _1671;
                        float _2677 = _2643.z - _1672;
                        float _2678 = dot(vec3(_2675, _2676, _2677), vec3(_2675, _2676, _2677));
                        float _2681 = inversesqrt(_2678);
                        float _2690 = 1.0 - (_2678 * _2643.w);
                        float _3516 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
                        float _2692 = sqrt(_2678) * uintBitsToFloat(uvec4(_2650, _2651, _2652, texelFetch(g_PointLightRenderingBuffer, int(((_2627 * 48u) + 4u) + 3u)).x)).w;
                        float _2695 = 1.39999997615814208984375 / (_2692 + 1.39999997615814208984375);
                        float _2696 = _2695 * _2695;
                        float _2699 = ((1.0 - _2696) * dot(vec3(0.0), vec3(_2681 * _2675, _2681 * _2676, _2681 * _2677))) + _2696;
                        float _2701 = (-0.0) - _1670;
                        float _2702 = (-0.0) - _1671;
                        float _2703 = (-0.0) - _1672;
                        float _2707 = inversesqrt(dot(vec3(_2701, _2702, _2703), vec3(_2701, _2702, _2703)));
                        float _2711 = dot(vec3(0.0), vec3(_2707 * _2701, _2707 * _2702, _2707 * _2703));
                        float _3527 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
                        float _3538 = isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : max(_2699, 0.0));
                        float _2715 = isnan(1.0) ? _3538 : (isnan(_3538) ? 1.0 : min(_3538, 1.0));
                        float _2719 = (0.5 / (((isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0))) + 9.9999999392252902907785028219223e-09) + _2715)) * _2715;
                        float _3549 = isnan(0.0) ? _2719 : (isnan(_2719) ? 0.0 : max(_2719, 0.0));
                        float _2728 = (((isnan(1.0) ? _3549 : (isnan(_3549) ? 1.0 : min(_3549, 1.0))) * 3.1415927410125732421875) / (((_2692 * _2692) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0)));
                        _2553 = (_2728 * _2671.x) + _2620;
                        _2554 = (_2728 * _2671.y) + _2621;
                        _2555 = (_2728 * _2671.z) + _2622;
                        if (_2624 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2620 = _2553;
                            _2621 = _2554;
                            _2622 = _2555;
                            _2623 = _2624;
                        }
                    }
                    frontier_phi_103_pred = _2555;
                    frontier_phi_103_pred_1 = _2554;
                    frontier_phi_103_pred_2 = _2553;
                }
                _2298 = frontier_phi_103_pred;
                _2296 = frontier_phi_103_pred_1;
                _2294 = frontier_phi_103_pred_2;
                uint _2467 = _2466 + 1u;
                if (_2467 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2463 = _2294;
                    _2464 = _2296;
                    _2465 = _2298;
                    _2466 = _2467;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2293 = _2294;
            _2295 = _2296;
            _2297 = _2298;
        }
        uvec4 _2301 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2302 = _2301.z;
        uint _2304 = (_2302 >> 8u) & 15u;
        float _2443;
        float _2445;
        float _2447;
        if (((4294967295u << _2304) & _2176) == 0u)
        {
            _2443 = _2293;
            _2445 = _2295;
            _2447 = _2297;
        }
        else
        {
            float _2459 = inversesqrt(dot(vec3(_1670, _1671, _1672), vec3(_1670, _1671, _1672)));
            float frontier_phi_94_95_ladder;
            float frontier_phi_94_95_ladder_1;
            float frontier_phi_94_95_ladder_2;
            if (_2304 < ((_2302 >> 12u) & 15u))
            {
                float _2444;
                float _2446;
                float _2448;
                float _2606 = _2293;
                float _2607 = _2295;
                float _2608 = _2297;
                uint _2609 = _2304;
                uint _2618;
                bool _2619;
                for (;;)
                {
                    _2618 = texelFetch(g_lightClassification, int((((_2170 << 5u) + (_2156 << 9u)) + (_2609 << 2u)) >> 2u)).x;
                    _2619 = _2618 == 0u;
                    float frontier_phi_114_pred;
                    float frontier_phi_114_pred_1;
                    float frontier_phi_114_pred_2;
                    if (_2619)
                    {
                        frontier_phi_114_pred = _2608;
                        frontier_phi_114_pred_1 = _2607;
                        frontier_phi_114_pred_2 = _2606;
                    }
                    else
                    {
                        float _2742;
                        float _2743;
                        float _2744;
                        float _2963;
                        float _2964;
                        float _2965;
                        float _2752 = _2606;
                        float _2753 = _2607;
                        float _2754 = _2608;
                        uint _2755 = _2618;
                        uint _2756;
                        uint _2766;
                        vec4 _2781;
                        float _2782;
                        vec3 _2794;
                        vec4 _2809;
                        vec4 _2824;
                        float _2870;
                        bool _2871;
                        for (;;)
                        {
                            _2766 = ((_2609 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2755));
                            _2756 = (_2755 + 4294967295u) & _2755;
                            uint _2768 = _2766 * 40u;
                            _2781 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2768)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2768 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2768 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2768 + 3u)).x));
                            _2782 = _2781.w;
                            uint _2784 = (_2766 * 40u) + 8u;
                            _2794 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2784)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2784 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2784 + 2u)).x));
                            uint _2796 = (_2766 * 40u) + 16u;
                            _2809 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2796)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2796 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2796 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2796 + 3u)).x));
                            uint _2811 = (_2766 * 40u) + 20u;
                            _2824 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2811)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2811 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2811 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2811 + 3u)).x));
                            uint _2826 = (_2766 * 40u) + 24u;
                            vec4 _2839 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2826)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2826 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2826 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2826 + 3u)).x));
                            uint _2845 = (_2766 * 40u) + 28u;
                            vec4 _2858 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 3u)).x));
                            _2870 = fma(_1672, _2858.z, fma(_1671, _2858.y, _2858.x * _1670)) + _2858.w;
                            _2871 = !((fma(_1672, _2839.z, fma(_1671, _2839.y, _2839.x * _1670)) + _2839.w) <= 0.0);
                            float frontier_phi_120_pred;
                            float frontier_phi_120_pred_1;
                            float frontier_phi_120_pred_2;
                            if (_2871)
                            {
                                float _2905 = _2781.x - _1670;
                                float _2906 = _2781.y - _1671;
                                float _2907 = _2781.z - _1672;
                                float _2908 = dot(vec3(_2905, _2906, _2907), vec3(_2905, _2906, _2907));
                                float _2911 = inversesqrt(_2908);
                                float _2918 = 1.0 - (_2908 / (_2782 * _2782));
                                float _3560 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
                                float _2920 = sqrt(_2908) * uintBitsToFloat(uvec4(_2874, _2875, _2876, texelFetch(g_SpotLightRenderingBuffer, int(((_2766 * 40u) + 4u) + 3u)).x)).w;
                                float _2922 = 1.39999997615814208984375 / (_2920 + 1.39999997615814208984375);
                                float _2923 = _2922 * _2922;
                                float _2926 = (fma(_1672, _2809.z, fma(_1671, _2809.y, _2809.x * _1670)) + _2809.w) / _2870;
                                float _2927 = (fma(_1672, _2824.z, fma(_1671, _2824.y, _2824.x * _1670)) + _2824.w) / _2870;
                                float _2931 = 1.0 - dot(vec2(_2926, _2927), vec2(_2926, _2927));
                                float _3571 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0));
                                float _2939 = dot(vec3(0.0), vec3((-0.0) - (_1670 * _2459), (-0.0) - (_1671 * _2459), (-0.0) - (_1672 * _2459)));
                                float _3582 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
                                float _2947 = ((1.0 - _2923) * dot(vec3(0.0), vec3(_2911 * _2905, _2911 * _2906, _2911 * _2907))) + _2923;
                                float _3593 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0));
                                float _2948 = isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0));
                                float _2952 = (0.5 / (((isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0))) + 9.9999999392252902907785028219223e-09) + _2948)) * _2948;
                                float _3604 = isnan(0.0) ? _2952 : (isnan(_2952) ? 0.0 : max(_2952, 0.0));
                                float _2959 = ((isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0))) * (isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0)))) * (((isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0))) * 3.1415927410125732421875) / (((_2920 * _2920) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_120_pred = _2959 * _2794.z;
                                frontier_phi_120_pred_1 = _2959 * _2794.y;
                                frontier_phi_120_pred_2 = _2959 * _2794.x;
                            }
                            else
                            {
                                frontier_phi_120_pred = 0.0;
                                frontier_phi_120_pred_1 = 0.0;
                                frontier_phi_120_pred_2 = 0.0;
                            }
                            _2965 = frontier_phi_120_pred;
                            _2964 = frontier_phi_120_pred_1;
                            _2963 = frontier_phi_120_pred_2;
                            _2742 = _2963 + _2752;
                            _2743 = _2964 + _2753;
                            _2744 = _2965 + _2754;
                            if (_2756 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2752 = _2742;
                                _2753 = _2743;
                                _2754 = _2744;
                                _2755 = _2756;
                                continue;
                            }
                        }
                        frontier_phi_114_pred = _2744;
                        frontier_phi_114_pred_1 = _2743;
                        frontier_phi_114_pred_2 = _2742;
                    }
                    _2448 = frontier_phi_114_pred;
                    _2446 = frontier_phi_114_pred_1;
                    _2444 = frontier_phi_114_pred_2;
                    uint _2610 = _2609 + 1u;
                    if (_2610 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2606 = _2444;
                        _2607 = _2446;
                        _2608 = _2448;
                        _2609 = _2610;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_94_95_ladder = _2446;
                frontier_phi_94_95_ladder_1 = _2448;
                frontier_phi_94_95_ladder_2 = _2444;
            }
            else
            {
                frontier_phi_94_95_ladder = _2295;
                frontier_phi_94_95_ladder_1 = _2297;
                frontier_phi_94_95_ladder_2 = _2293;
            }
            _2443 = frontier_phi_94_95_ladder_2;
            _2445 = frontier_phi_94_95_ladder;
            _2447 = frontier_phi_94_95_ladder_1;
        }
        float _2452 = isnan(1.0) ? _975 : (isnan(_975) ? 1.0 : min(_975, 1.0));
        _2189 = ((_2443 * 0.039999999105930328369140625) * _2452) + _2024;
        _2191 = ((_2445 * 0.039999999105930328369140625) * _2452) + _2025;
        _2193 = ((_2447 * 0.039999999105930328369140625) * _2452) + _2026;
    }
    else
    {
        _2189 = _2024;
        _2191 = _2025;
        _2193 = _2026;
    }
    uint _2199 = _1892 + 9u;
    uint _2200 = _2199 + uint(cbMatDynParam._m0[0u].w);
    float _2206 = (cbSceneParam._m0[72u].y * ((_900 * ((_891 - _853) - (_891 * _864))) + _853)) * cbInstanceData._m0[_2200].x;
    float _2207 = (cbSceneParam._m0[72u].y * ((_900 * ((_892 - _854) - (_892 * _864))) + _854)) * cbInstanceData._m0[_2200].y;
    float _2208 = (((_900 * ((_893 - _855) - (_893 * _864))) + _855) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_2200].z;
    float _2215 = _2206 + ((_2189 + ((isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))) * _1395)) * cbPerFrame._m0[3u].x);
    float _2216 = _2207 + ((_2191 + ((isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))) * _1395)) * cbPerFrame._m0[3u].x);
    float _2217 = _2208 + ((_2193 + ((isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0))) * _1395)) * cbPerFrame._m0[3u].x);
    float _2218 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
    float _2219 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
    float _2220 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
    float _2226 = cbMtdParam._m0[2u].x * _2206;
    float _2227 = cbMtdParam._m0[2u].y * _2207;
    float _2228 = cbMtdParam._m0[2u].z * _2208;
    float _3635 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2230 = isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0));
    uint _2231 = _1892 + 6u;
    float _2239 = _962 / cbSceneParam._m0[86u].x;
    float _2240 = _963 / cbSceneParam._m0[86u].y;
    vec4 _2254 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2239, _2240, (log2((isnan(cbSceneParam._m0[77u].w) ? _935 : (isnan(_935) ? cbSceneParam._m0[77u].w : min(_935, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2256 = _2254.x;
    float _2257 = _2254.y;
    float _2258 = _2254.z;
    float _2259 = _2254.w;
    float _2349;
    float _2351;
    float _2353;
    float _2355;
    if (_935 > cbSceneParam._m0[78u].w)
    {
        float _2312 = isnan(_935) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _935 : min(cbSceneParam._m0[80u].w, _935));
        float _2313 = _2312 / _935;
        float _2324 = _2313 * _286;
        float _2325 = _287 * _2313;
        float _2326 = (-0.0) - _2325;
        float _2327 = _2313 * _288;
        float _2329 = (cbSceneParam._m0[77u].w * _2326) / _2312;
        float _2330 = _2329 + cbSceneParam._m0[79u].w;
        float _2331 = cbSceneParam._m0[79u].w - _2325;
        float _2337 = sqrt(((_2324 * _2324) + (_2325 * _2325)) + (_2327 * _2327));
        float _2340 = (1.0 - (cbSceneParam._m0[77u].w / _2312)) * _2337;
        float _2345 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2347 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2563;
        if (abs((_2326 - _2329) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2563 = ((((_2330 > 0.0) ? exp2(_2345 * _2330) : (2.0 - exp2(_2347 * _2330))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2340;
        }
        else
        {
            float _2489 = 1.0 / cbSceneParam._m0[80u].x;
            float _2490 = isnan(_2331) ? _2330 : (isnan(_2330) ? _2331 : max(_2330, _2331));
            float _2491 = isnan(_2331) ? _2330 : (isnan(_2330) ? _2331 : min(_2330, _2331));
            float _2500 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : min(_2490, 0.0));
            float _2501 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : min(_2491, 0.0));
            _2563 = ((abs(_2337 / _2326) * cbSceneParam._m0[80u].y) * ((((_2500 - _2501) * 2.0) - ((exp2(_2345 * (isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0)))) - exp2(_2345 * (isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0))))) * _2489)) - ((exp2(_2347 * _2500) - exp2(_2347 * _2501)) * _2489))) + (_2340 * cbSceneParam._m0[80u].z);
        }
        vec4 _2565 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2239, _2240, 1.0), 0.0);
        float _2574 = exp2((_2563 * (-1.44269502162933349609375)) * (1.0 - _2565.w));
        float _2575 = log2(_2574);
        float _2591 = log2(_2259);
        _2349 = (exp2(_2591 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2575 * cbSceneParam._m0[78u].x)) * _2565.x) / cbSceneParam._m0[78u].x)) + _2256;
        _2351 = (exp2(_2591 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2575 * cbSceneParam._m0[78u].y)) * _2565.y) / cbSceneParam._m0[78u].y)) + _2257;
        _2353 = (exp2(_2591 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2575 * cbSceneParam._m0[78u].z)) * _2565.z) / cbSceneParam._m0[78u].z)) + _2258;
        _2355 = _2574 * _2259;
    }
    else
    {
        _2349 = _2256;
        _2351 = _2257;
        _2353 = _2258;
        _2355 = _2259;
    }
    bool _2601;
    vec4 _2364;
    vec4 _2387;
    float _2389;
    float _2393;
    float _2394;
    float _2395;
    float _2398;
    float _2401;
    float _2404;
    float _2405;
    bool _2416;
    for (;;)
    {
        _2364 = cbMatDynParam._m0[0u];
        float _2366 = roundEven(_2364.y);
        bool _2367 = _2366 == 3.0;
        float _2369 = log2(_2355);
        float _2373 = exp2(_2369 * cbSceneParam._m0[78u].x);
        float _2374 = exp2(_2369 * cbSceneParam._m0[78u].y);
        float _2375 = exp2(_2369 * cbSceneParam._m0[78u].z);
        float _2376 = _2373 * _2218;
        float _2377 = _2374 * _2219;
        float _2378 = _2375 * _2220;
        float _2385 = _949 + (-0.5);
        _2387 = cbMtdParam._m0[1u];
        _2389 = _2387.y * _2385;
        float _2392 = (_2366 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2393 = _2392 * (_2367 ? _2376 : (_2376 + (cbSceneParam._m0[72u].w * _2349)));
        _2394 = _2392 * (_2367 ? _2377 : (_2377 + (cbSceneParam._m0[72u].w * _2351)));
        _2395 = _2392 * (_2367 ? _2378 : (_2378 + (cbSceneParam._m0[72u].w * _2353)));
        _2398 = ((_2226 * _2230) * _2373) * _2392;
        _2401 = ((_2227 * _2230) * _2374) * _2392;
        _2404 = ((_2228 * _2230) * _2375) * _2392;
        _2405 = _2385 * 0.999000012874603271484375;
        _2416 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2416)
        {
            if ((cbInstanceData._m0[_1892 + 7u].x + _2405) < 0.5)
            {
                _2601 = true;
                break;
            }
        }
        uint _2524 = _2199 + uint(_2364.w);
        if ((cbInstanceData._m0[_2524].w < 1.0) && ((cbInstanceData._m0[_2524].w + _2405) < 0.5))
        {
            _2601 = true;
            break;
        }
        if ((_2389 + 1.0) < _2387.x)
        {
            _2601 = true;
            break;
        }
        _2601 = false;
        break;
    }
    float _2733;
    if (_2601)
    {
        discard_state = true;
        _2733 = 0.0;
    }
    else
    {
        _2733 = cbInstanceData._m0[_2231].w;
    }
    SV_Target.x = _2393;
    SV_Target.y = _2394;
    SV_Target.z = _2395;
    SV_Target.w = _2733;
    SV_Target_1.x = _2398;
    SV_Target_1.y = _2401;
    SV_Target_1.z = _2404;
    SV_Target_1.w = cbInstanceData._m0[_2231].w;
    discard_exit();
}


