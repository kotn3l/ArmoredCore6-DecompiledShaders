#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_1;
layout(location = 7) out float TEXCOORD_4;
layout(location = 7, component = 1) out vec2 TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _217 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _265 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _267 = texelFetch(g_InstanceIndexBuffer, int(_265));
    uint _268 = _267.x;
    precise float _269 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _274 = isnan(_269) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _269 : max(0.001000000047497451305389404296875, _269));
    precise float _276 = BLENDWEIGHT.x / _274;
    precise float _277 = BLENDWEIGHT.y / _274;
    precise float _278 = BLENDWEIGHT.z / _274;
    precise float _279 = BLENDWEIGHT.w / _274;
    uint _281 = _268 * 13u;
    uvec4 _286 = floatBitsToUint(cbInstanceData._m0[_281 + 4u]);
    uint _287 = _286.x;
    uint _289 = (_287 + uint(float(BLENDINDICES.x))) * 3u;
    uint _296 = _289 + 1u;
    uint _303 = _289 + 2u;
    precise float _310 = _276 * cbObjMatrix._m0[_289].x;
    precise float _311 = _276 * cbObjMatrix._m0[_296].x;
    precise float _312 = _276 * cbObjMatrix._m0[_303].x;
    precise float _313 = _276 * cbObjMatrix._m0[_289].y;
    precise float _314 = _276 * cbObjMatrix._m0[_296].y;
    precise float _315 = _276 * cbObjMatrix._m0[_303].y;
    precise float _316 = _276 * cbObjMatrix._m0[_289].z;
    precise float _317 = _276 * cbObjMatrix._m0[_296].z;
    precise float _318 = _276 * cbObjMatrix._m0[_303].z;
    precise float _319 = _276 * cbObjMatrix._m0[_289].w;
    precise float _320 = _276 * cbObjMatrix._m0[_296].w;
    precise float _321 = _276 * cbObjMatrix._m0[_303].w;
    uint _324 = (_287 + uint(float(BLENDINDICES.y))) * 3u;
    uint _331 = _324 + 1u;
    uint _338 = _324 + 2u;
    precise float _345 = _277 * cbObjMatrix._m0[_324].x;
    precise float _346 = _277 * cbObjMatrix._m0[_331].x;
    precise float _347 = _277 * cbObjMatrix._m0[_338].x;
    precise float _348 = _277 * cbObjMatrix._m0[_324].y;
    precise float _349 = _277 * cbObjMatrix._m0[_331].y;
    precise float _350 = _277 * cbObjMatrix._m0[_338].y;
    precise float _351 = _277 * cbObjMatrix._m0[_324].z;
    precise float _352 = _277 * cbObjMatrix._m0[_331].z;
    precise float _353 = _277 * cbObjMatrix._m0[_338].z;
    precise float _354 = _277 * cbObjMatrix._m0[_324].w;
    precise float _355 = _277 * cbObjMatrix._m0[_331].w;
    precise float _356 = _277 * cbObjMatrix._m0[_338].w;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    uint _371 = (_287 + uint(float(BLENDINDICES.z))) * 3u;
    uint _378 = _371 + 1u;
    uint _385 = _371 + 2u;
    precise float _392 = _278 * cbObjMatrix._m0[_371].x;
    precise float _393 = _278 * cbObjMatrix._m0[_378].x;
    precise float _394 = _278 * cbObjMatrix._m0[_385].x;
    precise float _395 = _278 * cbObjMatrix._m0[_371].y;
    precise float _396 = _278 * cbObjMatrix._m0[_378].y;
    precise float _397 = _278 * cbObjMatrix._m0[_385].y;
    precise float _398 = _278 * cbObjMatrix._m0[_371].z;
    precise float _399 = _278 * cbObjMatrix._m0[_378].z;
    precise float _400 = _278 * cbObjMatrix._m0[_385].z;
    precise float _401 = _278 * cbObjMatrix._m0[_371].w;
    precise float _402 = _278 * cbObjMatrix._m0[_378].w;
    precise float _403 = _278 * cbObjMatrix._m0[_385].w;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    uint _418 = (_287 + uint(float(BLENDINDICES.w))) * 3u;
    uint _425 = _418 + 1u;
    uint _432 = _418 + 2u;
    precise float _439 = _279 * cbObjMatrix._m0[_418].x;
    precise float _440 = _279 * cbObjMatrix._m0[_425].x;
    precise float _441 = _279 * cbObjMatrix._m0[_432].x;
    precise float _442 = _279 * cbObjMatrix._m0[_418].y;
    precise float _443 = _279 * cbObjMatrix._m0[_425].y;
    precise float _444 = _279 * cbObjMatrix._m0[_432].y;
    precise float _445 = _279 * cbObjMatrix._m0[_418].z;
    precise float _446 = _279 * cbObjMatrix._m0[_425].z;
    precise float _447 = _279 * cbObjMatrix._m0[_432].z;
    precise float _448 = _279 * cbObjMatrix._m0[_418].w;
    precise float _449 = _279 * cbObjMatrix._m0[_425].w;
    precise float _450 = _279 * cbObjMatrix._m0[_432].w;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = POSITION.x * _451;
    precise float _464 = POSITION.y * _454;
    precise float _465 = _464 + _463;
    precise float _466 = POSITION.z * _457;
    precise float _467 = _466 + _465;
    precise float _468 = 1.0 * _460;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.x * _452;
    precise float _471 = POSITION.y * _455;
    precise float _472 = _471 + _470;
    precise float _473 = POSITION.z * _458;
    precise float _474 = _473 + _472;
    precise float _475 = 1.0 * _461;
    precise float _476 = _475 + _474;
    precise float _477 = POSITION.x * _453;
    precise float _478 = POSITION.y * _456;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.z * _459;
    precise float _481 = _480 + _479;
    precise float _482 = 1.0 * _462;
    precise float _483 = _482 + _481;
    precise float _526 = _469 - cbSceneParam._m0[3u].x;
    precise float _527 = _476 - cbSceneParam._m0[3u].y;
    precise float _528 = _483 - cbSceneParam._m0[3u].z;
    precise float _556 = _526 * cbSceneParam._m0[24u].x;
    precise float _557 = _527 * cbSceneParam._m0[24u].y;
    precise float _558 = _557 + _556;
    precise float _559 = _528 * cbSceneParam._m0[24u].z;
    precise float _560 = _559 + _558;
    precise float _561 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _562 = _561 + _560;
    precise float _563 = _526 * cbSceneParam._m0[25u].x;
    precise float _564 = _527 * cbSceneParam._m0[25u].y;
    precise float _565 = _564 + _563;
    precise float _566 = _528 * cbSceneParam._m0[25u].z;
    precise float _567 = _566 + _565;
    precise float _568 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _569 = _568 + _567;
    precise float _570 = _526 * cbSceneParam._m0[26u].x;
    precise float _571 = _527 * cbSceneParam._m0[26u].y;
    precise float _572 = _571 + _570;
    precise float _573 = _528 * cbSceneParam._m0[26u].z;
    precise float _574 = _573 + _572;
    precise float _575 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _576 = _575 + _574;
    precise float _577 = _526 * cbSceneParam._m0[27u].x;
    precise float _578 = _527 * cbSceneParam._m0[27u].y;
    precise float _579 = _578 + _577;
    precise float _580 = _528 * cbSceneParam._m0[27u].z;
    precise float _581 = _580 + _579;
    precise float _582 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _583 = _582 + _581;
    gl_Position.x = _562;
    gl_Position.y = _569;
    gl_Position.z = _576;
    gl_Position.w = _583;
    POSITION_1.x = _562;
    POSITION_1.y = _569;
    POSITION_1.z = _576;
    POSITION_1.w = _583;
    NORMAL_1.x = fma(_220, _457, fma(_219, _454, _451 * _217));
    NORMAL_1.y = fma(_220, _458, fma(_219, _455, _452 * _217));
    NORMAL_1.z = fma(_220, _459, fma(_219, _456, _453 * _217));
    NORMAL_1.w = float(_268);
    TANGENT_1.x = fma(_231, _457, fma(_230, _454, _451 * _229));
    TANGENT_1.y = fma(_231, _458, fma(_230, _455, _452 * _229));
    TANGENT_1.z = fma(_231, _459, fma(_230, _456, _453 * _229));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_243, _457, fma(_242, _454, _451 * _241));
    TANGENT_2_1.y = fma(_243, _458, fma(_242, _455, _452 * _241));
    TANGENT_2_1.z = fma(_243, _459, fma(_242, _456, _453 * _241));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_255, _457, fma(_254, _454, _451 * _253));
    TANGENT_4_1.y = fma(_255, _458, fma(_254, _455, _452 * _253));
    TANGENT_4_1.z = fma(_255, _459, fma(_254, _456, _453 * _253));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _576;
    TEXCOORD_6.y = _583;
    gl_ClipDistance[0u] = dot(vec4(_562, _569, _576, _583), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_562, _569, _576, _583), vec4(cbInstanceData._m0[_281 + 3u]));
}


