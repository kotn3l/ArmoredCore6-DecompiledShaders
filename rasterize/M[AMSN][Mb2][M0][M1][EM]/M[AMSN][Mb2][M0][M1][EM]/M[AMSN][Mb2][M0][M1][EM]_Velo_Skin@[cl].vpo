#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3_1;
layout(location = 5) out vec4 TEXCOORD_6;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_14;
layout(location = 8) out vec4 TEXCOORD_15;
layout(location = 9) out vec3 TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    float _208 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _232 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _234 = texelFetch(g_InstanceIndexBuffer, int(_232));
    uint _235 = _234.x;
    precise float _236 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _241 = isnan(_236) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _236 : max(0.001000000047497451305389404296875, _236));
    precise float _243 = BLENDWEIGHT.x / _241;
    precise float _244 = BLENDWEIGHT.y / _241;
    precise float _245 = BLENDWEIGHT.z / _241;
    precise float _246 = BLENDWEIGHT.w / _241;
    uvec4 _253 = floatBitsToUint(cbInstanceData._m0[(_235 * 13u) + 4u]);
    uint _254 = _253.x;
    uint _256 = (_254 + uint(float(BLENDINDICES.x))) * 3u;
    uint _263 = _256 + 1u;
    uint _270 = _256 + 2u;
    precise float _277 = _243 * cbObjMatrix._m0[_256].x;
    precise float _278 = _243 * cbObjMatrix._m0[_263].x;
    precise float _279 = _243 * cbObjMatrix._m0[_270].x;
    precise float _280 = _243 * cbObjMatrix._m0[_256].y;
    precise float _281 = _243 * cbObjMatrix._m0[_263].y;
    precise float _282 = _243 * cbObjMatrix._m0[_270].y;
    precise float _283 = _243 * cbObjMatrix._m0[_256].z;
    precise float _284 = _243 * cbObjMatrix._m0[_263].z;
    precise float _285 = _243 * cbObjMatrix._m0[_270].z;
    precise float _286 = _243 * cbObjMatrix._m0[_256].w;
    precise float _287 = _243 * cbObjMatrix._m0[_263].w;
    precise float _288 = _243 * cbObjMatrix._m0[_270].w;
    uint _291 = (_254 + uint(float(BLENDINDICES.y))) * 3u;
    uint _298 = _291 + 1u;
    uint _305 = _291 + 2u;
    precise float _312 = _244 * cbObjMatrix._m0[_291].x;
    precise float _313 = _244 * cbObjMatrix._m0[_298].x;
    precise float _314 = _244 * cbObjMatrix._m0[_305].x;
    precise float _315 = _244 * cbObjMatrix._m0[_291].y;
    precise float _316 = _244 * cbObjMatrix._m0[_298].y;
    precise float _317 = _244 * cbObjMatrix._m0[_305].y;
    precise float _318 = _244 * cbObjMatrix._m0[_291].z;
    precise float _319 = _244 * cbObjMatrix._m0[_298].z;
    precise float _320 = _244 * cbObjMatrix._m0[_305].z;
    precise float _321 = _244 * cbObjMatrix._m0[_291].w;
    precise float _322 = _244 * cbObjMatrix._m0[_298].w;
    precise float _323 = _244 * cbObjMatrix._m0[_305].w;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    uint _338 = (_254 + uint(float(BLENDINDICES.z))) * 3u;
    uint _345 = _338 + 1u;
    uint _352 = _338 + 2u;
    precise float _359 = _245 * cbObjMatrix._m0[_338].x;
    precise float _360 = _245 * cbObjMatrix._m0[_345].x;
    precise float _361 = _245 * cbObjMatrix._m0[_352].x;
    precise float _362 = _245 * cbObjMatrix._m0[_338].y;
    precise float _363 = _245 * cbObjMatrix._m0[_345].y;
    precise float _364 = _245 * cbObjMatrix._m0[_352].y;
    precise float _365 = _245 * cbObjMatrix._m0[_338].z;
    precise float _366 = _245 * cbObjMatrix._m0[_345].z;
    precise float _367 = _245 * cbObjMatrix._m0[_352].z;
    precise float _368 = _245 * cbObjMatrix._m0[_338].w;
    precise float _369 = _245 * cbObjMatrix._m0[_345].w;
    precise float _370 = _245 * cbObjMatrix._m0[_352].w;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    uint _385 = (_254 + uint(float(BLENDINDICES.w))) * 3u;
    uint _392 = _385 + 1u;
    uint _399 = _385 + 2u;
    precise float _406 = _246 * cbObjMatrix._m0[_385].x;
    precise float _407 = _246 * cbObjMatrix._m0[_392].x;
    precise float _408 = _246 * cbObjMatrix._m0[_399].x;
    precise float _409 = _246 * cbObjMatrix._m0[_385].y;
    precise float _410 = _246 * cbObjMatrix._m0[_392].y;
    precise float _411 = _246 * cbObjMatrix._m0[_399].y;
    precise float _412 = _246 * cbObjMatrix._m0[_385].z;
    precise float _413 = _246 * cbObjMatrix._m0[_392].z;
    precise float _414 = _246 * cbObjMatrix._m0[_399].z;
    precise float _415 = _246 * cbObjMatrix._m0[_385].w;
    precise float _416 = _246 * cbObjMatrix._m0[_392].w;
    precise float _417 = _246 * cbObjMatrix._m0[_399].w;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = POSITION.x * _418;
    precise float _431 = POSITION.y * _421;
    precise float _432 = _431 + _430;
    precise float _433 = POSITION.z * _424;
    precise float _434 = _433 + _432;
    precise float _435 = 1.0 * _427;
    precise float _436 = _435 + _434;
    precise float _437 = POSITION.x * _419;
    precise float _438 = POSITION.y * _422;
    precise float _439 = _438 + _437;
    precise float _440 = POSITION.z * _425;
    precise float _441 = _440 + _439;
    precise float _442 = 1.0 * _428;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.x * _420;
    precise float _445 = POSITION.y * _423;
    precise float _446 = _445 + _444;
    precise float _447 = POSITION.z * _426;
    precise float _448 = _447 + _446;
    precise float _449 = 1.0 * _429;
    precise float _450 = _449 + _448;
    float _625 = (((((cbPrevObjMatrix._m0[_291].w * _244) + (cbPrevObjMatrix._m0[_256].w * _243)) + (cbPrevObjMatrix._m0[_338].w * _245)) + (cbPrevObjMatrix._m0[_385].w * _246)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_291].z * _244) + (cbPrevObjMatrix._m0[_256].z * _243)) + (cbPrevObjMatrix._m0[_338].z * _245)) + (cbPrevObjMatrix._m0[_385].z * _246), fma(POSITION.y, (((cbPrevObjMatrix._m0[_291].y * _244) + (cbPrevObjMatrix._m0[_256].y * _243)) + (cbPrevObjMatrix._m0[_338].y * _245)) + (cbPrevObjMatrix._m0[_385].y * _246), ((((cbPrevObjMatrix._m0[_291].x * _244) + (cbPrevObjMatrix._m0[_256].x * _243)) + (cbPrevObjMatrix._m0[_338].x * _245)) + (cbPrevObjMatrix._m0[_385].x * _246)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _626 = (((((cbPrevObjMatrix._m0[_298].w * _244) + (cbPrevObjMatrix._m0[_263].w * _243)) + (cbPrevObjMatrix._m0[_345].w * _245)) + (cbPrevObjMatrix._m0[_392].w * _246)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_298].z * _244) + (cbPrevObjMatrix._m0[_263].z * _243)) + (cbPrevObjMatrix._m0[_345].z * _245)) + (cbPrevObjMatrix._m0[_392].z * _246), fma(POSITION.y, (((cbPrevObjMatrix._m0[_298].y * _244) + (cbPrevObjMatrix._m0[_263].y * _243)) + (cbPrevObjMatrix._m0[_345].y * _245)) + (cbPrevObjMatrix._m0[_392].y * _246), ((((cbPrevObjMatrix._m0[_298].x * _244) + (cbPrevObjMatrix._m0[_263].x * _243)) + (cbPrevObjMatrix._m0[_345].x * _245)) + (cbPrevObjMatrix._m0[_392].x * _246)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _627 = (((((cbPrevObjMatrix._m0[_305].w * _244) + (cbPrevObjMatrix._m0[_270].w * _243)) + (cbPrevObjMatrix._m0[_352].w * _245)) + (cbPrevObjMatrix._m0[_399].w * _246)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_305].z * _244) + (cbPrevObjMatrix._m0[_270].z * _243)) + (cbPrevObjMatrix._m0[_352].z * _245)) + (cbPrevObjMatrix._m0[_399].z * _246), fma(POSITION.y, (((cbPrevObjMatrix._m0[_305].y * _244) + (cbPrevObjMatrix._m0[_270].y * _243)) + (cbPrevObjMatrix._m0[_352].y * _245)) + (cbPrevObjMatrix._m0[_399].y * _246), ((((cbPrevObjMatrix._m0[_305].x * _244) + (cbPrevObjMatrix._m0[_270].x * _243)) + (cbPrevObjMatrix._m0[_352].x * _245)) + (cbPrevObjMatrix._m0[_399].x * _246)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _674 = fma(_211, _424, fma(_210, _421, _418 * _208));
    float _677 = fma(_211, _425, fma(_210, _422, _419 * _208));
    float _680 = fma(_211, _426, fma(_210, _423, _420 * _208));
    precise float _696 = _436 - cbSceneParam._m0[3u].x;
    precise float _697 = _443 - cbSceneParam._m0[3u].y;
    precise float _698 = _450 - cbSceneParam._m0[3u].z;
    precise float _726 = _696 * cbSceneParam._m0[24u].x;
    precise float _727 = _697 * cbSceneParam._m0[24u].y;
    precise float _728 = _727 + _726;
    precise float _729 = _698 * cbSceneParam._m0[24u].z;
    precise float _730 = _729 + _728;
    precise float _731 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _732 = _731 + _730;
    precise float _733 = _696 * cbSceneParam._m0[25u].x;
    precise float _734 = _697 * cbSceneParam._m0[25u].y;
    precise float _735 = _734 + _733;
    precise float _736 = _698 * cbSceneParam._m0[25u].z;
    precise float _737 = _736 + _735;
    precise float _738 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _739 = _738 + _737;
    precise float _740 = _696 * cbSceneParam._m0[26u].x;
    precise float _741 = _697 * cbSceneParam._m0[26u].y;
    precise float _742 = _741 + _740;
    precise float _743 = _698 * cbSceneParam._m0[26u].z;
    precise float _744 = _743 + _742;
    precise float _745 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _746 = _745 + _744;
    precise float _747 = _696 * cbSceneParam._m0[27u].x;
    precise float _748 = _697 * cbSceneParam._m0[27u].y;
    precise float _749 = _748 + _747;
    precise float _750 = _698 * cbSceneParam._m0[27u].z;
    precise float _751 = _750 + _749;
    precise float _752 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _753 = _752 + _751;
    gl_Position.x = _732;
    gl_Position.y = _739;
    gl_Position.z = _746;
    gl_Position.w = _753;
    POSITION_1.x = _732;
    POSITION_1.y = _739;
    POSITION_1.z = _746;
    POSITION_1.w = _753;
    NORMAL_1.x = _674;
    NORMAL_1.y = _677;
    NORMAL_1.z = _680;
    NORMAL_1.w = float(_235);
    TANGENT_1.x = fma(_222, _424, fma(_221, _421, _418 * _220));
    TANGENT_1.y = fma(_222, _425, fma(_221, _422, _419 * _220));
    TANGENT_1.z = fma(_222, _426, fma(_221, _423, _420 * _220));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_14.x = _732;
    TEXCOORD_14.y = _739;
    TEXCOORD_14.z = _746;
    TEXCOORD_14.w = _753;
    TEXCOORD_15.x = fma(_627, cbSceneParam._m0[29u].z, fma(_626, cbSceneParam._m0[29u].y, _625 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_15.y = fma(_627, cbSceneParam._m0[30u].z, fma(_626, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _625)) + cbSceneParam._m0[30u].w;
    TEXCOORD_15.z = fma(_627, cbSceneParam._m0[31u].z, fma(_626, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _625)) + cbSceneParam._m0[31u].w;
    TEXCOORD_15.w = fma(_627, cbSceneParam._m0[32u].z, fma(_626, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _625)) + cbSceneParam._m0[32u].w;
    TEXCOORD_16.x = _674;
    TEXCOORD_16.y = _677;
    TEXCOORD_16.z = _680;
}


