#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_3_1;
layout(location = 4) out vec4 TEXCOORD_6;
layout(location = 5) out vec4 TEXCOORD_9;
layout(location = 6) out vec2 TEXCOORD_13;
layout(location = 6, component = 2) out float TEXCOORD_17;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_17 = 0.0;
    float _190 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _214 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _216 = texelFetch(g_InstanceIndexBuffer, int(_214));
    uint _217 = _216.x;
    precise float _218 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _223 = isnan(_218) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _218 : max(0.001000000047497451305389404296875, _218));
    precise float _225 = BLENDWEIGHT.x / _223;
    precise float _226 = BLENDWEIGHT.y / _223;
    precise float _227 = BLENDWEIGHT.z / _223;
    precise float _228 = BLENDWEIGHT.w / _223;
    uvec4 _235 = floatBitsToUint(cbInstanceData._m0[(_217 * 13u) + 4u]);
    uint _236 = _235.x;
    uint _238 = (_236 + uint(float(BLENDINDICES.x))) * 3u;
    uint _245 = _238 + 1u;
    uint _252 = _238 + 2u;
    precise float _259 = _225 * cbObjMatrix._m0[_238].x;
    precise float _260 = _225 * cbObjMatrix._m0[_245].x;
    precise float _261 = _225 * cbObjMatrix._m0[_252].x;
    precise float _262 = _225 * cbObjMatrix._m0[_238].y;
    precise float _263 = _225 * cbObjMatrix._m0[_245].y;
    precise float _264 = _225 * cbObjMatrix._m0[_252].y;
    precise float _265 = _225 * cbObjMatrix._m0[_238].z;
    precise float _266 = _225 * cbObjMatrix._m0[_245].z;
    precise float _267 = _225 * cbObjMatrix._m0[_252].z;
    precise float _268 = _225 * cbObjMatrix._m0[_238].w;
    precise float _269 = _225 * cbObjMatrix._m0[_245].w;
    precise float _270 = _225 * cbObjMatrix._m0[_252].w;
    uint _273 = (_236 + uint(float(BLENDINDICES.y))) * 3u;
    uint _280 = _273 + 1u;
    uint _287 = _273 + 2u;
    precise float _294 = _226 * cbObjMatrix._m0[_273].x;
    precise float _295 = _226 * cbObjMatrix._m0[_280].x;
    precise float _296 = _226 * cbObjMatrix._m0[_287].x;
    precise float _297 = _226 * cbObjMatrix._m0[_273].y;
    precise float _298 = _226 * cbObjMatrix._m0[_280].y;
    precise float _299 = _226 * cbObjMatrix._m0[_287].y;
    precise float _300 = _226 * cbObjMatrix._m0[_273].z;
    precise float _301 = _226 * cbObjMatrix._m0[_280].z;
    precise float _302 = _226 * cbObjMatrix._m0[_287].z;
    precise float _303 = _226 * cbObjMatrix._m0[_273].w;
    precise float _304 = _226 * cbObjMatrix._m0[_280].w;
    precise float _305 = _226 * cbObjMatrix._m0[_287].w;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    uint _320 = (_236 + uint(float(BLENDINDICES.z))) * 3u;
    uint _327 = _320 + 1u;
    uint _334 = _320 + 2u;
    precise float _341 = _227 * cbObjMatrix._m0[_320].x;
    precise float _342 = _227 * cbObjMatrix._m0[_327].x;
    precise float _343 = _227 * cbObjMatrix._m0[_334].x;
    precise float _344 = _227 * cbObjMatrix._m0[_320].y;
    precise float _345 = _227 * cbObjMatrix._m0[_327].y;
    precise float _346 = _227 * cbObjMatrix._m0[_334].y;
    precise float _347 = _227 * cbObjMatrix._m0[_320].z;
    precise float _348 = _227 * cbObjMatrix._m0[_327].z;
    precise float _349 = _227 * cbObjMatrix._m0[_334].z;
    precise float _350 = _227 * cbObjMatrix._m0[_320].w;
    precise float _351 = _227 * cbObjMatrix._m0[_327].w;
    precise float _352 = _227 * cbObjMatrix._m0[_334].w;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    uint _367 = (_236 + uint(float(BLENDINDICES.w))) * 3u;
    uint _374 = _367 + 1u;
    uint _381 = _367 + 2u;
    precise float _388 = _228 * cbObjMatrix._m0[_367].x;
    precise float _389 = _228 * cbObjMatrix._m0[_374].x;
    precise float _390 = _228 * cbObjMatrix._m0[_381].x;
    precise float _391 = _228 * cbObjMatrix._m0[_367].y;
    precise float _392 = _228 * cbObjMatrix._m0[_374].y;
    precise float _393 = _228 * cbObjMatrix._m0[_381].y;
    precise float _394 = _228 * cbObjMatrix._m0[_367].z;
    precise float _395 = _228 * cbObjMatrix._m0[_374].z;
    precise float _396 = _228 * cbObjMatrix._m0[_381].z;
    precise float _397 = _228 * cbObjMatrix._m0[_367].w;
    precise float _398 = _228 * cbObjMatrix._m0[_374].w;
    precise float _399 = _228 * cbObjMatrix._m0[_381].w;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = POSITION.x * _400;
    precise float _413 = POSITION.y * _403;
    precise float _414 = _413 + _412;
    precise float _415 = POSITION.z * _406;
    precise float _416 = _415 + _414;
    precise float _417 = 1.0 * _409;
    precise float _418 = _417 + _416;
    precise float _419 = POSITION.x * _401;
    precise float _420 = POSITION.y * _404;
    precise float _421 = _420 + _419;
    precise float _422 = POSITION.z * _407;
    precise float _423 = _422 + _421;
    precise float _424 = 1.0 * _410;
    precise float _425 = _424 + _423;
    precise float _426 = POSITION.x * _402;
    precise float _427 = POSITION.y * _405;
    precise float _428 = _427 + _426;
    precise float _429 = POSITION.z * _408;
    precise float _430 = _429 + _428;
    precise float _431 = 1.0 * _411;
    precise float _432 = _431 + _430;
    float _438 = cbSceneParam._m0[3u].x - _418;
    float _439 = cbSceneParam._m0[3u].y - _425;
    float _440 = cbSceneParam._m0[3u].z - _432;
    precise float _466 = _418 - cbSceneParam._m0[3u].x;
    precise float _467 = _425 - cbSceneParam._m0[3u].y;
    precise float _468 = _432 - cbSceneParam._m0[3u].z;
    precise float _496 = _466 * cbSceneParam._m0[24u].x;
    precise float _497 = _467 * cbSceneParam._m0[24u].y;
    precise float _498 = _497 + _496;
    precise float _499 = _468 * cbSceneParam._m0[24u].z;
    precise float _500 = _499 + _498;
    precise float _501 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _502 = _501 + _500;
    precise float _503 = _466 * cbSceneParam._m0[25u].x;
    precise float _504 = _467 * cbSceneParam._m0[25u].y;
    precise float _505 = _504 + _503;
    precise float _506 = _468 * cbSceneParam._m0[25u].z;
    precise float _507 = _506 + _505;
    precise float _508 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _509 = _508 + _507;
    precise float _510 = _466 * cbSceneParam._m0[26u].x;
    precise float _511 = _467 * cbSceneParam._m0[26u].y;
    precise float _512 = _511 + _510;
    precise float _513 = _468 * cbSceneParam._m0[26u].z;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _516 = _515 + _514;
    precise float _517 = _466 * cbSceneParam._m0[27u].x;
    precise float _518 = _467 * cbSceneParam._m0[27u].y;
    precise float _519 = _518 + _517;
    precise float _520 = _468 * cbSceneParam._m0[27u].z;
    precise float _521 = _520 + _519;
    precise float _522 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _523 = _522 + _521;
    gl_Position.x = _502;
    gl_Position.y = _509;
    gl_Position.z = _516;
    gl_Position.w = _523;
    NORMAL_1.x = fma(_193, _406, fma(_192, _403, _400 * _190));
    NORMAL_1.y = fma(_193, _407, fma(_192, _404, _401 * _190));
    NORMAL_1.z = fma(_193, _408, fma(_192, _405, _402 * _190));
    NORMAL_1.w = float(_217);
    TANGENT_1.x = fma(_204, _406, fma(_203, _403, _400 * _202));
    TANGENT_1.y = fma(_204, _407, fma(_203, _404, _401 * _202));
    TANGENT_1.z = fma(_204, _408, fma(_203, _405, _402 * _202));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_13.x = _516;
    TEXCOORD_13.y = _523;
    TEXCOORD_17 = sqrt(((_438 * _438) + (_439 * _439)) + (_440 * _440));
}


