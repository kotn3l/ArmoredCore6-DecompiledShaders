#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb2_M0_M1_EM_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb2_M0_M1_EM_snp_0_Texture2D_13;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_3;
layout(location = 4) in vec4 TEXCOORD_6;
layout(location = 5) in vec4 TEXCOORD_9;
layout(location = 6) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _115 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _116 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _117 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _123 = inversesqrt(dot(vec3(_115, _116, _117), vec3(_115, _116, _117)));
    float _130 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _160 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[1u].w));
    float _166 = _160.x * cbMtdParam._m0[9u].x;
    float _167 = _160.y * cbMtdParam._m0[9u].y;
    float _168 = _160.z * cbMtdParam._m0[9u].z;
    vec4 _180 = texture(sampler2D(M_AMSN_Mb2_M0_M1_EM_snp_0_Texture2D_13, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _184 = _180.z;
    float _188 = (_180.x * 2.0) + (-1.0);
    float _190 = (_180.y * 2.0) + (-1.0);
    float _191 = dot(vec2(_188, _190), vec2(_188, _190));
    float _299 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _197 = sqrt(1.0 - (isnan(1.0) ? _299 : (isnan(_299) ? 1.0 : min(_299, 1.0))));
    float _200 = fma(_197, _130 * NORMAL.x, fma(_190, _137 * TANGENT.x, (_123 * _115) * _188));
    float _203 = fma(_197, _130 * NORMAL.y, fma(_190, _137 * TANGENT.y, (_123 * _116) * _188));
    float _206 = fma(_197, _130 * NORMAL.z, fma(_190, _137 * TANGENT.z, (_123 * _117) * _188));
    float _210 = inversesqrt(dot(vec3(_200, _203, _206), vec3(_200, _203, _206)));
    float _310 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _321 = isnan(0.0) ? _166 : (isnan(_166) ? 0.0 : max(_166, 0.0));
    float _332 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    float _343 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    uint _229 = uint(roundEven(NORMAL.w)) * 13u;
    uint _232 = (_229 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _238 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _321 : (isnan(_321) ? 1.0 : min(_321, 1.0)))) * cbInstanceData._m0[_232].x;
    float _239 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _332 : (isnan(_332) ? 1.0 : min(_332, 1.0)))) * cbInstanceData._m0[_232].y;
    float _240 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _343 : (isnan(_343) ? 1.0 : min(_343, 1.0)))) * cbInstanceData._m0[_232].z;
    float _354 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _365 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    float _376 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    uint _244 = _229 + 6u;
    bool _273 = cbMtdParam._m0[1u].z != 0.0;
    float _274 = _273 ? cbInstanceData._m0[_244].w : 0.0;
    SV_Target.x = ((_200 * 0.5) * _210) + 0.500488758087158203125;
    SV_Target.y = ((_203 * 0.5) * _210) + 0.500488758087158203125;
    SV_Target.z = ((_206 * 0.5) * _210) + 0.500488758087158203125;
    SV_Target.w = _274;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _310 : (isnan(_310) ? 1.0 : min(_310, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _273 ? cbInstanceData._m0[_244].w : TEXCOORD_3.w;
    SV_Target_2.x = isnan(1.0) ? _354 : (isnan(_354) ? 1.0 : min(_354, 1.0));
    SV_Target_2.y = isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : min(_365, 1.0));
    SV_Target_2.z = isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0));
    SV_Target_2.w = _273 ? cbInstanceData._m0[_244].w : (float(floatBitsToUint(cbInstanceData._m0[_229 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _274;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _274;
}


