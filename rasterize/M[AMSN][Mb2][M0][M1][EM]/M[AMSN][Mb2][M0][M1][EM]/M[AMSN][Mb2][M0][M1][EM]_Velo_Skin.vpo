#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3_1;
layout(location = 5) out vec4 TEXCOORD_6;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_14;
layout(location = 8) out vec4 TEXCOORD_15;
layout(location = 9) out vec3 TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _213 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _237 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _239 = texelFetch(g_InstanceIndexBuffer, int(_237));
    uint _240 = _239.x;
    precise float _241 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _246 = isnan(_241) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _241 : max(0.001000000047497451305389404296875, _241));
    precise float _248 = BLENDWEIGHT.x / _246;
    precise float _249 = BLENDWEIGHT.y / _246;
    precise float _250 = BLENDWEIGHT.z / _246;
    precise float _251 = BLENDWEIGHT.w / _246;
    uint _253 = _240 * 13u;
    uvec4 _258 = floatBitsToUint(cbInstanceData._m0[_253 + 4u]);
    uint _259 = _258.x;
    uint _261 = (_259 + uint(float(BLENDINDICES.x))) * 3u;
    uint _268 = _261 + 1u;
    uint _275 = _261 + 2u;
    precise float _282 = _248 * cbObjMatrix._m0[_261].x;
    precise float _283 = _248 * cbObjMatrix._m0[_268].x;
    precise float _284 = _248 * cbObjMatrix._m0[_275].x;
    precise float _285 = _248 * cbObjMatrix._m0[_261].y;
    precise float _286 = _248 * cbObjMatrix._m0[_268].y;
    precise float _287 = _248 * cbObjMatrix._m0[_275].y;
    precise float _288 = _248 * cbObjMatrix._m0[_261].z;
    precise float _289 = _248 * cbObjMatrix._m0[_268].z;
    precise float _290 = _248 * cbObjMatrix._m0[_275].z;
    precise float _291 = _248 * cbObjMatrix._m0[_261].w;
    precise float _292 = _248 * cbObjMatrix._m0[_268].w;
    precise float _293 = _248 * cbObjMatrix._m0[_275].w;
    uint _296 = (_259 + uint(float(BLENDINDICES.y))) * 3u;
    uint _303 = _296 + 1u;
    uint _310 = _296 + 2u;
    precise float _317 = _249 * cbObjMatrix._m0[_296].x;
    precise float _318 = _249 * cbObjMatrix._m0[_303].x;
    precise float _319 = _249 * cbObjMatrix._m0[_310].x;
    precise float _320 = _249 * cbObjMatrix._m0[_296].y;
    precise float _321 = _249 * cbObjMatrix._m0[_303].y;
    precise float _322 = _249 * cbObjMatrix._m0[_310].y;
    precise float _323 = _249 * cbObjMatrix._m0[_296].z;
    precise float _324 = _249 * cbObjMatrix._m0[_303].z;
    precise float _325 = _249 * cbObjMatrix._m0[_310].z;
    precise float _326 = _249 * cbObjMatrix._m0[_296].w;
    precise float _327 = _249 * cbObjMatrix._m0[_303].w;
    precise float _328 = _249 * cbObjMatrix._m0[_310].w;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    uint _343 = (_259 + uint(float(BLENDINDICES.z))) * 3u;
    uint _350 = _343 + 1u;
    uint _357 = _343 + 2u;
    precise float _364 = _250 * cbObjMatrix._m0[_343].x;
    precise float _365 = _250 * cbObjMatrix._m0[_350].x;
    precise float _366 = _250 * cbObjMatrix._m0[_357].x;
    precise float _367 = _250 * cbObjMatrix._m0[_343].y;
    precise float _368 = _250 * cbObjMatrix._m0[_350].y;
    precise float _369 = _250 * cbObjMatrix._m0[_357].y;
    precise float _370 = _250 * cbObjMatrix._m0[_343].z;
    precise float _371 = _250 * cbObjMatrix._m0[_350].z;
    precise float _372 = _250 * cbObjMatrix._m0[_357].z;
    precise float _373 = _250 * cbObjMatrix._m0[_343].w;
    precise float _374 = _250 * cbObjMatrix._m0[_350].w;
    precise float _375 = _250 * cbObjMatrix._m0[_357].w;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    uint _390 = (_259 + uint(float(BLENDINDICES.w))) * 3u;
    uint _397 = _390 + 1u;
    uint _404 = _390 + 2u;
    precise float _411 = _251 * cbObjMatrix._m0[_390].x;
    precise float _412 = _251 * cbObjMatrix._m0[_397].x;
    precise float _413 = _251 * cbObjMatrix._m0[_404].x;
    precise float _414 = _251 * cbObjMatrix._m0[_390].y;
    precise float _415 = _251 * cbObjMatrix._m0[_397].y;
    precise float _416 = _251 * cbObjMatrix._m0[_404].y;
    precise float _417 = _251 * cbObjMatrix._m0[_390].z;
    precise float _418 = _251 * cbObjMatrix._m0[_397].z;
    precise float _419 = _251 * cbObjMatrix._m0[_404].z;
    precise float _420 = _251 * cbObjMatrix._m0[_390].w;
    precise float _421 = _251 * cbObjMatrix._m0[_397].w;
    precise float _422 = _251 * cbObjMatrix._m0[_404].w;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = POSITION.x * _423;
    precise float _436 = POSITION.y * _426;
    precise float _437 = _436 + _435;
    precise float _438 = POSITION.z * _429;
    precise float _439 = _438 + _437;
    precise float _440 = 1.0 * _432;
    precise float _441 = _440 + _439;
    precise float _442 = POSITION.x * _424;
    precise float _443 = POSITION.y * _427;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.z * _430;
    precise float _446 = _445 + _444;
    precise float _447 = 1.0 * _433;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.x * _425;
    precise float _450 = POSITION.y * _428;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.z * _431;
    precise float _453 = _452 + _451;
    precise float _454 = 1.0 * _434;
    precise float _455 = _454 + _453;
    float _630 = (((((cbPrevObjMatrix._m0[_296].w * _249) + (cbPrevObjMatrix._m0[_261].w * _248)) + (cbPrevObjMatrix._m0[_343].w * _250)) + (cbPrevObjMatrix._m0[_390].w * _251)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_296].z * _249) + (cbPrevObjMatrix._m0[_261].z * _248)) + (cbPrevObjMatrix._m0[_343].z * _250)) + (cbPrevObjMatrix._m0[_390].z * _251), fma(POSITION.y, (((cbPrevObjMatrix._m0[_296].y * _249) + (cbPrevObjMatrix._m0[_261].y * _248)) + (cbPrevObjMatrix._m0[_343].y * _250)) + (cbPrevObjMatrix._m0[_390].y * _251), ((((cbPrevObjMatrix._m0[_296].x * _249) + (cbPrevObjMatrix._m0[_261].x * _248)) + (cbPrevObjMatrix._m0[_343].x * _250)) + (cbPrevObjMatrix._m0[_390].x * _251)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _631 = (((((cbPrevObjMatrix._m0[_303].w * _249) + (cbPrevObjMatrix._m0[_268].w * _248)) + (cbPrevObjMatrix._m0[_350].w * _250)) + (cbPrevObjMatrix._m0[_397].w * _251)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_303].z * _249) + (cbPrevObjMatrix._m0[_268].z * _248)) + (cbPrevObjMatrix._m0[_350].z * _250)) + (cbPrevObjMatrix._m0[_397].z * _251), fma(POSITION.y, (((cbPrevObjMatrix._m0[_303].y * _249) + (cbPrevObjMatrix._m0[_268].y * _248)) + (cbPrevObjMatrix._m0[_350].y * _250)) + (cbPrevObjMatrix._m0[_397].y * _251), ((((cbPrevObjMatrix._m0[_303].x * _249) + (cbPrevObjMatrix._m0[_268].x * _248)) + (cbPrevObjMatrix._m0[_350].x * _250)) + (cbPrevObjMatrix._m0[_397].x * _251)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _632 = (((((cbPrevObjMatrix._m0[_310].w * _249) + (cbPrevObjMatrix._m0[_275].w * _248)) + (cbPrevObjMatrix._m0[_357].w * _250)) + (cbPrevObjMatrix._m0[_404].w * _251)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_310].z * _249) + (cbPrevObjMatrix._m0[_275].z * _248)) + (cbPrevObjMatrix._m0[_357].z * _250)) + (cbPrevObjMatrix._m0[_404].z * _251), fma(POSITION.y, (((cbPrevObjMatrix._m0[_310].y * _249) + (cbPrevObjMatrix._m0[_275].y * _248)) + (cbPrevObjMatrix._m0[_357].y * _250)) + (cbPrevObjMatrix._m0[_404].y * _251), ((((cbPrevObjMatrix._m0[_310].x * _249) + (cbPrevObjMatrix._m0[_275].x * _248)) + (cbPrevObjMatrix._m0[_357].x * _250)) + (cbPrevObjMatrix._m0[_404].x * _251)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _679 = fma(_216, _429, fma(_215, _426, _423 * _213));
    float _682 = fma(_216, _430, fma(_215, _427, _424 * _213));
    float _685 = fma(_216, _431, fma(_215, _428, _425 * _213));
    precise float _701 = _441 - cbSceneParam._m0[3u].x;
    precise float _702 = _448 - cbSceneParam._m0[3u].y;
    precise float _703 = _455 - cbSceneParam._m0[3u].z;
    precise float _731 = _701 * cbSceneParam._m0[24u].x;
    precise float _732 = _702 * cbSceneParam._m0[24u].y;
    precise float _733 = _732 + _731;
    precise float _734 = _703 * cbSceneParam._m0[24u].z;
    precise float _735 = _734 + _733;
    precise float _736 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _737 = _736 + _735;
    precise float _738 = _701 * cbSceneParam._m0[25u].x;
    precise float _739 = _702 * cbSceneParam._m0[25u].y;
    precise float _740 = _739 + _738;
    precise float _741 = _703 * cbSceneParam._m0[25u].z;
    precise float _742 = _741 + _740;
    precise float _743 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _744 = _743 + _742;
    precise float _745 = _701 * cbSceneParam._m0[26u].x;
    precise float _746 = _702 * cbSceneParam._m0[26u].y;
    precise float _747 = _746 + _745;
    precise float _748 = _703 * cbSceneParam._m0[26u].z;
    precise float _749 = _748 + _747;
    precise float _750 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _751 = _750 + _749;
    precise float _752 = _701 * cbSceneParam._m0[27u].x;
    precise float _753 = _702 * cbSceneParam._m0[27u].y;
    precise float _754 = _753 + _752;
    precise float _755 = _703 * cbSceneParam._m0[27u].z;
    precise float _756 = _755 + _754;
    precise float _757 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _758 = _757 + _756;
    gl_Position.x = _737;
    gl_Position.y = _744;
    gl_Position.z = _751;
    gl_Position.w = _758;
    POSITION_1.x = _737;
    POSITION_1.y = _744;
    POSITION_1.z = _751;
    POSITION_1.w = _758;
    NORMAL_1.x = _679;
    NORMAL_1.y = _682;
    NORMAL_1.z = _685;
    NORMAL_1.w = float(_240);
    TANGENT_1.x = fma(_227, _429, fma(_226, _426, _423 * _225));
    TANGENT_1.y = fma(_227, _430, fma(_226, _427, _424 * _225));
    TANGENT_1.z = fma(_227, _431, fma(_226, _428, _425 * _225));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_14.x = _737;
    TEXCOORD_14.y = _744;
    TEXCOORD_14.z = _751;
    TEXCOORD_14.w = _758;
    TEXCOORD_15.x = fma(_632, cbSceneParam._m0[29u].z, fma(_631, cbSceneParam._m0[29u].y, _630 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_15.y = fma(_632, cbSceneParam._m0[30u].z, fma(_631, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _630)) + cbSceneParam._m0[30u].w;
    TEXCOORD_15.z = fma(_632, cbSceneParam._m0[31u].z, fma(_631, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _630)) + cbSceneParam._m0[31u].w;
    TEXCOORD_15.w = fma(_632, cbSceneParam._m0[32u].z, fma(_631, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _630)) + cbSceneParam._m0[32u].w;
    TEXCOORD_16.x = _679;
    TEXCOORD_16.y = _682;
    TEXCOORD_16.z = _685;
    gl_ClipDistance[0u] = dot(vec4(_737, _744, _751, _758), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_737, _744, _751, _758), vec4(cbInstanceData._m0[_253 + 3u]));
}


