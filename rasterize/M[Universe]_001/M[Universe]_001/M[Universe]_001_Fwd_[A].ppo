#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Universe_001_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _577;
float _578;
float _579;
float _580;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _130 = texture(sampler2D(M_Universe_001_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((cbMtdParam._m0[10u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[10u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _152 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _193 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _203 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _193);
    float _204 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _193);
    float _205 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _193);
    vec4 _210 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _212 = _210.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _306 = sqrt(((_203 * _203) + (_204 * _204)) + (_205 * _205));
        float _313 = (cbMatDynParam._m0[5u].x * _306) + cbMatDynParam._m0[5u].y;
        float _589 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
        float _314 = isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0));
        float _318 = (cbMatDynParam._m0[5u].z * _306) + cbMatDynParam._m0[5u].w;
        float _600 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _600 : (isnan(_600) ? 1.0 : min(_600, 1.0))) - _314)) + _314) < ((_212 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _230 = uint(roundEven(NORMAL.w)) * 13u;
    uint _232 = _230 + 9u;
    uint _233 = _232 + uint(cbMatDynParam._m0[0u].w);
    float _241 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _130.x) * cbInstanceData._m0[_233].x;
    float _244 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _130.y) * cbInstanceData._m0[_233].y;
    float _247 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _130.z) * cbInstanceData._m0[_233].z;
    float _248 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _249 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _250 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _256 = cbMtdParam._m0[2u].x * _241;
    float _257 = cbMtdParam._m0[2u].y * _244;
    float _258 = cbMtdParam._m0[2u].z * _247;
    float _626 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _261 = isnan(1.0) ? _626 : (isnan(_626) ? 1.0 : min(_626, 1.0));
    uint _262 = _230 + 6u;
    float _271 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _272 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _287 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_271, _272, (log2((isnan(cbSceneParam._m0[77u].w) ? _152 : (isnan(_152) ? cbSceneParam._m0[77u].w : min(_152, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _289 = _287.x;
    float _290 = _287.y;
    float _291 = _287.z;
    float _292 = _287.w;
    float _374;
    float _376;
    float _378;
    float _380;
    if (_152 > cbSceneParam._m0[78u].w)
    {
        float _335 = isnan(_152) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _152 : min(cbSceneParam._m0[80u].w, _152));
        float _336 = _335 / _152;
        float _347 = _336 * _203;
        float _348 = _204 * _336;
        float _349 = (-0.0) - _348;
        float _351 = _336 * _205;
        float _353 = (cbSceneParam._m0[77u].w * _349) / _335;
        float _354 = _353 + cbSceneParam._m0[79u].w;
        float _355 = cbSceneParam._m0[79u].w - _348;
        float _361 = sqrt(((_347 * _347) + (_348 * _348)) + (_351 * _351));
        float _364 = (1.0 - (cbSceneParam._m0[77u].w / _335)) * _361;
        float _370 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _372 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _505;
        if (abs((_349 - _353) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _505 = ((((_354 > 0.0) ? exp2(_370 * _354) : (2.0 - exp2(_372 * _354))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _364;
        }
        else
        {
            float _460 = 1.0 / cbSceneParam._m0[80u].x;
            float _461 = isnan(_355) ? _354 : (isnan(_354) ? _355 : max(_354, _355));
            float _462 = isnan(_355) ? _354 : (isnan(_354) ? _355 : min(_354, _355));
            float _471 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : min(_461, 0.0));
            float _472 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : min(_462, 0.0));
            _505 = ((abs(_361 / _349) * cbSceneParam._m0[80u].y) * ((((_471 - _472) * 2.0) - ((exp2(_370 * (isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0)))) - exp2(_370 * (isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0))))) * _460)) - ((exp2(_372 * _471) - exp2(_372 * _472)) * _460))) + (_364 * cbSceneParam._m0[80u].z);
        }
        vec4 _507 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_271, _272, 1.0), 0.0);
        float _516 = exp2((_505 * (-1.44269502162933349609375)) * (1.0 - _507.w));
        float _517 = log2(_516);
        float _533 = log2(_292);
        _374 = (exp2(_533 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_517 * cbSceneParam._m0[78u].x)) * _507.x) / cbSceneParam._m0[78u].x)) + _289;
        _376 = (exp2(_533 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_517 * cbSceneParam._m0[78u].y)) * _507.y) / cbSceneParam._m0[78u].y)) + _290;
        _378 = (exp2(_533 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_517 * cbSceneParam._m0[78u].z)) * _507.z) / cbSceneParam._m0[78u].z)) + _291;
        _380 = _516 * _292;
    }
    else
    {
        _374 = _289;
        _376 = _290;
        _378 = _291;
        _380 = _292;
    }
    bool _543;
    vec4 _390;
    vec4 _414;
    float _416;
    float _421;
    float _422;
    float _423;
    float _426;
    float _429;
    float _432;
    float _433;
    bool _444;
    for (;;)
    {
        _390 = cbMatDynParam._m0[0u];
        float _392 = roundEven(_390.y);
        bool _393 = _392 == 3.0;
        float _395 = log2(_380);
        float _399 = exp2(_395 * cbSceneParam._m0[78u].x);
        float _400 = exp2(_395 * cbSceneParam._m0[78u].y);
        float _401 = exp2(_395 * cbSceneParam._m0[78u].z);
        float _402 = _399 * _248;
        float _403 = _400 * _249;
        float _404 = _401 * _250;
        float _411 = _212 + (-0.5);
        _414 = cbMtdParam._m0[1u];
        _416 = _414.y * _411;
        float _420 = (_392 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _421 = _420 * (_393 ? _402 : (_402 + (cbSceneParam._m0[72u].w * _374)));
        _422 = _420 * (_393 ? _403 : (_403 + (cbSceneParam._m0[72u].w * _376)));
        _423 = _420 * (_393 ? _404 : (_404 + (cbSceneParam._m0[72u].w * _378)));
        _426 = ((_256 * _261) * _399) * _420;
        _429 = ((_257 * _261) * _400) * _420;
        _432 = ((_258 * _261) * _401) * _420;
        _433 = _411 * 0.999000012874603271484375;
        _444 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_444)
        {
            if ((cbInstanceData._m0[_230 + 7u].x + _433) < 0.5)
            {
                _543 = true;
                break;
            }
        }
        uint _497 = _232 + uint(_390.w);
        if ((cbInstanceData._m0[_497].w < 1.0) && ((cbInstanceData._m0[_497].w + _433) < 0.5))
        {
            _543 = true;
            break;
        }
        if ((_416 + 1.0) < _414.x)
        {
            _543 = true;
            break;
        }
        _543 = false;
        break;
    }
    float _548;
    if (_543)
    {
        discard_state = true;
        _548 = 0.0;
    }
    else
    {
        _548 = cbInstanceData._m0[_262].w;
    }
    SV_Target.x = _421;
    SV_Target.y = _422;
    SV_Target.z = _423;
    SV_Target.w = _548;
    SV_Target_1.x = _426;
    SV_Target_1.y = _429;
    SV_Target_1.z = _432;
    SV_Target_1.w = cbInstanceData._m0[_262].w;
    discard_exit();
}


