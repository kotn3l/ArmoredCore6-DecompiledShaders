#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_A_M0_NoLight_Addition_VatexAlpha_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _561;
float _562;
float _563;
float _564;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _122 = texture(sampler2D(S_A_M0_NoLight_Addition_VatexAlpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _128 = _122.w;
    float _129 = _122.x * cbMtdParam._m0[9u].x;
    float _130 = _122.y * cbMtdParam._m0[9u].y;
    float _131 = _122.z * cbMtdParam._m0[9u].z;
    float _132 = _128 * TEXCOORD_1.z;
    float _573 = isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0));
    float _154 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _196 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _206 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _196);
    float _207 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _196);
    float _208 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _196);
    vec4 _213 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _215 = _213.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _299 = sqrt(((_206 * _206) + (_207 * _207)) + (_208 * _208));
        float _306 = (cbMatDynParam._m0[5u].x * _299) + cbMatDynParam._m0[5u].y;
        float _599 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
        float _307 = isnan(1.0) ? _599 : (isnan(_599) ? 1.0 : min(_599, 1.0));
        float _311 = (cbMatDynParam._m0[5u].z * _299) + cbMatDynParam._m0[5u].w;
        float _610 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _610 : (isnan(_610) ? 1.0 : min(_610, 1.0))) - _307)) + _307) < ((_215 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _241 = uint(roundEven(NORMAL.w)) * 13u;
    uint _243 = _241 + 9u;
    uint _244 = _243 + uint(cbMatDynParam._m0[0u].w);
    float _250 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _129 : (isnan(_129) ? 0.0 : max(_129, 0.0)))) * cbInstanceData._m0[_244].x;
    float _251 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_244].y;
    float _252 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))) * cbInstanceData._m0[_244].z;
    float _257 = cbInstanceData._m0[_241 + 6u].w * (isnan(1.0) ? _573 : (isnan(_573) ? 1.0 : min(_573, 1.0)));
    float _263 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _264 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _279 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_263, _264, (log2((isnan(cbSceneParam._m0[77u].w) ? _154 : (isnan(_154) ? cbSceneParam._m0[77u].w : min(_154, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _282 = _279.x;
    float _283 = _279.y;
    float _284 = _279.z;
    float _285 = _279.w;
    float _367;
    float _369;
    float _371;
    float _373;
    if (_154 > cbSceneParam._m0[78u].w)
    {
        float _328 = isnan(_154) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _154 : min(cbSceneParam._m0[80u].w, _154));
        float _329 = _328 / _154;
        float _340 = _329 * _206;
        float _341 = _207 * _329;
        float _342 = (-0.0) - _341;
        float _344 = _329 * _208;
        float _346 = (cbSceneParam._m0[77u].w * _342) / _328;
        float _347 = _346 + cbSceneParam._m0[79u].w;
        float _348 = cbSceneParam._m0[79u].w - _341;
        float _354 = sqrt(((_340 * _340) + (_341 * _341)) + (_344 * _344));
        float _357 = (1.0 - (cbSceneParam._m0[77u].w / _328)) * _354;
        float _363 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _365 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _489;
        if (abs((_342 - _346) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _489 = ((((_347 > 0.0) ? exp2(_363 * _347) : (2.0 - exp2(_365 * _347))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _357;
        }
        else
        {
            float _444 = 1.0 / cbSceneParam._m0[80u].x;
            float _445 = isnan(_348) ? _347 : (isnan(_347) ? _348 : max(_347, _348));
            float _446 = isnan(_348) ? _347 : (isnan(_347) ? _348 : min(_347, _348));
            float _455 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : min(_445, 0.0));
            float _456 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : min(_446, 0.0));
            _489 = ((abs(_354 / _342) * cbSceneParam._m0[80u].y) * ((((_455 - _456) * 2.0) - ((exp2(_363 * (isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0)))) - exp2(_363 * (isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0))))) * _444)) - ((exp2(_365 * _455) - exp2(_365 * _456)) * _444))) + (_357 * cbSceneParam._m0[80u].z);
        }
        vec4 _491 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_263, _264, 1.0), 0.0);
        float _500 = exp2((_489 * (-1.44269502162933349609375)) * (1.0 - _491.w));
        float _501 = log2(_500);
        float _517 = log2(_285);
        _367 = (exp2(_517 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_501 * cbSceneParam._m0[78u].x)) * _491.x) / cbSceneParam._m0[78u].x)) + _282;
        _369 = (exp2(_517 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_501 * cbSceneParam._m0[78u].y)) * _491.y) / cbSceneParam._m0[78u].y)) + _283;
        _371 = (exp2(_517 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_501 * cbSceneParam._m0[78u].z)) * _491.z) / cbSceneParam._m0[78u].z)) + _284;
        _373 = _500 * _285;
    }
    else
    {
        _367 = _282;
        _369 = _283;
        _371 = _284;
        _373 = _285;
    }
    bool _527;
    vec4 _383;
    vec4 _407;
    float _409;
    float _414;
    float _415;
    float _416;
    float _417;
    bool _428;
    for (;;)
    {
        _383 = cbMatDynParam._m0[0u];
        float _385 = roundEven(_383.y);
        bool _386 = _385 == 3.0;
        float _388 = log2(_373);
        float _395 = _250 * exp2(_388 * cbSceneParam._m0[78u].x);
        float _396 = _251 * exp2(_388 * cbSceneParam._m0[78u].y);
        float _397 = _252 * exp2(_388 * cbSceneParam._m0[78u].z);
        float _404 = _215 + (-0.5);
        _407 = cbMtdParam._m0[1u];
        _409 = _407.y * _404;
        float _413 = (_385 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _414 = _413 * (_386 ? _395 : (_395 + (cbSceneParam._m0[72u].w * _367)));
        _415 = _413 * (_386 ? _396 : (_396 + (cbSceneParam._m0[72u].w * _369)));
        _416 = _413 * (_386 ? _397 : (_397 + (cbSceneParam._m0[72u].w * _371)));
        _417 = _404 * 0.999000012874603271484375;
        _428 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_428)
        {
            if ((cbInstanceData._m0[_241 + 7u].x + _417) < 0.5)
            {
                _527 = true;
                break;
            }
        }
        uint _481 = _243 + uint(_383.w);
        if ((cbInstanceData._m0[_481].w < 1.0) && ((cbInstanceData._m0[_481].w + _417) < 0.5))
        {
            _527 = true;
            break;
        }
        if ((_409 + _128) < _407.x)
        {
            _527 = true;
            break;
        }
        _527 = false;
        break;
    }
    float _532;
    if (_527)
    {
        discard_state = true;
        _532 = 0.0;
    }
    else
    {
        _532 = _257;
    }
    SV_Target.x = _414;
    SV_Target.y = _415;
    SV_Target.z = _416;
    SV_Target.w = _532;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _257;
    discard_exit();
}


