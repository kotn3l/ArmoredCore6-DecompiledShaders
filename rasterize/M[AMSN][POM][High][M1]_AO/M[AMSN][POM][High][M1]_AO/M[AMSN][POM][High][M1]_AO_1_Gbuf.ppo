#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _137 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _138 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _143 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _144 = _143 * _136;
    float _145 = _143 * _137;
    float _146 = _143 * _138;
    float _150 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _151 = _150 * NORMAL.x;
    float _152 = _150 * NORMAL.y;
    float _153 = _150 * NORMAL.z;
    float _157 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _158 = _157 * TANGENT.x;
    float _159 = _157 * TANGENT.y;
    float _160 = _157 * TANGENT.z;
    float _165;
    float _166;
    float _167;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _165 = (-0.0) - _151;
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
    }
    else
    {
        _165 = _151;
        _166 = _152;
        _167 = _153;
    }
    float _211 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _221 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _211);
    float _222 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _211);
    float _223 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _211);
    float _232 = dot(vec3(_221, _222, _223), vec3(_144, _145, _146));
    float _235 = dot(vec3(_221, _222, _223), vec3(_158, _159, _160));
    float _238 = dot(vec3(_221, _222, _223), vec3(_165, _166, _167));
    float _241 = (-0.0) - _232;
    float _242 = (-0.0) - _235;
    float _252 = (cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z;
    float _253 = (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w;
    float _254 = (-0.0) - _221;
    float _255 = (-0.0) - _222;
    float _256 = (-0.0) - _223;
    float _261 = inversesqrt(dot(vec2(_241, _242), vec2(_241, _242)));
    float _265 = _238 * _238;
    float _267 = sqrt(((_235 * _235) + (_232 * _232)) + _265);
    float _271 = sqrt((_267 * _267) - _265) / ((-0.0) - _238);
    float _274 = ((cbMtdParam._m0[10u].y * _241) * _261) * _271;
    float _277 = ((cbMtdParam._m0[10u].y * _242) * _261) * _271;
    float _281 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _285 = inversesqrt(dot(vec3(_165, _166, _167), vec3(_165, _166, _167)));
    float _286 = dFdxCoarse(_252);
    float _287 = dFdxCoarse(_253);
    float _288 = dFdyCoarse(_252);
    float _289 = dFdyCoarse(_253);
    uvec2 _297 = uvec2(textureSize(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3, int(0u)));
    float _301 = float(_297.y) * (abs(_289) + abs(_287));
    float _303 = float(_297.x) * (abs(_288) + abs(_286));
    float _305 = log2(isnan(_301) ? _303 : (isnan(_303) ? _301 : max(_303, _301)));
    float _306 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _309;
    float _312;
    if (!(_306 <= 4.0))
    {
        _309 = _252;
        _312 = _253;
    }
    else
    {
        uint _498 = uint(min(int(uint(int(16.0 - (abs(dot(vec3(_281 * _254, _281 * _255, _281 * _256), vec3(_285 * _165, _285 * _166, _285 * _167))) * 12.0)))), int(32u)));
        float _501 = 1.0 / float(int(_498));
        float _502 = _501 * _274;
        float _503 = _501 * _277;
        float _505;
        float _507;
        float _509;
        float _511;
        if (int(_498) > int(0u))
        {
            float _506;
            float _508;
            float _510;
            float _512;
            uint _555;
            float _525 = 1.0;
            uint _527 = 0u;
            float _529 = _252;
            float _531 = _253;
            float _533 = 1.0;
            float _535 = 0.0;
            float _536 = 0.0;
            float _537 = 0.0;
            float _538 = 0.0;
            float _526;
            float _530;
            float _532;
            float _534;
            bool _550;
            for (;;)
            {
                _530 = _529 - _502;
                _532 = _531 - _503;
                _526 = dot(vec4(textureGrad(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3, SS_WrapLinear), vec2(_530, _532), vec2(_286, _287), vec2(_288, _289))), vec4(1.0, 0.0, 0.0, 0.0));
                _534 = _533 - _501;
                _550 = _526 > _534;
                uint frontier_phi_10_pred;
                float frontier_phi_10_pred_1;
                float frontier_phi_10_pred_2;
                float frontier_phi_10_pred_3;
                float frontier_phi_10_pred_4;
                if (_550)
                {
                    frontier_phi_10_pred = _498;
                    frontier_phi_10_pred_1 = _534;
                    frontier_phi_10_pred_2 = _526;
                    frontier_phi_10_pred_3 = _533;
                    frontier_phi_10_pred_4 = _525;
                }
                else
                {
                    frontier_phi_10_pred = _527;
                    frontier_phi_10_pred_1 = _535;
                    frontier_phi_10_pred_2 = _536;
                    frontier_phi_10_pred_3 = _537;
                    frontier_phi_10_pred_4 = _538;
                }
                _555 = frontier_phi_10_pred;
                _506 = frontier_phi_10_pred_1;
                _508 = frontier_phi_10_pred_2;
                _510 = frontier_phi_10_pred_3;
                _512 = frontier_phi_10_pred_4;
                uint _528 = _555 + 1u;
                if (int(_528) < int(_498))
                {
                    _525 = _526;
                    _527 = _528;
                    _529 = _530;
                    _531 = _532;
                    _533 = _534;
                    _535 = _506;
                    _536 = _508;
                    _537 = _510;
                    _538 = _512;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _505 = _506;
            _507 = _508;
            _509 = _510;
            _511 = _512;
        }
        else
        {
            _505 = 0.0;
            _507 = 0.0;
            _509 = 0.0;
            _511 = 0.0;
        }
        float _513 = _509 - _511;
        float _514 = _505 - _507;
        float _520 = 1.0 - (((_513 * _505) - (_509 * _514)) / (_513 - _514));
        float _521 = _520 * _274;
        float _522 = _520 * _277;
        float _311 = _252 - _521;
        float _314 = _253 - _522;
        float frontier_phi_3_6_ladder;
        float frontier_phi_3_6_ladder_1;
        if (_306 > 3.0)
        {
            float _552 = _306 - trunc(_306);
            frontier_phi_3_6_ladder = (_552 * _521) + _311;
            frontier_phi_3_6_ladder_1 = (_552 * _522) + _314;
        }
        else
        {
            frontier_phi_3_6_ladder = _311;
            frontier_phi_3_6_ladder_1 = _314;
        }
        _309 = frontier_phi_3_6_ladder;
        _312 = frontier_phi_3_6_ladder_1;
    }
    float _319 = ((_309 - _252) / cbTextureTilingScale._m0[2u].x) + TEXCOORD.x;
    float _320 = ((_312 - _253) / cbTextureTilingScale._m0[2u].y) + TEXCOORD.y;
    vec4 _333 = texture(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _319) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _320) + cbTextureTilingScale._m0[3u].w));
    float _338 = _333.x * cbMtdParam._m0[9u].x;
    float _339 = _333.y * cbMtdParam._m0[9u].y;
    float _340 = _333.z * cbMtdParam._m0[9u].z;
    vec4 _352 = texture(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _319) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _320) + cbTextureTilingScale._m0[1u].w));
    float _356 = _352.z;
    float _361 = (_352.x * 2.0) + (-1.0);
    float _363 = (_352.y * 2.0) + (-1.0);
    float _364 = dot(vec2(_361, _363), vec2(_361, _363));
    float _590 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _370 = sqrt(1.0 - (isnan(1.0) ? _590 : (isnan(_590) ? 1.0 : min(_590, 1.0))));
    float _373 = fma(_370, _165, fma(_363, _158, _361 * _144));
    float _376 = fma(_370, _166, fma(_363, _159, _361 * _145));
    float _379 = fma(_370, _167, fma(_363, _160, _361 * _146));
    float _383 = inversesqrt(dot(vec3(_373, _376, _379), vec3(_373, _376, _379)));
    float _384 = _383 * _373;
    float _385 = _383 * _376;
    float _386 = _383 * _379;
    float _390 = cbMtdParam._m0[10u].x + _352.w;
    float _394 = inversesqrt(dot(vec3(_384, _385, _386), vec3(_384, _385, _386)));
    float _601 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _612 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _623 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _634 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _645 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    uint _414 = uint(roundEven(NORMAL.w)) * 13u;
    uint _417 = (_414 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _423 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _623 : (isnan(_623) ? 1.0 : min(_623, 1.0)))) * cbInstanceData._m0[_417].x;
    float _424 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _634 : (isnan(_634) ? 1.0 : min(_634, 1.0)))) * cbInstanceData._m0[_417].y;
    float _425 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _645 : (isnan(_645) ? 1.0 : min(_645, 1.0)))) * cbInstanceData._m0[_417].z;
    float _656 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _667 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _678 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    uint _430 = _414 + 6u;
    bool _459 = cbMtdParam._m0[1u].z != 0.0;
    float _460 = _459 ? cbInstanceData._m0[_430].w : 0.0;
    SV_Target.x = ((_384 * 0.5) * _394) + 0.500488758087158203125;
    SV_Target.y = ((_385 * 0.5) * _394) + 0.500488758087158203125;
    SV_Target.z = ((_386 * 0.5) * _394) + 0.500488758087158203125;
    SV_Target.w = _460;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _459 ? cbInstanceData._m0[_430].w : ((isnan(1.0) ? _612 : (isnan(_612) ? 1.0 : min(_612, 1.0))) * TEXCOORD.z);
    SV_Target_2.x = isnan(1.0) ? _656 : (isnan(_656) ? 1.0 : min(_656, 1.0));
    SV_Target_2.y = isnan(1.0) ? _667 : (isnan(_667) ? 1.0 : min(_667, 1.0));
    SV_Target_2.z = isnan(1.0) ? _678 : (isnan(_678) ? 1.0 : min(_678, 1.0));
    SV_Target_2.w = _459 ? cbInstanceData._m0[_430].w : (float(floatBitsToUint(cbInstanceData._m0[_414 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _460;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _460;
}


