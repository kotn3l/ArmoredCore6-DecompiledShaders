#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_POM_High_M1_AO_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _159 = _158 * _151;
    float _160 = _158 * _152;
    float _161 = _158 * _153;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173 = _172 * TANGENT.x;
    float _174 = _172 * TANGENT.y;
    float _175 = _172 * TANGENT.z;
    float _180;
    float _181;
    float _182;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _180 = (-0.0) - _166;
        _181 = (-0.0) - _167;
        _182 = (-0.0) - _168;
    }
    else
    {
        _180 = _166;
        _181 = _167;
        _182 = _168;
    }
    float _226 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _236 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _226);
    float _237 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _226);
    float _238 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _226);
    float _247 = dot(vec3(_236, _237, _238), vec3(_159, _160, _161));
    float _250 = dot(vec3(_236, _237, _238), vec3(_173, _174, _175));
    float _253 = dot(vec3(_236, _237, _238), vec3(_180, _181, _182));
    float _256 = (-0.0) - _247;
    float _257 = (-0.0) - _250;
    float _267 = (cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z;
    float _268 = (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w;
    float _269 = (-0.0) - _236;
    float _270 = (-0.0) - _237;
    float _271 = (-0.0) - _238;
    float _276 = inversesqrt(dot(vec2(_256, _257), vec2(_256, _257)));
    float _280 = _253 * _253;
    float _282 = sqrt(((_250 * _250) + (_247 * _247)) + _280);
    float _286 = sqrt((_282 * _282) - _280) / ((-0.0) - _253);
    float _289 = ((cbMtdParam._m0[10u].y * _256) * _276) * _286;
    float _292 = ((cbMtdParam._m0[10u].y * _257) * _276) * _286;
    float _296 = inversesqrt(dot(vec3(_269, _270, _271), vec3(_269, _270, _271)));
    float _300 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _301 = dFdxCoarse(_267);
    float _302 = dFdxCoarse(_268);
    float _303 = dFdyCoarse(_267);
    float _304 = dFdyCoarse(_268);
    uvec2 _312 = uvec2(textureSize(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3, int(0u)));
    float _316 = float(_312.y) * (abs(_304) + abs(_302));
    float _318 = float(_312.x) * (abs(_303) + abs(_301));
    float _320 = log2(isnan(_316) ? _318 : (isnan(_318) ? _316 : max(_318, _316)));
    float _321 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _324;
    float _327;
    if (!(_321 <= 4.0))
    {
        _324 = _267;
        _327 = _268;
    }
    else
    {
        uint _512 = uint(min(int(uint(int(16.0 - (abs(dot(vec3(_296 * _269, _296 * _270, _296 * _271), vec3(_300 * _180, _300 * _181, _300 * _182))) * 12.0)))), int(32u)));
        float _515 = 1.0 / float(int(_512));
        float _516 = _515 * _289;
        float _517 = _515 * _292;
        float _599;
        float _601;
        float _603;
        float _605;
        if (int(_512) > int(0u))
        {
            float _600;
            float _602;
            float _604;
            float _606;
            uint _670;
            float _635 = 1.0;
            uint _637 = 0u;
            float _639 = _267;
            float _641 = _268;
            float _643 = 1.0;
            float _645 = 0.0;
            float _646 = 0.0;
            float _647 = 0.0;
            float _648 = 0.0;
            float _636;
            float _640;
            float _642;
            float _644;
            bool _660;
            for (;;)
            {
                _640 = _639 - _516;
                _642 = _641 - _517;
                _636 = dot(vec4(textureGrad(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_3, SS_WrapLinear), vec2(_640, _642), vec2(_301, _302), vec2(_303, _304))), vec4(1.0, 0.0, 0.0, 0.0));
                _644 = _643 - _515;
                _660 = _636 > _644;
                uint frontier_phi_17_pred;
                float frontier_phi_17_pred_1;
                float frontier_phi_17_pred_2;
                float frontier_phi_17_pred_3;
                float frontier_phi_17_pred_4;
                if (_660)
                {
                    frontier_phi_17_pred = _512;
                    frontier_phi_17_pred_1 = _644;
                    frontier_phi_17_pred_2 = _636;
                    frontier_phi_17_pred_3 = _643;
                    frontier_phi_17_pred_4 = _635;
                }
                else
                {
                    frontier_phi_17_pred = _637;
                    frontier_phi_17_pred_1 = _645;
                    frontier_phi_17_pred_2 = _646;
                    frontier_phi_17_pred_3 = _647;
                    frontier_phi_17_pred_4 = _648;
                }
                _670 = frontier_phi_17_pred;
                _600 = frontier_phi_17_pred_1;
                _602 = frontier_phi_17_pred_2;
                _604 = frontier_phi_17_pred_3;
                _606 = frontier_phi_17_pred_4;
                uint _638 = _670 + 1u;
                if (int(_638) < int(_512))
                {
                    _635 = _636;
                    _637 = _638;
                    _639 = _640;
                    _641 = _642;
                    _643 = _644;
                    _645 = _600;
                    _646 = _602;
                    _647 = _604;
                    _648 = _606;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _599 = _600;
            _601 = _602;
            _603 = _604;
            _605 = _606;
        }
        else
        {
            _599 = 0.0;
            _601 = 0.0;
            _603 = 0.0;
            _605 = 0.0;
        }
        float _607 = _603 - _605;
        float _608 = _599 - _601;
        float _614 = 1.0 - (((_607 * _599) - (_603 * _608)) / (_607 - _608));
        float _615 = _614 * _289;
        float _616 = _614 * _292;
        float _326 = _267 - _615;
        float _329 = _268 - _616;
        float frontier_phi_3_8_ladder;
        float frontier_phi_3_8_ladder_1;
        if (_321 > 3.0)
        {
            float _662 = _321 - trunc(_321);
            frontier_phi_3_8_ladder = (_662 * _615) + _326;
            frontier_phi_3_8_ladder_1 = (_662 * _616) + _329;
        }
        else
        {
            frontier_phi_3_8_ladder = _326;
            frontier_phi_3_8_ladder_1 = _329;
        }
        _324 = frontier_phi_3_8_ladder;
        _327 = frontier_phi_3_8_ladder_1;
    }
    float _334 = ((_324 - _267) / cbTextureTilingScale._m0[2u].x) + TEXCOORD.x;
    float _335 = ((_327 - _268) / cbTextureTilingScale._m0[2u].y) + TEXCOORD.y;
    vec4 _348 = texture(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _334) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _335) + cbTextureTilingScale._m0[3u].w));
    float _353 = _348.x * cbMtdParam._m0[9u].x;
    float _354 = _348.y * cbMtdParam._m0[9u].y;
    float _355 = _348.z * cbMtdParam._m0[9u].z;
    vec4 _367 = texture(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _369 = _367.x;
    vec4 _381 = texture(sampler2D(M_AMSN_POM_High_M1_AO_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _334) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _335) + cbTextureTilingScale._m0[1u].w));
    float _385 = _381.z;
    float _390 = (_381.x * 2.0) + (-1.0);
    float _392 = (_381.y * 2.0) + (-1.0);
    float _393 = dot(vec2(_390, _392), vec2(_390, _392));
    float _771 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _399 = sqrt(1.0 - (isnan(1.0) ? _771 : (isnan(_771) ? 1.0 : min(_771, 1.0))));
    float _402 = fma(_399, _180, fma(_392, _173, _390 * _159));
    float _405 = fma(_399, _181, fma(_392, _174, _390 * _160));
    float _408 = fma(_399, _182, fma(_392, _175, _390 * _161));
    float _412 = inversesqrt(dot(vec3(_402, _405, _408), vec3(_402, _405, _408)));
    float _413 = _412 * _402;
    float _414 = _412 * _405;
    float _415 = _412 * _408;
    float _419 = cbMtdParam._m0[10u].x + _381.w;
    float _423 = inversesqrt(dot(vec3(_413, _414, _415), vec3(_413, _414, _415)));
    float _782 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _793 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _425 = isnan(1.0) ? _793 : (isnan(_793) ? 1.0 : min(_793, 1.0));
    float _804 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _426 = isnan(1.0) ? _804 : (isnan(_804) ? 1.0 : min(_804, 1.0));
    float _815 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _427 = isnan(1.0) ? _815 : (isnan(_815) ? 1.0 : min(_815, 1.0));
    float _826 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _428 = isnan(1.0) ? _826 : (isnan(_826) ? 1.0 : min(_826, 1.0));
    float _837 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    uint _431 = uint(roundEven(NORMAL.w));
    float _471 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _480 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _471);
    float _481 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _471);
    float _482 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _471);
    vec4 _487 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _489 = _487.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _574 = sqrt(((_480 * _480) + (_481 * _481)) + (_482 * _482));
        float _581 = (cbMatDynParam._m0[5u].x * _574) + cbMatDynParam._m0[5u].y;
        float _848 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        float _582 = isnan(1.0) ? _848 : (isnan(_848) ? 1.0 : min(_848, 1.0));
        float _586 = (cbMatDynParam._m0[5u].z * _574) + cbMatDynParam._m0[5u].w;
        float _859 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _859 : (isnan(_859) ? 1.0 : min(_859, 1.0))) - _582)) + _582) < ((_489 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _665;
    uint _531;
    vec4 _536;
    float _543;
    float _544;
    float _545;
    float _546;
    float _550;
    vec4 _554;
    float _556;
    float _557;
    bool _568;
    for (;;)
    {
        _531 = _431 * 13u;
        _536 = cbInstanceData._m0[(_531 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _540 = (cbMtdParam._m0[0u].x * _426) * _536.x;
        float _541 = (cbMtdParam._m0[0u].y * _427) * _536.y;
        float _542 = (cbMtdParam._m0[0u].z * _428) * _536.z;
        float _870 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
        _543 = isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0));
        float _881 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
        _544 = isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0));
        float _892 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
        _545 = isnan(1.0) ? _892 : (isnan(_892) ? 1.0 : min(_892, 1.0));
        _546 = _425 * TEXCOORD.z;
        _550 = cbInstanceData._m0[_531 + 6u].w;
        float _551 = _489 + (-0.5);
        _554 = cbMtdParam._m0[1u];
        _556 = _554.y * _551;
        _557 = _551 * 0.999000012874603271484375;
        _568 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_568)
        {
            if ((cbInstanceData._m0[_531 + 7u].x + _557) < 0.5)
            {
                _665 = true;
                break;
            }
        }
        if ((_536.w < 1.0) && ((_536.w + _557) < 0.5))
        {
            _665 = true;
            break;
        }
        if ((_556 + 1.0) < _554.x)
        {
            _665 = true;
            break;
        }
        _665 = false;
        break;
    }
    if (_665)
    {
        discard_state = true;
    }
    bool _693 = cbMtdParam._m0[1u].z != 0.0;
    float _694 = _693 ? _550 : 0.0;
    SV_Target.x = ((_413 * 0.5) * _423) + 0.500488758087158203125;
    SV_Target.y = ((_414 * 0.5) * _423) + 0.500488758087158203125;
    SV_Target.z = ((_415 * 0.5) * _423) + 0.500488758087158203125;
    SV_Target.w = _694;
    SV_Target_1.x = isnan(1.0) ? _837 : (isnan(_837) ? 1.0 : min(_837, 1.0));
    SV_Target_1.y = isnan(1.0) ? _782 : (isnan(_782) ? 1.0 : min(_782, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _693 ? _550 : _546;
    SV_Target_2.x = _543;
    SV_Target_2.y = _544;
    SV_Target_2.z = _545;
    SV_Target_2.w = _693 ? _550 : (float(floatBitsToUint(cbInstanceData._m0[_531 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _694;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _694;
    discard_exit();
}


