#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_9 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _161 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _163 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _164 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _175 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _185 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _187 = texelFetch(g_InstanceIndexBuffer, int(_185));
    uint _188 = _187.x;
    precise float _189 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _194 = isnan(_189) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _189 : max(0.001000000047497451305389404296875, _189));
    precise float _196 = BLENDWEIGHT.x / _194;
    precise float _197 = BLENDWEIGHT.y / _194;
    precise float _198 = BLENDWEIGHT.z / _194;
    precise float _199 = BLENDWEIGHT.w / _194;
    uint _201 = _188 * 13u;
    uvec4 _206 = floatBitsToUint(cbInstanceData._m0[_201 + 4u]);
    uint _207 = _206.x;
    uint _209 = (_207 + uint(float(BLENDINDICES.x))) * 3u;
    uint _216 = _209 + 1u;
    uint _223 = _209 + 2u;
    precise float _230 = _196 * cbObjMatrix._m0[_209].x;
    precise float _231 = _196 * cbObjMatrix._m0[_216].x;
    precise float _232 = _196 * cbObjMatrix._m0[_223].x;
    precise float _233 = _196 * cbObjMatrix._m0[_209].y;
    precise float _234 = _196 * cbObjMatrix._m0[_216].y;
    precise float _235 = _196 * cbObjMatrix._m0[_223].y;
    precise float _236 = _196 * cbObjMatrix._m0[_209].z;
    precise float _237 = _196 * cbObjMatrix._m0[_216].z;
    precise float _238 = _196 * cbObjMatrix._m0[_223].z;
    precise float _239 = _196 * cbObjMatrix._m0[_209].w;
    precise float _240 = _196 * cbObjMatrix._m0[_216].w;
    precise float _241 = _196 * cbObjMatrix._m0[_223].w;
    uint _244 = (_207 + uint(float(BLENDINDICES.y))) * 3u;
    uint _251 = _244 + 1u;
    uint _258 = _244 + 2u;
    precise float _265 = _197 * cbObjMatrix._m0[_244].x;
    precise float _266 = _197 * cbObjMatrix._m0[_251].x;
    precise float _267 = _197 * cbObjMatrix._m0[_258].x;
    precise float _268 = _197 * cbObjMatrix._m0[_244].y;
    precise float _269 = _197 * cbObjMatrix._m0[_251].y;
    precise float _270 = _197 * cbObjMatrix._m0[_258].y;
    precise float _271 = _197 * cbObjMatrix._m0[_244].z;
    precise float _272 = _197 * cbObjMatrix._m0[_251].z;
    precise float _273 = _197 * cbObjMatrix._m0[_258].z;
    precise float _274 = _197 * cbObjMatrix._m0[_244].w;
    precise float _275 = _197 * cbObjMatrix._m0[_251].w;
    precise float _276 = _197 * cbObjMatrix._m0[_258].w;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    uint _291 = (_207 + uint(float(BLENDINDICES.z))) * 3u;
    uint _298 = _291 + 1u;
    uint _305 = _291 + 2u;
    precise float _312 = _198 * cbObjMatrix._m0[_291].x;
    precise float _313 = _198 * cbObjMatrix._m0[_298].x;
    precise float _314 = _198 * cbObjMatrix._m0[_305].x;
    precise float _315 = _198 * cbObjMatrix._m0[_291].y;
    precise float _316 = _198 * cbObjMatrix._m0[_298].y;
    precise float _317 = _198 * cbObjMatrix._m0[_305].y;
    precise float _318 = _198 * cbObjMatrix._m0[_291].z;
    precise float _319 = _198 * cbObjMatrix._m0[_298].z;
    precise float _320 = _198 * cbObjMatrix._m0[_305].z;
    precise float _321 = _198 * cbObjMatrix._m0[_291].w;
    precise float _322 = _198 * cbObjMatrix._m0[_298].w;
    precise float _323 = _198 * cbObjMatrix._m0[_305].w;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    uint _338 = (_207 + uint(float(BLENDINDICES.w))) * 3u;
    uint _345 = _338 + 1u;
    uint _352 = _338 + 2u;
    precise float _359 = _199 * cbObjMatrix._m0[_338].x;
    precise float _360 = _199 * cbObjMatrix._m0[_345].x;
    precise float _361 = _199 * cbObjMatrix._m0[_352].x;
    precise float _362 = _199 * cbObjMatrix._m0[_338].y;
    precise float _363 = _199 * cbObjMatrix._m0[_345].y;
    precise float _364 = _199 * cbObjMatrix._m0[_352].y;
    precise float _365 = _199 * cbObjMatrix._m0[_338].z;
    precise float _366 = _199 * cbObjMatrix._m0[_345].z;
    precise float _367 = _199 * cbObjMatrix._m0[_352].z;
    precise float _368 = _199 * cbObjMatrix._m0[_338].w;
    precise float _369 = _199 * cbObjMatrix._m0[_345].w;
    precise float _370 = _199 * cbObjMatrix._m0[_352].w;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = POSITION.x * _371;
    precise float _384 = POSITION.y * _374;
    precise float _385 = _384 + _383;
    precise float _386 = POSITION.z * _377;
    precise float _387 = _386 + _385;
    precise float _388 = 1.0 * _380;
    precise float _389 = _388 + _387;
    precise float _390 = POSITION.x * _372;
    precise float _391 = POSITION.y * _375;
    precise float _392 = _391 + _390;
    precise float _393 = POSITION.z * _378;
    precise float _394 = _393 + _392;
    precise float _395 = 1.0 * _381;
    precise float _396 = _395 + _394;
    precise float _397 = POSITION.x * _373;
    precise float _398 = POSITION.y * _376;
    precise float _399 = _398 + _397;
    precise float _400 = POSITION.z * _379;
    precise float _401 = _400 + _399;
    precise float _402 = 1.0 * _382;
    precise float _403 = _402 + _401;
    float _409 = cbSceneParam._m0[3u].x - _389;
    float _410 = cbSceneParam._m0[3u].y - _396;
    float _411 = cbSceneParam._m0[3u].z - _403;
    precise float _437 = _389 - cbSceneParam._m0[3u].x;
    precise float _438 = _396 - cbSceneParam._m0[3u].y;
    precise float _439 = _403 - cbSceneParam._m0[3u].z;
    precise float _467 = _437 * cbSceneParam._m0[24u].x;
    precise float _468 = _438 * cbSceneParam._m0[24u].y;
    precise float _469 = _468 + _467;
    precise float _470 = _439 * cbSceneParam._m0[24u].z;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _473 = _472 + _471;
    precise float _474 = _437 * cbSceneParam._m0[25u].x;
    precise float _475 = _438 * cbSceneParam._m0[25u].y;
    precise float _476 = _475 + _474;
    precise float _477 = _439 * cbSceneParam._m0[25u].z;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _480 = _479 + _478;
    precise float _481 = _437 * cbSceneParam._m0[26u].x;
    precise float _482 = _438 * cbSceneParam._m0[26u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _439 * cbSceneParam._m0[26u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _437 * cbSceneParam._m0[27u].x;
    precise float _489 = _438 * cbSceneParam._m0[27u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _439 * cbSceneParam._m0[27u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _494 = _493 + _492;
    gl_Position.x = _473;
    gl_Position.y = _480;
    gl_Position.z = _487;
    gl_Position.w = _494;
    NORMAL_1.x = fma(_164, _377, fma(_163, _374, _371 * _161));
    NORMAL_1.y = fma(_164, _378, fma(_163, _375, _372 * _161));
    NORMAL_1.z = fma(_164, _379, fma(_163, _376, _373 * _161));
    NORMAL_1.w = float(_188);
    TANGENT_1.x = fma(_175, _377, fma(_174, _374, _371 * _173));
    TANGENT_1.y = fma(_175, _378, fma(_174, _375, _372 * _173));
    TANGENT_1.z = fma(_175, _379, fma(_174, _376, _373 * _173));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_9 = sqrt(((_409 * _409) + (_410 * _410)) + (_411 * _411));
    gl_ClipDistance[0u] = dot(vec4(_473, _480, _487, _494), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_473, _480, _487, _494), vec4(cbInstanceData._m0[_201 + 3u]));
}


