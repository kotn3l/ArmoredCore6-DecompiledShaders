#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec2 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_1_1;
layout(location = 3, component = 2) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_11 = 0.0;
    float _181 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _205 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _207 = texelFetch(g_InstanceIndexBuffer, int(_205));
    uint _208 = _207.x;
    precise float _209 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _214 = isnan(_209) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _209 : max(0.001000000047497451305389404296875, _209));
    precise float _216 = BLENDWEIGHT.x / _214;
    precise float _217 = BLENDWEIGHT.y / _214;
    precise float _218 = BLENDWEIGHT.z / _214;
    precise float _219 = BLENDWEIGHT.w / _214;
    uvec4 _226 = floatBitsToUint(cbInstanceData._m0[(_208 * 13u) + 4u]);
    uint _227 = _226.x;
    uint _229 = (_227 + uint(float(BLENDINDICES.x))) * 3u;
    uint _236 = _229 + 1u;
    uint _243 = _229 + 2u;
    precise float _250 = _216 * cbObjMatrix._m0[_229].x;
    precise float _251 = _216 * cbObjMatrix._m0[_236].x;
    precise float _252 = _216 * cbObjMatrix._m0[_243].x;
    precise float _253 = _216 * cbObjMatrix._m0[_229].y;
    precise float _254 = _216 * cbObjMatrix._m0[_236].y;
    precise float _255 = _216 * cbObjMatrix._m0[_243].y;
    precise float _256 = _216 * cbObjMatrix._m0[_229].z;
    precise float _257 = _216 * cbObjMatrix._m0[_236].z;
    precise float _258 = _216 * cbObjMatrix._m0[_243].z;
    precise float _259 = _216 * cbObjMatrix._m0[_229].w;
    precise float _260 = _216 * cbObjMatrix._m0[_236].w;
    precise float _261 = _216 * cbObjMatrix._m0[_243].w;
    uint _264 = (_227 + uint(float(BLENDINDICES.y))) * 3u;
    uint _271 = _264 + 1u;
    uint _278 = _264 + 2u;
    precise float _285 = _217 * cbObjMatrix._m0[_264].x;
    precise float _286 = _217 * cbObjMatrix._m0[_271].x;
    precise float _287 = _217 * cbObjMatrix._m0[_278].x;
    precise float _288 = _217 * cbObjMatrix._m0[_264].y;
    precise float _289 = _217 * cbObjMatrix._m0[_271].y;
    precise float _290 = _217 * cbObjMatrix._m0[_278].y;
    precise float _291 = _217 * cbObjMatrix._m0[_264].z;
    precise float _292 = _217 * cbObjMatrix._m0[_271].z;
    precise float _293 = _217 * cbObjMatrix._m0[_278].z;
    precise float _294 = _217 * cbObjMatrix._m0[_264].w;
    precise float _295 = _217 * cbObjMatrix._m0[_271].w;
    precise float _296 = _217 * cbObjMatrix._m0[_278].w;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    uint _311 = (_227 + uint(float(BLENDINDICES.z))) * 3u;
    uint _318 = _311 + 1u;
    uint _325 = _311 + 2u;
    precise float _332 = _218 * cbObjMatrix._m0[_311].x;
    precise float _333 = _218 * cbObjMatrix._m0[_318].x;
    precise float _334 = _218 * cbObjMatrix._m0[_325].x;
    precise float _335 = _218 * cbObjMatrix._m0[_311].y;
    precise float _336 = _218 * cbObjMatrix._m0[_318].y;
    precise float _337 = _218 * cbObjMatrix._m0[_325].y;
    precise float _338 = _218 * cbObjMatrix._m0[_311].z;
    precise float _339 = _218 * cbObjMatrix._m0[_318].z;
    precise float _340 = _218 * cbObjMatrix._m0[_325].z;
    precise float _341 = _218 * cbObjMatrix._m0[_311].w;
    precise float _342 = _218 * cbObjMatrix._m0[_318].w;
    precise float _343 = _218 * cbObjMatrix._m0[_325].w;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    uint _358 = (_227 + uint(float(BLENDINDICES.w))) * 3u;
    uint _365 = _358 + 1u;
    uint _372 = _358 + 2u;
    precise float _379 = _219 * cbObjMatrix._m0[_358].x;
    precise float _380 = _219 * cbObjMatrix._m0[_365].x;
    precise float _381 = _219 * cbObjMatrix._m0[_372].x;
    precise float _382 = _219 * cbObjMatrix._m0[_358].y;
    precise float _383 = _219 * cbObjMatrix._m0[_365].y;
    precise float _384 = _219 * cbObjMatrix._m0[_372].y;
    precise float _385 = _219 * cbObjMatrix._m0[_358].z;
    precise float _386 = _219 * cbObjMatrix._m0[_365].z;
    precise float _387 = _219 * cbObjMatrix._m0[_372].z;
    precise float _388 = _219 * cbObjMatrix._m0[_358].w;
    precise float _389 = _219 * cbObjMatrix._m0[_365].w;
    precise float _390 = _219 * cbObjMatrix._m0[_372].w;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = POSITION.x * _391;
    precise float _404 = POSITION.y * _394;
    precise float _405 = _404 + _403;
    precise float _406 = POSITION.z * _397;
    precise float _407 = _406 + _405;
    precise float _408 = 1.0 * _400;
    precise float _409 = _408 + _407;
    precise float _410 = POSITION.x * _392;
    precise float _411 = POSITION.y * _395;
    precise float _412 = _411 + _410;
    precise float _413 = POSITION.z * _398;
    precise float _414 = _413 + _412;
    precise float _415 = 1.0 * _401;
    precise float _416 = _415 + _414;
    precise float _417 = POSITION.x * _393;
    precise float _418 = POSITION.y * _396;
    precise float _419 = _418 + _417;
    precise float _420 = POSITION.z * _399;
    precise float _421 = _420 + _419;
    precise float _422 = 1.0 * _402;
    precise float _423 = _422 + _421;
    float _429 = cbSceneParam._m0[3u].x - _409;
    float _430 = cbSceneParam._m0[3u].y - _416;
    float _431 = cbSceneParam._m0[3u].z - _423;
    precise float _457 = _409 - cbSceneParam._m0[3u].x;
    precise float _458 = _416 - cbSceneParam._m0[3u].y;
    precise float _459 = _423 - cbSceneParam._m0[3u].z;
    precise float _487 = _457 * cbSceneParam._m0[24u].x;
    precise float _488 = _458 * cbSceneParam._m0[24u].y;
    precise float _489 = _488 + _487;
    precise float _490 = _459 * cbSceneParam._m0[24u].z;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _493 = _492 + _491;
    precise float _494 = _457 * cbSceneParam._m0[25u].x;
    precise float _495 = _458 * cbSceneParam._m0[25u].y;
    precise float _496 = _495 + _494;
    precise float _497 = _459 * cbSceneParam._m0[25u].z;
    precise float _498 = _497 + _496;
    precise float _499 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _500 = _499 + _498;
    precise float _501 = _457 * cbSceneParam._m0[26u].x;
    precise float _502 = _458 * cbSceneParam._m0[26u].y;
    precise float _503 = _502 + _501;
    precise float _504 = _459 * cbSceneParam._m0[26u].z;
    precise float _505 = _504 + _503;
    precise float _506 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _507 = _506 + _505;
    precise float _508 = _457 * cbSceneParam._m0[27u].x;
    precise float _509 = _458 * cbSceneParam._m0[27u].y;
    precise float _510 = _509 + _508;
    precise float _511 = _459 * cbSceneParam._m0[27u].z;
    precise float _512 = _511 + _510;
    precise float _513 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _514 = _513 + _512;
    gl_Position.x = _493;
    gl_Position.y = _500;
    gl_Position.z = _507;
    gl_Position.w = _514;
    NORMAL_1.x = fma(_184, _397, fma(_183, _394, _391 * _181));
    NORMAL_1.y = fma(_184, _398, fma(_183, _395, _392 * _181));
    NORMAL_1.z = fma(_184, _399, fma(_183, _396, _393 * _181));
    NORMAL_1.w = float(_208);
    TANGENT_1.x = fma(_195, _397, fma(_194, _394, _391 * _193));
    TANGENT_1.y = fma(_195, _398, fma(_194, _395, _392 * _193));
    TANGENT_1.z = fma(_195, _399, fma(_194, _396, _393 * _193));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR_1.w;
    TEXCOORD_1.y = COLOR_1.x;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_11 = sqrt(((_429 * _429) + (_430 * _430)) + (_431 * _431));
}


