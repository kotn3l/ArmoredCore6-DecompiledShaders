#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Vatex_Alpha_BlendEdge_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in vec4 TEXCOORD_9;
layout(location = 8) in vec3 TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    vec4 _117 = texture(sampler2D(M_AMSN_M0_M1_Vatex_Alpha_BlendEdge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _119 = _117.w;
    uint _122 = uint(roundEven(NORMAL.w));
    float _136 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_8.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_8.z));
    float _179 = fma(TEXCOORD_8.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_8.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_8.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_8.x)));
    float _189 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_8.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_8.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_8.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_8.x))) / _179);
    float _190 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_8.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_8.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_8.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_8.x))) / _179);
    float _191 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_8.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_8.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_8.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_8.x))) / _179);
    vec4 _196 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _198 = _196.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _234 = sqrt(((_189 * _189) + (_190 * _190)) + (_191 * _191));
        float _241 = (cbMatDynParam._m0[5u].x * _234) + cbMatDynParam._m0[5u].y;
        float _330 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
        float _243 = isnan(1.0) ? _330 : (isnan(_330) ? 1.0 : min(_330, 1.0));
        float _247 = (cbMatDynParam._m0[5u].z * _234) + cbMatDynParam._m0[5u].w;
        float _341 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0))) - _243)) + _243) < ((_198 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _280;
    float _209;
    float _210;
    vec4 _214;
    float _216;
    float _217;
    bool _228;
    for (;;)
    {
        _209 = (TEXCOORD_8.x / TEXCOORD_8.w) - (TEXCOORD_9.x / TEXCOORD_9.w);
        _210 = (TEXCOORD_8.y / TEXCOORD_8.w) - (TEXCOORD_9.y / TEXCOORD_9.w);
        float _211 = _198 + (-0.5);
        _214 = cbMtdParam._m0[1u];
        _216 = _214.y * _211;
        _217 = _211 * 0.999000012874603271484375;
        _228 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_228)
        {
            if ((cbInstanceData._m0[(_122 * 13u) + 7u].x + _217) < 0.5)
            {
                _280 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _217) < 0.5))
        {
            _280 = true;
            break;
        }
        if ((_216 + _119) < _214.x)
        {
            _280 = true;
            break;
        }
        _280 = false;
        break;
    }
    if (_280)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _209) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _210) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _136 / (_136 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


