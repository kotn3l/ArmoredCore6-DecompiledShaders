#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Stealthmist_snp_0_Texture2D_0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _646;
uint _2282;
uint _2283;
uint _2284;
uint _2509;
uint _2510;
uint _2511;
float _2735;
float _2736;
float _2737;
float _2738;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _169 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _170 = _169 * NORMAL.x;
    float _171 = _169 * NORMAL.y;
    float _172 = _169 * NORMAL.z;
    float _216 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _226 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _216);
    float _227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _216);
    float _228 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _216);
    float _236 = cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x;
    float _243 = TEXCOORD_1.y - ((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _286 = ((_243 * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _305 = (((texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z - (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[10u].x) * ((_236 * 3.2999999523162841796875) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[10u].x) * _243) + cbTextureTilingScale._m0[0u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_236 * 6.900000095367431640625) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _286)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_236 * 16.0) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _286)).x * 0.100000001490116119384765625)) * TEXCOORD_1.z;
    float _312 = sqrt(((_226 * _226) + (_227 * _227)) + (_228 * _228));
    float _315 = cbMtdParam._m0[10u].y - cbMtdParam._m0[10u].z;
    float _317 = (_312 - cbMtdParam._m0[10u].z) / (isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0)));
    float _2752 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _320 = (isnan(1.0) ? _2752 : (isnan(_2752) ? 1.0 : min(_2752, 1.0))) * _305;
    float _329 = inversesqrt(dot(vec3(_170, _171, _172), vec3(_170, _171, _172)));
    float _330 = _329 * _170;
    float _331 = _329 * _171;
    float _332 = _329 * _172;
    float _2763 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _333 = isnan(1.0) ? _2763 : (isnan(_2763) ? 1.0 : min(_2763, 1.0));
    float _349 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _353 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _354 = _226 * _353;
    float _355 = _227 * _353;
    float _356 = _228 * _353;
    vec4 _361 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _363 = _361.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _466 = (cbMatDynParam._m0[5u].x * _312) + cbMatDynParam._m0[5u].y;
        float _2774 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
        float _467 = isnan(1.0) ? _2774 : (isnan(_2774) ? 1.0 : min(_2774, 1.0));
        float _471 = (cbMatDynParam._m0[5u].z * _312) + cbMatDynParam._m0[5u].w;
        float _2785 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2785 : (isnan(_2785) ? 1.0 : min(_2785, 1.0))) - _467)) + _467) < ((_363 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _375 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _376 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _396 = fma(_332, cbSceneParam._m0[5u].z, fma(_331, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _330));
    float _399 = fma(_332, cbSceneParam._m0[6u].z, fma(_331, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _330));
    float _402 = fma(_332, cbSceneParam._m0[7u].z, fma(_331, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _330));
    vec4 _411 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _375, cbSceneParam._m0[86u].y * _376));
    float _414 = _411.x * TEXCOORD_1.w;
    float _415 = dot(vec3(_330, _331, _332), vec3(_354, _355, _356));
    float _418 = _415 * 2.0;
    float _423 = (_418 * _330) - _354;
    float _424 = (_418 * _331) - _355;
    float _425 = (_418 * _332) - _356;
    float _447 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _451 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _455 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _645;
    float _647;
    float _648;
    float _649;
    float _650;
    float _651;
    float _652;
    float _653;
    float _654;
    float _655;
    float _656;
    float _657;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _505 = fma(_455, cbModelParam._m0[26u].z, fma(_451, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _447));
        float _509 = fma(_455, cbModelParam._m0[27u].z, fma(_451, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _447));
        float _513 = fma(_455, cbModelParam._m0[28u].z, fma(_451, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _447));
        float _538 = _447 + _330;
        float _539 = _451 + _331;
        float _540 = _455 + _332;
        float _550 = fma(_540, cbModelParam._m0[26u].z, fma(_539, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _538)) - _505;
        float _551 = fma(_540, cbModelParam._m0[27u].z, fma(_539, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _538)) - _509;
        float _552 = fma(_540, cbModelParam._m0[28u].z, fma(_539, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _538)) - _513;
        float _556 = inversesqrt(dot(vec3(_550, _551, _552), vec3(_550, _551, _552)));
        float _569 = ((_556 * _550) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_505 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _570 = ((_556 * _551) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_509 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _571 = ((_556 * _552) / cbModelParam._m0[34u].z) + ((((((_513 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _574 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_569, _570, _571), 0.0);
        vec4 _581 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_569, _570, _571), 0.0);
        vec4 _588 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_569, _570, _571), 0.0);
        vec4 _595 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_569, _570, _571), 0.0);
        float _608 = exp2((_574.w + (-0.5)) * 20.0) * 2.0;
        float _618 = exp2((_581.w + (-0.5)) * 20.0) * 2.0;
        float _628 = exp2((_588.w + (-0.5)) * 20.0) * 2.0;
        float _638 = exp2((_595.w + (-0.5)) * 20.0) * 2.0;
        float _639 = _638 * (_595.x + (-0.5));
        float _640 = _638 * (_595.y + (-0.5));
        float _641 = _638 * (_595.z + (-0.5));
        _645 = _608 * (_574.z + (-0.5));
        _647 = _608 * (_574.y + (-0.5));
        _648 = _608 * (_574.x + (-0.5));
        _649 = _618 * (_581.z + (-0.5));
        _650 = _618 * (_581.y + (-0.5));
        _651 = _618 * (_581.x + (-0.5));
        _652 = _628 * (_588.z + (-0.5));
        _653 = _628 * (_588.y + (-0.5));
        _654 = _628 * (_588.x + (-0.5));
        _655 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
        _656 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        _657 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    }
    else
    {
        _645 = _646;
        _647 = _646;
        _648 = _646;
        _649 = _646;
        _650 = _646;
        _651 = _646;
        _652 = _646;
        _653 = _646;
        _654 = _646;
        _655 = _646;
        _656 = _646;
        _657 = _646;
    }
    float _822;
    float _823;
    float _824;
    float _825;
    float _826;
    float _827;
    float _828;
    float _829;
    float _830;
    float _831;
    float _832;
    float _833;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _686 = fma(_455, cbModelParam._m0[30u].z, fma(_451, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _447));
        float _690 = fma(_455, cbModelParam._m0[31u].z, fma(_451, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _447));
        float _694 = fma(_455, cbModelParam._m0[32u].z, fma(_451, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _447));
        float _717 = _447 + _330;
        float _718 = _451 + _331;
        float _719 = _455 + _332;
        float _729 = fma(_719, cbModelParam._m0[30u].z, fma(_718, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _717)) - _686;
        float _730 = fma(_719, cbModelParam._m0[31u].z, fma(_718, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _717)) - _690;
        float _731 = fma(_719, cbModelParam._m0[32u].z, fma(_718, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _717)) - _694;
        float _735 = inversesqrt(dot(vec3(_729, _730, _731), vec3(_729, _730, _731)));
        float _748 = ((_735 * _729) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_686 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _749 = ((_735 * _730) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_690 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _750 = ((_735 * _731) / cbModelParam._m0[35u].z) + ((((((_694 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _752 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_748, _749, _750), 0.0);
        vec4 _759 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_748, _749, _750), 0.0);
        vec4 _766 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_748, _749, _750), 0.0);
        vec4 _773 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_748, _749, _750), 0.0);
        float _785 = exp2((_752.w + (-0.5)) * 20.0) * 2.0;
        float _795 = exp2((_759.w + (-0.5)) * 20.0) * 2.0;
        float _805 = exp2((_766.w + (-0.5)) * 20.0) * 2.0;
        float _815 = exp2((_773.w + (-0.5)) * 20.0) * 2.0;
        float _816 = _815 * (_773.x + (-0.5));
        float _817 = _815 * (_773.y + (-0.5));
        float _818 = _815 * (_773.z + (-0.5));
        _822 = _785 * (_752.z + (-0.5));
        _823 = _785 * (_752.y + (-0.5));
        _824 = _785 * (_752.x + (-0.5));
        _825 = _795 * (_759.z + (-0.5));
        _826 = _795 * (_759.y + (-0.5));
        _827 = _795 * (_759.x + (-0.5));
        _828 = _805 * (_766.z + (-0.5));
        _829 = _805 * (_766.y + (-0.5));
        _830 = _805 * (_766.x + (-0.5));
        _831 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
        _832 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
        _833 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    }
    else
    {
        _822 = _646;
        _823 = _646;
        _824 = _646;
        _825 = _646;
        _826 = _646;
        _827 = _646;
        _828 = _646;
        _829 = _646;
        _830 = _646;
        _831 = _646;
        _832 = _646;
        _833 = _646;
    }
    float _848 = _423 * 0.5;
    float _849 = _424 * 0.5;
    float _850 = _425 * 0.5;
    float _851 = dot(vec4(_848, _849, _850, 1.0), vec4(_824, _827, _830, _833));
    float _854 = dot(vec4(_848, _849, _850, 1.0), vec4(_823, _826, _829, _832));
    float _857 = dot(vec4(_848, _849, _850, 1.0), vec4(_822, _825, _828, _831));
    float _892;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _864 = dot(vec4(_848, _849, _850, 1.0), vec4(_645, _649, _652, _655));
        float _868 = dot(vec4(_848, _849, _850, 1.0), vec4(_647, _650, _653, _656));
        float _872 = dot(vec4(_848, _849, _850, 1.0), vec4(_648, _651, _654, _657));
        float _879 = dot(vec4(cbModelParam._m0[39u]), vec4(_848, _849, _850, 1.0));
        _892 = dot(vec3(isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0)), isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0)), isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_879) ? 0.0 : (isnan(0.0) ? _879 : max(0.0, _879))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _892 = 1.0;
    }
    float _903;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _894 = dot(vec4(cbModelParam._m0[40u]), vec4(_848, _849, _850, 1.0));
        _903 = dot(vec3(isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0)), isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0)), isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_894) ? 0.0 : (isnan(0.0) ? _894 : max(0.0, _894))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _903 = 1.0;
    }
    float _907 = (_903 * cbModelParam._m0[1u].x) + (_892 * (1.0 - cbModelParam._m0[1u].x));
    float _913 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _996;
    float _998;
    float _1000;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _963 = fma(_455, cbModelParam._m0[13u].z, fma(_451, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _447)) + cbModelParam._m0[13u].w;
        float _967 = fma(_455, cbModelParam._m0[14u].z, fma(_451, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _447)) + cbModelParam._m0[14u].w;
        float _971 = fma(_455, cbModelParam._m0[15u].z, fma(_451, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _447)) + cbModelParam._m0[15u].w;
        float _974 = fma(_425, cbModelParam._m0[13u].z, fma(_424, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _423));
        float _977 = fma(_425, cbModelParam._m0[14u].z, fma(_424, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _423));
        float _980 = fma(_425, cbModelParam._m0[15u].z, fma(_424, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _423));
        float _1006;
        if (_974 > 0.0)
        {
            _1006 = abs((1.0 - _963) / _974);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_974 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_963 + 1.0) / _974);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1006 = frontier_phi_17_15_ladder;
        }
        float _1197;
        if (_977 > 0.0)
        {
            _1197 = abs((1.0 - _967) / _977);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_977 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_967 + 1.0) / _977);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1197 = frontier_phi_26_22_ladder;
        }
        float _1552;
        if (_980 > 0.0)
        {
            _1552 = abs((1.0 - _971) / _980);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_980 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_971 + 1.0) / _980);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _1552 = frontier_phi_38_33_ladder;
        }
        float _1554 = isnan(_1197) ? _1006 : (isnan(_1006) ? _1197 : min(_1006, _1197));
        float _1555 = isnan(_1552) ? _1554 : (isnan(_1554) ? _1552 : min(_1554, _1552));
        float _1559 = (_1555 * _974) + _963;
        float _1560 = (_1555 * _977) + _967;
        float _1561 = (_1555 * _980) + _971;
        float _1562 = _1555 * 9.9999997473787516355514526367188e-05;
        float _1564 = (-1.0) - _1562;
        float _1566 = _1562 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_1561 > _1566) || ((_1561 < _1564) || ((_1560 > _1566) || ((_1560 < _1564) || ((_1559 < _1564) || (_1559 > _1566))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1732 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1561, cbModelParam._m0[9u].z, fma(_1560, cbModelParam._m0[9u].y, _1559 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1561, cbModelParam._m0[10u].z, fma(_1560, cbModelParam._m0[10u].y, _1559 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1561, cbModelParam._m0[11u].z, fma(_1560, cbModelParam._m0[11u].y, _1559 * cbModelParam._m0[11u].x))), _913);
            frontier_phi_16_38_ladder = _1732.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _1732.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _1732.x * cbModelParam._m0[1u].y;
        }
        _996 = frontier_phi_16_38_ladder_2;
        _998 = frontier_phi_16_38_ladder_1;
        _1000 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _984 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_423, _424, _425), _913);
        _996 = _984.x * cbModelParam._m0[1u].y;
        _998 = _984.y * cbModelParam._m0[1u].y;
        _1000 = _984.z * cbModelParam._m0[1u].y;
    }
    float _1003 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1095;
    float _1097;
    float _1099;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1059 = fma(_455, cbModelParam._m0[21u].z, fma(_451, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _447)) + cbModelParam._m0[21u].w;
        float _1063 = fma(_455, cbModelParam._m0[22u].z, fma(_451, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _447)) + cbModelParam._m0[22u].w;
        float _1067 = fma(_455, cbModelParam._m0[23u].z, fma(_451, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _447)) + cbModelParam._m0[23u].w;
        float _1070 = fma(_425, cbModelParam._m0[21u].z, fma(_424, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _423));
        float _1073 = fma(_425, cbModelParam._m0[22u].z, fma(_424, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _423));
        float _1076 = fma(_425, cbModelParam._m0[23u].z, fma(_424, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _423));
        float _1202;
        if (_1070 > 0.0)
        {
            _1202 = abs((1.0 - _1059) / _1070);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1070 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1059 + 1.0) / _1070);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1202 = frontier_phi_28_24_ladder;
        }
        float _1579;
        if (_1073 > 0.0)
        {
            _1579 = abs((1.0 - _1063) / _1073);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1073 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1063 + 1.0) / _1073);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _1579 = frontier_phi_40_35_ladder;
        }
        float _1804;
        if (_1076 > 0.0)
        {
            _1804 = abs((1.0 - _1067) / _1076);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1076 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1067 + 1.0) / _1076);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _1804 = frontier_phi_50_47_ladder;
        }
        float _1806 = isnan(_1579) ? _1202 : (isnan(_1202) ? _1579 : min(_1202, _1579));
        float _1807 = isnan(_1804) ? _1806 : (isnan(_1806) ? _1804 : min(_1806, _1804));
        float _1811 = (_1807 * _1070) + _1059;
        float _1812 = (_1807 * _1073) + _1063;
        float _1813 = (_1807 * _1076) + _1067;
        float _1814 = _1807 * 9.9999997473787516355514526367188e-05;
        float _1815 = (-1.0) - _1814;
        float _1817 = _1814 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_1813 > _1817) || ((_1813 < _1815) || ((_1812 > _1817) || ((_1812 < _1815) || ((_1811 < _1815) || (_1811 > _1817))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1974 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1813, cbModelParam._m0[17u].z, fma(_1812, cbModelParam._m0[17u].y, _1811 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1813, cbModelParam._m0[18u].z, fma(_1812, cbModelParam._m0[18u].y, _1811 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1813, cbModelParam._m0[19u].z, fma(_1812, cbModelParam._m0[19u].y, _1811 * cbModelParam._m0[19u].x))), _1003);
            frontier_phi_25_50_ladder = _1974.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _1974.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _1974.x * cbModelParam._m0[1u].z;
        }
        _1095 = frontier_phi_25_50_ladder_2;
        _1097 = frontier_phi_25_50_ladder_1;
        _1099 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1079 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_423, _424, _425), _1003);
        _1095 = _1079.x * cbModelParam._m0[1u].z;
        _1097 = _1079.y * cbModelParam._m0[1u].z;
        _1099 = _1079.z * cbModelParam._m0[1u].z;
    }
    float _1111 = _414 * 0.01200000010430812835693359375;
    float _1113 = _1111 * ((cbModelParam._m0[1u].w * (_1095 - _996)) + _996);
    float _1114 = _1111 * ((cbModelParam._m0[1u].w * (_1097 - _998)) + _998);
    float _1115 = _1111 * ((cbModelParam._m0[1u].w * (_1099 - _1000)) + _1000);
    float _1136 = fma(_1115, cbSceneParam._m0[89u].z, fma(_1114, cbSceneParam._m0[89u].y, _1113 * cbSceneParam._m0[89u].x));
    float _1139 = fma(_1115, cbSceneParam._m0[90u].z, fma(_1114, cbSceneParam._m0[90u].y, _1113 * cbSceneParam._m0[90u].x));
    float _1142 = fma(_1115, cbSceneParam._m0[91u].z, fma(_1114, cbSceneParam._m0[91u].y, _1113 * cbSceneParam._m0[91u].x));
    float _1176 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1180 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1184 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1188 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1189 = _1176 / _1188;
    float _1190 = _1180 / _1188;
    float _1191 = _1184 / _1188;
    float _1338;
    float _1339;
    float _1340;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1218 = ((uint(_1191 > cbSceneParam._m0[59u].y) + uint(_1191 > cbSceneParam._m0[59u].x)) + uint(_1191 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1219 = _1218 + 43u;
        uint _1227 = _1218 + 44u;
        uint _1235 = _1218 + 45u;
        uint _1243 = _1218 + 46u;
        float _1254 = fma(_1188, cbSceneParam._m0[_1219].w, fma(_1184, cbSceneParam._m0[_1219].z, fma(_1180, cbSceneParam._m0[_1219].y, _1176 * cbSceneParam._m0[_1219].x)));
        float _1258 = fma(_1188, cbSceneParam._m0[_1227].w, fma(_1184, cbSceneParam._m0[_1227].z, fma(_1180, cbSceneParam._m0[_1227].y, _1176 * cbSceneParam._m0[_1227].x)));
        float _1266 = fma(_1188, cbSceneParam._m0[_1243].w, fma(_1184, cbSceneParam._m0[_1243].z, fma(_1180, cbSceneParam._m0[_1243].y, _1176 * cbSceneParam._m0[_1243].x)));
        float _1271 = cbSceneParam._m0[33u].z * _1266;
        float _1273 = cbSceneParam._m0[33u].w * _1266;
        float _1276 = fma(_1188, cbSceneParam._m0[_1235].w, fma(_1184, cbSceneParam._m0[_1235].z, fma(_1180, cbSceneParam._m0[_1235].y, _1176 * cbSceneParam._m0[_1235].x))) / _1266;
        float _1324 = (cbSceneParam._m0[33u].x - sqrt(((_1190 * _1190) + (_1189 * _1189)) + (_1191 * _1191))) * cbSceneParam._m0[33u].y;
        float _2911 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1331 = (isnan(1.0) ? _2911 : (isnan(_2911) ? 1.0 : min(_2911, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1271 + _1254) / _1266, (_1273 + _1258) / _1266), _1276), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1273 + _1254) / _1266, (_1258 - _1271) / _1266), _1276), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1254 - _1271) / _1266, (_1258 - _1273) / _1266), _1276), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1254 - _1273) / _1266, (_1271 + _1258) / _1266), _1276), 0.0)).x), vec4(0.25)));
        _1338 = 1.0 - (_1331 * cbSceneParam._m0[34u].x);
        _1339 = 1.0 - (_1331 * cbSceneParam._m0[34u].y);
        _1340 = 1.0 - (_1331 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1338 = 1.0;
        _1339 = 1.0;
        _1340 = 1.0;
    }
    float _1404;
    float _1406;
    float _1408;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1392 = fma(_1188, cbSceneParam._m0[63u].w, fma(_1184, cbSceneParam._m0[63u].z, fma(_1180, cbSceneParam._m0[63u].y, _1176 * cbSceneParam._m0[63u].x)));
        float _1393 = fma(_1188, cbSceneParam._m0[60u].w, fma(_1184, cbSceneParam._m0[60u].z, fma(_1180, cbSceneParam._m0[60u].y, _1176 * cbSceneParam._m0[60u].x))) / _1392;
        float _1394 = fma(_1188, cbSceneParam._m0[61u].w, fma(_1184, cbSceneParam._m0[61u].z, fma(_1180, cbSceneParam._m0[61u].y, _1176 * cbSceneParam._m0[61u].x))) / _1392;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_1393 >= cbSceneParam._m0[64u].x) && (_1394 >= cbSceneParam._m0[64u].y)) && (_1393 <= cbSceneParam._m0[64u].z)) && (_1394 <= cbSceneParam._m0[64u].w))
        {
            float _1592 = fma(_1188, cbSceneParam._m0[62u].w, fma(_1184, cbSceneParam._m0[62u].z, fma(_1180, cbSceneParam._m0[62u].y, _1176 * cbSceneParam._m0[62u].x))) / _1392;
            float _1596 = isnan(cbSceneParam._m0[41u].w) ? _1592 : (isnan(_1592) ? cbSceneParam._m0[41u].w : max(_1592, cbSceneParam._m0[41u].w));
            float _1639 = (cbSceneParam._m0[33u].x - sqrt(((_1190 * _1190) + (_1189 * _1189)) + (_1191 * _1191))) * cbSceneParam._m0[33u].y;
            float _2927 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
            float _1646 = (isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1393, cbSceneParam._m0[33u].w + _1394), _1596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1393, _1394 - cbSceneParam._m0[33u].z), _1596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1393 - cbSceneParam._m0[33u].z, _1394 - cbSceneParam._m0[33u].w), _1596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1393 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1394), _1596), 0.0)).x), vec4(0.25)));
            float _1650 = 1.0 - (_1646 * cbSceneParam._m0[34u].x);
            float _1651 = 1.0 - (_1646 * cbSceneParam._m0[34u].y);
            float _1652 = 1.0 - (_1646 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_1652) ? _1340 : (isnan(_1340) ? _1652 : min(_1340, _1652));
            frontier_phi_37_36_ladder_1 = isnan(_1651) ? _1339 : (isnan(_1339) ? _1651 : min(_1339, _1651));
            frontier_phi_37_36_ladder_2 = isnan(_1650) ? _1338 : (isnan(_1338) ? _1650 : min(_1338, _1650));
        }
        else
        {
            frontier_phi_37_36_ladder = _1340;
            frontier_phi_37_36_ladder_1 = _1339;
            frontier_phi_37_36_ladder_2 = _1338;
        }
        _1404 = frontier_phi_37_36_ladder_2;
        _1406 = frontier_phi_37_36_ladder_1;
        _1408 = frontier_phi_37_36_ladder;
    }
    else
    {
        _1404 = _1338;
        _1406 = _1339;
        _1408 = _1340;
    }
    uint _1410 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1414 = floatBitsToUint(cbInstanceData._m0[_1410 + 5u]);
    uint _1416 = _1414.x * 14u;
    uint _1417 = _1416 + 13u;
    float _1423 = _414 + (-1.0);
    float _1428 = (cbLight._m0[_1417].x * _1423) + 1.0;
    float _1429 = (cbLight._m0[_1417].y * _1423) + 1.0;
    float _1430 = (cbLight._m0[_1417].w * _1423) + 1.0;
    uint _1431 = _1416 + 8u;
    float _1442 = cbLight._m0[_1416].x + _354;
    float _1443 = cbLight._m0[_1416].y + _355;
    float _1444 = cbLight._m0[_1416].z + _356;
    float _1448 = inversesqrt(dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444)));
    float _1452 = dot(vec3(_330, _331, _332), vec3(cbLight._m0[_1416].xyz));
    float _2953 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
    float _1455 = isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0));
    float _2964 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _1456 = isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0));
    float _1457 = dot(vec3(cbLight._m0[_1416].xyz), vec3(_1442 * _1448, _1443 * _1448, _1444 * _1448));
    float _2975 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _1468 = (exp2(log2(1.0 - (isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1474 = (0.5 / ((_1455 + 9.9999999392252902907785028219223e-09) + _1456)) * _1455;
    float _2986 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    float _1476 = (isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0))) * 0.31831014156341552734375;
    float _1478 = isnan(1.0) ? _1428 : (isnan(_1428) ? 1.0 : min(_1428, 1.0));
    uint _1491 = _1416 + 9u;
    uint _1497 = _1416 | 1u;
    float _1503 = cbLight._m0[_1497].x + _354;
    float _1504 = cbLight._m0[_1497].y + _355;
    float _1505 = cbLight._m0[_1497].z + _356;
    float _1509 = inversesqrt(dot(vec3(_1503, _1504, _1505), vec3(_1503, _1504, _1505)));
    float _1513 = dot(vec3(_330, _331, _332), vec3(cbLight._m0[_1497].xyz));
    float _3002 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1516 = isnan(1.0) ? _3002 : (isnan(_3002) ? 1.0 : min(_3002, 1.0));
    float _1517 = dot(vec3(cbLight._m0[_1497].xyz), vec3(_1503 * _1509, _1504 * _1509, _1505 * _1509));
    float _3013 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _1526 = (exp2(log2(1.0 - (isnan(1.0) ? _3013 : (isnan(_3013) ? 1.0 : min(_3013, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1530 = (0.5 / ((_1516 + 9.9999999392252902907785028219223e-09) + _1456)) * _1516;
    float _3024 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    float _1532 = (isnan(1.0) ? _3024 : (isnan(_3024) ? 1.0 : min(_3024, 1.0))) * 0.31831014156341552734375;
    float _1533 = isnan(1.0) ? _1429 : (isnan(_1429) ? 1.0 : min(_1429, 1.0));
    float _1543 = (((_1526 * cbLight._m0[_1491].x) * _1532) * _1533) + ((((cbLight._m0[_1431].x * _1404) * _1468) * _1476) * _1478);
    float _1544 = (((_1526 * cbLight._m0[_1491].y) * _1532) * _1533) + ((((cbLight._m0[_1431].y * _1406) * _1468) * _1476) * _1478);
    float _1545 = (((_1526 * cbLight._m0[_1491].z) * _1532) * _1533) + ((((cbLight._m0[_1431].z * _1408) * _1468) * _1476) * _1478);
    uvec4 _1549 = floatBitsToUint(cbLight._m0[_1416 + 12u]);
    float _1653;
    float _1655;
    float _1657;
    if (_1549.x == 0u)
    {
        _1653 = _1543;
        _1655 = _1544;
        _1657 = _1545;
    }
    else
    {
        float _1663 = (cbLight._m0[_1417].z * _1423) + 1.0;
        uint _1664 = _1416 + 10u;
        uint _1670 = _1416 + 2u;
        float _1676 = cbLight._m0[_1670].x + _354;
        float _1677 = cbLight._m0[_1670].y + _355;
        float _1678 = cbLight._m0[_1670].z + _356;
        float _1682 = inversesqrt(dot(vec3(_1676, _1677, _1678), vec3(_1676, _1677, _1678)));
        float _1686 = dot(vec3(_330, _331, _332), vec3(cbLight._m0[_1670].xyz));
        float _3040 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1689 = isnan(1.0) ? _3040 : (isnan(_3040) ? 1.0 : min(_3040, 1.0));
        float _1690 = dot(vec3(cbLight._m0[_1670].xyz), vec3(_1676 * _1682, _1677 * _1682, _1678 * _1682));
        float _3051 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1699 = (exp2(log2(1.0 - (isnan(1.0) ? _3051 : (isnan(_3051) ? 1.0 : min(_3051, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1703 = (0.5 / ((_1689 + 9.9999999392252902907785028219223e-09) + _1456)) * _1689;
        float _3062 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1705 = (isnan(1.0) ? _3062 : (isnan(_3062) ? 1.0 : min(_3062, 1.0))) * 0.31831014156341552734375;
        float _1706 = isnan(1.0) ? _1663 : (isnan(_1663) ? 1.0 : min(_1663, 1.0));
        _1653 = (((_1699 * cbLight._m0[_1664].x) * _1705) * _1706) + _1543;
        _1655 = (((_1699 * cbLight._m0[_1664].y) * _1705) * _1706) + _1544;
        _1657 = (((_1699 * cbLight._m0[_1664].z) * _1705) * _1706) + _1545;
    }
    float _1741;
    float _1743;
    float _1745;
    if (_1549.y == 0u)
    {
        _1741 = _1653;
        _1743 = _1655;
        _1745 = _1657;
    }
    else
    {
        uint _1752 = _1416 + 11u;
        uint _1758 = _1416 + 3u;
        float _1764 = cbLight._m0[_1758].x + _354;
        float _1765 = cbLight._m0[_1758].y + _355;
        float _1766 = cbLight._m0[_1758].z + _356;
        float _1770 = inversesqrt(dot(vec3(_1764, _1765, _1766), vec3(_1764, _1765, _1766)));
        float _1774 = dot(vec3(_330, _331, _332), vec3(cbLight._m0[_1758].xyz));
        float _3078 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
        float _1777 = isnan(1.0) ? _3078 : (isnan(_3078) ? 1.0 : min(_3078, 1.0));
        float _1778 = dot(vec3(cbLight._m0[_1758].xyz), vec3(_1764 * _1770, _1765 * _1770, _1766 * _1770));
        float _3089 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1787 = (exp2(log2(1.0 - (isnan(1.0) ? _3089 : (isnan(_3089) ? 1.0 : min(_3089, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1791 = (0.5 / ((_1777 + 9.9999999392252902907785028219223e-09) + _1456)) * _1777;
        float _3100 = isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0));
        float _1793 = (isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0))) * 0.31831014156341552734375;
        float _1794 = isnan(1.0) ? _1430 : (isnan(_1430) ? 1.0 : min(_1430, 1.0));
        _1741 = (((_1787 * cbLight._m0[_1752].x) * _1793) * _1794) + _1653;
        _1743 = (((_1787 * cbLight._m0[_1752].y) * _1793) * _1794) + _1655;
        _1745 = (((_1787 * cbLight._m0[_1752].z) * _1793) * _1794) + _1657;
    }
    float _1887;
    float _1889;
    float _1891;
    if (_1414.y == 0u)
    {
        uvec4 _1841 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1842 = _1841.x;
        uint _1853 = uint((float(_1841.y) * floor(float(uint(cbSceneParam._m0[85u].y * _376) / _1842))) + floor(float(uint(cbSceneParam._m0[85u].x * _375) / _1842)));
        float _1863 = (log2(_1191 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1864 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        uint _1867 = uint(isnan(14.0) ? _1864 : (isnan(_1864) ? 14.0 : min(_1864, 14.0)));
        uvec4 _1872 = texelFetch(g_lightClusterGridBuffer, int(((_1867 << 2u) + (_1853 << 6u)) >> 2u));
        uint _1873 = _1872.x;
        uint _1874 = _1841.z;
        float _1979;
        float _1981;
        float _1983;
        if (((((1u << ((_1874 >> 4u) & 15u)) + 4294967295u) & _1873) == 0u) || ((_1874 & 240u) == 0u))
        {
            _1979 = 0.0;
            _1981 = 0.0;
            _1983 = 0.0;
        }
        else
        {
            float _1980;
            float _1982;
            float _1984;
            float _2116 = 0.0;
            float _2117 = 0.0;
            float _2118 = 0.0;
            uint _2119 = 0u;
            uint _2128;
            bool _2129;
            for (;;)
            {
                _2128 = texelFetch(g_lightClassification, int((((_1867 << 5u) + (_1853 << 9u)) + (_2119 << 2u)) >> 2u)).x;
                _2129 = _2128 == 0u;
                float frontier_phi_67_pred;
                float frontier_phi_67_pred_1;
                float frontier_phi_67_pred_2;
                if (_2129)
                {
                    frontier_phi_67_pred = _2118;
                    frontier_phi_67_pred_1 = _2117;
                    frontier_phi_67_pred_2 = _2116;
                }
                else
                {
                    float _2252;
                    float _2253;
                    float _2254;
                    uint _2255;
                    _2252 = _2116;
                    _2253 = _2117;
                    _2254 = _2118;
                    _2255 = _2128;
                    float _2185;
                    float _2186;
                    float _2187;
                    for (;;)
                    {
                        uint _2259 = uint(findLSB(_2255)) + (_2119 << 5u);
                        uint _2256 = (_2255 + 4294967295u) & _2255;
                        uint _2261 = _2259 * 48u;
                        vec4 _2275 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2261)).x, texelFetch(g_PointLightRenderingBuffer, int(_2261 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2261 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2261 + 3u)).x));
                        uint _2292 = (_2259 * 48u) + 8u;
                        vec3 _2303 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2292)).x, texelFetch(g_PointLightRenderingBuffer, int(_2292 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2292 + 2u)).x));
                        float _2307 = _2275.x - _1189;
                        float _2308 = _2275.y - _1190;
                        float _2309 = _2275.z - _1191;
                        float _2310 = dot(vec3(_2307, _2308, _2309), vec3(_2307, _2308, _2309));
                        float _2313 = inversesqrt(_2310);
                        float _2322 = 1.0 - (_2310 * _2275.w);
                        float _3126 = isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0));
                        float _2324 = sqrt(_2310) * uintBitsToFloat(uvec4(_2282, _2283, _2284, texelFetch(g_PointLightRenderingBuffer, int(((_2259 * 48u) + 4u) + 3u)).x)).w;
                        float _2327 = 1.39999997615814208984375 / (_2324 + 1.39999997615814208984375);
                        float _2328 = _2327 * _2327;
                        float _2331 = ((1.0 - _2328) * dot(vec3(_396, _399, _402), vec3(_2313 * _2307, _2313 * _2308, _2313 * _2309))) + _2328;
                        float _2333 = (-0.0) - _1189;
                        float _2334 = (-0.0) - _1190;
                        float _2335 = (-0.0) - _1191;
                        float _2339 = inversesqrt(dot(vec3(_2333, _2334, _2335), vec3(_2333, _2334, _2335)));
                        float _2343 = dot(vec3(_396, _399, _402), vec3(_2339 * _2333, _2339 * _2334, _2339 * _2335));
                        float _3137 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
                        float _3148 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
                        float _2347 = isnan(1.0) ? _3148 : (isnan(_3148) ? 1.0 : min(_3148, 1.0));
                        float _2351 = (0.5 / (((isnan(1.0) ? _3137 : (isnan(_3137) ? 1.0 : min(_3137, 1.0))) + 9.9999999392252902907785028219223e-09) + _2347)) * _2347;
                        float _3159 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
                        float _2360 = (((isnan(1.0) ? _3159 : (isnan(_3159) ? 1.0 : min(_3159, 1.0))) * 3.1415927410125732421875) / (((_2324 * _2324) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0)));
                        _2185 = (_2360 * _2303.x) + _2252;
                        _2186 = (_2360 * _2303.y) + _2253;
                        _2187 = (_2360 * _2303.z) + _2254;
                        if (_2256 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2252 = _2185;
                            _2253 = _2186;
                            _2254 = _2187;
                            _2255 = _2256;
                        }
                    }
                    frontier_phi_67_pred = _2187;
                    frontier_phi_67_pred_1 = _2186;
                    frontier_phi_67_pred_2 = _2185;
                }
                _1984 = frontier_phi_67_pred;
                _1982 = frontier_phi_67_pred_1;
                _1980 = frontier_phi_67_pred_2;
                uint _2120 = _2119 + 1u;
                if (_2120 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2116 = _1980;
                    _2117 = _1982;
                    _2118 = _1984;
                    _2119 = _2120;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1979 = _1980;
            _1981 = _1982;
            _1983 = _1984;
        }
        uvec4 _1987 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1988 = _1987.z;
        uint _1990 = (_1988 >> 8u) & 15u;
        float _2096;
        float _2098;
        float _2100;
        if (((4294967295u << _1990) & _1873) == 0u)
        {
            _2096 = _1979;
            _2098 = _1981;
            _2100 = _1983;
        }
        else
        {
            float _2112 = inversesqrt(dot(vec3(_1189, _1190, _1191), vec3(_1189, _1190, _1191)));
            float frontier_phi_59_60_ladder;
            float frontier_phi_59_60_ladder_1;
            float frontier_phi_59_60_ladder_2;
            if (_1990 < ((_1988 >> 12u) & 15u))
            {
                float _2097;
                float _2099;
                float _2101;
                float _2238 = _1979;
                float _2239 = _1981;
                float _2240 = _1983;
                uint _2241 = _1990;
                uint _2250;
                bool _2251;
                for (;;)
                {
                    _2250 = texelFetch(g_lightClassification, int((((_1867 << 5u) + (_1853 << 9u)) + (_2241 << 2u)) >> 2u)).x;
                    _2251 = _2250 == 0u;
                    float frontier_phi_78_pred;
                    float frontier_phi_78_pred_1;
                    float frontier_phi_78_pred_2;
                    if (_2251)
                    {
                        frontier_phi_78_pred = _2240;
                        frontier_phi_78_pred_1 = _2239;
                        frontier_phi_78_pred_2 = _2238;
                    }
                    else
                    {
                        float _2374;
                        float _2375;
                        float _2376;
                        float _2598;
                        float _2599;
                        float _2600;
                        float _2384 = _2238;
                        float _2385 = _2239;
                        float _2386 = _2240;
                        uint _2387 = _2250;
                        uint _2388;
                        uint _2398;
                        vec4 _2413;
                        float _2414;
                        vec3 _2426;
                        vec4 _2442;
                        vec4 _2458;
                        float _2505;
                        bool _2506;
                        for (;;)
                        {
                            _2398 = ((_2241 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2387));
                            _2388 = (_2387 + 4294967295u) & _2387;
                            uint _2400 = _2398 * 40u;
                            _2413 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2400)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 3u)).x));
                            _2414 = _2413.w;
                            uint _2416 = (_2398 * 40u) + 8u;
                            _2426 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2416)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2416 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2416 + 2u)).x));
                            uint _2429 = (_2398 * 40u) + 16u;
                            _2442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2429 + 3u)).x));
                            uint _2445 = (_2398 * 40u) + 20u;
                            _2458 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2445)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2445 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2445 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2445 + 3u)).x));
                            uint _2461 = (_2398 * 40u) + 24u;
                            vec4 _2474 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2461)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2461 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2461 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2461 + 3u)).x));
                            uint _2480 = (_2398 * 40u) + 28u;
                            vec4 _2493 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 3u)).x));
                            _2505 = fma(_1191, _2493.z, fma(_1190, _2493.y, _2493.x * _1189)) + _2493.w;
                            _2506 = !((fma(_1191, _2474.z, fma(_1190, _2474.y, _2474.x * _1189)) + _2474.w) <= 0.0);
                            float frontier_phi_84_pred;
                            float frontier_phi_84_pred_1;
                            float frontier_phi_84_pred_2;
                            if (_2506)
                            {
                                float _2540 = _2413.x - _1189;
                                float _2541 = _2413.y - _1190;
                                float _2542 = _2413.z - _1191;
                                float _2543 = dot(vec3(_2540, _2541, _2542), vec3(_2540, _2541, _2542));
                                float _2546 = inversesqrt(_2543);
                                float _2553 = 1.0 - (_2543 / (_2414 * _2414));
                                float _3170 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
                                float _2555 = sqrt(_2543) * uintBitsToFloat(uvec4(_2509, _2510, _2511, texelFetch(g_SpotLightRenderingBuffer, int(((_2398 * 40u) + 4u) + 3u)).x)).w;
                                float _2557 = 1.39999997615814208984375 / (_2555 + 1.39999997615814208984375);
                                float _2558 = _2557 * _2557;
                                float _2561 = (fma(_1191, _2442.z, fma(_1190, _2442.y, _2442.x * _1189)) + _2442.w) / _2505;
                                float _2562 = (fma(_1191, _2458.z, fma(_1190, _2458.y, _2458.x * _1189)) + _2458.w) / _2505;
                                float _2566 = 1.0 - dot(vec2(_2561, _2562), vec2(_2561, _2562));
                                float _3181 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
                                float _2574 = dot(vec3(_396, _399, _402), vec3((-0.0) - (_1189 * _2112), (-0.0) - (_1190 * _2112), (-0.0) - (_1191 * _2112)));
                                float _3192 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
                                float _2582 = ((1.0 - _2558) * dot(vec3(_396, _399, _402), vec3(_2546 * _2540, _2546 * _2541, _2546 * _2542))) + _2558;
                                float _3203 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
                                float _2583 = isnan(1.0) ? _3203 : (isnan(_3203) ? 1.0 : min(_3203, 1.0));
                                float _2587 = (0.5 / (((isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0))) + 9.9999999392252902907785028219223e-09) + _2583)) * _2583;
                                float _3214 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
                                float _2594 = ((isnan(1.0) ? _3181 : (isnan(_3181) ? 1.0 : min(_3181, 1.0))) * (isnan(1.0) ? _3170 : (isnan(_3170) ? 1.0 : min(_3170, 1.0)))) * (((isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0))) * 3.1415927410125732421875) / (((_2555 * _2555) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_84_pred = _2594 * _2426.y;
                                frontier_phi_84_pred_1 = _2594 * _2426.x;
                                frontier_phi_84_pred_2 = _2594 * _2426.z;
                            }
                            else
                            {
                                frontier_phi_84_pred = 0.0;
                                frontier_phi_84_pred_1 = 0.0;
                                frontier_phi_84_pred_2 = 0.0;
                            }
                            _2599 = frontier_phi_84_pred;
                            _2598 = frontier_phi_84_pred_1;
                            _2600 = frontier_phi_84_pred_2;
                            _2374 = _2598 + _2384;
                            _2375 = _2599 + _2385;
                            _2376 = _2600 + _2386;
                            if (_2388 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2384 = _2374;
                                _2385 = _2375;
                                _2386 = _2376;
                                _2387 = _2388;
                                continue;
                            }
                        }
                        frontier_phi_78_pred = _2376;
                        frontier_phi_78_pred_1 = _2375;
                        frontier_phi_78_pred_2 = _2374;
                    }
                    _2101 = frontier_phi_78_pred;
                    _2099 = frontier_phi_78_pred_1;
                    _2097 = frontier_phi_78_pred_2;
                    uint _2242 = _2241 + 1u;
                    if (_2242 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2238 = _2097;
                        _2239 = _2099;
                        _2240 = _2101;
                        _2241 = _2242;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_59_60_ladder = _2101;
                frontier_phi_59_60_ladder_1 = _2099;
                frontier_phi_59_60_ladder_2 = _2097;
            }
            else
            {
                frontier_phi_59_60_ladder = _1983;
                frontier_phi_59_60_ladder_1 = _1981;
                frontier_phi_59_60_ladder_2 = _1979;
            }
            _2096 = frontier_phi_59_60_ladder_2;
            _2098 = frontier_phi_59_60_ladder_1;
            _2100 = frontier_phi_59_60_ladder;
        }
        float _2105 = isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0));
        _1887 = ((_2096 * 0.039999999105930328369140625) * _2105) + _1741;
        _1889 = ((_2098 * 0.039999999105930328369140625) * _2105) + _1743;
        _1891 = ((_2100 * 0.039999999105930328369140625) * _2105) + _1745;
    }
    else
    {
        _1887 = _1741;
        _1889 = _1743;
        _1891 = _1745;
    }
    uint _1897 = _1410 + 9u;
    uint _1898 = _1897 + uint(cbMatDynParam._m0[0u].w);
    float _3230 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _1914 = (cbInstanceData._m0[_1898].x * cbMtdParam._m0[9u].x) + ((_1887 + ((isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0))) * _907)) * cbPerFrame._m0[3u].x);
    float _1915 = (cbInstanceData._m0[_1898].y * cbMtdParam._m0[9u].y) + ((_1889 + ((isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0))) * _907)) * cbPerFrame._m0[3u].x);
    float _1916 = (cbInstanceData._m0[_1898].z * cbMtdParam._m0[9u].z) + ((_1891 + ((isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0))) * _907)) * cbPerFrame._m0[3u].x);
    float _1917 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
    float _1918 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _1919 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
    float _1924 = cbInstanceData._m0[_1410 + 6u].w * (isnan(1.0) ? _3230 : (isnan(_3230) ? 1.0 : min(_3230, 1.0)));
    float _1929 = _375 / cbSceneParam._m0[86u].x;
    float _1930 = _376 / cbSceneParam._m0[86u].y;
    vec4 _1944 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1929, _1930, (log2((isnan(cbSceneParam._m0[77u].w) ? _349 : (isnan(_349) ? cbSceneParam._m0[77u].w : min(_349, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1946 = _1944.x;
    float _1947 = _1944.y;
    float _1948 = _1944.z;
    float _1949 = _1944.w;
    float _2036;
    float _2038;
    float _2040;
    float _2042;
    if (_349 > cbSceneParam._m0[78u].w)
    {
        float _1998 = isnan(_349) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _349 : min(cbSceneParam._m0[80u].w, _349));
        float _1999 = _1998 / _349;
        float _2010 = _1999 * _226;
        float _2011 = _227 * _1999;
        float _2012 = (-0.0) - _2011;
        float _2014 = _1999 * _228;
        float _2016 = (cbSceneParam._m0[77u].w * _2012) / _1998;
        float _2017 = _2016 + cbSceneParam._m0[79u].w;
        float _2018 = cbSceneParam._m0[79u].w - _2011;
        float _2024 = sqrt(((_2010 * _2010) + (_2011 * _2011)) + (_2014 * _2014));
        float _2027 = (1.0 - (cbSceneParam._m0[77u].w / _1998)) * _2024;
        float _2032 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2034 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2195;
        if (abs((_2012 - _2016) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2195 = ((((_2017 > 0.0) ? exp2(_2032 * _2017) : (2.0 - exp2(_2034 * _2017))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2027;
        }
        else
        {
            float _2142 = 1.0 / cbSceneParam._m0[80u].x;
            float _2143 = isnan(_2018) ? _2017 : (isnan(_2017) ? _2018 : max(_2017, _2018));
            float _2144 = isnan(_2018) ? _2017 : (isnan(_2017) ? _2018 : min(_2017, _2018));
            float _2153 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : min(_2143, 0.0));
            float _2154 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : min(_2144, 0.0));
            _2195 = ((abs(_2024 / _2012) * cbSceneParam._m0[80u].y) * ((((_2153 - _2154) * 2.0) - ((exp2(_2032 * (isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0)))) - exp2(_2032 * (isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0))))) * _2142)) - ((exp2(_2034 * _2153) - exp2(_2034 * _2154)) * _2142))) + (_2027 * cbSceneParam._m0[80u].z);
        }
        vec4 _2197 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1929, _1930, 1.0), 0.0);
        float _2206 = exp2((_2195 * (-1.44269502162933349609375)) * (1.0 - _2197.w));
        float _2207 = log2(_2206);
        float _2223 = log2(_1949);
        _2036 = (exp2(_2223 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2207 * cbSceneParam._m0[78u].x)) * _2197.x) / cbSceneParam._m0[78u].x)) + _1946;
        _2038 = (exp2(_2223 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2207 * cbSceneParam._m0[78u].y)) * _2197.y) / cbSceneParam._m0[78u].y)) + _1947;
        _2040 = (exp2(_2223 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2207 * cbSceneParam._m0[78u].z)) * _2197.z) / cbSceneParam._m0[78u].z)) + _1948;
        _2042 = _2206 * _1949;
    }
    else
    {
        _2036 = _1946;
        _2038 = _1947;
        _2040 = _1948;
        _2042 = _1949;
    }
    bool _2233;
    vec4 _2052;
    vec4 _2075;
    float _2077;
    float _2081;
    float _2082;
    float _2083;
    float _2084;
    bool _2095;
    for (;;)
    {
        _2052 = cbMatDynParam._m0[0u];
        float _2054 = roundEven(_2052.y);
        bool _2055 = _2054 == 3.0;
        float _2057 = log2(_2042);
        float _2064 = exp2(_2057 * cbSceneParam._m0[78u].x) * _1917;
        float _2065 = exp2(_2057 * cbSceneParam._m0[78u].y) * _1918;
        float _2066 = exp2(_2057 * cbSceneParam._m0[78u].z) * _1919;
        float _2073 = _363 + (-0.5);
        _2075 = cbMtdParam._m0[1u];
        _2077 = _2075.y * _2073;
        float _2080 = (_2054 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2081 = _2080 * (_2055 ? _2064 : (_2064 + (cbSceneParam._m0[72u].w * _2036)));
        _2082 = _2080 * (_2055 ? _2065 : (_2065 + (cbSceneParam._m0[72u].w * _2038)));
        _2083 = _2080 * (_2055 ? _2066 : (_2066 + (cbSceneParam._m0[72u].w * _2040)));
        _2084 = _2073 * 0.999000012874603271484375;
        _2095 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2095)
        {
            if ((cbInstanceData._m0[_1410 + 7u].x + _2084) < 0.5)
            {
                _2233 = true;
                break;
            }
        }
        uint _2177 = _1897 + uint(_2052.w);
        if ((cbInstanceData._m0[_2177].w < 1.0) && ((cbInstanceData._m0[_2177].w + _2084) < 0.5))
        {
            _2233 = true;
            break;
        }
        if ((_2077 + _305) < _2075.x)
        {
            _2233 = true;
            break;
        }
        _2233 = false;
        break;
    }
    float _2365;
    if (_2233)
    {
        discard_state = true;
        _2365 = 0.0;
    }
    else
    {
        _2365 = _1924;
    }
    SV_Target.x = _2081;
    SV_Target.y = _2082;
    SV_Target.z = _2083;
    SV_Target.w = _2365;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1924;
    discard_exit();
}


