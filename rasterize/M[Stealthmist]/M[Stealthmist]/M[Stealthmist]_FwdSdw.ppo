#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Stealthmist_snp_0_Texture2D_0;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _607;
uint _2210;
uint _2211;
uint _2212;
uint _2428;
uint _2429;
uint _2430;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _212 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _222 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _212);
    float _223 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _212);
    float _224 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _212);
    float _232 = cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x;
    float _239 = TEXCOORD_1.y - ((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _282 = ((_239 * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _301 = (((texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z - (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[10u].x) * ((_232 * 3.2999999523162841796875) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[10u].x) * _239) + cbTextureTilingScale._m0[0u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_232 * 6.900000095367431640625) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _282)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_232 * 16.0) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _282)).x * 0.100000001490116119384765625)) * TEXCOORD_1.z;
    float _311 = cbMtdParam._m0[10u].y - cbMtdParam._m0[10u].z;
    float _313 = (sqrt(((_222 * _222) + (_223 * _223)) + (_224 * _224)) - cbMtdParam._m0[10u].z) / (isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0)));
    float _2646 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _316 = _301 * (isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0)));
    float _325 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _326 = _325 * _166;
    float _327 = _325 * _167;
    float _328 = _325 * _168;
    float _2657 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _329 = isnan(1.0) ? _2657 : (isnan(_2657) ? 1.0 : min(_2657, 1.0));
    float _345 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _349 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _350 = _222 * _349;
    float _351 = _223 * _349;
    float _352 = _224 * _349;
    float _358 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _359 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _380 = fma(_328, cbSceneParam._m0[5u].z, fma(_327, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _326));
    float _383 = fma(_328, cbSceneParam._m0[6u].z, fma(_327, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _326));
    float _386 = fma(_328, cbSceneParam._m0[7u].z, fma(_327, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _326));
    vec4 _395 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _358, cbSceneParam._m0[86u].y * _359));
    float _398 = _395.x * TEXCOORD_1.w;
    float _399 = dot(vec3(_326, _327, _328), vec3(_350, _351, _352));
    float _402 = _399 * 2.0;
    float _407 = (_402 * _326) - _350;
    float _408 = (_402 * _327) - _351;
    float _409 = (_402 * _328) - _352;
    float _431 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _435 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _439 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _606;
    float _608;
    float _609;
    float _610;
    float _611;
    float _612;
    float _613;
    float _614;
    float _615;
    float _616;
    float _617;
    float _618;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _466 = fma(_439, cbModelParam._m0[26u].z, fma(_435, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _431));
        float _470 = fma(_439, cbModelParam._m0[27u].z, fma(_435, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _431));
        float _474 = fma(_439, cbModelParam._m0[28u].z, fma(_435, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _431));
        float _499 = _431 + _326;
        float _500 = _435 + _327;
        float _501 = _439 + _328;
        float _511 = fma(_501, cbModelParam._m0[26u].z, fma(_500, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _499)) - _466;
        float _512 = fma(_501, cbModelParam._m0[27u].z, fma(_500, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _499)) - _470;
        float _513 = fma(_501, cbModelParam._m0[28u].z, fma(_500, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _499)) - _474;
        float _517 = inversesqrt(dot(vec3(_511, _512, _513), vec3(_511, _512, _513)));
        float _530 = ((_517 * _511) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_466 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _531 = ((_517 * _512) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_470 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _532 = ((_517 * _513) / cbModelParam._m0[34u].z) + ((((((_474 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _535 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _542 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _549 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _556 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        float _569 = exp2((_535.w + (-0.5)) * 20.0) * 2.0;
        float _579 = exp2((_542.w + (-0.5)) * 20.0) * 2.0;
        float _589 = exp2((_549.w + (-0.5)) * 20.0) * 2.0;
        float _599 = exp2((_556.w + (-0.5)) * 20.0) * 2.0;
        float _600 = _599 * (_556.x + (-0.5));
        float _601 = _599 * (_556.y + (-0.5));
        float _602 = _599 * (_556.z + (-0.5));
        _606 = _569 * (_535.z + (-0.5));
        _608 = _569 * (_535.y + (-0.5));
        _609 = _569 * (_535.x + (-0.5));
        _610 = _579 * (_542.z + (-0.5));
        _611 = _579 * (_542.y + (-0.5));
        _612 = _579 * (_542.x + (-0.5));
        _613 = _589 * (_549.z + (-0.5));
        _614 = _589 * (_549.y + (-0.5));
        _615 = _589 * (_549.x + (-0.5));
        _616 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
        _617 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
        _618 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    }
    else
    {
        _606 = _607;
        _608 = _607;
        _609 = _607;
        _610 = _607;
        _611 = _607;
        _612 = _607;
        _613 = _607;
        _614 = _607;
        _615 = _607;
        _616 = _607;
        _617 = _607;
        _618 = _607;
    }
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _644 = fma(_439, cbModelParam._m0[30u].z, fma(_435, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _431));
        float _648 = fma(_439, cbModelParam._m0[31u].z, fma(_435, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _431));
        float _652 = fma(_439, cbModelParam._m0[32u].z, fma(_435, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _431));
        float _675 = _431 + _326;
        float _676 = _435 + _327;
        float _677 = _439 + _328;
        float _687 = fma(_677, cbModelParam._m0[30u].z, fma(_676, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _675)) - _644;
        float _688 = fma(_677, cbModelParam._m0[31u].z, fma(_676, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _675)) - _648;
        float _689 = fma(_677, cbModelParam._m0[32u].z, fma(_676, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _675)) - _652;
        float _693 = inversesqrt(dot(vec3(_687, _688, _689), vec3(_687, _688, _689)));
        float _706 = ((_693 * _687) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_644 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _707 = ((_693 * _688) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_648 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _708 = ((_693 * _689) / cbModelParam._m0[35u].z) + ((((((_652 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _710 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_706, _707, _708), 0.0);
        vec4 _717 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_706, _707, _708), 0.0);
        vec4 _724 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_706, _707, _708), 0.0);
        vec4 _731 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_706, _707, _708), 0.0);
        float _743 = exp2((_710.w + (-0.5)) * 20.0) * 2.0;
        float _753 = exp2((_717.w + (-0.5)) * 20.0) * 2.0;
        float _763 = exp2((_724.w + (-0.5)) * 20.0) * 2.0;
        float _773 = exp2((_731.w + (-0.5)) * 20.0) * 2.0;
        float _774 = _773 * (_731.x + (-0.5));
        float _775 = _773 * (_731.y + (-0.5));
        float _776 = _773 * (_731.z + (-0.5));
        _780 = _743 * (_710.z + (-0.5));
        _781 = _743 * (_710.y + (-0.5));
        _782 = _743 * (_710.x + (-0.5));
        _783 = _753 * (_717.z + (-0.5));
        _784 = _753 * (_717.y + (-0.5));
        _785 = _753 * (_717.x + (-0.5));
        _786 = _763 * (_724.z + (-0.5));
        _787 = _763 * (_724.y + (-0.5));
        _788 = _763 * (_724.x + (-0.5));
        _789 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
        _790 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
        _791 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    }
    else
    {
        _780 = _607;
        _781 = _607;
        _782 = _607;
        _783 = _607;
        _784 = _607;
        _785 = _607;
        _786 = _607;
        _787 = _607;
        _788 = _607;
        _789 = _607;
        _790 = _607;
        _791 = _607;
    }
    float _806 = _407 * 0.5;
    float _807 = _408 * 0.5;
    float _808 = _409 * 0.5;
    float _809 = dot(vec4(_806, _807, _808, 1.0), vec4(_782, _785, _788, _791));
    float _812 = dot(vec4(_806, _807, _808, 1.0), vec4(_781, _784, _787, _790));
    float _815 = dot(vec4(_806, _807, _808, 1.0), vec4(_780, _783, _786, _789));
    float _850;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _822 = dot(vec4(_806, _807, _808, 1.0), vec4(_606, _610, _613, _616));
        float _826 = dot(vec4(_806, _807, _808, 1.0), vec4(_608, _611, _614, _617));
        float _830 = dot(vec4(_806, _807, _808, 1.0), vec4(_609, _612, _615, _618));
        float _837 = dot(vec4(cbModelParam._m0[39u]), vec4(_806, _807, _808, 1.0));
        _850 = dot(vec3(isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0)), isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0)), isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_837) ? 0.0 : (isnan(0.0) ? _837 : max(0.0, _837))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _850 = 1.0;
    }
    float _861;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _852 = dot(vec4(cbModelParam._m0[40u]), vec4(_806, _807, _808, 1.0));
        _861 = dot(vec3(isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0)), isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0)), isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_852) ? 0.0 : (isnan(0.0) ? _852 : max(0.0, _852))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _861 = 1.0;
    }
    float _865 = (_861 * cbModelParam._m0[1u].x) + (_850 * (1.0 - cbModelParam._m0[1u].x));
    float _871 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _954;
    float _956;
    float _958;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _921 = fma(_439, cbModelParam._m0[13u].z, fma(_435, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _431)) + cbModelParam._m0[13u].w;
        float _925 = fma(_439, cbModelParam._m0[14u].z, fma(_435, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _431)) + cbModelParam._m0[14u].w;
        float _929 = fma(_439, cbModelParam._m0[15u].z, fma(_435, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _431)) + cbModelParam._m0[15u].w;
        float _932 = fma(_409, cbModelParam._m0[13u].z, fma(_408, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _407));
        float _935 = fma(_409, cbModelParam._m0[14u].z, fma(_408, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _407));
        float _938 = fma(_409, cbModelParam._m0[15u].z, fma(_408, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _407));
        float _964;
        if (_932 > 0.0)
        {
            _964 = abs((1.0 - _921) / _932);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_932 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_921 + 1.0) / _932);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _964 = frontier_phi_14_12_ladder;
        }
        float _1155;
        if (_935 > 0.0)
        {
            _1155 = abs((1.0 - _925) / _935);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_935 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_925 + 1.0) / _935);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1155 = frontier_phi_23_19_ladder;
        }
        float _1510;
        if (_938 > 0.0)
        {
            _1510 = abs((1.0 - _929) / _938);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_938 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_929 + 1.0) / _938);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1510 = frontier_phi_35_30_ladder;
        }
        float _1512 = isnan(_1155) ? _964 : (isnan(_964) ? _1155 : min(_964, _1155));
        float _1513 = isnan(_1510) ? _1512 : (isnan(_1512) ? _1510 : min(_1512, _1510));
        float _1517 = (_1513 * _932) + _921;
        float _1518 = (_1513 * _935) + _925;
        float _1519 = (_1513 * _938) + _929;
        float _1520 = _1513 * 9.9999997473787516355514526367188e-05;
        float _1522 = (-1.0) - _1520;
        float _1524 = _1520 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1519 > _1524) || ((_1519 < _1522) || ((_1518 > _1524) || ((_1518 < _1522) || ((_1517 < _1522) || (_1517 > _1524))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1690 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1519, cbModelParam._m0[9u].z, fma(_1518, cbModelParam._m0[9u].y, _1517 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1519, cbModelParam._m0[10u].z, fma(_1518, cbModelParam._m0[10u].y, _1517 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1519, cbModelParam._m0[11u].z, fma(_1518, cbModelParam._m0[11u].y, _1517 * cbModelParam._m0[11u].x))), _871);
            frontier_phi_13_35_ladder = _1690.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1690.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1690.x * cbModelParam._m0[1u].y;
        }
        _954 = frontier_phi_13_35_ladder_2;
        _956 = frontier_phi_13_35_ladder_1;
        _958 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _942 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_407, _408, _409), _871);
        _954 = _942.x * cbModelParam._m0[1u].y;
        _956 = _942.y * cbModelParam._m0[1u].y;
        _958 = _942.z * cbModelParam._m0[1u].y;
    }
    float _961 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1053;
    float _1055;
    float _1057;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1017 = fma(_439, cbModelParam._m0[21u].z, fma(_435, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _431)) + cbModelParam._m0[21u].w;
        float _1021 = fma(_439, cbModelParam._m0[22u].z, fma(_435, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _431)) + cbModelParam._m0[22u].w;
        float _1025 = fma(_439, cbModelParam._m0[23u].z, fma(_435, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _431)) + cbModelParam._m0[23u].w;
        float _1028 = fma(_409, cbModelParam._m0[21u].z, fma(_408, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _407));
        float _1031 = fma(_409, cbModelParam._m0[22u].z, fma(_408, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _407));
        float _1034 = fma(_409, cbModelParam._m0[23u].z, fma(_408, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _407));
        float _1160;
        if (_1028 > 0.0)
        {
            _1160 = abs((1.0 - _1017) / _1028);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1028 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1017 + 1.0) / _1028);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1160 = frontier_phi_25_21_ladder;
        }
        float _1537;
        if (_1031 > 0.0)
        {
            _1537 = abs((1.0 - _1021) / _1031);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1031 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1021 + 1.0) / _1031);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1537 = frontier_phi_37_32_ladder;
        }
        float _1762;
        if (_1034 > 0.0)
        {
            _1762 = abs((1.0 - _1025) / _1034);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1034 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1025 + 1.0) / _1034);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _1762 = frontier_phi_47_44_ladder;
        }
        float _1764 = isnan(_1537) ? _1160 : (isnan(_1160) ? _1537 : min(_1160, _1537));
        float _1765 = isnan(_1762) ? _1764 : (isnan(_1764) ? _1762 : min(_1764, _1762));
        float _1769 = (_1765 * _1028) + _1017;
        float _1770 = (_1765 * _1031) + _1021;
        float _1771 = (_1765 * _1034) + _1025;
        float _1772 = _1765 * 9.9999997473787516355514526367188e-05;
        float _1773 = (-1.0) - _1772;
        float _1775 = _1772 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_1771 > _1775) || ((_1771 < _1773) || ((_1770 > _1775) || ((_1770 < _1773) || ((_1769 < _1773) || (_1769 > _1775))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1932 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1771, cbModelParam._m0[17u].z, fma(_1770, cbModelParam._m0[17u].y, _1769 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1771, cbModelParam._m0[18u].z, fma(_1770, cbModelParam._m0[18u].y, _1769 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1771, cbModelParam._m0[19u].z, fma(_1770, cbModelParam._m0[19u].y, _1769 * cbModelParam._m0[19u].x))), _961);
            frontier_phi_22_47_ladder = _1932.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _1932.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _1932.x * cbModelParam._m0[1u].z;
        }
        _1053 = frontier_phi_22_47_ladder_2;
        _1055 = frontier_phi_22_47_ladder_1;
        _1057 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1037 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_407, _408, _409), _961);
        _1053 = _1037.x * cbModelParam._m0[1u].z;
        _1055 = _1037.y * cbModelParam._m0[1u].z;
        _1057 = _1037.z * cbModelParam._m0[1u].z;
    }
    float _1069 = _398 * 0.01200000010430812835693359375;
    float _1071 = _1069 * ((cbModelParam._m0[1u].w * (_1053 - _954)) + _954);
    float _1072 = _1069 * ((cbModelParam._m0[1u].w * (_1055 - _956)) + _956);
    float _1073 = _1069 * ((cbModelParam._m0[1u].w * (_1057 - _958)) + _958);
    float _1094 = fma(_1073, cbSceneParam._m0[89u].z, fma(_1072, cbSceneParam._m0[89u].y, _1071 * cbSceneParam._m0[89u].x));
    float _1097 = fma(_1073, cbSceneParam._m0[90u].z, fma(_1072, cbSceneParam._m0[90u].y, _1071 * cbSceneParam._m0[90u].x));
    float _1100 = fma(_1073, cbSceneParam._m0[91u].z, fma(_1072, cbSceneParam._m0[91u].y, _1071 * cbSceneParam._m0[91u].x));
    float _1134 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1138 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1142 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1146 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1147 = _1134 / _1146;
    float _1148 = _1138 / _1146;
    float _1149 = _1142 / _1146;
    float _1296;
    float _1297;
    float _1298;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1176 = ((uint(_1149 > cbSceneParam._m0[59u].y) + uint(_1149 > cbSceneParam._m0[59u].x)) + uint(_1149 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1177 = _1176 + 43u;
        uint _1185 = _1176 + 44u;
        uint _1193 = _1176 + 45u;
        uint _1201 = _1176 + 46u;
        float _1212 = fma(_1146, cbSceneParam._m0[_1177].w, fma(_1142, cbSceneParam._m0[_1177].z, fma(_1138, cbSceneParam._m0[_1177].y, _1134 * cbSceneParam._m0[_1177].x)));
        float _1216 = fma(_1146, cbSceneParam._m0[_1185].w, fma(_1142, cbSceneParam._m0[_1185].z, fma(_1138, cbSceneParam._m0[_1185].y, _1134 * cbSceneParam._m0[_1185].x)));
        float _1224 = fma(_1146, cbSceneParam._m0[_1201].w, fma(_1142, cbSceneParam._m0[_1201].z, fma(_1138, cbSceneParam._m0[_1201].y, _1134 * cbSceneParam._m0[_1201].x)));
        float _1229 = cbSceneParam._m0[33u].z * _1224;
        float _1231 = cbSceneParam._m0[33u].w * _1224;
        float _1234 = fma(_1146, cbSceneParam._m0[_1193].w, fma(_1142, cbSceneParam._m0[_1193].z, fma(_1138, cbSceneParam._m0[_1193].y, _1134 * cbSceneParam._m0[_1193].x))) / _1224;
        float _1282 = (cbSceneParam._m0[33u].x - sqrt(((_1148 * _1148) + (_1147 * _1147)) + (_1149 * _1149))) * cbSceneParam._m0[33u].y;
        float _2783 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1289 = (isnan(1.0) ? _2783 : (isnan(_2783) ? 1.0 : min(_2783, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1229 + _1212) / _1224, (_1231 + _1216) / _1224), _1234), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1231 + _1212) / _1224, (_1216 - _1229) / _1224), _1234), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1212 - _1229) / _1224, (_1216 - _1231) / _1224), _1234), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1212 - _1231) / _1224, (_1229 + _1216) / _1224), _1234), 0.0)).x), vec4(0.25)));
        _1296 = 1.0 - (_1289 * cbSceneParam._m0[34u].x);
        _1297 = 1.0 - (_1289 * cbSceneParam._m0[34u].y);
        _1298 = 1.0 - (_1289 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1296 = 1.0;
        _1297 = 1.0;
        _1298 = 1.0;
    }
    float _1362;
    float _1364;
    float _1366;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1350 = fma(_1146, cbSceneParam._m0[63u].w, fma(_1142, cbSceneParam._m0[63u].z, fma(_1138, cbSceneParam._m0[63u].y, _1134 * cbSceneParam._m0[63u].x)));
        float _1351 = fma(_1146, cbSceneParam._m0[60u].w, fma(_1142, cbSceneParam._m0[60u].z, fma(_1138, cbSceneParam._m0[60u].y, _1134 * cbSceneParam._m0[60u].x))) / _1350;
        float _1352 = fma(_1146, cbSceneParam._m0[61u].w, fma(_1142, cbSceneParam._m0[61u].z, fma(_1138, cbSceneParam._m0[61u].y, _1134 * cbSceneParam._m0[61u].x))) / _1350;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1351 >= cbSceneParam._m0[64u].x) && (_1352 >= cbSceneParam._m0[64u].y)) && (_1351 <= cbSceneParam._m0[64u].z)) && (_1352 <= cbSceneParam._m0[64u].w))
        {
            float _1550 = fma(_1146, cbSceneParam._m0[62u].w, fma(_1142, cbSceneParam._m0[62u].z, fma(_1138, cbSceneParam._m0[62u].y, _1134 * cbSceneParam._m0[62u].x))) / _1350;
            float _1554 = isnan(cbSceneParam._m0[41u].w) ? _1550 : (isnan(_1550) ? cbSceneParam._m0[41u].w : max(_1550, cbSceneParam._m0[41u].w));
            float _1597 = (cbSceneParam._m0[33u].x - sqrt(((_1148 * _1148) + (_1147 * _1147)) + (_1149 * _1149))) * cbSceneParam._m0[33u].y;
            float _2799 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
            float _1604 = (isnan(1.0) ? _2799 : (isnan(_2799) ? 1.0 : min(_2799, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1351, cbSceneParam._m0[33u].w + _1352), _1554), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1351, _1352 - cbSceneParam._m0[33u].z), _1554), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1351 - cbSceneParam._m0[33u].z, _1352 - cbSceneParam._m0[33u].w), _1554), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1351 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1352), _1554), 0.0)).x), vec4(0.25)));
            float _1608 = 1.0 - (_1604 * cbSceneParam._m0[34u].x);
            float _1609 = 1.0 - (_1604 * cbSceneParam._m0[34u].y);
            float _1610 = 1.0 - (_1604 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1610) ? _1298 : (isnan(_1298) ? _1610 : min(_1298, _1610));
            frontier_phi_34_33_ladder_1 = isnan(_1609) ? _1297 : (isnan(_1297) ? _1609 : min(_1297, _1609));
            frontier_phi_34_33_ladder_2 = isnan(_1608) ? _1296 : (isnan(_1296) ? _1608 : min(_1296, _1608));
        }
        else
        {
            frontier_phi_34_33_ladder = _1298;
            frontier_phi_34_33_ladder_1 = _1297;
            frontier_phi_34_33_ladder_2 = _1296;
        }
        _1362 = frontier_phi_34_33_ladder_2;
        _1364 = frontier_phi_34_33_ladder_1;
        _1366 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1362 = _1296;
        _1364 = _1297;
        _1366 = _1298;
    }
    uint _1368 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1372 = floatBitsToUint(cbInstanceData._m0[_1368 + 5u]);
    uint _1374 = _1372.x * 14u;
    uint _1375 = _1374 + 13u;
    float _1381 = _398 + (-1.0);
    float _1386 = (cbLight._m0[_1375].x * _1381) + 1.0;
    float _1387 = (cbLight._m0[_1375].y * _1381) + 1.0;
    float _1388 = (cbLight._m0[_1375].w * _1381) + 1.0;
    uint _1389 = _1374 + 8u;
    float _1400 = cbLight._m0[_1374].x + _350;
    float _1401 = cbLight._m0[_1374].y + _351;
    float _1402 = cbLight._m0[_1374].z + _352;
    float _1406 = inversesqrt(dot(vec3(_1400, _1401, _1402), vec3(_1400, _1401, _1402)));
    float _1410 = dot(vec3(_326, _327, _328), vec3(cbLight._m0[_1374].xyz));
    float _2825 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
    float _1413 = isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0));
    float _2836 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _1414 = isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0));
    float _1415 = dot(vec3(cbLight._m0[_1374].xyz), vec3(_1400 * _1406, _1401 * _1406, _1402 * _1406));
    float _2847 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
    float _1426 = (exp2(log2(1.0 - (isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1432 = (0.5 / ((_1413 + 9.9999999392252902907785028219223e-09) + _1414)) * _1413;
    float _2858 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
    float _1434 = (isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0))) * 0.31831014156341552734375;
    float _1436 = isnan(1.0) ? _1386 : (isnan(_1386) ? 1.0 : min(_1386, 1.0));
    uint _1449 = _1374 + 9u;
    uint _1455 = _1374 | 1u;
    float _1461 = cbLight._m0[_1455].x + _350;
    float _1462 = cbLight._m0[_1455].y + _351;
    float _1463 = cbLight._m0[_1455].z + _352;
    float _1467 = inversesqrt(dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463)));
    float _1471 = dot(vec3(_326, _327, _328), vec3(cbLight._m0[_1455].xyz));
    float _2874 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    float _1474 = isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0));
    float _1475 = dot(vec3(cbLight._m0[_1455].xyz), vec3(_1461 * _1467, _1462 * _1467, _1463 * _1467));
    float _2885 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
    float _1484 = (exp2(log2(1.0 - (isnan(1.0) ? _2885 : (isnan(_2885) ? 1.0 : min(_2885, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1488 = (0.5 / ((_1474 + 9.9999999392252902907785028219223e-09) + _1414)) * _1474;
    float _2896 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    float _1490 = (isnan(1.0) ? _2896 : (isnan(_2896) ? 1.0 : min(_2896, 1.0))) * 0.31831014156341552734375;
    float _1491 = isnan(1.0) ? _1387 : (isnan(_1387) ? 1.0 : min(_1387, 1.0));
    float _1501 = (((_1484 * cbLight._m0[_1449].x) * _1490) * _1491) + ((((cbLight._m0[_1389].x * _1362) * _1426) * _1434) * _1436);
    float _1502 = (((_1484 * cbLight._m0[_1449].y) * _1490) * _1491) + ((((cbLight._m0[_1389].y * _1364) * _1426) * _1434) * _1436);
    float _1503 = (((_1484 * cbLight._m0[_1449].z) * _1490) * _1491) + ((((cbLight._m0[_1389].z * _1366) * _1426) * _1434) * _1436);
    uvec4 _1507 = floatBitsToUint(cbLight._m0[_1374 + 12u]);
    float _1611;
    float _1613;
    float _1615;
    if (_1507.x == 0u)
    {
        _1611 = _1501;
        _1613 = _1502;
        _1615 = _1503;
    }
    else
    {
        float _1621 = (cbLight._m0[_1375].z * _1381) + 1.0;
        uint _1622 = _1374 + 10u;
        uint _1628 = _1374 + 2u;
        float _1634 = cbLight._m0[_1628].x + _350;
        float _1635 = cbLight._m0[_1628].y + _351;
        float _1636 = cbLight._m0[_1628].z + _352;
        float _1640 = inversesqrt(dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636)));
        float _1644 = dot(vec3(_326, _327, _328), vec3(cbLight._m0[_1628].xyz));
        float _2912 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1647 = isnan(1.0) ? _2912 : (isnan(_2912) ? 1.0 : min(_2912, 1.0));
        float _1648 = dot(vec3(cbLight._m0[_1628].xyz), vec3(_1634 * _1640, _1635 * _1640, _1636 * _1640));
        float _2923 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1657 = (exp2(log2(1.0 - (isnan(1.0) ? _2923 : (isnan(_2923) ? 1.0 : min(_2923, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1661 = (0.5 / ((_1647 + 9.9999999392252902907785028219223e-09) + _1414)) * _1647;
        float _2934 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1663 = (isnan(1.0) ? _2934 : (isnan(_2934) ? 1.0 : min(_2934, 1.0))) * 0.31831014156341552734375;
        float _1664 = isnan(1.0) ? _1621 : (isnan(_1621) ? 1.0 : min(_1621, 1.0));
        _1611 = (((_1657 * cbLight._m0[_1622].x) * _1663) * _1664) + _1501;
        _1613 = (((_1657 * cbLight._m0[_1622].y) * _1663) * _1664) + _1502;
        _1615 = (((_1657 * cbLight._m0[_1622].z) * _1663) * _1664) + _1503;
    }
    float _1699;
    float _1701;
    float _1703;
    if (_1507.y == 0u)
    {
        _1699 = _1611;
        _1701 = _1613;
        _1703 = _1615;
    }
    else
    {
        uint _1710 = _1374 + 11u;
        uint _1716 = _1374 + 3u;
        float _1722 = cbLight._m0[_1716].x + _350;
        float _1723 = cbLight._m0[_1716].y + _351;
        float _1724 = cbLight._m0[_1716].z + _352;
        float _1728 = inversesqrt(dot(vec3(_1722, _1723, _1724), vec3(_1722, _1723, _1724)));
        float _1732 = dot(vec3(_326, _327, _328), vec3(cbLight._m0[_1716].xyz));
        float _2950 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1735 = isnan(1.0) ? _2950 : (isnan(_2950) ? 1.0 : min(_2950, 1.0));
        float _1736 = dot(vec3(cbLight._m0[_1716].xyz), vec3(_1722 * _1728, _1723 * _1728, _1724 * _1728));
        float _2961 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1745 = (exp2(log2(1.0 - (isnan(1.0) ? _2961 : (isnan(_2961) ? 1.0 : min(_2961, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1749 = (0.5 / ((_1735 + 9.9999999392252902907785028219223e-09) + _1414)) * _1735;
        float _2972 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1751 = (isnan(1.0) ? _2972 : (isnan(_2972) ? 1.0 : min(_2972, 1.0))) * 0.31831014156341552734375;
        float _1752 = isnan(1.0) ? _1388 : (isnan(_1388) ? 1.0 : min(_1388, 1.0));
        _1699 = (((_1745 * cbLight._m0[_1710].x) * _1751) * _1752) + _1611;
        _1701 = (((_1745 * cbLight._m0[_1710].y) * _1751) * _1752) + _1613;
        _1703 = (((_1745 * cbLight._m0[_1710].z) * _1751) * _1752) + _1615;
    }
    float _1845;
    float _1847;
    float _1849;
    if (_1372.y == 0u)
    {
        uvec4 _1799 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1800 = _1799.x;
        uint _1811 = uint((float(_1799.y) * floor(float(uint(cbSceneParam._m0[85u].y * _359) / _1800))) + floor(float(uint(cbSceneParam._m0[85u].x * _358) / _1800)));
        float _1821 = (log2(_1149 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1822 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
        uint _1825 = uint(isnan(14.0) ? _1822 : (isnan(_1822) ? 14.0 : min(_1822, 14.0)));
        uvec4 _1830 = texelFetch(g_lightClusterGridBuffer, int(((_1825 << 2u) + (_1811 << 6u)) >> 2u));
        uint _1831 = _1830.x;
        uint _1832 = _1799.z;
        float _1937;
        float _1939;
        float _1941;
        if (((((1u << ((_1832 >> 4u) & 15u)) + 4294967295u) & _1831) == 0u) || ((_1832 & 240u) == 0u))
        {
            _1937 = 0.0;
            _1939 = 0.0;
            _1941 = 0.0;
        }
        else
        {
            float _1938;
            float _1940;
            float _1942;
            float _2065 = 0.0;
            float _2066 = 0.0;
            float _2067 = 0.0;
            uint _2068 = 0u;
            uint _2077;
            bool _2078;
            for (;;)
            {
                _2077 = texelFetch(g_lightClassification, int((((_1825 << 5u) + (_1811 << 9u)) + (_2068 << 2u)) >> 2u)).x;
                _2078 = _2077 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                if (_2078)
                {
                    frontier_phi_62_pred = _2067;
                    frontier_phi_62_pred_1 = _2066;
                    frontier_phi_62_pred_2 = _2065;
                }
                else
                {
                    float _2180;
                    float _2181;
                    float _2182;
                    uint _2183;
                    _2180 = _2065;
                    _2181 = _2066;
                    _2182 = _2067;
                    _2183 = _2077;
                    float _2118;
                    float _2119;
                    float _2120;
                    for (;;)
                    {
                        uint _2187 = uint(findLSB(_2183)) + (_2068 << 5u);
                        uint _2184 = (_2183 + 4294967295u) & _2183;
                        uint _2189 = _2187 * 48u;
                        vec4 _2203 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2189)).x, texelFetch(g_PointLightRenderingBuffer, int(_2189 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2189 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2189 + 3u)).x));
                        uint _2220 = (_2187 * 48u) + 8u;
                        vec3 _2231 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2220)).x, texelFetch(g_PointLightRenderingBuffer, int(_2220 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2220 + 2u)).x));
                        float _2235 = _2203.x - _1147;
                        float _2236 = _2203.y - _1148;
                        float _2237 = _2203.z - _1149;
                        float _2238 = dot(vec3(_2235, _2236, _2237), vec3(_2235, _2236, _2237));
                        float _2241 = inversesqrt(_2238);
                        float _2250 = 1.0 - (_2238 * _2203.w);
                        float _2998 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
                        float _2252 = sqrt(_2238) * uintBitsToFloat(uvec4(_2210, _2211, _2212, texelFetch(g_PointLightRenderingBuffer, int(((_2187 * 48u) + 4u) + 3u)).x)).w;
                        float _2255 = 1.39999997615814208984375 / (_2252 + 1.39999997615814208984375);
                        float _2256 = _2255 * _2255;
                        float _2259 = ((1.0 - _2256) * dot(vec3(_380, _383, _386), vec3(_2241 * _2235, _2241 * _2236, _2241 * _2237))) + _2256;
                        float _2261 = (-0.0) - _1147;
                        float _2262 = (-0.0) - _1148;
                        float _2263 = (-0.0) - _1149;
                        float _2267 = inversesqrt(dot(vec3(_2261, _2262, _2263), vec3(_2261, _2262, _2263)));
                        float _2271 = dot(vec3(_380, _383, _386), vec3(_2267 * _2261, _2267 * _2262, _2267 * _2263));
                        float _3009 = isnan(0.0) ? _2271 : (isnan(_2271) ? 0.0 : max(_2271, 0.0));
                        float _3020 = isnan(0.0) ? _2259 : (isnan(_2259) ? 0.0 : max(_2259, 0.0));
                        float _2275 = isnan(1.0) ? _3020 : (isnan(_3020) ? 1.0 : min(_3020, 1.0));
                        float _2279 = (0.5 / (((isnan(1.0) ? _3009 : (isnan(_3009) ? 1.0 : min(_3009, 1.0))) + 9.9999999392252902907785028219223e-09) + _2275)) * _2275;
                        float _3031 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
                        float _2288 = (((isnan(1.0) ? _3031 : (isnan(_3031) ? 1.0 : min(_3031, 1.0))) * 3.1415927410125732421875) / (((_2252 * _2252) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0)));
                        _2118 = (_2288 * _2231.x) + _2180;
                        _2119 = (_2288 * _2231.y) + _2181;
                        _2120 = (_2288 * _2231.z) + _2182;
                        if (_2184 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2180 = _2118;
                            _2181 = _2119;
                            _2182 = _2120;
                            _2183 = _2184;
                        }
                    }
                    frontier_phi_62_pred = _2120;
                    frontier_phi_62_pred_1 = _2119;
                    frontier_phi_62_pred_2 = _2118;
                }
                _1942 = frontier_phi_62_pred;
                _1940 = frontier_phi_62_pred_1;
                _1938 = frontier_phi_62_pred_2;
                uint _2069 = _2068 + 1u;
                if (_2069 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2065 = _1938;
                    _2066 = _1940;
                    _2067 = _1942;
                    _2068 = _2069;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1937 = _1938;
            _1939 = _1940;
            _1941 = _1942;
        }
        uvec4 _1945 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1946 = _1945.z;
        uint _1948 = (_1946 >> 8u) & 15u;
        float _2045;
        float _2047;
        float _2049;
        if (((4294967295u << _1948) & _1831) == 0u)
        {
            _2045 = _1937;
            _2047 = _1939;
            _2049 = _1941;
        }
        else
        {
            float _2061 = inversesqrt(dot(vec3(_1147, _1148, _1149), vec3(_1147, _1148, _1149)));
            float frontier_phi_56_57_ladder;
            float frontier_phi_56_57_ladder_1;
            float frontier_phi_56_57_ladder_2;
            if (_1948 < ((_1946 >> 12u) & 15u))
            {
                float _2046;
                float _2048;
                float _2050;
                float _2166 = _1937;
                float _2167 = _1939;
                float _2168 = _1941;
                uint _2169 = _1948;
                uint _2178;
                bool _2179;
                for (;;)
                {
                    _2178 = texelFetch(g_lightClassification, int((((_1825 << 5u) + (_1811 << 9u)) + (_2169 << 2u)) >> 2u)).x;
                    _2179 = _2178 == 0u;
                    float frontier_phi_68_pred;
                    float frontier_phi_68_pred_1;
                    float frontier_phi_68_pred_2;
                    if (_2179)
                    {
                        frontier_phi_68_pred = _2168;
                        frontier_phi_68_pred_1 = _2167;
                        frontier_phi_68_pred_2 = _2166;
                    }
                    else
                    {
                        float _2293;
                        float _2294;
                        float _2295;
                        float _2517;
                        float _2518;
                        float _2519;
                        float _2303 = _2166;
                        float _2304 = _2167;
                        float _2305 = _2168;
                        uint _2306 = _2178;
                        uint _2307;
                        uint _2317;
                        vec4 _2332;
                        float _2333;
                        vec3 _2345;
                        vec4 _2361;
                        vec4 _2377;
                        float _2424;
                        bool _2425;
                        for (;;)
                        {
                            _2317 = ((_2169 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2306));
                            _2307 = (_2306 + 4294967295u) & _2306;
                            uint _2319 = _2317 * 40u;
                            _2332 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2319)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2319 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2319 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2319 + 3u)).x));
                            _2333 = _2332.w;
                            uint _2335 = (_2317 * 40u) + 8u;
                            _2345 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 2u)).x));
                            uint _2348 = (_2317 * 40u) + 16u;
                            _2361 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2348)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2348 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2348 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2348 + 3u)).x));
                            uint _2364 = (_2317 * 40u) + 20u;
                            _2377 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2364)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2364 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2364 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2364 + 3u)).x));
                            uint _2380 = (_2317 * 40u) + 24u;
                            vec4 _2393 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2380)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 3u)).x));
                            uint _2399 = (_2317 * 40u) + 28u;
                            vec4 _2412 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2399)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 3u)).x));
                            _2424 = fma(_1149, _2412.z, fma(_1148, _2412.y, _2412.x * _1147)) + _2412.w;
                            _2425 = !((fma(_1149, _2393.z, fma(_1148, _2393.y, _2393.x * _1147)) + _2393.w) <= 0.0);
                            float frontier_phi_74_pred;
                            float frontier_phi_74_pred_1;
                            float frontier_phi_74_pred_2;
                            if (_2425)
                            {
                                float _2459 = _2332.x - _1147;
                                float _2460 = _2332.y - _1148;
                                float _2461 = _2332.z - _1149;
                                float _2462 = dot(vec3(_2459, _2460, _2461), vec3(_2459, _2460, _2461));
                                float _2465 = inversesqrt(_2462);
                                float _2472 = 1.0 - (_2462 / (_2333 * _2333));
                                float _3042 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
                                float _2474 = sqrt(_2462) * uintBitsToFloat(uvec4(_2428, _2429, _2430, texelFetch(g_SpotLightRenderingBuffer, int(((_2317 * 40u) + 4u) + 3u)).x)).w;
                                float _2476 = 1.39999997615814208984375 / (_2474 + 1.39999997615814208984375);
                                float _2477 = _2476 * _2476;
                                float _2480 = (fma(_1149, _2361.z, fma(_1148, _2361.y, _2361.x * _1147)) + _2361.w) / _2424;
                                float _2481 = (fma(_1149, _2377.z, fma(_1148, _2377.y, _2377.x * _1147)) + _2377.w) / _2424;
                                float _2485 = 1.0 - dot(vec2(_2480, _2481), vec2(_2480, _2481));
                                float _3053 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
                                float _2493 = dot(vec3(_380, _383, _386), vec3((-0.0) - (_1147 * _2061), (-0.0) - (_1148 * _2061), (-0.0) - (_1149 * _2061)));
                                float _3064 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
                                float _2501 = ((1.0 - _2477) * dot(vec3(_380, _383, _386), vec3(_2465 * _2459, _2465 * _2460, _2465 * _2461))) + _2477;
                                float _3075 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
                                float _2502 = isnan(1.0) ? _3075 : (isnan(_3075) ? 1.0 : min(_3075, 1.0));
                                float _2506 = (0.5 / (((isnan(1.0) ? _3064 : (isnan(_3064) ? 1.0 : min(_3064, 1.0))) + 9.9999999392252902907785028219223e-09) + _2502)) * _2502;
                                float _3086 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
                                float _2513 = ((isnan(1.0) ? _3053 : (isnan(_3053) ? 1.0 : min(_3053, 1.0))) * (isnan(1.0) ? _3042 : (isnan(_3042) ? 1.0 : min(_3042, 1.0)))) * (((isnan(1.0) ? _3086 : (isnan(_3086) ? 1.0 : min(_3086, 1.0))) * 3.1415927410125732421875) / (((_2474 * _2474) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_74_pred = _2513 * _2345.x;
                                frontier_phi_74_pred_1 = _2513 * _2345.z;
                                frontier_phi_74_pred_2 = _2513 * _2345.y;
                            }
                            else
                            {
                                frontier_phi_74_pred = 0.0;
                                frontier_phi_74_pred_1 = 0.0;
                                frontier_phi_74_pred_2 = 0.0;
                            }
                            _2517 = frontier_phi_74_pred;
                            _2519 = frontier_phi_74_pred_1;
                            _2518 = frontier_phi_74_pred_2;
                            _2293 = _2517 + _2303;
                            _2294 = _2518 + _2304;
                            _2295 = _2519 + _2305;
                            if (_2307 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2303 = _2293;
                                _2304 = _2294;
                                _2305 = _2295;
                                _2306 = _2307;
                                continue;
                            }
                        }
                        frontier_phi_68_pred = _2295;
                        frontier_phi_68_pred_1 = _2294;
                        frontier_phi_68_pred_2 = _2293;
                    }
                    _2050 = frontier_phi_68_pred;
                    _2048 = frontier_phi_68_pred_1;
                    _2046 = frontier_phi_68_pred_2;
                    uint _2170 = _2169 + 1u;
                    if (_2170 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2166 = _2046;
                        _2167 = _2048;
                        _2168 = _2050;
                        _2169 = _2170;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_56_57_ladder = _2050;
                frontier_phi_56_57_ladder_1 = _2048;
                frontier_phi_56_57_ladder_2 = _2046;
            }
            else
            {
                frontier_phi_56_57_ladder = _1941;
                frontier_phi_56_57_ladder_1 = _1939;
                frontier_phi_56_57_ladder_2 = _1937;
            }
            _2045 = frontier_phi_56_57_ladder_2;
            _2047 = frontier_phi_56_57_ladder_1;
            _2049 = frontier_phi_56_57_ladder;
        }
        float _2054 = isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0));
        _1845 = ((_2045 * 0.039999999105930328369140625) * _2054) + _1699;
        _1847 = ((_2047 * 0.039999999105930328369140625) * _2054) + _1701;
        _1849 = ((_2049 * 0.039999999105930328369140625) * _2054) + _1703;
    }
    else
    {
        _1845 = _1699;
        _1847 = _1701;
        _1849 = _1703;
    }
    uint _1856 = (_1368 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _3102 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _1872 = (cbInstanceData._m0[_1856].x * cbMtdParam._m0[9u].x) + ((_1845 + ((isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0))) * _865)) * cbPerFrame._m0[3u].x);
    float _1873 = (cbInstanceData._m0[_1856].y * cbMtdParam._m0[9u].y) + ((_1847 + ((isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0))) * _865)) * cbPerFrame._m0[3u].x);
    float _1874 = (cbInstanceData._m0[_1856].z * cbMtdParam._m0[9u].z) + ((_1849 + ((isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0))) * _865)) * cbPerFrame._m0[3u].x);
    float _1882 = cbInstanceData._m0[_1368 + 6u].w * (isnan(1.0) ? _3102 : (isnan(_3102) ? 1.0 : min(_3102, 1.0)));
    float _1887 = _358 / cbSceneParam._m0[86u].x;
    float _1888 = _359 / cbSceneParam._m0[86u].y;
    vec4 _1902 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1887, _1888, (log2((isnan(cbSceneParam._m0[77u].w) ? _345 : (isnan(_345) ? cbSceneParam._m0[77u].w : min(_345, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1904 = _1902.x;
    float _1905 = _1902.y;
    float _1906 = _1902.z;
    float _1907 = _1902.w;
    float _1994;
    float _1996;
    float _1998;
    float _2000;
    if (_345 > cbSceneParam._m0[78u].w)
    {
        float _1956 = isnan(_345) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _345 : min(cbSceneParam._m0[80u].w, _345));
        float _1957 = _1956 / _345;
        float _1968 = _1957 * _222;
        float _1969 = _223 * _1957;
        float _1970 = (-0.0) - _1969;
        float _1972 = _1957 * _224;
        float _1974 = (cbSceneParam._m0[77u].w * _1970) / _1956;
        float _1975 = _1974 + cbSceneParam._m0[79u].w;
        float _1976 = cbSceneParam._m0[79u].w - _1969;
        float _1982 = sqrt(((_1968 * _1968) + (_1969 * _1969)) + (_1972 * _1972));
        float _1985 = (1.0 - (cbSceneParam._m0[77u].w / _1956)) * _1982;
        float _1990 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1992 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2128;
        if (abs((_1970 - _1974) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2128 = ((((_1975 > 0.0) ? exp2(_1990 * _1975) : (2.0 - exp2(_1992 * _1975))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1985;
        }
        else
        {
            float _2091 = 1.0 / cbSceneParam._m0[80u].x;
            float _2092 = isnan(_1976) ? _1975 : (isnan(_1975) ? _1976 : max(_1975, _1976));
            float _2093 = isnan(_1976) ? _1975 : (isnan(_1975) ? _1976 : min(_1975, _1976));
            float _2102 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : min(_2092, 0.0));
            float _2103 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : min(_2093, 0.0));
            _2128 = ((abs(_1982 / _1970) * cbSceneParam._m0[80u].y) * ((((_2102 - _2103) * 2.0) - ((exp2(_1990 * (isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0)))) - exp2(_1990 * (isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0))))) * _2091)) - ((exp2(_1992 * _2102) - exp2(_1992 * _2103)) * _2091))) + (_1985 * cbSceneParam._m0[80u].z);
        }
        vec4 _2130 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1887, _1888, 1.0), 0.0);
        float _2139 = exp2((_2128 * (-1.44269502162933349609375)) * (1.0 - _2130.w));
        float _2140 = log2(_2139);
        float _2156 = log2(_1907);
        _1994 = (exp2(_2156 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2140 * cbSceneParam._m0[78u].x)) * _2130.x) / cbSceneParam._m0[78u].x)) + _1904;
        _1996 = (exp2(_2156 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2140 * cbSceneParam._m0[78u].y)) * _2130.y) / cbSceneParam._m0[78u].y)) + _1905;
        _1998 = (exp2(_2156 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2140 * cbSceneParam._m0[78u].z)) * _2130.z) / cbSceneParam._m0[78u].z)) + _1906;
        _2000 = _2139 * _1907;
    }
    else
    {
        _1994 = _1904;
        _1996 = _1905;
        _1998 = _1906;
        _2000 = _1907;
    }
    float _2012 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2013 = _2012 == 3.0;
    float _2015 = log2(_2000);
    float _2022 = exp2(_2015 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0)));
    float _2023 = exp2(_2015 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0)));
    float _2024 = exp2(_2015 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0)));
    float _2033 = (_2012 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2033 * (_2013 ? _2022 : (_2022 + (cbSceneParam._m0[72u].w * _1994)));
    SV_Target.y = _2033 * (_2013 ? _2023 : (_2023 + (cbSceneParam._m0[72u].w * _1996)));
    SV_Target.z = _2033 * (_2013 ? _2024 : (_2024 + (cbSceneParam._m0[72u].w * _1998)));
    SV_Target.w = _1882;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1882;
}


