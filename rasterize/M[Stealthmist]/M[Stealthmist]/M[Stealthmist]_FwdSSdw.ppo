#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Stealthmist_snp_0_Texture2D_0;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _605;
uint _1957;
uint _1958;
uint _1959;
uint _2175;
uint _2176;
uint _2177;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    float _210 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _220 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _210);
    float _221 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _210);
    float _222 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _210);
    float _230 = cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x;
    float _237 = TEXCOORD_1.y - ((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _280 = ((_237 * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _299 = (((texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z - (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[10u].x) * ((_230 * 3.2999999523162841796875) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[10u].x) * _237) + cbTextureTilingScale._m0[0u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_230 * 6.900000095367431640625) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _280)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_Stealthmist_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_230 * 16.0) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _280)).x * 0.100000001490116119384765625)) * TEXCOORD_1.z;
    float _309 = cbMtdParam._m0[10u].y - cbMtdParam._m0[10u].z;
    float _311 = (sqrt(((_220 * _220) + (_221 * _221)) + (_222 * _222)) - cbMtdParam._m0[10u].z) / (isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0)));
    float _2384 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _314 = _299 * (isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0)));
    float _323 = inversesqrt(dot(vec3(_164, _165, _166), vec3(_164, _165, _166)));
    float _324 = _323 * _164;
    float _325 = _323 * _165;
    float _326 = _323 * _166;
    float _2395 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _327 = isnan(1.0) ? _2395 : (isnan(_2395) ? 1.0 : min(_2395, 1.0));
    float _343 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _347 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _348 = _220 * _347;
    float _349 = _221 * _347;
    float _350 = _222 * _347;
    float _356 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _357 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _378 = fma(_326, cbSceneParam._m0[5u].z, fma(_325, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _324));
    float _381 = fma(_326, cbSceneParam._m0[6u].z, fma(_325, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _324));
    float _384 = fma(_326, cbSceneParam._m0[7u].z, fma(_325, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _324));
    vec4 _393 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _356, cbSceneParam._m0[86u].y * _357));
    float _396 = _393.x * TEXCOORD_1.w;
    float _397 = dot(vec3(_324, _325, _326), vec3(_348, _349, _350));
    float _400 = _397 * 2.0;
    float _405 = (_400 * _324) - _348;
    float _406 = (_400 * _325) - _349;
    float _407 = (_400 * _326) - _350;
    float _429 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _433 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _437 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _604;
    float _606;
    float _607;
    float _608;
    float _609;
    float _610;
    float _611;
    float _612;
    float _613;
    float _614;
    float _615;
    float _616;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _464 = fma(_437, cbModelParam._m0[26u].z, fma(_433, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _429));
        float _468 = fma(_437, cbModelParam._m0[27u].z, fma(_433, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _429));
        float _472 = fma(_437, cbModelParam._m0[28u].z, fma(_433, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _429));
        float _497 = _429 + _324;
        float _498 = _433 + _325;
        float _499 = _437 + _326;
        float _509 = fma(_499, cbModelParam._m0[26u].z, fma(_498, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _497)) - _464;
        float _510 = fma(_499, cbModelParam._m0[27u].z, fma(_498, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _497)) - _468;
        float _511 = fma(_499, cbModelParam._m0[28u].z, fma(_498, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _497)) - _472;
        float _515 = inversesqrt(dot(vec3(_509, _510, _511), vec3(_509, _510, _511)));
        float _528 = ((_515 * _509) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_464 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _529 = ((_515 * _510) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_468 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _530 = ((_515 * _511) / cbModelParam._m0[34u].z) + ((((((_472 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _533 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_528, _529, _530), 0.0);
        vec4 _540 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_528, _529, _530), 0.0);
        vec4 _547 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_528, _529, _530), 0.0);
        vec4 _554 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_528, _529, _530), 0.0);
        float _567 = exp2((_533.w + (-0.5)) * 20.0) * 2.0;
        float _577 = exp2((_540.w + (-0.5)) * 20.0) * 2.0;
        float _587 = exp2((_547.w + (-0.5)) * 20.0) * 2.0;
        float _597 = exp2((_554.w + (-0.5)) * 20.0) * 2.0;
        float _598 = _597 * (_554.x + (-0.5));
        float _599 = _597 * (_554.y + (-0.5));
        float _600 = _597 * (_554.z + (-0.5));
        _604 = _567 * (_533.z + (-0.5));
        _606 = _567 * (_533.y + (-0.5));
        _607 = _567 * (_533.x + (-0.5));
        _608 = _577 * (_540.z + (-0.5));
        _609 = _577 * (_540.y + (-0.5));
        _610 = _577 * (_540.x + (-0.5));
        _611 = _587 * (_547.z + (-0.5));
        _612 = _587 * (_547.y + (-0.5));
        _613 = _587 * (_547.x + (-0.5));
        _614 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
        _615 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
        _616 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    }
    else
    {
        _604 = _605;
        _606 = _605;
        _607 = _605;
        _608 = _605;
        _609 = _605;
        _610 = _605;
        _611 = _605;
        _612 = _605;
        _613 = _605;
        _614 = _605;
        _615 = _605;
        _616 = _605;
    }
    float _778;
    float _779;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _642 = fma(_437, cbModelParam._m0[30u].z, fma(_433, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _429));
        float _646 = fma(_437, cbModelParam._m0[31u].z, fma(_433, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _429));
        float _650 = fma(_437, cbModelParam._m0[32u].z, fma(_433, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _429));
        float _673 = _429 + _324;
        float _674 = _433 + _325;
        float _675 = _437 + _326;
        float _685 = fma(_675, cbModelParam._m0[30u].z, fma(_674, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _673)) - _642;
        float _686 = fma(_675, cbModelParam._m0[31u].z, fma(_674, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _673)) - _646;
        float _687 = fma(_675, cbModelParam._m0[32u].z, fma(_674, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _673)) - _650;
        float _691 = inversesqrt(dot(vec3(_685, _686, _687), vec3(_685, _686, _687)));
        float _704 = ((_691 * _685) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_642 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _705 = ((_691 * _686) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_646 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _706 = ((_691 * _687) / cbModelParam._m0[35u].z) + ((((((_650 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _708 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_704, _705, _706), 0.0);
        vec4 _715 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_704, _705, _706), 0.0);
        vec4 _722 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_704, _705, _706), 0.0);
        vec4 _729 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_704, _705, _706), 0.0);
        float _741 = exp2((_708.w + (-0.5)) * 20.0) * 2.0;
        float _751 = exp2((_715.w + (-0.5)) * 20.0) * 2.0;
        float _761 = exp2((_722.w + (-0.5)) * 20.0) * 2.0;
        float _771 = exp2((_729.w + (-0.5)) * 20.0) * 2.0;
        float _772 = _771 * (_729.x + (-0.5));
        float _773 = _771 * (_729.y + (-0.5));
        float _774 = _771 * (_729.z + (-0.5));
        _778 = _741 * (_708.z + (-0.5));
        _779 = _741 * (_708.y + (-0.5));
        _780 = _741 * (_708.x + (-0.5));
        _781 = _751 * (_715.z + (-0.5));
        _782 = _751 * (_715.y + (-0.5));
        _783 = _751 * (_715.x + (-0.5));
        _784 = _761 * (_722.z + (-0.5));
        _785 = _761 * (_722.y + (-0.5));
        _786 = _761 * (_722.x + (-0.5));
        _787 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
        _788 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
        _789 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    }
    else
    {
        _778 = _605;
        _779 = _605;
        _780 = _605;
        _781 = _605;
        _782 = _605;
        _783 = _605;
        _784 = _605;
        _785 = _605;
        _786 = _605;
        _787 = _605;
        _788 = _605;
        _789 = _605;
    }
    float _804 = _405 * 0.5;
    float _805 = _406 * 0.5;
    float _806 = _407 * 0.5;
    float _807 = dot(vec4(_804, _805, _806, 1.0), vec4(_780, _783, _786, _789));
    float _810 = dot(vec4(_804, _805, _806, 1.0), vec4(_779, _782, _785, _788));
    float _813 = dot(vec4(_804, _805, _806, 1.0), vec4(_778, _781, _784, _787));
    float _848;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _820 = dot(vec4(_804, _805, _806, 1.0), vec4(_604, _608, _611, _614));
        float _824 = dot(vec4(_804, _805, _806, 1.0), vec4(_606, _609, _612, _615));
        float _828 = dot(vec4(_804, _805, _806, 1.0), vec4(_607, _610, _613, _616));
        float _835 = dot(vec4(cbModelParam._m0[39u]), vec4(_804, _805, _806, 1.0));
        _848 = dot(vec3(isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0)), isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0)), isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_835) ? 0.0 : (isnan(0.0) ? _835 : max(0.0, _835))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _848 = 1.0;
    }
    float _859;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _850 = dot(vec4(cbModelParam._m0[40u]), vec4(_804, _805, _806, 1.0));
        _859 = dot(vec3(isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0)), isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0)), isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_850) ? 0.0 : (isnan(0.0) ? _850 : max(0.0, _850))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _859 = 1.0;
    }
    float _863 = (_859 * cbModelParam._m0[1u].x) + (_848 * (1.0 - cbModelParam._m0[1u].x));
    float _869 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _952;
    float _954;
    float _956;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _919 = fma(_437, cbModelParam._m0[13u].z, fma(_433, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _429)) + cbModelParam._m0[13u].w;
        float _923 = fma(_437, cbModelParam._m0[14u].z, fma(_433, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _429)) + cbModelParam._m0[14u].w;
        float _927 = fma(_437, cbModelParam._m0[15u].z, fma(_433, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _429)) + cbModelParam._m0[15u].w;
        float _930 = fma(_407, cbModelParam._m0[13u].z, fma(_406, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _405));
        float _933 = fma(_407, cbModelParam._m0[14u].z, fma(_406, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _405));
        float _936 = fma(_407, cbModelParam._m0[15u].z, fma(_406, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _405));
        float _962;
        if (_930 > 0.0)
        {
            _962 = abs((1.0 - _919) / _930);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_930 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_919 + 1.0) / _930);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _962 = frontier_phi_14_12_ladder;
        }
        float _1265;
        if (_933 > 0.0)
        {
            _1265 = abs((1.0 - _923) / _933);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_933 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_923 + 1.0) / _933);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1265 = frontier_phi_23_19_ladder;
        }
        float _1409;
        if (_936 > 0.0)
        {
            _1409 = abs((1.0 - _927) / _936);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_936 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_927 + 1.0) / _936);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1409 = frontier_phi_35_30_ladder;
        }
        float _1411 = isnan(_1265) ? _962 : (isnan(_962) ? _1265 : min(_962, _1265));
        float _1412 = isnan(_1409) ? _1411 : (isnan(_1411) ? _1409 : min(_1411, _1409));
        float _1416 = (_1412 * _930) + _919;
        float _1417 = (_1412 * _933) + _923;
        float _1418 = (_1412 * _936) + _927;
        float _1419 = _1412 * 9.9999997473787516355514526367188e-05;
        float _1421 = (-1.0) - _1419;
        float _1423 = _1419 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1418 > _1423) || ((_1418 < _1421) || ((_1417 > _1423) || ((_1417 < _1421) || ((_1416 < _1421) || (_1416 > _1423))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1628 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1418, cbModelParam._m0[9u].z, fma(_1417, cbModelParam._m0[9u].y, _1416 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1418, cbModelParam._m0[10u].z, fma(_1417, cbModelParam._m0[10u].y, _1416 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1418, cbModelParam._m0[11u].z, fma(_1417, cbModelParam._m0[11u].y, _1416 * cbModelParam._m0[11u].x))), _869);
            frontier_phi_13_35_ladder = _1628.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1628.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1628.x * cbModelParam._m0[1u].y;
        }
        _952 = frontier_phi_13_35_ladder_2;
        _954 = frontier_phi_13_35_ladder_1;
        _956 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _940 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_405, _406, _407), _869);
        _952 = _940.x * cbModelParam._m0[1u].y;
        _954 = _940.y * cbModelParam._m0[1u].y;
        _956 = _940.z * cbModelParam._m0[1u].y;
    }
    float _959 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1051;
    float _1053;
    float _1055;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1015 = fma(_437, cbModelParam._m0[21u].z, fma(_433, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _429)) + cbModelParam._m0[21u].w;
        float _1019 = fma(_437, cbModelParam._m0[22u].z, fma(_433, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _429)) + cbModelParam._m0[22u].w;
        float _1023 = fma(_437, cbModelParam._m0[23u].z, fma(_433, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _429)) + cbModelParam._m0[23u].w;
        float _1026 = fma(_407, cbModelParam._m0[21u].z, fma(_406, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _405));
        float _1029 = fma(_407, cbModelParam._m0[22u].z, fma(_406, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _405));
        float _1032 = fma(_407, cbModelParam._m0[23u].z, fma(_406, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _405));
        float _1270;
        if (_1026 > 0.0)
        {
            _1270 = abs((1.0 - _1015) / _1026);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1026 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1015 + 1.0) / _1026);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1270 = frontier_phi_25_21_ladder;
        }
        float _1436;
        if (_1029 > 0.0)
        {
            _1436 = abs((1.0 - _1019) / _1029);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1029 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1019 + 1.0) / _1029);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1436 = frontier_phi_37_32_ladder;
        }
        float _1745;
        if (_1032 > 0.0)
        {
            _1745 = abs((1.0 - _1023) / _1032);
        }
        else
        {
            float frontier_phi_48_43_ladder;
            if (_1032 < 0.0)
            {
                frontier_phi_48_43_ladder = abs((_1023 + 1.0) / _1032);
            }
            else
            {
                frontier_phi_48_43_ladder = 5000.0;
            }
            _1745 = frontier_phi_48_43_ladder;
        }
        float _1747 = isnan(_1436) ? _1270 : (isnan(_1270) ? _1436 : min(_1270, _1436));
        float _1748 = isnan(_1745) ? _1747 : (isnan(_1747) ? _1745 : min(_1747, _1745));
        float _1752 = (_1748 * _1026) + _1015;
        float _1753 = (_1748 * _1029) + _1019;
        float _1754 = (_1748 * _1032) + _1023;
        float _1755 = _1748 * 9.9999997473787516355514526367188e-05;
        float _1756 = (-1.0) - _1755;
        float _1758 = _1755 + 1.0;
        float frontier_phi_22_48_ladder;
        float frontier_phi_22_48_ladder_1;
        float frontier_phi_22_48_ladder_2;
        if ((_1754 > _1758) || ((_1754 < _1756) || ((_1753 > _1758) || ((_1753 < _1756) || ((_1752 < _1756) || (_1752 > _1758))))))
        {
            frontier_phi_22_48_ladder = 0.0;
            frontier_phi_22_48_ladder_1 = 0.0;
            frontier_phi_22_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1860 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1754, cbModelParam._m0[17u].z, fma(_1753, cbModelParam._m0[17u].y, _1752 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1754, cbModelParam._m0[18u].z, fma(_1753, cbModelParam._m0[18u].y, _1752 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1754, cbModelParam._m0[19u].z, fma(_1753, cbModelParam._m0[19u].y, _1752 * cbModelParam._m0[19u].x))), _959);
            frontier_phi_22_48_ladder = _1860.z * cbModelParam._m0[1u].z;
            frontier_phi_22_48_ladder_1 = _1860.y * cbModelParam._m0[1u].z;
            frontier_phi_22_48_ladder_2 = _1860.x * cbModelParam._m0[1u].z;
        }
        _1051 = frontier_phi_22_48_ladder_2;
        _1053 = frontier_phi_22_48_ladder_1;
        _1055 = frontier_phi_22_48_ladder;
    }
    else
    {
        vec4 _1035 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_405, _406, _407), _959);
        _1051 = _1035.x * cbModelParam._m0[1u].z;
        _1053 = _1035.y * cbModelParam._m0[1u].z;
        _1055 = _1035.z * cbModelParam._m0[1u].z;
    }
    float _1067 = _396 * 0.01200000010430812835693359375;
    float _1069 = _1067 * ((cbModelParam._m0[1u].w * (_1051 - _952)) + _952);
    float _1070 = _1067 * ((cbModelParam._m0[1u].w * (_1053 - _954)) + _954);
    float _1071 = _1067 * ((cbModelParam._m0[1u].w * (_1055 - _956)) + _956);
    float _1092 = fma(_1071, cbSceneParam._m0[89u].z, fma(_1070, cbSceneParam._m0[89u].y, _1069 * cbSceneParam._m0[89u].x));
    float _1095 = fma(_1071, cbSceneParam._m0[90u].z, fma(_1070, cbSceneParam._m0[90u].y, _1069 * cbSceneParam._m0[90u].x));
    float _1098 = fma(_1071, cbSceneParam._m0[91u].z, fma(_1070, cbSceneParam._m0[91u].y, _1069 * cbSceneParam._m0[91u].x));
    vec4 _1106 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_356, _357));
    float _1108 = _1106.w;
    uint _1123 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1127 = floatBitsToUint(cbInstanceData._m0[_1123 + 5u]);
    uint _1129 = _1127.x * 14u;
    uint _1130 = _1129 + 13u;
    float _1136 = _396 + (-1.0);
    float _1141 = (cbLight._m0[_1130].x * _1136) + 1.0;
    float _1142 = (cbLight._m0[_1130].y * _1136) + 1.0;
    float _1143 = (cbLight._m0[_1130].w * _1136) + 1.0;
    uint _1144 = _1129 + 8u;
    float _1155 = cbLight._m0[_1129].x + _348;
    float _1156 = cbLight._m0[_1129].y + _349;
    float _1157 = cbLight._m0[_1129].z + _350;
    float _1161 = inversesqrt(dot(vec3(_1155, _1156, _1157), vec3(_1155, _1156, _1157)));
    float _1165 = dot(vec3(_324, _325, _326), vec3(cbLight._m0[_1129].xyz));
    float _2521 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
    float _1168 = isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0));
    float _2532 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _1169 = isnan(1.0) ? _2532 : (isnan(_2532) ? 1.0 : min(_2532, 1.0));
    float _1170 = dot(vec3(cbLight._m0[_1129].xyz), vec3(_1155 * _1161, _1156 * _1161, _1157 * _1161));
    float _2543 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
    float _1181 = (exp2(log2(1.0 - (isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1187 = (0.5 / ((_1168 + 9.9999999392252902907785028219223e-09) + _1169)) * _1168;
    float _2554 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
    float _1189 = (isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0))) * 0.31831014156341552734375;
    float _1191 = isnan(1.0) ? _1141 : (isnan(_1141) ? 1.0 : min(_1141, 1.0));
    uint _1204 = _1129 + 9u;
    uint _1210 = _1129 | 1u;
    float _1216 = cbLight._m0[_1210].x + _348;
    float _1217 = cbLight._m0[_1210].y + _349;
    float _1218 = cbLight._m0[_1210].z + _350;
    float _1222 = inversesqrt(dot(vec3(_1216, _1217, _1218), vec3(_1216, _1217, _1218)));
    float _1226 = dot(vec3(_324, _325, _326), vec3(cbLight._m0[_1210].xyz));
    float _2570 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _1229 = isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0));
    float _1230 = dot(vec3(cbLight._m0[_1210].xyz), vec3(_1216 * _1222, _1217 * _1222, _1218 * _1222));
    float _2581 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
    float _1239 = (exp2(log2(1.0 - (isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1243 = (0.5 / ((_1229 + 9.9999999392252902907785028219223e-09) + _1169)) * _1229;
    float _2592 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
    float _1245 = (isnan(1.0) ? _2592 : (isnan(_2592) ? 1.0 : min(_2592, 1.0))) * 0.31831014156341552734375;
    float _1246 = isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0));
    float _1256 = (((_1239 * cbLight._m0[_1204].x) * _1245) * _1246) + ((((cbLight._m0[_1144].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1108))) * _1181) * _1189) * _1191);
    float _1257 = (((_1239 * cbLight._m0[_1204].y) * _1245) * _1246) + ((((cbLight._m0[_1144].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1108))) * _1181) * _1189) * _1191);
    float _1258 = (((_1239 * cbLight._m0[_1204].z) * _1245) * _1246) + ((((cbLight._m0[_1144].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1108))) * _1181) * _1189) * _1191);
    uvec4 _1262 = floatBitsToUint(cbLight._m0[_1129 + 12u]);
    float _1275;
    float _1277;
    float _1279;
    if (_1262.x == 0u)
    {
        _1275 = _1256;
        _1277 = _1257;
        _1279 = _1258;
    }
    else
    {
        float _1285 = (cbLight._m0[_1130].z * _1136) + 1.0;
        uint _1286 = _1129 + 10u;
        uint _1292 = _1129 + 2u;
        float _1298 = cbLight._m0[_1292].x + _348;
        float _1299 = cbLight._m0[_1292].y + _349;
        float _1300 = cbLight._m0[_1292].z + _350;
        float _1304 = inversesqrt(dot(vec3(_1298, _1299, _1300), vec3(_1298, _1299, _1300)));
        float _1308 = dot(vec3(_324, _325, _326), vec3(cbLight._m0[_1292].xyz));
        float _2608 = isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0));
        float _1311 = isnan(1.0) ? _2608 : (isnan(_2608) ? 1.0 : min(_2608, 1.0));
        float _1312 = dot(vec3(cbLight._m0[_1292].xyz), vec3(_1298 * _1304, _1299 * _1304, _1300 * _1304));
        float _2619 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1321 = (exp2(log2(1.0 - (isnan(1.0) ? _2619 : (isnan(_2619) ? 1.0 : min(_2619, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1325 = (0.5 / ((_1311 + 9.9999999392252902907785028219223e-09) + _1169)) * _1311;
        float _2630 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1327 = (isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0))) * 0.31831014156341552734375;
        float _1328 = isnan(1.0) ? _1285 : (isnan(_1285) ? 1.0 : min(_1285, 1.0));
        _1275 = (((_1321 * cbLight._m0[_1286].x) * _1327) * _1328) + _1256;
        _1277 = (((_1321 * cbLight._m0[_1286].y) * _1327) * _1328) + _1257;
        _1279 = (((_1321 * cbLight._m0[_1286].z) * _1327) * _1328) + _1258;
    }
    float _1346;
    float _1348;
    float _1350;
    if (_1262.y == 0u)
    {
        _1346 = _1275;
        _1348 = _1277;
        _1350 = _1279;
    }
    else
    {
        uint _1357 = _1129 + 11u;
        uint _1363 = _1129 + 3u;
        float _1369 = cbLight._m0[_1363].x + _348;
        float _1370 = cbLight._m0[_1363].y + _349;
        float _1371 = cbLight._m0[_1363].z + _350;
        float _1375 = inversesqrt(dot(vec3(_1369, _1370, _1371), vec3(_1369, _1370, _1371)));
        float _1379 = dot(vec3(_324, _325, _326), vec3(cbLight._m0[_1363].xyz));
        float _2646 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1382 = isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0));
        float _1383 = dot(vec3(cbLight._m0[_1363].xyz), vec3(_1369 * _1375, _1370 * _1375, _1371 * _1375));
        float _2657 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = (exp2(log2(1.0 - (isnan(1.0) ? _2657 : (isnan(_2657) ? 1.0 : min(_2657, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1396 = (0.5 / ((_1382 + 9.9999999392252902907785028219223e-09) + _1169)) * _1382;
        float _2668 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1398 = (isnan(1.0) ? _2668 : (isnan(_2668) ? 1.0 : min(_2668, 1.0))) * 0.31831014156341552734375;
        float _1399 = isnan(1.0) ? _1143 : (isnan(_1143) ? 1.0 : min(_1143, 1.0));
        _1346 = (((_1392 * cbLight._m0[_1357].x) * _1398) * _1399) + _1275;
        _1348 = (((_1392 * cbLight._m0[_1357].y) * _1398) * _1399) + _1277;
        _1350 = (((_1392 * cbLight._m0[_1357].z) * _1398) * _1399) + _1279;
    }
    float _1541;
    float _1543;
    float _1545;
    if (_1127.y == 0u)
    {
        float _1480 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1481 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1480;
        float _1482 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1480;
        float _1483 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1480;
        uvec4 _1495 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1496 = _1495.x;
        uint _1507 = uint((float(_1495.y) * floor(float(uint(cbSceneParam._m0[85u].y * _357) / _1496))) + floor(float(uint(cbSceneParam._m0[85u].x * _356) / _1496)));
        float _1517 = (log2(_1483 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1518 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        uint _1521 = uint(isnan(14.0) ? _1518 : (isnan(_1518) ? 14.0 : min(_1518, 14.0)));
        uvec4 _1526 = texelFetch(g_lightClusterGridBuffer, int(((_1521 << 2u) + (_1507 << 6u)) >> 2u));
        uint _1527 = _1526.x;
        uint _1528 = _1495.z;
        float _1637;
        float _1639;
        float _1641;
        if (((((1u << ((_1528 >> 4u) & 15u)) + 4294967295u) & _1527) == 0u) || ((_1528 & 240u) == 0u))
        {
            _1637 = 0.0;
            _1639 = 0.0;
            _1641 = 0.0;
        }
        else
        {
            float _1638;
            float _1640;
            float _1642;
            float _1791 = 0.0;
            float _1792 = 0.0;
            float _1793 = 0.0;
            uint _1794 = 0u;
            uint _1803;
            bool _1804;
            for (;;)
            {
                _1803 = texelFetch(g_lightClassification, int((((_1521 << 5u) + (_1507 << 9u)) + (_1794 << 2u)) >> 2u)).x;
                _1804 = _1803 == 0u;
                float frontier_phi_57_pred;
                float frontier_phi_57_pred_1;
                float frontier_phi_57_pred_2;
                if (_1804)
                {
                    frontier_phi_57_pred = _1793;
                    frontier_phi_57_pred_1 = _1792;
                    frontier_phi_57_pred_2 = _1791;
                }
                else
                {
                    float _1927;
                    float _1928;
                    float _1929;
                    uint _1930;
                    _1927 = _1791;
                    _1928 = _1792;
                    _1929 = _1793;
                    _1930 = _1803;
                    float _1865;
                    float _1866;
                    float _1867;
                    for (;;)
                    {
                        uint _1934 = uint(findLSB(_1930)) + (_1794 << 5u);
                        uint _1931 = (_1930 + 4294967295u) & _1930;
                        uint _1936 = _1934 * 48u;
                        vec4 _1950 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_1936)).x, texelFetch(g_PointLightRenderingBuffer, int(_1936 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1936 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1936 + 3u)).x));
                        uint _1967 = (_1934 * 48u) + 8u;
                        vec3 _1978 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_1967)).x, texelFetch(g_PointLightRenderingBuffer, int(_1967 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1967 + 2u)).x));
                        float _1982 = _1950.x - _1481;
                        float _1983 = _1950.y - _1482;
                        float _1984 = _1950.z - _1483;
                        float _1985 = dot(vec3(_1982, _1983, _1984), vec3(_1982, _1983, _1984));
                        float _1988 = inversesqrt(_1985);
                        float _1997 = 1.0 - (_1985 * _1950.w);
                        float _2694 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
                        float _1999 = sqrt(_1985) * uintBitsToFloat(uvec4(_1957, _1958, _1959, texelFetch(g_PointLightRenderingBuffer, int(((_1934 * 48u) + 4u) + 3u)).x)).w;
                        float _2002 = 1.39999997615814208984375 / (_1999 + 1.39999997615814208984375);
                        float _2003 = _2002 * _2002;
                        float _2006 = ((1.0 - _2003) * dot(vec3(_378, _381, _384), vec3(_1988 * _1982, _1988 * _1983, _1988 * _1984))) + _2003;
                        float _2008 = (-0.0) - _1481;
                        float _2009 = (-0.0) - _1482;
                        float _2010 = (-0.0) - _1483;
                        float _2014 = inversesqrt(dot(vec3(_2008, _2009, _2010), vec3(_2008, _2009, _2010)));
                        float _2018 = dot(vec3(_378, _381, _384), vec3(_2014 * _2008, _2014 * _2009, _2014 * _2010));
                        float _2705 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0));
                        float _2716 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
                        float _2022 = isnan(1.0) ? _2716 : (isnan(_2716) ? 1.0 : min(_2716, 1.0));
                        float _2026 = (0.5 / (((isnan(1.0) ? _2705 : (isnan(_2705) ? 1.0 : min(_2705, 1.0))) + 9.9999999392252902907785028219223e-09) + _2022)) * _2022;
                        float _2727 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
                        float _2035 = (((isnan(1.0) ? _2727 : (isnan(_2727) ? 1.0 : min(_2727, 1.0))) * 3.1415927410125732421875) / (((_1999 * _1999) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2694 : (isnan(_2694) ? 1.0 : min(_2694, 1.0)));
                        _1865 = (_2035 * _1978.x) + _1927;
                        _1866 = (_2035 * _1978.y) + _1928;
                        _1867 = (_2035 * _1978.z) + _1929;
                        if (_1931 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _1927 = _1865;
                            _1928 = _1866;
                            _1929 = _1867;
                            _1930 = _1931;
                        }
                    }
                    frontier_phi_57_pred = _1867;
                    frontier_phi_57_pred_1 = _1866;
                    frontier_phi_57_pred_2 = _1865;
                }
                _1642 = frontier_phi_57_pred;
                _1640 = frontier_phi_57_pred_1;
                _1638 = frontier_phi_57_pred_2;
                uint _1795 = _1794 + 1u;
                if (_1795 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1791 = _1638;
                    _1792 = _1640;
                    _1793 = _1642;
                    _1794 = _1795;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1637 = _1638;
            _1639 = _1640;
            _1641 = _1642;
        }
        uvec4 _1645 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1646 = _1645.z;
        uint _1648 = (_1646 >> 8u) & 15u;
        float _1771;
        float _1773;
        float _1775;
        if (((4294967295u << _1648) & _1527) == 0u)
        {
            _1771 = _1637;
            _1773 = _1639;
            _1775 = _1641;
        }
        else
        {
            float _1787 = inversesqrt(dot(vec3(_1481, _1482, _1483), vec3(_1481, _1482, _1483)));
            float frontier_phi_50_51_ladder;
            float frontier_phi_50_51_ladder_1;
            float frontier_phi_50_51_ladder_2;
            if (_1648 < ((_1646 >> 12u) & 15u))
            {
                float _1772;
                float _1774;
                float _1776;
                float _1913 = _1637;
                float _1914 = _1639;
                float _1915 = _1641;
                uint _1916 = _1648;
                uint _1925;
                bool _1926;
                for (;;)
                {
                    _1925 = texelFetch(g_lightClassification, int((((_1521 << 5u) + (_1507 << 9u)) + (_1916 << 2u)) >> 2u)).x;
                    _1926 = _1925 == 0u;
                    float frontier_phi_63_pred;
                    float frontier_phi_63_pred_1;
                    float frontier_phi_63_pred_2;
                    if (_1926)
                    {
                        frontier_phi_63_pred = _1915;
                        frontier_phi_63_pred_1 = _1914;
                        frontier_phi_63_pred_2 = _1913;
                    }
                    else
                    {
                        float _2040;
                        float _2041;
                        float _2042;
                        float _2264;
                        float _2265;
                        float _2266;
                        float _2050 = _1913;
                        float _2051 = _1914;
                        float _2052 = _1915;
                        uint _2053 = _1925;
                        uint _2054;
                        uint _2064;
                        vec4 _2079;
                        float _2080;
                        vec3 _2092;
                        vec4 _2108;
                        vec4 _2124;
                        float _2171;
                        bool _2172;
                        for (;;)
                        {
                            _2064 = ((_1916 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2053));
                            _2054 = (_2053 + 4294967295u) & _2053;
                            uint _2066 = _2064 * 40u;
                            _2079 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2066)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 3u)).x));
                            _2080 = _2079.w;
                            uint _2082 = (_2064 * 40u) + 8u;
                            _2092 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2082)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2082 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2082 + 2u)).x));
                            uint _2095 = (_2064 * 40u) + 16u;
                            _2108 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2095)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2095 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2095 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2095 + 3u)).x));
                            uint _2111 = (_2064 * 40u) + 20u;
                            _2124 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2111)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2111 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2111 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2111 + 3u)).x));
                            uint _2127 = (_2064 * 40u) + 24u;
                            vec4 _2140 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2127)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2127 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2127 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2127 + 3u)).x));
                            uint _2146 = (_2064 * 40u) + 28u;
                            vec4 _2159 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2146)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2146 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2146 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2146 + 3u)).x));
                            _2171 = fma(_1483, _2159.z, fma(_1482, _2159.y, _2159.x * _1481)) + _2159.w;
                            _2172 = !((fma(_1483, _2140.z, fma(_1482, _2140.y, _2140.x * _1481)) + _2140.w) <= 0.0);
                            float frontier_phi_69_pred;
                            float frontier_phi_69_pred_1;
                            float frontier_phi_69_pred_2;
                            if (_2172)
                            {
                                float _2206 = _2079.x - _1481;
                                float _2207 = _2079.y - _1482;
                                float _2208 = _2079.z - _1483;
                                float _2209 = dot(vec3(_2206, _2207, _2208), vec3(_2206, _2207, _2208));
                                float _2212 = inversesqrt(_2209);
                                float _2219 = 1.0 - (_2209 / (_2080 * _2080));
                                float _2738 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
                                float _2221 = sqrt(_2209) * uintBitsToFloat(uvec4(_2175, _2176, _2177, texelFetch(g_SpotLightRenderingBuffer, int(((_2064 * 40u) + 4u) + 3u)).x)).w;
                                float _2223 = 1.39999997615814208984375 / (_2221 + 1.39999997615814208984375);
                                float _2224 = _2223 * _2223;
                                float _2227 = (fma(_1483, _2108.z, fma(_1482, _2108.y, _2108.x * _1481)) + _2108.w) / _2171;
                                float _2228 = (fma(_1483, _2124.z, fma(_1482, _2124.y, _2124.x * _1481)) + _2124.w) / _2171;
                                float _2232 = 1.0 - dot(vec2(_2227, _2228), vec2(_2227, _2228));
                                float _2749 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
                                float _2240 = dot(vec3(_378, _381, _384), vec3((-0.0) - (_1481 * _1787), (-0.0) - (_1482 * _1787), (-0.0) - (_1483 * _1787)));
                                float _2760 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
                                float _2248 = ((1.0 - _2224) * dot(vec3(_378, _381, _384), vec3(_2212 * _2206, _2212 * _2207, _2212 * _2208))) + _2224;
                                float _2771 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
                                float _2249 = isnan(1.0) ? _2771 : (isnan(_2771) ? 1.0 : min(_2771, 1.0));
                                float _2253 = (0.5 / (((isnan(1.0) ? _2760 : (isnan(_2760) ? 1.0 : min(_2760, 1.0))) + 9.9999999392252902907785028219223e-09) + _2249)) * _2249;
                                float _2782 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
                                float _2260 = ((isnan(1.0) ? _2749 : (isnan(_2749) ? 1.0 : min(_2749, 1.0))) * (isnan(1.0) ? _2738 : (isnan(_2738) ? 1.0 : min(_2738, 1.0)))) * (((isnan(1.0) ? _2782 : (isnan(_2782) ? 1.0 : min(_2782, 1.0))) * 3.1415927410125732421875) / (((_2221 * _2221) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_69_pred = _2260 * _2092.x;
                                frontier_phi_69_pred_1 = _2260 * _2092.z;
                                frontier_phi_69_pred_2 = _2260 * _2092.y;
                            }
                            else
                            {
                                frontier_phi_69_pred = 0.0;
                                frontier_phi_69_pred_1 = 0.0;
                                frontier_phi_69_pred_2 = 0.0;
                            }
                            _2264 = frontier_phi_69_pred;
                            _2266 = frontier_phi_69_pred_1;
                            _2265 = frontier_phi_69_pred_2;
                            _2040 = _2264 + _2050;
                            _2041 = _2265 + _2051;
                            _2042 = _2266 + _2052;
                            if (_2054 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2050 = _2040;
                                _2051 = _2041;
                                _2052 = _2042;
                                _2053 = _2054;
                                continue;
                            }
                        }
                        frontier_phi_63_pred = _2042;
                        frontier_phi_63_pred_1 = _2041;
                        frontier_phi_63_pred_2 = _2040;
                    }
                    _1776 = frontier_phi_63_pred;
                    _1774 = frontier_phi_63_pred_1;
                    _1772 = frontier_phi_63_pred_2;
                    uint _1917 = _1916 + 1u;
                    if (_1917 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _1913 = _1772;
                        _1914 = _1774;
                        _1915 = _1776;
                        _1916 = _1917;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_50_51_ladder = _1774;
                frontier_phi_50_51_ladder_1 = _1772;
                frontier_phi_50_51_ladder_2 = _1776;
            }
            else
            {
                frontier_phi_50_51_ladder = _1639;
                frontier_phi_50_51_ladder_1 = _1637;
                frontier_phi_50_51_ladder_2 = _1641;
            }
            _1771 = frontier_phi_50_51_ladder_1;
            _1773 = frontier_phi_50_51_ladder;
            _1775 = frontier_phi_50_51_ladder_2;
        }
        float _1780 = isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0));
        _1541 = ((_1771 * 0.039999999105930328369140625) * _1780) + _1346;
        _1543 = ((_1773 * 0.039999999105930328369140625) * _1780) + _1348;
        _1545 = ((_1775 * 0.039999999105930328369140625) * _1780) + _1350;
    }
    else
    {
        _1541 = _1346;
        _1543 = _1348;
        _1545 = _1350;
    }
    uint _1552 = (_1123 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _2798 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _1568 = (cbInstanceData._m0[_1552].x * cbMtdParam._m0[9u].x) + ((_1541 + ((isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0))) * _863)) * cbPerFrame._m0[3u].x);
    float _1569 = (cbInstanceData._m0[_1552].y * cbMtdParam._m0[9u].y) + ((_1543 + ((isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0))) * _863)) * cbPerFrame._m0[3u].x);
    float _1570 = (cbInstanceData._m0[_1552].z * cbMtdParam._m0[9u].z) + ((_1545 + ((isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0))) * _863)) * cbPerFrame._m0[3u].x);
    float _1578 = cbInstanceData._m0[_1123 + 6u].w * (isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0)));
    float _1583 = _356 / cbSceneParam._m0[86u].x;
    float _1584 = _357 / cbSceneParam._m0[86u].y;
    vec4 _1598 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1583, _1584, (log2((isnan(cbSceneParam._m0[77u].w) ? _343 : (isnan(_343) ? cbSceneParam._m0[77u].w : min(_343, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1600 = _1598.x;
    float _1601 = _1598.y;
    float _1602 = _1598.z;
    float _1603 = _1598.w;
    float _1694;
    float _1696;
    float _1698;
    float _1700;
    if (_343 > cbSceneParam._m0[78u].w)
    {
        float _1656 = isnan(_343) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _343 : min(cbSceneParam._m0[80u].w, _343));
        float _1657 = _1656 / _343;
        float _1668 = _1657 * _220;
        float _1669 = _221 * _1657;
        float _1670 = (-0.0) - _1669;
        float _1672 = _1657 * _222;
        float _1674 = (cbSceneParam._m0[77u].w * _1670) / _1656;
        float _1675 = _1674 + cbSceneParam._m0[79u].w;
        float _1676 = cbSceneParam._m0[79u].w - _1669;
        float _1682 = sqrt(((_1668 * _1668) + (_1669 * _1669)) + (_1672 * _1672));
        float _1685 = (1.0 - (cbSceneParam._m0[77u].w / _1656)) * _1682;
        float _1690 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1692 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1875;
        if (abs((_1670 - _1674) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1875 = ((((_1675 > 0.0) ? exp2(_1690 * _1675) : (2.0 - exp2(_1692 * _1675))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1685;
        }
        else
        {
            float _1817 = 1.0 / cbSceneParam._m0[80u].x;
            float _1818 = isnan(_1676) ? _1675 : (isnan(_1675) ? _1676 : max(_1675, _1676));
            float _1819 = isnan(_1676) ? _1675 : (isnan(_1675) ? _1676 : min(_1675, _1676));
            float _1828 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : min(_1818, 0.0));
            float _1829 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : min(_1819, 0.0));
            _1875 = ((abs(_1682 / _1670) * cbSceneParam._m0[80u].y) * ((((_1828 - _1829) * 2.0) - ((exp2(_1690 * (isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0)))) - exp2(_1690 * (isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0))))) * _1817)) - ((exp2(_1692 * _1828) - exp2(_1692 * _1829)) * _1817))) + (_1685 * cbSceneParam._m0[80u].z);
        }
        vec4 _1877 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1583, _1584, 1.0), 0.0);
        float _1886 = exp2((_1875 * (-1.44269502162933349609375)) * (1.0 - _1877.w));
        float _1887 = log2(_1886);
        float _1903 = log2(_1603);
        _1694 = (exp2(_1903 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1887 * cbSceneParam._m0[78u].x)) * _1877.x) / cbSceneParam._m0[78u].x)) + _1600;
        _1696 = (exp2(_1903 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1887 * cbSceneParam._m0[78u].y)) * _1877.y) / cbSceneParam._m0[78u].y)) + _1601;
        _1698 = (exp2(_1903 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1887 * cbSceneParam._m0[78u].z)) * _1877.z) / cbSceneParam._m0[78u].z)) + _1602;
        _1700 = _1886 * _1603;
    }
    else
    {
        _1694 = _1600;
        _1696 = _1601;
        _1698 = _1602;
        _1700 = _1603;
    }
    float _1712 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1713 = _1712 == 3.0;
    float _1715 = log2(_1700);
    float _1722 = exp2(_1715 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0)));
    float _1723 = exp2(_1715 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)));
    float _1724 = exp2(_1715 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0)));
    float _1733 = (_1712 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1733 * (_1713 ? _1722 : (_1722 + (cbSceneParam._m0[72u].w * _1694)));
    SV_Target.y = _1733 * (_1713 ? _1723 : (_1723 + (cbSceneParam._m0[72u].w * _1696)));
    SV_Target.z = _1733 * (_1713 ? _1724 : (_1724 + (cbSceneParam._m0[72u].w * _1698)));
    SV_Target.w = _1578;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1578;
}


