#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 7) out vec3 TEXCOORD_7;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    float _176 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _200 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _202 = texelFetch(g_InstanceIndexBuffer, int(_200));
    uint _203 = _202.x;
    precise float _204 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _209 = isnan(_204) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _204 : max(0.001000000047497451305389404296875, _204));
    precise float _211 = BLENDWEIGHT.x / _209;
    precise float _212 = BLENDWEIGHT.y / _209;
    precise float _213 = BLENDWEIGHT.z / _209;
    precise float _214 = BLENDWEIGHT.w / _209;
    uvec4 _221 = floatBitsToUint(cbInstanceData._m0[(_203 * 13u) + 4u]);
    uint _222 = _221.x;
    uint _224 = (_222 + uint(float(BLENDINDICES.x))) * 3u;
    uint _231 = _224 + 1u;
    uint _238 = _224 + 2u;
    precise float _245 = _211 * cbObjMatrix._m0[_224].x;
    precise float _246 = _211 * cbObjMatrix._m0[_231].x;
    precise float _247 = _211 * cbObjMatrix._m0[_238].x;
    precise float _248 = _211 * cbObjMatrix._m0[_224].y;
    precise float _249 = _211 * cbObjMatrix._m0[_231].y;
    precise float _250 = _211 * cbObjMatrix._m0[_238].y;
    precise float _251 = _211 * cbObjMatrix._m0[_224].z;
    precise float _252 = _211 * cbObjMatrix._m0[_231].z;
    precise float _253 = _211 * cbObjMatrix._m0[_238].z;
    precise float _254 = _211 * cbObjMatrix._m0[_224].w;
    precise float _255 = _211 * cbObjMatrix._m0[_231].w;
    precise float _256 = _211 * cbObjMatrix._m0[_238].w;
    uint _259 = (_222 + uint(float(BLENDINDICES.y))) * 3u;
    uint _266 = _259 + 1u;
    uint _273 = _259 + 2u;
    precise float _280 = _212 * cbObjMatrix._m0[_259].x;
    precise float _281 = _212 * cbObjMatrix._m0[_266].x;
    precise float _282 = _212 * cbObjMatrix._m0[_273].x;
    precise float _283 = _212 * cbObjMatrix._m0[_259].y;
    precise float _284 = _212 * cbObjMatrix._m0[_266].y;
    precise float _285 = _212 * cbObjMatrix._m0[_273].y;
    precise float _286 = _212 * cbObjMatrix._m0[_259].z;
    precise float _287 = _212 * cbObjMatrix._m0[_266].z;
    precise float _288 = _212 * cbObjMatrix._m0[_273].z;
    precise float _289 = _212 * cbObjMatrix._m0[_259].w;
    precise float _290 = _212 * cbObjMatrix._m0[_266].w;
    precise float _291 = _212 * cbObjMatrix._m0[_273].w;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    uint _306 = (_222 + uint(float(BLENDINDICES.z))) * 3u;
    uint _313 = _306 + 1u;
    uint _320 = _306 + 2u;
    precise float _327 = _213 * cbObjMatrix._m0[_306].x;
    precise float _328 = _213 * cbObjMatrix._m0[_313].x;
    precise float _329 = _213 * cbObjMatrix._m0[_320].x;
    precise float _330 = _213 * cbObjMatrix._m0[_306].y;
    precise float _331 = _213 * cbObjMatrix._m0[_313].y;
    precise float _332 = _213 * cbObjMatrix._m0[_320].y;
    precise float _333 = _213 * cbObjMatrix._m0[_306].z;
    precise float _334 = _213 * cbObjMatrix._m0[_313].z;
    precise float _335 = _213 * cbObjMatrix._m0[_320].z;
    precise float _336 = _213 * cbObjMatrix._m0[_306].w;
    precise float _337 = _213 * cbObjMatrix._m0[_313].w;
    precise float _338 = _213 * cbObjMatrix._m0[_320].w;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    uint _353 = (_222 + uint(float(BLENDINDICES.w))) * 3u;
    uint _360 = _353 + 1u;
    uint _367 = _353 + 2u;
    precise float _374 = _214 * cbObjMatrix._m0[_353].x;
    precise float _375 = _214 * cbObjMatrix._m0[_360].x;
    precise float _376 = _214 * cbObjMatrix._m0[_367].x;
    precise float _377 = _214 * cbObjMatrix._m0[_353].y;
    precise float _378 = _214 * cbObjMatrix._m0[_360].y;
    precise float _379 = _214 * cbObjMatrix._m0[_367].y;
    precise float _380 = _214 * cbObjMatrix._m0[_353].z;
    precise float _381 = _214 * cbObjMatrix._m0[_360].z;
    precise float _382 = _214 * cbObjMatrix._m0[_367].z;
    precise float _383 = _214 * cbObjMatrix._m0[_353].w;
    precise float _384 = _214 * cbObjMatrix._m0[_360].w;
    precise float _385 = _214 * cbObjMatrix._m0[_367].w;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = POSITION.x * _386;
    precise float _399 = POSITION.y * _389;
    precise float _400 = _399 + _398;
    precise float _401 = POSITION.z * _392;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * _395;
    precise float _404 = _403 + _402;
    precise float _405 = POSITION.x * _387;
    precise float _406 = POSITION.y * _390;
    precise float _407 = _406 + _405;
    precise float _408 = POSITION.z * _393;
    precise float _409 = _408 + _407;
    precise float _410 = 1.0 * _396;
    precise float _411 = _410 + _409;
    precise float _412 = POSITION.x * _388;
    precise float _413 = POSITION.y * _391;
    precise float _414 = _413 + _412;
    precise float _415 = POSITION.z * _394;
    precise float _416 = _415 + _414;
    precise float _417 = 1.0 * _397;
    precise float _418 = _417 + _416;
    float _593 = (((((cbPrevObjMatrix._m0[_259].w * _212) + (cbPrevObjMatrix._m0[_224].w * _211)) + (cbPrevObjMatrix._m0[_306].w * _213)) + (cbPrevObjMatrix._m0[_353].w * _214)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_259].z * _212) + (cbPrevObjMatrix._m0[_224].z * _211)) + (cbPrevObjMatrix._m0[_306].z * _213)) + (cbPrevObjMatrix._m0[_353].z * _214), fma(POSITION.y, (((cbPrevObjMatrix._m0[_259].y * _212) + (cbPrevObjMatrix._m0[_224].y * _211)) + (cbPrevObjMatrix._m0[_306].y * _213)) + (cbPrevObjMatrix._m0[_353].y * _214), ((((cbPrevObjMatrix._m0[_259].x * _212) + (cbPrevObjMatrix._m0[_224].x * _211)) + (cbPrevObjMatrix._m0[_306].x * _213)) + (cbPrevObjMatrix._m0[_353].x * _214)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _594 = (((((cbPrevObjMatrix._m0[_266].w * _212) + (cbPrevObjMatrix._m0[_231].w * _211)) + (cbPrevObjMatrix._m0[_313].w * _213)) + (cbPrevObjMatrix._m0[_360].w * _214)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_266].z * _212) + (cbPrevObjMatrix._m0[_231].z * _211)) + (cbPrevObjMatrix._m0[_313].z * _213)) + (cbPrevObjMatrix._m0[_360].z * _214), fma(POSITION.y, (((cbPrevObjMatrix._m0[_266].y * _212) + (cbPrevObjMatrix._m0[_231].y * _211)) + (cbPrevObjMatrix._m0[_313].y * _213)) + (cbPrevObjMatrix._m0[_360].y * _214), ((((cbPrevObjMatrix._m0[_266].x * _212) + (cbPrevObjMatrix._m0[_231].x * _211)) + (cbPrevObjMatrix._m0[_313].x * _213)) + (cbPrevObjMatrix._m0[_360].x * _214)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _595 = (((((cbPrevObjMatrix._m0[_273].w * _212) + (cbPrevObjMatrix._m0[_238].w * _211)) + (cbPrevObjMatrix._m0[_320].w * _213)) + (cbPrevObjMatrix._m0[_367].w * _214)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_273].z * _212) + (cbPrevObjMatrix._m0[_238].z * _211)) + (cbPrevObjMatrix._m0[_320].z * _213)) + (cbPrevObjMatrix._m0[_367].z * _214), fma(POSITION.y, (((cbPrevObjMatrix._m0[_273].y * _212) + (cbPrevObjMatrix._m0[_238].y * _211)) + (cbPrevObjMatrix._m0[_320].y * _213)) + (cbPrevObjMatrix._m0[_367].y * _214), ((((cbPrevObjMatrix._m0[_273].x * _212) + (cbPrevObjMatrix._m0[_238].x * _211)) + (cbPrevObjMatrix._m0[_320].x * _213)) + (cbPrevObjMatrix._m0[_367].x * _214)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _642 = fma(_179, _392, fma(_178, _389, _386 * _176));
    float _645 = fma(_179, _393, fma(_178, _390, _387 * _176));
    float _648 = fma(_179, _394, fma(_178, _391, _388 * _176));
    precise float _664 = _404 - cbSceneParam._m0[3u].x;
    precise float _665 = _411 - cbSceneParam._m0[3u].y;
    precise float _666 = _418 - cbSceneParam._m0[3u].z;
    precise float _694 = _664 * cbSceneParam._m0[24u].x;
    precise float _695 = _665 * cbSceneParam._m0[24u].y;
    precise float _696 = _695 + _694;
    precise float _697 = _666 * cbSceneParam._m0[24u].z;
    precise float _698 = _697 + _696;
    precise float _699 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _700 = _699 + _698;
    precise float _701 = _664 * cbSceneParam._m0[25u].x;
    precise float _702 = _665 * cbSceneParam._m0[25u].y;
    precise float _703 = _702 + _701;
    precise float _704 = _666 * cbSceneParam._m0[25u].z;
    precise float _705 = _704 + _703;
    precise float _706 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _707 = _706 + _705;
    precise float _708 = _664 * cbSceneParam._m0[26u].x;
    precise float _709 = _665 * cbSceneParam._m0[26u].y;
    precise float _710 = _709 + _708;
    precise float _711 = _666 * cbSceneParam._m0[26u].z;
    precise float _712 = _711 + _710;
    precise float _713 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _714 = _713 + _712;
    precise float _715 = _664 * cbSceneParam._m0[27u].x;
    precise float _716 = _665 * cbSceneParam._m0[27u].y;
    precise float _717 = _716 + _715;
    precise float _718 = _666 * cbSceneParam._m0[27u].z;
    precise float _719 = _718 + _717;
    precise float _720 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _721 = _720 + _719;
    gl_Position.x = _700;
    gl_Position.y = _707;
    gl_Position.z = _714;
    gl_Position.w = _721;
    POSITION_1.x = _700;
    POSITION_1.y = _707;
    POSITION_1.z = _714;
    POSITION_1.w = _721;
    NORMAL_1.x = _642;
    NORMAL_1.y = _645;
    NORMAL_1.z = _648;
    NORMAL_1.w = float(_203);
    TANGENT_1.x = fma(_190, _392, fma(_189, _389, _386 * _188));
    TANGENT_1.y = fma(_190, _393, fma(_189, _390, _387 * _188));
    TANGENT_1.z = fma(_190, _394, fma(_189, _391, _388 * _188));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_5.x = _700;
    TEXCOORD_5.y = _707;
    TEXCOORD_5.z = _714;
    TEXCOORD_5.w = _721;
    TEXCOORD_6.x = fma(_595, cbSceneParam._m0[29u].z, fma(_594, cbSceneParam._m0[29u].y, _593 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_6.y = fma(_595, cbSceneParam._m0[30u].z, fma(_594, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _593)) + cbSceneParam._m0[30u].w;
    TEXCOORD_6.z = fma(_595, cbSceneParam._m0[31u].z, fma(_594, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _593)) + cbSceneParam._m0[31u].w;
    TEXCOORD_6.w = fma(_595, cbSceneParam._m0[32u].z, fma(_594, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _593)) + cbSceneParam._m0[32u].w;
    TEXCOORD_7.x = _642;
    TEXCOORD_7.y = _645;
    TEXCOORD_7.z = _648;
}


