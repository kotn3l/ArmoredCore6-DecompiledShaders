#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Waterfall_lava_01_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_Waterfall_lava_01_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _833;
float _834;
float _835;
float _836;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _132 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _133 = _132 * NORMAL.x;
    float _134 = _132 * NORMAL.y;
    float _135 = _132 * NORMAL.z;
    float _140;
    float _141;
    float _142;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _140 = (-0.0) - _133;
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
    }
    else
    {
        _140 = _133;
        _141 = _134;
        _142 = _135;
    }
    float _186 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _196 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _186);
    float _197 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _186);
    float _198 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _186);
    float _218 = cbMtdParam._m0[13u].x - cbMtdParam._m0[15u].x;
    float _221 = (sqrt(((_196 * _196) + (_197 * _197)) + (_198 * _198)) - cbMtdParam._m0[15u].x) / (isnan(0.001000000047497451305389404296875) ? _218 : (isnan(_218) ? 0.001000000047497451305389404296875 : max(_218, 0.001000000047497451305389404296875)));
    float _850 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _230 = gl_FragCoord.x * 0.125;
    float _232 = gl_FragCoord.y * 0.125;
    vec4 _235 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_230, _232));
    float _244 = float(((cbMtdParam._m0[14u].w * TEXCOORD_1.z) * (((isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0))) * (cbMtdParam._m0[14u].w + (-0.001000000047497451305389404296875))) + 0.001000000047497451305389404296875)) >= ((_235.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _265 = cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x;
    float _268 = (_265 * cbMtdParam._m0[15u].y) + TEXCOORD_1.x;
    float _269 = (_265 * cbMtdParam._m0[15u].z) + TEXCOORD_1.y;
    vec4 _294 = texture(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((_265 * cbMtdParam._m0[15u].w) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[16u].x * _265) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _301 = ((cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[12u].w) * cbMtdParam._m0[13u].y;
    float _308 = ((_294.y * 0.5) + (-0.25)) * cbMtdParam._m0[14u].x;
    float _310 = (-0.0) - (cbMtdParam._m0[14u].x * ((_294.x * 0.5) + (-0.25)));
    float _311 = fract(_301);
    float _313 = fract(_301 + 0.5);
    float _325 = abs((_311 * 2.0) + (-1.0));
    vec4 _341 = texture(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_311 * _310) + _268) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_308 * _311) + _269) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _343 = _341.x;
    float _344 = _341.y;
    float _345 = _341.z;
    vec4 _346 = texture(sampler2D(M_Waterfall_lava_01_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_313 * _310) + _268) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_308 * _313) + _269) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _388 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _395 = dot(vec4(_388 * _196, _388 * _197, _388 * _198, 0.0), vec4(_140, _141, _142, 0.0)) - cbMtdParam._m0[12u].x;
    float _861 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _401 = exp2(log2(1.0 - (isnan(1.0) ? _861 : (isnan(_861) ? 1.0 : min(_861, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].z : (isnan(cbMtdParam._m0[14u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].z, 0.001000000047497451305389404296875))));
    float _426 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _466 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _475 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _466);
    float _476 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _466);
    float _477 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _466);
    vec4 _478 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_230, _232));
    float _480 = _478.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _566 = sqrt(((_475 * _475) + (_476 * _476)) + (_477 * _477));
        float _573 = (cbMatDynParam._m0[5u].x * _566) + cbMatDynParam._m0[5u].y;
        float _877 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
        float _574 = isnan(1.0) ? _877 : (isnan(_877) ? 1.0 : min(_877, 1.0));
        float _578 = (cbMatDynParam._m0[5u].z * _566) + cbMatDynParam._m0[5u].w;
        float _888 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _888 : (isnan(_888) ? 1.0 : min(_888, 1.0))) - _574)) + _574) < ((_480 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _498 = uint(roundEven(NORMAL.w)) * 13u;
    uint _499 = _498 + 9u;
    uint _500 = _499 + uint(cbMatDynParam._m0[0u].w);
    float _506 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].x) * _401) + ((((((_346.x - _343) * _325) + _343) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].x) * cbMtdParam._m0[9u].x)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_500].x;
    float _507 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].y) * _401) + ((((((_346.y - _344) * _325) + _344) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].y) * cbMtdParam._m0[9u].y)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_500].y;
    float _508 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[10u].z) * _401) + ((((((_346.z - _345) * _325) + _345) * cbMtdParam._m0[14u].y) + cbMtdParam._m0[11u].z) * cbMtdParam._m0[9u].z)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_500].z;
    float _509 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _510 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _511 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _517 = cbMtdParam._m0[2u].x * _506;
    float _518 = cbMtdParam._m0[2u].y * _507;
    float _519 = cbMtdParam._m0[2u].z * _508;
    float _914 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _521 = isnan(1.0) ? _914 : (isnan(_914) ? 1.0 : min(_914, 1.0));
    uint _522 = _498 + 6u;
    float _531 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _532 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _547 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_531, _532, (log2((isnan(cbSceneParam._m0[77u].w) ? _426 : (isnan(_426) ? cbSceneParam._m0[77u].w : min(_426, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _549 = _547.x;
    float _550 = _547.y;
    float _551 = _547.z;
    float _552 = _547.w;
    float _631;
    float _633;
    float _635;
    float _637;
    if (_426 > cbSceneParam._m0[78u].w)
    {
        float _593 = isnan(_426) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _426 : min(cbSceneParam._m0[80u].w, _426));
        float _594 = _593 / _426;
        float _605 = _594 * _475;
        float _606 = _476 * _594;
        float _607 = (-0.0) - _606;
        float _608 = _594 * _477;
        float _610 = (cbSceneParam._m0[77u].w * _607) / _593;
        float _611 = _610 + cbSceneParam._m0[79u].w;
        float _612 = cbSceneParam._m0[79u].w - _606;
        float _618 = sqrt(((_605 * _605) + (_606 * _606)) + (_608 * _608));
        float _621 = (1.0 - (cbSceneParam._m0[77u].w / _593)) * _618;
        float _627 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _629 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _759;
        if (abs((_607 - _610) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _759 = ((((_611 > 0.0) ? exp2(_627 * _611) : (2.0 - exp2(_629 * _611))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _621;
        }
        else
        {
            float _715 = 1.0 / cbSceneParam._m0[80u].x;
            float _716 = isnan(_612) ? _611 : (isnan(_611) ? _612 : max(_611, _612));
            float _717 = isnan(_612) ? _611 : (isnan(_611) ? _612 : min(_611, _612));
            float _726 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : min(_716, 0.0));
            float _727 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : min(_717, 0.0));
            _759 = ((abs(_618 / _607) * cbSceneParam._m0[80u].y) * ((((_726 - _727) * 2.0) - ((exp2(_627 * (isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0)))) - exp2(_627 * (isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0))))) * _715)) - ((exp2(_629 * _726) - exp2(_629 * _727)) * _715))) + (_621 * cbSceneParam._m0[80u].z);
        }
        vec4 _761 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_531, _532, 1.0), 0.0);
        float _770 = exp2((_759 * (-1.44269502162933349609375)) * (1.0 - _761.w));
        float _771 = log2(_770);
        float _787 = log2(_552);
        _631 = (exp2(_787 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_771 * cbSceneParam._m0[78u].x)) * _761.x) / cbSceneParam._m0[78u].x)) + _549;
        _633 = (exp2(_787 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_771 * cbSceneParam._m0[78u].y)) * _761.y) / cbSceneParam._m0[78u].y)) + _550;
        _635 = (exp2(_787 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_771 * cbSceneParam._m0[78u].z)) * _761.z) / cbSceneParam._m0[78u].z)) + _551;
        _637 = _770 * _552;
    }
    else
    {
        _631 = _549;
        _633 = _550;
        _635 = _551;
        _637 = _552;
    }
    bool _797;
    vec4 _646;
    vec4 _670;
    float _672;
    float _676;
    float _677;
    float _678;
    float _681;
    float _684;
    float _687;
    float _688;
    bool _699;
    for (;;)
    {
        _646 = cbMatDynParam._m0[0u];
        float _648 = roundEven(_646.y);
        bool _649 = _648 == 3.0;
        float _651 = log2(_637);
        float _655 = exp2(_651 * cbSceneParam._m0[78u].x);
        float _656 = exp2(_651 * cbSceneParam._m0[78u].y);
        float _657 = exp2(_651 * cbSceneParam._m0[78u].z);
        float _658 = _655 * _509;
        float _659 = _656 * _510;
        float _660 = _657 * _511;
        float _667 = _480 + (-0.5);
        _670 = cbMtdParam._m0[1u];
        _672 = _670.y * _667;
        float _675 = (_648 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _676 = _675 * (_649 ? _658 : (_658 + (cbSceneParam._m0[72u].w * _631)));
        _677 = _675 * (_649 ? _659 : (_659 + (cbSceneParam._m0[72u].w * _633)));
        _678 = _675 * (_649 ? _660 : (_660 + (cbSceneParam._m0[72u].w * _635)));
        _681 = ((_517 * _521) * _655) * _675;
        _684 = ((_518 * _521) * _656) * _675;
        _687 = ((_519 * _521) * _657) * _675;
        _688 = _667 * 0.999000012874603271484375;
        _699 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_699)
        {
            if ((cbInstanceData._m0[_498 + 7u].x + _688) < 0.5)
            {
                _797 = true;
                break;
            }
        }
        uint _751 = _499 + uint(_646.w);
        if ((cbInstanceData._m0[_751].w < 1.0) && ((cbInstanceData._m0[_751].w + _688) < 0.5))
        {
            _797 = true;
            break;
        }
        if ((_672 + _244) < _670.x)
        {
            _797 = true;
            break;
        }
        _797 = false;
        break;
    }
    float _802;
    if (_797)
    {
        discard_state = true;
        _802 = 0.0;
    }
    else
    {
        _802 = cbInstanceData._m0[_522].w;
    }
    SV_Target.x = _676;
    SV_Target.y = _677;
    SV_Target.z = _678;
    SV_Target.w = _802;
    SV_Target_1.x = _681;
    SV_Target_1.y = _684;
    SV_Target_1.z = _687;
    SV_Target_1.w = cbInstanceData._m0[_522].w;
    discard_exit();
}


