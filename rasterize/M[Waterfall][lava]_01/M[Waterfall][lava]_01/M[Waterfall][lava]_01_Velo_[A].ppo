#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_9;
layout(location = 6) in vec4 TEXCOORD_10;
layout(location = 7) in vec3 TEXCOORD_11;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _143 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _153 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _143);
    float _154 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _143);
    float _155 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _143);
    float _175 = cbMtdParam._m0[13u].x - cbMtdParam._m0[15u].x;
    float _178 = (sqrt(((_153 * _153) + (_154 * _154)) + (_155 * _155)) - cbMtdParam._m0[15u].x) / (isnan(0.001000000047497451305389404296875) ? _175 : (isnan(_175) ? 0.001000000047497451305389404296875 : max(_175, 0.001000000047497451305389404296875)));
    float _404 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _187 = gl_FragCoord.x * 0.125;
    float _189 = gl_FragCoord.y * 0.125;
    vec4 _192 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_187, _189));
    float _201 = float(((cbMtdParam._m0[14u].w * TEXCOORD_1.z) * (((isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0))) * (cbMtdParam._m0[14u].w + (-0.001000000047497451305389404296875))) + 0.001000000047497451305389404296875)) >= ((_192.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _203 = uint(roundEven(NORMAL.w));
    float _217 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_9.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_9.z));
    float _257 = fma(TEXCOORD_9.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_9.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_9.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_9.x)));
    float _266 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_9.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_9.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_9.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_9.x))) / _257);
    float _267 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_9.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_9.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_9.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_9.x))) / _257);
    float _268 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_9.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_9.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_9.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_9.x))) / _257);
    vec4 _269 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_187, _189));
    float _271 = _269.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _307 = sqrt(((_266 * _266) + (_267 * _267)) + (_268 * _268));
        float _314 = (cbMatDynParam._m0[5u].x * _307) + cbMatDynParam._m0[5u].y;
        float _415 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
        float _315 = isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0));
        float _319 = (cbMatDynParam._m0[5u].z * _307) + cbMatDynParam._m0[5u].w;
        float _426 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0))) - _315)) + _315) < ((_271 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _349;
    float _282;
    float _283;
    vec4 _287;
    float _289;
    float _290;
    bool _301;
    for (;;)
    {
        _282 = (TEXCOORD_9.x / TEXCOORD_9.w) - (TEXCOORD_10.x / TEXCOORD_10.w);
        _283 = (TEXCOORD_9.y / TEXCOORD_9.w) - (TEXCOORD_10.y / TEXCOORD_10.w);
        float _284 = _271 + (-0.5);
        _287 = cbMtdParam._m0[1u];
        _289 = _287.y * _284;
        _290 = _284 * 0.999000012874603271484375;
        _301 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_301)
        {
            if ((cbInstanceData._m0[(_203 * 13u) + 7u].x + _290) < 0.5)
            {
                _349 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _290) < 0.5))
        {
            _349 = true;
            break;
        }
        if ((_289 + _201) < _287.x)
        {
            _349 = true;
            break;
        }
        _349 = false;
        break;
    }
    if (_349)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _282) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _283) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _217 / (_217 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


