#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _116 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _117 = _116 * NORMAL.x;
    float _118 = _116 * NORMAL.y;
    float _119 = _116 * NORMAL.z;
    float _124;
    float _125;
    float _126;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _124 = (-0.0) - _117;
        _125 = (-0.0) - _118;
        _126 = (-0.0) - _119;
    }
    else
    {
        _124 = _117;
        _125 = _118;
        _126 = _119;
    }
    float _171 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _181 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _171);
    float _182 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _171);
    float _183 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _171);
    float _203 = cbMtdParam._m0[13u].x - cbMtdParam._m0[15u].x;
    float _206 = (sqrt(((_181 * _181) + (_182 * _182)) + (_183 * _183)) - cbMtdParam._m0[15u].x) / (isnan(0.001000000047497451305389404296875) ? _203 : (isnan(_203) ? 0.001000000047497451305389404296875 : max(_203, 0.001000000047497451305389404296875)));
    float _443 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _215 = gl_FragCoord.x * 0.125;
    float _217 = gl_FragCoord.y * 0.125;
    vec4 _220 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_215, _217));
    float _229 = float(((cbMtdParam._m0[14u].w * TEXCOORD_1.z) * (((isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0))) * (cbMtdParam._m0[14u].w + (-0.001000000047497451305389404296875))) + 0.001000000047497451305389404296875)) >= ((_220.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _233 = inversesqrt(dot(vec3(_124, _125, _126), vec3(_124, _125, _126)));
    uint _235 = uint(roundEven(NORMAL.w));
    float _275 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _284 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _275);
    float _285 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _275);
    float _286 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _275);
    vec4 _287 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_215, _217));
    float _289 = _287.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _325 = sqrt(((_284 * _284) + (_285 * _285)) + (_286 * _286));
        float _332 = (cbMatDynParam._m0[5u].x * _325) + cbMatDynParam._m0[5u].y;
        float _454 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
        float _333 = isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0));
        float _337 = (cbMatDynParam._m0[5u].z * _325) + cbMatDynParam._m0[5u].w;
        float _465 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0))) - _333)) + _333) < ((_289 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _372;
    uint _297;
    float _301;
    vec4 _305;
    float _307;
    float _308;
    bool _319;
    for (;;)
    {
        _297 = _235 * 13u;
        _301 = cbInstanceData._m0[_297 + 6u].w;
        float _302 = _289 + (-0.5);
        _305 = cbMtdParam._m0[1u];
        _307 = _305.y * _302;
        _308 = _302 * 0.999000012874603271484375;
        _319 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_319)
        {
            if ((cbInstanceData._m0[_297 + 7u].x + _308) < 0.5)
            {
                _372 = true;
                break;
            }
        }
        uint _361 = (_297 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_361].w < 1.0) && ((cbInstanceData._m0[_361].w + _308) < 0.5))
        {
            _372 = true;
            break;
        }
        if ((_307 + _229) < _305.x)
        {
            _372 = true;
            break;
        }
        _372 = false;
        break;
    }
    if (_372)
    {
        discard_state = true;
    }
    bool _390 = cbMtdParam._m0[1u].z != 0.0;
    float _391 = _390 ? _301 : 0.0;
    SV_Target.x = ((_124 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.y = ((_125 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.z = ((_126 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.w = _391;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _390 ? _301 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _301;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _391;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _391;
    discard_exit();
}


