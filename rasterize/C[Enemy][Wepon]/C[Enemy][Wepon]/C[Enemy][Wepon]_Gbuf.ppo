#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_10;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_24;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_7;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_Wepon_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _125 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _126 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _127 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _132 = inversesqrt(dot(vec3(_125, _126, _127), vec3(_125, _126, _127)));
    float _139 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _173 = texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _178 = _173.z;
    float _186 = exp2(log2(_178 * cbMtdParam._m0[13u].x) * cbMtdParam._m0[12u].y);
    float _187 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _188 = isnan(1.0) ? _187 : (isnan(_187) ? 1.0 : min(_187, 1.0));
    float _208 = ((cbMtdParam._m0[10u].x - cbMtdParam._m0[9u].x) * _188) + cbMtdParam._m0[9u].x;
    float _209 = ((cbMtdParam._m0[10u].y - cbMtdParam._m0[9u].y) * _188) + cbMtdParam._m0[9u].y;
    float _210 = ((cbMtdParam._m0[10u].z - cbMtdParam._m0[9u].z) * _188) + cbMtdParam._m0[9u].z;
    float _228 = exp2(log2(texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w)).x) * cbMtdParam._m0[13u].y);
    vec4 _250 = texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _257 = (((_228 * (cbMtdParam._m0[11u].x - _208)) + _208) * 4.55000019073486328125) * _250.x;
    float _259 = (((_228 * (cbMtdParam._m0[11u].y - _209)) + _209) * 4.55000019073486328125) * _250.y;
    float _261 = (((_228 * (cbMtdParam._m0[11u].z - _210)) + _210) * 4.55000019073486328125) * _250.z;
    float _270 = ((cbMtdParam._m0[14u].y - cbMtdParam._m0[12u].z) * _188) + cbMtdParam._m0[12u].z;
    float _273 = ((cbMtdParam._m0[12u].w - _270) * _228) + _270;
    vec4 _286 = texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _304 = texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _306 = _304.x;
    float _307 = _304.y;
    float _310 = cbMtdParam._m0[12u].x + _304.z;
    float _313 = (((cbMtdParam._m0[14u].x + _286.z) - _310) * _188) + _310;
    vec4 _326 = texture(sampler2D(C_Enemy_Wepon_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _335 = (((_326.z - _313) + cbMtdParam._m0[14u].z) * _228) + _313;
    float _341 = ((((_178 * 2.0) * _335) - _335) * cbMtdParam._m0[13u].z) + _335;
    float _352 = ((_286.x - _306) * _188) + _306;
    float _353 = ((_286.y - _307) * _188) + _307;
    float _362 = ((((_326.x - _352) * _228) + _352) * 2.0) + (-1.0);
    float _363 = ((((_326.y - _353) * _228) + _353) * 2.0) + (-1.0);
    float _364 = dot(vec2(_362, _363), vec2(_362, _363));
    float _484 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _369 = sqrt(1.0 - (isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0))));
    float _372 = _362 + (cbMtdParam._m0[13u].w * ((_173.x * 2.0) + (-1.0)));
    float _373 = _363 + (cbMtdParam._m0[13u].w * ((_173.y * 2.0) + (-1.0)));
    float _376 = fma(_369, _139 * NORMAL.x, fma(_373, _146 * TANGENT.x, (_132 * _125) * _372));
    float _379 = fma(_369, _139 * NORMAL.y, fma(_373, _146 * TANGENT.y, (_132 * _126) * _372));
    float _382 = fma(_369, _139 * NORMAL.z, fma(_373, _146 * TANGENT.z, (_132 * _127) * _372));
    float _386 = inversesqrt(dot(vec3(_376, _379, _382), vec3(_376, _379, _382)));
    float _495 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _506 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _517 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _528 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _539 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _406 = uint(roundEven(NORMAL.w)) * 13u;
    uint _408 = (_406 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _414 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _506 : (isnan(_506) ? 1.0 : min(_506, 1.0)))) * cbInstanceData._m0[_408].x;
    float _415 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0)))) * cbInstanceData._m0[_408].y;
    float _416 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _528 : (isnan(_528) ? 1.0 : min(_528, 1.0)))) * cbInstanceData._m0[_408].z;
    float _550 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _561 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _572 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    uint _420 = _406 + 6u;
    bool _448 = cbMtdParam._m0[1u].z != 0.0;
    float _449 = _448 ? cbInstanceData._m0[_420].w : 0.0;
    SV_Target.x = ((_376 * 0.5) * _386) + 0.500488758087158203125;
    SV_Target.y = ((_379 * 0.5) * _386) + 0.500488758087158203125;
    SV_Target.z = ((_382 * 0.5) * _386) + 0.500488758087158203125;
    SV_Target.w = _449;
    SV_Target_1.x = isnan(1.0) ? _539 : (isnan(_539) ? 1.0 : min(_539, 1.0));
    SV_Target_1.y = isnan(1.0) ? _495 : (isnan(_495) ? 1.0 : min(_495, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _448 ? cbInstanceData._m0[_420].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _550 : (isnan(_550) ? 1.0 : min(_550, 1.0));
    SV_Target_2.y = isnan(1.0) ? _561 : (isnan(_561) ? 1.0 : min(_561, 1.0));
    SV_Target_2.z = isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0));
    SV_Target_2.w = _448 ? cbInstanceData._m0[_420].w : (float(floatBitsToUint(cbInstanceData._m0[_406 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _449;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _449;
}


