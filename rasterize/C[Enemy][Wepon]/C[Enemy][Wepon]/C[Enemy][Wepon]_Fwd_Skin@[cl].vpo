#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    float _158 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _182 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _184 = texelFetch(g_InstanceIndexBuffer, int(_182));
    uint _185 = _184.x;
    precise float _186 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _191 = isnan(_186) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _186 : max(0.001000000047497451305389404296875, _186));
    precise float _193 = BLENDWEIGHT.x / _191;
    precise float _194 = BLENDWEIGHT.y / _191;
    precise float _195 = BLENDWEIGHT.z / _191;
    precise float _196 = BLENDWEIGHT.w / _191;
    uvec4 _203 = floatBitsToUint(cbInstanceData._m0[(_185 * 13u) + 4u]);
    uint _204 = _203.x;
    uint _206 = (_204 + uint(float(BLENDINDICES.x))) * 3u;
    uint _213 = _206 + 1u;
    uint _220 = _206 + 2u;
    precise float _227 = _193 * cbObjMatrix._m0[_206].x;
    precise float _228 = _193 * cbObjMatrix._m0[_213].x;
    precise float _229 = _193 * cbObjMatrix._m0[_220].x;
    precise float _230 = _193 * cbObjMatrix._m0[_206].y;
    precise float _231 = _193 * cbObjMatrix._m0[_213].y;
    precise float _232 = _193 * cbObjMatrix._m0[_220].y;
    precise float _233 = _193 * cbObjMatrix._m0[_206].z;
    precise float _234 = _193 * cbObjMatrix._m0[_213].z;
    precise float _235 = _193 * cbObjMatrix._m0[_220].z;
    precise float _236 = _193 * cbObjMatrix._m0[_206].w;
    precise float _237 = _193 * cbObjMatrix._m0[_213].w;
    precise float _238 = _193 * cbObjMatrix._m0[_220].w;
    uint _241 = (_204 + uint(float(BLENDINDICES.y))) * 3u;
    uint _248 = _241 + 1u;
    uint _255 = _241 + 2u;
    precise float _262 = _194 * cbObjMatrix._m0[_241].x;
    precise float _263 = _194 * cbObjMatrix._m0[_248].x;
    precise float _264 = _194 * cbObjMatrix._m0[_255].x;
    precise float _265 = _194 * cbObjMatrix._m0[_241].y;
    precise float _266 = _194 * cbObjMatrix._m0[_248].y;
    precise float _267 = _194 * cbObjMatrix._m0[_255].y;
    precise float _268 = _194 * cbObjMatrix._m0[_241].z;
    precise float _269 = _194 * cbObjMatrix._m0[_248].z;
    precise float _270 = _194 * cbObjMatrix._m0[_255].z;
    precise float _271 = _194 * cbObjMatrix._m0[_241].w;
    precise float _272 = _194 * cbObjMatrix._m0[_248].w;
    precise float _273 = _194 * cbObjMatrix._m0[_255].w;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    uint _288 = (_204 + uint(float(BLENDINDICES.z))) * 3u;
    uint _295 = _288 + 1u;
    uint _302 = _288 + 2u;
    precise float _309 = _195 * cbObjMatrix._m0[_288].x;
    precise float _310 = _195 * cbObjMatrix._m0[_295].x;
    precise float _311 = _195 * cbObjMatrix._m0[_302].x;
    precise float _312 = _195 * cbObjMatrix._m0[_288].y;
    precise float _313 = _195 * cbObjMatrix._m0[_295].y;
    precise float _314 = _195 * cbObjMatrix._m0[_302].y;
    precise float _315 = _195 * cbObjMatrix._m0[_288].z;
    precise float _316 = _195 * cbObjMatrix._m0[_295].z;
    precise float _317 = _195 * cbObjMatrix._m0[_302].z;
    precise float _318 = _195 * cbObjMatrix._m0[_288].w;
    precise float _319 = _195 * cbObjMatrix._m0[_295].w;
    precise float _320 = _195 * cbObjMatrix._m0[_302].w;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    uint _335 = (_204 + uint(float(BLENDINDICES.w))) * 3u;
    uint _342 = _335 + 1u;
    uint _349 = _335 + 2u;
    precise float _356 = _196 * cbObjMatrix._m0[_335].x;
    precise float _357 = _196 * cbObjMatrix._m0[_342].x;
    precise float _358 = _196 * cbObjMatrix._m0[_349].x;
    precise float _359 = _196 * cbObjMatrix._m0[_335].y;
    precise float _360 = _196 * cbObjMatrix._m0[_342].y;
    precise float _361 = _196 * cbObjMatrix._m0[_349].y;
    precise float _362 = _196 * cbObjMatrix._m0[_335].z;
    precise float _363 = _196 * cbObjMatrix._m0[_342].z;
    precise float _364 = _196 * cbObjMatrix._m0[_349].z;
    precise float _365 = _196 * cbObjMatrix._m0[_335].w;
    precise float _366 = _196 * cbObjMatrix._m0[_342].w;
    precise float _367 = _196 * cbObjMatrix._m0[_349].w;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = POSITION.x * _368;
    precise float _381 = POSITION.y * _371;
    precise float _382 = _381 + _380;
    precise float _383 = POSITION.z * _374;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * _377;
    precise float _386 = _385 + _384;
    precise float _387 = POSITION.x * _369;
    precise float _388 = POSITION.y * _372;
    precise float _389 = _388 + _387;
    precise float _390 = POSITION.z * _375;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * _378;
    precise float _393 = _392 + _391;
    precise float _394 = POSITION.x * _370;
    precise float _395 = POSITION.y * _373;
    precise float _396 = _395 + _394;
    precise float _397 = POSITION.z * _376;
    precise float _398 = _397 + _396;
    precise float _399 = 1.0 * _379;
    precise float _400 = _399 + _398;
    precise float _425 = _386 - cbSceneParam._m0[3u].x;
    precise float _426 = _393 - cbSceneParam._m0[3u].y;
    precise float _427 = _400 - cbSceneParam._m0[3u].z;
    precise float _455 = _425 * cbSceneParam._m0[24u].x;
    precise float _456 = _426 * cbSceneParam._m0[24u].y;
    precise float _457 = _456 + _455;
    precise float _458 = _427 * cbSceneParam._m0[24u].z;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _461 = _460 + _459;
    precise float _462 = _425 * cbSceneParam._m0[25u].x;
    precise float _463 = _426 * cbSceneParam._m0[25u].y;
    precise float _464 = _463 + _462;
    precise float _465 = _427 * cbSceneParam._m0[25u].z;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _468 = _467 + _466;
    precise float _469 = _425 * cbSceneParam._m0[26u].x;
    precise float _470 = _426 * cbSceneParam._m0[26u].y;
    precise float _471 = _470 + _469;
    precise float _472 = _427 * cbSceneParam._m0[26u].z;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _475 = _474 + _473;
    precise float _476 = _425 * cbSceneParam._m0[27u].x;
    precise float _477 = _426 * cbSceneParam._m0[27u].y;
    precise float _478 = _477 + _476;
    precise float _479 = _427 * cbSceneParam._m0[27u].z;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _482 = _481 + _480;
    gl_Position.x = _461;
    gl_Position.y = _468;
    gl_Position.z = _475;
    gl_Position.w = _482;
    POSITION_1.x = _461;
    POSITION_1.y = _468;
    POSITION_1.z = _475;
    POSITION_1.w = _482;
    NORMAL_1.x = fma(_161, _374, fma(_160, _371, _368 * _158));
    NORMAL_1.y = fma(_161, _375, fma(_160, _372, _369 * _158));
    NORMAL_1.z = fma(_161, _376, fma(_160, _373, _370 * _158));
    NORMAL_1.w = float(_185);
    TANGENT_1.x = fma(_172, _374, fma(_171, _371, _368 * _170));
    TANGENT_1.y = fma(_172, _375, fma(_171, _372, _369 * _170));
    TANGENT_1.z = fma(_172, _376, fma(_171, _373, _370 * _170));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
}


