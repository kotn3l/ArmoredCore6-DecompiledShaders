#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _571;
float _572;
float _573;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _157 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _158 = _157 * _149;
    float _159 = _157 * _150;
    float _160 = _157 * _151;
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = _164 * NORMAL.x;
    float _166 = _164 * NORMAL.y;
    float _167 = _164 * NORMAL.z;
    float _171 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _172 = _171 * TANGENT.x;
    float _173 = _171 * TANGENT.y;
    float _174 = _171 * TANGENT.z;
    float _179;
    float _180;
    float _181;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _179 = (-0.0) - _165;
        _180 = (-0.0) - _166;
        _181 = (-0.0) - _167;
    }
    else
    {
        _179 = _165;
        _180 = _166;
        _181 = _167;
    }
    bool _494;
    float _257;
    float _397;
    float _400;
    float _403;
    float _407;
    float _409;
    uint _434;
    vec4 _439;
    float _446;
    float _447;
    float _448;
    float _449;
    float _450;
    float _451;
    float _455;
    float _461;
    vec4 _465;
    float _467;
    float _468;
    bool _480;
    for (;;)
    {
        float _226 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
        float _236 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _226);
        float _237 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _226);
        float _238 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _226);
        vec4 _251 = texture(sampler2D(M_Planet_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
        _257 = _251.w;
        float _263 = cbMtdParam._m0[10u].x * _251.x;
        float _264 = cbMtdParam._m0[10u].y * _251.y;
        float _265 = cbMtdParam._m0[10u].z * _251.z;
        float _266 = _257 * TEXCOORD_1.z;
        vec4 _278 = texture(sampler2D(M_Planet_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
        float _282 = _278.z;
        float _286 = (_278.x * 2.0) + (-1.0);
        float _288 = (_278.y * 2.0) + (-1.0);
        float _289 = dot(vec2(_286, _288), vec2(_286, _288));
        float _582 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
        float _295 = sqrt(1.0 - (isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0))));
        vec4 _310 = texture(sampler2D(M_Planet_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[3u].w));
        vec4 _330 = texture(sampler2D(M_Planet_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
        float _351 = fma(0.989949524402618408203125, _179, fma(-0.10000002384185791015625, _172, _158 * (-0.10000002384185791015625)));
        float _355 = fma(0.989949524402618408203125, _180, fma(-0.10000002384185791015625, _173, _159 * (-0.10000002384185791015625)));
        float _358 = fma(0.989949524402618408203125, _181, fma(-0.10000002384185791015625, _174, _160 * (-0.10000002384185791015625)));
        float _362 = inversesqrt(dot(vec3(_351, _355, _358), vec3(_351, _355, _358)));
        float _369 = inversesqrt(dot(vec3(_236, _237, _238), vec3(_236, _237, _238)));
        float _376 = dot(vec4(_369 * _236, _369 * _237, _369 * _238, 0.0), vec4(_362 * _351, _362 * _355, _362 * _358, 0.0)) - cbMtdParam._m0[11u].z;
        float _593 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
        float _383 = exp2(log2(1.0 - (isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].x : (isnan(cbMtdParam._m0[11u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].x, 0.001000000047497451305389404296875))));
        float _384 = TEXCOORD_1.z * 10.0;
        _397 = fma(_295, _179, fma(_288, _172, _286 * _158));
        _400 = fma(_295, _180, fma(_288, _173, _286 * _159));
        _403 = fma(_295, _181, fma(_288, _174, _286 * _160));
        _407 = inversesqrt(dot(vec3(_397, _400, _403), vec3(_397, _400, _403)));
        float _609 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        float _408 = isnan(1.0) ? _609 : (isnan(_609) ? 1.0 : min(_609, 1.0));
        float _620 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
        _409 = isnan(1.0) ? _620 : (isnan(_620) ? 1.0 : min(_620, 1.0));
        float _631 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
        float _642 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
        float _653 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
        _434 = uint(roundEven(NORMAL.w)) * 13u;
        _439 = cbInstanceData._m0[(_434 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _443 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _631 : (isnan(_631) ? 1.0 : min(_631, 1.0)))) * _439.x;
        float _444 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _642 : (isnan(_642) ? 1.0 : min(_642, 1.0)))) * _439.y;
        float _445 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _653 : (isnan(_653) ? 1.0 : min(_653, 1.0)))) * _439.z;
        float _664 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
        _446 = isnan(1.0) ? _664 : (isnan(_664) ? 1.0 : min(_664, 1.0));
        float _675 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
        _447 = isnan(1.0) ? _675 : (isnan(_675) ? 1.0 : min(_675, 1.0));
        float _686 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
        _448 = isnan(1.0) ? _686 : (isnan(_686) ? 1.0 : min(_686, 1.0));
        _449 = _439.x * (((_330.x * cbMtdParam._m0[11u].w) + (_310.x * cbMtdParam._m0[11u].y)) + ((_384 * cbMtdParam._m0[9u].x) * _383));
        _450 = _439.y * (((_330.y * cbMtdParam._m0[11u].w) + (_310.y * cbMtdParam._m0[11u].y)) + ((_384 * cbMtdParam._m0[9u].y) * _383));
        _451 = _439.z * (((_330.z * cbMtdParam._m0[11u].w) + (_310.z * cbMtdParam._m0[11u].y)) + ((_384 * cbMtdParam._m0[9u].z) * _383));
        float _697 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
        _455 = cbMtdParam._m0[2u].w;
        _461 = cbInstanceData._m0[_434 + 6u].w * (isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0)));
        float _462 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _465 = cbMtdParam._m0[1u];
        _467 = _465.y * _462;
        _468 = _462 * 0.999000012874603271484375;
        _480 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_480)
        {
            if ((cbInstanceData._m0[_434 + 7u].x + _468) < 0.5)
            {
                _494 = true;
                break;
            }
        }
        if ((_439.w < 1.0) && ((_439.w + _468) < 0.5))
        {
            _494 = true;
            break;
        }
        if ((_467 + _257) < _465.x)
        {
            _494 = true;
            break;
        }
        _494 = false;
        break;
    }
    if (_494)
    {
        discard_state = true;
    }
    float _532;
    float _533;
    float _534;
    float _535;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _532 = _461;
        _533 = _461;
        _534 = _461;
        _535 = _461;
    }
    else
    {
        _532 = _455;
        _533 = 0.0;
        _534 = float(floatBitsToUint(cbInstanceData._m0[_434 + 5u]).x) * 0.0039215688593685626983642578125;
        _535 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_397 * 0.5) * _407) + 0.500488758087158203125;
    SV_Target.y = ((_400 * 0.5) * _407) + 0.500488758087158203125;
    SV_Target.z = ((_403 * 0.5) * _407) + 0.500488758087158203125;
    SV_Target.w = _533;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = _409;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _535;
    SV_Target_2.x = _446;
    SV_Target_2.y = _447;
    SV_Target_2.z = _448;
    SV_Target_2.w = _534;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _533;
    SV_Target_4.x = _449 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _450 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _451 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _532;
    discard_exit();
}


