#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D MenuMiniMapColorSet_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _129 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _130 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _135 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _136 = _135 * _128;
    float _137 = _135 * _129;
    float _138 = _135 * _130;
    float _142 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _143 = _142 * NORMAL.x;
    float _144 = _142 * NORMAL.y;
    float _145 = _142 * NORMAL.z;
    float _149 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _150 = _149 * TANGENT.x;
    float _151 = _149 * TANGENT.y;
    float _152 = _149 * TANGENT.z;
    float _157;
    float _158;
    float _159;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _157 = (-0.0) - _143;
        _158 = (-0.0) - _144;
        _159 = (-0.0) - _145;
    }
    else
    {
        _157 = _143;
        _158 = _144;
        _159 = _145;
    }
    float _203 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _213 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _203);
    float _214 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _203);
    float _215 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _203);
    vec4 _234 = texture(sampler2D(MenuMiniMapColorSet_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _242 = (_234.x * 2.0) + (-1.0);
    float _244 = (_234.y * 2.0) + (-1.0);
    float _245 = dot(vec2(_242, _244), vec2(_242, _244));
    float _401 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _251 = sqrt(1.0 - (isnan(1.0) ? _401 : (isnan(_401) ? 1.0 : min(_401, 1.0))));
    float _254 = fma(_251, _157, fma(_244, _150, _242 * _136));
    float _257 = fma(_251, _158, fma(_244, _151, _242 * _137));
    float _260 = fma(_251, _159, fma(_244, _152, _242 * _138));
    float _264 = inversesqrt(dot(vec3(_254, _257, _260), vec3(_254, _257, _260)));
    float _265 = _264 * _254;
    float _266 = _264 * _257;
    float _267 = _264 * _260;
    float _271 = inversesqrt(dot(vec3(_265, _266, _267), vec3(_265, _266, _267)));
    float _278 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _288 = cbMtdParam._m0[9u].x - dot(vec3(_278 * _213, _278 * _214, _278 * _215), vec3(_271 * _265, _271 * _266, _271 * _267));
    float _412 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _289 = isnan(1.0) ? _412 : (isnan(_412) ? 1.0 : min(_412, 1.0));
    float _292 = fma(_267, _157, fma(_266, _150, _265 * _136));
    float _295 = fma(_267, _158, fma(_266, _151, _265 * _137));
    float _298 = fma(_267, _159, fma(_266, _152, _265 * _138));
    float _302 = inversesqrt(dot(vec3(_292, _295, _298), vec3(_292, _295, _298)));
    float _423 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _303 = isnan(1.0) ? _423 : (isnan(_423) ? 1.0 : min(_423, 1.0));
    float _434 = isnan(0.0) ? cbMatDynParam._m0[17u].x : (isnan(cbMatDynParam._m0[17u].x) ? 0.0 : max(cbMatDynParam._m0[17u].x, 0.0));
    float _445 = isnan(0.0) ? cbMatDynParam._m0[17u].y : (isnan(cbMatDynParam._m0[17u].y) ? 0.0 : max(cbMatDynParam._m0[17u].y, 0.0));
    float _456 = isnan(0.0) ? cbMatDynParam._m0[17u].z : (isnan(cbMatDynParam._m0[17u].z) ? 0.0 : max(cbMatDynParam._m0[17u].z, 0.0));
    uint _321 = uint(roundEven(NORMAL.w)) * 13u;
    uint _324 = (_321 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _330 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _434 : (isnan(_434) ? 1.0 : min(_434, 1.0)))) * cbInstanceData._m0[_324].x;
    float _331 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0)))) * cbInstanceData._m0[_324].y;
    float _332 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0)))) * cbInstanceData._m0[_324].z;
    float _467 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _478 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _489 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _500 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _345 = cbInstanceData._m0[_321 + 6u].w * (isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0)));
    float _371;
    float _372;
    float _373;
    float _374;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _371 = _345;
        _372 = _345;
        _373 = _345;
        _374 = _345;
    }
    else
    {
        _371 = cbMtdParam._m0[2u].w;
        _372 = 0.0;
        _373 = float(floatBitsToUint(cbInstanceData._m0[_321 + 5u]).x) * 0.0039215688593685626983642578125;
        _374 = TEXCOORD.z;
    }
    SV_Target.x = ((_292 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.y = ((_295 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.z = ((_298 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.w = _372;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _374;
    SV_Target_2.x = isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0));
    SV_Target_2.y = isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : min(_478, 1.0));
    SV_Target_2.z = isnan(1.0) ? _489 : (isnan(_489) ? 1.0 : min(_489, 1.0));
    SV_Target_2.w = _373;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _372;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _371;
}


