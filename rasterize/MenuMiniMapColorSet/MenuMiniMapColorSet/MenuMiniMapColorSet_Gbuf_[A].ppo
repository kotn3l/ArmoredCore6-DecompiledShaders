#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D MenuMiniMapColorSet_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _141 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _142 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _143 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _148 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _149 = _148 * _141;
    float _150 = _148 * _142;
    float _151 = _148 * _143;
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = _155 * NORMAL.x;
    float _157 = _155 * NORMAL.y;
    float _158 = _155 * NORMAL.z;
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _163 = _162 * TANGENT.x;
    float _164 = _162 * TANGENT.y;
    float _165 = _162 * TANGENT.z;
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _156;
        _171 = (-0.0) - _157;
        _172 = (-0.0) - _158;
    }
    else
    {
        _170 = _156;
        _171 = _157;
        _172 = _158;
    }
    float _216 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _226 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _216);
    float _227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _216);
    float _228 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _216);
    vec4 _247 = texture(sampler2D(MenuMiniMapColorSet_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _255 = (_247.x * 2.0) + (-1.0);
    float _257 = (_247.y * 2.0) + (-1.0);
    float _258 = dot(vec2(_255, _257), vec2(_255, _257));
    float _514 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _264 = sqrt(1.0 - (isnan(1.0) ? _514 : (isnan(_514) ? 1.0 : min(_514, 1.0))));
    float _267 = fma(_264, _170, fma(_257, _163, _255 * _149));
    float _270 = fma(_264, _171, fma(_257, _164, _255 * _150));
    float _273 = fma(_264, _172, fma(_257, _165, _255 * _151));
    float _277 = inversesqrt(dot(vec3(_267, _270, _273), vec3(_267, _270, _273)));
    float _278 = _277 * _267;
    float _279 = _277 * _270;
    float _280 = _277 * _273;
    float _284 = inversesqrt(dot(vec3(_278, _279, _280), vec3(_278, _279, _280)));
    float _291 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _301 = cbMtdParam._m0[9u].x - dot(vec3(_291 * _226, _291 * _227, _291 * _228), vec3(_284 * _278, _284 * _279, _284 * _280));
    float _525 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _302 = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    float _305 = fma(_280, _170, fma(_279, _163, _278 * _149));
    float _308 = fma(_280, _171, fma(_279, _164, _278 * _150));
    float _311 = fma(_280, _172, fma(_279, _165, _278 * _151));
    float _315 = inversesqrt(dot(vec3(_305, _308, _311), vec3(_305, _308, _311)));
    float _536 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
    float _316 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
    float _547 = isnan(0.0) ? cbMatDynParam._m0[17u].x : (isnan(cbMatDynParam._m0[17u].x) ? 0.0 : max(cbMatDynParam._m0[17u].x, 0.0));
    float _317 = isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0));
    float _558 = isnan(0.0) ? cbMatDynParam._m0[17u].y : (isnan(cbMatDynParam._m0[17u].y) ? 0.0 : max(cbMatDynParam._m0[17u].y, 0.0));
    float _318 = isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0));
    float _569 = isnan(0.0) ? cbMatDynParam._m0[17u].z : (isnan(cbMatDynParam._m0[17u].z) ? 0.0 : max(cbMatDynParam._m0[17u].z, 0.0));
    float _319 = isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0));
    uint _321 = uint(roundEven(NORMAL.w));
    vec4 _326 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _328 = _326.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _395 = sqrt(((_226 * _226) + (_227 * _227)) + (_228 * _228));
        float _402 = (cbMatDynParam._m0[5u].x * _395) + cbMatDynParam._m0[5u].y;
        float _580 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
        float _403 = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
        float _407 = (cbMatDynParam._m0[5u].z * _395) + cbMatDynParam._m0[5u].w;
        float _591 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0))) - _403)) + _403) < ((_328 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _436;
    uint _348;
    vec4 _353;
    float _360;
    float _361;
    float _362;
    float _366;
    float _371;
    vec4 _375;
    float _377;
    float _378;
    bool _389;
    for (;;)
    {
        _348 = _321 * 13u;
        _353 = cbInstanceData._m0[(_348 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _357 = (cbMtdParam._m0[0u].x * _317) * _353.x;
        float _358 = (cbMtdParam._m0[0u].y * _318) * _353.y;
        float _359 = (cbMtdParam._m0[0u].z * _319) * _353.z;
        float _602 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
        _360 = isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0));
        float _613 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        _361 = isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0));
        float _624 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
        _362 = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
        float _635 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
        _366 = cbMtdParam._m0[2u].w;
        _371 = cbInstanceData._m0[_348 + 6u].w * (isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0)));
        float _372 = _328 + (-0.5);
        _375 = cbMtdParam._m0[1u];
        _377 = _375.y * _372;
        _378 = _372 * 0.999000012874603271484375;
        _389 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_389)
        {
            if ((cbInstanceData._m0[_348 + 7u].x + _378) < 0.5)
            {
                _436 = true;
                break;
            }
        }
        if ((_353.w < 1.0) && ((_353.w + _378) < 0.5))
        {
            _436 = true;
            break;
        }
        if ((_377 + 1.0) < _375.x)
        {
            _436 = true;
            break;
        }
        _436 = false;
        break;
    }
    if (_436)
    {
        discard_state = true;
    }
    float _463;
    float _464;
    float _465;
    float _466;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _463 = _371;
        _464 = _371;
        _465 = _371;
        _466 = _371;
    }
    else
    {
        _463 = _366;
        _464 = 0.0;
        _465 = float(floatBitsToUint(cbInstanceData._m0[_348 + 5u]).x) * 0.0039215688593685626983642578125;
        _466 = TEXCOORD.z;
    }
    SV_Target.x = ((_305 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.y = ((_308 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.z = ((_311 * 0.5) * _315) + 0.500488758087158203125;
    SV_Target.w = _464;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _466;
    SV_Target_2.x = _360;
    SV_Target_2.y = _361;
    SV_Target_2.z = _362;
    SV_Target_2.w = _465;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _464;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _463;
    discard_exit();
}


