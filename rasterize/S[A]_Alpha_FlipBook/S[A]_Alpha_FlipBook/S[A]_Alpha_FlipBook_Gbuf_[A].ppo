#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_Alpha_FlipBook_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _141;
    float _142;
    float _143;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
        _143 = (-0.0) - _136;
    }
    else
    {
        _141 = _134;
        _142 = _135;
        _143 = _136;
    }
    uint _160 = uint(int(floor(cbMtdParam._m0[10u].x)));
    uint _161 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _163 = float(int(_160 - _161 * (_160 / _161)));
    vec4 _188 = texture(sampler2D(S_A_Alpha_FlipBook_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((fract(TEXCOORD_1.x) + (_163 - cbMtdParam._m0[10u].z * trunc(_163 / cbMtdParam._m0[10u].z))) * (1.0 / cbMtdParam._m0[10u].z)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((fract(TEXCOORD_1.y) + floor(_163 / cbMtdParam._m0[10u].z)) * (1.0 / cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _195 = _188.x * cbMtdParam._m0[9u].x;
    float _196 = _188.y * cbMtdParam._m0[9u].y;
    float _197 = _188.z * cbMtdParam._m0[9u].z;
    vec4 _207 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _209 = _207.x;
    float _232 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _209)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _209))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _498 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _235 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * _188.w;
    float _236 = (isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0))) * _235;
    float _237 = gl_FragCoord.x * 0.125;
    float _239 = gl_FragCoord.y * 0.125;
    vec4 _241 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_237, _239));
    float _249 = float(_235 >= ((_241.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _253 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _509 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _254 = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
    float _520 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _255 = isnan(1.0) ? _520 : (isnan(_520) ? 1.0 : min(_520, 1.0));
    float _531 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _256 = isnan(1.0) ? _531 : (isnan(_531) ? 1.0 : min(_531, 1.0));
    float _542 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _257 = isnan(1.0) ? _542 : (isnan(_542) ? 1.0 : min(_542, 1.0));
    uint _259 = uint(roundEven(NORMAL.w));
    float _300 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _310 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _300);
    float _311 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _300);
    float _312 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _300);
    vec4 _313 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_237, _239));
    float _315 = _313.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _381 = sqrt(((_310 * _310) + (_311 * _311)) + (_312 * _312));
        float _388 = (cbMatDynParam._m0[5u].x * _381) + cbMatDynParam._m0[5u].y;
        float _553 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
        float _389 = isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0));
        float _393 = (cbMatDynParam._m0[5u].z * _381) + cbMatDynParam._m0[5u].w;
        float _564 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _564 : (isnan(_564) ? 1.0 : min(_564, 1.0))) - _389)) + _389) < ((_315 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _420;
    uint _334;
    vec4 _339;
    float _346;
    float _347;
    float _348;
    float _352;
    float _357;
    vec4 _361;
    float _363;
    float _364;
    bool _375;
    for (;;)
    {
        _334 = _259 * 13u;
        _339 = cbInstanceData._m0[(_334 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _343 = (cbMtdParam._m0[0u].x * _255) * _339.x;
        float _344 = (cbMtdParam._m0[0u].y * _256) * _339.y;
        float _345 = (cbMtdParam._m0[0u].z * _257) * _339.z;
        float _575 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
        _346 = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
        float _586 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
        _347 = isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0));
        float _597 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
        _348 = isnan(1.0) ? _597 : (isnan(_597) ? 1.0 : min(_597, 1.0));
        float _608 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
        _352 = cbMtdParam._m0[2u].w;
        _357 = cbInstanceData._m0[_334 + 6u].w * (isnan(1.0) ? _608 : (isnan(_608) ? 1.0 : min(_608, 1.0)));
        float _358 = _315 + (-0.5);
        _361 = cbMtdParam._m0[1u];
        _363 = _361.y * _358;
        _364 = _358 * 0.999000012874603271484375;
        _375 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_375)
        {
            if ((cbInstanceData._m0[_334 + 7u].x + _364) < 0.5)
            {
                _420 = true;
                break;
            }
        }
        if ((_339.w < 1.0) && ((_339.w + _364) < 0.5))
        {
            _420 = true;
            break;
        }
        if ((_363 + _249) < _361.x)
        {
            _420 = true;
            break;
        }
        _420 = false;
        break;
    }
    if (_420)
    {
        discard_state = true;
    }
    float _447;
    float _448;
    float _449;
    float _450;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _447 = _357;
        _448 = _357;
        _449 = _357;
        _450 = _357;
    }
    else
    {
        _447 = _352;
        _448 = 0.0;
        _449 = float(floatBitsToUint(cbInstanceData._m0[_334 + 5u]).x) * 0.0039215688593685626983642578125;
        _450 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_141 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.y = ((_142 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.z = ((_143 * 0.5) * _253) + 0.500488758087158203125;
    SV_Target.w = _448;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _450;
    SV_Target_2.x = _346;
    SV_Target_2.y = _347;
    SV_Target_2.z = _348;
    SV_Target_2.w = _449;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _448;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _447;
    discard_exit();
}


