#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_14;
layout(location = 9) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _224 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _248 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _250 = texelFetch(g_InstanceIndexBuffer, int(_248));
    uint _251 = _250.x;
    precise float _252 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _257 = isnan(_252) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _252 : max(0.001000000047497451305389404296875, _252));
    precise float _259 = BLENDWEIGHT.x / _257;
    precise float _260 = BLENDWEIGHT.y / _257;
    precise float _261 = BLENDWEIGHT.z / _257;
    precise float _262 = BLENDWEIGHT.w / _257;
    uint _264 = _251 * 13u;
    uvec4 _269 = floatBitsToUint(cbInstanceData._m0[_264 + 4u]);
    uint _270 = _269.x;
    uint _272 = (_270 + uint(float(BLENDINDICES.x))) * 3u;
    uint _279 = _272 + 1u;
    uint _286 = _272 + 2u;
    precise float _293 = _259 * cbObjMatrix._m0[_272].x;
    precise float _294 = _259 * cbObjMatrix._m0[_279].x;
    precise float _295 = _259 * cbObjMatrix._m0[_286].x;
    precise float _296 = _259 * cbObjMatrix._m0[_272].y;
    precise float _297 = _259 * cbObjMatrix._m0[_279].y;
    precise float _298 = _259 * cbObjMatrix._m0[_286].y;
    precise float _299 = _259 * cbObjMatrix._m0[_272].z;
    precise float _300 = _259 * cbObjMatrix._m0[_279].z;
    precise float _301 = _259 * cbObjMatrix._m0[_286].z;
    precise float _302 = _259 * cbObjMatrix._m0[_272].w;
    precise float _303 = _259 * cbObjMatrix._m0[_279].w;
    precise float _304 = _259 * cbObjMatrix._m0[_286].w;
    uint _307 = (_270 + uint(float(BLENDINDICES.y))) * 3u;
    uint _314 = _307 + 1u;
    uint _321 = _307 + 2u;
    precise float _328 = _260 * cbObjMatrix._m0[_307].x;
    precise float _329 = _260 * cbObjMatrix._m0[_314].x;
    precise float _330 = _260 * cbObjMatrix._m0[_321].x;
    precise float _331 = _260 * cbObjMatrix._m0[_307].y;
    precise float _332 = _260 * cbObjMatrix._m0[_314].y;
    precise float _333 = _260 * cbObjMatrix._m0[_321].y;
    precise float _334 = _260 * cbObjMatrix._m0[_307].z;
    precise float _335 = _260 * cbObjMatrix._m0[_314].z;
    precise float _336 = _260 * cbObjMatrix._m0[_321].z;
    precise float _337 = _260 * cbObjMatrix._m0[_307].w;
    precise float _338 = _260 * cbObjMatrix._m0[_314].w;
    precise float _339 = _260 * cbObjMatrix._m0[_321].w;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    uint _354 = (_270 + uint(float(BLENDINDICES.z))) * 3u;
    uint _361 = _354 + 1u;
    uint _368 = _354 + 2u;
    precise float _375 = _261 * cbObjMatrix._m0[_354].x;
    precise float _376 = _261 * cbObjMatrix._m0[_361].x;
    precise float _377 = _261 * cbObjMatrix._m0[_368].x;
    precise float _378 = _261 * cbObjMatrix._m0[_354].y;
    precise float _379 = _261 * cbObjMatrix._m0[_361].y;
    precise float _380 = _261 * cbObjMatrix._m0[_368].y;
    precise float _381 = _261 * cbObjMatrix._m0[_354].z;
    precise float _382 = _261 * cbObjMatrix._m0[_361].z;
    precise float _383 = _261 * cbObjMatrix._m0[_368].z;
    precise float _384 = _261 * cbObjMatrix._m0[_354].w;
    precise float _385 = _261 * cbObjMatrix._m0[_361].w;
    precise float _386 = _261 * cbObjMatrix._m0[_368].w;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    uint _401 = (_270 + uint(float(BLENDINDICES.w))) * 3u;
    uint _408 = _401 + 1u;
    uint _415 = _401 + 2u;
    precise float _422 = _262 * cbObjMatrix._m0[_401].x;
    precise float _423 = _262 * cbObjMatrix._m0[_408].x;
    precise float _424 = _262 * cbObjMatrix._m0[_415].x;
    precise float _425 = _262 * cbObjMatrix._m0[_401].y;
    precise float _426 = _262 * cbObjMatrix._m0[_408].y;
    precise float _427 = _262 * cbObjMatrix._m0[_415].y;
    precise float _428 = _262 * cbObjMatrix._m0[_401].z;
    precise float _429 = _262 * cbObjMatrix._m0[_408].z;
    precise float _430 = _262 * cbObjMatrix._m0[_415].z;
    precise float _431 = _262 * cbObjMatrix._m0[_401].w;
    precise float _432 = _262 * cbObjMatrix._m0[_408].w;
    precise float _433 = _262 * cbObjMatrix._m0[_415].w;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = POSITION.x * _434;
    precise float _447 = POSITION.y * _437;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.z * _440;
    precise float _450 = _449 + _448;
    precise float _451 = 1.0 * _443;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.x * _435;
    precise float _454 = POSITION.y * _438;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.z * _441;
    precise float _457 = _456 + _455;
    precise float _458 = 1.0 * _444;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.x * _436;
    precise float _461 = POSITION.y * _439;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _442;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _445;
    precise float _466 = _465 + _464;
    float _641 = (((((cbPrevObjMatrix._m0[_307].w * _260) + (cbPrevObjMatrix._m0[_272].w * _259)) + (cbPrevObjMatrix._m0[_354].w * _261)) + (cbPrevObjMatrix._m0[_401].w * _262)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_307].z * _260) + (cbPrevObjMatrix._m0[_272].z * _259)) + (cbPrevObjMatrix._m0[_354].z * _261)) + (cbPrevObjMatrix._m0[_401].z * _262), fma(POSITION.y, (((cbPrevObjMatrix._m0[_307].y * _260) + (cbPrevObjMatrix._m0[_272].y * _259)) + (cbPrevObjMatrix._m0[_354].y * _261)) + (cbPrevObjMatrix._m0[_401].y * _262), ((((cbPrevObjMatrix._m0[_307].x * _260) + (cbPrevObjMatrix._m0[_272].x * _259)) + (cbPrevObjMatrix._m0[_354].x * _261)) + (cbPrevObjMatrix._m0[_401].x * _262)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _642 = (((((cbPrevObjMatrix._m0[_314].w * _260) + (cbPrevObjMatrix._m0[_279].w * _259)) + (cbPrevObjMatrix._m0[_361].w * _261)) + (cbPrevObjMatrix._m0[_408].w * _262)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_314].z * _260) + (cbPrevObjMatrix._m0[_279].z * _259)) + (cbPrevObjMatrix._m0[_361].z * _261)) + (cbPrevObjMatrix._m0[_408].z * _262), fma(POSITION.y, (((cbPrevObjMatrix._m0[_314].y * _260) + (cbPrevObjMatrix._m0[_279].y * _259)) + (cbPrevObjMatrix._m0[_361].y * _261)) + (cbPrevObjMatrix._m0[_408].y * _262), ((((cbPrevObjMatrix._m0[_314].x * _260) + (cbPrevObjMatrix._m0[_279].x * _259)) + (cbPrevObjMatrix._m0[_361].x * _261)) + (cbPrevObjMatrix._m0[_408].x * _262)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _643 = (((((cbPrevObjMatrix._m0[_321].w * _260) + (cbPrevObjMatrix._m0[_286].w * _259)) + (cbPrevObjMatrix._m0[_368].w * _261)) + (cbPrevObjMatrix._m0[_415].w * _262)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_321].z * _260) + (cbPrevObjMatrix._m0[_286].z * _259)) + (cbPrevObjMatrix._m0[_368].z * _261)) + (cbPrevObjMatrix._m0[_415].z * _262), fma(POSITION.y, (((cbPrevObjMatrix._m0[_321].y * _260) + (cbPrevObjMatrix._m0[_286].y * _259)) + (cbPrevObjMatrix._m0[_368].y * _261)) + (cbPrevObjMatrix._m0[_415].y * _262), ((((cbPrevObjMatrix._m0[_321].x * _260) + (cbPrevObjMatrix._m0[_286].x * _259)) + (cbPrevObjMatrix._m0[_368].x * _261)) + (cbPrevObjMatrix._m0[_415].x * _262)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _690 = fma(_227, _440, fma(_226, _437, _434 * _224));
    float _693 = fma(_227, _441, fma(_226, _438, _435 * _224));
    float _696 = fma(_227, _442, fma(_226, _439, _436 * _224));
    precise float _712 = _452 - cbSceneParam._m0[3u].x;
    precise float _713 = _459 - cbSceneParam._m0[3u].y;
    precise float _714 = _466 - cbSceneParam._m0[3u].z;
    precise float _742 = _712 * cbSceneParam._m0[24u].x;
    precise float _743 = _713 * cbSceneParam._m0[24u].y;
    precise float _744 = _743 + _742;
    precise float _745 = _714 * cbSceneParam._m0[24u].z;
    precise float _746 = _745 + _744;
    precise float _747 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _748 = _747 + _746;
    precise float _749 = _712 * cbSceneParam._m0[25u].x;
    precise float _750 = _713 * cbSceneParam._m0[25u].y;
    precise float _751 = _750 + _749;
    precise float _752 = _714 * cbSceneParam._m0[25u].z;
    precise float _753 = _752 + _751;
    precise float _754 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _755 = _754 + _753;
    precise float _756 = _712 * cbSceneParam._m0[26u].x;
    precise float _757 = _713 * cbSceneParam._m0[26u].y;
    precise float _758 = _757 + _756;
    precise float _759 = _714 * cbSceneParam._m0[26u].z;
    precise float _760 = _759 + _758;
    precise float _761 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _762 = _761 + _760;
    precise float _763 = _712 * cbSceneParam._m0[27u].x;
    precise float _764 = _713 * cbSceneParam._m0[27u].y;
    precise float _765 = _764 + _763;
    precise float _766 = _714 * cbSceneParam._m0[27u].z;
    precise float _767 = _766 + _765;
    precise float _768 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _769 = _768 + _767;
    gl_Position.x = _748;
    gl_Position.y = _755;
    gl_Position.z = _762;
    gl_Position.w = _769;
    POSITION_1.x = _748;
    POSITION_1.y = _755;
    POSITION_1.z = _762;
    POSITION_1.w = _769;
    NORMAL_1.x = _690;
    NORMAL_1.y = _693;
    NORMAL_1.z = _696;
    NORMAL_1.w = float(_251);
    TANGENT_1.x = fma(_238, _440, fma(_237, _437, _434 * _236));
    TANGENT_1.y = fma(_238, _441, fma(_237, _438, _435 * _236));
    TANGENT_1.z = fma(_238, _442, fma(_237, _439, _436 * _236));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_13.x = _748;
    TEXCOORD_13.y = _755;
    TEXCOORD_13.z = _762;
    TEXCOORD_13.w = _769;
    TEXCOORD_14.x = fma(_643, cbSceneParam._m0[29u].z, fma(_642, cbSceneParam._m0[29u].y, _641 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_643, cbSceneParam._m0[30u].z, fma(_642, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _641)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_643, cbSceneParam._m0[31u].z, fma(_642, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _641)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_643, cbSceneParam._m0[32u].z, fma(_642, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _641)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _690;
    TEXCOORD_15.y = _693;
    TEXCOORD_15.z = _696;
    gl_ClipDistance[0u] = dot(vec4(_748, _755, _762, _769), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_748, _755, _762, _769), vec4(cbInstanceData._m0[_264 + 3u]));
}


