#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1275;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _214 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _215 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _216 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _222 = inversesqrt(dot(vec3(_214, _215, _216), vec3(_214, _215, _216)));
    float _229 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _236 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _258 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _264 = _258.x * cbMtdParam._m0[9u].x;
    float _265 = _258.y * cbMtdParam._m0[9u].y;
    float _266 = _258.z * cbMtdParam._m0[9u].z;
    float _310 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    vec4 _325 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _342 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _344 = _342.x;
    float _345 = _342.y;
    float _346 = _342.z;
    float _355 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[17u].w + 1.0);
    float _3900 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _356 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
    float _365 = ((_325.z - _346) * _356) + _346;
    float _369 = ((((_325.x - _344) * _356) + _344) * 2.0) + (-1.0);
    float _371 = ((((_325.y - _345) * _356) + _345) * 2.0) + (-1.0);
    float _372 = dot(vec2(_369, _371), vec2(_369, _371));
    float _3911 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _377 = sqrt(1.0 - (isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0))));
    float _397 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _400 = (_397 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _401 = (_397 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _426 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _430 = cbPerFrame._m0[22u].x * 2.0;
    float _431 = _430 * cbMtdParam._m0[22u].y;
    float _438 = ((_426.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _440 = (-0.0) - (cbMtdParam._m0[22u].x * ((_426.x * 0.5) + (-0.25)));
    float _442 = fract(_431);
    float _444 = fract(_431 + 0.5);
    float _455 = abs((_442 * 2.0) + (-1.0));
    vec4 _472 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_442 * _440) + _400) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_438 * _442) + _401) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _474 = _472.x;
    float _475 = _472.y;
    float _476 = _472.z;
    vec4 _477 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_444 * _440) + _400) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_438 * _444) + _401) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _519 = (cbMtdParam._m0[23u].y * _397) + TEXCOORD_6.w;
    float _520 = (cbMtdParam._m0[23u].z * _397) + TEXCOORD_9.w;
    vec4 _533 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _537 = _430 * cbMtdParam._m0[18u].x;
    float _542 = ((_533.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _544 = (-0.0) - (cbMtdParam._m0[20u].z * ((_533.x * 0.5) + (-0.25)));
    float _545 = fract(_537);
    float _547 = fract(_537 + 0.5);
    float _548 = _545 * _544;
    float _549 = _542 * _545;
    float _552 = _547 * _544;
    float _553 = _542 * _547;
    float _558 = abs((_545 * 2.0) + (-1.0));
    vec4 _574 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_548 + _519) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_549 + _520) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _576 = _574.x;
    float _577 = _574.y;
    float _578 = _574.z;
    vec4 _579 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_552 + _519) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_553 + _520) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _609 = (cbMtdParam._m0[22u].w * _397) + TEXCOORD_6.w;
    float _610 = (cbMtdParam._m0[23u].x * _397) + TEXCOORD_9.w;
    vec4 _630 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_548 + _609) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_549 + _610) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _632 = _630.x;
    float _633 = _630.y;
    float _634 = _630.z;
    vec4 _635 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_552 + _609) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_553 + _610) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _655 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3922 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _656 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
    float _664 = (((_656 * _656) * (3.0 - (_656 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _697 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _609) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _610) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _3933 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _698 = isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0));
    float _702 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_635.x - _632) * _558) + _632)) * _664) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_579.x - _576) * _558) + _576)))) * _698;
    float _706 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_635.y - _633) * _558) + _633)) * _664) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_579.y - _577) * _558) + _577)))) * _698;
    float _710 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_635.z - _634) * _558) + _634)) * _664) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_579.z - _578) * _558) + _578)))) * _698;
    float _714 = _702 - (_702 * _310);
    float _715 = _706 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _706);
    float _716 = _710 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _710);
    float _723 = (_310 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _310))) * (cbMtdParam._m0[20u].x + 1.0);
    float _3944 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _724 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
    float _737 = (cbMtdParam._m0[20u].y * _369) + _369;
    float _738 = (cbMtdParam._m0[20u].y * _371) + _371;
    float _741 = fma(_377, _229 * NORMAL.x, fma(_738, _236 * TANGENT.x, (_222 * _214) * _737));
    float _744 = fma(_377, _229 * NORMAL.y, fma(_738, _236 * TANGENT.y, (_222 * _215) * _737));
    float _747 = fma(_377, _229 * NORMAL.z, fma(_738, _236 * TANGENT.z, (_222 * _216) * _737));
    float _751 = inversesqrt(dot(vec3(_741, _744, _747), vec3(_741, _744, _747)));
    float _752 = _751 * _741;
    float _753 = _751 * _744;
    float _754 = _751 * _747;
    float _3955 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _755 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
    float _3966 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _3977 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _3988 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _774 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _815 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _825 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _815);
    float _826 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _815);
    float _827 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _815);
    float _831 = inversesqrt(dot(vec3(_825, _826, _827), vec3(_825, _826, _827)));
    float _832 = _825 * _831;
    float _833 = _826 * _831;
    float _834 = _827 * _831;
    float _840 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _841 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _861 = fma(_754, cbSceneParam._m0[5u].z, fma(_753, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _752));
    float _864 = fma(_754, cbSceneParam._m0[6u].z, fma(_753, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _752));
    float _867 = fma(_754, cbSceneParam._m0[7u].z, fma(_753, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _752));
    uint _880 = uint(roundEven(NORMAL.w)) * 13u;
    uint _881 = _880 + 9u;
    uint _882 = _881 + uint(cbMatDynParam._m0[0u].w);
    float _888 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0)))) * cbInstanceData._m0[_882].x;
    float _889 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0)))) * cbInstanceData._m0[_882].y;
    float _890 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0)))) * cbInstanceData._m0[_882].z;
    float _3999 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _891 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
    float _4010 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _892 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
    float _4021 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _893 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
    vec4 _902 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _840, cbSceneParam._m0[86u].y * _841));
    float _905 = _902.x * TEXCOORD_3.w;
    float _906 = dot(vec3(_752, _753, _754), vec3(_832, _833, _834));
    float _909 = _906 * 2.0;
    float _913 = (_909 * _752) - _832;
    float _914 = (_909 * _753) - _833;
    float _915 = (_909 * _754) - _834;
    float _919 = abs(dot(vec3(_832, _833, _834), vec3(_752, _753, _754)));
    float _4032 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _921 = sqrt(_755);
    float _933 = exp2((_921 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_921 * 3.0));
    float _965 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _969 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _973 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1274;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1000 = fma(_973, cbModelParam._m0[26u].z, fma(_969, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _965));
        float _1004 = fma(_973, cbModelParam._m0[27u].z, fma(_969, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _965));
        float _1008 = fma(_973, cbModelParam._m0[28u].z, fma(_969, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _965));
        float _1032 = _965 + _752;
        float _1033 = _969 + _753;
        float _1034 = _973 + _754;
        float _1044 = fma(_1034, cbModelParam._m0[26u].z, fma(_1033, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1032)) - _1000;
        float _1045 = fma(_1034, cbModelParam._m0[27u].z, fma(_1033, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1032)) - _1004;
        float _1046 = fma(_1034, cbModelParam._m0[28u].z, fma(_1033, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1032)) - _1008;
        float _1050 = inversesqrt(dot(vec3(_1044, _1045, _1046), vec3(_1044, _1045, _1046)));
        float _1063 = ((_1050 * _1044) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1000 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1064 = ((_1050 * _1045) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1004 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1065 = ((_1050 * _1046) / cbModelParam._m0[34u].z) + ((((((_1008 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1068 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1063, _1064, _1065), 0.0);
        vec4 _1075 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1063, _1064, _1065), 0.0);
        vec4 _1082 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1063, _1064, _1065), 0.0);
        vec4 _1089 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1063, _1064, _1065), 0.0);
        float _1102 = exp2((_1068.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1068.x + (-0.5));
        float _1104 = _1102 * (_1068.y + (-0.5));
        float _1105 = _1102 * (_1068.z + (-0.5));
        float _1112 = exp2((_1075.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1075.x + (-0.5));
        float _1114 = _1112 * (_1075.y + (-0.5));
        float _1115 = _1112 * (_1075.z + (-0.5));
        float _1122 = exp2((_1082.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1082.x + (-0.5));
        float _1124 = _1122 * (_1082.y + (-0.5));
        float _1125 = _1122 * (_1082.z + (-0.5));
        float _1132 = exp2((_1089.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1089.x + (-0.5));
        float _1134 = _1132 * (_1089.y + (-0.5));
        float _1135 = _1132 * (_1089.z + (-0.5));
        float _1136 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1137 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1138 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1139 = _1103 * 0.5;
        float _1140 = _1113 * 0.5;
        float _1141 = _1123 * 0.5;
        float _1142 = dot(vec3(_1139, _1140, _1141), vec3(_1139, _1140, _1141));
        float _1147 = (_1142 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1142);
        float _1156 = (dot(vec3(_752, _753, _754), vec3(_1147 * _1139, _1147 * _1140, _1147 * _1141)) + 1.0) * 0.5;
        float _4058 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1166 = sqrt(((_1140 * _1140) + (_1139 * _1139)) + (_1141 * _1141)) / (_1136 + 9.9999997473787516355514526367188e-06);
        float _4069 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
        float _1168 = _1167 * 2.0;
        float _1172 = (1.0 - _1167) / (_1167 + 1.0);
        float _4080 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
        float _1182 = ((((1.0 - _1173) * (_1168 + 2.0)) * exp2(log2(isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0))) * (_1168 + 1.0))) + _1173) * _1136;
        float _1183 = _1104 * 0.5;
        float _1184 = _1114 * 0.5;
        float _1185 = _1124 * 0.5;
        float _1186 = dot(vec3(_1183, _1184, _1185), vec3(_1183, _1184, _1185));
        float _1191 = (_1186 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1186);
        float _1199 = (dot(vec3(_752, _753, _754), vec3(_1191 * _1183, _1191 * _1184, _1191 * _1185)) + 1.0) * 0.5;
        float _4091 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1208 = sqrt(((_1184 * _1184) + (_1183 * _1183)) + (_1185 * _1185)) / (_1137 + 9.9999997473787516355514526367188e-06);
        float _4102 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
        float _1210 = _1209 * 2.0;
        float _1214 = (1.0 - _1209) / (_1209 + 1.0);
        float _4113 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
        float _1224 = ((((1.0 - _1215) * (_1210 + 2.0)) * exp2(log2(isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0))) * (_1210 + 1.0))) + _1215) * _1137;
        float _1225 = _1105 * 0.5;
        float _1226 = _1115 * 0.5;
        float _1227 = _1125 * 0.5;
        float _1228 = dot(vec3(_1225, _1226, _1227), vec3(_1225, _1226, _1227));
        float _1233 = (_1228 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1228);
        float _1241 = (dot(vec3(_752, _753, _754), vec3(_1233 * _1225, _1233 * _1226, _1233 * _1227)) + 1.0) * 0.5;
        float _4124 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
        float _1250 = sqrt(((_1226 * _1226) + (_1225 * _1225)) + (_1227 * _1227)) / (_1138 + 9.9999997473787516355514526367188e-06);
        float _4135 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1252 = _1251 * 2.0;
        float _1256 = (1.0 - _1251) / (_1251 + 1.0);
        float _4146 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
        float _1266 = ((((1.0 - _1257) * (_1252 + 2.0)) * exp2(log2(isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (_1252 + 1.0))) + _1257) * _1138;
        _1274 = _1105;
        _1276 = _1104;
        _1277 = _1103;
        _1278 = _1115;
        _1279 = _1114;
        _1280 = _1113;
        _1281 = _1125;
        _1282 = _1124;
        _1283 = _1123;
        _1284 = _1138;
        _1285 = _1137;
        _1286 = _1136;
        _1287 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0)));
        _1288 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0)));
        _1289 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0)));
    }
    else
    {
        _1274 = _1275;
        _1276 = _1275;
        _1277 = _1275;
        _1278 = _1275;
        _1279 = _1275;
        _1280 = _1275;
        _1281 = _1275;
        _1282 = _1275;
        _1283 = _1275;
        _1284 = _1275;
        _1285 = _1275;
        _1286 = _1275;
        _1287 = 0.0;
        _1288 = 0.0;
        _1289 = 0.0;
    }
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1315 = fma(_973, cbModelParam._m0[30u].z, fma(_969, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _965));
        float _1319 = fma(_973, cbModelParam._m0[31u].z, fma(_969, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _965));
        float _1323 = fma(_973, cbModelParam._m0[32u].z, fma(_969, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _965));
        float _1346 = _965 + _752;
        float _1347 = _969 + _753;
        float _1348 = _973 + _754;
        float _1358 = fma(_1348, cbModelParam._m0[30u].z, fma(_1347, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1346)) - _1315;
        float _1359 = fma(_1348, cbModelParam._m0[31u].z, fma(_1347, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1346)) - _1319;
        float _1360 = fma(_1348, cbModelParam._m0[32u].z, fma(_1347, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1346)) - _1323;
        float _1364 = inversesqrt(dot(vec3(_1358, _1359, _1360), vec3(_1358, _1359, _1360)));
        float _1377 = ((_1364 * _1358) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1315 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1378 = ((_1364 * _1359) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1319 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1379 = ((_1364 * _1360) / cbModelParam._m0[35u].z) + ((((((_1323 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1377, _1378, _1379), 0.0);
        vec4 _1388 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1377, _1378, _1379), 0.0);
        vec4 _1395 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1377, _1378, _1379), 0.0);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1377, _1378, _1379), 0.0);
        float _1414 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1415 = _1414 * (_1381.x + (-0.5));
        float _1416 = _1414 * (_1381.y + (-0.5));
        float _1417 = _1414 * (_1381.z + (-0.5));
        float _1424 = exp2((_1388.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1388.x + (-0.5));
        float _1426 = _1424 * (_1388.y + (-0.5));
        float _1427 = _1424 * (_1388.z + (-0.5));
        float _1434 = exp2((_1395.w + (-0.5)) * 20.0) * 2.0;
        float _1435 = _1434 * (_1395.x + (-0.5));
        float _1436 = _1434 * (_1395.y + (-0.5));
        float _1437 = _1434 * (_1395.z + (-0.5));
        float _1444 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1445 = _1444 * (_1402.x + (-0.5));
        float _1446 = _1444 * (_1402.y + (-0.5));
        float _1447 = _1444 * (_1402.z + (-0.5));
        float _1448 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1449 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1450 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1451 = _1415 * 0.5;
        float _1452 = _1425 * 0.5;
        float _1453 = _1435 * 0.5;
        float _1454 = dot(vec3(_1451, _1452, _1453), vec3(_1451, _1452, _1453));
        float _1459 = (_1454 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1454);
        float _1467 = (dot(vec3(_752, _753, _754), vec3(_1459 * _1451, _1459 * _1452, _1459 * _1453)) + 1.0) * 0.5;
        float _4187 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1476 = sqrt(((_1452 * _1452) + (_1451 * _1451)) + (_1453 * _1453)) / (_1448 + 9.9999997473787516355514526367188e-06);
        float _4198 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1478 = _1477 * 2.0;
        float _1482 = (1.0 - _1477) / (_1477 + 1.0);
        float _4209 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1492 = ((((1.0 - _1483) * (_1478 + 2.0)) * exp2(log2(isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0))) * (_1478 + 1.0))) + _1483) * _1448;
        float _1493 = _1416 * 0.5;
        float _1494 = _1426 * 0.5;
        float _1495 = _1436 * 0.5;
        float _1496 = dot(vec3(_1493, _1494, _1495), vec3(_1493, _1494, _1495));
        float _1501 = (_1496 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1496);
        float _1509 = (dot(vec3(_752, _753, _754), vec3(_1501 * _1493, _1501 * _1494, _1501 * _1495)) + 1.0) * 0.5;
        float _4220 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1518 = sqrt(((_1494 * _1494) + (_1493 * _1493)) + (_1495 * _1495)) / (_1449 + 9.9999997473787516355514526367188e-06);
        float _4231 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1520 = _1519 * 2.0;
        float _1524 = (1.0 - _1519) / (_1519 + 1.0);
        float _4242 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1525 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1534 = ((((1.0 - _1525) * (_1520 + 2.0)) * exp2(log2(isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * (_1520 + 1.0))) + _1525) * _1449;
        float _1535 = _1417 * 0.5;
        float _1536 = _1427 * 0.5;
        float _1537 = _1437 * 0.5;
        float _1538 = dot(vec3(_1535, _1536, _1537), vec3(_1535, _1536, _1537));
        float _1543 = (_1538 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1538);
        float _1551 = (dot(vec3(_752, _753, _754), vec3(_1543 * _1535, _1543 * _1536, _1543 * _1537)) + 1.0) * 0.5;
        float _4253 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1560 = sqrt(((_1536 * _1536) + (_1535 * _1535)) + (_1537 * _1537)) / (_1450 + 9.9999997473787516355514526367188e-06);
        float _4264 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1561 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1562 = _1561 * 2.0;
        float _1566 = (1.0 - _1561) / (_1561 + 1.0);
        float _4275 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1567 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1576 = ((((1.0 - _1567) * (_1562 + 2.0)) * exp2(log2(isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * (_1562 + 1.0))) + _1567) * _1450;
        _1584 = _1417;
        _1585 = _1416;
        _1586 = _1415;
        _1587 = _1427;
        _1588 = _1426;
        _1589 = _1425;
        _1590 = _1437;
        _1591 = _1436;
        _1592 = _1435;
        _1593 = _1450;
        _1594 = _1449;
        _1595 = _1448;
        _1596 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0)));
        _1597 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0)));
        _1598 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0)));
    }
    else
    {
        _1584 = _1275;
        _1585 = _1275;
        _1586 = _1275;
        _1587 = _1275;
        _1588 = _1275;
        _1589 = _1275;
        _1590 = _1275;
        _1591 = _1275;
        _1592 = _1275;
        _1593 = _1275;
        _1594 = _1275;
        _1595 = _1275;
        _1596 = 0.0;
        _1597 = 0.0;
        _1598 = 0.0;
    }
    float _1608 = (cbModelParam._m0[1u].x * (_1596 - _1287)) + _1287;
    float _1609 = (cbModelParam._m0[1u].x * (_1597 - _1288)) + _1288;
    float _1610 = (cbModelParam._m0[1u].x * (_1598 - _1289)) + _1289;
    float _1631 = fma(_1610, cbSceneParam._m0[89u].z, fma(_1609, cbSceneParam._m0[89u].y, _1608 * cbSceneParam._m0[89u].x));
    float _1634 = fma(_1610, cbSceneParam._m0[90u].z, fma(_1609, cbSceneParam._m0[90u].y, _1608 * cbSceneParam._m0[90u].x));
    float _1637 = fma(_1610, cbSceneParam._m0[91u].z, fma(_1609, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1608));
    float _1652 = _913 * 0.5;
    float _1653 = _914 * 0.5;
    float _1654 = _915 * 0.5;
    float _1655 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1586, _1589, _1592, _1595));
    float _1658 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1585, _1588, _1591, _1594));
    float _1661 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1584, _1587, _1590, _1593));
    float _1695;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1668 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1274, _1278, _1281, _1284));
        float _1672 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1276, _1279, _1282, _1285));
        float _1676 = dot(vec4(_1652, _1653, _1654, 1.0), vec4(_1277, _1280, _1283, _1286));
        float _1683 = dot(vec4(cbModelParam._m0[39u]), vec4(_1652, _1653, _1654, 1.0));
        _1695 = dot(vec3(isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)), isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)), isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1683) ? 0.0 : (isnan(0.0) ? _1683 : max(0.0, _1683))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1695 = 1.0;
    }
    float _1706;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1697 = dot(vec4(cbModelParam._m0[40u]), vec4(_1652, _1653, _1654, 1.0));
        _1706 = dot(vec3(isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0)), isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0)), isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1697) ? 0.0 : (isnan(0.0) ? _1697 : max(0.0, _1697))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1706 = 1.0;
    }
    float _1710 = (_1706 * cbModelParam._m0[1u].x) + (_1695 * (1.0 - cbModelParam._m0[1u].x));
    float _1720 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _755);
    float _1721 = isnan(_1720) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1720 : min(cbModelParam._m0[25u].z, _1720));
    float _1801;
    float _1803;
    float _1805;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1768 = fma(_973, cbModelParam._m0[13u].z, fma(_969, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _965)) + cbModelParam._m0[13u].w;
        float _1772 = fma(_973, cbModelParam._m0[14u].z, fma(_969, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _965)) + cbModelParam._m0[14u].w;
        float _1776 = fma(_973, cbModelParam._m0[15u].z, fma(_969, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _965)) + cbModelParam._m0[15u].w;
        float _1779 = fma(_915, cbModelParam._m0[13u].z, fma(_914, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _913));
        float _1782 = fma(_915, cbModelParam._m0[14u].z, fma(_914, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _913));
        float _1785 = fma(_915, cbModelParam._m0[15u].z, fma(_914, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _913));
        float _1813;
        if (_1779 > 0.0)
        {
            _1813 = abs((1.0 - _1768) / _1779);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1768 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1813 = frontier_phi_14_12_ladder;
        }
        float _1982;
        if (_1782 > 0.0)
        {
            _1982 = abs((1.0 - _1772) / _1782);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1782 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1772 + 1.0) / _1782);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1982 = frontier_phi_23_19_ladder;
        }
        float _2278;
        if (_1785 > 0.0)
        {
            _2278 = abs((1.0 - _1776) / _1785);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1785 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1776 + 1.0) / _1785);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2278 = frontier_phi_35_30_ladder;
        }
        float _2280 = isnan(_1982) ? _1813 : (isnan(_1813) ? _1982 : min(_1813, _1982));
        float _2281 = isnan(_2278) ? _2280 : (isnan(_2280) ? _2278 : min(_2280, _2278));
        float _2285 = (_2281 * _1779) + _1768;
        float _2286 = (_2281 * _1782) + _1772;
        float _2287 = (_2281 * _1785) + _1776;
        float _2288 = _2281 * 9.9999997473787516355514526367188e-05;
        float _2290 = (-1.0) - _2288;
        float _2292 = _2288 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2287 > _2292) || ((_2287 < _2290) || ((_2286 > _2292) || ((_2286 < _2290) || ((_2285 < _2290) || (_2285 > _2292))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2432 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2287, cbModelParam._m0[9u].z, fma(_2286, cbModelParam._m0[9u].y, _2285 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2287, cbModelParam._m0[10u].z, fma(_2286, cbModelParam._m0[10u].y, _2285 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2287, cbModelParam._m0[11u].z, fma(_2286, cbModelParam._m0[11u].y, _2285 * cbModelParam._m0[11u].x))), _1721);
            frontier_phi_13_35_ladder = _2432.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2432.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2432.x * cbModelParam._m0[1u].y;
        }
        _1801 = frontier_phi_13_35_ladder_2;
        _1803 = frontier_phi_13_35_ladder_1;
        _1805 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1789 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_913, _914, _915), _1721);
        _1801 = _1789.x * cbModelParam._m0[1u].y;
        _1803 = _1789.y * cbModelParam._m0[1u].y;
        _1805 = _1789.z * cbModelParam._m0[1u].y;
    }
    float _1809 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _755);
    float _1810 = isnan(_1809) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1809 : min(cbModelParam._m0[25u].w, _1809));
    float _1899;
    float _1901;
    float _1903;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1863 = fma(_973, cbModelParam._m0[21u].z, fma(_969, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _965)) + cbModelParam._m0[21u].w;
        float _1867 = fma(_973, cbModelParam._m0[22u].z, fma(_969, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _965)) + cbModelParam._m0[22u].w;
        float _1871 = fma(_973, cbModelParam._m0[23u].z, fma(_969, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _965)) + cbModelParam._m0[23u].w;
        float _1874 = fma(_915, cbModelParam._m0[21u].z, fma(_914, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _913));
        float _1877 = fma(_915, cbModelParam._m0[22u].z, fma(_914, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _913));
        float _1880 = fma(_915, cbModelParam._m0[23u].z, fma(_914, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _913));
        float _1987;
        if (_1874 > 0.0)
        {
            _1987 = abs((1.0 - _1863) / _1874);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1863 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1987 = frontier_phi_25_21_ladder;
        }
        float _2305;
        if (_1877 > 0.0)
        {
            _2305 = abs((1.0 - _1867) / _1877);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1867 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2305 = frontier_phi_37_32_ladder;
        }
        float _2632;
        if (_1880 > 0.0)
        {
            _2632 = abs((1.0 - _1871) / _1880);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1880 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1871 + 1.0) / _1880);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2632 = frontier_phi_47_44_ladder;
        }
        float _2634 = isnan(_2305) ? _1987 : (isnan(_1987) ? _2305 : min(_1987, _2305));
        float _2635 = isnan(_2632) ? _2634 : (isnan(_2634) ? _2632 : min(_2634, _2632));
        float _2639 = (_2635 * _1874) + _1863;
        float _2640 = (_2635 * _1877) + _1867;
        float _2641 = (_2635 * _1880) + _1871;
        float _2642 = _2635 * 9.9999997473787516355514526367188e-05;
        float _2643 = (-1.0) - _2642;
        float _2645 = _2642 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2641 > _2645) || ((_2641 < _2643) || ((_2640 > _2645) || ((_2640 < _2643) || ((_2639 < _2643) || (_2639 > _2645))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2759 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2641, cbModelParam._m0[17u].z, fma(_2640, cbModelParam._m0[17u].y, _2639 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2641, cbModelParam._m0[18u].z, fma(_2640, cbModelParam._m0[18u].y, _2639 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2641, cbModelParam._m0[19u].z, fma(_2640, cbModelParam._m0[19u].y, _2639 * cbModelParam._m0[19u].x))), _1810);
            frontier_phi_22_47_ladder = _2759.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2759.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2759.x * cbModelParam._m0[1u].z;
        }
        _1899 = frontier_phi_22_47_ladder_2;
        _1901 = frontier_phi_22_47_ladder_1;
        _1903 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1883 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_913, _914, _915), _1810);
        _1899 = _1883.x * cbModelParam._m0[1u].z;
        _1901 = _1883.y * cbModelParam._m0[1u].z;
        _1903 = _1883.z * cbModelParam._m0[1u].z;
    }
    float _1915 = ((((1.0 - _933) * ((_921 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_933 * _921)) * _905;
    float _1916 = _1915 * ((cbModelParam._m0[1u].w * (_1899 - _1801)) + _1801);
    float _1917 = _1915 * ((cbModelParam._m0[1u].w * (_1901 - _1803)) + _1803);
    float _1918 = _1915 * ((cbModelParam._m0[1u].w * (_1903 - _1805)) + _1805);
    float _1921 = fma(_1918, cbSceneParam._m0[89u].z, fma(_1917, cbSceneParam._m0[89u].y, _1916 * cbSceneParam._m0[89u].x));
    float _1924 = fma(_1918, cbSceneParam._m0[90u].z, fma(_1917, cbSceneParam._m0[90u].y, _1916 * cbSceneParam._m0[90u].x));
    float _1927 = fma(_1918, cbSceneParam._m0[91u].z, fma(_1917, cbSceneParam._m0[91u].y, _1916 * cbSceneParam._m0[91u].x));
    float _1961 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1965 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1969 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1973 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1974 = _1961 / _1973;
    float _1975 = _1965 / _1973;
    float _1976 = _1969 / _1973;
    float _2123;
    float _2124;
    float _2125;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2003 = ((uint(_1976 > cbSceneParam._m0[59u].y) + uint(_1976 > cbSceneParam._m0[59u].x)) + uint(_1976 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2004 = _2003 + 43u;
        uint _2012 = _2003 + 44u;
        uint _2020 = _2003 + 45u;
        uint _2028 = _2003 + 46u;
        float _2039 = fma(_1973, cbSceneParam._m0[_2004].w, fma(_1969, cbSceneParam._m0[_2004].z, fma(_1965, cbSceneParam._m0[_2004].y, _1961 * cbSceneParam._m0[_2004].x)));
        float _2043 = fma(_1973, cbSceneParam._m0[_2012].w, fma(_1969, cbSceneParam._m0[_2012].z, fma(_1965, cbSceneParam._m0[_2012].y, _1961 * cbSceneParam._m0[_2012].x)));
        float _2051 = fma(_1973, cbSceneParam._m0[_2028].w, fma(_1969, cbSceneParam._m0[_2028].z, fma(_1965, cbSceneParam._m0[_2028].y, _1961 * cbSceneParam._m0[_2028].x)));
        float _2056 = cbSceneParam._m0[33u].z * _2051;
        float _2058 = cbSceneParam._m0[33u].w * _2051;
        float _2061 = fma(_1973, cbSceneParam._m0[_2020].w, fma(_1969, cbSceneParam._m0[_2020].z, fma(_1965, cbSceneParam._m0[_2020].y, _1961 * cbSceneParam._m0[_2020].x))) / _2051;
        float _2109 = (cbSceneParam._m0[33u].x - sqrt(((_1975 * _1975) + (_1974 * _1974)) + (_1976 * _1976))) * cbSceneParam._m0[33u].y;
        float _4401 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
        float _2116 = (isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2056 + _2039) / _2051, (_2058 + _2043) / _2051), _2061), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2058 + _2039) / _2051, (_2043 - _2056) / _2051), _2061), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2039 - _2056) / _2051, (_2043 - _2058) / _2051), _2061), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2039 - _2058) / _2051, (_2056 + _2043) / _2051), _2061), 0.0)).x), vec4(0.25)));
        _2123 = 1.0 - (_2116 * cbSceneParam._m0[34u].x);
        _2124 = 1.0 - (_2116 * cbSceneParam._m0[34u].y);
        _2125 = 1.0 - (_2116 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2123 = 1.0;
        _2124 = 1.0;
        _2125 = 1.0;
    }
    float _2189;
    float _2191;
    float _2193;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2177 = fma(_1973, cbSceneParam._m0[63u].w, fma(_1969, cbSceneParam._m0[63u].z, fma(_1965, cbSceneParam._m0[63u].y, _1961 * cbSceneParam._m0[63u].x)));
        float _2178 = fma(_1973, cbSceneParam._m0[60u].w, fma(_1969, cbSceneParam._m0[60u].z, fma(_1965, cbSceneParam._m0[60u].y, _1961 * cbSceneParam._m0[60u].x))) / _2177;
        float _2179 = fma(_1973, cbSceneParam._m0[61u].w, fma(_1969, cbSceneParam._m0[61u].z, fma(_1965, cbSceneParam._m0[61u].y, _1961 * cbSceneParam._m0[61u].x))) / _2177;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2178 >= cbSceneParam._m0[64u].x) && (_2179 >= cbSceneParam._m0[64u].y)) && (_2178 <= cbSceneParam._m0[64u].z)) && (_2179 <= cbSceneParam._m0[64u].w))
        {
            float _2318 = fma(_1973, cbSceneParam._m0[62u].w, fma(_1969, cbSceneParam._m0[62u].z, fma(_1965, cbSceneParam._m0[62u].y, _1961 * cbSceneParam._m0[62u].x))) / _2177;
            float _2322 = isnan(cbSceneParam._m0[41u].w) ? _2318 : (isnan(_2318) ? cbSceneParam._m0[41u].w : max(_2318, cbSceneParam._m0[41u].w));
            float _2365 = (cbSceneParam._m0[33u].x - sqrt(((_1975 * _1975) + (_1974 * _1974)) + (_1976 * _1976))) * cbSceneParam._m0[33u].y;
            float _4417 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
            float _2372 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2178, cbSceneParam._m0[33u].w + _2179), _2322), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2178, _2179 - cbSceneParam._m0[33u].z), _2322), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2178 - cbSceneParam._m0[33u].z, _2179 - cbSceneParam._m0[33u].w), _2322), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2178 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2179), _2322), 0.0)).x), vec4(0.25)));
            float _2376 = 1.0 - (_2372 * cbSceneParam._m0[34u].x);
            float _2377 = 1.0 - (_2372 * cbSceneParam._m0[34u].y);
            float _2378 = 1.0 - (_2372 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2378) ? _2125 : (isnan(_2125) ? _2378 : min(_2125, _2378));
            frontier_phi_34_33_ladder_1 = isnan(_2377) ? _2124 : (isnan(_2124) ? _2377 : min(_2124, _2377));
            frontier_phi_34_33_ladder_2 = isnan(_2376) ? _2123 : (isnan(_2123) ? _2376 : min(_2123, _2376));
        }
        else
        {
            frontier_phi_34_33_ladder = _2125;
            frontier_phi_34_33_ladder_1 = _2124;
            frontier_phi_34_33_ladder_2 = _2123;
        }
        _2189 = frontier_phi_34_33_ladder_2;
        _2191 = frontier_phi_34_33_ladder_1;
        _2193 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2189 = _2123;
        _2191 = _2124;
        _2193 = _2125;
    }
    uvec4 _2198 = floatBitsToUint(cbInstanceData._m0[_880 + 5u]);
    uint _2200 = _2198.x * 14u;
    uint _2201 = _2200 + 13u;
    float _2208 = _905 + (-1.0);
    float _2213 = (cbLight._m0[_2201].x * _2208) + 1.0;
    float _2214 = (cbLight._m0[_2201].y * _2208) + 1.0;
    float _2215 = (cbLight._m0[_2201].z * _2208) + 1.0;
    float _2216 = (cbLight._m0[_2201].w * _2208) + 1.0;
    uint _2217 = _2200 + 5u;
    float _2223 = isnan(1.0) ? _2214 : (isnan(_2214) ? 1.0 : min(_2214, 1.0));
    uint _2227 = _2200 + 4u;
    float _2237 = isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0));
    uint _2241 = _2200 | 1u;
    float _2252 = dot(vec3(cbLight._m0[_2200].xyz), vec3(_752, _753, _754));
    float _2255 = dot(vec3(cbLight._m0[_2241].xyz), vec3(_752, _753, _754));
    float _4453 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _4464 = isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0));
    float _2260 = (isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * 0.3183098733425140380859375;
    float _2262 = (isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0))) * 0.3183098733425140380859375;
    float _2269 = ((cbLight._m0[_2217].x * _2223) * _2262) + (((cbLight._m0[_2227].x * _2189) * _2237) * _2260);
    float _2270 = ((_2223 * cbLight._m0[_2217].y) * _2262) + (((cbLight._m0[_2227].y * _2191) * _2237) * _2260);
    float _2271 = ((_2223 * cbLight._m0[_2217].z) * _2262) + (((cbLight._m0[_2227].z * _2193) * _2237) * _2260);
    uvec4 _2275 = floatBitsToUint(cbLight._m0[_2200 + 12u]);
    bool _2277 = _2275.x == 0u;
    float _2379;
    float _2381;
    float _2383;
    if (_2277)
    {
        _2379 = _2269;
        _2381 = _2270;
        _2383 = _2271;
    }
    else
    {
        uint _2387 = _2200 + 6u;
        float _2403 = (dot(vec3(cbLight._m0[_2200 + 2u].xyz), vec3(_752, _753, _754)) * 0.5) + 0.5;
        float _2404 = _2403 * _2403;
        float _4475 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
        float _2405 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _2406 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        _2379 = (((cbLight._m0[_2387].x * 0.3183098733425140380859375) * _2405) * _2406) + _2269;
        _2381 = (((cbLight._m0[_2387].y * 0.3183098733425140380859375) * _2405) * _2406) + _2270;
        _2383 = (((cbLight._m0[_2387].z * 0.3183098733425140380859375) * _2405) * _2406) + _2271;
    }
    bool _2386 = _2275.y == 0u;
    float _2441;
    float _2443;
    float _2445;
    if (_2386)
    {
        _2441 = _2379;
        _2443 = _2381;
        _2445 = _2383;
    }
    else
    {
        uint _2603 = _2200 + 7u;
        float _2619 = (dot(vec3(cbLight._m0[_2200 + 3u].xyz), vec3(_752, _753, _754)) * 0.5) + 0.5;
        float _2620 = _2619 * _2619;
        float _4491 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
        float _2621 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _2622 = isnan(1.0) ? _2216 : (isnan(_2216) ? 1.0 : min(_2216, 1.0));
        _2441 = (((cbLight._m0[_2603].x * 0.3183098733425140380859375) * _2621) * _2622) + _2379;
        _2443 = (((cbLight._m0[_2603].y * 0.3183098733425140380859375) * _2621) * _2622) + _2381;
        _2445 = (((cbLight._m0[_2603].z * 0.3183098733425140380859375) * _2621) * _2622) + _2383;
    }
    uint _2448 = _2200 + 8u;
    float _2461 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2200].w)) * _755) * 0.949999988079071044921875);
    float _2462 = _2461 * _2461;
    float _2463 = cbLight._m0[_2200].x + _832;
    float _2464 = cbLight._m0[_2200].y + _833;
    float _2465 = cbLight._m0[_2200].z + _834;
    float _2469 = inversesqrt(dot(vec3(_2463, _2464, _2465), vec3(_2463, _2464, _2465)));
    float _2470 = _2469 * _2463;
    float _2471 = _2469 * _2464;
    float _2472 = _2469 * _2465;
    float _2473 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2200].xyz));
    float _4507 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
    float _2476 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
    float _4518 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _2477 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
    float _2478 = dot(vec3(_752, _753, _754), vec3(_2470, _2471, _2472));
    float _4529 = isnan(0.0) ? _2478 : (isnan(_2478) ? 0.0 : max(_2478, 0.0));
    float _2481 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
    float _2482 = dot(vec3(cbLight._m0[_2200].xyz), vec3(_2470, _2471, _2472));
    float _4540 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
    float _2486 = _2462 * _2462;
    float _2490 = ((_2481 * _2481) * (_2486 + (-1.0))) + 1.0;
    float _2501 = (exp2(log2(1.0 - (isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2502 = 1.0 - _2462;
    float _2513 = (0.5 / (((_2477 * ((_2476 * _2502) + _2462)) + 9.9999999392252902907785028219223e-09) + (((_2477 * _2502) + _2462) * _2476))) * _2476;
    float _4551 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2515 = (isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0))) * (_2486 / ((_2490 * _2490) * 3.141590118408203125));
    uint _2529 = _2200 + 9u;
    float _2540 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2241].w)) * _755) * 0.949999988079071044921875);
    float _2541 = _2540 * _2540;
    float _2542 = cbLight._m0[_2241].x + _832;
    float _2543 = cbLight._m0[_2241].y + _833;
    float _2544 = cbLight._m0[_2241].z + _834;
    float _2548 = inversesqrt(dot(vec3(_2542, _2543, _2544), vec3(_2542, _2543, _2544)));
    float _2549 = _2548 * _2542;
    float _2550 = _2548 * _2543;
    float _2551 = _2548 * _2544;
    float _2552 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2241].xyz));
    float _4562 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
    float _2555 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
    float _2556 = dot(vec3(_752, _753, _754), vec3(_2549, _2550, _2551));
    float _4573 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
    float _2559 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
    float _2560 = dot(vec3(cbLight._m0[_2241].xyz), vec3(_2549, _2550, _2551));
    float _4584 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _2564 = _2541 * _2541;
    float _2568 = ((_2559 * _2559) * (_2564 + (-1.0))) + 1.0;
    float _2577 = (exp2(log2(1.0 - (isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2578 = 1.0 - _2541;
    float _2588 = (0.5 / (((_2477 * ((_2555 * _2578) + _2541)) + 9.9999999392252902907785028219223e-09) + (((_2477 * _2578) + _2541) * _2555))) * _2555;
    float _4595 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2590 = (isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0))) * (_2564 / ((_2568 * _2568) * 3.141590118408203125));
    float _2600 = (((_2577 * cbLight._m0[_2529].x) * _2590) * _2223) + ((((cbLight._m0[_2448].x * _2189) * _2501) * _2515) * _2237);
    float _2601 = (((_2577 * cbLight._m0[_2529].y) * _2590) * _2223) + ((((cbLight._m0[_2448].y * _2191) * _2501) * _2515) * _2237);
    float _2602 = (((_2577 * cbLight._m0[_2529].z) * _2590) * _2223) + ((((cbLight._m0[_2448].z * _2193) * _2501) * _2515) * _2237);
    float _2658;
    float _2660;
    float _2662;
    if (_2277)
    {
        _2658 = _2600;
        _2660 = _2601;
        _2662 = _2602;
    }
    else
    {
        uint _2664 = _2200 + 2u;
        uint _2668 = _2200 + 10u;
        float _2682 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2664].w)) * _755) * 0.949999988079071044921875);
        float _2683 = _2682 * _2682;
        float _2684 = cbLight._m0[_2664].x + _832;
        float _2685 = cbLight._m0[_2664].y + _833;
        float _2686 = cbLight._m0[_2664].z + _834;
        float _2690 = inversesqrt(dot(vec3(_2684, _2685, _2686), vec3(_2684, _2685, _2686)));
        float _2691 = _2690 * _2684;
        float _2692 = _2690 * _2685;
        float _2693 = _2690 * _2686;
        float _2694 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2664].xyz));
        float _4606 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
        float _2697 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
        float _2698 = dot(vec3(_752, _753, _754), vec3(_2691, _2692, _2693));
        float _4617 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
        float _2701 = isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0));
        float _2702 = dot(vec3(cbLight._m0[_2664].xyz), vec3(_2691, _2692, _2693));
        float _4628 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
        float _2706 = _2683 * _2683;
        float _2710 = ((_2701 * _2701) * (_2706 + (-1.0))) + 1.0;
        float _2719 = (exp2(log2(1.0 - (isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2720 = 1.0 - _2683;
        float _2730 = (0.5 / (((_2477 * ((_2697 * _2720) + _2683)) + 9.9999999392252902907785028219223e-09) + (((_2477 * _2720) + _2683) * _2697))) * _2697;
        float _4639 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
        float _2732 = (isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0))) * (_2706 / ((_2710 * _2710) * 3.141590118408203125));
        float _2733 = isnan(1.0) ? _2215 : (isnan(_2215) ? 1.0 : min(_2215, 1.0));
        _2658 = (((_2719 * cbLight._m0[_2668].x) * _2732) * _2733) + _2600;
        _2660 = (((_2719 * cbLight._m0[_2668].y) * _2732) * _2733) + _2601;
        _2662 = (((_2719 * cbLight._m0[_2668].z) * _2732) * _2733) + _2602;
    }
    float _2764;
    float _2766;
    float _2768;
    if (_2386)
    {
        _2764 = _2658;
        _2766 = _2660;
        _2768 = _2662;
    }
    else
    {
        uint _2775 = _2200 + 3u;
        uint _2779 = _2200 + 11u;
        float _2793 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2775].w)) * _755) * 0.949999988079071044921875);
        float _2794 = _2793 * _2793;
        float _2795 = cbLight._m0[_2775].x + _832;
        float _2796 = cbLight._m0[_2775].y + _833;
        float _2797 = cbLight._m0[_2775].z + _834;
        float _2801 = inversesqrt(dot(vec3(_2795, _2796, _2797), vec3(_2795, _2796, _2797)));
        float _2802 = _2801 * _2795;
        float _2803 = _2801 * _2796;
        float _2804 = _2801 * _2797;
        float _2805 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2775].xyz));
        float _4655 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
        float _2808 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
        float _2809 = dot(vec3(_752, _753, _754), vec3(_2802, _2803, _2804));
        float _4666 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        float _2812 = isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0));
        float _2813 = dot(vec3(cbLight._m0[_2775].xyz), vec3(_2802, _2803, _2804));
        float _4677 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
        float _2817 = _2794 * _2794;
        float _2821 = ((_2812 * _2812) * (_2817 + (-1.0))) + 1.0;
        float _2830 = (exp2(log2(1.0 - (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2831 = 1.0 - _2794;
        float _2841 = (0.5 / (((_2477 * ((_2808 * _2831) + _2794)) + 9.9999999392252902907785028219223e-09) + (((_2477 * _2831) + _2794) * _2808))) * _2808;
        float _4688 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
        float _2843 = (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0))) * (_2817 / ((_2821 * _2821) * 3.141590118408203125));
        float _2844 = isnan(1.0) ? _2216 : (isnan(_2216) ? 1.0 : min(_2216, 1.0));
        _2764 = (((_2830 * cbLight._m0[_2779].x) * _2843) * _2844) + _2658;
        _2766 = (((_2830 * cbLight._m0[_2779].y) * _2843) * _2844) + _2660;
        _2768 = (((_2830 * cbLight._m0[_2779].z) * _2843) * _2844) + _2662;
    }
    float _2910;
    float _2912;
    float _2914;
    float _2916;
    float _2918;
    float _2920;
    if (_2198.y == 0u)
    {
        uvec4 _2865 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2866 = _2865.x;
        uint _2877 = uint((float(_2865.y) * floor(float(uint(cbSceneParam._m0[85u].y * _841) / _2866))) + floor(float(uint(cbSceneParam._m0[85u].x * _840) / _2866)));
        float _2887 = (log2(_1976 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2888 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
        uint _2891 = uint(isnan(14.0) ? _2888 : (isnan(_2888) ? 14.0 : min(_2888, 14.0)));
        uvec4 _2896 = texelFetch(g_lightClusterGridBuffer, int(((_2891 << 2u) + (_2877 << 6u)) >> 2u));
        uint _2897 = _2896.x;
        uint _2898 = _2865.z;
        float _3006;
        float _3008;
        float _3010;
        float _3012;
        float _3014;
        float _3016;
        if (((((1u << ((_2898 >> 4u) & 15u)) + 4294967295u) & _2897) == 0u) || ((_2898 & 240u) == 0u))
        {
            _3006 = 0.0;
            _3008 = 0.0;
            _3010 = 0.0;
            _3012 = 0.0;
            _3014 = 0.0;
            _3016 = 0.0;
        }
        else
        {
            float _3007;
            float _3009;
            float _3011;
            float _3013;
            float _3015;
            float _3017;
            float _3158 = 0.0;
            float _3159 = 0.0;
            float _3160 = 0.0;
            float _3161 = 0.0;
            float _3162 = 0.0;
            float _3163 = 0.0;
            uint _3164 = 0u;
            uint _3173;
            bool _3174;
            for (;;)
            {
                _3173 = texelFetch(g_lightClassification, int((((_2891 << 5u) + (_2877 << 9u)) + (_3164 << 2u)) >> 2u)).x;
                _3174 = _3173 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3174)
                {
                    frontier_phi_66_pred = _3163;
                    frontier_phi_66_pred_1 = _3162;
                    frontier_phi_66_pred_2 = _3161;
                    frontier_phi_66_pred_3 = _3160;
                    frontier_phi_66_pred_4 = _3159;
                    frontier_phi_66_pred_5 = _3158;
                }
                else
                {
                    float _3282;
                    float _3283;
                    float _3284;
                    float _3285;
                    float _3286;
                    float _3287;
                    uint _3288;
                    _3282 = _3158;
                    _3283 = _3159;
                    _3284 = _3160;
                    _3285 = _3161;
                    _3286 = _3162;
                    _3287 = _3163;
                    _3288 = _3173;
                    float _3214;
                    float _3215;
                    float _3216;
                    float _3217;
                    float _3218;
                    float _3219;
                    for (;;)
                    {
                        uint _3292 = uint(findLSB(_3288)) + (_3164 << 5u);
                        uint _3289 = (_3288 + 4294967295u) & _3288;
                        uint _3294 = _3292 * 48u;
                        vec4 _3308 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3294)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 3u)).x));
                        uint _3314 = (_3292 * 48u) + 4u;
                        vec4 _3327 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3314)).x, texelFetch(g_PointLightRenderingBuffer, int(_3314 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3314 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3314 + 3u)).x));
                        uint _3333 = (_3292 * 48u) + 8u;
                        vec3 _3344 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3333)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 2u)).x));
                        float _3348 = _3308.x - _1974;
                        float _3349 = _3308.y - _1975;
                        float _3350 = _3308.z - _1976;
                        float _3351 = dot(vec3(_3348, _3349, _3350), vec3(_3348, _3349, _3350));
                        float _3354 = inversesqrt(_3351);
                        float _3355 = _3354 * _3348;
                        float _3356 = _3354 * _3349;
                        float _3357 = _3354 * _3350;
                        float _3358 = dot(vec3(_861, _864, _867), vec3(_3355, _3356, _3357));
                        float _3363 = 1.0 - (_3351 * _3308.w);
                        float _4714 = isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : max(_3363, 0.0));
                        float _3364 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
                        float _3365 = sqrt(_3351) * _3327.w;
                        float _3368 = 1.39999997615814208984375 / (_3365 + 1.39999997615814208984375);
                        float _3369 = _3368 * _3368;
                        float _3372 = ((1.0 - _3369) * _3358) + _3369;
                        float _3375 = _3365 * _3365;
                        float _3379 = ((isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0))) * _3364) / ((_3375 * 0.699999988079071044921875) + 1.0);
                        float _3383 = (-0.0) - _1974;
                        float _3384 = (-0.0) - _1975;
                        float _3385 = (-0.0) - _1976;
                        float _3389 = inversesqrt(dot(vec3(_3383, _3384, _3385), vec3(_3383, _3384, _3385)));
                        float _3390 = _3389 * _3383;
                        float _3391 = _3389 * _3384;
                        float _3392 = _3389 * _3385;
                        float _3399 = exp2(log2(1.0 / ((_3375 * 3.5) + 5.0)) * 0.25);
                        float _3400 = 1.0 - _921;
                        float _3407 = sqrt(1.0 - ((1.0 - (_3400 * _3400)) * (1.0 - (_3399 * _3399))));
                        float _3408 = _3407 * _3407;
                        float _3409 = _3408 * _3408;
                        float _3410 = _3390 + _3355;
                        float _3411 = _3391 + _3356;
                        float _3412 = _3392 + _3357;
                        float _3416 = inversesqrt(dot(vec3(_3410, _3411, _3412), vec3(_3410, _3411, _3412)));
                        float _3420 = dot(vec3(_861, _864, _867), vec3(_3390, _3391, _3392));
                        float _4730 = isnan(0.0) ? _3420 : (isnan(_3420) ? 0.0 : max(_3420, 0.0));
                        float _3423 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                        float _3424 = dot(vec3(_861, _864, _867), vec3(_3416 * _3410, _3416 * _3411, _3416 * _3412));
                        float _4741 = isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : max(_3424, 0.0));
                        float _3427 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                        float _3431 = ((_3427 * _3427) * (_3409 + (-1.0))) + 1.0;
                        float _3432 = _3368 * _3408;
                        float _3433 = _3432 * _3432;
                        float _3436 = ((1.0 - _3433) * _3358) + _3433;
                        float _4752 = isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : max(_3436, 0.0));
                        float _3437 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
                        float _3438 = 1.0 - _3408;
                        float _3448 = (0.5 / (((_3437 * ((_3423 * _3438) + _3408)) + 9.9999999392252902907785028219223e-09) + (((_3437 * _3438) + _3408) * _3423))) * _3437;
                        float _4763 = isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : max(_3448, 0.0));
                        float _3459 = (((_3409 * 3.1415927410125732421875) * (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0)))) / ((_3431 * _3431) * ((_3375 * 2.1991131305694580078125) + 3.141590118408203125))) * _3364;
                        _3217 = (_3379 * _3327.x) + _3285;
                        _3218 = (_3379 * _3327.y) + _3286;
                        _3219 = (_3379 * _3327.z) + _3287;
                        _3214 = (_3459 * _3344.x) + _3282;
                        _3215 = (_3459 * _3344.y) + _3283;
                        _3216 = (_3459 * _3344.z) + _3284;
                        if (_3289 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3282 = _3214;
                            _3283 = _3215;
                            _3284 = _3216;
                            _3285 = _3217;
                            _3286 = _3218;
                            _3287 = _3219;
                            _3288 = _3289;
                        }
                    }
                    frontier_phi_66_pred = _3219;
                    frontier_phi_66_pred_1 = _3218;
                    frontier_phi_66_pred_2 = _3217;
                    frontier_phi_66_pred_3 = _3216;
                    frontier_phi_66_pred_4 = _3215;
                    frontier_phi_66_pred_5 = _3214;
                }
                _3017 = frontier_phi_66_pred;
                _3015 = frontier_phi_66_pred_1;
                _3013 = frontier_phi_66_pred_2;
                _3011 = frontier_phi_66_pred_3;
                _3009 = frontier_phi_66_pred_4;
                _3007 = frontier_phi_66_pred_5;
                uint _3165 = _3164 + 1u;
                if (_3165 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3158 = _3007;
                    _3159 = _3009;
                    _3160 = _3011;
                    _3161 = _3013;
                    _3162 = _3015;
                    _3163 = _3017;
                    _3164 = _3165;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3006 = _3007;
            _3008 = _3009;
            _3010 = _3011;
            _3012 = _3013;
            _3014 = _3015;
            _3016 = _3017;
        }
        uvec4 _3020 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3021 = _3020.z;
        uint _3023 = (_3021 >> 8u) & 15u;
        float _3126;
        float _3128;
        float _3130;
        float _3132;
        float _3134;
        float _3136;
        if (((4294967295u << _3023) & _2897) == 0u)
        {
            _3126 = _3006;
            _3128 = _3008;
            _3130 = _3010;
            _3132 = _3012;
            _3134 = _3014;
            _3136 = _3016;
        }
        else
        {
            float _3151 = inversesqrt(dot(vec3(_1974, _1975, _1976), vec3(_1974, _1975, _1976)));
            float _3152 = _3151 * _1974;
            float _3153 = _3151 * _1975;
            float _3154 = _3151 * _1976;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3023 < ((_3021 >> 12u) & 15u))
            {
                float _3127;
                float _3129;
                float _3131;
                float _3133;
                float _3135;
                float _3137;
                float _3265 = _3006;
                float _3266 = _3008;
                float _3267 = _3010;
                float _3268 = _3012;
                float _3269 = _3014;
                float _3270 = _3016;
                uint _3271 = _3023;
                uint _3280;
                bool _3281;
                for (;;)
                {
                    _3280 = texelFetch(g_lightClassification, int((((_2891 << 5u) + (_2877 << 9u)) + (_3271 << 2u)) >> 2u)).x;
                    _3281 = _3280 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3281)
                    {
                        frontier_phi_72_pred = _3270;
                        frontier_phi_72_pred_1 = _3269;
                        frontier_phi_72_pred_2 = _3268;
                        frontier_phi_72_pred_3 = _3267;
                        frontier_phi_72_pred_4 = _3266;
                        frontier_phi_72_pred_5 = _3265;
                    }
                    else
                    {
                        float _3464;
                        float _3465;
                        float _3466;
                        float _3467;
                        float _3468;
                        float _3469;
                        float _3757;
                        float _3758;
                        float _3759;
                        float _3760;
                        float _3761;
                        float _3762;
                        float _3477 = _3265;
                        float _3478 = _3266;
                        float _3479 = _3267;
                        float _3480 = _3268;
                        float _3481 = _3269;
                        float _3482 = _3270;
                        uint _3483 = _3280;
                        uint _3484;
                        vec4 _3509;
                        float _3510;
                        vec4 _3525;
                        vec3 _3537;
                        vec4 _3552;
                        vec4 _3567;
                        float _3613;
                        bool _3614;
                        for (;;)
                        {
                            uint _3494 = ((_3271 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3483));
                            _3484 = (_3483 + 4294967295u) & _3483;
                            uint _3496 = _3494 * 40u;
                            _3509 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3496)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 3u)).x));
                            _3510 = _3509.w;
                            uint _3512 = (_3494 * 40u) + 4u;
                            _3525 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 3u)).x));
                            uint _3527 = (_3494 * 40u) + 8u;
                            _3537 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3527)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 2u)).x));
                            uint _3539 = (_3494 * 40u) + 16u;
                            _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            uint _3554 = (_3494 * 40u) + 20u;
                            _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3569 = (_3494 * 40u) + 24u;
                            vec4 _3582 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 3u)).x));
                            uint _3588 = (_3494 * 40u) + 28u;
                            vec4 _3601 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3588)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 3u)).x));
                            _3613 = fma(_1976, _3601.z, fma(_1975, _3601.y, _3601.x * _1974)) + _3601.w;
                            _3614 = !((fma(_1976, _3582.z, fma(_1975, _3582.y, _3582.x * _1974)) + _3582.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3614)
                            {
                                float _3641 = _3509.x - _1974;
                                float _3642 = _3509.y - _1975;
                                float _3643 = _3509.z - _1976;
                                float _3644 = dot(vec3(_3641, _3642, _3643), vec3(_3641, _3642, _3643));
                                float _3647 = inversesqrt(_3644);
                                float _3648 = _3647 * _3641;
                                float _3649 = _3647 * _3642;
                                float _3650 = _3647 * _3643;
                                float _3654 = 1.0 - (_3644 / (_3510 * _3510));
                                float _4774 = isnan(0.0) ? _3654 : (isnan(_3654) ? 0.0 : max(_3654, 0.0));
                                float _3655 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
                                float _3659 = sqrt(_3644) * _3525.w;
                                float _3661 = 1.39999997615814208984375 / (_3659 + 1.39999997615814208984375);
                                float _3662 = _3661 * _3661;
                                float _3665 = ((1.0 - _3662) * dot(vec3(_3648, _3649, _3650), vec3(_861, _864, _867))) + _3662;
                                float _3668 = _3659 * _3659;
                                float _3672 = (fma(_1976, _3552.z, fma(_1975, _3552.y, _3552.x * _1974)) + _3552.w) / _3613;
                                float _3673 = (fma(_1976, _3567.z, fma(_1975, _3567.y, _3567.x * _1974)) + _3567.w) / _3613;
                                float _3677 = 1.0 - dot(vec2(_3672, _3673), vec2(_3672, _3673));
                                float _4790 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3678 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
                                float _3679 = _3678 * (((isnan(0.0) ? _3665 : (isnan(_3665) ? 0.0 : max(_3665, 0.0))) * _3655) / ((_3668 * 0.699999988079071044921875) + 1.0));
                                float _3691 = exp2(log2(1.0 / ((_3668 * 3.5) + 5.0)) * 0.25);
                                float _3692 = 1.0 - _921;
                                float _3699 = sqrt(1.0 - ((1.0 - (_3692 * _3692)) * (1.0 - (_3691 * _3691))));
                                float _3700 = _3699 * _3699;
                                float _3701 = _3700 * _3700;
                                float _3702 = _3648 - _3152;
                                float _3703 = _3649 - _3153;
                                float _3704 = _3650 - _3154;
                                float _3708 = inversesqrt(dot(vec3(_3702, _3703, _3704), vec3(_3702, _3703, _3704)));
                                float _3712 = dot(vec3(_861, _864, _867), vec3((-0.0) - _3152, (-0.0) - _3153, (-0.0) - _3154));
                                float _4801 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                                float _3715 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
                                float _3716 = dot(vec3(_861, _864, _867), vec3(_3708 * _3702, _3708 * _3703, _3708 * _3704));
                                float _4812 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3719 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
                                float _3723 = ((_3719 * _3719) * (_3701 + (-1.0))) + 1.0;
                                float _3724 = _3661 * _3700;
                                float _3725 = _3724 * _3724;
                                float _3731 = ((1.0 - _3725) * dot(vec3(_861, _864, _867), vec3(_3648, _3649, _3650))) + _3725;
                                float _4823 = isnan(0.0) ? _3731 : (isnan(_3731) ? 0.0 : max(_3731, 0.0));
                                float _3732 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
                                float _3733 = 1.0 - _3700;
                                float _3743 = (0.5 / (((_3732 * ((_3715 * _3733) + _3700)) + 9.9999999392252902907785028219223e-09) + (((_3732 * _3733) + _3700) * _3715))) * _3732;
                                float _4834 = isnan(0.0) ? _3743 : (isnan(_3743) ? 0.0 : max(_3743, 0.0));
                                float _3753 = (_3678 * _3655) * (((_3701 * 3.1415927410125732421875) * (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0)))) / ((_3723 * _3723) * ((_3668 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3679 * _3525.y;
                                frontier_phi_78_pred_1 = _3679 * _3525.x;
                                frontier_phi_78_pred_2 = _3753 * _3537.z;
                                frontier_phi_78_pred_3 = _3753 * _3537.y;
                                frontier_phi_78_pred_4 = _3753 * _3537.x;
                                frontier_phi_78_pred_5 = _3679 * _3525.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3761 = frontier_phi_78_pred;
                            _3760 = frontier_phi_78_pred_1;
                            _3759 = frontier_phi_78_pred_2;
                            _3758 = frontier_phi_78_pred_3;
                            _3757 = frontier_phi_78_pred_4;
                            _3762 = frontier_phi_78_pred_5;
                            _3467 = _3760 + _3480;
                            _3468 = _3761 + _3481;
                            _3469 = _3762 + _3482;
                            _3464 = _3757 + _3477;
                            _3465 = _3758 + _3478;
                            _3466 = _3759 + _3479;
                            if (_3484 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3477 = _3464;
                                _3478 = _3465;
                                _3479 = _3466;
                                _3480 = _3467;
                                _3481 = _3468;
                                _3482 = _3469;
                                _3483 = _3484;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3469;
                        frontier_phi_72_pred_1 = _3468;
                        frontier_phi_72_pred_2 = _3467;
                        frontier_phi_72_pred_3 = _3466;
                        frontier_phi_72_pred_4 = _3465;
                        frontier_phi_72_pred_5 = _3464;
                    }
                    _3137 = frontier_phi_72_pred;
                    _3135 = frontier_phi_72_pred_1;
                    _3133 = frontier_phi_72_pred_2;
                    _3131 = frontier_phi_72_pred_3;
                    _3129 = frontier_phi_72_pred_4;
                    _3127 = frontier_phi_72_pred_5;
                    uint _3272 = _3271 + 1u;
                    if (_3272 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3265 = _3127;
                        _3266 = _3129;
                        _3267 = _3131;
                        _3268 = _3133;
                        _3269 = _3135;
                        _3270 = _3137;
                        _3271 = _3272;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3137;
                frontier_phi_60_61_ladder_1 = _3135;
                frontier_phi_60_61_ladder_2 = _3131;
                frontier_phi_60_61_ladder_3 = _3129;
                frontier_phi_60_61_ladder_4 = _3127;
                frontier_phi_60_61_ladder_5 = _3133;
            }
            else
            {
                frontier_phi_60_61_ladder = _3016;
                frontier_phi_60_61_ladder_1 = _3014;
                frontier_phi_60_61_ladder_2 = _3010;
                frontier_phi_60_61_ladder_3 = _3008;
                frontier_phi_60_61_ladder_4 = _3006;
                frontier_phi_60_61_ladder_5 = _3012;
            }
            _3126 = frontier_phi_60_61_ladder_4;
            _3128 = frontier_phi_60_61_ladder_3;
            _3130 = frontier_phi_60_61_ladder_2;
            _3132 = frontier_phi_60_61_ladder_5;
            _3134 = frontier_phi_60_61_ladder_1;
            _3136 = frontier_phi_60_61_ladder;
        }
        float _3141 = isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0));
        _2910 = (_3141 * _3132) + _2441;
        _2912 = (_3141 * _3134) + _2443;
        _2914 = (_3141 * _3136) + _2445;
        _2916 = ((_3126 * 0.039999999105930328369140625) * _3141) + _2764;
        _2918 = ((_3128 * 0.039999999105930328369140625) * _3141) + _2766;
        _2920 = ((_3130 * 0.039999999105930328369140625) * _3141) + _2768;
    }
    else
    {
        _2910 = _2441;
        _2912 = _2443;
        _2914 = _2445;
        _2916 = _2764;
        _2918 = _2766;
        _2920 = _2768;
    }
    uint _2926 = _881 + uint(cbMatDynParam._m0[0u].w);
    float _2932 = cbInstanceData._m0[_2926].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_477.x - _474) * _455) + _474)) - _714) * _724) + _714);
    float _2933 = cbInstanceData._m0[_2926].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_477.y - _475) * _455) + _475)) - _715) * _724) + _715);
    float _2934 = cbInstanceData._m0[_2926].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_477.z - _476) * _455) + _476)) - _716) * _724) + _716);
    float _4850 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _4861 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _4872 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _2951 = (((isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0))) * (_2910 + ((isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0))) * _905))) + ((_2916 + ((isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0))) * _1710)) * cbPerFrame._m0[3u].x)) + _2932;
    float _2953 = (_2933 + ((_2918 + ((isnan(0.0) ? _1924 : (isnan(_1924) ? 0.0 : max(_1924, 0.0))) * _1710)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (_2912 + ((isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0))) * _905)));
    float _2955 = (_2934 + ((_2920 + ((isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0))) * _1710)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0))) * (_2914 + ((isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0))) * _905)));
    float _4898 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2968 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
    uint _2969 = _880 + 6u;
    float _2977 = _840 / cbSceneParam._m0[86u].x;
    float _2978 = _841 / cbSceneParam._m0[86u].y;
    vec4 _2992 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2977, _2978, (log2((isnan(cbSceneParam._m0[77u].w) ? _774 : (isnan(_774) ? cbSceneParam._m0[77u].w : min(_774, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2994 = _2992.x;
    float _2995 = _2992.y;
    float _2996 = _2992.z;
    float _2997 = _2992.w;
    float _3068;
    float _3070;
    float _3072;
    float _3074;
    if (_774 > cbSceneParam._m0[78u].w)
    {
        float _3031 = isnan(_774) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _774 : min(cbSceneParam._m0[80u].w, _774));
        float _3032 = _3031 / _774;
        float _3043 = _3032 * _825;
        float _3044 = _826 * _3032;
        float _3045 = (-0.0) - _3044;
        float _3046 = _3032 * _827;
        float _3048 = (cbSceneParam._m0[77u].w * _3045) / _3031;
        float _3049 = _3048 + cbSceneParam._m0[79u].w;
        float _3050 = cbSceneParam._m0[79u].w - _3044;
        float _3056 = sqrt(((_3043 * _3043) + (_3044 * _3044)) + (_3046 * _3046));
        float _3059 = (1.0 - (cbSceneParam._m0[77u].w / _3031)) * _3056;
        float _3064 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3066 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3227;
        if (abs((_3045 - _3048) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3227 = ((((_3049 > 0.0) ? exp2(_3064 * _3049) : (2.0 - exp2(_3066 * _3049))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3059;
        }
        else
        {
            float _3187 = 1.0 / cbSceneParam._m0[80u].x;
            float _3188 = isnan(_3050) ? _3049 : (isnan(_3049) ? _3050 : max(_3049, _3050));
            float _3189 = isnan(_3050) ? _3049 : (isnan(_3049) ? _3050 : min(_3049, _3050));
            float _3198 = isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : min(_3188, 0.0));
            float _3199 = isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : min(_3189, 0.0));
            _3227 = ((abs(_3056 / _3045) * cbSceneParam._m0[80u].y) * ((((_3198 - _3199) * 2.0) - ((exp2(_3064 * (isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : max(_3188, 0.0)))) - exp2(_3064 * (isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : max(_3189, 0.0))))) * _3187)) - ((exp2(_3066 * _3198) - exp2(_3066 * _3199)) * _3187))) + (_3059 * cbSceneParam._m0[80u].z);
        }
        vec4 _3229 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2977, _2978, 1.0), 0.0);
        float _3238 = exp2((_3227 * (-1.44269502162933349609375)) * (1.0 - _3229.w));
        float _3239 = log2(_3238);
        float _3255 = log2(_2997);
        _3068 = (exp2(_3255 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3239 * cbSceneParam._m0[78u].x)) * _3229.x) / cbSceneParam._m0[78u].x)) + _2994;
        _3070 = (exp2(_3255 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3239 * cbSceneParam._m0[78u].y)) * _3229.y) / cbSceneParam._m0[78u].y)) + _2995;
        _3072 = (exp2(_3255 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3239 * cbSceneParam._m0[78u].z)) * _3229.z) / cbSceneParam._m0[78u].z)) + _2996;
        _3074 = _3238 * _2997;
    }
    else
    {
        _3068 = _2994;
        _3070 = _2995;
        _3072 = _2996;
        _3074 = _2997;
    }
    float _3085 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3086 = _3085 == 3.0;
    float _3087 = log2(_3074);
    float _3091 = exp2(_3087 * cbSceneParam._m0[78u].x);
    float _3092 = exp2(_3087 * cbSceneParam._m0[78u].y);
    float _3093 = exp2(_3087 * cbSceneParam._m0[78u].z);
    float _3094 = _3091 * (isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0)));
    float _3095 = _3092 * (isnan(0.0) ? _2953 : (isnan(_2953) ? 0.0 : max(_2953, 0.0)));
    float _3096 = _3093 * (isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0)));
    float _3105 = (_3085 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3105 * (_3086 ? _3094 : (_3094 + (cbSceneParam._m0[72u].w * _3068)));
    SV_Target.y = _3105 * (_3086 ? _3095 : (_3095 + (cbSceneParam._m0[72u].w * _3070)));
    SV_Target.z = _3105 * (_3086 ? _3096 : (_3096 + (cbSceneParam._m0[72u].w * _3072)));
    SV_Target.w = cbInstanceData._m0[_2969].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2932) * _2968) * _3091) * _3105;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2933) * _2968) * _3092) * _3105;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2934) * _2968) * _3093) * _3105;
    SV_Target_1.w = cbInstanceData._m0[_2969].w;
}


