#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1470;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _278 = _272.x * cbMtdParam._m0[9u].x;
    float _279 = _272.y * cbMtdParam._m0[9u].y;
    float _280 = _272.z * cbMtdParam._m0[9u].z;
    vec4 _307 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _335 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _364 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _387 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _395 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _387)) * (cbMtdParam._m0[17u].w + 1.0);
    float _4095 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _403 = (_396 * ((_364.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _404 = (_396 * ((_364.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _405 = (_396 * ((_364.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    float _411 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _387)) * (cbMtdParam._m0[19u].x + 1.0);
    float _4106 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _412 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
    float _419 = (((_335.x * cbMtdParam._m0[14u].x) - _403) * _412) + _403;
    float _420 = (((_335.y * cbMtdParam._m0[14u].y) - _404) * _412) + _404;
    float _421 = (((_335.z * cbMtdParam._m0[14u].z) - _405) * _412) + _405;
    float _437 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _446 = (_437 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _437))) * (cbMtdParam._m0[20u].x + 1.0);
    float _4117 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _454 = (_447 * ((_307.x * cbMtdParam._m0[15u].x) - _419)) + _419;
    float _455 = (_447 * ((_307.y * cbMtdParam._m0[15u].y) - _420)) + _420;
    float _456 = (_447 * ((_307.z * cbMtdParam._m0[15u].z) - _421)) + _421;
    vec4 _472 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _494 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _510 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _512 = _510.x;
    float _513 = _510.y;
    float _514 = _510.z;
    float _523 = ((_494.z - _514) * _396) + _514;
    float _526 = ((((_494.x - _512) * _396) + _512) * 2.0) + (-1.0);
    float _527 = ((((_494.y - _513) * _396) + _513) * 2.0) + (-1.0);
    float _528 = dot(vec2(_526, _527), vec2(_526, _527));
    float _4128 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _533 = sqrt(1.0 - (isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))));
    float _538 = (((_472.z - _523) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _523;
    vec4 _551 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _568 = (((((((_551.z - _538) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _538) * cbMtdParam._m0[21u].z) - _538) * _447) + _538;
    float _584 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _587 = (_584 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _588 = (_584 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _613 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _617 = cbPerFrame._m0[22u].x * 2.0;
    float _618 = _617 * cbMtdParam._m0[22u].y;
    float _625 = ((_613.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _627 = (-0.0) - (cbMtdParam._m0[22u].x * ((_613.x * 0.5) + (-0.25)));
    float _629 = fract(_618);
    float _631 = fract(_618 + 0.5);
    float _642 = abs((_629 * 2.0) + (-1.0));
    vec4 _659 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_629 * _627) + _587) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_625 * _629) + _588) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _661 = _659.x;
    float _662 = _659.y;
    float _663 = _659.z;
    vec4 _664 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_631 * _627) + _587) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_625 * _631) + _588) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _706 = (cbMtdParam._m0[23u].y * _584) + TEXCOORD_6.w;
    float _707 = (cbMtdParam._m0[23u].z * _584) + TEXCOORD_9.w;
    vec4 _720 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _724 = _617 * cbMtdParam._m0[18u].x;
    float _729 = ((_720.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _731 = (-0.0) - (cbMtdParam._m0[20u].z * ((_720.x * 0.5) + (-0.25)));
    float _732 = fract(_724);
    float _734 = fract(_724 + 0.5);
    float _735 = _732 * _731;
    float _736 = _729 * _732;
    float _739 = _734 * _731;
    float _740 = _729 * _734;
    float _745 = abs((_732 * 2.0) + (-1.0));
    vec4 _761 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_735 + _706) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_736 + _707) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _763 = _761.x;
    float _764 = _761.y;
    float _765 = _761.z;
    vec4 _766 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_739 + _706) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_740 + _707) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _796 = (cbMtdParam._m0[22u].w * _584) + TEXCOORD_6.w;
    float _797 = (cbMtdParam._m0[23u].x * _584) + TEXCOORD_9.w;
    vec4 _817 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_735 + _796) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_736 + _797) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _819 = _817.x;
    float _820 = _817.y;
    float _821 = _817.z;
    vec4 _822 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_739 + _796) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_740 + _797) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _842 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4139 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _843 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
    float _851 = (((_843 * _843) * (3.0 - (_843 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _884 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _796) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _797) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _4150 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _885 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    float _889 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_822.x - _819) * _745) + _819)) * _851) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_766.x - _763) * _745) + _763)))) * _885;
    float _893 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_822.y - _820) * _745) + _820)) * _851) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_766.y - _764) * _745) + _764)))) * _885;
    float _897 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_822.z - _821) * _745) + _821)) * _851) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_766.z - _765) * _745) + _765)))) * _885;
    float _901 = _889 - (_889 * _437);
    float _902 = _893 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _893);
    float _903 = _897 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _897);
    float _932 = ((((((_472.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _526) + (cbMtdParam._m0[20u].y * _526)) + (((((_551.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _447);
    float _935 = ((((((_472.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _527) + (cbMtdParam._m0[20u].y * _527)) + (((((_551.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _447);
    float _938 = fma(_533, _243 * NORMAL.x, fma(_935, _250 * TANGENT.x, (_236 * _228) * _932));
    float _941 = fma(_533, _243 * NORMAL.y, fma(_935, _250 * TANGENT.y, (_236 * _229) * _932));
    float _944 = fma(_533, _243 * NORMAL.z, fma(_935, _250 * TANGENT.z, (_236 * _230) * _932));
    float _948 = inversesqrt(dot(vec3(_938, _941, _944), vec3(_938, _941, _944)));
    float _949 = _948 * _938;
    float _950 = _948 * _941;
    float _951 = _948 * _944;
    float _4161 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _952 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _4183 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _4194 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _971 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1011 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1021 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1011);
    float _1022 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1011);
    float _1023 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1011);
    float _1027 = inversesqrt(dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023)));
    float _1028 = _1021 * _1027;
    float _1029 = _1022 * _1027;
    float _1030 = _1023 * _1027;
    float _1036 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1037 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1056 = fma(_951, cbSceneParam._m0[5u].z, fma(_950, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _949));
    float _1059 = fma(_951, cbSceneParam._m0[6u].z, fma(_950, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _949));
    float _1062 = fma(_951, cbSceneParam._m0[7u].z, fma(_950, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _949));
    uint _1075 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1076 = _1075 + 9u;
    uint _1077 = _1076 + uint(cbMatDynParam._m0[0u].w);
    float _1083 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0)))) * cbInstanceData._m0[_1077].x;
    float _1084 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_1077].y;
    float _1085 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)))) * cbInstanceData._m0[_1077].z;
    float _4205 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1086 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
    float _4216 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1087 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
    float _4227 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1088 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
    vec4 _1097 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1036, cbSceneParam._m0[86u].y * _1037));
    float _1100 = _1097.x * TEXCOORD_3.w;
    float _1101 = dot(vec3(_949, _950, _951), vec3(_1028, _1029, _1030));
    float _1104 = _1101 * 2.0;
    float _1108 = (_1104 * _949) - _1028;
    float _1109 = (_1104 * _950) - _1029;
    float _1110 = (_1104 * _951) - _1030;
    float _1114 = abs(dot(vec3(_1028, _1029, _1030), vec3(_949, _950, _951)));
    float _4238 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1116 = sqrt(_952);
    float _1128 = exp2((_1116 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1116 * 3.0));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1164 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1168 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1469;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1195 = fma(_1168, cbModelParam._m0[26u].z, fma(_1164, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1160));
        float _1199 = fma(_1168, cbModelParam._m0[27u].z, fma(_1164, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1160));
        float _1203 = fma(_1168, cbModelParam._m0[28u].z, fma(_1164, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1160));
        float _1227 = _1160 + _949;
        float _1228 = _1164 + _950;
        float _1229 = _1168 + _951;
        float _1239 = fma(_1229, cbModelParam._m0[26u].z, fma(_1228, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1227)) - _1195;
        float _1240 = fma(_1229, cbModelParam._m0[27u].z, fma(_1228, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1227)) - _1199;
        float _1241 = fma(_1229, cbModelParam._m0[28u].z, fma(_1228, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1227)) - _1203;
        float _1245 = inversesqrt(dot(vec3(_1239, _1240, _1241), vec3(_1239, _1240, _1241)));
        float _1258 = ((_1245 * _1239) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1195 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1259 = ((_1245 * _1240) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1199 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1260 = ((_1245 * _1241) / cbModelParam._m0[34u].z) + ((((((_1203 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1263 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1258, _1259, _1260), 0.0);
        vec4 _1270 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1258, _1259, _1260), 0.0);
        vec4 _1277 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1258, _1259, _1260), 0.0);
        vec4 _1284 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1258, _1259, _1260), 0.0);
        float _1297 = exp2((_1263.w + (-0.5)) * 20.0) * 2.0;
        float _1298 = _1297 * (_1263.x + (-0.5));
        float _1299 = _1297 * (_1263.y + (-0.5));
        float _1300 = _1297 * (_1263.z + (-0.5));
        float _1307 = exp2((_1270.w + (-0.5)) * 20.0) * 2.0;
        float _1308 = _1307 * (_1270.x + (-0.5));
        float _1309 = _1307 * (_1270.y + (-0.5));
        float _1310 = _1307 * (_1270.z + (-0.5));
        float _1317 = exp2((_1277.w + (-0.5)) * 20.0) * 2.0;
        float _1318 = _1317 * (_1277.x + (-0.5));
        float _1319 = _1317 * (_1277.y + (-0.5));
        float _1320 = _1317 * (_1277.z + (-0.5));
        float _1327 = exp2((_1284.w + (-0.5)) * 20.0) * 2.0;
        float _1328 = _1327 * (_1284.x + (-0.5));
        float _1329 = _1327 * (_1284.y + (-0.5));
        float _1330 = _1327 * (_1284.z + (-0.5));
        float _1331 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1332 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1333 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1334 = _1298 * 0.5;
        float _1335 = _1308 * 0.5;
        float _1336 = _1318 * 0.5;
        float _1337 = dot(vec3(_1334, _1335, _1336), vec3(_1334, _1335, _1336));
        float _1342 = (_1337 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1337);
        float _1351 = (dot(vec3(_949, _950, _951), vec3(_1342 * _1334, _1342 * _1335, _1342 * _1336)) + 1.0) * 0.5;
        float _4264 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1361 = sqrt(((_1335 * _1335) + (_1334 * _1334)) + (_1336 * _1336)) / (_1331 + 9.9999997473787516355514526367188e-06);
        float _4275 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
        float _1362 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1363 = _1362 * 2.0;
        float _1367 = (1.0 - _1362) / (_1362 + 1.0);
        float _4286 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1368 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1377 = ((((1.0 - _1368) * (_1363 + 2.0)) * exp2(log2(isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_1363 + 1.0))) + _1368) * _1331;
        float _1378 = _1299 * 0.5;
        float _1379 = _1309 * 0.5;
        float _1380 = _1319 * 0.5;
        float _1381 = dot(vec3(_1378, _1379, _1380), vec3(_1378, _1379, _1380));
        float _1386 = (_1381 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1381);
        float _1394 = (dot(vec3(_949, _950, _951), vec3(_1386 * _1378, _1386 * _1379, _1386 * _1380)) + 1.0) * 0.5;
        float _4297 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1403 = sqrt(((_1379 * _1379) + (_1378 * _1378)) + (_1380 * _1380)) / (_1332 + 9.9999997473787516355514526367188e-06);
        float _4308 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1404 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1405 = _1404 * 2.0;
        float _1409 = (1.0 - _1404) / (_1404 + 1.0);
        float _4319 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1410 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1419 = ((((1.0 - _1410) * (_1405 + 2.0)) * exp2(log2(isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0))) * (_1405 + 1.0))) + _1410) * _1332;
        float _1420 = _1300 * 0.5;
        float _1421 = _1310 * 0.5;
        float _1422 = _1320 * 0.5;
        float _1423 = dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422));
        float _1428 = (_1423 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1423);
        float _1436 = (dot(vec3(_949, _950, _951), vec3(_1428 * _1420, _1428 * _1421, _1428 * _1422)) + 1.0) * 0.5;
        float _4330 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1445 = sqrt(((_1421 * _1421) + (_1420 * _1420)) + (_1422 * _1422)) / (_1333 + 9.9999997473787516355514526367188e-06);
        float _4341 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _4352 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0))) * (_1447 + 1.0))) + _1452) * _1333;
        _1469 = _1300;
        _1471 = _1299;
        _1472 = _1298;
        _1473 = _1310;
        _1474 = _1309;
        _1475 = _1308;
        _1476 = _1320;
        _1477 = _1319;
        _1478 = _1318;
        _1479 = _1333;
        _1480 = _1332;
        _1481 = _1331;
        _1482 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0)));
        _1483 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0)));
        _1484 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
    }
    else
    {
        _1469 = _1470;
        _1471 = _1470;
        _1472 = _1470;
        _1473 = _1470;
        _1474 = _1470;
        _1475 = _1470;
        _1476 = _1470;
        _1477 = _1470;
        _1478 = _1470;
        _1479 = _1470;
        _1480 = _1470;
        _1481 = _1470;
        _1482 = 0.0;
        _1483 = 0.0;
        _1484 = 0.0;
    }
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1510 = fma(_1168, cbModelParam._m0[30u].z, fma(_1164, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1160));
        float _1514 = fma(_1168, cbModelParam._m0[31u].z, fma(_1164, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1160));
        float _1518 = fma(_1168, cbModelParam._m0[32u].z, fma(_1164, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1160));
        float _1541 = _1160 + _949;
        float _1542 = _1164 + _950;
        float _1543 = _1168 + _951;
        float _1553 = fma(_1543, cbModelParam._m0[30u].z, fma(_1542, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1541)) - _1510;
        float _1554 = fma(_1543, cbModelParam._m0[31u].z, fma(_1542, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1541)) - _1514;
        float _1555 = fma(_1543, cbModelParam._m0[32u].z, fma(_1542, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1541)) - _1518;
        float _1559 = inversesqrt(dot(vec3(_1553, _1554, _1555), vec3(_1553, _1554, _1555)));
        float _1572 = ((_1559 * _1553) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1510 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1573 = ((_1559 * _1554) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1514 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1574 = ((_1559 * _1555) / cbModelParam._m0[35u].z) + ((((((_1518 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1576 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1583 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1590 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1597 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        float _1609 = exp2((_1576.w + (-0.5)) * 20.0) * 2.0;
        float _1610 = _1609 * (_1576.x + (-0.5));
        float _1611 = _1609 * (_1576.y + (-0.5));
        float _1612 = _1609 * (_1576.z + (-0.5));
        float _1619 = exp2((_1583.w + (-0.5)) * 20.0) * 2.0;
        float _1620 = _1619 * (_1583.x + (-0.5));
        float _1621 = _1619 * (_1583.y + (-0.5));
        float _1622 = _1619 * (_1583.z + (-0.5));
        float _1629 = exp2((_1590.w + (-0.5)) * 20.0) * 2.0;
        float _1630 = _1629 * (_1590.x + (-0.5));
        float _1631 = _1629 * (_1590.y + (-0.5));
        float _1632 = _1629 * (_1590.z + (-0.5));
        float _1639 = exp2((_1597.w + (-0.5)) * 20.0) * 2.0;
        float _1640 = _1639 * (_1597.x + (-0.5));
        float _1641 = _1639 * (_1597.y + (-0.5));
        float _1642 = _1639 * (_1597.z + (-0.5));
        float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1645 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1646 = _1610 * 0.5;
        float _1647 = _1620 * 0.5;
        float _1648 = _1630 * 0.5;
        float _1649 = dot(vec3(_1646, _1647, _1648), vec3(_1646, _1647, _1648));
        float _1654 = (_1649 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1649);
        float _1662 = (dot(vec3(_949, _950, _951), vec3(_1654 * _1646, _1654 * _1647, _1654 * _1648)) + 1.0) * 0.5;
        float _4393 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1671 = sqrt(((_1647 * _1647) + (_1646 * _1646)) + (_1648 * _1648)) / (_1643 + 9.9999997473787516355514526367188e-06);
        float _4404 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1672 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1673 = _1672 * 2.0;
        float _1677 = (1.0 - _1672) / (_1672 + 1.0);
        float _4415 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1687 = ((((1.0 - _1678) * (_1673 + 2.0)) * exp2(log2(isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_1673 + 1.0))) + _1678) * _1643;
        float _1688 = _1611 * 0.5;
        float _1689 = _1621 * 0.5;
        float _1690 = _1631 * 0.5;
        float _1691 = dot(vec3(_1688, _1689, _1690), vec3(_1688, _1689, _1690));
        float _1696 = (_1691 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1691);
        float _1704 = (dot(vec3(_949, _950, _951), vec3(_1696 * _1688, _1696 * _1689, _1696 * _1690)) + 1.0) * 0.5;
        float _4426 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1713 = sqrt(((_1689 * _1689) + (_1688 * _1688)) + (_1690 * _1690)) / (_1644 + 9.9999997473787516355514526367188e-06);
        float _4437 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1714 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1715 = _1714 * 2.0;
        float _1719 = (1.0 - _1714) / (_1714 + 1.0);
        float _4448 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1720 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1729 = ((((1.0 - _1720) * (_1715 + 2.0)) * exp2(log2(isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_1715 + 1.0))) + _1720) * _1644;
        float _1730 = _1612 * 0.5;
        float _1731 = _1622 * 0.5;
        float _1732 = _1632 * 0.5;
        float _1733 = dot(vec3(_1730, _1731, _1732), vec3(_1730, _1731, _1732));
        float _1738 = (_1733 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1733);
        float _1746 = (dot(vec3(_949, _950, _951), vec3(_1738 * _1730, _1738 * _1731, _1738 * _1732)) + 1.0) * 0.5;
        float _4459 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1755 = sqrt(((_1731 * _1731) + (_1730 * _1730)) + (_1732 * _1732)) / (_1645 + 9.9999997473787516355514526367188e-06);
        float _4470 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
        float _1756 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1757 = _1756 * 2.0;
        float _1761 = (1.0 - _1756) / (_1756 + 1.0);
        float _4481 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
        float _1762 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1771 = ((((1.0 - _1762) * (_1757 + 2.0)) * exp2(log2(isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * (_1757 + 1.0))) + _1762) * _1645;
        _1779 = _1612;
        _1780 = _1611;
        _1781 = _1610;
        _1782 = _1622;
        _1783 = _1621;
        _1784 = _1620;
        _1785 = _1632;
        _1786 = _1631;
        _1787 = _1630;
        _1788 = _1645;
        _1789 = _1644;
        _1790 = _1643;
        _1791 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)));
        _1792 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0)));
        _1793 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)));
    }
    else
    {
        _1779 = _1470;
        _1780 = _1470;
        _1781 = _1470;
        _1782 = _1470;
        _1783 = _1470;
        _1784 = _1470;
        _1785 = _1470;
        _1786 = _1470;
        _1787 = _1470;
        _1788 = _1470;
        _1789 = _1470;
        _1790 = _1470;
        _1791 = 0.0;
        _1792 = 0.0;
        _1793 = 0.0;
    }
    float _1803 = (cbModelParam._m0[1u].x * (_1791 - _1482)) + _1482;
    float _1804 = (cbModelParam._m0[1u].x * (_1792 - _1483)) + _1483;
    float _1805 = (cbModelParam._m0[1u].x * (_1793 - _1484)) + _1484;
    float _1826 = fma(_1805, cbSceneParam._m0[89u].z, fma(_1804, cbSceneParam._m0[89u].y, _1803 * cbSceneParam._m0[89u].x));
    float _1829 = fma(_1805, cbSceneParam._m0[90u].z, fma(_1804, cbSceneParam._m0[90u].y, _1803 * cbSceneParam._m0[90u].x));
    float _1832 = fma(_1805, cbSceneParam._m0[91u].z, fma(_1804, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1803));
    float _1847 = _1108 * 0.5;
    float _1848 = _1109 * 0.5;
    float _1849 = _1110 * 0.5;
    float _1850 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1781, _1784, _1787, _1790));
    float _1853 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1780, _1783, _1786, _1789));
    float _1856 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1779, _1782, _1785, _1788));
    float _1890;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1863 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1469, _1473, _1476, _1479));
        float _1867 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1471, _1474, _1477, _1480));
        float _1871 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1472, _1475, _1478, _1481));
        float _1878 = dot(vec4(cbModelParam._m0[39u]), vec4(_1847, _1848, _1849, 1.0));
        _1890 = dot(vec3(isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0)), isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1878) ? 0.0 : (isnan(0.0) ? _1878 : max(0.0, _1878))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1890 = 1.0;
    }
    float _1901;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1892 = dot(vec4(cbModelParam._m0[40u]), vec4(_1847, _1848, _1849, 1.0));
        _1901 = dot(vec3(isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)), isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1892) ? 0.0 : (isnan(0.0) ? _1892 : max(0.0, _1892))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1901 = 1.0;
    }
    float _1905 = (_1901 * cbModelParam._m0[1u].x) + (_1890 * (1.0 - cbModelParam._m0[1u].x));
    float _1915 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _952);
    float _1916 = isnan(_1915) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1915 : min(cbModelParam._m0[25u].z, _1915));
    float _1996;
    float _1998;
    float _2000;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1963 = fma(_1168, cbModelParam._m0[13u].z, fma(_1164, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1160)) + cbModelParam._m0[13u].w;
        float _1967 = fma(_1168, cbModelParam._m0[14u].z, fma(_1164, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1160)) + cbModelParam._m0[14u].w;
        float _1971 = fma(_1168, cbModelParam._m0[15u].z, fma(_1164, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1160)) + cbModelParam._m0[15u].w;
        float _1974 = fma(_1110, cbModelParam._m0[13u].z, fma(_1109, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1108));
        float _1977 = fma(_1110, cbModelParam._m0[14u].z, fma(_1109, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1108));
        float _1980 = fma(_1110, cbModelParam._m0[15u].z, fma(_1109, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1108));
        float _2008;
        if (_1974 > 0.0)
        {
            _2008 = abs((1.0 - _1963) / _1974);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1963 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2008 = frontier_phi_14_12_ladder;
        }
        float _2177;
        if (_1977 > 0.0)
        {
            _2177 = abs((1.0 - _1967) / _1977);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1977 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1967 + 1.0) / _1977);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2177 = frontier_phi_23_19_ladder;
        }
        float _2473;
        if (_1980 > 0.0)
        {
            _2473 = abs((1.0 - _1971) / _1980);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1980 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1971 + 1.0) / _1980);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2473 = frontier_phi_35_30_ladder;
        }
        float _2475 = isnan(_2177) ? _2008 : (isnan(_2008) ? _2177 : min(_2008, _2177));
        float _2476 = isnan(_2473) ? _2475 : (isnan(_2475) ? _2473 : min(_2475, _2473));
        float _2480 = (_2476 * _1974) + _1963;
        float _2481 = (_2476 * _1977) + _1967;
        float _2482 = (_2476 * _1980) + _1971;
        float _2483 = _2476 * 9.9999997473787516355514526367188e-05;
        float _2485 = (-1.0) - _2483;
        float _2487 = _2483 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2482 > _2487) || ((_2482 < _2485) || ((_2481 > _2487) || ((_2481 < _2485) || ((_2480 < _2485) || (_2480 > _2487))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2627 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2482, cbModelParam._m0[9u].z, fma(_2481, cbModelParam._m0[9u].y, _2480 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2482, cbModelParam._m0[10u].z, fma(_2481, cbModelParam._m0[10u].y, _2480 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2482, cbModelParam._m0[11u].z, fma(_2481, cbModelParam._m0[11u].y, _2480 * cbModelParam._m0[11u].x))), _1916);
            frontier_phi_13_35_ladder = _2627.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2627.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2627.x * cbModelParam._m0[1u].y;
        }
        _1996 = frontier_phi_13_35_ladder_2;
        _1998 = frontier_phi_13_35_ladder_1;
        _2000 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1984 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1108, _1109, _1110), _1916);
        _1996 = _1984.x * cbModelParam._m0[1u].y;
        _1998 = _1984.y * cbModelParam._m0[1u].y;
        _2000 = _1984.z * cbModelParam._m0[1u].y;
    }
    float _2004 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _952);
    float _2005 = isnan(_2004) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2004 : min(cbModelParam._m0[25u].w, _2004));
    float _2094;
    float _2096;
    float _2098;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2058 = fma(_1168, cbModelParam._m0[21u].z, fma(_1164, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1160)) + cbModelParam._m0[21u].w;
        float _2062 = fma(_1168, cbModelParam._m0[22u].z, fma(_1164, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1160)) + cbModelParam._m0[22u].w;
        float _2066 = fma(_1168, cbModelParam._m0[23u].z, fma(_1164, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1160)) + cbModelParam._m0[23u].w;
        float _2069 = fma(_1110, cbModelParam._m0[21u].z, fma(_1109, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1108));
        float _2072 = fma(_1110, cbModelParam._m0[22u].z, fma(_1109, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1108));
        float _2075 = fma(_1110, cbModelParam._m0[23u].z, fma(_1109, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1108));
        float _2182;
        if (_2069 > 0.0)
        {
            _2182 = abs((1.0 - _2058) / _2069);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2069 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2058 + 1.0) / _2069);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2182 = frontier_phi_25_21_ladder;
        }
        float _2500;
        if (_2072 > 0.0)
        {
            _2500 = abs((1.0 - _2062) / _2072);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2072 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2062 + 1.0) / _2072);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2500 = frontier_phi_37_32_ladder;
        }
        float _2827;
        if (_2075 > 0.0)
        {
            _2827 = abs((1.0 - _2066) / _2075);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2075 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2066 + 1.0) / _2075);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2827 = frontier_phi_47_44_ladder;
        }
        float _2829 = isnan(_2500) ? _2182 : (isnan(_2182) ? _2500 : min(_2182, _2500));
        float _2830 = isnan(_2827) ? _2829 : (isnan(_2829) ? _2827 : min(_2829, _2827));
        float _2834 = (_2830 * _2069) + _2058;
        float _2835 = (_2830 * _2072) + _2062;
        float _2836 = (_2830 * _2075) + _2066;
        float _2837 = _2830 * 9.9999997473787516355514526367188e-05;
        float _2838 = (-1.0) - _2837;
        float _2840 = _2837 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2836 > _2840) || ((_2836 < _2838) || ((_2835 > _2840) || ((_2835 < _2838) || ((_2834 < _2838) || (_2834 > _2840))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2954 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2836, cbModelParam._m0[17u].z, fma(_2835, cbModelParam._m0[17u].y, _2834 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2836, cbModelParam._m0[18u].z, fma(_2835, cbModelParam._m0[18u].y, _2834 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2836, cbModelParam._m0[19u].z, fma(_2835, cbModelParam._m0[19u].y, _2834 * cbModelParam._m0[19u].x))), _2005);
            frontier_phi_22_47_ladder = _2954.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2954.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2954.x * cbModelParam._m0[1u].z;
        }
        _2094 = frontier_phi_22_47_ladder_2;
        _2096 = frontier_phi_22_47_ladder_1;
        _2098 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2078 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1108, _1109, _1110), _2005);
        _2094 = _2078.x * cbModelParam._m0[1u].z;
        _2096 = _2078.y * cbModelParam._m0[1u].z;
        _2098 = _2078.z * cbModelParam._m0[1u].z;
    }
    float _2110 = ((((1.0 - _1128) * ((_1116 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1128 * _1116)) * _1100;
    float _2111 = _2110 * ((cbModelParam._m0[1u].w * (_2094 - _1996)) + _1996);
    float _2112 = _2110 * ((cbModelParam._m0[1u].w * (_2096 - _1998)) + _1998);
    float _2113 = _2110 * ((cbModelParam._m0[1u].w * (_2098 - _2000)) + _2000);
    float _2116 = fma(_2113, cbSceneParam._m0[89u].z, fma(_2112, cbSceneParam._m0[89u].y, _2111 * cbSceneParam._m0[89u].x));
    float _2119 = fma(_2113, cbSceneParam._m0[90u].z, fma(_2112, cbSceneParam._m0[90u].y, _2111 * cbSceneParam._m0[90u].x));
    float _2122 = fma(_2113, cbSceneParam._m0[91u].z, fma(_2112, cbSceneParam._m0[91u].y, _2111 * cbSceneParam._m0[91u].x));
    float _2156 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2160 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2164 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2168 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2169 = _2156 / _2168;
    float _2170 = _2160 / _2168;
    float _2171 = _2164 / _2168;
    float _2318;
    float _2319;
    float _2320;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2198 = ((uint(_2171 > cbSceneParam._m0[59u].y) + uint(_2171 > cbSceneParam._m0[59u].x)) + uint(_2171 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2199 = _2198 + 43u;
        uint _2207 = _2198 + 44u;
        uint _2215 = _2198 + 45u;
        uint _2223 = _2198 + 46u;
        float _2234 = fma(_2168, cbSceneParam._m0[_2199].w, fma(_2164, cbSceneParam._m0[_2199].z, fma(_2160, cbSceneParam._m0[_2199].y, _2156 * cbSceneParam._m0[_2199].x)));
        float _2238 = fma(_2168, cbSceneParam._m0[_2207].w, fma(_2164, cbSceneParam._m0[_2207].z, fma(_2160, cbSceneParam._m0[_2207].y, _2156 * cbSceneParam._m0[_2207].x)));
        float _2246 = fma(_2168, cbSceneParam._m0[_2223].w, fma(_2164, cbSceneParam._m0[_2223].z, fma(_2160, cbSceneParam._m0[_2223].y, _2156 * cbSceneParam._m0[_2223].x)));
        float _2251 = cbSceneParam._m0[33u].z * _2246;
        float _2253 = cbSceneParam._m0[33u].w * _2246;
        float _2256 = fma(_2168, cbSceneParam._m0[_2215].w, fma(_2164, cbSceneParam._m0[_2215].z, fma(_2160, cbSceneParam._m0[_2215].y, _2156 * cbSceneParam._m0[_2215].x))) / _2246;
        float _2304 = (cbSceneParam._m0[33u].x - sqrt(((_2170 * _2170) + (_2169 * _2169)) + (_2171 * _2171))) * cbSceneParam._m0[33u].y;
        float _4607 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
        float _2311 = (isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2251 + _2234) / _2246, (_2253 + _2238) / _2246), _2256), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2253 + _2234) / _2246, (_2238 - _2251) / _2246), _2256), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 - _2251) / _2246, (_2238 - _2253) / _2246), _2256), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 - _2253) / _2246, (_2251 + _2238) / _2246), _2256), 0.0)).x), vec4(0.25)));
        _2318 = 1.0 - (_2311 * cbSceneParam._m0[34u].x);
        _2319 = 1.0 - (_2311 * cbSceneParam._m0[34u].y);
        _2320 = 1.0 - (_2311 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2318 = 1.0;
        _2319 = 1.0;
        _2320 = 1.0;
    }
    float _2384;
    float _2386;
    float _2388;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2372 = fma(_2168, cbSceneParam._m0[63u].w, fma(_2164, cbSceneParam._m0[63u].z, fma(_2160, cbSceneParam._m0[63u].y, _2156 * cbSceneParam._m0[63u].x)));
        float _2373 = fma(_2168, cbSceneParam._m0[60u].w, fma(_2164, cbSceneParam._m0[60u].z, fma(_2160, cbSceneParam._m0[60u].y, _2156 * cbSceneParam._m0[60u].x))) / _2372;
        float _2374 = fma(_2168, cbSceneParam._m0[61u].w, fma(_2164, cbSceneParam._m0[61u].z, fma(_2160, cbSceneParam._m0[61u].y, _2156 * cbSceneParam._m0[61u].x))) / _2372;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2373 >= cbSceneParam._m0[64u].x) && (_2374 >= cbSceneParam._m0[64u].y)) && (_2373 <= cbSceneParam._m0[64u].z)) && (_2374 <= cbSceneParam._m0[64u].w))
        {
            float _2513 = fma(_2168, cbSceneParam._m0[62u].w, fma(_2164, cbSceneParam._m0[62u].z, fma(_2160, cbSceneParam._m0[62u].y, _2156 * cbSceneParam._m0[62u].x))) / _2372;
            float _2517 = isnan(cbSceneParam._m0[41u].w) ? _2513 : (isnan(_2513) ? cbSceneParam._m0[41u].w : max(_2513, cbSceneParam._m0[41u].w));
            float _2560 = (cbSceneParam._m0[33u].x - sqrt(((_2170 * _2170) + (_2169 * _2169)) + (_2171 * _2171))) * cbSceneParam._m0[33u].y;
            float _4623 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
            float _2567 = (isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2373, cbSceneParam._m0[33u].w + _2374), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2373, _2374 - cbSceneParam._m0[33u].z), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2373 - cbSceneParam._m0[33u].z, _2374 - cbSceneParam._m0[33u].w), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2373 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2374), _2517), 0.0)).x), vec4(0.25)));
            float _2571 = 1.0 - (_2567 * cbSceneParam._m0[34u].x);
            float _2572 = 1.0 - (_2567 * cbSceneParam._m0[34u].y);
            float _2573 = 1.0 - (_2567 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2573) ? _2320 : (isnan(_2320) ? _2573 : min(_2320, _2573));
            frontier_phi_34_33_ladder_1 = isnan(_2572) ? _2319 : (isnan(_2319) ? _2572 : min(_2319, _2572));
            frontier_phi_34_33_ladder_2 = isnan(_2571) ? _2318 : (isnan(_2318) ? _2571 : min(_2318, _2571));
        }
        else
        {
            frontier_phi_34_33_ladder = _2320;
            frontier_phi_34_33_ladder_1 = _2319;
            frontier_phi_34_33_ladder_2 = _2318;
        }
        _2384 = frontier_phi_34_33_ladder_2;
        _2386 = frontier_phi_34_33_ladder_1;
        _2388 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2384 = _2318;
        _2386 = _2319;
        _2388 = _2320;
    }
    uvec4 _2393 = floatBitsToUint(cbInstanceData._m0[_1075 + 5u]);
    uint _2395 = _2393.x * 14u;
    uint _2396 = _2395 + 13u;
    float _2403 = _1100 + (-1.0);
    float _2408 = (cbLight._m0[_2396].x * _2403) + 1.0;
    float _2409 = (cbLight._m0[_2396].y * _2403) + 1.0;
    float _2410 = (cbLight._m0[_2396].z * _2403) + 1.0;
    float _2411 = (cbLight._m0[_2396].w * _2403) + 1.0;
    uint _2412 = _2395 + 5u;
    float _2418 = isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0));
    uint _2422 = _2395 + 4u;
    float _2432 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
    uint _2436 = _2395 | 1u;
    float _2447 = dot(vec3(cbLight._m0[_2395].xyz), vec3(_949, _950, _951));
    float _2450 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_949, _950, _951));
    float _4659 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _4670 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2455 = (isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * 0.3183098733425140380859375;
    float _2457 = (isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0))) * 0.3183098733425140380859375;
    float _2464 = ((cbLight._m0[_2412].x * _2418) * _2457) + (((cbLight._m0[_2422].x * _2384) * _2432) * _2455);
    float _2465 = ((_2418 * cbLight._m0[_2412].y) * _2457) + (((cbLight._m0[_2422].y * _2386) * _2432) * _2455);
    float _2466 = ((_2418 * cbLight._m0[_2412].z) * _2457) + (((cbLight._m0[_2422].z * _2388) * _2432) * _2455);
    uvec4 _2470 = floatBitsToUint(cbLight._m0[_2395 + 12u]);
    bool _2472 = _2470.x == 0u;
    float _2574;
    float _2576;
    float _2578;
    if (_2472)
    {
        _2574 = _2464;
        _2576 = _2465;
        _2578 = _2466;
    }
    else
    {
        uint _2582 = _2395 + 6u;
        float _2598 = (dot(vec3(cbLight._m0[_2395 + 2u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2599 = _2598 * _2598;
        float _4681 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2600 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
        float _2601 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
        _2574 = (((cbLight._m0[_2582].x * 0.3183098733425140380859375) * _2600) * _2601) + _2464;
        _2576 = (((cbLight._m0[_2582].y * 0.3183098733425140380859375) * _2600) * _2601) + _2465;
        _2578 = (((cbLight._m0[_2582].z * 0.3183098733425140380859375) * _2600) * _2601) + _2466;
    }
    bool _2581 = _2470.y == 0u;
    float _2636;
    float _2638;
    float _2640;
    if (_2581)
    {
        _2636 = _2574;
        _2638 = _2576;
        _2640 = _2578;
    }
    else
    {
        uint _2798 = _2395 + 7u;
        float _2814 = (dot(vec3(cbLight._m0[_2395 + 3u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2815 = _2814 * _2814;
        float _4697 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
        float _2816 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
        float _2817 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2636 = (((cbLight._m0[_2798].x * 0.3183098733425140380859375) * _2816) * _2817) + _2574;
        _2638 = (((cbLight._m0[_2798].y * 0.3183098733425140380859375) * _2816) * _2817) + _2576;
        _2640 = (((cbLight._m0[_2798].z * 0.3183098733425140380859375) * _2816) * _2817) + _2578;
    }
    uint _2643 = _2395 + 8u;
    float _2656 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2395].w)) * _952) * 0.949999988079071044921875);
    float _2657 = _2656 * _2656;
    float _2658 = cbLight._m0[_2395].x + _1028;
    float _2659 = cbLight._m0[_2395].y + _1029;
    float _2660 = cbLight._m0[_2395].z + _1030;
    float _2664 = inversesqrt(dot(vec3(_2658, _2659, _2660), vec3(_2658, _2659, _2660)));
    float _2665 = _2664 * _2658;
    float _2666 = _2664 * _2659;
    float _2667 = _2664 * _2660;
    float _2668 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2395].xyz));
    float _4713 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2671 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _4724 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _2672 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2673 = dot(vec3(_949, _950, _951), vec3(_2665, _2666, _2667));
    float _4735 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2676 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _2677 = dot(vec3(cbLight._m0[_2395].xyz), vec3(_2665, _2666, _2667));
    float _4746 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2681 = _2657 * _2657;
    float _2685 = ((_2676 * _2676) * (_2681 + (-1.0))) + 1.0;
    float _2696 = (exp2(log2(1.0 - (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2697 = 1.0 - _2657;
    float _2708 = (0.5 / (((_2672 * ((_2671 * _2697) + _2657)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2697) + _2657) * _2671))) * _2671;
    float _4757 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
    float _2710 = (isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0))) * (_2681 / ((_2685 * _2685) * 3.141590118408203125));
    uint _2724 = _2395 + 9u;
    float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2436].w)) * _952) * 0.949999988079071044921875);
    float _2736 = _2735 * _2735;
    float _2737 = cbLight._m0[_2436].x + _1028;
    float _2738 = cbLight._m0[_2436].y + _1029;
    float _2739 = cbLight._m0[_2436].z + _1030;
    float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
    float _2744 = _2743 * _2737;
    float _2745 = _2743 * _2738;
    float _2746 = _2743 * _2739;
    float _2747 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2436].xyz));
    float _4768 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2750 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2751 = dot(vec3(_949, _950, _951), vec3(_2744, _2745, _2746));
    float _4779 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
    float _2754 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
    float _2755 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_2744, _2745, _2746));
    float _4790 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
    float _2759 = _2736 * _2736;
    float _2763 = ((_2754 * _2754) * (_2759 + (-1.0))) + 1.0;
    float _2772 = (exp2(log2(1.0 - (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2773 = 1.0 - _2736;
    float _2783 = (0.5 / (((_2672 * ((_2750 * _2773) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2773) + _2736) * _2750))) * _2750;
    float _4801 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
    float _2785 = (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2759 / ((_2763 * _2763) * 3.141590118408203125));
    float _2795 = (((_2772 * cbLight._m0[_2724].x) * _2785) * _2418) + ((((cbLight._m0[_2643].x * _2384) * _2696) * _2710) * _2432);
    float _2796 = (((_2772 * cbLight._m0[_2724].y) * _2785) * _2418) + ((((cbLight._m0[_2643].y * _2386) * _2696) * _2710) * _2432);
    float _2797 = (((_2772 * cbLight._m0[_2724].z) * _2785) * _2418) + ((((cbLight._m0[_2643].z * _2388) * _2696) * _2710) * _2432);
    float _2853;
    float _2855;
    float _2857;
    if (_2472)
    {
        _2853 = _2795;
        _2855 = _2796;
        _2857 = _2797;
    }
    else
    {
        uint _2859 = _2395 + 2u;
        uint _2863 = _2395 + 10u;
        float _2877 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2859].w)) * _952) * 0.949999988079071044921875);
        float _2878 = _2877 * _2877;
        float _2879 = cbLight._m0[_2859].x + _1028;
        float _2880 = cbLight._m0[_2859].y + _1029;
        float _2881 = cbLight._m0[_2859].z + _1030;
        float _2885 = inversesqrt(dot(vec3(_2879, _2880, _2881), vec3(_2879, _2880, _2881)));
        float _2886 = _2885 * _2879;
        float _2887 = _2885 * _2880;
        float _2888 = _2885 * _2881;
        float _2889 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2859].xyz));
        float _4812 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
        float _2892 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
        float _2893 = dot(vec3(_949, _950, _951), vec3(_2886, _2887, _2888));
        float _4823 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        float _2896 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
        float _2897 = dot(vec3(cbLight._m0[_2859].xyz), vec3(_2886, _2887, _2888));
        float _4834 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
        float _2901 = _2878 * _2878;
        float _2905 = ((_2896 * _2896) * (_2901 + (-1.0))) + 1.0;
        float _2914 = (exp2(log2(1.0 - (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2915 = 1.0 - _2878;
        float _2925 = (0.5 / (((_2672 * ((_2892 * _2915) + _2878)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2915) + _2878) * _2892))) * _2892;
        float _4845 = isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0));
        float _2927 = (isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0))) * (_2901 / ((_2905 * _2905) * 3.141590118408203125));
        float _2928 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
        _2853 = (((_2914 * cbLight._m0[_2863].x) * _2927) * _2928) + _2795;
        _2855 = (((_2914 * cbLight._m0[_2863].y) * _2927) * _2928) + _2796;
        _2857 = (((_2914 * cbLight._m0[_2863].z) * _2927) * _2928) + _2797;
    }
    float _2959;
    float _2961;
    float _2963;
    if (_2581)
    {
        _2959 = _2853;
        _2961 = _2855;
        _2963 = _2857;
    }
    else
    {
        uint _2970 = _2395 + 3u;
        uint _2974 = _2395 + 11u;
        float _2988 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2970].w)) * _952) * 0.949999988079071044921875);
        float _2989 = _2988 * _2988;
        float _2990 = cbLight._m0[_2970].x + _1028;
        float _2991 = cbLight._m0[_2970].y + _1029;
        float _2992 = cbLight._m0[_2970].z + _1030;
        float _2996 = inversesqrt(dot(vec3(_2990, _2991, _2992), vec3(_2990, _2991, _2992)));
        float _2997 = _2996 * _2990;
        float _2998 = _2996 * _2991;
        float _2999 = _2996 * _2992;
        float _3000 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2970].xyz));
        float _4861 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
        float _3003 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _3004 = dot(vec3(_949, _950, _951), vec3(_2997, _2998, _2999));
        float _4872 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0));
        float _3007 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _3008 = dot(vec3(cbLight._m0[_2970].xyz), vec3(_2997, _2998, _2999));
        float _4883 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3012 = _2989 * _2989;
        float _3016 = ((_3007 * _3007) * (_3012 + (-1.0))) + 1.0;
        float _3025 = (exp2(log2(1.0 - (isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3026 = 1.0 - _2989;
        float _3036 = (0.5 / (((_2672 * ((_3003 * _3026) + _2989)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _3026) + _2989) * _3003))) * _3003;
        float _4894 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
        float _3038 = (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0))) * (_3012 / ((_3016 * _3016) * 3.141590118408203125));
        float _3039 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2959 = (((_3025 * cbLight._m0[_2974].x) * _3038) * _3039) + _2853;
        _2961 = (((_3025 * cbLight._m0[_2974].y) * _3038) * _3039) + _2855;
        _2963 = (((_3025 * cbLight._m0[_2974].z) * _3038) * _3039) + _2857;
    }
    float _3105;
    float _3107;
    float _3109;
    float _3111;
    float _3113;
    float _3115;
    if (_2393.y == 0u)
    {
        uvec4 _3060 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3061 = _3060.x;
        uint _3072 = uint((float(_3060.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1037) / _3061))) + floor(float(uint(cbSceneParam._m0[85u].x * _1036) / _3061)));
        float _3082 = (log2(_2171 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3083 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
        uint _3086 = uint(isnan(14.0) ? _3083 : (isnan(_3083) ? 14.0 : min(_3083, 14.0)));
        uvec4 _3091 = texelFetch(g_lightClusterGridBuffer, int(((_3086 << 2u) + (_3072 << 6u)) >> 2u));
        uint _3092 = _3091.x;
        uint _3093 = _3060.z;
        float _3201;
        float _3203;
        float _3205;
        float _3207;
        float _3209;
        float _3211;
        if (((((1u << ((_3093 >> 4u) & 15u)) + 4294967295u) & _3092) == 0u) || ((_3093 & 240u) == 0u))
        {
            _3201 = 0.0;
            _3203 = 0.0;
            _3205 = 0.0;
            _3207 = 0.0;
            _3209 = 0.0;
            _3211 = 0.0;
        }
        else
        {
            float _3202;
            float _3204;
            float _3206;
            float _3208;
            float _3210;
            float _3212;
            float _3353 = 0.0;
            float _3354 = 0.0;
            float _3355 = 0.0;
            float _3356 = 0.0;
            float _3357 = 0.0;
            float _3358 = 0.0;
            uint _3359 = 0u;
            uint _3368;
            bool _3369;
            for (;;)
            {
                _3368 = texelFetch(g_lightClassification, int((((_3086 << 5u) + (_3072 << 9u)) + (_3359 << 2u)) >> 2u)).x;
                _3369 = _3368 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3369)
                {
                    frontier_phi_66_pred = _3358;
                    frontier_phi_66_pred_1 = _3357;
                    frontier_phi_66_pred_2 = _3356;
                    frontier_phi_66_pred_3 = _3355;
                    frontier_phi_66_pred_4 = _3354;
                    frontier_phi_66_pred_5 = _3353;
                }
                else
                {
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    float _3481;
                    float _3482;
                    uint _3483;
                    _3477 = _3353;
                    _3478 = _3354;
                    _3479 = _3355;
                    _3480 = _3356;
                    _3481 = _3357;
                    _3482 = _3358;
                    _3483 = _3368;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    float _3413;
                    float _3414;
                    for (;;)
                    {
                        uint _3487 = uint(findLSB(_3483)) + (_3359 << 5u);
                        uint _3484 = (_3483 + 4294967295u) & _3483;
                        uint _3489 = _3487 * 48u;
                        vec4 _3503 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3489)).x, texelFetch(g_PointLightRenderingBuffer, int(_3489 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3489 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3489 + 3u)).x));
                        uint _3509 = (_3487 * 48u) + 4u;
                        vec4 _3522 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3509)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 3u)).x));
                        uint _3528 = (_3487 * 48u) + 8u;
                        vec3 _3539 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3528)).x, texelFetch(g_PointLightRenderingBuffer, int(_3528 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3528 + 2u)).x));
                        float _3543 = _3503.x - _2169;
                        float _3544 = _3503.y - _2170;
                        float _3545 = _3503.z - _2171;
                        float _3546 = dot(vec3(_3543, _3544, _3545), vec3(_3543, _3544, _3545));
                        float _3549 = inversesqrt(_3546);
                        float _3550 = _3549 * _3543;
                        float _3551 = _3549 * _3544;
                        float _3552 = _3549 * _3545;
                        float _3553 = dot(vec3(_1056, _1059, _1062), vec3(_3550, _3551, _3552));
                        float _3558 = 1.0 - (_3546 * _3503.w);
                        float _4920 = isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0));
                        float _3559 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
                        float _3560 = sqrt(_3546) * _3522.w;
                        float _3563 = 1.39999997615814208984375 / (_3560 + 1.39999997615814208984375);
                        float _3564 = _3563 * _3563;
                        float _3567 = ((1.0 - _3564) * _3553) + _3564;
                        float _3570 = _3560 * _3560;
                        float _3574 = ((isnan(0.0) ? _3567 : (isnan(_3567) ? 0.0 : max(_3567, 0.0))) * _3559) / ((_3570 * 0.699999988079071044921875) + 1.0);
                        float _3578 = (-0.0) - _2169;
                        float _3579 = (-0.0) - _2170;
                        float _3580 = (-0.0) - _2171;
                        float _3584 = inversesqrt(dot(vec3(_3578, _3579, _3580), vec3(_3578, _3579, _3580)));
                        float _3585 = _3584 * _3578;
                        float _3586 = _3584 * _3579;
                        float _3587 = _3584 * _3580;
                        float _3594 = exp2(log2(1.0 / ((_3570 * 3.5) + 5.0)) * 0.25);
                        float _3595 = 1.0 - _1116;
                        float _3602 = sqrt(1.0 - ((1.0 - (_3595 * _3595)) * (1.0 - (_3594 * _3594))));
                        float _3603 = _3602 * _3602;
                        float _3604 = _3603 * _3603;
                        float _3605 = _3585 + _3550;
                        float _3606 = _3586 + _3551;
                        float _3607 = _3587 + _3552;
                        float _3611 = inversesqrt(dot(vec3(_3605, _3606, _3607), vec3(_3605, _3606, _3607)));
                        float _3615 = dot(vec3(_1056, _1059, _1062), vec3(_3585, _3586, _3587));
                        float _4936 = isnan(0.0) ? _3615 : (isnan(_3615) ? 0.0 : max(_3615, 0.0));
                        float _3618 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                        float _3619 = dot(vec3(_1056, _1059, _1062), vec3(_3611 * _3605, _3611 * _3606, _3611 * _3607));
                        float _4947 = isnan(0.0) ? _3619 : (isnan(_3619) ? 0.0 : max(_3619, 0.0));
                        float _3622 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                        float _3626 = ((_3622 * _3622) * (_3604 + (-1.0))) + 1.0;
                        float _3627 = _3563 * _3603;
                        float _3628 = _3627 * _3627;
                        float _3631 = ((1.0 - _3628) * _3553) + _3628;
                        float _4958 = isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0));
                        float _3632 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                        float _3633 = 1.0 - _3603;
                        float _3643 = (0.5 / (((_3632 * ((_3618 * _3633) + _3603)) + 9.9999999392252902907785028219223e-09) + (((_3632 * _3633) + _3603) * _3618))) * _3632;
                        float _4969 = isnan(0.0) ? _3643 : (isnan(_3643) ? 0.0 : max(_3643, 0.0));
                        float _3654 = (((_3604 * 3.1415927410125732421875) * (isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0)))) / ((_3626 * _3626) * ((_3570 * 2.1991131305694580078125) + 3.141590118408203125))) * _3559;
                        _3412 = (_3574 * _3522.x) + _3480;
                        _3413 = (_3574 * _3522.y) + _3481;
                        _3414 = (_3574 * _3522.z) + _3482;
                        _3409 = (_3654 * _3539.x) + _3477;
                        _3410 = (_3654 * _3539.y) + _3478;
                        _3411 = (_3654 * _3539.z) + _3479;
                        if (_3484 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3477 = _3409;
                            _3478 = _3410;
                            _3479 = _3411;
                            _3480 = _3412;
                            _3481 = _3413;
                            _3482 = _3414;
                            _3483 = _3484;
                        }
                    }
                    frontier_phi_66_pred = _3414;
                    frontier_phi_66_pred_1 = _3413;
                    frontier_phi_66_pred_2 = _3412;
                    frontier_phi_66_pred_3 = _3411;
                    frontier_phi_66_pred_4 = _3410;
                    frontier_phi_66_pred_5 = _3409;
                }
                _3212 = frontier_phi_66_pred;
                _3210 = frontier_phi_66_pred_1;
                _3208 = frontier_phi_66_pred_2;
                _3206 = frontier_phi_66_pred_3;
                _3204 = frontier_phi_66_pred_4;
                _3202 = frontier_phi_66_pred_5;
                uint _3360 = _3359 + 1u;
                if (_3360 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3353 = _3202;
                    _3354 = _3204;
                    _3355 = _3206;
                    _3356 = _3208;
                    _3357 = _3210;
                    _3358 = _3212;
                    _3359 = _3360;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3201 = _3202;
            _3203 = _3204;
            _3205 = _3206;
            _3207 = _3208;
            _3209 = _3210;
            _3211 = _3212;
        }
        uvec4 _3215 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3216 = _3215.z;
        uint _3218 = (_3216 >> 8u) & 15u;
        float _3321;
        float _3323;
        float _3325;
        float _3327;
        float _3329;
        float _3331;
        if (((4294967295u << _3218) & _3092) == 0u)
        {
            _3321 = _3201;
            _3323 = _3203;
            _3325 = _3205;
            _3327 = _3207;
            _3329 = _3209;
            _3331 = _3211;
        }
        else
        {
            float _3346 = inversesqrt(dot(vec3(_2169, _2170, _2171), vec3(_2169, _2170, _2171)));
            float _3347 = _3346 * _2169;
            float _3348 = _3346 * _2170;
            float _3349 = _3346 * _2171;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3218 < ((_3216 >> 12u) & 15u))
            {
                float _3322;
                float _3324;
                float _3326;
                float _3328;
                float _3330;
                float _3332;
                float _3460 = _3201;
                float _3461 = _3203;
                float _3462 = _3205;
                float _3463 = _3207;
                float _3464 = _3209;
                float _3465 = _3211;
                uint _3466 = _3218;
                uint _3475;
                bool _3476;
                for (;;)
                {
                    _3475 = texelFetch(g_lightClassification, int((((_3086 << 5u) + (_3072 << 9u)) + (_3466 << 2u)) >> 2u)).x;
                    _3476 = _3475 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3476)
                    {
                        frontier_phi_72_pred = _3465;
                        frontier_phi_72_pred_1 = _3464;
                        frontier_phi_72_pred_2 = _3463;
                        frontier_phi_72_pred_3 = _3462;
                        frontier_phi_72_pred_4 = _3461;
                        frontier_phi_72_pred_5 = _3460;
                    }
                    else
                    {
                        float _3659;
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3664;
                        float _3952;
                        float _3953;
                        float _3954;
                        float _3955;
                        float _3956;
                        float _3957;
                        float _3672 = _3460;
                        float _3673 = _3461;
                        float _3674 = _3462;
                        float _3675 = _3463;
                        float _3676 = _3464;
                        float _3677 = _3465;
                        uint _3678 = _3475;
                        uint _3679;
                        vec4 _3704;
                        float _3705;
                        vec4 _3720;
                        vec3 _3732;
                        vec4 _3747;
                        vec4 _3762;
                        float _3808;
                        bool _3809;
                        for (;;)
                        {
                            uint _3689 = ((_3466 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3678));
                            _3679 = (_3678 + 4294967295u) & _3678;
                            uint _3691 = _3689 * 40u;
                            _3704 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3691)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 3u)).x));
                            _3705 = _3704.w;
                            uint _3707 = (_3689 * 40u) + 4u;
                            _3720 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3707)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 3u)).x));
                            uint _3722 = (_3689 * 40u) + 8u;
                            _3732 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3722)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 2u)).x));
                            uint _3734 = (_3689 * 40u) + 16u;
                            _3747 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3734)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 3u)).x));
                            uint _3749 = (_3689 * 40u) + 20u;
                            _3762 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3749)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 3u)).x));
                            uint _3764 = (_3689 * 40u) + 24u;
                            vec4 _3777 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3764)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 3u)).x));
                            uint _3783 = (_3689 * 40u) + 28u;
                            vec4 _3796 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3783)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 3u)).x));
                            _3808 = fma(_2171, _3796.z, fma(_2170, _3796.y, _3796.x * _2169)) + _3796.w;
                            _3809 = !((fma(_2171, _3777.z, fma(_2170, _3777.y, _3777.x * _2169)) + _3777.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3809)
                            {
                                float _3836 = _3704.x - _2169;
                                float _3837 = _3704.y - _2170;
                                float _3838 = _3704.z - _2171;
                                float _3839 = dot(vec3(_3836, _3837, _3838), vec3(_3836, _3837, _3838));
                                float _3842 = inversesqrt(_3839);
                                float _3843 = _3842 * _3836;
                                float _3844 = _3842 * _3837;
                                float _3845 = _3842 * _3838;
                                float _3849 = 1.0 - (_3839 / (_3705 * _3705));
                                float _4980 = isnan(0.0) ? _3849 : (isnan(_3849) ? 0.0 : max(_3849, 0.0));
                                float _3850 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                                float _3854 = sqrt(_3839) * _3720.w;
                                float _3856 = 1.39999997615814208984375 / (_3854 + 1.39999997615814208984375);
                                float _3857 = _3856 * _3856;
                                float _3860 = ((1.0 - _3857) * dot(vec3(_3843, _3844, _3845), vec3(_1056, _1059, _1062))) + _3857;
                                float _3863 = _3854 * _3854;
                                float _3867 = (fma(_2171, _3747.z, fma(_2170, _3747.y, _3747.x * _2169)) + _3747.w) / _3808;
                                float _3868 = (fma(_2171, _3762.z, fma(_2170, _3762.y, _3762.x * _2169)) + _3762.w) / _3808;
                                float _3872 = 1.0 - dot(vec2(_3867, _3868), vec2(_3867, _3868));
                                float _4996 = isnan(0.0) ? _3872 : (isnan(_3872) ? 0.0 : max(_3872, 0.0));
                                float _3873 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                                float _3874 = _3873 * (((isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0))) * _3850) / ((_3863 * 0.699999988079071044921875) + 1.0));
                                float _3886 = exp2(log2(1.0 / ((_3863 * 3.5) + 5.0)) * 0.25);
                                float _3887 = 1.0 - _1116;
                                float _3894 = sqrt(1.0 - ((1.0 - (_3887 * _3887)) * (1.0 - (_3886 * _3886))));
                                float _3895 = _3894 * _3894;
                                float _3896 = _3895 * _3895;
                                float _3897 = _3843 - _3347;
                                float _3898 = _3844 - _3348;
                                float _3899 = _3845 - _3349;
                                float _3903 = inversesqrt(dot(vec3(_3897, _3898, _3899), vec3(_3897, _3898, _3899)));
                                float _3907 = dot(vec3(_1056, _1059, _1062), vec3((-0.0) - _3347, (-0.0) - _3348, (-0.0) - _3349));
                                float _5007 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3910 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3911 = dot(vec3(_1056, _1059, _1062), vec3(_3903 * _3897, _3903 * _3898, _3903 * _3899));
                                float _5018 = isnan(0.0) ? _3911 : (isnan(_3911) ? 0.0 : max(_3911, 0.0));
                                float _3914 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3918 = ((_3914 * _3914) * (_3896 + (-1.0))) + 1.0;
                                float _3919 = _3856 * _3895;
                                float _3920 = _3919 * _3919;
                                float _3926 = ((1.0 - _3920) * dot(vec3(_1056, _1059, _1062), vec3(_3843, _3844, _3845))) + _3920;
                                float _5029 = isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0));
                                float _3927 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                                float _3928 = 1.0 - _3895;
                                float _3938 = (0.5 / (((_3927 * ((_3910 * _3928) + _3895)) + 9.9999999392252902907785028219223e-09) + (((_3927 * _3928) + _3895) * _3910))) * _3927;
                                float _5040 = isnan(0.0) ? _3938 : (isnan(_3938) ? 0.0 : max(_3938, 0.0));
                                float _3948 = (_3873 * _3850) * (((_3896 * 3.1415927410125732421875) * (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0)))) / ((_3918 * _3918) * ((_3863 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3874 * _3720.y;
                                frontier_phi_78_pred_1 = _3874 * _3720.x;
                                frontier_phi_78_pred_2 = _3948 * _3732.z;
                                frontier_phi_78_pred_3 = _3948 * _3732.y;
                                frontier_phi_78_pred_4 = _3948 * _3732.x;
                                frontier_phi_78_pred_5 = _3874 * _3720.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3956 = frontier_phi_78_pred;
                            _3955 = frontier_phi_78_pred_1;
                            _3954 = frontier_phi_78_pred_2;
                            _3953 = frontier_phi_78_pred_3;
                            _3952 = frontier_phi_78_pred_4;
                            _3957 = frontier_phi_78_pred_5;
                            _3662 = _3955 + _3675;
                            _3663 = _3956 + _3676;
                            _3664 = _3957 + _3677;
                            _3659 = _3952 + _3672;
                            _3660 = _3953 + _3673;
                            _3661 = _3954 + _3674;
                            if (_3679 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3672 = _3659;
                                _3673 = _3660;
                                _3674 = _3661;
                                _3675 = _3662;
                                _3676 = _3663;
                                _3677 = _3664;
                                _3678 = _3679;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3664;
                        frontier_phi_72_pred_1 = _3663;
                        frontier_phi_72_pred_2 = _3662;
                        frontier_phi_72_pred_3 = _3661;
                        frontier_phi_72_pred_4 = _3660;
                        frontier_phi_72_pred_5 = _3659;
                    }
                    _3332 = frontier_phi_72_pred;
                    _3330 = frontier_phi_72_pred_1;
                    _3328 = frontier_phi_72_pred_2;
                    _3326 = frontier_phi_72_pred_3;
                    _3324 = frontier_phi_72_pred_4;
                    _3322 = frontier_phi_72_pred_5;
                    uint _3467 = _3466 + 1u;
                    if (_3467 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3460 = _3322;
                        _3461 = _3324;
                        _3462 = _3326;
                        _3463 = _3328;
                        _3464 = _3330;
                        _3465 = _3332;
                        _3466 = _3467;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3332;
                frontier_phi_60_61_ladder_1 = _3330;
                frontier_phi_60_61_ladder_2 = _3326;
                frontier_phi_60_61_ladder_3 = _3324;
                frontier_phi_60_61_ladder_4 = _3322;
                frontier_phi_60_61_ladder_5 = _3328;
            }
            else
            {
                frontier_phi_60_61_ladder = _3211;
                frontier_phi_60_61_ladder_1 = _3209;
                frontier_phi_60_61_ladder_2 = _3205;
                frontier_phi_60_61_ladder_3 = _3203;
                frontier_phi_60_61_ladder_4 = _3201;
                frontier_phi_60_61_ladder_5 = _3207;
            }
            _3321 = frontier_phi_60_61_ladder_4;
            _3323 = frontier_phi_60_61_ladder_3;
            _3325 = frontier_phi_60_61_ladder_2;
            _3327 = frontier_phi_60_61_ladder_5;
            _3329 = frontier_phi_60_61_ladder_1;
            _3331 = frontier_phi_60_61_ladder;
        }
        float _3336 = isnan(1.0) ? _1100 : (isnan(_1100) ? 1.0 : min(_1100, 1.0));
        _3105 = (_3336 * _3327) + _2636;
        _3107 = (_3336 * _3329) + _2638;
        _3109 = (_3336 * _3331) + _2640;
        _3111 = ((_3321 * 0.039999999105930328369140625) * _3336) + _2959;
        _3113 = ((_3323 * 0.039999999105930328369140625) * _3336) + _2961;
        _3115 = ((_3325 * 0.039999999105930328369140625) * _3336) + _2963;
    }
    else
    {
        _3105 = _2636;
        _3107 = _2638;
        _3109 = _2640;
        _3111 = _2959;
        _3113 = _2961;
        _3115 = _2963;
    }
    uint _3121 = _1076 + uint(cbMatDynParam._m0[0u].w);
    float _3127 = cbInstanceData._m0[_3121].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_664.x - _661) * _642) + _661)) - _901) * _447) + _901);
    float _3128 = cbInstanceData._m0[_3121].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_664.y - _662) * _642) + _662)) - _902) * _447) + _902);
    float _3129 = cbInstanceData._m0[_3121].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_664.z - _663) * _642) + _663)) - _903) * _447) + _903);
    float _5056 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _5067 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _5078 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _3146 = (((isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0))) * (_3105 + ((isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))) * _1100))) + ((_3111 + ((isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0))) * _1905)) * cbPerFrame._m0[3u].x)) + _3127;
    float _3148 = (_3128 + ((_3113 + ((isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0))) * _1905)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0))) * (_3107 + ((isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))) * _1100)));
    float _3150 = (_3129 + ((_3115 + ((isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0))) * _1905)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0))) * (_3109 + ((isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0))) * _1100)));
    float _5104 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3163 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
    uint _3164 = _1075 + 6u;
    float _3172 = _1036 / cbSceneParam._m0[86u].x;
    float _3173 = _1037 / cbSceneParam._m0[86u].y;
    vec4 _3187 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3172, _3173, (log2((isnan(cbSceneParam._m0[77u].w) ? _971 : (isnan(_971) ? cbSceneParam._m0[77u].w : min(_971, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3189 = _3187.x;
    float _3190 = _3187.y;
    float _3191 = _3187.z;
    float _3192 = _3187.w;
    float _3263;
    float _3265;
    float _3267;
    float _3269;
    if (_971 > cbSceneParam._m0[78u].w)
    {
        float _3226 = isnan(_971) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _971 : min(cbSceneParam._m0[80u].w, _971));
        float _3227 = _3226 / _971;
        float _3238 = _3227 * _1021;
        float _3239 = _1022 * _3227;
        float _3240 = (-0.0) - _3239;
        float _3241 = _3227 * _1023;
        float _3243 = (cbSceneParam._m0[77u].w * _3240) / _3226;
        float _3244 = _3243 + cbSceneParam._m0[79u].w;
        float _3245 = cbSceneParam._m0[79u].w - _3239;
        float _3251 = sqrt(((_3238 * _3238) + (_3239 * _3239)) + (_3241 * _3241));
        float _3254 = (1.0 - (cbSceneParam._m0[77u].w / _3226)) * _3251;
        float _3259 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3261 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3422;
        if (abs((_3240 - _3243) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3422 = ((((_3244 > 0.0) ? exp2(_3259 * _3244) : (2.0 - exp2(_3261 * _3244))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3254;
        }
        else
        {
            float _3382 = 1.0 / cbSceneParam._m0[80u].x;
            float _3383 = isnan(_3245) ? _3244 : (isnan(_3244) ? _3245 : max(_3244, _3245));
            float _3384 = isnan(_3245) ? _3244 : (isnan(_3244) ? _3245 : min(_3244, _3245));
            float _3393 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : min(_3383, 0.0));
            float _3394 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : min(_3384, 0.0));
            _3422 = ((abs(_3251 / _3240) * cbSceneParam._m0[80u].y) * ((((_3393 - _3394) * 2.0) - ((exp2(_3259 * (isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0)))) - exp2(_3259 * (isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0))))) * _3382)) - ((exp2(_3261 * _3393) - exp2(_3261 * _3394)) * _3382))) + (_3254 * cbSceneParam._m0[80u].z);
        }
        vec4 _3424 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3172, _3173, 1.0), 0.0);
        float _3433 = exp2((_3422 * (-1.44269502162933349609375)) * (1.0 - _3424.w));
        float _3434 = log2(_3433);
        float _3450 = log2(_3192);
        _3263 = (exp2(_3450 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3434 * cbSceneParam._m0[78u].x)) * _3424.x) / cbSceneParam._m0[78u].x)) + _3189;
        _3265 = (exp2(_3450 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3434 * cbSceneParam._m0[78u].y)) * _3424.y) / cbSceneParam._m0[78u].y)) + _3190;
        _3267 = (exp2(_3450 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3434 * cbSceneParam._m0[78u].z)) * _3424.z) / cbSceneParam._m0[78u].z)) + _3191;
        _3269 = _3433 * _3192;
    }
    else
    {
        _3263 = _3189;
        _3265 = _3190;
        _3267 = _3191;
        _3269 = _3192;
    }
    float _3280 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3281 = _3280 == 3.0;
    float _3282 = log2(_3269);
    float _3286 = exp2(_3282 * cbSceneParam._m0[78u].x);
    float _3287 = exp2(_3282 * cbSceneParam._m0[78u].y);
    float _3288 = exp2(_3282 * cbSceneParam._m0[78u].z);
    float _3289 = _3286 * (isnan(0.0) ? _3146 : (isnan(_3146) ? 0.0 : max(_3146, 0.0)));
    float _3290 = _3287 * (isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0)));
    float _3291 = _3288 * (isnan(0.0) ? _3150 : (isnan(_3150) ? 0.0 : max(_3150, 0.0)));
    float _3300 = (_3280 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3300 * (_3281 ? _3289 : (_3289 + (cbSceneParam._m0[72u].w * _3263)));
    SV_Target.y = _3300 * (_3281 ? _3290 : (_3290 + (cbSceneParam._m0[72u].w * _3265)));
    SV_Target.z = _3300 * (_3281 ? _3291 : (_3291 + (cbSceneParam._m0[72u].w * _3267)));
    SV_Target.w = cbInstanceData._m0[_3164].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3127) * _3163) * _3286) * _3300;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3128) * _3163) * _3287) * _3300;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3129) * _3163) * _3288) * _3300;
    SV_Target_1.w = cbInstanceData._m0[_3164].w;
}


