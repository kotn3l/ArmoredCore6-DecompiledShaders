#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1510;
float _3906;
float _3907;
float _3908;
float _3909;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _278 = _272.x * cbMtdParam._m0[9u].x;
    float _279 = _272.y * cbMtdParam._m0[9u].y;
    float _280 = _272.z * cbMtdParam._m0[9u].z;
    vec4 _307 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _335 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _364 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _387 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _395 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _387)) * (cbMtdParam._m0[17u].w + 1.0);
    float _3918 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _403 = (_396 * ((_364.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _404 = (_396 * ((_364.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _405 = (_396 * ((_364.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    float _411 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _387)) * (cbMtdParam._m0[19u].x + 1.0);
    float _3929 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _412 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _419 = (((_335.x * cbMtdParam._m0[14u].x) - _403) * _412) + _403;
    float _420 = (((_335.y * cbMtdParam._m0[14u].y) - _404) * _412) + _404;
    float _421 = (((_335.z * cbMtdParam._m0[14u].z) - _405) * _412) + _405;
    float _437 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _446 = (_437 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _437))) * (cbMtdParam._m0[20u].x + 1.0);
    float _3940 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _454 = (_447 * ((_307.x * cbMtdParam._m0[15u].x) - _419)) + _419;
    float _455 = (_447 * ((_307.y * cbMtdParam._m0[15u].y) - _420)) + _420;
    float _456 = (_447 * ((_307.z * cbMtdParam._m0[15u].z) - _421)) + _421;
    vec4 _472 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _494 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _510 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _512 = _510.x;
    float _513 = _510.y;
    float _514 = _510.z;
    float _523 = ((_494.z - _514) * _396) + _514;
    float _526 = ((((_494.x - _512) * _396) + _512) * 2.0) + (-1.0);
    float _527 = ((((_494.y - _513) * _396) + _513) * 2.0) + (-1.0);
    float _528 = dot(vec2(_526, _527), vec2(_526, _527));
    float _3951 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _533 = sqrt(1.0 - (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0))));
    float _538 = (((_472.z - _523) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _523;
    vec4 _551 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _568 = (((((((_551.z - _538) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _538) * cbMtdParam._m0[21u].z) - _538) * _447) + _538;
    float _584 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _587 = (_584 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _588 = (_584 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _613 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _617 = cbPerFrame._m0[22u].x * 2.0;
    float _618 = _617 * cbMtdParam._m0[22u].y;
    float _625 = ((_613.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _627 = (-0.0) - (cbMtdParam._m0[22u].x * ((_613.x * 0.5) + (-0.25)));
    float _629 = fract(_618);
    float _631 = fract(_618 + 0.5);
    float _642 = abs((_629 * 2.0) + (-1.0));
    vec4 _659 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_629 * _627) + _587) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_625 * _629) + _588) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _661 = _659.x;
    float _662 = _659.y;
    float _663 = _659.z;
    vec4 _664 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_631 * _627) + _587) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_625 * _631) + _588) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _706 = (cbMtdParam._m0[23u].y * _584) + TEXCOORD_6.w;
    float _707 = (cbMtdParam._m0[23u].z * _584) + TEXCOORD_9.w;
    vec4 _720 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _724 = _617 * cbMtdParam._m0[18u].x;
    float _729 = ((_720.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _731 = (-0.0) - (cbMtdParam._m0[20u].z * ((_720.x * 0.5) + (-0.25)));
    float _732 = fract(_724);
    float _734 = fract(_724 + 0.5);
    float _735 = _732 * _731;
    float _736 = _729 * _732;
    float _739 = _734 * _731;
    float _740 = _729 * _734;
    float _745 = abs((_732 * 2.0) + (-1.0));
    vec4 _761 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_735 + _706) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_736 + _707) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _763 = _761.x;
    float _764 = _761.y;
    float _765 = _761.z;
    vec4 _766 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_739 + _706) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_740 + _707) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _796 = (cbMtdParam._m0[22u].w * _584) + TEXCOORD_6.w;
    float _797 = (cbMtdParam._m0[23u].x * _584) + TEXCOORD_9.w;
    vec4 _817 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_735 + _796) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_736 + _797) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _819 = _817.x;
    float _820 = _817.y;
    float _821 = _817.z;
    vec4 _822 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_739 + _796) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_740 + _797) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _842 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3962 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _843 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
    float _851 = (((_843 * _843) * (3.0 - (_843 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _884 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _796) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _797) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _3973 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _885 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    float _889 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_822.x - _819) * _745) + _819)) * _851) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_766.x - _763) * _745) + _763)))) * _885;
    float _893 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_822.y - _820) * _745) + _820)) * _851) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_766.y - _764) * _745) + _764)))) * _885;
    float _897 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_822.z - _821) * _745) + _821)) * _851) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_766.z - _765) * _745) + _765)))) * _885;
    float _901 = _889 - (_889 * _437);
    float _902 = _893 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _893);
    float _903 = _897 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _897);
    float _932 = ((((((_472.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _526) + (cbMtdParam._m0[20u].y * _526)) + (((((_551.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _447);
    float _935 = ((((((_472.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _527) + (cbMtdParam._m0[20u].y * _527)) + (((((_551.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _447);
    float _938 = fma(_533, _243 * NORMAL.x, fma(_935, _250 * TANGENT.x, (_236 * _228) * _932));
    float _941 = fma(_533, _243 * NORMAL.y, fma(_935, _250 * TANGENT.y, (_236 * _229) * _932));
    float _944 = fma(_533, _243 * NORMAL.z, fma(_935, _250 * TANGENT.z, (_236 * _230) * _932));
    float _948 = inversesqrt(dot(vec3(_938, _941, _944), vec3(_938, _941, _944)));
    float _949 = _948 * _938;
    float _950 = _948 * _941;
    float _951 = _948 * _944;
    float _3984 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _952 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
    float _3995 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _4006 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _4017 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _971 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1011 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1021 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1011);
    float _1022 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1011);
    float _1023 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1011);
    float _1027 = inversesqrt(dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023)));
    float _1028 = _1021 * _1027;
    float _1029 = _1022 * _1027;
    float _1030 = _1023 * _1027;
    vec4 _1035 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1037 = _1035.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1191 = sqrt(((_1021 * _1021) + (_1022 * _1022)) + (_1023 * _1023));
        float _1197 = (cbMatDynParam._m0[5u].x * _1191) + cbMatDynParam._m0[5u].y;
        float _4028 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1202 = (cbMatDynParam._m0[5u].z * _1191) + cbMatDynParam._m0[5u].w;
        float _4039 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) - _1198)) + _1198) < ((_1037 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1048 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1049 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1068 = fma(_951, cbSceneParam._m0[5u].z, fma(_950, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _949));
    float _1071 = fma(_951, cbSceneParam._m0[6u].z, fma(_950, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _949));
    float _1074 = fma(_951, cbSceneParam._m0[7u].z, fma(_950, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _949));
    uint _1087 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1088 = _1087 + 9u;
    uint _1089 = _1088 + uint(cbMatDynParam._m0[0u].w);
    float _1095 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0)))) * cbInstanceData._m0[_1089].x;
    float _1096 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0)))) * cbInstanceData._m0[_1089].y;
    float _1097 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0)))) * cbInstanceData._m0[_1089].z;
    float _4050 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _1098 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    float _4061 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    float _1099 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _4072 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
    float _1100 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
    vec4 _1109 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1048, cbSceneParam._m0[86u].y * _1049));
    float _1112 = _1109.x * TEXCOORD_3.w;
    float _1113 = dot(vec3(_949, _950, _951), vec3(_1028, _1029, _1030));
    float _1116 = _1113 * 2.0;
    float _1120 = (_1116 * _949) - _1028;
    float _1121 = (_1116 * _950) - _1029;
    float _1122 = (_1116 * _951) - _1030;
    float _1126 = abs(dot(vec3(_1028, _1029, _1030), vec3(_949, _950, _951)));
    float _4083 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
    float _1128 = sqrt(_952);
    float _1140 = exp2((_1128 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1128 * 3.0));
    float _1172 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1176 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1180 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1509;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1235 = fma(_1180, cbModelParam._m0[26u].z, fma(_1176, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1172));
        float _1239 = fma(_1180, cbModelParam._m0[27u].z, fma(_1176, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1172));
        float _1243 = fma(_1180, cbModelParam._m0[28u].z, fma(_1176, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1172));
        float _1267 = _1172 + _949;
        float _1268 = _1176 + _950;
        float _1269 = _1180 + _951;
        float _1279 = fma(_1269, cbModelParam._m0[26u].z, fma(_1268, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1267)) - _1235;
        float _1280 = fma(_1269, cbModelParam._m0[27u].z, fma(_1268, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1267)) - _1239;
        float _1281 = fma(_1269, cbModelParam._m0[28u].z, fma(_1268, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1267)) - _1243;
        float _1285 = inversesqrt(dot(vec3(_1279, _1280, _1281), vec3(_1279, _1280, _1281)));
        float _1298 = ((_1285 * _1279) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1235 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1299 = ((_1285 * _1280) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1239 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1300 = ((_1285 * _1281) / cbModelParam._m0[34u].z) + ((((((_1243 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1303 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1298, _1299, _1300), 0.0);
        vec4 _1310 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1298, _1299, _1300), 0.0);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1298, _1299, _1300), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1298, _1299, _1300), 0.0);
        float _1337 = exp2((_1303.w + (-0.5)) * 20.0) * 2.0;
        float _1338 = _1337 * (_1303.x + (-0.5));
        float _1339 = _1337 * (_1303.y + (-0.5));
        float _1340 = _1337 * (_1303.z + (-0.5));
        float _1347 = exp2((_1310.w + (-0.5)) * 20.0) * 2.0;
        float _1348 = _1347 * (_1310.x + (-0.5));
        float _1349 = _1347 * (_1310.y + (-0.5));
        float _1350 = _1347 * (_1310.z + (-0.5));
        float _1357 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1358 = _1357 * (_1317.x + (-0.5));
        float _1359 = _1357 * (_1317.y + (-0.5));
        float _1360 = _1357 * (_1317.z + (-0.5));
        float _1367 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1368 = _1367 * (_1324.x + (-0.5));
        float _1369 = _1367 * (_1324.y + (-0.5));
        float _1370 = _1367 * (_1324.z + (-0.5));
        float _1371 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1372 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = _1338 * 0.5;
        float _1375 = _1348 * 0.5;
        float _1376 = _1358 * 0.5;
        float _1377 = dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376));
        float _1382 = (_1377 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1377);
        float _1391 = (dot(vec3(_949, _950, _951), vec3(_1382 * _1374, _1382 * _1375, _1382 * _1376)) + 1.0) * 0.5;
        float _4109 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1401 = sqrt(((_1375 * _1375) + (_1374 * _1374)) + (_1376 * _1376)) / (_1371 + 9.9999997473787516355514526367188e-06);
        float _4120 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1403 = _1402 * 2.0;
        float _1407 = (1.0 - _1402) / (_1402 + 1.0);
        float _4131 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1417 = ((((1.0 - _1408) * (_1403 + 2.0)) * exp2(log2(isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0))) * (_1403 + 1.0))) + _1408) * _1371;
        float _1418 = _1339 * 0.5;
        float _1419 = _1349 * 0.5;
        float _1420 = _1359 * 0.5;
        float _1421 = dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420));
        float _1426 = (_1421 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1421);
        float _1434 = (dot(vec3(_949, _950, _951), vec3(_1426 * _1418, _1426 * _1419, _1426 * _1420)) + 1.0) * 0.5;
        float _4142 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1443 = sqrt(((_1419 * _1419) + (_1418 * _1418)) + (_1420 * _1420)) / (_1372 + 9.9999997473787516355514526367188e-06);
        float _4153 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1445 = _1444 * 2.0;
        float _1449 = (1.0 - _1444) / (_1444 + 1.0);
        float _4164 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
        float _1459 = ((((1.0 - _1450) * (_1445 + 2.0)) * exp2(log2(isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0))) * (_1445 + 1.0))) + _1450) * _1372;
        float _1460 = _1340 * 0.5;
        float _1461 = _1350 * 0.5;
        float _1462 = _1360 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1476 = (dot(vec3(_949, _950, _951), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _4175 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1485 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _4186 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1486 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1487 = _1486 * 2.0;
        float _1491 = (1.0 - _1486) / (_1486 + 1.0);
        float _4197 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
        float _1501 = ((((1.0 - _1492) * (_1487 + 2.0)) * exp2(log2(isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0))) * (_1487 + 1.0))) + _1492) * _1373;
        _1509 = _1340;
        _1511 = _1339;
        _1512 = _1338;
        _1513 = _1350;
        _1514 = _1349;
        _1515 = _1348;
        _1516 = _1360;
        _1517 = _1359;
        _1518 = _1358;
        _1519 = _1373;
        _1520 = _1372;
        _1521 = _1371;
        _1522 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)));
        _1523 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0)));
        _1524 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0)));
    }
    else
    {
        _1509 = _1510;
        _1511 = _1510;
        _1512 = _1510;
        _1513 = _1510;
        _1514 = _1510;
        _1515 = _1510;
        _1516 = _1510;
        _1517 = _1510;
        _1518 = _1510;
        _1519 = _1510;
        _1520 = _1510;
        _1521 = _1510;
        _1522 = 0.0;
        _1523 = 0.0;
        _1524 = 0.0;
    }
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1553 = fma(_1180, cbModelParam._m0[30u].z, fma(_1176, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1172));
        float _1557 = fma(_1180, cbModelParam._m0[31u].z, fma(_1176, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1172));
        float _1561 = fma(_1180, cbModelParam._m0[32u].z, fma(_1176, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1172));
        float _1584 = _1172 + _949;
        float _1585 = _1176 + _950;
        float _1586 = _1180 + _951;
        float _1596 = fma(_1586, cbModelParam._m0[30u].z, fma(_1585, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1584)) - _1553;
        float _1597 = fma(_1586, cbModelParam._m0[31u].z, fma(_1585, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1584)) - _1557;
        float _1598 = fma(_1586, cbModelParam._m0[32u].z, fma(_1585, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1584)) - _1561;
        float _1602 = inversesqrt(dot(vec3(_1596, _1597, _1598), vec3(_1596, _1597, _1598)));
        float _1615 = ((_1602 * _1596) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1553 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1616 = ((_1602 * _1597) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1557 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1617 = ((_1602 * _1598) / cbModelParam._m0[35u].z) + ((((((_1561 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1619 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1626 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1633 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1640 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        float _1652 = exp2((_1619.w + (-0.5)) * 20.0) * 2.0;
        float _1653 = _1652 * (_1619.x + (-0.5));
        float _1654 = _1652 * (_1619.y + (-0.5));
        float _1655 = _1652 * (_1619.z + (-0.5));
        float _1662 = exp2((_1626.w + (-0.5)) * 20.0) * 2.0;
        float _1663 = _1662 * (_1626.x + (-0.5));
        float _1664 = _1662 * (_1626.y + (-0.5));
        float _1665 = _1662 * (_1626.z + (-0.5));
        float _1672 = exp2((_1633.w + (-0.5)) * 20.0) * 2.0;
        float _1673 = _1672 * (_1633.x + (-0.5));
        float _1674 = _1672 * (_1633.y + (-0.5));
        float _1675 = _1672 * (_1633.z + (-0.5));
        float _1682 = exp2((_1640.w + (-0.5)) * 20.0) * 2.0;
        float _1683 = _1682 * (_1640.x + (-0.5));
        float _1684 = _1682 * (_1640.y + (-0.5));
        float _1685 = _1682 * (_1640.z + (-0.5));
        float _1686 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1687 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1688 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1689 = _1653 * 0.5;
        float _1690 = _1663 * 0.5;
        float _1691 = _1673 * 0.5;
        float _1692 = dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691));
        float _1697 = (_1692 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1692);
        float _1705 = (dot(vec3(_949, _950, _951), vec3(_1697 * _1689, _1697 * _1690, _1697 * _1691)) + 1.0) * 0.5;
        float _4238 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1714 = sqrt(((_1690 * _1690) + (_1689 * _1689)) + (_1691 * _1691)) / (_1686 + 9.9999997473787516355514526367188e-06);
        float _4249 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1716 = _1715 * 2.0;
        float _1720 = (1.0 - _1715) / (_1715 + 1.0);
        float _4260 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1721 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1730 = ((((1.0 - _1721) * (_1716 + 2.0)) * exp2(log2(isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * (_1716 + 1.0))) + _1721) * _1686;
        float _1731 = _1654 * 0.5;
        float _1732 = _1664 * 0.5;
        float _1733 = _1674 * 0.5;
        float _1734 = dot(vec3(_1731, _1732, _1733), vec3(_1731, _1732, _1733));
        float _1739 = (_1734 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1734);
        float _1747 = (dot(vec3(_949, _950, _951), vec3(_1739 * _1731, _1739 * _1732, _1739 * _1733)) + 1.0) * 0.5;
        float _4271 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1756 = sqrt(((_1732 * _1732) + (_1731 * _1731)) + (_1733 * _1733)) / (_1687 + 9.9999997473787516355514526367188e-06);
        float _4282 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1758 = _1757 * 2.0;
        float _1762 = (1.0 - _1757) / (_1757 + 1.0);
        float _4293 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1763 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1772 = ((((1.0 - _1763) * (_1758 + 2.0)) * exp2(log2(isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * (_1758 + 1.0))) + _1763) * _1687;
        float _1773 = _1655 * 0.5;
        float _1774 = _1665 * 0.5;
        float _1775 = _1675 * 0.5;
        float _1776 = dot(vec3(_1773, _1774, _1775), vec3(_1773, _1774, _1775));
        float _1781 = (_1776 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1776);
        float _1789 = (dot(vec3(_949, _950, _951), vec3(_1781 * _1773, _1781 * _1774, _1781 * _1775)) + 1.0) * 0.5;
        float _4304 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1798 = sqrt(((_1774 * _1774) + (_1773 * _1773)) + (_1775 * _1775)) / (_1688 + 9.9999997473787516355514526367188e-06);
        float _4315 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1799 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1800 = _1799 * 2.0;
        float _1804 = (1.0 - _1799) / (_1799 + 1.0);
        float _4326 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1805 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1814 = ((((1.0 - _1805) * (_1800 + 2.0)) * exp2(log2(isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0))) * (_1800 + 1.0))) + _1805) * _1688;
        _1822 = _1655;
        _1823 = _1654;
        _1824 = _1653;
        _1825 = _1665;
        _1826 = _1664;
        _1827 = _1663;
        _1828 = _1675;
        _1829 = _1674;
        _1830 = _1673;
        _1831 = _1688;
        _1832 = _1687;
        _1833 = _1686;
        _1834 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0)));
        _1835 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)));
        _1836 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0)));
    }
    else
    {
        _1822 = _1510;
        _1823 = _1510;
        _1824 = _1510;
        _1825 = _1510;
        _1826 = _1510;
        _1827 = _1510;
        _1828 = _1510;
        _1829 = _1510;
        _1830 = _1510;
        _1831 = _1510;
        _1832 = _1510;
        _1833 = _1510;
        _1834 = 0.0;
        _1835 = 0.0;
        _1836 = 0.0;
    }
    float _1846 = (cbModelParam._m0[1u].x * (_1834 - _1522)) + _1522;
    float _1847 = (cbModelParam._m0[1u].x * (_1835 - _1523)) + _1523;
    float _1848 = (cbModelParam._m0[1u].x * (_1836 - _1524)) + _1524;
    float _1869 = fma(_1848, cbSceneParam._m0[89u].z, fma(_1847, cbSceneParam._m0[89u].y, _1846 * cbSceneParam._m0[89u].x));
    float _1872 = fma(_1848, cbSceneParam._m0[90u].z, fma(_1847, cbSceneParam._m0[90u].y, _1846 * cbSceneParam._m0[90u].x));
    float _1875 = fma(_1848, cbSceneParam._m0[91u].z, fma(_1847, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1846));
    float _1890 = _1120 * 0.5;
    float _1891 = _1121 * 0.5;
    float _1892 = _1122 * 0.5;
    float _1893 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1824, _1827, _1830, _1833));
    float _1896 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1823, _1826, _1829, _1832));
    float _1899 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1822, _1825, _1828, _1831));
    float _1933;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1906 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1509, _1513, _1516, _1519));
        float _1910 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1511, _1514, _1517, _1520));
        float _1914 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1512, _1515, _1518, _1521));
        float _1921 = dot(vec4(cbModelParam._m0[39u]), vec4(_1890, _1891, _1892, 1.0));
        _1933 = dot(vec3(isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0)), isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0)), isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1921) ? 0.0 : (isnan(0.0) ? _1921 : max(0.0, _1921))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1933 = 1.0;
    }
    float _1944;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1935 = dot(vec4(cbModelParam._m0[40u]), vec4(_1890, _1891, _1892, 1.0));
        _1944 = dot(vec3(isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0)), isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0)), isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1935) ? 0.0 : (isnan(0.0) ? _1935 : max(0.0, _1935))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1944 = 1.0;
    }
    float _1948 = (_1944 * cbModelParam._m0[1u].x) + (_1933 * (1.0 - cbModelParam._m0[1u].x));
    float _1958 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _952);
    float _1959 = isnan(_1958) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1958 : min(cbModelParam._m0[25u].z, _1958));
    float _2039;
    float _2041;
    float _2043;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2006 = fma(_1180, cbModelParam._m0[13u].z, fma(_1176, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1172)) + cbModelParam._m0[13u].w;
        float _2010 = fma(_1180, cbModelParam._m0[14u].z, fma(_1176, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1172)) + cbModelParam._m0[14u].w;
        float _2014 = fma(_1180, cbModelParam._m0[15u].z, fma(_1176, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1172)) + cbModelParam._m0[15u].w;
        float _2017 = fma(_1122, cbModelParam._m0[13u].z, fma(_1121, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1120));
        float _2020 = fma(_1122, cbModelParam._m0[14u].z, fma(_1121, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1120));
        float _2023 = fma(_1122, cbModelParam._m0[15u].z, fma(_1121, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1120));
        float _2051;
        if (_2017 > 0.0)
        {
            _2051 = abs((1.0 - _2006) / _2017);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2017 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2006 + 1.0) / _2017);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2051 = frontier_phi_17_15_ladder;
        }
        float _2252;
        if (_2020 > 0.0)
        {
            _2252 = abs((1.0 - _2010) / _2020);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2020 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2010 + 1.0) / _2020);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2252 = frontier_phi_26_22_ladder;
        }
        float _2495;
        if (_2023 > 0.0)
        {
            _2495 = abs((1.0 - _2014) / _2023);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2014 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2495 = frontier_phi_38_33_ladder;
        }
        float _2497 = isnan(_2252) ? _2051 : (isnan(_2051) ? _2252 : min(_2051, _2252));
        float _2498 = isnan(_2495) ? _2497 : (isnan(_2497) ? _2495 : min(_2497, _2495));
        float _2502 = (_2498 * _2017) + _2006;
        float _2503 = (_2498 * _2020) + _2010;
        float _2504 = (_2498 * _2023) + _2014;
        float _2505 = _2498 * 9.9999997473787516355514526367188e-05;
        float _2507 = (-1.0) - _2505;
        float _2509 = _2505 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2504 > _2509) || ((_2504 < _2507) || ((_2503 > _2509) || ((_2503 < _2507) || ((_2502 < _2507) || (_2502 > _2509))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2628 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2504, cbModelParam._m0[9u].z, fma(_2503, cbModelParam._m0[9u].y, _2502 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2504, cbModelParam._m0[10u].z, fma(_2503, cbModelParam._m0[10u].y, _2502 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2504, cbModelParam._m0[11u].z, fma(_2503, cbModelParam._m0[11u].y, _2502 * cbModelParam._m0[11u].x))), _1959);
            frontier_phi_16_38_ladder = _2628.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2628.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2628.x * cbModelParam._m0[1u].y;
        }
        _2039 = frontier_phi_16_38_ladder_2;
        _2041 = frontier_phi_16_38_ladder_1;
        _2043 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2027 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1120, _1121, _1122), _1959);
        _2039 = _2027.x * cbModelParam._m0[1u].y;
        _2041 = _2027.y * cbModelParam._m0[1u].y;
        _2043 = _2027.z * cbModelParam._m0[1u].y;
    }
    float _2047 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _952);
    float _2048 = isnan(_2047) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2047 : min(cbModelParam._m0[25u].w, _2047));
    float _2137;
    float _2139;
    float _2141;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2101 = fma(_1180, cbModelParam._m0[21u].z, fma(_1176, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1172)) + cbModelParam._m0[21u].w;
        float _2105 = fma(_1180, cbModelParam._m0[22u].z, fma(_1176, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1172)) + cbModelParam._m0[22u].w;
        float _2109 = fma(_1180, cbModelParam._m0[23u].z, fma(_1176, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1172)) + cbModelParam._m0[23u].w;
        float _2112 = fma(_1122, cbModelParam._m0[21u].z, fma(_1121, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1120));
        float _2115 = fma(_1122, cbModelParam._m0[22u].z, fma(_1121, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1120));
        float _2118 = fma(_1122, cbModelParam._m0[23u].z, fma(_1121, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1120));
        float _2257;
        if (_2112 > 0.0)
        {
            _2257 = abs((1.0 - _2101) / _2112);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2112 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2101 + 1.0) / _2112);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2257 = frontier_phi_28_24_ladder;
        }
        float _2522;
        if (_2115 > 0.0)
        {
            _2522 = abs((1.0 - _2105) / _2115);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2115 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2105 + 1.0) / _2115);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2522 = frontier_phi_40_35_ladder;
        }
        float _2727;
        if (_2118 > 0.0)
        {
            _2727 = abs((1.0 - _2109) / _2118);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2118 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2109 + 1.0) / _2118);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2727 = frontier_phi_49_46_ladder;
        }
        float _2729 = isnan(_2522) ? _2257 : (isnan(_2257) ? _2522 : min(_2257, _2522));
        float _2730 = isnan(_2727) ? _2729 : (isnan(_2729) ? _2727 : min(_2729, _2727));
        float _2734 = (_2730 * _2112) + _2101;
        float _2735 = (_2730 * _2115) + _2105;
        float _2736 = (_2730 * _2118) + _2109;
        float _2737 = _2730 * 9.9999997473787516355514526367188e-05;
        float _2738 = (-1.0) - _2737;
        float _2740 = _2737 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2736 > _2740) || ((_2736 < _2738) || ((_2735 > _2740) || ((_2735 < _2738) || ((_2734 < _2738) || (_2734 > _2740))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2964 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2736, cbModelParam._m0[17u].z, fma(_2735, cbModelParam._m0[17u].y, _2734 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2736, cbModelParam._m0[18u].z, fma(_2735, cbModelParam._m0[18u].y, _2734 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2736, cbModelParam._m0[19u].z, fma(_2735, cbModelParam._m0[19u].y, _2734 * cbModelParam._m0[19u].x))), _2048);
            frontier_phi_25_49_ladder = _2964.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2964.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2964.x * cbModelParam._m0[1u].z;
        }
        _2137 = frontier_phi_25_49_ladder_2;
        _2139 = frontier_phi_25_49_ladder_1;
        _2141 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2121 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1120, _1121, _1122), _2048);
        _2137 = _2121.x * cbModelParam._m0[1u].z;
        _2139 = _2121.y * cbModelParam._m0[1u].z;
        _2141 = _2121.z * cbModelParam._m0[1u].z;
    }
    float _2153 = ((((1.0 - _1140) * ((_1128 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1140 * _1128)) * _1112;
    float _2154 = _2153 * ((cbModelParam._m0[1u].w * (_2137 - _2039)) + _2039);
    float _2155 = _2153 * ((cbModelParam._m0[1u].w * (_2139 - _2041)) + _2041);
    float _2156 = _2153 * ((cbModelParam._m0[1u].w * (_2141 - _2043)) + _2043);
    float _2159 = fma(_2156, cbSceneParam._m0[89u].z, fma(_2155, cbSceneParam._m0[89u].y, _2154 * cbSceneParam._m0[89u].x));
    float _2162 = fma(_2156, cbSceneParam._m0[90u].z, fma(_2155, cbSceneParam._m0[90u].y, _2154 * cbSceneParam._m0[90u].x));
    float _2165 = fma(_2156, cbSceneParam._m0[91u].z, fma(_2155, cbSceneParam._m0[91u].y, _2154 * cbSceneParam._m0[91u].x));
    uvec4 _2175 = floatBitsToUint(cbInstanceData._m0[_1087 + 5u]);
    uint _2177 = _2175.x * 14u;
    uint _2178 = _2177 + 13u;
    float _2185 = _1112 + (-1.0);
    float _2190 = (cbLight._m0[_2178].x * _2185) + 1.0;
    float _2191 = (cbLight._m0[_2178].y * _2185) + 1.0;
    float _2192 = (cbLight._m0[_2178].z * _2185) + 1.0;
    float _2193 = (cbLight._m0[_2178].w * _2185) + 1.0;
    uint _2194 = _2177 + 5u;
    float _2200 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2204 = _2177 + 4u;
    float _2211 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2215 = _2177 | 1u;
    float _2226 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_949, _950, _951));
    float _2229 = dot(vec3(cbLight._m0[_2215].xyz), vec3(_949, _950, _951));
    float _4462 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _4473 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
    float _2234 = (isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0))) * 0.3183098733425140380859375;
    float _2236 = (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * 0.3183098733425140380859375;
    float _2243 = ((cbLight._m0[_2194].x * _2200) * _2236) + ((cbLight._m0[_2204].x * _2211) * _2234);
    float _2244 = ((_2200 * cbLight._m0[_2194].y) * _2236) + ((_2211 * cbLight._m0[_2204].y) * _2234);
    float _2245 = ((_2200 * cbLight._m0[_2194].z) * _2236) + ((_2211 * cbLight._m0[_2204].z) * _2234);
    uvec4 _2249 = floatBitsToUint(cbLight._m0[_2177 + 12u]);
    bool _2251 = _2249.x == 0u;
    float _2262;
    float _2264;
    float _2266;
    if (_2251)
    {
        _2262 = _2243;
        _2264 = _2244;
        _2266 = _2245;
    }
    else
    {
        uint _2270 = _2177 + 6u;
        float _2286 = (dot(vec3(cbLight._m0[_2177 + 2u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2287 = _2286 * _2286;
        float _4484 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
        float _2288 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
        float _2289 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2262 = (((cbLight._m0[_2270].x * 0.3183098733425140380859375) * _2288) * _2289) + _2243;
        _2264 = (((cbLight._m0[_2270].y * 0.3183098733425140380859375) * _2288) * _2289) + _2244;
        _2266 = (((cbLight._m0[_2270].z * 0.3183098733425140380859375) * _2288) * _2289) + _2245;
    }
    bool _2269 = _2249.y == 0u;
    float _2307;
    float _2309;
    float _2311;
    if (_2269)
    {
        _2307 = _2262;
        _2309 = _2264;
        _2311 = _2266;
    }
    else
    {
        uint _2466 = _2177 + 7u;
        float _2482 = (dot(vec3(cbLight._m0[_2177 + 3u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2483 = _2482 * _2482;
        float _4500 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
        float _2484 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
        float _2485 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2307 = (((cbLight._m0[_2466].x * 0.3183098733425140380859375) * _2484) * _2485) + _2262;
        _2309 = (((cbLight._m0[_2466].y * 0.3183098733425140380859375) * _2484) * _2485) + _2264;
        _2311 = (((cbLight._m0[_2466].z * 0.3183098733425140380859375) * _2484) * _2485) + _2266;
    }
    uint _2314 = _2177 + 8u;
    float _2327 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _952) * 0.949999988079071044921875);
    float _2328 = _2327 * _2327;
    float _2329 = cbLight._m0[_2177].x + _1028;
    float _2330 = cbLight._m0[_2177].y + _1029;
    float _2331 = cbLight._m0[_2177].z + _1030;
    float _2335 = inversesqrt(dot(vec3(_2329, _2330, _2331), vec3(_2329, _2330, _2331)));
    float _2336 = _2335 * _2329;
    float _2337 = _2335 * _2330;
    float _2338 = _2335 * _2331;
    float _2339 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2177].xyz));
    float _4516 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _2342 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
    float _4527 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _2343 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
    float _2344 = dot(vec3(_949, _950, _951), vec3(_2336, _2337, _2338));
    float _4538 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
    float _2347 = isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0));
    float _2348 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2336, _2337, _2338));
    float _4549 = isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0));
    float _2352 = _2328 * _2328;
    float _2356 = ((_2347 * _2347) * (_2352 + (-1.0))) + 1.0;
    float _2367 = (exp2(log2(1.0 - (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2368 = 1.0 - _2328;
    float _2379 = (0.5 / (((_2343 * ((_2342 * _2368) + _2328)) + 9.9999999392252902907785028219223e-09) + (((_2343 * _2368) + _2328) * _2342))) * _2342;
    float _4560 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2381 = (isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0))) * (_2352 / ((_2356 * _2356) * 3.141590118408203125));
    uint _2392 = _2177 + 9u;
    float _2403 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2215].w)) * _952) * 0.949999988079071044921875);
    float _2404 = _2403 * _2403;
    float _2405 = cbLight._m0[_2215].x + _1028;
    float _2406 = cbLight._m0[_2215].y + _1029;
    float _2407 = cbLight._m0[_2215].z + _1030;
    float _2411 = inversesqrt(dot(vec3(_2405, _2406, _2407), vec3(_2405, _2406, _2407)));
    float _2412 = _2411 * _2405;
    float _2413 = _2411 * _2406;
    float _2414 = _2411 * _2407;
    float _2415 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2215].xyz));
    float _4571 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
    float _2418 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
    float _2419 = dot(vec3(_949, _950, _951), vec3(_2412, _2413, _2414));
    float _4582 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2422 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
    float _2423 = dot(vec3(cbLight._m0[_2215].xyz), vec3(_2412, _2413, _2414));
    float _4593 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2427 = _2404 * _2404;
    float _2431 = ((_2422 * _2422) * (_2427 + (-1.0))) + 1.0;
    float _2440 = (exp2(log2(1.0 - (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2441 = 1.0 - _2404;
    float _2451 = (0.5 / (((_2343 * ((_2418 * _2441) + _2404)) + 9.9999999392252902907785028219223e-09) + (((_2343 * _2441) + _2404) * _2418))) * _2418;
    float _4604 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2453 = (isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0))) * (_2427 / ((_2431 * _2431) * 3.141590118408203125));
    float _2463 = (((_2440 * cbLight._m0[_2392].x) * _2453) * _2200) + (((_2367 * cbLight._m0[_2314].x) * _2381) * _2211);
    float _2464 = (((_2440 * cbLight._m0[_2392].y) * _2453) * _2200) + (((_2367 * cbLight._m0[_2314].y) * _2381) * _2211);
    float _2465 = (((_2440 * cbLight._m0[_2392].z) * _2453) * _2200) + (((_2367 * cbLight._m0[_2314].z) * _2381) * _2211);
    float _2527;
    float _2529;
    float _2531;
    if (_2251)
    {
        _2527 = _2463;
        _2529 = _2464;
        _2531 = _2465;
    }
    else
    {
        uint _2533 = _2177 + 2u;
        uint _2537 = _2177 + 10u;
        float _2551 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2533].w)) * _952) * 0.949999988079071044921875);
        float _2552 = _2551 * _2551;
        float _2553 = cbLight._m0[_2533].x + _1028;
        float _2554 = cbLight._m0[_2533].y + _1029;
        float _2555 = cbLight._m0[_2533].z + _1030;
        float _2559 = inversesqrt(dot(vec3(_2553, _2554, _2555), vec3(_2553, _2554, _2555)));
        float _2560 = _2559 * _2553;
        float _2561 = _2559 * _2554;
        float _2562 = _2559 * _2555;
        float _2563 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2533].xyz));
        float _4615 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
        float _2566 = isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0));
        float _2567 = dot(vec3(_949, _950, _951), vec3(_2560, _2561, _2562));
        float _4626 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
        float _2570 = isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0));
        float _2571 = dot(vec3(cbLight._m0[_2533].xyz), vec3(_2560, _2561, _2562));
        float _4637 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2575 = _2552 * _2552;
        float _2579 = ((_2570 * _2570) * (_2575 + (-1.0))) + 1.0;
        float _2588 = (exp2(log2(1.0 - (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2589 = 1.0 - _2552;
        float _2599 = (0.5 / (((_2343 * ((_2566 * _2589) + _2552)) + 9.9999999392252902907785028219223e-09) + (((_2343 * _2589) + _2552) * _2566))) * _2566;
        float _4648 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2601 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * (_2575 / ((_2579 * _2579) * 3.141590118408203125));
        float _2602 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2527 = (((_2588 * cbLight._m0[_2537].x) * _2601) * _2602) + _2463;
        _2529 = (((_2588 * cbLight._m0[_2537].y) * _2601) * _2602) + _2464;
        _2531 = (((_2588 * cbLight._m0[_2537].z) * _2601) * _2602) + _2465;
    }
    float _2637;
    float _2639;
    float _2641;
    if (_2269)
    {
        _2637 = _2527;
        _2639 = _2529;
        _2641 = _2531;
    }
    else
    {
        uint _2648 = _2177 + 3u;
        uint _2652 = _2177 + 11u;
        float _2666 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2648].w)) * _952) * 0.949999988079071044921875);
        float _2667 = _2666 * _2666;
        float _2668 = cbLight._m0[_2648].x + _1028;
        float _2669 = cbLight._m0[_2648].y + _1029;
        float _2670 = cbLight._m0[_2648].z + _1030;
        float _2674 = inversesqrt(dot(vec3(_2668, _2669, _2670), vec3(_2668, _2669, _2670)));
        float _2675 = _2674 * _2668;
        float _2676 = _2674 * _2669;
        float _2677 = _2674 * _2670;
        float _2678 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2648].xyz));
        float _4664 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2681 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
        float _2682 = dot(vec3(_949, _950, _951), vec3(_2675, _2676, _2677));
        float _4675 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
        float _2685 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
        float _2686 = dot(vec3(cbLight._m0[_2648].xyz), vec3(_2675, _2676, _2677));
        float _4686 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2690 = _2667 * _2667;
        float _2694 = ((_2685 * _2685) * (_2690 + (-1.0))) + 1.0;
        float _2703 = (exp2(log2(1.0 - (isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2704 = 1.0 - _2667;
        float _2714 = (0.5 / (((_2343 * ((_2681 * _2704) + _2667)) + 9.9999999392252902907785028219223e-09) + (((_2343 * _2704) + _2667) * _2681))) * _2681;
        float _4697 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2716 = (isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0))) * (_2690 / ((_2694 * _2694) * 3.141590118408203125));
        float _2717 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2637 = (((_2703 * cbLight._m0[_2652].x) * _2716) * _2717) + _2527;
        _2639 = (((_2703 * cbLight._m0[_2652].y) * _2716) * _2717) + _2529;
        _2641 = (((_2703 * cbLight._m0[_2652].z) * _2716) * _2717) + _2531;
    }
    float _2852;
    float _2854;
    float _2856;
    float _2858;
    float _2860;
    float _2862;
    if (_2175.y == 0u)
    {
        float _2792 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2793 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2792;
        float _2794 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2792;
        float _2795 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2792;
        uvec4 _2807 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2808 = _2807.x;
        uint _2819 = uint((float(_2807.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1049) / _2808))) + floor(float(uint(cbSceneParam._m0[85u].x * _1048) / _2808)));
        float _2829 = (log2(_2795 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2830 = isnan(0.0) ? _2829 : (isnan(_2829) ? 0.0 : max(_2829, 0.0));
        uint _2833 = uint(isnan(14.0) ? _2830 : (isnan(_2830) ? 14.0 : min(_2830, 14.0)));
        uvec4 _2838 = texelFetch(g_lightClusterGridBuffer, int(((_2833 << 2u) + (_2819 << 6u)) >> 2u));
        uint _2839 = _2838.x;
        uint _2840 = _2807.z;
        float _2969;
        float _2971;
        float _2973;
        float _2975;
        float _2977;
        float _2979;
        if (((((1u << ((_2840 >> 4u) & 15u)) + 4294967295u) & _2839) == 0u) || ((_2840 & 240u) == 0u))
        {
            _2969 = 0.0;
            _2971 = 0.0;
            _2973 = 0.0;
            _2975 = 0.0;
            _2977 = 0.0;
            _2979 = 0.0;
        }
        else
        {
            float _2970;
            float _2972;
            float _2974;
            float _2976;
            float _2978;
            float _2980;
            float _3129 = 0.0;
            float _3130 = 0.0;
            float _3131 = 0.0;
            float _3132 = 0.0;
            float _3133 = 0.0;
            float _3134 = 0.0;
            uint _3135 = 0u;
            uint _3144;
            bool _3145;
            for (;;)
            {
                _3144 = texelFetch(g_lightClassification, int((((_2833 << 5u) + (_2819 << 9u)) + (_3135 << 2u)) >> 2u)).x;
                _3145 = _3144 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3145)
                {
                    frontier_phi_66_pred = _3129;
                    frontier_phi_66_pred_1 = _3134;
                    frontier_phi_66_pred_2 = _3133;
                    frontier_phi_66_pred_3 = _3132;
                    frontier_phi_66_pred_4 = _3131;
                    frontier_phi_66_pred_5 = _3130;
                }
                else
                {
                    float _3274;
                    float _3275;
                    float _3276;
                    float _3277;
                    float _3278;
                    float _3279;
                    uint _3280;
                    _3274 = _3129;
                    _3275 = _3130;
                    _3276 = _3131;
                    _3277 = _3132;
                    _3278 = _3133;
                    _3279 = _3134;
                    _3280 = _3144;
                    float _3201;
                    float _3202;
                    float _3203;
                    float _3204;
                    float _3205;
                    float _3206;
                    for (;;)
                    {
                        uint _3284 = uint(findLSB(_3280)) + (_3135 << 5u);
                        uint _3281 = (_3280 + 4294967295u) & _3280;
                        uint _3286 = _3284 * 48u;
                        vec4 _3300 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3286)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 3u)).x));
                        uint _3306 = (_3284 * 48u) + 4u;
                        vec4 _3319 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3306)).x, texelFetch(g_PointLightRenderingBuffer, int(_3306 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3306 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3306 + 3u)).x));
                        uint _3325 = (_3284 * 48u) + 8u;
                        vec3 _3336 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3325)).x, texelFetch(g_PointLightRenderingBuffer, int(_3325 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3325 + 2u)).x));
                        float _3340 = _3300.x - _2793;
                        float _3341 = _3300.y - _2794;
                        float _3342 = _3300.z - _2795;
                        float _3343 = dot(vec3(_3340, _3341, _3342), vec3(_3340, _3341, _3342));
                        float _3346 = inversesqrt(_3343);
                        float _3347 = _3346 * _3340;
                        float _3348 = _3346 * _3341;
                        float _3349 = _3346 * _3342;
                        float _3350 = dot(vec3(_1068, _1071, _1074), vec3(_3347, _3348, _3349));
                        float _3355 = 1.0 - (_3343 * _3300.w);
                        float _4723 = isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0));
                        float _3356 = isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0));
                        float _3357 = sqrt(_3343) * _3319.w;
                        float _3360 = 1.39999997615814208984375 / (_3357 + 1.39999997615814208984375);
                        float _3361 = _3360 * _3360;
                        float _3364 = ((1.0 - _3361) * _3350) + _3361;
                        float _3367 = _3357 * _3357;
                        float _3371 = ((isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0))) * _3356) / ((_3367 * 0.699999988079071044921875) + 1.0);
                        float _3375 = (-0.0) - _2793;
                        float _3376 = (-0.0) - _2794;
                        float _3377 = (-0.0) - _2795;
                        float _3381 = inversesqrt(dot(vec3(_3375, _3376, _3377), vec3(_3375, _3376, _3377)));
                        float _3382 = _3381 * _3375;
                        float _3383 = _3381 * _3376;
                        float _3384 = _3381 * _3377;
                        float _3392 = exp2(log2(1.0 / ((_3367 * 3.5) + 5.0)) * 0.25);
                        float _3393 = 1.0 - _1128;
                        float _3400 = sqrt(1.0 - ((1.0 - (_3393 * _3393)) * (1.0 - (_3392 * _3392))));
                        float _3401 = _3400 * _3400;
                        float _3402 = _3401 * _3401;
                        float _3403 = _3382 + _3347;
                        float _3404 = _3383 + _3348;
                        float _3405 = _3384 + _3349;
                        float _3409 = inversesqrt(dot(vec3(_3403, _3404, _3405), vec3(_3403, _3404, _3405)));
                        float _3413 = dot(vec3(_1068, _1071, _1074), vec3(_3382, _3383, _3384));
                        float _4739 = isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0));
                        float _3416 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
                        float _3417 = dot(vec3(_1068, _1071, _1074), vec3(_3409 * _3403, _3409 * _3404, _3409 * _3405));
                        float _4750 = isnan(0.0) ? _3417 : (isnan(_3417) ? 0.0 : max(_3417, 0.0));
                        float _3420 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
                        float _3424 = ((_3420 * _3420) * (_3402 + (-1.0))) + 1.0;
                        float _3425 = _3360 * _3401;
                        float _3426 = _3425 * _3425;
                        float _3429 = ((1.0 - _3426) * _3350) + _3426;
                        float _4761 = isnan(0.0) ? _3429 : (isnan(_3429) ? 0.0 : max(_3429, 0.0));
                        float _3430 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
                        float _3431 = 1.0 - _3401;
                        float _3441 = (0.5 / (((_3430 * ((_3416 * _3431) + _3401)) + 9.9999999392252902907785028219223e-09) + (((_3430 * _3431) + _3401) * _3416))) * _3430;
                        float _4772 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                        float _3452 = (((_3402 * 3.1415927410125732421875) * (isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0)))) / ((_3424 * _3424) * ((_3367 * 2.1991131305694580078125) + 3.141590118408203125))) * _3356;
                        _3204 = (_3371 * _3319.x) + _3277;
                        _3205 = (_3371 * _3319.y) + _3278;
                        _3206 = (_3371 * _3319.z) + _3279;
                        _3201 = (_3452 * _3336.x) + _3274;
                        _3202 = (_3452 * _3336.y) + _3275;
                        _3203 = (_3452 * _3336.z) + _3276;
                        if (_3281 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3274 = _3201;
                            _3275 = _3202;
                            _3276 = _3203;
                            _3277 = _3204;
                            _3278 = _3205;
                            _3279 = _3206;
                            _3280 = _3281;
                        }
                    }
                    frontier_phi_66_pred = _3201;
                    frontier_phi_66_pred_1 = _3206;
                    frontier_phi_66_pred_2 = _3205;
                    frontier_phi_66_pred_3 = _3204;
                    frontier_phi_66_pred_4 = _3203;
                    frontier_phi_66_pred_5 = _3202;
                }
                _2970 = frontier_phi_66_pred;
                _2980 = frontier_phi_66_pred_1;
                _2978 = frontier_phi_66_pred_2;
                _2976 = frontier_phi_66_pred_3;
                _2974 = frontier_phi_66_pred_4;
                _2972 = frontier_phi_66_pred_5;
                uint _3136 = _3135 + 1u;
                if (_3136 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3129 = _2970;
                    _3130 = _2972;
                    _3131 = _2974;
                    _3132 = _2976;
                    _3133 = _2978;
                    _3134 = _2980;
                    _3135 = _3136;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2969 = _2970;
            _2971 = _2972;
            _2973 = _2974;
            _2975 = _2976;
            _2977 = _2978;
            _2979 = _2980;
        }
        uvec4 _2983 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2984 = _2983.z;
        uint _2986 = (_2984 >> 8u) & 15u;
        float _3097;
        float _3099;
        float _3101;
        float _3103;
        float _3105;
        float _3107;
        if (((4294967295u << _2986) & _2839) == 0u)
        {
            _3097 = _2969;
            _3099 = _2971;
            _3101 = _2973;
            _3103 = _2975;
            _3105 = _2977;
            _3107 = _2979;
        }
        else
        {
            float _3122 = inversesqrt(dot(vec3(_2793, _2794, _2795), vec3(_2793, _2794, _2795)));
            float _3123 = _3122 * _2793;
            float _3124 = _3122 * _2794;
            float _3125 = _3122 * _2795;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2986 < ((_2984 >> 12u) & 15u))
            {
                float _3098;
                float _3100;
                float _3102;
                float _3104;
                float _3106;
                float _3108;
                float _3257 = _2969;
                float _3258 = _2971;
                float _3259 = _2973;
                float _3260 = _2975;
                float _3261 = _2977;
                float _3262 = _2979;
                uint _3263 = _2986;
                uint _3272;
                bool _3273;
                for (;;)
                {
                    _3272 = texelFetch(g_lightClassification, int((((_2833 << 5u) + (_2819 << 9u)) + (_3263 << 2u)) >> 2u)).x;
                    _3273 = _3272 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3273)
                    {
                        frontier_phi_77_pred = _3262;
                        frontier_phi_77_pred_1 = _3261;
                        frontier_phi_77_pred_2 = _3260;
                        frontier_phi_77_pred_3 = _3259;
                        frontier_phi_77_pred_4 = _3258;
                        frontier_phi_77_pred_5 = _3257;
                    }
                    else
                    {
                        float _3466;
                        float _3467;
                        float _3468;
                        float _3469;
                        float _3470;
                        float _3471;
                        float _3759;
                        float _3760;
                        float _3761;
                        float _3762;
                        float _3763;
                        float _3764;
                        float _3479 = _3257;
                        float _3480 = _3258;
                        float _3481 = _3259;
                        float _3482 = _3260;
                        float _3483 = _3261;
                        float _3484 = _3262;
                        uint _3485 = _3272;
                        uint _3486;
                        vec4 _3511;
                        float _3512;
                        vec4 _3527;
                        vec3 _3539;
                        vec4 _3554;
                        vec4 _3569;
                        float _3615;
                        bool _3616;
                        for (;;)
                        {
                            uint _3496 = ((_3263 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3485));
                            _3486 = (_3485 + 4294967295u) & _3485;
                            uint _3498 = _3496 * 40u;
                            _3511 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 3u)).x));
                            _3512 = _3511.w;
                            uint _3514 = (_3496 * 40u) + 4u;
                            _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            uint _3529 = (_3496 * 40u) + 8u;
                            _3539 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3529)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 2u)).x));
                            uint _3541 = (_3496 * 40u) + 16u;
                            _3554 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3541)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 3u)).x));
                            uint _3556 = (_3496 * 40u) + 20u;
                            _3569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 3u)).x));
                            uint _3571 = (_3496 * 40u) + 24u;
                            vec4 _3584 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3571)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 3u)).x));
                            uint _3590 = (_3496 * 40u) + 28u;
                            vec4 _3603 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3590)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 3u)).x));
                            _3615 = fma(_2795, _3603.z, fma(_2794, _3603.y, _3603.x * _2793)) + _3603.w;
                            _3616 = !((fma(_2795, _3584.z, fma(_2794, _3584.y, _3584.x * _2793)) + _3584.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3616)
                            {
                                float _3643 = _3511.x - _2793;
                                float _3644 = _3511.y - _2794;
                                float _3645 = _3511.z - _2795;
                                float _3646 = dot(vec3(_3643, _3644, _3645), vec3(_3643, _3644, _3645));
                                float _3649 = inversesqrt(_3646);
                                float _3650 = _3649 * _3643;
                                float _3651 = _3649 * _3644;
                                float _3652 = _3649 * _3645;
                                float _3656 = 1.0 - (_3646 / (_3512 * _3512));
                                float _4783 = isnan(0.0) ? _3656 : (isnan(_3656) ? 0.0 : max(_3656, 0.0));
                                float _3657 = isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0));
                                float _3661 = sqrt(_3646) * _3527.w;
                                float _3663 = 1.39999997615814208984375 / (_3661 + 1.39999997615814208984375);
                                float _3664 = _3663 * _3663;
                                float _3667 = ((1.0 - _3664) * dot(vec3(_3650, _3651, _3652), vec3(_1068, _1071, _1074))) + _3664;
                                float _3670 = _3661 * _3661;
                                float _3674 = (fma(_2795, _3554.z, fma(_2794, _3554.y, _3554.x * _2793)) + _3554.w) / _3615;
                                float _3675 = (fma(_2795, _3569.z, fma(_2794, _3569.y, _3569.x * _2793)) + _3569.w) / _3615;
                                float _3679 = 1.0 - dot(vec2(_3674, _3675), vec2(_3674, _3675));
                                float _4799 = isnan(0.0) ? _3679 : (isnan(_3679) ? 0.0 : max(_3679, 0.0));
                                float _3680 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
                                float _3681 = _3680 * (((isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0))) * _3657) / ((_3670 * 0.699999988079071044921875) + 1.0));
                                float _3693 = exp2(log2(1.0 / ((_3670 * 3.5) + 5.0)) * 0.25);
                                float _3694 = 1.0 - _1128;
                                float _3701 = sqrt(1.0 - ((1.0 - (_3694 * _3694)) * (1.0 - (_3693 * _3693))));
                                float _3702 = _3701 * _3701;
                                float _3703 = _3702 * _3702;
                                float _3704 = _3650 - _3123;
                                float _3705 = _3651 - _3124;
                                float _3706 = _3652 - _3125;
                                float _3710 = inversesqrt(dot(vec3(_3704, _3705, _3706), vec3(_3704, _3705, _3706)));
                                float _3714 = dot(vec3(_1068, _1071, _1074), vec3((-0.0) - _3123, (-0.0) - _3124, (-0.0) - _3125));
                                float _4810 = isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0));
                                float _3717 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
                                float _3718 = dot(vec3(_1068, _1071, _1074), vec3(_3710 * _3704, _3710 * _3705, _3710 * _3706));
                                float _4821 = isnan(0.0) ? _3718 : (isnan(_3718) ? 0.0 : max(_3718, 0.0));
                                float _3721 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
                                float _3725 = ((_3721 * _3721) * (_3703 + (-1.0))) + 1.0;
                                float _3726 = _3663 * _3702;
                                float _3727 = _3726 * _3726;
                                float _3733 = ((1.0 - _3727) * dot(vec3(_1068, _1071, _1074), vec3(_3650, _3651, _3652))) + _3727;
                                float _4832 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
                                float _3735 = 1.0 - _3702;
                                float _3745 = (0.5 / (((_3734 * ((_3717 * _3735) + _3702)) + 9.9999999392252902907785028219223e-09) + (((_3734 * _3735) + _3702) * _3717))) * _3734;
                                float _4843 = isnan(0.0) ? _3745 : (isnan(_3745) ? 0.0 : max(_3745, 0.0));
                                float _3755 = (_3680 * _3657) * (((_3703 * 3.1415927410125732421875) * (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0)))) / ((_3725 * _3725) * ((_3670 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3681 * _3527.y;
                                frontier_phi_83_pred_1 = _3681 * _3527.x;
                                frontier_phi_83_pred_2 = _3755 * _3539.z;
                                frontier_phi_83_pred_3 = _3755 * _3539.y;
                                frontier_phi_83_pred_4 = _3755 * _3539.x;
                                frontier_phi_83_pred_5 = _3681 * _3527.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3763 = frontier_phi_83_pred;
                            _3762 = frontier_phi_83_pred_1;
                            _3761 = frontier_phi_83_pred_2;
                            _3760 = frontier_phi_83_pred_3;
                            _3759 = frontier_phi_83_pred_4;
                            _3764 = frontier_phi_83_pred_5;
                            _3469 = _3762 + _3482;
                            _3470 = _3763 + _3483;
                            _3471 = _3764 + _3484;
                            _3466 = _3759 + _3479;
                            _3467 = _3760 + _3480;
                            _3468 = _3761 + _3481;
                            if (_3486 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3479 = _3466;
                                _3480 = _3467;
                                _3481 = _3468;
                                _3482 = _3469;
                                _3483 = _3470;
                                _3484 = _3471;
                                _3485 = _3486;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3471;
                        frontier_phi_77_pred_1 = _3470;
                        frontier_phi_77_pred_2 = _3469;
                        frontier_phi_77_pred_3 = _3468;
                        frontier_phi_77_pred_4 = _3467;
                        frontier_phi_77_pred_5 = _3466;
                    }
                    _3108 = frontier_phi_77_pred;
                    _3106 = frontier_phi_77_pred_1;
                    _3104 = frontier_phi_77_pred_2;
                    _3102 = frontier_phi_77_pred_3;
                    _3100 = frontier_phi_77_pred_4;
                    _3098 = frontier_phi_77_pred_5;
                    uint _3264 = _3263 + 1u;
                    if (_3264 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3257 = _3098;
                        _3258 = _3100;
                        _3259 = _3102;
                        _3260 = _3104;
                        _3261 = _3106;
                        _3262 = _3108;
                        _3263 = _3264;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3102;
                frontier_phi_58_59_ladder_1 = _3108;
                frontier_phi_58_59_ladder_2 = _3106;
                frontier_phi_58_59_ladder_3 = _3104;
                frontier_phi_58_59_ladder_4 = _3100;
                frontier_phi_58_59_ladder_5 = _3098;
            }
            else
            {
                frontier_phi_58_59_ladder = _2973;
                frontier_phi_58_59_ladder_1 = _2979;
                frontier_phi_58_59_ladder_2 = _2977;
                frontier_phi_58_59_ladder_3 = _2975;
                frontier_phi_58_59_ladder_4 = _2971;
                frontier_phi_58_59_ladder_5 = _2969;
            }
            _3097 = frontier_phi_58_59_ladder_5;
            _3099 = frontier_phi_58_59_ladder_4;
            _3101 = frontier_phi_58_59_ladder;
            _3103 = frontier_phi_58_59_ladder_3;
            _3105 = frontier_phi_58_59_ladder_2;
            _3107 = frontier_phi_58_59_ladder_1;
        }
        float _3112 = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
        _2852 = (_3112 * _3103) + _2307;
        _2854 = (_3112 * _3105) + _2309;
        _2856 = (_3112 * _3107) + _2311;
        _2858 = ((_3097 * 0.039999999105930328369140625) * _3112) + _2637;
        _2860 = ((_3099 * 0.039999999105930328369140625) * _3112) + _2639;
        _2862 = ((_3101 * 0.039999999105930328369140625) * _3112) + _2641;
    }
    else
    {
        _2852 = _2307;
        _2854 = _2309;
        _2856 = _2311;
        _2858 = _2637;
        _2860 = _2639;
        _2862 = _2641;
    }
    uint _2868 = _1088 + uint(cbMatDynParam._m0[0u].w);
    float _2874 = cbInstanceData._m0[_2868].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_664.x - _661) * _642) + _661)) - _901) * _447) + _901);
    float _2875 = cbInstanceData._m0[_2868].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_664.y - _662) * _642) + _662)) - _902) * _447) + _902);
    float _2876 = cbInstanceData._m0[_2868].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_664.z - _663) * _642) + _663)) - _903) * _447) + _903);
    float _4859 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _4870 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _4881 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    float _2893 = (((isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0))) * (_2852 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1112))) + ((_2858 + ((isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0))) * _1948)) * cbPerFrame._m0[3u].x)) + _2874;
    float _2895 = (_2875 + ((_2860 + ((isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0))) * _1948)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0))) * (_2854 + ((isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0))) * _1112)));
    float _2897 = (_2876 + ((_2862 + ((isnan(0.0) ? _2165 : (isnan(_2165) ? 0.0 : max(_2165, 0.0))) * _1948)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0))) * (_2856 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1112)));
    float _2898 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
    float _2899 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
    float _2900 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
    float _2906 = cbMtdParam._m0[2u].x * _2874;
    float _2907 = cbMtdParam._m0[2u].y * _2875;
    float _2908 = cbMtdParam._m0[2u].z * _2876;
    float _4907 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2910 = isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0));
    uint _2911 = _1087 + 6u;
    float _2919 = _1048 / cbSceneParam._m0[86u].x;
    float _2920 = _1049 / cbSceneParam._m0[86u].y;
    vec4 _2934 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2919, _2920, (log2((isnan(cbSceneParam._m0[77u].w) ? _971 : (isnan(_971) ? cbSceneParam._m0[77u].w : min(_971, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2936 = _2934.x;
    float _2937 = _2934.y;
    float _2938 = _2934.z;
    float _2939 = _2934.w;
    float _3031;
    float _3033;
    float _3035;
    float _3037;
    if (_971 > cbSceneParam._m0[78u].w)
    {
        float _2994 = isnan(_971) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _971 : min(cbSceneParam._m0[80u].w, _971));
        float _2995 = _2994 / _971;
        float _3006 = _2995 * _1021;
        float _3007 = _1022 * _2995;
        float _3008 = (-0.0) - _3007;
        float _3009 = _2995 * _1023;
        float _3011 = (cbSceneParam._m0[77u].w * _3008) / _2994;
        float _3012 = _3011 + cbSceneParam._m0[79u].w;
        float _3013 = cbSceneParam._m0[79u].w - _3007;
        float _3019 = sqrt(((_3006 * _3006) + (_3007 * _3007)) + (_3009 * _3009));
        float _3022 = (1.0 - (cbSceneParam._m0[77u].w / _2994)) * _3019;
        float _3027 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3029 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3214;
        if (abs((_3008 - _3011) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3214 = ((((_3012 > 0.0) ? exp2(_3027 * _3012) : (2.0 - exp2(_3029 * _3012))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3022;
        }
        else
        {
            float _3158 = 1.0 / cbSceneParam._m0[80u].x;
            float _3159 = isnan(_3013) ? _3012 : (isnan(_3012) ? _3013 : max(_3012, _3013));
            float _3160 = isnan(_3013) ? _3012 : (isnan(_3012) ? _3013 : min(_3012, _3013));
            float _3169 = isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : min(_3159, 0.0));
            float _3170 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : min(_3160, 0.0));
            _3214 = ((abs(_3019 / _3008) * cbSceneParam._m0[80u].y) * ((((_3169 - _3170) * 2.0) - ((exp2(_3027 * (isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : max(_3159, 0.0)))) - exp2(_3027 * (isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0))))) * _3158)) - ((exp2(_3029 * _3169) - exp2(_3029 * _3170)) * _3158))) + (_3022 * cbSceneParam._m0[80u].z);
        }
        vec4 _3216 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2919, _2920, 1.0), 0.0);
        float _3225 = exp2((_3214 * (-1.44269502162933349609375)) * (1.0 - _3216.w));
        float _3226 = log2(_3225);
        float _3242 = log2(_2939);
        _3031 = (exp2(_3242 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3226 * cbSceneParam._m0[78u].x)) * _3216.x) / cbSceneParam._m0[78u].x)) + _2936;
        _3033 = (exp2(_3242 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3226 * cbSceneParam._m0[78u].y)) * _3216.y) / cbSceneParam._m0[78u].y)) + _2937;
        _3035 = (exp2(_3242 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3226 * cbSceneParam._m0[78u].z)) * _3216.z) / cbSceneParam._m0[78u].z)) + _2938;
        _3037 = _3225 * _2939;
    }
    else
    {
        _3031 = _2936;
        _3033 = _2937;
        _3035 = _2938;
        _3037 = _2939;
    }
    bool _3252;
    vec4 _3046;
    vec4 _3068;
    float _3070;
    float _3074;
    float _3075;
    float _3076;
    float _3079;
    float _3082;
    float _3085;
    float _3086;
    bool _3096;
    for (;;)
    {
        _3046 = cbMatDynParam._m0[0u];
        float _3048 = roundEven(_3046.y);
        bool _3049 = _3048 == 3.0;
        float _3050 = log2(_3037);
        float _3054 = exp2(_3050 * cbSceneParam._m0[78u].x);
        float _3055 = exp2(_3050 * cbSceneParam._m0[78u].y);
        float _3056 = exp2(_3050 * cbSceneParam._m0[78u].z);
        float _3057 = _3054 * _2898;
        float _3058 = _3055 * _2899;
        float _3059 = _3056 * _2900;
        float _3066 = _1037 + (-0.5);
        _3068 = cbMtdParam._m0[1u];
        _3070 = _3068.y * _3066;
        float _3073 = (_3048 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3074 = _3073 * (_3049 ? _3057 : (_3057 + (cbSceneParam._m0[72u].w * _3031)));
        _3075 = _3073 * (_3049 ? _3058 : (_3058 + (cbSceneParam._m0[72u].w * _3033)));
        _3076 = _3073 * (_3049 ? _3059 : (_3059 + (cbSceneParam._m0[72u].w * _3035)));
        _3079 = ((_2906 * _2910) * _3054) * _3073;
        _3082 = ((_2907 * _2910) * _3055) * _3073;
        _3085 = ((_2908 * _2910) * _3056) * _3073;
        _3086 = _3066 * 0.999000012874603271484375;
        _3096 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3096)
        {
            if ((cbInstanceData._m0[_1087 + 7u].x + _3086) < 0.5)
            {
                _3252 = true;
                break;
            }
        }
        uint _3193 = _1088 + uint(_3046.w);
        if ((cbInstanceData._m0[_3193].w < 1.0) && ((cbInstanceData._m0[_3193].w + _3086) < 0.5))
        {
            _3252 = true;
            break;
        }
        if ((_3070 + 1.0) < _3068.x)
        {
            _3252 = true;
            break;
        }
        _3252 = false;
        break;
    }
    float _3457;
    if (_3252)
    {
        discard_state = true;
        _3457 = 0.0;
    }
    else
    {
        _3457 = cbInstanceData._m0[_2911].w;
    }
    SV_Target.x = _3074;
    SV_Target.y = _3075;
    SV_Target.z = _3076;
    SV_Target.w = _3457;
    SV_Target_1.x = _3079;
    SV_Target_1.y = _3082;
    SV_Target_1.z = _3085;
    SV_Target_1.w = cbInstanceData._m0[_2911].w;
    discard_exit();
}


