#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1468;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _270 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _276 = _270.x * cbMtdParam._m0[9u].x;
    float _277 = _270.y * cbMtdParam._m0[9u].y;
    float _278 = _270.z * cbMtdParam._m0[9u].z;
    vec4 _305 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _333 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _362 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _385 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _393 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _385)) * (cbMtdParam._m0[17u].w + 1.0);
    float _3834 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _394 = isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0));
    float _401 = (_394 * ((_362.x * cbMtdParam._m0[11u].x) - _276)) + _276;
    float _402 = (_394 * ((_362.y * cbMtdParam._m0[11u].y) - _277)) + _277;
    float _403 = (_394 * ((_362.z * cbMtdParam._m0[11u].z) - _278)) + _278;
    float _409 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _385)) * (cbMtdParam._m0[19u].x + 1.0);
    float _3845 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0));
    float _417 = (((_333.x * cbMtdParam._m0[14u].x) - _401) * _410) + _401;
    float _418 = (((_333.y * cbMtdParam._m0[14u].y) - _402) * _410) + _402;
    float _419 = (((_333.z * cbMtdParam._m0[14u].z) - _403) * _410) + _403;
    float _435 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _444 = (_435 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _435))) * (cbMtdParam._m0[20u].x + 1.0);
    float _3856 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _445 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
    float _452 = (_445 * ((_305.x * cbMtdParam._m0[15u].x) - _417)) + _417;
    float _453 = (_445 * ((_305.y * cbMtdParam._m0[15u].y) - _418)) + _418;
    float _454 = (_445 * ((_305.z * cbMtdParam._m0[15u].z) - _419)) + _419;
    vec4 _470 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _492 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _508 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _510 = _508.x;
    float _511 = _508.y;
    float _512 = _508.z;
    float _521 = ((_492.z - _512) * _394) + _512;
    float _524 = ((((_492.x - _510) * _394) + _510) * 2.0) + (-1.0);
    float _525 = ((((_492.y - _511) * _394) + _511) * 2.0) + (-1.0);
    float _526 = dot(vec2(_524, _525), vec2(_524, _525));
    float _3867 = isnan(0.0) ? _526 : (isnan(_526) ? 0.0 : max(_526, 0.0));
    float _531 = sqrt(1.0 - (isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0))));
    float _536 = (((_470.z - _521) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _521;
    vec4 _549 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _566 = (((((((_549.z - _536) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _536) * cbMtdParam._m0[21u].z) - _536) * _445) + _536;
    float _582 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _585 = (_582 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _586 = (_582 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _611 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _615 = cbPerFrame._m0[22u].x * 2.0;
    float _616 = _615 * cbMtdParam._m0[22u].y;
    float _623 = ((_611.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _625 = (-0.0) - (cbMtdParam._m0[22u].x * ((_611.x * 0.5) + (-0.25)));
    float _627 = fract(_616);
    float _629 = fract(_616 + 0.5);
    float _640 = abs((_627 * 2.0) + (-1.0));
    vec4 _657 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_627 * _625) + _585) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_623 * _627) + _586) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _659 = _657.x;
    float _660 = _657.y;
    float _661 = _657.z;
    vec4 _662 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_629 * _625) + _585) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_623 * _629) + _586) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _704 = (cbMtdParam._m0[23u].y * _582) + TEXCOORD_6.w;
    float _705 = (cbMtdParam._m0[23u].z * _582) + TEXCOORD_9.w;
    vec4 _718 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _722 = _615 * cbMtdParam._m0[18u].x;
    float _727 = ((_718.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _729 = (-0.0) - (cbMtdParam._m0[20u].z * ((_718.x * 0.5) + (-0.25)));
    float _730 = fract(_722);
    float _732 = fract(_722 + 0.5);
    float _733 = _730 * _729;
    float _734 = _727 * _730;
    float _737 = _732 * _729;
    float _738 = _727 * _732;
    float _743 = abs((_730 * 2.0) + (-1.0));
    vec4 _759 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_733 + _704) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_734 + _705) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _761 = _759.x;
    float _762 = _759.y;
    float _763 = _759.z;
    vec4 _764 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_737 + _704) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_738 + _705) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _794 = (cbMtdParam._m0[22u].w * _582) + TEXCOORD_6.w;
    float _795 = (cbMtdParam._m0[23u].x * _582) + TEXCOORD_9.w;
    vec4 _815 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_733 + _794) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_734 + _795) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _817 = _815.x;
    float _818 = _815.y;
    float _819 = _815.z;
    vec4 _820 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_737 + _794) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_738 + _795) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _840 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3878 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _841 = isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0));
    float _849 = (((_841 * _841) * (3.0 - (_841 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _882 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _794) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _795) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _3889 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _883 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
    float _887 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_820.x - _817) * _743) + _817)) * _849) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_764.x - _761) * _743) + _761)))) * _883;
    float _891 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_820.y - _818) * _743) + _818)) * _849) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_764.y - _762) * _743) + _762)))) * _883;
    float _895 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_820.z - _819) * _743) + _819)) * _849) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_764.z - _763) * _743) + _763)))) * _883;
    float _899 = _887 - (_887 * _435);
    float _900 = _891 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _891);
    float _901 = _895 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _895);
    float _930 = ((((((_470.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _524) + (cbMtdParam._m0[20u].y * _524)) + (((((_549.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _445);
    float _933 = ((((((_470.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _525) + (cbMtdParam._m0[20u].y * _525)) + (((((_549.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _445);
    float _936 = fma(_531, _241 * NORMAL.x, fma(_933, _248 * TANGENT.x, (_234 * _226) * _930));
    float _939 = fma(_531, _241 * NORMAL.y, fma(_933, _248 * TANGENT.y, (_234 * _227) * _930));
    float _942 = fma(_531, _241 * NORMAL.z, fma(_933, _248 * TANGENT.z, (_234 * _228) * _930));
    float _946 = inversesqrt(dot(vec3(_936, _939, _942), vec3(_936, _939, _942)));
    float _947 = _946 * _936;
    float _948 = _946 * _939;
    float _949 = _946 * _942;
    float _3900 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _950 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
    float _3911 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _3922 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _3933 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _969 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1009 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1019 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1009);
    float _1020 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1009);
    float _1021 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1009);
    float _1025 = inversesqrt(dot(vec3(_1019, _1020, _1021), vec3(_1019, _1020, _1021)));
    float _1026 = _1019 * _1025;
    float _1027 = _1020 * _1025;
    float _1028 = _1021 * _1025;
    float _1034 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1035 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1054 = fma(_949, cbSceneParam._m0[5u].z, fma(_948, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _947));
    float _1057 = fma(_949, cbSceneParam._m0[6u].z, fma(_948, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _947));
    float _1060 = fma(_949, cbSceneParam._m0[7u].z, fma(_948, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _947));
    uint _1073 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1074 = _1073 + 9u;
    uint _1075 = _1074 + uint(cbMatDynParam._m0[0u].w);
    float _1081 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0)))) * cbInstanceData._m0[_1075].x;
    float _1082 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0)))) * cbInstanceData._m0[_1075].y;
    float _1083 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0)))) * cbInstanceData._m0[_1075].z;
    float _3944 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _1084 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
    float _3955 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1085 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
    float _3966 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1086 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
    vec4 _1095 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1034, cbSceneParam._m0[86u].y * _1035));
    float _1098 = _1095.x * TEXCOORD_3.w;
    float _1099 = dot(vec3(_947, _948, _949), vec3(_1026, _1027, _1028));
    float _1102 = _1099 * 2.0;
    float _1106 = (_1102 * _947) - _1026;
    float _1107 = (_1102 * _948) - _1027;
    float _1108 = (_1102 * _949) - _1028;
    float _1112 = abs(dot(vec3(_1026, _1027, _1028), vec3(_947, _948, _949)));
    float _3977 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
    float _1114 = sqrt(_950);
    float _1126 = exp2((_1114 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1114 * 3.0));
    float _1158 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1166 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1467;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1193 = fma(_1166, cbModelParam._m0[26u].z, fma(_1162, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1158));
        float _1197 = fma(_1166, cbModelParam._m0[27u].z, fma(_1162, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1158));
        float _1201 = fma(_1166, cbModelParam._m0[28u].z, fma(_1162, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1158));
        float _1225 = _1158 + _947;
        float _1226 = _1162 + _948;
        float _1227 = _1166 + _949;
        float _1237 = fma(_1227, cbModelParam._m0[26u].z, fma(_1226, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1225)) - _1193;
        float _1238 = fma(_1227, cbModelParam._m0[27u].z, fma(_1226, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1225)) - _1197;
        float _1239 = fma(_1227, cbModelParam._m0[28u].z, fma(_1226, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1225)) - _1201;
        float _1243 = inversesqrt(dot(vec3(_1237, _1238, _1239), vec3(_1237, _1238, _1239)));
        float _1256 = ((_1243 * _1237) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1193 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1257 = ((_1243 * _1238) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1197 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1258 = ((_1243 * _1239) / cbModelParam._m0[34u].z) + ((((((_1201 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1275 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1256, _1257, _1258), 0.0);
        float _1295 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1296 = _1295 * (_1261.x + (-0.5));
        float _1297 = _1295 * (_1261.y + (-0.5));
        float _1298 = _1295 * (_1261.z + (-0.5));
        float _1305 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1306 = _1305 * (_1268.x + (-0.5));
        float _1307 = _1305 * (_1268.y + (-0.5));
        float _1308 = _1305 * (_1268.z + (-0.5));
        float _1315 = exp2((_1275.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1275.x + (-0.5));
        float _1317 = _1315 * (_1275.y + (-0.5));
        float _1318 = _1315 * (_1275.z + (-0.5));
        float _1325 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1326 = _1325 * (_1282.x + (-0.5));
        float _1327 = _1325 * (_1282.y + (-0.5));
        float _1328 = _1325 * (_1282.z + (-0.5));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1332 = _1296 * 0.5;
        float _1333 = _1306 * 0.5;
        float _1334 = _1316 * 0.5;
        float _1335 = dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334));
        float _1340 = (_1335 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1335);
        float _1349 = (dot(vec3(_947, _948, _949), vec3(_1340 * _1332, _1340 * _1333, _1340 * _1334)) + 1.0) * 0.5;
        float _4003 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1359 = sqrt(((_1333 * _1333) + (_1332 * _1332)) + (_1334 * _1334)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _4014 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
        float _1361 = _1360 * 2.0;
        float _1365 = (1.0 - _1360) / (_1360 + 1.0);
        float _4025 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1366 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
        float _1375 = ((((1.0 - _1366) * (_1361 + 2.0)) * exp2(log2(isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0))) * (_1361 + 1.0))) + _1366) * _1329;
        float _1376 = _1297 * 0.5;
        float _1377 = _1307 * 0.5;
        float _1378 = _1317 * 0.5;
        float _1379 = dot(vec3(_1376, _1377, _1378), vec3(_1376, _1377, _1378));
        float _1384 = (_1379 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1379);
        float _1392 = (dot(vec3(_947, _948, _949), vec3(_1384 * _1376, _1384 * _1377, _1384 * _1378)) + 1.0) * 0.5;
        float _4036 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1401 = sqrt(((_1377 * _1377) + (_1376 * _1376)) + (_1378 * _1378)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _4047 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
        float _1403 = _1402 * 2.0;
        float _1407 = (1.0 - _1402) / (_1402 + 1.0);
        float _4058 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
        float _1417 = ((((1.0 - _1408) * (_1403 + 2.0)) * exp2(log2(isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * (_1403 + 1.0))) + _1408) * _1330;
        float _1418 = _1298 * 0.5;
        float _1419 = _1308 * 0.5;
        float _1420 = _1318 * 0.5;
        float _1421 = dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420));
        float _1426 = (_1421 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1421);
        float _1434 = (dot(vec3(_947, _948, _949), vec3(_1426 * _1418, _1426 * _1419, _1426 * _1420)) + 1.0) * 0.5;
        float _4069 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1443 = sqrt(((_1419 * _1419) + (_1418 * _1418)) + (_1420 * _1420)) / (_1331 + 9.9999997473787516355514526367188e-06);
        float _4080 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
        float _1445 = _1444 * 2.0;
        float _1449 = (1.0 - _1444) / (_1444 + 1.0);
        float _4091 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
        float _1459 = ((((1.0 - _1450) * (_1445 + 2.0)) * exp2(log2(isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * (_1445 + 1.0))) + _1450) * _1331;
        _1467 = _1298;
        _1469 = _1297;
        _1470 = _1296;
        _1471 = _1308;
        _1472 = _1307;
        _1473 = _1306;
        _1474 = _1318;
        _1475 = _1317;
        _1476 = _1316;
        _1477 = _1331;
        _1478 = _1330;
        _1479 = _1329;
        _1480 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0)));
        _1481 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)));
        _1482 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0)));
    }
    else
    {
        _1467 = _1468;
        _1469 = _1468;
        _1470 = _1468;
        _1471 = _1468;
        _1472 = _1468;
        _1473 = _1468;
        _1474 = _1468;
        _1475 = _1468;
        _1476 = _1468;
        _1477 = _1468;
        _1478 = _1468;
        _1479 = _1468;
        _1480 = 0.0;
        _1481 = 0.0;
        _1482 = 0.0;
    }
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1508 = fma(_1166, cbModelParam._m0[30u].z, fma(_1162, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1158));
        float _1512 = fma(_1166, cbModelParam._m0[31u].z, fma(_1162, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1158));
        float _1516 = fma(_1166, cbModelParam._m0[32u].z, fma(_1162, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1158));
        float _1539 = _1158 + _947;
        float _1540 = _1162 + _948;
        float _1541 = _1166 + _949;
        float _1551 = fma(_1541, cbModelParam._m0[30u].z, fma(_1540, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1539)) - _1508;
        float _1552 = fma(_1541, cbModelParam._m0[31u].z, fma(_1540, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1539)) - _1512;
        float _1553 = fma(_1541, cbModelParam._m0[32u].z, fma(_1540, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1539)) - _1516;
        float _1557 = inversesqrt(dot(vec3(_1551, _1552, _1553), vec3(_1551, _1552, _1553)));
        float _1570 = ((_1557 * _1551) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1508 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1571 = ((_1557 * _1552) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1512 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1572 = ((_1557 * _1553) / cbModelParam._m0[35u].z) + ((((((_1516 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1574 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1570, _1571, _1572), 0.0);
        vec4 _1581 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1570, _1571, _1572), 0.0);
        vec4 _1588 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1570, _1571, _1572), 0.0);
        vec4 _1595 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1570, _1571, _1572), 0.0);
        float _1607 = exp2((_1574.w + (-0.5)) * 20.0) * 2.0;
        float _1608 = _1607 * (_1574.x + (-0.5));
        float _1609 = _1607 * (_1574.y + (-0.5));
        float _1610 = _1607 * (_1574.z + (-0.5));
        float _1617 = exp2((_1581.w + (-0.5)) * 20.0) * 2.0;
        float _1618 = _1617 * (_1581.x + (-0.5));
        float _1619 = _1617 * (_1581.y + (-0.5));
        float _1620 = _1617 * (_1581.z + (-0.5));
        float _1627 = exp2((_1588.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1588.x + (-0.5));
        float _1629 = _1627 * (_1588.y + (-0.5));
        float _1630 = _1627 * (_1588.z + (-0.5));
        float _1637 = exp2((_1595.w + (-0.5)) * 20.0) * 2.0;
        float _1638 = _1637 * (_1595.x + (-0.5));
        float _1639 = _1637 * (_1595.y + (-0.5));
        float _1640 = _1637 * (_1595.z + (-0.5));
        float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1644 = _1608 * 0.5;
        float _1645 = _1618 * 0.5;
        float _1646 = _1628 * 0.5;
        float _1647 = dot(vec3(_1644, _1645, _1646), vec3(_1644, _1645, _1646));
        float _1652 = (_1647 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1647);
        float _1660 = (dot(vec3(_947, _948, _949), vec3(_1652 * _1644, _1652 * _1645, _1652 * _1646)) + 1.0) * 0.5;
        float _4132 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1669 = sqrt(((_1645 * _1645) + (_1644 * _1644)) + (_1646 * _1646)) / (_1641 + 9.9999997473787516355514526367188e-06);
        float _4143 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1670 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
        float _1671 = _1670 * 2.0;
        float _1675 = (1.0 - _1670) / (_1670 + 1.0);
        float _4154 = isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0));
        float _1676 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1685 = ((((1.0 - _1676) * (_1671 + 2.0)) * exp2(log2(isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))) * (_1671 + 1.0))) + _1676) * _1641;
        float _1686 = _1609 * 0.5;
        float _1687 = _1619 * 0.5;
        float _1688 = _1629 * 0.5;
        float _1689 = dot(vec3(_1686, _1687, _1688), vec3(_1686, _1687, _1688));
        float _1694 = (_1689 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1689);
        float _1702 = (dot(vec3(_947, _948, _949), vec3(_1694 * _1686, _1694 * _1687, _1694 * _1688)) + 1.0) * 0.5;
        float _4165 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1711 = sqrt(((_1687 * _1687) + (_1686 * _1686)) + (_1688 * _1688)) / (_1642 + 9.9999997473787516355514526367188e-06);
        float _4176 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1712 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
        float _1713 = _1712 * 2.0;
        float _1717 = (1.0 - _1712) / (_1712 + 1.0);
        float _4187 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
        float _1718 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _1727 = ((((1.0 - _1718) * (_1713 + 2.0)) * exp2(log2(isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0))) * (_1713 + 1.0))) + _1718) * _1642;
        float _1728 = _1610 * 0.5;
        float _1729 = _1620 * 0.5;
        float _1730 = _1630 * 0.5;
        float _1731 = dot(vec3(_1728, _1729, _1730), vec3(_1728, _1729, _1730));
        float _1736 = (_1731 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1731);
        float _1744 = (dot(vec3(_947, _948, _949), vec3(_1736 * _1728, _1736 * _1729, _1736 * _1730)) + 1.0) * 0.5;
        float _4198 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1753 = sqrt(((_1729 * _1729) + (_1728 * _1728)) + (_1730 * _1730)) / (_1643 + 9.9999997473787516355514526367188e-06);
        float _4209 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1754 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1755 = _1754 * 2.0;
        float _1759 = (1.0 - _1754) / (_1754 + 1.0);
        float _4220 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
        float _1760 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1769 = ((((1.0 - _1760) * (_1755 + 2.0)) * exp2(log2(isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * (_1755 + 1.0))) + _1760) * _1643;
        _1777 = _1610;
        _1778 = _1609;
        _1779 = _1608;
        _1780 = _1620;
        _1781 = _1619;
        _1782 = _1618;
        _1783 = _1630;
        _1784 = _1629;
        _1785 = _1628;
        _1786 = _1643;
        _1787 = _1642;
        _1788 = _1641;
        _1789 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0)));
        _1790 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0)));
        _1791 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0)));
    }
    else
    {
        _1777 = _1468;
        _1778 = _1468;
        _1779 = _1468;
        _1780 = _1468;
        _1781 = _1468;
        _1782 = _1468;
        _1783 = _1468;
        _1784 = _1468;
        _1785 = _1468;
        _1786 = _1468;
        _1787 = _1468;
        _1788 = _1468;
        _1789 = 0.0;
        _1790 = 0.0;
        _1791 = 0.0;
    }
    float _1801 = (cbModelParam._m0[1u].x * (_1789 - _1480)) + _1480;
    float _1802 = (cbModelParam._m0[1u].x * (_1790 - _1481)) + _1481;
    float _1803 = (cbModelParam._m0[1u].x * (_1791 - _1482)) + _1482;
    float _1824 = fma(_1803, cbSceneParam._m0[89u].z, fma(_1802, cbSceneParam._m0[89u].y, _1801 * cbSceneParam._m0[89u].x));
    float _1827 = fma(_1803, cbSceneParam._m0[90u].z, fma(_1802, cbSceneParam._m0[90u].y, _1801 * cbSceneParam._m0[90u].x));
    float _1830 = fma(_1803, cbSceneParam._m0[91u].z, fma(_1802, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1801));
    float _1845 = _1106 * 0.5;
    float _1846 = _1107 * 0.5;
    float _1847 = _1108 * 0.5;
    float _1848 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1779, _1782, _1785, _1788));
    float _1851 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1778, _1781, _1784, _1787));
    float _1854 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1777, _1780, _1783, _1786));
    float _1888;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1861 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1467, _1471, _1474, _1477));
        float _1865 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1469, _1472, _1475, _1478));
        float _1869 = dot(vec4(_1845, _1846, _1847, 1.0), vec4(_1470, _1473, _1476, _1479));
        float _1876 = dot(vec4(cbModelParam._m0[39u]), vec4(_1845, _1846, _1847, 1.0));
        _1888 = dot(vec3(isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0)), isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0)), isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1876) ? 0.0 : (isnan(0.0) ? _1876 : max(0.0, _1876))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1888 = 1.0;
    }
    float _1899;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1890 = dot(vec4(cbModelParam._m0[40u]), vec4(_1845, _1846, _1847, 1.0));
        _1899 = dot(vec3(isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0)), isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1890) ? 0.0 : (isnan(0.0) ? _1890 : max(0.0, _1890))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1899 = 1.0;
    }
    float _1903 = (_1899 * cbModelParam._m0[1u].x) + (_1888 * (1.0 - cbModelParam._m0[1u].x));
    float _1913 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _950);
    float _1914 = isnan(_1913) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1913 : min(cbModelParam._m0[25u].z, _1913));
    float _1994;
    float _1996;
    float _1998;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1961 = fma(_1166, cbModelParam._m0[13u].z, fma(_1162, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1158)) + cbModelParam._m0[13u].w;
        float _1965 = fma(_1166, cbModelParam._m0[14u].z, fma(_1162, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1158)) + cbModelParam._m0[14u].w;
        float _1969 = fma(_1166, cbModelParam._m0[15u].z, fma(_1162, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1158)) + cbModelParam._m0[15u].w;
        float _1972 = fma(_1108, cbModelParam._m0[13u].z, fma(_1107, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1106));
        float _1975 = fma(_1108, cbModelParam._m0[14u].z, fma(_1107, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1106));
        float _1978 = fma(_1108, cbModelParam._m0[15u].z, fma(_1107, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1106));
        float _2006;
        if (_1972 > 0.0)
        {
            _2006 = abs((1.0 - _1961) / _1972);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1961 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2006 = frontier_phi_14_12_ladder;
        }
        float _2228;
        if (_1975 > 0.0)
        {
            _2228 = abs((1.0 - _1965) / _1975);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1965 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2228 = frontier_phi_23_19_ladder;
        }
        float _2474;
        if (_1978 > 0.0)
        {
            _2474 = abs((1.0 - _1969) / _1978);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1978 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1969 + 1.0) / _1978);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2474 = frontier_phi_35_30_ladder;
        }
        float _2476 = isnan(_2228) ? _2006 : (isnan(_2006) ? _2228 : min(_2006, _2228));
        float _2477 = isnan(_2474) ? _2476 : (isnan(_2476) ? _2474 : min(_2476, _2474));
        float _2481 = (_2477 * _1972) + _1961;
        float _2482 = (_2477 * _1975) + _1965;
        float _2483 = (_2477 * _1978) + _1969;
        float _2484 = _2477 * 9.9999997473787516355514526367188e-05;
        float _2486 = (-1.0) - _2484;
        float _2488 = _2484 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2483 > _2488) || ((_2483 < _2486) || ((_2482 > _2488) || ((_2482 < _2486) || ((_2481 < _2486) || (_2481 > _2488))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2607 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2483, cbModelParam._m0[9u].z, fma(_2482, cbModelParam._m0[9u].y, _2481 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2483, cbModelParam._m0[10u].z, fma(_2482, cbModelParam._m0[10u].y, _2481 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2483, cbModelParam._m0[11u].z, fma(_2482, cbModelParam._m0[11u].y, _2481 * cbModelParam._m0[11u].x))), _1914);
            frontier_phi_13_35_ladder = _2607.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2607.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2607.x * cbModelParam._m0[1u].y;
        }
        _1994 = frontier_phi_13_35_ladder_2;
        _1996 = frontier_phi_13_35_ladder_1;
        _1998 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1982 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1106, _1107, _1108), _1914);
        _1994 = _1982.x * cbModelParam._m0[1u].y;
        _1996 = _1982.y * cbModelParam._m0[1u].y;
        _1998 = _1982.z * cbModelParam._m0[1u].y;
    }
    float _2002 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _950);
    float _2003 = isnan(_2002) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2002 : min(cbModelParam._m0[25u].w, _2002));
    float _2092;
    float _2094;
    float _2096;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2056 = fma(_1166, cbModelParam._m0[21u].z, fma(_1162, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1158)) + cbModelParam._m0[21u].w;
        float _2060 = fma(_1166, cbModelParam._m0[22u].z, fma(_1162, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1158)) + cbModelParam._m0[22u].w;
        float _2064 = fma(_1166, cbModelParam._m0[23u].z, fma(_1162, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1158)) + cbModelParam._m0[23u].w;
        float _2067 = fma(_1108, cbModelParam._m0[21u].z, fma(_1107, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1106));
        float _2070 = fma(_1108, cbModelParam._m0[22u].z, fma(_1107, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1106));
        float _2073 = fma(_1108, cbModelParam._m0[23u].z, fma(_1107, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1106));
        float _2233;
        if (_2067 > 0.0)
        {
            _2233 = abs((1.0 - _2056) / _2067);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2067 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2056 + 1.0) / _2067);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2233 = frontier_phi_25_21_ladder;
        }
        float _2501;
        if (_2070 > 0.0)
        {
            _2501 = abs((1.0 - _2060) / _2070);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2060 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2501 = frontier_phi_37_32_ladder;
        }
        float _2706;
        if (_2073 > 0.0)
        {
            _2706 = abs((1.0 - _2064) / _2073);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2073 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2064 + 1.0) / _2073);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2706 = frontier_phi_46_43_ladder;
        }
        float _2708 = isnan(_2501) ? _2233 : (isnan(_2233) ? _2501 : min(_2233, _2501));
        float _2709 = isnan(_2706) ? _2708 : (isnan(_2708) ? _2706 : min(_2708, _2706));
        float _2713 = (_2709 * _2067) + _2056;
        float _2714 = (_2709 * _2070) + _2060;
        float _2715 = (_2709 * _2073) + _2064;
        float _2716 = _2709 * 9.9999997473787516355514526367188e-05;
        float _2717 = (-1.0) - _2716;
        float _2719 = _2716 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2715 > _2719) || ((_2715 < _2717) || ((_2714 > _2719) || ((_2714 < _2717) || ((_2713 < _2717) || (_2713 > _2719))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2943 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2715, cbModelParam._m0[17u].z, fma(_2714, cbModelParam._m0[17u].y, _2713 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2715, cbModelParam._m0[18u].z, fma(_2714, cbModelParam._m0[18u].y, _2713 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2715, cbModelParam._m0[19u].z, fma(_2714, cbModelParam._m0[19u].y, _2713 * cbModelParam._m0[19u].x))), _2003);
            frontier_phi_22_46_ladder = _2943.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2943.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2943.x * cbModelParam._m0[1u].z;
        }
        _2092 = frontier_phi_22_46_ladder_2;
        _2094 = frontier_phi_22_46_ladder_1;
        _2096 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2076 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1106, _1107, _1108), _2003);
        _2092 = _2076.x * cbModelParam._m0[1u].z;
        _2094 = _2076.y * cbModelParam._m0[1u].z;
        _2096 = _2076.z * cbModelParam._m0[1u].z;
    }
    float _2108 = ((((1.0 - _1126) * ((_1114 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1126 * _1114)) * _1098;
    float _2109 = _2108 * ((cbModelParam._m0[1u].w * (_2092 - _1994)) + _1994);
    float _2110 = _2108 * ((cbModelParam._m0[1u].w * (_2094 - _1996)) + _1996);
    float _2111 = _2108 * ((cbModelParam._m0[1u].w * (_2096 - _1998)) + _1998);
    float _2114 = fma(_2111, cbSceneParam._m0[89u].z, fma(_2110, cbSceneParam._m0[89u].y, _2109 * cbSceneParam._m0[89u].x));
    float _2117 = fma(_2111, cbSceneParam._m0[90u].z, fma(_2110, cbSceneParam._m0[90u].y, _2109 * cbSceneParam._m0[90u].x));
    float _2120 = fma(_2111, cbSceneParam._m0[91u].z, fma(_2110, cbSceneParam._m0[91u].y, _2109 * cbSceneParam._m0[91u].x));
    vec4 _2128 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1034, _1035));
    float _2130 = _2128.w;
    float _2142 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2130);
    float _2143 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2130);
    float _2144 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2130);
    uvec4 _2148 = floatBitsToUint(cbInstanceData._m0[_1073 + 5u]);
    uint _2150 = _2148.x * 14u;
    uint _2151 = _2150 + 13u;
    float _2158 = _1098 + (-1.0);
    float _2163 = (cbLight._m0[_2151].x * _2158) + 1.0;
    float _2164 = (cbLight._m0[_2151].y * _2158) + 1.0;
    float _2165 = (cbLight._m0[_2151].z * _2158) + 1.0;
    float _2166 = (cbLight._m0[_2151].w * _2158) + 1.0;
    uint _2167 = _2150 + 5u;
    float _2173 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
    uint _2177 = _2150 + 4u;
    float _2187 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
    uint _2191 = _2150 | 1u;
    float _2202 = dot(vec3(cbLight._m0[_2150].xyz), vec3(_947, _948, _949));
    float _2205 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_947, _948, _949));
    float _4356 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _4367 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    float _2210 = (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0))) * 0.3183098733425140380859375;
    float _2212 = (isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0))) * 0.3183098733425140380859375;
    float _2219 = ((cbLight._m0[_2167].x * _2173) * _2212) + (((cbLight._m0[_2177].x * _2142) * _2187) * _2210);
    float _2220 = ((_2173 * cbLight._m0[_2167].y) * _2212) + (((cbLight._m0[_2177].y * _2143) * _2187) * _2210);
    float _2221 = ((_2173 * cbLight._m0[_2167].z) * _2212) + (((cbLight._m0[_2177].z * _2144) * _2187) * _2210);
    uvec4 _2225 = floatBitsToUint(cbLight._m0[_2150 + 12u]);
    bool _2227 = _2225.x == 0u;
    float _2238;
    float _2240;
    float _2242;
    if (_2227)
    {
        _2238 = _2219;
        _2240 = _2220;
        _2242 = _2221;
    }
    else
    {
        uint _2246 = _2150 + 6u;
        float _2262 = (dot(vec3(cbLight._m0[_2150 + 2u].xyz), vec3(_947, _948, _949)) * 0.5) + 0.5;
        float _2263 = _2262 * _2262;
        float _4378 = isnan(0.0) ? _2263 : (isnan(_2263) ? 0.0 : max(_2263, 0.0));
        float _2264 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
        float _2265 = isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0));
        _2238 = (((cbLight._m0[_2246].x * 0.3183098733425140380859375) * _2264) * _2265) + _2219;
        _2240 = (((cbLight._m0[_2246].y * 0.3183098733425140380859375) * _2264) * _2265) + _2220;
        _2242 = (((cbLight._m0[_2246].z * 0.3183098733425140380859375) * _2264) * _2265) + _2221;
    }
    bool _2245 = _2225.y == 0u;
    float _2283;
    float _2285;
    float _2287;
    if (_2245)
    {
        _2283 = _2238;
        _2285 = _2240;
        _2287 = _2242;
    }
    else
    {
        uint _2445 = _2150 + 7u;
        float _2461 = (dot(vec3(cbLight._m0[_2150 + 3u].xyz), vec3(_947, _948, _949)) * 0.5) + 0.5;
        float _2462 = _2461 * _2461;
        float _4394 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
        float _2463 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
        float _2464 = isnan(1.0) ? _2166 : (isnan(_2166) ? 1.0 : min(_2166, 1.0));
        _2283 = (((cbLight._m0[_2445].x * 0.3183098733425140380859375) * _2463) * _2464) + _2238;
        _2285 = (((cbLight._m0[_2445].y * 0.3183098733425140380859375) * _2463) * _2464) + _2240;
        _2287 = (((cbLight._m0[_2445].z * 0.3183098733425140380859375) * _2463) * _2464) + _2242;
    }
    uint _2290 = _2150 + 8u;
    float _2303 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2150].w)) * _950) * 0.949999988079071044921875);
    float _2304 = _2303 * _2303;
    float _2305 = cbLight._m0[_2150].x + _1026;
    float _2306 = cbLight._m0[_2150].y + _1027;
    float _2307 = cbLight._m0[_2150].z + _1028;
    float _2311 = inversesqrt(dot(vec3(_2305, _2306, _2307), vec3(_2305, _2306, _2307)));
    float _2312 = _2311 * _2305;
    float _2313 = _2311 * _2306;
    float _2314 = _2311 * _2307;
    float _2315 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2150].xyz));
    float _4410 = isnan(0.0) ? _2315 : (isnan(_2315) ? 0.0 : max(_2315, 0.0));
    float _2318 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
    float _4421 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _2319 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
    float _2320 = dot(vec3(_947, _948, _949), vec3(_2312, _2313, _2314));
    float _4432 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
    float _2323 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
    float _2324 = dot(vec3(cbLight._m0[_2150].xyz), vec3(_2312, _2313, _2314));
    float _4443 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
    float _2328 = _2304 * _2304;
    float _2332 = ((_2323 * _2323) * (_2328 + (-1.0))) + 1.0;
    float _2343 = (exp2(log2(1.0 - (isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2344 = 1.0 - _2304;
    float _2355 = (0.5 / (((_2319 * ((_2318 * _2344) + _2304)) + 9.9999999392252902907785028219223e-09) + (((_2319 * _2344) + _2304) * _2318))) * _2318;
    float _4454 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
    float _2357 = (isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_2328 / ((_2332 * _2332) * 3.141590118408203125));
    uint _2371 = _2150 + 9u;
    float _2382 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2191].w)) * _950) * 0.949999988079071044921875);
    float _2383 = _2382 * _2382;
    float _2384 = cbLight._m0[_2191].x + _1026;
    float _2385 = cbLight._m0[_2191].y + _1027;
    float _2386 = cbLight._m0[_2191].z + _1028;
    float _2390 = inversesqrt(dot(vec3(_2384, _2385, _2386), vec3(_2384, _2385, _2386)));
    float _2391 = _2390 * _2384;
    float _2392 = _2390 * _2385;
    float _2393 = _2390 * _2386;
    float _2394 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2191].xyz));
    float _4465 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
    float _2397 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
    float _2398 = dot(vec3(_947, _948, _949), vec3(_2391, _2392, _2393));
    float _4476 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _2401 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
    float _2402 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_2391, _2392, _2393));
    float _4487 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _2406 = _2383 * _2383;
    float _2410 = ((_2401 * _2401) * (_2406 + (-1.0))) + 1.0;
    float _2419 = (exp2(log2(1.0 - (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2420 = 1.0 - _2383;
    float _2430 = (0.5 / (((_2319 * ((_2397 * _2420) + _2383)) + 9.9999999392252902907785028219223e-09) + (((_2319 * _2420) + _2383) * _2397))) * _2397;
    float _4498 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _2432 = (isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * (_2406 / ((_2410 * _2410) * 3.141590118408203125));
    float _2442 = (((_2419 * cbLight._m0[_2371].x) * _2432) * _2173) + ((((cbLight._m0[_2290].x * _2142) * _2343) * _2357) * _2187);
    float _2443 = (((_2419 * cbLight._m0[_2371].y) * _2432) * _2173) + ((((cbLight._m0[_2290].y * _2143) * _2343) * _2357) * _2187);
    float _2444 = (((_2419 * cbLight._m0[_2371].z) * _2432) * _2173) + ((((cbLight._m0[_2290].z * _2144) * _2343) * _2357) * _2187);
    float _2506;
    float _2508;
    float _2510;
    if (_2227)
    {
        _2506 = _2442;
        _2508 = _2443;
        _2510 = _2444;
    }
    else
    {
        uint _2512 = _2150 + 2u;
        uint _2516 = _2150 + 10u;
        float _2530 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2512].w)) * _950) * 0.949999988079071044921875);
        float _2531 = _2530 * _2530;
        float _2532 = cbLight._m0[_2512].x + _1026;
        float _2533 = cbLight._m0[_2512].y + _1027;
        float _2534 = cbLight._m0[_2512].z + _1028;
        float _2538 = inversesqrt(dot(vec3(_2532, _2533, _2534), vec3(_2532, _2533, _2534)));
        float _2539 = _2538 * _2532;
        float _2540 = _2538 * _2533;
        float _2541 = _2538 * _2534;
        float _2542 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2512].xyz));
        float _4509 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
        float _2545 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _2546 = dot(vec3(_947, _948, _949), vec3(_2539, _2540, _2541));
        float _4520 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
        float _2549 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _2550 = dot(vec3(cbLight._m0[_2512].xyz), vec3(_2539, _2540, _2541));
        float _4531 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
        float _2554 = _2531 * _2531;
        float _2558 = ((_2549 * _2549) * (_2554 + (-1.0))) + 1.0;
        float _2567 = (exp2(log2(1.0 - (isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2568 = 1.0 - _2531;
        float _2578 = (0.5 / (((_2319 * ((_2545 * _2568) + _2531)) + 9.9999999392252902907785028219223e-09) + (((_2319 * _2568) + _2531) * _2545))) * _2545;
        float _4542 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
        float _2580 = (isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0))) * (_2554 / ((_2558 * _2558) * 3.141590118408203125));
        float _2581 = isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0));
        _2506 = (((_2567 * cbLight._m0[_2516].x) * _2580) * _2581) + _2442;
        _2508 = (((_2567 * cbLight._m0[_2516].y) * _2580) * _2581) + _2443;
        _2510 = (((_2567 * cbLight._m0[_2516].z) * _2580) * _2581) + _2444;
    }
    float _2616;
    float _2618;
    float _2620;
    if (_2245)
    {
        _2616 = _2506;
        _2618 = _2508;
        _2620 = _2510;
    }
    else
    {
        uint _2627 = _2150 + 3u;
        uint _2631 = _2150 + 11u;
        float _2645 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2627].w)) * _950) * 0.949999988079071044921875);
        float _2646 = _2645 * _2645;
        float _2647 = cbLight._m0[_2627].x + _1026;
        float _2648 = cbLight._m0[_2627].y + _1027;
        float _2649 = cbLight._m0[_2627].z + _1028;
        float _2653 = inversesqrt(dot(vec3(_2647, _2648, _2649), vec3(_2647, _2648, _2649)));
        float _2654 = _2653 * _2647;
        float _2655 = _2653 * _2648;
        float _2656 = _2653 * _2649;
        float _2657 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2627].xyz));
        float _4558 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
        float _2660 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
        float _2661 = dot(vec3(_947, _948, _949), vec3(_2654, _2655, _2656));
        float _4569 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
        float _2664 = isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0));
        float _2665 = dot(vec3(cbLight._m0[_2627].xyz), vec3(_2654, _2655, _2656));
        float _4580 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
        float _2669 = _2646 * _2646;
        float _2673 = ((_2664 * _2664) * (_2669 + (-1.0))) + 1.0;
        float _2682 = (exp2(log2(1.0 - (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2683 = 1.0 - _2646;
        float _2693 = (0.5 / (((_2319 * ((_2660 * _2683) + _2646)) + 9.9999999392252902907785028219223e-09) + (((_2319 * _2683) + _2646) * _2660))) * _2660;
        float _4591 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
        float _2695 = (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0))) * (_2669 / ((_2673 * _2673) * 3.141590118408203125));
        float _2696 = isnan(1.0) ? _2166 : (isnan(_2166) ? 1.0 : min(_2166, 1.0));
        _2616 = (((_2682 * cbLight._m0[_2631].x) * _2695) * _2696) + _2506;
        _2618 = (((_2682 * cbLight._m0[_2631].y) * _2695) * _2696) + _2508;
        _2620 = (((_2682 * cbLight._m0[_2631].z) * _2695) * _2696) + _2510;
    }
    float _2831;
    float _2833;
    float _2835;
    float _2837;
    float _2839;
    float _2841;
    if (_2148.y == 0u)
    {
        float _2771 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2772 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2771;
        float _2773 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2771;
        float _2774 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2771;
        uvec4 _2786 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2787 = _2786.x;
        uint _2798 = uint((float(_2786.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1035) / _2787))) + floor(float(uint(cbSceneParam._m0[85u].x * _1034) / _2787)));
        float _2808 = (log2(_2774 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2809 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        uint _2812 = uint(isnan(14.0) ? _2809 : (isnan(_2809) ? 14.0 : min(_2809, 14.0)));
        uvec4 _2817 = texelFetch(g_lightClusterGridBuffer, int(((_2812 << 2u) + (_2798 << 6u)) >> 2u));
        uint _2818 = _2817.x;
        uint _2819 = _2786.z;
        float _2948;
        float _2950;
        float _2952;
        float _2954;
        float _2956;
        float _2958;
        if (((((1u << ((_2819 >> 4u) & 15u)) + 4294967295u) & _2818) == 0u) || ((_2819 & 240u) == 0u))
        {
            _2948 = 0.0;
            _2950 = 0.0;
            _2952 = 0.0;
            _2954 = 0.0;
            _2956 = 0.0;
            _2958 = 0.0;
        }
        else
        {
            float _2949;
            float _2951;
            float _2953;
            float _2955;
            float _2957;
            float _2959;
            float _3100 = 0.0;
            float _3101 = 0.0;
            float _3102 = 0.0;
            float _3103 = 0.0;
            float _3104 = 0.0;
            float _3105 = 0.0;
            uint _3106 = 0u;
            uint _3115;
            bool _3116;
            for (;;)
            {
                _3115 = texelFetch(g_lightClassification, int((((_2812 << 5u) + (_2798 << 9u)) + (_3106 << 2u)) >> 2u)).x;
                _3116 = _3115 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3116)
                {
                    frontier_phi_61_pred = _3100;
                    frontier_phi_61_pred_1 = _3105;
                    frontier_phi_61_pred_2 = _3104;
                    frontier_phi_61_pred_3 = _3103;
                    frontier_phi_61_pred_4 = _3102;
                    frontier_phi_61_pred_5 = _3101;
                }
                else
                {
                    float _3224;
                    float _3225;
                    float _3226;
                    float _3227;
                    float _3228;
                    float _3229;
                    uint _3230;
                    _3224 = _3100;
                    _3225 = _3101;
                    _3226 = _3102;
                    _3227 = _3103;
                    _3228 = _3104;
                    _3229 = _3105;
                    _3230 = _3115;
                    float _3156;
                    float _3157;
                    float _3158;
                    float _3159;
                    float _3160;
                    float _3161;
                    for (;;)
                    {
                        uint _3234 = uint(findLSB(_3230)) + (_3106 << 5u);
                        uint _3231 = (_3230 + 4294967295u) & _3230;
                        uint _3236 = _3234 * 48u;
                        vec4 _3250 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3236)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 3u)).x));
                        uint _3256 = (_3234 * 48u) + 4u;
                        vec4 _3269 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3256)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 3u)).x));
                        uint _3275 = (_3234 * 48u) + 8u;
                        vec3 _3286 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3275)).x, texelFetch(g_PointLightRenderingBuffer, int(_3275 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3275 + 2u)).x));
                        float _3290 = _3250.x - _2772;
                        float _3291 = _3250.y - _2773;
                        float _3292 = _3250.z - _2774;
                        float _3293 = dot(vec3(_3290, _3291, _3292), vec3(_3290, _3291, _3292));
                        float _3296 = inversesqrt(_3293);
                        float _3297 = _3296 * _3290;
                        float _3298 = _3296 * _3291;
                        float _3299 = _3296 * _3292;
                        float _3300 = dot(vec3(_1054, _1057, _1060), vec3(_3297, _3298, _3299));
                        float _3305 = 1.0 - (_3293 * _3250.w);
                        float _4617 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                        float _3306 = isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0));
                        float _3307 = sqrt(_3293) * _3269.w;
                        float _3310 = 1.39999997615814208984375 / (_3307 + 1.39999997615814208984375);
                        float _3311 = _3310 * _3310;
                        float _3314 = ((1.0 - _3311) * _3300) + _3311;
                        float _3317 = _3307 * _3307;
                        float _3321 = ((isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : max(_3314, 0.0))) * _3306) / ((_3317 * 0.699999988079071044921875) + 1.0);
                        float _3325 = (-0.0) - _2772;
                        float _3326 = (-0.0) - _2773;
                        float _3327 = (-0.0) - _2774;
                        float _3331 = inversesqrt(dot(vec3(_3325, _3326, _3327), vec3(_3325, _3326, _3327)));
                        float _3332 = _3331 * _3325;
                        float _3333 = _3331 * _3326;
                        float _3334 = _3331 * _3327;
                        float _3342 = exp2(log2(1.0 / ((_3317 * 3.5) + 5.0)) * 0.25);
                        float _3343 = 1.0 - _1114;
                        float _3350 = sqrt(1.0 - ((1.0 - (_3343 * _3343)) * (1.0 - (_3342 * _3342))));
                        float _3351 = _3350 * _3350;
                        float _3352 = _3351 * _3351;
                        float _3353 = _3332 + _3297;
                        float _3354 = _3333 + _3298;
                        float _3355 = _3334 + _3299;
                        float _3359 = inversesqrt(dot(vec3(_3353, _3354, _3355), vec3(_3353, _3354, _3355)));
                        float _3363 = dot(vec3(_1054, _1057, _1060), vec3(_3332, _3333, _3334));
                        float _4633 = isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : max(_3363, 0.0));
                        float _3366 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
                        float _3367 = dot(vec3(_1054, _1057, _1060), vec3(_3359 * _3353, _3359 * _3354, _3359 * _3355));
                        float _4644 = isnan(0.0) ? _3367 : (isnan(_3367) ? 0.0 : max(_3367, 0.0));
                        float _3370 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
                        float _3374 = ((_3370 * _3370) * (_3352 + (-1.0))) + 1.0;
                        float _3375 = _3310 * _3351;
                        float _3376 = _3375 * _3375;
                        float _3379 = ((1.0 - _3376) * _3300) + _3376;
                        float _4655 = isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : max(_3379, 0.0));
                        float _3380 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
                        float _3381 = 1.0 - _3351;
                        float _3391 = (0.5 / (((_3380 * ((_3366 * _3381) + _3351)) + 9.9999999392252902907785028219223e-09) + (((_3380 * _3381) + _3351) * _3366))) * _3380;
                        float _4666 = isnan(0.0) ? _3391 : (isnan(_3391) ? 0.0 : max(_3391, 0.0));
                        float _3402 = (((_3352 * 3.1415927410125732421875) * (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0)))) / ((_3374 * _3374) * ((_3317 * 2.1991131305694580078125) + 3.141590118408203125))) * _3306;
                        _3159 = (_3321 * _3269.x) + _3227;
                        _3160 = (_3321 * _3269.y) + _3228;
                        _3161 = (_3321 * _3269.z) + _3229;
                        _3156 = (_3402 * _3286.x) + _3224;
                        _3157 = (_3402 * _3286.y) + _3225;
                        _3158 = (_3402 * _3286.z) + _3226;
                        if (_3231 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3224 = _3156;
                            _3225 = _3157;
                            _3226 = _3158;
                            _3227 = _3159;
                            _3228 = _3160;
                            _3229 = _3161;
                            _3230 = _3231;
                        }
                    }
                    frontier_phi_61_pred = _3156;
                    frontier_phi_61_pred_1 = _3161;
                    frontier_phi_61_pred_2 = _3160;
                    frontier_phi_61_pred_3 = _3159;
                    frontier_phi_61_pred_4 = _3158;
                    frontier_phi_61_pred_5 = _3157;
                }
                _2949 = frontier_phi_61_pred;
                _2959 = frontier_phi_61_pred_1;
                _2957 = frontier_phi_61_pred_2;
                _2955 = frontier_phi_61_pred_3;
                _2953 = frontier_phi_61_pred_4;
                _2951 = frontier_phi_61_pred_5;
                uint _3107 = _3106 + 1u;
                if (_3107 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3100 = _2949;
                    _3101 = _2951;
                    _3102 = _2953;
                    _3103 = _2955;
                    _3104 = _2957;
                    _3105 = _2959;
                    _3106 = _3107;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2948 = _2949;
            _2950 = _2951;
            _2952 = _2953;
            _2954 = _2955;
            _2956 = _2957;
            _2958 = _2959;
        }
        uvec4 _2962 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2963 = _2962.z;
        uint _2965 = (_2963 >> 8u) & 15u;
        float _3068;
        float _3070;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        if (((4294967295u << _2965) & _2818) == 0u)
        {
            _3068 = _2948;
            _3070 = _2950;
            _3072 = _2952;
            _3074 = _2954;
            _3076 = _2956;
            _3078 = _2958;
        }
        else
        {
            float _3093 = inversesqrt(dot(vec3(_2772, _2773, _2774), vec3(_2772, _2773, _2774)));
            float _3094 = _3093 * _2772;
            float _3095 = _3093 * _2773;
            float _3096 = _3093 * _2774;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2965 < ((_2963 >> 12u) & 15u))
            {
                float _3069;
                float _3071;
                float _3073;
                float _3075;
                float _3077;
                float _3079;
                float _3207 = _2948;
                float _3208 = _2950;
                float _3209 = _2952;
                float _3210 = _2954;
                float _3211 = _2956;
                float _3212 = _2958;
                uint _3213 = _2965;
                uint _3222;
                bool _3223;
                for (;;)
                {
                    _3222 = texelFetch(g_lightClassification, int((((_2812 << 5u) + (_2798 << 9u)) + (_3213 << 2u)) >> 2u)).x;
                    _3223 = _3222 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3223)
                    {
                        frontier_phi_67_pred = _3210;
                        frontier_phi_67_pred_1 = _3211;
                        frontier_phi_67_pred_2 = _3212;
                        frontier_phi_67_pred_3 = _3209;
                        frontier_phi_67_pred_4 = _3208;
                        frontier_phi_67_pred_5 = _3207;
                    }
                    else
                    {
                        float _3407;
                        float _3408;
                        float _3409;
                        float _3410;
                        float _3411;
                        float _3412;
                        float _3700;
                        float _3701;
                        float _3702;
                        float _3703;
                        float _3704;
                        float _3705;
                        float _3420 = _3207;
                        float _3421 = _3208;
                        float _3422 = _3209;
                        float _3423 = _3210;
                        float _3424 = _3211;
                        float _3425 = _3212;
                        uint _3426 = _3222;
                        uint _3427;
                        vec4 _3452;
                        float _3453;
                        vec4 _3468;
                        vec3 _3480;
                        vec4 _3495;
                        vec4 _3510;
                        float _3556;
                        bool _3557;
                        for (;;)
                        {
                            uint _3437 = ((_3213 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3426));
                            _3427 = (_3426 + 4294967295u) & _3426;
                            uint _3439 = _3437 * 40u;
                            _3452 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3439)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3439 + 3u)).x));
                            _3453 = _3452.w;
                            uint _3455 = (_3437 * 40u) + 4u;
                            _3468 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3455)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 3u)).x));
                            uint _3470 = (_3437 * 40u) + 8u;
                            _3480 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3470)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3470 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3470 + 2u)).x));
                            uint _3482 = (_3437 * 40u) + 16u;
                            _3495 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3482)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3482 + 3u)).x));
                            uint _3497 = (_3437 * 40u) + 20u;
                            _3510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 3u)).x));
                            uint _3512 = (_3437 * 40u) + 24u;
                            vec4 _3525 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 3u)).x));
                            uint _3531 = (_3437 * 40u) + 28u;
                            vec4 _3544 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 3u)).x));
                            _3556 = fma(_2774, _3544.z, fma(_2773, _3544.y, _3544.x * _2772)) + _3544.w;
                            _3557 = !((fma(_2774, _3525.z, fma(_2773, _3525.y, _3525.x * _2772)) + _3525.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3557)
                            {
                                float _3584 = _3452.x - _2772;
                                float _3585 = _3452.y - _2773;
                                float _3586 = _3452.z - _2774;
                                float _3587 = dot(vec3(_3584, _3585, _3586), vec3(_3584, _3585, _3586));
                                float _3590 = inversesqrt(_3587);
                                float _3591 = _3590 * _3584;
                                float _3592 = _3590 * _3585;
                                float _3593 = _3590 * _3586;
                                float _3597 = 1.0 - (_3587 / (_3453 * _3453));
                                float _4677 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0));
                                float _3598 = isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0));
                                float _3602 = sqrt(_3587) * _3468.w;
                                float _3604 = 1.39999997615814208984375 / (_3602 + 1.39999997615814208984375);
                                float _3605 = _3604 * _3604;
                                float _3608 = ((1.0 - _3605) * dot(vec3(_3591, _3592, _3593), vec3(_1054, _1057, _1060))) + _3605;
                                float _3611 = _3602 * _3602;
                                float _3615 = (fma(_2774, _3495.z, fma(_2773, _3495.y, _3495.x * _2772)) + _3495.w) / _3556;
                                float _3616 = (fma(_2774, _3510.z, fma(_2773, _3510.y, _3510.x * _2772)) + _3510.w) / _3556;
                                float _3620 = 1.0 - dot(vec2(_3615, _3616), vec2(_3615, _3616));
                                float _4693 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                                float _3621 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
                                float _3622 = _3621 * (((isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0))) * _3598) / ((_3611 * 0.699999988079071044921875) + 1.0));
                                float _3634 = exp2(log2(1.0 / ((_3611 * 3.5) + 5.0)) * 0.25);
                                float _3635 = 1.0 - _1114;
                                float _3642 = sqrt(1.0 - ((1.0 - (_3635 * _3635)) * (1.0 - (_3634 * _3634))));
                                float _3643 = _3642 * _3642;
                                float _3644 = _3643 * _3643;
                                float _3645 = _3591 - _3094;
                                float _3646 = _3592 - _3095;
                                float _3647 = _3593 - _3096;
                                float _3651 = inversesqrt(dot(vec3(_3645, _3646, _3647), vec3(_3645, _3646, _3647)));
                                float _3655 = dot(vec3(_1054, _1057, _1060), vec3((-0.0) - _3094, (-0.0) - _3095, (-0.0) - _3096));
                                float _4704 = isnan(0.0) ? _3655 : (isnan(_3655) ? 0.0 : max(_3655, 0.0));
                                float _3658 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
                                float _3659 = dot(vec3(_1054, _1057, _1060), vec3(_3651 * _3645, _3651 * _3646, _3651 * _3647));
                                float _4715 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                                float _3662 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
                                float _3666 = ((_3662 * _3662) * (_3644 + (-1.0))) + 1.0;
                                float _3667 = _3604 * _3643;
                                float _3668 = _3667 * _3667;
                                float _3674 = ((1.0 - _3668) * dot(vec3(_1054, _1057, _1060), vec3(_3591, _3592, _3593))) + _3668;
                                float _4726 = isnan(0.0) ? _3674 : (isnan(_3674) ? 0.0 : max(_3674, 0.0));
                                float _3675 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
                                float _3676 = 1.0 - _3643;
                                float _3686 = (0.5 / (((_3675 * ((_3658 * _3676) + _3643)) + 9.9999999392252902907785028219223e-09) + (((_3675 * _3676) + _3643) * _3658))) * _3675;
                                float _4737 = isnan(0.0) ? _3686 : (isnan(_3686) ? 0.0 : max(_3686, 0.0));
                                float _3696 = (_3621 * _3598) * (((_3644 * 3.1415927410125732421875) * (isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0)))) / ((_3666 * _3666) * ((_3611 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3696 * _3480.x;
                                frontier_phi_73_pred_1 = _3696 * _3480.y;
                                frontier_phi_73_pred_2 = _3622 * _3468.z;
                                frontier_phi_73_pred_3 = _3622 * _3468.y;
                                frontier_phi_73_pred_4 = _3622 * _3468.x;
                                frontier_phi_73_pred_5 = _3696 * _3480.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3700 = frontier_phi_73_pred;
                            _3701 = frontier_phi_73_pred_1;
                            _3705 = frontier_phi_73_pred_2;
                            _3704 = frontier_phi_73_pred_3;
                            _3703 = frontier_phi_73_pred_4;
                            _3702 = frontier_phi_73_pred_5;
                            _3410 = _3703 + _3423;
                            _3411 = _3704 + _3424;
                            _3412 = _3705 + _3425;
                            _3407 = _3700 + _3420;
                            _3408 = _3701 + _3421;
                            _3409 = _3702 + _3422;
                            if (_3427 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3420 = _3407;
                                _3421 = _3408;
                                _3422 = _3409;
                                _3423 = _3410;
                                _3424 = _3411;
                                _3425 = _3412;
                                _3426 = _3427;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3410;
                        frontier_phi_67_pred_1 = _3411;
                        frontier_phi_67_pred_2 = _3412;
                        frontier_phi_67_pred_3 = _3409;
                        frontier_phi_67_pred_4 = _3408;
                        frontier_phi_67_pred_5 = _3407;
                    }
                    _3075 = frontier_phi_67_pred;
                    _3077 = frontier_phi_67_pred_1;
                    _3079 = frontier_phi_67_pred_2;
                    _3073 = frontier_phi_67_pred_3;
                    _3071 = frontier_phi_67_pred_4;
                    _3069 = frontier_phi_67_pred_5;
                    uint _3214 = _3213 + 1u;
                    if (_3214 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3207 = _3069;
                        _3208 = _3071;
                        _3209 = _3073;
                        _3210 = _3075;
                        _3211 = _3077;
                        _3212 = _3079;
                        _3213 = _3214;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3077;
                frontier_phi_55_56_ladder_1 = _3079;
                frontier_phi_55_56_ladder_2 = _3075;
                frontier_phi_55_56_ladder_3 = _3073;
                frontier_phi_55_56_ladder_4 = _3071;
                frontier_phi_55_56_ladder_5 = _3069;
            }
            else
            {
                frontier_phi_55_56_ladder = _2956;
                frontier_phi_55_56_ladder_1 = _2958;
                frontier_phi_55_56_ladder_2 = _2954;
                frontier_phi_55_56_ladder_3 = _2952;
                frontier_phi_55_56_ladder_4 = _2950;
                frontier_phi_55_56_ladder_5 = _2948;
            }
            _3068 = frontier_phi_55_56_ladder_5;
            _3070 = frontier_phi_55_56_ladder_4;
            _3072 = frontier_phi_55_56_ladder_3;
            _3074 = frontier_phi_55_56_ladder_2;
            _3076 = frontier_phi_55_56_ladder;
            _3078 = frontier_phi_55_56_ladder_1;
        }
        float _3083 = isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0));
        _2831 = (_3083 * _3074) + _2283;
        _2833 = (_3083 * _3076) + _2285;
        _2835 = (_3083 * _3078) + _2287;
        _2837 = ((_3068 * 0.039999999105930328369140625) * _3083) + _2616;
        _2839 = ((_3070 * 0.039999999105930328369140625) * _3083) + _2618;
        _2841 = ((_3072 * 0.039999999105930328369140625) * _3083) + _2620;
    }
    else
    {
        _2831 = _2283;
        _2833 = _2285;
        _2835 = _2287;
        _2837 = _2616;
        _2839 = _2618;
        _2841 = _2620;
    }
    uint _2847 = _1074 + uint(cbMatDynParam._m0[0u].w);
    float _2853 = cbInstanceData._m0[_2847].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_662.x - _659) * _640) + _659)) - _899) * _445) + _899);
    float _2854 = cbInstanceData._m0[_2847].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_662.y - _660) * _640) + _660)) - _900) * _445) + _900);
    float _2855 = cbInstanceData._m0[_2847].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_662.z - _661) * _640) + _661)) - _901) * _445) + _901);
    float _4753 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _4764 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _4775 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _2872 = (((isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0))) * (_2831 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1098))) + ((_2837 + ((isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0))) * _1903)) * cbPerFrame._m0[3u].x)) + _2853;
    float _2874 = (_2854 + ((_2839 + ((isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0))) * _1903)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (_2833 + ((isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0))) * _1098)));
    float _2876 = (_2855 + ((_2841 + ((isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0))) * _1903)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0))) * (_2835 + ((isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))) * _1098)));
    float _4801 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2889 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
    uint _2890 = _1073 + 6u;
    float _2898 = _1034 / cbSceneParam._m0[86u].x;
    float _2899 = _1035 / cbSceneParam._m0[86u].y;
    vec4 _2913 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2898, _2899, (log2((isnan(cbSceneParam._m0[77u].w) ? _969 : (isnan(_969) ? cbSceneParam._m0[77u].w : min(_969, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2915 = _2913.x;
    float _2916 = _2913.y;
    float _2917 = _2913.z;
    float _2918 = _2913.w;
    float _3010;
    float _3012;
    float _3014;
    float _3016;
    if (_969 > cbSceneParam._m0[78u].w)
    {
        float _2973 = isnan(_969) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _969 : min(cbSceneParam._m0[80u].w, _969));
        float _2974 = _2973 / _969;
        float _2985 = _2974 * _1019;
        float _2986 = _1020 * _2974;
        float _2987 = (-0.0) - _2986;
        float _2988 = _2974 * _1021;
        float _2990 = (cbSceneParam._m0[77u].w * _2987) / _2973;
        float _2991 = _2990 + cbSceneParam._m0[79u].w;
        float _2992 = cbSceneParam._m0[79u].w - _2986;
        float _2998 = sqrt(((_2985 * _2985) + (_2986 * _2986)) + (_2988 * _2988));
        float _3001 = (1.0 - (cbSceneParam._m0[77u].w / _2973)) * _2998;
        float _3006 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3008 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3169;
        if (abs((_2987 - _2990) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3169 = ((((_2991 > 0.0) ? exp2(_3006 * _2991) : (2.0 - exp2(_3008 * _2991))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3001;
        }
        else
        {
            float _3129 = 1.0 / cbSceneParam._m0[80u].x;
            float _3130 = isnan(_2992) ? _2991 : (isnan(_2991) ? _2992 : max(_2991, _2992));
            float _3131 = isnan(_2992) ? _2991 : (isnan(_2991) ? _2992 : min(_2991, _2992));
            float _3140 = isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : min(_3130, 0.0));
            float _3141 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : min(_3131, 0.0));
            _3169 = ((abs(_2998 / _2987) * cbSceneParam._m0[80u].y) * ((((_3140 - _3141) * 2.0) - ((exp2(_3006 * (isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : max(_3130, 0.0)))) - exp2(_3006 * (isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0))))) * _3129)) - ((exp2(_3008 * _3140) - exp2(_3008 * _3141)) * _3129))) + (_3001 * cbSceneParam._m0[80u].z);
        }
        vec4 _3171 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2898, _2899, 1.0), 0.0);
        float _3180 = exp2((_3169 * (-1.44269502162933349609375)) * (1.0 - _3171.w));
        float _3181 = log2(_3180);
        float _3197 = log2(_2918);
        _3010 = (exp2(_3197 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].x)) * _3171.x) / cbSceneParam._m0[78u].x)) + _2915;
        _3012 = (exp2(_3197 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].y)) * _3171.y) / cbSceneParam._m0[78u].y)) + _2916;
        _3014 = (exp2(_3197 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].z)) * _3171.z) / cbSceneParam._m0[78u].z)) + _2917;
        _3016 = _3180 * _2918;
    }
    else
    {
        _3010 = _2915;
        _3012 = _2916;
        _3014 = _2917;
        _3016 = _2918;
    }
    float _3027 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3028 = _3027 == 3.0;
    float _3029 = log2(_3016);
    float _3033 = exp2(_3029 * cbSceneParam._m0[78u].x);
    float _3034 = exp2(_3029 * cbSceneParam._m0[78u].y);
    float _3035 = exp2(_3029 * cbSceneParam._m0[78u].z);
    float _3036 = _3033 * (isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0)));
    float _3037 = _3034 * (isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0)));
    float _3038 = _3035 * (isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0)));
    float _3047 = (_3027 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3047 * (_3028 ? _3036 : (_3036 + (cbSceneParam._m0[72u].w * _3010)));
    SV_Target.y = _3047 * (_3028 ? _3037 : (_3037 + (cbSceneParam._m0[72u].w * _3012)));
    SV_Target.z = _3047 * (_3028 ? _3038 : (_3038 + (cbSceneParam._m0[72u].w * _3014)));
    SV_Target.w = cbInstanceData._m0[_2890].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2853) * _2889) * _3033) * _3047;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2854) * _2889) * _3034) * _3047;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2855) * _2889) * _3035) * _3047;
    SV_Target_1.w = cbInstanceData._m0[_2890].w;
}


