#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 10) in vec4 TEXCOORD_4;
layout(location = 11) in vec4 TEXCOORD_5;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_3_1;
layout(location = 5) out vec4 TEXCOORD_6;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out float TEXCOORD_12;
layout(location = 7, component = 1) out float TEXCOORD_13;
layout(location = 7, component = 2) out float TEXCOORD_14;
layout(location = 7, component = 3) out float TEXCOORD_15;
layout(location = 8) out float TEXCOORD_16;
layout(location = 8, component = 1) out float TEXCOORD_17;
layout(location = 9) out vec4 TEXCOORD_20;
layout(location = 10) out vec4 TEXCOORD_21;
layout(location = 11) out vec3 TEXCOORD_22;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_17 = 0.0;
    TEXCOORD_20.x = 0.0;
    TEXCOORD_20.y = 0.0;
    TEXCOORD_20.z = 0.0;
    TEXCOORD_20.w = 0.0;
    TEXCOORD_21.x = 0.0;
    TEXCOORD_21.y = 0.0;
    TEXCOORD_21.z = 0.0;
    TEXCOORD_21.w = 0.0;
    TEXCOORD_22.x = 0.0;
    TEXCOORD_22.y = 0.0;
    TEXCOORD_22.z = 0.0;
    float _228 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _252 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _254 = texelFetch(g_InstanceIndexBuffer, int(_252));
    uint _255 = _254.x;
    precise float _256 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _261 = isnan(_256) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _256 : max(0.001000000047497451305389404296875, _256));
    precise float _263 = BLENDWEIGHT.x / _261;
    precise float _264 = BLENDWEIGHT.y / _261;
    precise float _265 = BLENDWEIGHT.z / _261;
    precise float _266 = BLENDWEIGHT.w / _261;
    uvec4 _273 = floatBitsToUint(cbInstanceData._m0[(_255 * 13u) + 4u]);
    uint _274 = _273.x;
    uint _276 = (_274 + uint(float(BLENDINDICES.x))) * 3u;
    uint _283 = _276 + 1u;
    uint _290 = _276 + 2u;
    precise float _297 = _263 * cbObjMatrix._m0[_276].x;
    precise float _298 = _263 * cbObjMatrix._m0[_283].x;
    precise float _299 = _263 * cbObjMatrix._m0[_290].x;
    precise float _300 = _263 * cbObjMatrix._m0[_276].y;
    precise float _301 = _263 * cbObjMatrix._m0[_283].y;
    precise float _302 = _263 * cbObjMatrix._m0[_290].y;
    precise float _303 = _263 * cbObjMatrix._m0[_276].z;
    precise float _304 = _263 * cbObjMatrix._m0[_283].z;
    precise float _305 = _263 * cbObjMatrix._m0[_290].z;
    precise float _306 = _263 * cbObjMatrix._m0[_276].w;
    precise float _307 = _263 * cbObjMatrix._m0[_283].w;
    precise float _308 = _263 * cbObjMatrix._m0[_290].w;
    uint _311 = (_274 + uint(float(BLENDINDICES.y))) * 3u;
    uint _318 = _311 + 1u;
    uint _325 = _311 + 2u;
    precise float _332 = _264 * cbObjMatrix._m0[_311].x;
    precise float _333 = _264 * cbObjMatrix._m0[_318].x;
    precise float _334 = _264 * cbObjMatrix._m0[_325].x;
    precise float _335 = _264 * cbObjMatrix._m0[_311].y;
    precise float _336 = _264 * cbObjMatrix._m0[_318].y;
    precise float _337 = _264 * cbObjMatrix._m0[_325].y;
    precise float _338 = _264 * cbObjMatrix._m0[_311].z;
    precise float _339 = _264 * cbObjMatrix._m0[_318].z;
    precise float _340 = _264 * cbObjMatrix._m0[_325].z;
    precise float _341 = _264 * cbObjMatrix._m0[_311].w;
    precise float _342 = _264 * cbObjMatrix._m0[_318].w;
    precise float _343 = _264 * cbObjMatrix._m0[_325].w;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    uint _358 = (_274 + uint(float(BLENDINDICES.z))) * 3u;
    uint _365 = _358 + 1u;
    uint _372 = _358 + 2u;
    precise float _379 = _265 * cbObjMatrix._m0[_358].x;
    precise float _380 = _265 * cbObjMatrix._m0[_365].x;
    precise float _381 = _265 * cbObjMatrix._m0[_372].x;
    precise float _382 = _265 * cbObjMatrix._m0[_358].y;
    precise float _383 = _265 * cbObjMatrix._m0[_365].y;
    precise float _384 = _265 * cbObjMatrix._m0[_372].y;
    precise float _385 = _265 * cbObjMatrix._m0[_358].z;
    precise float _386 = _265 * cbObjMatrix._m0[_365].z;
    precise float _387 = _265 * cbObjMatrix._m0[_372].z;
    precise float _388 = _265 * cbObjMatrix._m0[_358].w;
    precise float _389 = _265 * cbObjMatrix._m0[_365].w;
    precise float _390 = _265 * cbObjMatrix._m0[_372].w;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    uint _405 = (_274 + uint(float(BLENDINDICES.w))) * 3u;
    uint _412 = _405 + 1u;
    uint _419 = _405 + 2u;
    precise float _426 = _266 * cbObjMatrix._m0[_405].x;
    precise float _427 = _266 * cbObjMatrix._m0[_412].x;
    precise float _428 = _266 * cbObjMatrix._m0[_419].x;
    precise float _429 = _266 * cbObjMatrix._m0[_405].y;
    precise float _430 = _266 * cbObjMatrix._m0[_412].y;
    precise float _431 = _266 * cbObjMatrix._m0[_419].y;
    precise float _432 = _266 * cbObjMatrix._m0[_405].z;
    precise float _433 = _266 * cbObjMatrix._m0[_412].z;
    precise float _434 = _266 * cbObjMatrix._m0[_419].z;
    precise float _435 = _266 * cbObjMatrix._m0[_405].w;
    precise float _436 = _266 * cbObjMatrix._m0[_412].w;
    precise float _437 = _266 * cbObjMatrix._m0[_419].w;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = POSITION.x * _438;
    precise float _451 = POSITION.y * _441;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.z * _444;
    precise float _454 = _453 + _452;
    precise float _455 = 1.0 * _447;
    precise float _456 = _455 + _454;
    precise float _457 = POSITION.x * _439;
    precise float _458 = POSITION.y * _442;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.z * _445;
    precise float _461 = _460 + _459;
    precise float _462 = 1.0 * _448;
    precise float _463 = _462 + _461;
    precise float _464 = POSITION.x * _440;
    precise float _465 = POSITION.y * _443;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.z * _446;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * _449;
    precise float _470 = _469 + _468;
    float _645 = (((((cbPrevObjMatrix._m0[_311].w * _264) + (cbPrevObjMatrix._m0[_276].w * _263)) + (cbPrevObjMatrix._m0[_358].w * _265)) + (cbPrevObjMatrix._m0[_405].w * _266)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_311].z * _264) + (cbPrevObjMatrix._m0[_276].z * _263)) + (cbPrevObjMatrix._m0[_358].z * _265)) + (cbPrevObjMatrix._m0[_405].z * _266), fma(POSITION.y, (((cbPrevObjMatrix._m0[_311].y * _264) + (cbPrevObjMatrix._m0[_276].y * _263)) + (cbPrevObjMatrix._m0[_358].y * _265)) + (cbPrevObjMatrix._m0[_405].y * _266), ((((cbPrevObjMatrix._m0[_311].x * _264) + (cbPrevObjMatrix._m0[_276].x * _263)) + (cbPrevObjMatrix._m0[_358].x * _265)) + (cbPrevObjMatrix._m0[_405].x * _266)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _646 = (((((cbPrevObjMatrix._m0[_318].w * _264) + (cbPrevObjMatrix._m0[_283].w * _263)) + (cbPrevObjMatrix._m0[_365].w * _265)) + (cbPrevObjMatrix._m0[_412].w * _266)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_318].z * _264) + (cbPrevObjMatrix._m0[_283].z * _263)) + (cbPrevObjMatrix._m0[_365].z * _265)) + (cbPrevObjMatrix._m0[_412].z * _266), fma(POSITION.y, (((cbPrevObjMatrix._m0[_318].y * _264) + (cbPrevObjMatrix._m0[_283].y * _263)) + (cbPrevObjMatrix._m0[_365].y * _265)) + (cbPrevObjMatrix._m0[_412].y * _266), ((((cbPrevObjMatrix._m0[_318].x * _264) + (cbPrevObjMatrix._m0[_283].x * _263)) + (cbPrevObjMatrix._m0[_365].x * _265)) + (cbPrevObjMatrix._m0[_412].x * _266)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _647 = (((((cbPrevObjMatrix._m0[_325].w * _264) + (cbPrevObjMatrix._m0[_290].w * _263)) + (cbPrevObjMatrix._m0[_372].w * _265)) + (cbPrevObjMatrix._m0[_419].w * _266)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_325].z * _264) + (cbPrevObjMatrix._m0[_290].z * _263)) + (cbPrevObjMatrix._m0[_372].z * _265)) + (cbPrevObjMatrix._m0[_419].z * _266), fma(POSITION.y, (((cbPrevObjMatrix._m0[_325].y * _264) + (cbPrevObjMatrix._m0[_290].y * _263)) + (cbPrevObjMatrix._m0[_372].y * _265)) + (cbPrevObjMatrix._m0[_419].y * _266), ((((cbPrevObjMatrix._m0[_325].x * _264) + (cbPrevObjMatrix._m0[_290].x * _263)) + (cbPrevObjMatrix._m0[_372].x * _265)) + (cbPrevObjMatrix._m0[_419].x * _266)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _694 = fma(_231, _444, fma(_230, _441, _438 * _228));
    float _697 = fma(_231, _445, fma(_230, _442, _439 * _228));
    float _700 = fma(_231, _446, fma(_230, _443, _440 * _228));
    precise float _716 = _456 - cbSceneParam._m0[3u].x;
    precise float _717 = _463 - cbSceneParam._m0[3u].y;
    precise float _718 = _470 - cbSceneParam._m0[3u].z;
    precise float _746 = _716 * cbSceneParam._m0[24u].x;
    precise float _747 = _717 * cbSceneParam._m0[24u].y;
    precise float _748 = _747 + _746;
    precise float _749 = _718 * cbSceneParam._m0[24u].z;
    precise float _750 = _749 + _748;
    precise float _751 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _752 = _751 + _750;
    precise float _753 = _716 * cbSceneParam._m0[25u].x;
    precise float _754 = _717 * cbSceneParam._m0[25u].y;
    precise float _755 = _754 + _753;
    precise float _756 = _718 * cbSceneParam._m0[25u].z;
    precise float _757 = _756 + _755;
    precise float _758 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _759 = _758 + _757;
    precise float _760 = _716 * cbSceneParam._m0[26u].x;
    precise float _761 = _717 * cbSceneParam._m0[26u].y;
    precise float _762 = _761 + _760;
    precise float _763 = _718 * cbSceneParam._m0[26u].z;
    precise float _764 = _763 + _762;
    precise float _765 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _766 = _765 + _764;
    precise float _767 = _716 * cbSceneParam._m0[27u].x;
    precise float _768 = _717 * cbSceneParam._m0[27u].y;
    precise float _769 = _768 + _767;
    precise float _770 = _718 * cbSceneParam._m0[27u].z;
    precise float _771 = _770 + _769;
    precise float _772 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _773 = _772 + _771;
    gl_Position.x = _752;
    gl_Position.y = _759;
    gl_Position.z = _766;
    gl_Position.w = _773;
    POSITION_1.x = _752;
    POSITION_1.y = _759;
    POSITION_1.z = _766;
    POSITION_1.w = _773;
    NORMAL_1.x = _694;
    NORMAL_1.y = _697;
    NORMAL_1.z = _700;
    NORMAL_1.w = float(_255);
    TANGENT_1.x = fma(_242, _444, fma(_241, _441, _438 * _240));
    TANGENT_1.y = fma(_242, _445, fma(_241, _442, _439 * _240));
    TANGENT_1.z = fma(_242, _446, fma(_241, _443, _440 * _240));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_9.x = TEXCOORD_3.x;
    TEXCOORD_9.y = TEXCOORD_3.y;
    TEXCOORD_9.z = TEXCOORD_3.z;
    TEXCOORD_9.w = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_12 = TEXCOORD_4.x;
    TEXCOORD_13 = TEXCOORD_4.y;
    TEXCOORD_14 = TEXCOORD_4.z;
    TEXCOORD_15 = TEXCOORD_5.x;
    TEXCOORD_16 = TEXCOORD_5.y;
    TEXCOORD_17 = TEXCOORD_5.z;
    TEXCOORD_20.x = _752;
    TEXCOORD_20.y = _759;
    TEXCOORD_20.z = _766;
    TEXCOORD_20.w = _773;
    TEXCOORD_21.x = fma(_647, cbSceneParam._m0[29u].z, fma(_646, cbSceneParam._m0[29u].y, _645 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_21.y = fma(_647, cbSceneParam._m0[30u].z, fma(_646, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _645)) + cbSceneParam._m0[30u].w;
    TEXCOORD_21.z = fma(_647, cbSceneParam._m0[31u].z, fma(_646, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _645)) + cbSceneParam._m0[31u].w;
    TEXCOORD_21.w = fma(_647, cbSceneParam._m0[32u].z, fma(_646, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _645)) + cbSceneParam._m0[32u].w;
    TEXCOORD_22.x = _694;
    TEXCOORD_22.y = _697;
    TEXCOORD_22.z = _700;
}


