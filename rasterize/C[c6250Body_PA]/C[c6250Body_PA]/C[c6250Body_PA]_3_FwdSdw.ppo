#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_17;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1536;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _276 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _282 = _276.x * cbMtdParam._m0[9u].x;
    float _283 = _276.y * cbMtdParam._m0[9u].y;
    float _284 = _276.z * cbMtdParam._m0[9u].z;
    vec4 _311 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _339 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _368 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _391 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _399 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _391)) * (cbMtdParam._m0[17u].w + 1.0);
    float _4181 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _400 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    float _407 = (_400 * ((_368.x * cbMtdParam._m0[11u].x) - _282)) + _282;
    float _408 = (_400 * ((_368.y * cbMtdParam._m0[11u].y) - _283)) + _283;
    float _409 = (_400 * ((_368.z * cbMtdParam._m0[11u].z) - _284)) + _284;
    float _415 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _391)) * (cbMtdParam._m0[19u].x + 1.0);
    float _4192 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _416 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _423 = (((_339.x * cbMtdParam._m0[14u].x) - _407) * _416) + _407;
    float _424 = (((_339.y * cbMtdParam._m0[14u].y) - _408) * _416) + _408;
    float _425 = (((_339.z * cbMtdParam._m0[14u].z) - _409) * _416) + _409;
    float _441 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _446 = 1.0 - _441;
    float _449 = cbMtdParam._m0[20u].x + 1.0;
    float _450 = (_441 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * _446)) * _449;
    float _4203 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _451 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _458 = (_451 * ((_311.x * cbMtdParam._m0[15u].x) - _423)) + _423;
    float _459 = (_451 * ((_311.y * cbMtdParam._m0[15u].y) - _424)) + _424;
    float _460 = (_451 * ((_311.z * cbMtdParam._m0[15u].z) - _425)) + _425;
    vec4 _473 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[4u].w));
    float _475 = _473.x;
    float _493 = ((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[5u].w)).x - _475) * _400) + _475;
    float _495 = _493 - (_493 * _416);
    float _499 = (_441 - ((_391 * cbMtdParam._m0[19u].w) * _446)) * _449;
    float _4214 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _502 = _495 - (_495 * (isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))));
    vec4 _518 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _540 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _556 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _558 = _556.x;
    float _559 = _556.y;
    float _560 = _556.z;
    float _569 = ((_540.z - _560) * _400) + _560;
    float _572 = ((((_540.x - _558) * _400) + _558) * 2.0) + (-1.0);
    float _573 = ((((_540.y - _559) * _400) + _559) * 2.0) + (-1.0);
    float _574 = dot(vec2(_572, _573), vec2(_572, _573));
    float _4225 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _579 = sqrt(1.0 - (isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0))));
    float _584 = (((_518.z - _569) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _569;
    vec4 _597 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _614 = (((((((_597.z - _584) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _584) * cbMtdParam._m0[21u].z) - _584) * _451) + _584;
    float _630 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _633 = (_630 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _634 = (_630 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _659 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _663 = cbPerFrame._m0[22u].x * 2.0;
    float _664 = _663 * cbMtdParam._m0[22u].y;
    float _671 = ((_659.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _673 = (-0.0) - (cbMtdParam._m0[22u].x * ((_659.x * 0.5) + (-0.25)));
    float _675 = fract(_664);
    float _677 = fract(_664 + 0.5);
    float _688 = abs((_675 * 2.0) + (-1.0));
    vec4 _705 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_675 * _673) + _633) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_671 * _675) + _634) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _707 = _705.x;
    float _708 = _705.y;
    float _709 = _705.z;
    vec4 _710 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_677 * _673) + _633) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_671 * _677) + _634) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _752 = (cbMtdParam._m0[23u].y * _630) + TEXCOORD_6.w;
    float _753 = (cbMtdParam._m0[23u].z * _630) + TEXCOORD_9.w;
    vec4 _766 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _770 = _663 * cbMtdParam._m0[18u].x;
    float _775 = ((_766.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _777 = (-0.0) - (cbMtdParam._m0[20u].z * ((_766.x * 0.5) + (-0.25)));
    float _778 = fract(_770);
    float _780 = fract(_770 + 0.5);
    float _781 = _778 * _777;
    float _782 = _775 * _778;
    float _785 = _780 * _777;
    float _786 = _775 * _780;
    float _791 = abs((_778 * 2.0) + (-1.0));
    vec4 _807 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_781 + _752) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_782 + _753) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _809 = _807.x;
    float _810 = _807.y;
    float _811 = _807.z;
    vec4 _812 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_785 + _752) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_786 + _753) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _842 = (cbMtdParam._m0[22u].w * _630) + TEXCOORD_6.w;
    float _843 = (cbMtdParam._m0[23u].x * _630) + TEXCOORD_9.w;
    vec4 _863 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_781 + _842) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_782 + _843) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _865 = _863.x;
    float _866 = _863.y;
    float _867 = _863.z;
    vec4 _868 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_785 + _842) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_786 + _843) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _888 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4236 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _889 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _899 = (((_889 * _889) * (3.0 - (_889 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _932 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _842) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _843) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _4247 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _933 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
    float _937 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_868.x - _865) * _791) + _865)) * _899) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_812.x - _809) * _791) + _809)))) * _933;
    float _941 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_868.y - _866) * _791) + _866)) * _899) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_812.y - _810) * _791) + _810)))) * _933;
    float _945 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_868.z - _867) * _791) + _867)) * _899) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_812.z - _811) * _791) + _811)))) * _933;
    float _949 = _937 - (_937 * _441);
    float _950 = _941 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _941);
    float _951 = _945 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _945);
    float _980 = ((((((_518.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _572) + (cbMtdParam._m0[20u].y * _572)) + (((((_597.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _451);
    float _983 = ((((((_518.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _573) + (cbMtdParam._m0[20u].y * _573)) + (((((_597.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _451);
    float _986 = fma(_579, _247 * NORMAL.x, fma(_983, _254 * TANGENT.x, (_240 * _232) * _980));
    float _989 = fma(_579, _247 * NORMAL.y, fma(_983, _254 * TANGENT.y, (_240 * _233) * _980));
    float _992 = fma(_579, _247 * NORMAL.z, fma(_983, _254 * TANGENT.z, (_240 * _234) * _980));
    float _996 = inversesqrt(dot(vec3(_986, _989, _992), vec3(_986, _989, _992)));
    float _997 = _996 * _986;
    float _998 = _996 * _989;
    float _999 = _996 * _992;
    float _4258 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _1000 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    float _4269 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _4280 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _4291 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
    float _4302 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _1004 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
    float _1020 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1060 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1070 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1060);
    float _1071 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1060);
    float _1072 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1060);
    float _1076 = inversesqrt(dot(vec3(_1070, _1071, _1072), vec3(_1070, _1071, _1072)));
    float _1077 = _1070 * _1076;
    float _1078 = _1071 * _1076;
    float _1079 = _1072 * _1076;
    float _1085 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1086 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1104 = fma(_999, cbSceneParam._m0[5u].z, fma(_998, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _997));
    float _1107 = fma(_999, cbSceneParam._m0[6u].z, fma(_998, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _997));
    float _1110 = fma(_999, cbSceneParam._m0[7u].z, fma(_998, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _997));
    uint _1123 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1124 = _1123 + 9u;
    uint _1125 = _1124 + uint(cbMatDynParam._m0[0u].w);
    float _1131 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0)))) * cbInstanceData._m0[_1125].x;
    float _1132 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0)))) * cbInstanceData._m0[_1125].y;
    float _1133 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0)))) * cbInstanceData._m0[_1125].z;
    float _4313 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _1134 = isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0));
    float _4324 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1135 = isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0));
    float _4335 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
    float _1136 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
    float _1137 = 1.0 - _1004;
    float _1138 = _1134 * _1137;
    float _1139 = _1135 * _1137;
    float _1140 = _1136 * _1137;
    float _1145 = (_1134 + (-0.039999999105930328369140625)) * _1004;
    float _1146 = (_1135 + (-0.039999999105930328369140625)) * _1004;
    float _1147 = (_1136 + (-0.039999999105930328369140625)) * _1004;
    float _1148 = _1145 + 0.039999999105930328369140625;
    float _1150 = _1146 + 0.039999999105930328369140625;
    float _1151 = _1147 + 0.039999999105930328369140625;
    vec4 _1160 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1085, cbSceneParam._m0[86u].y * _1086));
    float _1163 = _1160.x * TEXCOORD_3.w;
    float _1164 = dot(vec3(_997, _998, _999), vec3(_1077, _1078, _1079));
    float _1167 = _1164 * 2.0;
    float _1171 = (_1167 * _997) - _1077;
    float _1172 = (_1167 * _998) - _1078;
    float _1173 = (_1167 * _999) - _1079;
    float _1177 = abs(dot(vec3(_1077, _1078, _1079), vec3(_997, _998, _999)));
    float _4346 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
    float _1179 = sqrt(_1000);
    float _1191 = exp2((_1179 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1179 * 3.0));
    float _1197 = (1.0 - _1191) * ((_1179 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1198 = _1191 * _1179;
    float _1226 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1230 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1234 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1535;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1261 = fma(_1234, cbModelParam._m0[26u].z, fma(_1230, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1226));
        float _1265 = fma(_1234, cbModelParam._m0[27u].z, fma(_1230, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1226));
        float _1269 = fma(_1234, cbModelParam._m0[28u].z, fma(_1230, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1226));
        float _1293 = _1226 + _997;
        float _1294 = _1230 + _998;
        float _1295 = _1234 + _999;
        float _1305 = fma(_1295, cbModelParam._m0[26u].z, fma(_1294, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1293)) - _1261;
        float _1306 = fma(_1295, cbModelParam._m0[27u].z, fma(_1294, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1293)) - _1265;
        float _1307 = fma(_1295, cbModelParam._m0[28u].z, fma(_1294, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1293)) - _1269;
        float _1311 = inversesqrt(dot(vec3(_1305, _1306, _1307), vec3(_1305, _1306, _1307)));
        float _1324 = ((_1311 * _1305) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1261 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1325 = ((_1311 * _1306) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1265 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1326 = ((_1311 * _1307) / cbModelParam._m0[34u].z) + ((((((_1269 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1324, _1325, _1326), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1324, _1325, _1326), 0.0);
        vec4 _1343 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1324, _1325, _1326), 0.0);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1324, _1325, _1326), 0.0);
        float _1363 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1364 = _1363 * (_1329.x + (-0.5));
        float _1365 = _1363 * (_1329.y + (-0.5));
        float _1366 = _1363 * (_1329.z + (-0.5));
        float _1373 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1374 = _1373 * (_1336.x + (-0.5));
        float _1375 = _1373 * (_1336.y + (-0.5));
        float _1376 = _1373 * (_1336.z + (-0.5));
        float _1383 = exp2((_1343.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1343.x + (-0.5));
        float _1385 = _1383 * (_1343.y + (-0.5));
        float _1386 = _1383 * (_1343.z + (-0.5));
        float _1393 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1350.x + (-0.5));
        float _1395 = _1393 * (_1350.y + (-0.5));
        float _1396 = _1393 * (_1350.z + (-0.5));
        float _1397 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1400 = _1364 * 0.5;
        float _1401 = _1374 * 0.5;
        float _1402 = _1384 * 0.5;
        float _1403 = dot(vec3(_1400, _1401, _1402), vec3(_1400, _1401, _1402));
        float _1408 = (_1403 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1403);
        float _1417 = (dot(vec3(_997, _998, _999), vec3(_1408 * _1400, _1408 * _1401, _1408 * _1402)) + 1.0) * 0.5;
        float _4372 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1427 = sqrt(((_1401 * _1401) + (_1400 * _1400)) + (_1402 * _1402)) / (_1397 + 9.9999997473787516355514526367188e-06);
        float _4383 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1428 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
        float _1429 = _1428 * 2.0;
        float _1433 = (1.0 - _1428) / (_1428 + 1.0);
        float _4394 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
        float _1434 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
        float _1443 = ((((1.0 - _1434) * (_1429 + 2.0)) * exp2(log2(isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0))) * (_1429 + 1.0))) + _1434) * _1397;
        float _1444 = _1365 * 0.5;
        float _1445 = _1375 * 0.5;
        float _1446 = _1385 * 0.5;
        float _1447 = dot(vec3(_1444, _1445, _1446), vec3(_1444, _1445, _1446));
        float _1452 = (_1447 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1447);
        float _1460 = (dot(vec3(_997, _998, _999), vec3(_1452 * _1444, _1452 * _1445, _1452 * _1446)) + 1.0) * 0.5;
        float _4405 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1469 = sqrt(((_1445 * _1445) + (_1444 * _1444)) + (_1446 * _1446)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _4416 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1470 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _1471 = _1470 * 2.0;
        float _1475 = (1.0 - _1470) / (_1470 + 1.0);
        float _4427 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
        float _1485 = ((((1.0 - _1476) * (_1471 + 2.0)) * exp2(log2(isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0))) * (_1471 + 1.0))) + _1476) * _1398;
        float _1486 = _1366 * 0.5;
        float _1487 = _1376 * 0.5;
        float _1488 = _1386 * 0.5;
        float _1489 = dot(vec3(_1486, _1487, _1488), vec3(_1486, _1487, _1488));
        float _1494 = (_1489 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1489);
        float _1502 = (dot(vec3(_997, _998, _999), vec3(_1494 * _1486, _1494 * _1487, _1494 * _1488)) + 1.0) * 0.5;
        float _4438 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1511 = sqrt(((_1487 * _1487) + (_1486 * _1486)) + (_1488 * _1488)) / (_1399 + 9.9999997473787516355514526367188e-06);
        float _4449 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
        float _1513 = _1512 * 2.0;
        float _1517 = (1.0 - _1512) / (_1512 + 1.0);
        float _4460 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
        float _1527 = ((((1.0 - _1518) * (_1513 + 2.0)) * exp2(log2(isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0))) * (_1513 + 1.0))) + _1518) * _1399;
        _1535 = _1366;
        _1537 = _1365;
        _1538 = _1364;
        _1539 = _1376;
        _1540 = _1375;
        _1541 = _1374;
        _1542 = _1386;
        _1543 = _1385;
        _1544 = _1384;
        _1545 = _1399;
        _1546 = _1398;
        _1547 = _1397;
        _1548 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0)));
        _1549 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0)));
        _1550 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0)));
    }
    else
    {
        _1535 = _1536;
        _1537 = _1536;
        _1538 = _1536;
        _1539 = _1536;
        _1540 = _1536;
        _1541 = _1536;
        _1542 = _1536;
        _1543 = _1536;
        _1544 = _1536;
        _1545 = _1536;
        _1546 = _1536;
        _1547 = _1536;
        _1548 = 0.0;
        _1549 = 0.0;
        _1550 = 0.0;
    }
    float _1845;
    float _1846;
    float _1847;
    float _1848;
    float _1849;
    float _1850;
    float _1851;
    float _1852;
    float _1853;
    float _1854;
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    float _1859;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1576 = fma(_1234, cbModelParam._m0[30u].z, fma(_1230, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1226));
        float _1580 = fma(_1234, cbModelParam._m0[31u].z, fma(_1230, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1226));
        float _1584 = fma(_1234, cbModelParam._m0[32u].z, fma(_1230, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1226));
        float _1607 = _1226 + _997;
        float _1608 = _1230 + _998;
        float _1609 = _1234 + _999;
        float _1619 = fma(_1609, cbModelParam._m0[30u].z, fma(_1608, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1607)) - _1576;
        float _1620 = fma(_1609, cbModelParam._m0[31u].z, fma(_1608, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1607)) - _1580;
        float _1621 = fma(_1609, cbModelParam._m0[32u].z, fma(_1608, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1607)) - _1584;
        float _1625 = inversesqrt(dot(vec3(_1619, _1620, _1621), vec3(_1619, _1620, _1621)));
        float _1638 = ((_1625 * _1619) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1576 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1639 = ((_1625 * _1620) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1580 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1640 = ((_1625 * _1621) / cbModelParam._m0[35u].z) + ((((((_1584 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1642 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1638, _1639, _1640), 0.0);
        vec4 _1649 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1638, _1639, _1640), 0.0);
        vec4 _1656 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1638, _1639, _1640), 0.0);
        vec4 _1663 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1638, _1639, _1640), 0.0);
        float _1675 = exp2((_1642.w + (-0.5)) * 20.0) * 2.0;
        float _1676 = _1675 * (_1642.x + (-0.5));
        float _1677 = _1675 * (_1642.y + (-0.5));
        float _1678 = _1675 * (_1642.z + (-0.5));
        float _1685 = exp2((_1649.w + (-0.5)) * 20.0) * 2.0;
        float _1686 = _1685 * (_1649.x + (-0.5));
        float _1687 = _1685 * (_1649.y + (-0.5));
        float _1688 = _1685 * (_1649.z + (-0.5));
        float _1695 = exp2((_1656.w + (-0.5)) * 20.0) * 2.0;
        float _1696 = _1695 * (_1656.x + (-0.5));
        float _1697 = _1695 * (_1656.y + (-0.5));
        float _1698 = _1695 * (_1656.z + (-0.5));
        float _1705 = exp2((_1663.w + (-0.5)) * 20.0) * 2.0;
        float _1706 = _1705 * (_1663.x + (-0.5));
        float _1707 = _1705 * (_1663.y + (-0.5));
        float _1708 = _1705 * (_1663.z + (-0.5));
        float _1709 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1710 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1711 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1712 = _1676 * 0.5;
        float _1713 = _1686 * 0.5;
        float _1714 = _1696 * 0.5;
        float _1715 = dot(vec3(_1712, _1713, _1714), vec3(_1712, _1713, _1714));
        float _1720 = (_1715 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1715);
        float _1728 = (dot(vec3(_997, _998, _999), vec3(_1720 * _1712, _1720 * _1713, _1720 * _1714)) + 1.0) * 0.5;
        float _4501 = isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0));
        float _1737 = sqrt(((_1713 * _1713) + (_1712 * _1712)) + (_1714 * _1714)) / (_1709 + 9.9999997473787516355514526367188e-06);
        float _4512 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1739 = _1738 * 2.0;
        float _1743 = (1.0 - _1738) / (_1738 + 1.0);
        float _4523 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
        float _1753 = ((((1.0 - _1744) * (_1739 + 2.0)) * exp2(log2(isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0))) * (_1739 + 1.0))) + _1744) * _1709;
        float _1754 = _1677 * 0.5;
        float _1755 = _1687 * 0.5;
        float _1756 = _1697 * 0.5;
        float _1757 = dot(vec3(_1754, _1755, _1756), vec3(_1754, _1755, _1756));
        float _1762 = (_1757 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1757);
        float _1770 = (dot(vec3(_997, _998, _999), vec3(_1762 * _1754, _1762 * _1755, _1762 * _1756)) + 1.0) * 0.5;
        float _4534 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
        float _1779 = sqrt(((_1755 * _1755) + (_1754 * _1754)) + (_1756 * _1756)) / (_1710 + 9.9999997473787516355514526367188e-06);
        float _4545 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1780 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _1781 = _1780 * 2.0;
        float _1785 = (1.0 - _1780) / (_1780 + 1.0);
        float _4556 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1786 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _1795 = ((((1.0 - _1786) * (_1781 + 2.0)) * exp2(log2(isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * (_1781 + 1.0))) + _1786) * _1710;
        float _1796 = _1678 * 0.5;
        float _1797 = _1688 * 0.5;
        float _1798 = _1698 * 0.5;
        float _1799 = dot(vec3(_1796, _1797, _1798), vec3(_1796, _1797, _1798));
        float _1804 = (_1799 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1799);
        float _1812 = (dot(vec3(_997, _998, _999), vec3(_1804 * _1796, _1804 * _1797, _1804 * _1798)) + 1.0) * 0.5;
        float _4567 = isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0));
        float _1821 = sqrt(((_1797 * _1797) + (_1796 * _1796)) + (_1798 * _1798)) / (_1711 + 9.9999997473787516355514526367188e-06);
        float _4578 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
        float _1822 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _1823 = _1822 * 2.0;
        float _1827 = (1.0 - _1822) / (_1822 + 1.0);
        float _4589 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1828 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
        float _1837 = ((((1.0 - _1828) * (_1823 + 2.0)) * exp2(log2(isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0))) * (_1823 + 1.0))) + _1828) * _1711;
        _1845 = _1678;
        _1846 = _1677;
        _1847 = _1676;
        _1848 = _1688;
        _1849 = _1687;
        _1850 = _1686;
        _1851 = _1698;
        _1852 = _1697;
        _1853 = _1696;
        _1854 = _1711;
        _1855 = _1710;
        _1856 = _1709;
        _1857 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0)));
        _1858 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)));
        _1859 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)));
    }
    else
    {
        _1845 = _1536;
        _1846 = _1536;
        _1847 = _1536;
        _1848 = _1536;
        _1849 = _1536;
        _1850 = _1536;
        _1851 = _1536;
        _1852 = _1536;
        _1853 = _1536;
        _1854 = _1536;
        _1855 = _1536;
        _1856 = _1536;
        _1857 = 0.0;
        _1858 = 0.0;
        _1859 = 0.0;
    }
    float _1869 = (cbModelParam._m0[1u].x * (_1857 - _1548)) + _1548;
    float _1870 = (cbModelParam._m0[1u].x * (_1858 - _1549)) + _1549;
    float _1871 = (cbModelParam._m0[1u].x * (_1859 - _1550)) + _1550;
    float _1892 = fma(_1871, cbSceneParam._m0[89u].z, fma(_1870, cbSceneParam._m0[89u].y, _1869 * cbSceneParam._m0[89u].x));
    float _1895 = fma(_1871, cbSceneParam._m0[90u].z, fma(_1870, cbSceneParam._m0[90u].y, _1869 * cbSceneParam._m0[90u].x));
    float _1898 = fma(_1871, cbSceneParam._m0[91u].z, fma(_1870, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1869));
    float _1913 = _1171 * 0.5;
    float _1914 = _1172 * 0.5;
    float _1915 = _1173 * 0.5;
    float _1916 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1847, _1850, _1853, _1856));
    float _1919 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1846, _1849, _1852, _1855));
    float _1922 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1845, _1848, _1851, _1854));
    float _1956;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1929 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1535, _1539, _1542, _1545));
        float _1933 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1537, _1540, _1543, _1546));
        float _1937 = dot(vec4(_1913, _1914, _1915, 1.0), vec4(_1538, _1541, _1544, _1547));
        float _1944 = dot(vec4(cbModelParam._m0[39u]), vec4(_1913, _1914, _1915, 1.0));
        _1956 = dot(vec3(isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0)), isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0)), isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1944) ? 0.0 : (isnan(0.0) ? _1944 : max(0.0, _1944))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1956 = 1.0;
    }
    float _1967;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1958 = dot(vec4(cbModelParam._m0[40u]), vec4(_1913, _1914, _1915, 1.0));
        _1967 = dot(vec3(isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)), isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0)), isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1958) ? 0.0 : (isnan(0.0) ? _1958 : max(0.0, _1958))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1967 = 1.0;
    }
    float _1971 = (_1967 * cbModelParam._m0[1u].x) + (_1956 * (1.0 - cbModelParam._m0[1u].x));
    float _1981 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1000);
    float _1982 = isnan(_1981) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1981 : min(cbModelParam._m0[25u].z, _1981));
    float _2062;
    float _2064;
    float _2066;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2029 = fma(_1234, cbModelParam._m0[13u].z, fma(_1230, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1226)) + cbModelParam._m0[13u].w;
        float _2033 = fma(_1234, cbModelParam._m0[14u].z, fma(_1230, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1226)) + cbModelParam._m0[14u].w;
        float _2037 = fma(_1234, cbModelParam._m0[15u].z, fma(_1230, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1226)) + cbModelParam._m0[15u].w;
        float _2040 = fma(_1173, cbModelParam._m0[13u].z, fma(_1172, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1171));
        float _2043 = fma(_1173, cbModelParam._m0[14u].z, fma(_1172, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1171));
        float _2046 = fma(_1173, cbModelParam._m0[15u].z, fma(_1172, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1171));
        float _2074;
        if (_2040 > 0.0)
        {
            _2074 = abs((1.0 - _2029) / _2040);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2040 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2029 + 1.0) / _2040);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2074 = frontier_phi_14_12_ladder;
        }
        float _2245;
        if (_2043 > 0.0)
        {
            _2245 = abs((1.0 - _2033) / _2043);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2043 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2033 + 1.0) / _2043);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2245 = frontier_phi_23_19_ladder;
        }
        float _2540;
        if (_2046 > 0.0)
        {
            _2540 = abs((1.0 - _2037) / _2046);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2046 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2037 + 1.0) / _2046);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2540 = frontier_phi_35_30_ladder;
        }
        float _2542 = isnan(_2245) ? _2074 : (isnan(_2074) ? _2245 : min(_2074, _2245));
        float _2543 = isnan(_2540) ? _2542 : (isnan(_2542) ? _2540 : min(_2542, _2540));
        float _2547 = (_2543 * _2040) + _2029;
        float _2548 = (_2543 * _2043) + _2033;
        float _2549 = (_2543 * _2046) + _2037;
        float _2550 = _2543 * 9.9999997473787516355514526367188e-05;
        float _2552 = (-1.0) - _2550;
        float _2554 = _2550 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2549 > _2554) || ((_2549 < _2552) || ((_2548 > _2554) || ((_2548 < _2552) || ((_2547 < _2552) || (_2547 > _2554))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2694 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2549, cbModelParam._m0[9u].z, fma(_2548, cbModelParam._m0[9u].y, _2547 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2549, cbModelParam._m0[10u].z, fma(_2548, cbModelParam._m0[10u].y, _2547 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2549, cbModelParam._m0[11u].z, fma(_2548, cbModelParam._m0[11u].y, _2547 * cbModelParam._m0[11u].x))), _1982);
            frontier_phi_13_35_ladder = _2694.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2694.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2694.x * cbModelParam._m0[1u].y;
        }
        _2062 = frontier_phi_13_35_ladder_2;
        _2064 = frontier_phi_13_35_ladder_1;
        _2066 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2050 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1171, _1172, _1173), _1982);
        _2062 = _2050.x * cbModelParam._m0[1u].y;
        _2064 = _2050.y * cbModelParam._m0[1u].y;
        _2066 = _2050.z * cbModelParam._m0[1u].y;
    }
    float _2070 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1000);
    float _2071 = isnan(_2070) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2070 : min(cbModelParam._m0[25u].w, _2070));
    float _2160;
    float _2162;
    float _2164;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2124 = fma(_1234, cbModelParam._m0[21u].z, fma(_1230, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1226)) + cbModelParam._m0[21u].w;
        float _2128 = fma(_1234, cbModelParam._m0[22u].z, fma(_1230, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1226)) + cbModelParam._m0[22u].w;
        float _2132 = fma(_1234, cbModelParam._m0[23u].z, fma(_1230, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1226)) + cbModelParam._m0[23u].w;
        float _2135 = fma(_1173, cbModelParam._m0[21u].z, fma(_1172, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1171));
        float _2138 = fma(_1173, cbModelParam._m0[22u].z, fma(_1172, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1171));
        float _2141 = fma(_1173, cbModelParam._m0[23u].z, fma(_1172, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1171));
        float _2250;
        if (_2135 > 0.0)
        {
            _2250 = abs((1.0 - _2124) / _2135);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2135 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2124 + 1.0) / _2135);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2250 = frontier_phi_25_21_ladder;
        }
        float _2567;
        if (_2138 > 0.0)
        {
            _2567 = abs((1.0 - _2128) / _2138);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2138 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2128 + 1.0) / _2138);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2567 = frontier_phi_37_32_ladder;
        }
        float _2905;
        if (_2141 > 0.0)
        {
            _2905 = abs((1.0 - _2132) / _2141);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2141 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2132 + 1.0) / _2141);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2905 = frontier_phi_47_44_ladder;
        }
        float _2907 = isnan(_2567) ? _2250 : (isnan(_2250) ? _2567 : min(_2250, _2567));
        float _2908 = isnan(_2905) ? _2907 : (isnan(_2907) ? _2905 : min(_2907, _2905));
        float _2912 = (_2908 * _2135) + _2124;
        float _2913 = (_2908 * _2138) + _2128;
        float _2914 = (_2908 * _2141) + _2132;
        float _2915 = _2908 * 9.9999997473787516355514526367188e-05;
        float _2916 = (-1.0) - _2915;
        float _2918 = _2915 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2914 > _2918) || ((_2914 < _2916) || ((_2913 > _2918) || ((_2913 < _2916) || ((_2912 < _2916) || (_2912 > _2918))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3036 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2914, cbModelParam._m0[17u].z, fma(_2913, cbModelParam._m0[17u].y, _2912 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2914, cbModelParam._m0[18u].z, fma(_2913, cbModelParam._m0[18u].y, _2912 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2914, cbModelParam._m0[19u].z, fma(_2913, cbModelParam._m0[19u].y, _2912 * cbModelParam._m0[19u].x))), _2071);
            frontier_phi_22_47_ladder = _3036.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3036.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3036.x * cbModelParam._m0[1u].z;
        }
        _2160 = frontier_phi_22_47_ladder_2;
        _2162 = frontier_phi_22_47_ladder_1;
        _2164 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2144 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1171, _1172, _1173), _2071);
        _2160 = _2144.x * cbModelParam._m0[1u].z;
        _2162 = _2144.y * cbModelParam._m0[1u].z;
        _2164 = _2144.z * cbModelParam._m0[1u].z;
    }
    float _2177 = (((_1197 * _1148) + _1198) * _1163) * ((cbModelParam._m0[1u].w * (_2160 - _2062)) + _2062);
    float _2179 = (((_1197 * _1150) + _1198) * _1163) * ((cbModelParam._m0[1u].w * (_2162 - _2064)) + _2064);
    float _2181 = (((_1197 * _1151) + _1198) * _1163) * ((cbModelParam._m0[1u].w * (_2164 - _2066)) + _2066);
    float _2184 = fma(_2181, cbSceneParam._m0[89u].z, fma(_2179, cbSceneParam._m0[89u].y, _2177 * cbSceneParam._m0[89u].x));
    float _2187 = fma(_2181, cbSceneParam._m0[90u].z, fma(_2179, cbSceneParam._m0[90u].y, _2177 * cbSceneParam._m0[90u].x));
    float _2190 = fma(_2181, cbSceneParam._m0[91u].z, fma(_2179, cbSceneParam._m0[91u].y, _2177 * cbSceneParam._m0[91u].x));
    float _2224 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2228 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2232 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2236 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2237 = _2224 / _2236;
    float _2238 = _2228 / _2236;
    float _2239 = _2232 / _2236;
    float _2386;
    float _2387;
    float _2388;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2266 = ((uint(_2239 > cbSceneParam._m0[59u].y) + uint(_2239 > cbSceneParam._m0[59u].x)) + uint(_2239 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2267 = _2266 + 43u;
        uint _2275 = _2266 + 44u;
        uint _2283 = _2266 + 45u;
        uint _2291 = _2266 + 46u;
        float _2302 = fma(_2236, cbSceneParam._m0[_2267].w, fma(_2232, cbSceneParam._m0[_2267].z, fma(_2228, cbSceneParam._m0[_2267].y, _2224 * cbSceneParam._m0[_2267].x)));
        float _2306 = fma(_2236, cbSceneParam._m0[_2275].w, fma(_2232, cbSceneParam._m0[_2275].z, fma(_2228, cbSceneParam._m0[_2275].y, _2224 * cbSceneParam._m0[_2275].x)));
        float _2314 = fma(_2236, cbSceneParam._m0[_2291].w, fma(_2232, cbSceneParam._m0[_2291].z, fma(_2228, cbSceneParam._m0[_2291].y, _2224 * cbSceneParam._m0[_2291].x)));
        float _2319 = cbSceneParam._m0[33u].z * _2314;
        float _2321 = cbSceneParam._m0[33u].w * _2314;
        float _2324 = fma(_2236, cbSceneParam._m0[_2283].w, fma(_2232, cbSceneParam._m0[_2283].z, fma(_2228, cbSceneParam._m0[_2283].y, _2224 * cbSceneParam._m0[_2283].x))) / _2314;
        float _2372 = (cbSceneParam._m0[33u].x - sqrt(((_2238 * _2238) + (_2237 * _2237)) + (_2239 * _2239))) * cbSceneParam._m0[33u].y;
        float _4715 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
        float _2379 = (isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2319 + _2302) / _2314, (_2321 + _2306) / _2314), _2324), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2321 + _2302) / _2314, (_2306 - _2319) / _2314), _2324), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2302 - _2319) / _2314, (_2306 - _2321) / _2314), _2324), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2302 - _2321) / _2314, (_2319 + _2306) / _2314), _2324), 0.0)).x), vec4(0.25)));
        _2386 = 1.0 - (_2379 * cbSceneParam._m0[34u].x);
        _2387 = 1.0 - (_2379 * cbSceneParam._m0[34u].y);
        _2388 = 1.0 - (_2379 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2386 = 1.0;
        _2387 = 1.0;
        _2388 = 1.0;
    }
    float _2452;
    float _2454;
    float _2456;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2440 = fma(_2236, cbSceneParam._m0[63u].w, fma(_2232, cbSceneParam._m0[63u].z, fma(_2228, cbSceneParam._m0[63u].y, _2224 * cbSceneParam._m0[63u].x)));
        float _2441 = fma(_2236, cbSceneParam._m0[60u].w, fma(_2232, cbSceneParam._m0[60u].z, fma(_2228, cbSceneParam._m0[60u].y, _2224 * cbSceneParam._m0[60u].x))) / _2440;
        float _2442 = fma(_2236, cbSceneParam._m0[61u].w, fma(_2232, cbSceneParam._m0[61u].z, fma(_2228, cbSceneParam._m0[61u].y, _2224 * cbSceneParam._m0[61u].x))) / _2440;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2441 >= cbSceneParam._m0[64u].x) && (_2442 >= cbSceneParam._m0[64u].y)) && (_2441 <= cbSceneParam._m0[64u].z)) && (_2442 <= cbSceneParam._m0[64u].w))
        {
            float _2580 = fma(_2236, cbSceneParam._m0[62u].w, fma(_2232, cbSceneParam._m0[62u].z, fma(_2228, cbSceneParam._m0[62u].y, _2224 * cbSceneParam._m0[62u].x))) / _2440;
            float _2584 = isnan(cbSceneParam._m0[41u].w) ? _2580 : (isnan(_2580) ? cbSceneParam._m0[41u].w : max(_2580, cbSceneParam._m0[41u].w));
            float _2627 = (cbSceneParam._m0[33u].x - sqrt(((_2238 * _2238) + (_2237 * _2237)) + (_2239 * _2239))) * cbSceneParam._m0[33u].y;
            float _4731 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
            float _2634 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2441, cbSceneParam._m0[33u].w + _2442), _2584), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2441, _2442 - cbSceneParam._m0[33u].z), _2584), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2441 - cbSceneParam._m0[33u].z, _2442 - cbSceneParam._m0[33u].w), _2584), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2441 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2442), _2584), 0.0)).x), vec4(0.25)));
            float _2638 = 1.0 - (_2634 * cbSceneParam._m0[34u].x);
            float _2639 = 1.0 - (_2634 * cbSceneParam._m0[34u].y);
            float _2640 = 1.0 - (_2634 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2640) ? _2388 : (isnan(_2388) ? _2640 : min(_2388, _2640));
            frontier_phi_34_33_ladder_1 = isnan(_2639) ? _2387 : (isnan(_2387) ? _2639 : min(_2387, _2639));
            frontier_phi_34_33_ladder_2 = isnan(_2638) ? _2386 : (isnan(_2386) ? _2638 : min(_2386, _2638));
        }
        else
        {
            frontier_phi_34_33_ladder = _2388;
            frontier_phi_34_33_ladder_1 = _2387;
            frontier_phi_34_33_ladder_2 = _2386;
        }
        _2452 = frontier_phi_34_33_ladder_2;
        _2454 = frontier_phi_34_33_ladder_1;
        _2456 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2452 = _2386;
        _2454 = _2387;
        _2456 = _2388;
    }
    uvec4 _2461 = floatBitsToUint(cbInstanceData._m0[_1123 + 5u]);
    uint _2463 = _2461.x * 14u;
    uint _2464 = _2463 + 13u;
    float _2471 = _1163 + (-1.0);
    float _2476 = (cbLight._m0[_2464].x * _2471) + 1.0;
    float _2477 = (cbLight._m0[_2464].y * _2471) + 1.0;
    float _2478 = (cbLight._m0[_2464].z * _2471) + 1.0;
    float _2479 = (cbLight._m0[_2464].w * _2471) + 1.0;
    uint _2480 = _2463 + 5u;
    float _2486 = isnan(1.0) ? _2477 : (isnan(_2477) ? 1.0 : min(_2477, 1.0));
    uint _2490 = _2463 + 4u;
    float _2499 = isnan(1.0) ? _2476 : (isnan(_2476) ? 1.0 : min(_2476, 1.0));
    uint _2503 = _2463 | 1u;
    float _2514 = dot(vec3(cbLight._m0[_2463].xyz), vec3(_997, _998, _999));
    float _2517 = dot(vec3(cbLight._m0[_2503].xyz), vec3(_997, _998, _999));
    float _4767 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
    float _4778 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
    float _2522 = (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0))) * 0.3183098733425140380859375;
    float _2524 = (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * 0.3183098733425140380859375;
    float _2531 = ((cbLight._m0[_2480].x * _2486) * _2524) + (((cbLight._m0[_2490].x * _2452) * _2499) * _2522);
    float _2532 = ((_2486 * cbLight._m0[_2480].y) * _2524) + (((cbLight._m0[_2490].y * _2454) * _2499) * _2522);
    float _2533 = ((_2486 * cbLight._m0[_2480].z) * _2524) + (((cbLight._m0[_2490].z * _2456) * _2499) * _2522);
    uvec4 _2537 = floatBitsToUint(cbLight._m0[_2463 + 12u]);
    bool _2539 = _2537.x == 0u;
    float _2641;
    float _2643;
    float _2645;
    if (_2539)
    {
        _2641 = _2531;
        _2643 = _2532;
        _2645 = _2533;
    }
    else
    {
        uint _2649 = _2463 + 6u;
        float _2665 = (dot(vec3(cbLight._m0[_2463 + 2u].xyz), vec3(_997, _998, _999)) * 0.5) + 0.5;
        float _2666 = _2665 * _2665;
        float _4789 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2667 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
        float _2668 = isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0));
        _2641 = (((cbLight._m0[_2649].x * 0.3183098733425140380859375) * _2667) * _2668) + _2531;
        _2643 = (((cbLight._m0[_2649].y * 0.3183098733425140380859375) * _2667) * _2668) + _2532;
        _2645 = (((cbLight._m0[_2649].z * 0.3183098733425140380859375) * _2667) * _2668) + _2533;
    }
    bool _2648 = _2537.y == 0u;
    float _2703;
    float _2705;
    float _2707;
    if (_2648)
    {
        _2703 = _2641;
        _2705 = _2643;
        _2707 = _2645;
    }
    else
    {
        uint _2876 = _2463 + 7u;
        float _2892 = (dot(vec3(cbLight._m0[_2463 + 3u].xyz), vec3(_997, _998, _999)) * 0.5) + 0.5;
        float _2893 = _2892 * _2892;
        float _4805 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        float _2894 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
        float _2895 = isnan(1.0) ? _2479 : (isnan(_2479) ? 1.0 : min(_2479, 1.0));
        _2703 = (((cbLight._m0[_2876].x * 0.3183098733425140380859375) * _2894) * _2895) + _2641;
        _2705 = (((cbLight._m0[_2876].y * 0.3183098733425140380859375) * _2894) * _2895) + _2643;
        _2707 = (((cbLight._m0[_2876].z * 0.3183098733425140380859375) * _2894) * _2895) + _2645;
    }
    uint _2710 = _2463 + 8u;
    float _2723 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2463].w)) * _1000) * 0.949999988079071044921875);
    float _2724 = _2723 * _2723;
    float _2725 = cbLight._m0[_2463].x + _1077;
    float _2726 = cbLight._m0[_2463].y + _1078;
    float _2727 = cbLight._m0[_2463].z + _1079;
    float _2731 = inversesqrt(dot(vec3(_2725, _2726, _2727), vec3(_2725, _2726, _2727)));
    float _2732 = _2731 * _2725;
    float _2733 = _2731 * _2726;
    float _2734 = _2731 * _2727;
    float _2735 = dot(vec3(_997, _998, _999), vec3(cbLight._m0[_2463].xyz));
    float _4821 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
    float _2738 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
    float _4832 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
    float _2739 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
    float _2740 = dot(vec3(_997, _998, _999), vec3(_2732, _2733, _2734));
    float _4843 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2743 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
    float _2744 = dot(vec3(cbLight._m0[_2463].xyz), vec3(_2732, _2733, _2734));
    float _4854 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
    float _2748 = _2724 * _2724;
    float _2752 = ((_2743 * _2743) * (_2748 + (-1.0))) + 1.0;
    float _2760 = exp2(log2(1.0 - (isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0)))) * 5.0);
    float _2761 = 0.959999978542327880859375 - _1145;
    float _2763 = 0.959999978542327880859375 - _1146;
    float _2764 = 0.959999978542327880859375 - _1147;
    float _2771 = 1.0 - _2724;
    float _2782 = (0.5 / (((_2739 * ((_2738 * _2771) + _2724)) + 9.9999999392252902907785028219223e-09) + (((_2739 * _2771) + _2724) * _2738))) * _2738;
    float _4865 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
    float _2784 = (isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_2748 / ((_2752 * _2752) * 3.141590118408203125));
    uint _2798 = _2463 + 9u;
    float _2809 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2503].w)) * _1000) * 0.949999988079071044921875);
    float _2810 = _2809 * _2809;
    float _2811 = cbLight._m0[_2503].x + _1077;
    float _2812 = cbLight._m0[_2503].y + _1078;
    float _2813 = cbLight._m0[_2503].z + _1079;
    float _2817 = inversesqrt(dot(vec3(_2811, _2812, _2813), vec3(_2811, _2812, _2813)));
    float _2818 = _2817 * _2811;
    float _2819 = _2817 * _2812;
    float _2820 = _2817 * _2813;
    float _2821 = dot(vec3(_997, _998, _999), vec3(cbLight._m0[_2503].xyz));
    float _4876 = isnan(0.0) ? _2821 : (isnan(_2821) ? 0.0 : max(_2821, 0.0));
    float _2824 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
    float _2825 = dot(vec3(_997, _998, _999), vec3(_2818, _2819, _2820));
    float _4887 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
    float _2828 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
    float _2829 = dot(vec3(cbLight._m0[_2503].xyz), vec3(_2818, _2819, _2820));
    float _4898 = isnan(0.0) ? _2829 : (isnan(_2829) ? 0.0 : max(_2829, 0.0));
    float _2833 = _2810 * _2810;
    float _2837 = ((_2828 * _2828) * (_2833 + (-1.0))) + 1.0;
    float _2844 = exp2(log2(1.0 - (isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0)))) * 5.0);
    float _2851 = 1.0 - _2810;
    float _2861 = (0.5 / (((_2739 * ((_2824 * _2851) + _2810)) + 9.9999999392252902907785028219223e-09) + (((_2739 * _2851) + _2810) * _2824))) * _2824;
    float _4909 = isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0));
    float _2863 = (isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0))) * (_2833 / ((_2837 * _2837) * 3.141590118408203125));
    float _2873 = (((((_2844 * _2761) + _1148) * cbLight._m0[_2798].x) * _2863) * _2486) + ((((cbLight._m0[_2710].x * _2452) * ((_2760 * _2761) + _1148)) * _2784) * _2499);
    float _2874 = (((((_2844 * _2763) + _1150) * cbLight._m0[_2798].y) * _2863) * _2486) + ((((cbLight._m0[_2710].y * _2454) * ((_2760 * _2763) + _1150)) * _2784) * _2499);
    float _2875 = (((((_2844 * _2764) + _1151) * cbLight._m0[_2798].z) * _2863) * _2486) + ((((cbLight._m0[_2710].z * _2456) * ((_2760 * _2764) + _1151)) * _2784) * _2499);
    float _2931;
    float _2933;
    float _2935;
    if (_2539)
    {
        _2931 = _2873;
        _2933 = _2874;
        _2935 = _2875;
    }
    else
    {
        uint _2937 = _2463 + 2u;
        uint _2941 = _2463 + 10u;
        float _2955 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2937].w)) * _1000) * 0.949999988079071044921875);
        float _2956 = _2955 * _2955;
        float _2957 = cbLight._m0[_2937].x + _1077;
        float _2958 = cbLight._m0[_2937].y + _1078;
        float _2959 = cbLight._m0[_2937].z + _1079;
        float _2963 = inversesqrt(dot(vec3(_2957, _2958, _2959), vec3(_2957, _2958, _2959)));
        float _2964 = _2963 * _2957;
        float _2965 = _2963 * _2958;
        float _2966 = _2963 * _2959;
        float _2967 = dot(vec3(_997, _998, _999), vec3(cbLight._m0[_2937].xyz));
        float _4920 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
        float _2970 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
        float _2971 = dot(vec3(_997, _998, _999), vec3(_2964, _2965, _2966));
        float _4931 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
        float _2974 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
        float _2975 = dot(vec3(cbLight._m0[_2937].xyz), vec3(_2964, _2965, _2966));
        float _4942 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
        float _2979 = _2956 * _2956;
        float _2983 = ((_2974 * _2974) * (_2979 + (-1.0))) + 1.0;
        float _2990 = exp2(log2(1.0 - (isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0)))) * 5.0);
        float _2997 = 1.0 - _2956;
        float _3007 = (0.5 / (((_2739 * ((_2970 * _2997) + _2956)) + 9.9999999392252902907785028219223e-09) + (((_2739 * _2997) + _2956) * _2970))) * _2970;
        float _4953 = isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : max(_3007, 0.0));
        float _3009 = (isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0))) * (_2979 / ((_2983 * _2983) * 3.141590118408203125));
        float _3010 = isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0));
        _2931 = (((((_2990 * _2761) + _1148) * cbLight._m0[_2941].x) * _3009) * _3010) + _2873;
        _2933 = (((((_2990 * _2763) + _1150) * cbLight._m0[_2941].y) * _3009) * _3010) + _2874;
        _2935 = (((((_2990 * _2764) + _1151) * cbLight._m0[_2941].z) * _3009) * _3010) + _2875;
    }
    float _3041;
    float _3043;
    float _3045;
    if (_2648)
    {
        _3041 = _2931;
        _3043 = _2933;
        _3045 = _2935;
    }
    else
    {
        uint _3052 = _2463 + 3u;
        uint _3056 = _2463 + 11u;
        float _3070 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3052].w)) * _1000) * 0.949999988079071044921875);
        float _3071 = _3070 * _3070;
        float _3072 = cbLight._m0[_3052].x + _1077;
        float _3073 = cbLight._m0[_3052].y + _1078;
        float _3074 = cbLight._m0[_3052].z + _1079;
        float _3078 = inversesqrt(dot(vec3(_3072, _3073, _3074), vec3(_3072, _3073, _3074)));
        float _3079 = _3078 * _3072;
        float _3080 = _3078 * _3073;
        float _3081 = _3078 * _3074;
        float _3082 = dot(vec3(_997, _998, _999), vec3(cbLight._m0[_3052].xyz));
        float _4969 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
        float _3085 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _3086 = dot(vec3(_997, _998, _999), vec3(_3079, _3080, _3081));
        float _4980 = isnan(0.0) ? _3086 : (isnan(_3086) ? 0.0 : max(_3086, 0.0));
        float _3089 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
        float _3090 = dot(vec3(cbLight._m0[_3052].xyz), vec3(_3079, _3080, _3081));
        float _4991 = isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : max(_3090, 0.0));
        float _3094 = _3071 * _3071;
        float _3098 = ((_3089 * _3089) * (_3094 + (-1.0))) + 1.0;
        float _3105 = exp2(log2(1.0 - (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0)))) * 5.0);
        float _3112 = 1.0 - _3071;
        float _3122 = (0.5 / (((_2739 * ((_3085 * _3112) + _3071)) + 9.9999999392252902907785028219223e-09) + (((_2739 * _3112) + _3071) * _3085))) * _3085;
        float _5002 = isnan(0.0) ? _3122 : (isnan(_3122) ? 0.0 : max(_3122, 0.0));
        float _3124 = (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0))) * (_3094 / ((_3098 * _3098) * 3.141590118408203125));
        float _3125 = isnan(1.0) ? _2479 : (isnan(_2479) ? 1.0 : min(_2479, 1.0));
        _3041 = (((((_3105 * _2761) + _1148) * cbLight._m0[_3056].x) * _3124) * _3125) + _2931;
        _3043 = (((((_3105 * _2763) + _1150) * cbLight._m0[_3056].y) * _3124) * _3125) + _2933;
        _3045 = (((((_3105 * _2764) + _1151) * cbLight._m0[_3056].z) * _3124) * _3125) + _2935;
    }
    float _3191;
    float _3193;
    float _3195;
    float _3197;
    float _3199;
    float _3201;
    if (_2461.y == 0u)
    {
        uvec4 _3146 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3147 = _3146.x;
        uint _3158 = uint((float(_3146.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1086) / _3147))) + floor(float(uint(cbSceneParam._m0[85u].x * _1085) / _3147)));
        float _3168 = (log2(_2239 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3169 = isnan(0.0) ? _3168 : (isnan(_3168) ? 0.0 : max(_3168, 0.0));
        uint _3172 = uint(isnan(14.0) ? _3169 : (isnan(_3169) ? 14.0 : min(_3169, 14.0)));
        uvec4 _3177 = texelFetch(g_lightClusterGridBuffer, int(((_3172 << 2u) + (_3158 << 6u)) >> 2u));
        uint _3178 = _3177.x;
        uint _3179 = _3146.z;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        float _3295;
        float _3297;
        if (((((1u << ((_3179 >> 4u) & 15u)) + 4294967295u) & _3178) == 0u) || ((_3179 & 240u) == 0u))
        {
            _3287 = 0.0;
            _3289 = 0.0;
            _3291 = 0.0;
            _3293 = 0.0;
            _3295 = 0.0;
            _3297 = 0.0;
        }
        else
        {
            float _3288;
            float _3290;
            float _3292;
            float _3294;
            float _3296;
            float _3298;
            float _3439 = 0.0;
            float _3440 = 0.0;
            float _3441 = 0.0;
            float _3442 = 0.0;
            float _3443 = 0.0;
            float _3444 = 0.0;
            uint _3445 = 0u;
            uint _3454;
            bool _3455;
            for (;;)
            {
                _3454 = texelFetch(g_lightClassification, int((((_3172 << 5u) + (_3158 << 9u)) + (_3445 << 2u)) >> 2u)).x;
                _3455 = _3454 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3455)
                {
                    frontier_phi_66_pred = _3444;
                    frontier_phi_66_pred_1 = _3443;
                    frontier_phi_66_pred_2 = _3442;
                    frontier_phi_66_pred_3 = _3441;
                    frontier_phi_66_pred_4 = _3440;
                    frontier_phi_66_pred_5 = _3439;
                }
                else
                {
                    float _3563;
                    float _3564;
                    float _3565;
                    float _3566;
                    float _3567;
                    float _3568;
                    uint _3569;
                    _3563 = _3439;
                    _3564 = _3440;
                    _3565 = _3441;
                    _3566 = _3442;
                    _3567 = _3443;
                    _3568 = _3444;
                    _3569 = _3454;
                    float _3495;
                    float _3496;
                    float _3497;
                    float _3498;
                    float _3499;
                    float _3500;
                    for (;;)
                    {
                        uint _3573 = uint(findLSB(_3569)) + (_3445 << 5u);
                        uint _3570 = (_3569 + 4294967295u) & _3569;
                        uint _3575 = _3573 * 48u;
                        vec4 _3589 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3575)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 3u)).x));
                        uint _3595 = (_3573 * 48u) + 4u;
                        vec4 _3608 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3595)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 3u)).x));
                        uint _3614 = (_3573 * 48u) + 8u;
                        vec3 _3625 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3614)).x, texelFetch(g_PointLightRenderingBuffer, int(_3614 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3614 + 2u)).x));
                        float _3629 = _3589.x - _2237;
                        float _3630 = _3589.y - _2238;
                        float _3631 = _3589.z - _2239;
                        float _3632 = dot(vec3(_3629, _3630, _3631), vec3(_3629, _3630, _3631));
                        float _3635 = inversesqrt(_3632);
                        float _3636 = _3635 * _3629;
                        float _3637 = _3635 * _3630;
                        float _3638 = _3635 * _3631;
                        float _3639 = dot(vec3(_1104, _1107, _1110), vec3(_3636, _3637, _3638));
                        float _3644 = 1.0 - (_3632 * _3589.w);
                        float _5028 = isnan(0.0) ? _3644 : (isnan(_3644) ? 0.0 : max(_3644, 0.0));
                        float _3645 = isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0));
                        float _3646 = sqrt(_3632) * _3608.w;
                        float _3649 = 1.39999997615814208984375 / (_3646 + 1.39999997615814208984375);
                        float _3650 = _3649 * _3649;
                        float _3653 = ((1.0 - _3650) * _3639) + _3650;
                        float _3656 = _3646 * _3646;
                        float _3660 = ((isnan(0.0) ? _3653 : (isnan(_3653) ? 0.0 : max(_3653, 0.0))) * _3645) / ((_3656 * 0.699999988079071044921875) + 1.0);
                        float _3664 = (-0.0) - _2237;
                        float _3665 = (-0.0) - _2238;
                        float _3666 = (-0.0) - _2239;
                        float _3670 = inversesqrt(dot(vec3(_3664, _3665, _3666), vec3(_3664, _3665, _3666)));
                        float _3671 = _3670 * _3664;
                        float _3672 = _3670 * _3665;
                        float _3673 = _3670 * _3666;
                        float _3680 = exp2(log2(1.0 / ((_3656 * 3.5) + 5.0)) * 0.25);
                        float _3681 = 1.0 - _1179;
                        float _3688 = sqrt(1.0 - ((1.0 - (_3681 * _3681)) * (1.0 - (_3680 * _3680))));
                        float _3689 = _3688 * _3688;
                        float _3690 = _3689 * _3689;
                        float _3691 = _3671 + _3636;
                        float _3692 = _3672 + _3637;
                        float _3693 = _3673 + _3638;
                        float _3697 = inversesqrt(dot(vec3(_3691, _3692, _3693), vec3(_3691, _3692, _3693)));
                        float _3701 = dot(vec3(_1104, _1107, _1110), vec3(_3671, _3672, _3673));
                        float _5044 = isnan(0.0) ? _3701 : (isnan(_3701) ? 0.0 : max(_3701, 0.0));
                        float _3704 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
                        float _3705 = dot(vec3(_1104, _1107, _1110), vec3(_3697 * _3691, _3697 * _3692, _3697 * _3693));
                        float _5055 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                        float _3708 = isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0));
                        float _3712 = ((_3708 * _3708) * (_3690 + (-1.0))) + 1.0;
                        float _3713 = _3649 * _3689;
                        float _3714 = _3713 * _3713;
                        float _3717 = ((1.0 - _3714) * _3639) + _3714;
                        float _5066 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                        float _3718 = isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0));
                        float _3719 = 1.0 - _3689;
                        float _3729 = (0.5 / (((_3718 * ((_3704 * _3719) + _3689)) + 9.9999999392252902907785028219223e-09) + (((_3718 * _3719) + _3689) * _3704))) * _3718;
                        float _5077 = isnan(0.0) ? _3729 : (isnan(_3729) ? 0.0 : max(_3729, 0.0));
                        float _3740 = (((_3690 * 3.1415927410125732421875) * (isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0)))) / ((_3712 * _3712) * ((_3656 * 2.1991131305694580078125) + 3.141590118408203125))) * _3645;
                        _3498 = (_3660 * _3608.x) + _3566;
                        _3499 = (_3660 * _3608.y) + _3567;
                        _3500 = (_3660 * _3608.z) + _3568;
                        _3495 = (_3740 * _3625.x) + _3563;
                        _3496 = (_3740 * _3625.y) + _3564;
                        _3497 = (_3740 * _3625.z) + _3565;
                        if (_3570 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3563 = _3495;
                            _3564 = _3496;
                            _3565 = _3497;
                            _3566 = _3498;
                            _3567 = _3499;
                            _3568 = _3500;
                            _3569 = _3570;
                        }
                    }
                    frontier_phi_66_pred = _3500;
                    frontier_phi_66_pred_1 = _3499;
                    frontier_phi_66_pred_2 = _3498;
                    frontier_phi_66_pred_3 = _3497;
                    frontier_phi_66_pred_4 = _3496;
                    frontier_phi_66_pred_5 = _3495;
                }
                _3298 = frontier_phi_66_pred;
                _3296 = frontier_phi_66_pred_1;
                _3294 = frontier_phi_66_pred_2;
                _3292 = frontier_phi_66_pred_3;
                _3290 = frontier_phi_66_pred_4;
                _3288 = frontier_phi_66_pred_5;
                uint _3446 = _3445 + 1u;
                if (_3446 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3439 = _3288;
                    _3440 = _3290;
                    _3441 = _3292;
                    _3442 = _3294;
                    _3443 = _3296;
                    _3444 = _3298;
                    _3445 = _3446;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3287 = _3288;
            _3289 = _3290;
            _3291 = _3292;
            _3293 = _3294;
            _3295 = _3296;
            _3297 = _3298;
        }
        uvec4 _3301 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3302 = _3301.z;
        uint _3304 = (_3302 >> 8u) & 15u;
        float _3407;
        float _3409;
        float _3411;
        float _3413;
        float _3415;
        float _3417;
        if (((4294967295u << _3304) & _3178) == 0u)
        {
            _3407 = _3287;
            _3409 = _3289;
            _3411 = _3291;
            _3413 = _3293;
            _3415 = _3295;
            _3417 = _3297;
        }
        else
        {
            float _3432 = inversesqrt(dot(vec3(_2237, _2238, _2239), vec3(_2237, _2238, _2239)));
            float _3433 = _3432 * _2237;
            float _3434 = _3432 * _2238;
            float _3435 = _3432 * _2239;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3304 < ((_3302 >> 12u) & 15u))
            {
                float _3408;
                float _3410;
                float _3412;
                float _3414;
                float _3416;
                float _3418;
                float _3546 = _3287;
                float _3547 = _3289;
                float _3548 = _3291;
                float _3549 = _3293;
                float _3550 = _3295;
                float _3551 = _3297;
                uint _3552 = _3304;
                uint _3561;
                bool _3562;
                for (;;)
                {
                    _3561 = texelFetch(g_lightClassification, int((((_3172 << 5u) + (_3158 << 9u)) + (_3552 << 2u)) >> 2u)).x;
                    _3562 = _3561 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3562)
                    {
                        frontier_phi_72_pred = _3551;
                        frontier_phi_72_pred_1 = _3550;
                        frontier_phi_72_pred_2 = _3549;
                        frontier_phi_72_pred_3 = _3548;
                        frontier_phi_72_pred_4 = _3547;
                        frontier_phi_72_pred_5 = _3546;
                    }
                    else
                    {
                        float _3745;
                        float _3746;
                        float _3747;
                        float _3748;
                        float _3749;
                        float _3750;
                        float _4038;
                        float _4039;
                        float _4040;
                        float _4041;
                        float _4042;
                        float _4043;
                        float _3758 = _3546;
                        float _3759 = _3547;
                        float _3760 = _3548;
                        float _3761 = _3549;
                        float _3762 = _3550;
                        float _3763 = _3551;
                        uint _3764 = _3561;
                        uint _3765;
                        vec4 _3790;
                        float _3791;
                        vec4 _3806;
                        vec3 _3818;
                        vec4 _3833;
                        vec4 _3848;
                        float _3894;
                        bool _3895;
                        for (;;)
                        {
                            uint _3775 = ((_3552 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3764));
                            _3765 = (_3764 + 4294967295u) & _3764;
                            uint _3777 = _3775 * 40u;
                            _3790 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3777)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 3u)).x));
                            _3791 = _3790.w;
                            uint _3793 = (_3775 * 40u) + 4u;
                            _3806 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3793)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3793 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3793 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3793 + 3u)).x));
                            uint _3808 = (_3775 * 40u) + 8u;
                            _3818 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3808)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 2u)).x));
                            uint _3820 = (_3775 * 40u) + 16u;
                            _3833 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3820)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 3u)).x));
                            uint _3835 = (_3775 * 40u) + 20u;
                            _3848 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3835)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 3u)).x));
                            uint _3850 = (_3775 * 40u) + 24u;
                            vec4 _3863 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3850)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 3u)).x));
                            uint _3869 = (_3775 * 40u) + 28u;
                            vec4 _3882 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3869)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 3u)).x));
                            _3894 = fma(_2239, _3882.z, fma(_2238, _3882.y, _3882.x * _2237)) + _3882.w;
                            _3895 = !((fma(_2239, _3863.z, fma(_2238, _3863.y, _3863.x * _2237)) + _3863.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3895)
                            {
                                float _3922 = _3790.x - _2237;
                                float _3923 = _3790.y - _2238;
                                float _3924 = _3790.z - _2239;
                                float _3925 = dot(vec3(_3922, _3923, _3924), vec3(_3922, _3923, _3924));
                                float _3928 = inversesqrt(_3925);
                                float _3929 = _3928 * _3922;
                                float _3930 = _3928 * _3923;
                                float _3931 = _3928 * _3924;
                                float _3935 = 1.0 - (_3925 / (_3791 * _3791));
                                float _5088 = isnan(0.0) ? _3935 : (isnan(_3935) ? 0.0 : max(_3935, 0.0));
                                float _3936 = isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0));
                                float _3940 = sqrt(_3925) * _3806.w;
                                float _3942 = 1.39999997615814208984375 / (_3940 + 1.39999997615814208984375);
                                float _3943 = _3942 * _3942;
                                float _3946 = ((1.0 - _3943) * dot(vec3(_3929, _3930, _3931), vec3(_1104, _1107, _1110))) + _3943;
                                float _3949 = _3940 * _3940;
                                float _3953 = (fma(_2239, _3833.z, fma(_2238, _3833.y, _3833.x * _2237)) + _3833.w) / _3894;
                                float _3954 = (fma(_2239, _3848.z, fma(_2238, _3848.y, _3848.x * _2237)) + _3848.w) / _3894;
                                float _3958 = 1.0 - dot(vec2(_3953, _3954), vec2(_3953, _3954));
                                float _5104 = isnan(0.0) ? _3958 : (isnan(_3958) ? 0.0 : max(_3958, 0.0));
                                float _3959 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
                                float _3960 = _3959 * (((isnan(0.0) ? _3946 : (isnan(_3946) ? 0.0 : max(_3946, 0.0))) * _3936) / ((_3949 * 0.699999988079071044921875) + 1.0));
                                float _3972 = exp2(log2(1.0 / ((_3949 * 3.5) + 5.0)) * 0.25);
                                float _3973 = 1.0 - _1179;
                                float _3980 = sqrt(1.0 - ((1.0 - (_3973 * _3973)) * (1.0 - (_3972 * _3972))));
                                float _3981 = _3980 * _3980;
                                float _3982 = _3981 * _3981;
                                float _3983 = _3929 - _3433;
                                float _3984 = _3930 - _3434;
                                float _3985 = _3931 - _3435;
                                float _3989 = inversesqrt(dot(vec3(_3983, _3984, _3985), vec3(_3983, _3984, _3985)));
                                float _3993 = dot(vec3(_1104, _1107, _1110), vec3((-0.0) - _3433, (-0.0) - _3434, (-0.0) - _3435));
                                float _5115 = isnan(0.0) ? _3993 : (isnan(_3993) ? 0.0 : max(_3993, 0.0));
                                float _3996 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
                                float _3997 = dot(vec3(_1104, _1107, _1110), vec3(_3989 * _3983, _3989 * _3984, _3989 * _3985));
                                float _5126 = isnan(0.0) ? _3997 : (isnan(_3997) ? 0.0 : max(_3997, 0.0));
                                float _4000 = isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0));
                                float _4004 = ((_4000 * _4000) * (_3982 + (-1.0))) + 1.0;
                                float _4005 = _3942 * _3981;
                                float _4006 = _4005 * _4005;
                                float _4012 = ((1.0 - _4006) * dot(vec3(_1104, _1107, _1110), vec3(_3929, _3930, _3931))) + _4006;
                                float _5137 = isnan(0.0) ? _4012 : (isnan(_4012) ? 0.0 : max(_4012, 0.0));
                                float _4013 = isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0));
                                float _4014 = 1.0 - _3981;
                                float _4024 = (0.5 / (((_4013 * ((_3996 * _4014) + _3981)) + 9.9999999392252902907785028219223e-09) + (((_4013 * _4014) + _3981) * _3996))) * _4013;
                                float _5148 = isnan(0.0) ? _4024 : (isnan(_4024) ? 0.0 : max(_4024, 0.0));
                                float _4034 = (_3959 * _3936) * (((_3982 * 3.1415927410125732421875) * (isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0)))) / ((_4004 * _4004) * ((_3949 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3960 * _3806.y;
                                frontier_phi_78_pred_1 = _3960 * _3806.x;
                                frontier_phi_78_pred_2 = _4034 * _3818.z;
                                frontier_phi_78_pred_3 = _4034 * _3818.y;
                                frontier_phi_78_pred_4 = _4034 * _3818.x;
                                frontier_phi_78_pred_5 = _3960 * _3806.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4042 = frontier_phi_78_pred;
                            _4041 = frontier_phi_78_pred_1;
                            _4040 = frontier_phi_78_pred_2;
                            _4039 = frontier_phi_78_pred_3;
                            _4038 = frontier_phi_78_pred_4;
                            _4043 = frontier_phi_78_pred_5;
                            _3748 = _4041 + _3761;
                            _3749 = _4042 + _3762;
                            _3750 = _4043 + _3763;
                            _3745 = _4038 + _3758;
                            _3746 = _4039 + _3759;
                            _3747 = _4040 + _3760;
                            if (_3765 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3758 = _3745;
                                _3759 = _3746;
                                _3760 = _3747;
                                _3761 = _3748;
                                _3762 = _3749;
                                _3763 = _3750;
                                _3764 = _3765;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3750;
                        frontier_phi_72_pred_1 = _3749;
                        frontier_phi_72_pred_2 = _3748;
                        frontier_phi_72_pred_3 = _3747;
                        frontier_phi_72_pred_4 = _3746;
                        frontier_phi_72_pred_5 = _3745;
                    }
                    _3418 = frontier_phi_72_pred;
                    _3416 = frontier_phi_72_pred_1;
                    _3414 = frontier_phi_72_pred_2;
                    _3412 = frontier_phi_72_pred_3;
                    _3410 = frontier_phi_72_pred_4;
                    _3408 = frontier_phi_72_pred_5;
                    uint _3553 = _3552 + 1u;
                    if (_3553 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3546 = _3408;
                        _3547 = _3410;
                        _3548 = _3412;
                        _3549 = _3414;
                        _3550 = _3416;
                        _3551 = _3418;
                        _3552 = _3553;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3418;
                frontier_phi_60_61_ladder_1 = _3416;
                frontier_phi_60_61_ladder_2 = _3412;
                frontier_phi_60_61_ladder_3 = _3410;
                frontier_phi_60_61_ladder_4 = _3408;
                frontier_phi_60_61_ladder_5 = _3414;
            }
            else
            {
                frontier_phi_60_61_ladder = _3297;
                frontier_phi_60_61_ladder_1 = _3295;
                frontier_phi_60_61_ladder_2 = _3291;
                frontier_phi_60_61_ladder_3 = _3289;
                frontier_phi_60_61_ladder_4 = _3287;
                frontier_phi_60_61_ladder_5 = _3293;
            }
            _3407 = frontier_phi_60_61_ladder_4;
            _3409 = frontier_phi_60_61_ladder_3;
            _3411 = frontier_phi_60_61_ladder_2;
            _3413 = frontier_phi_60_61_ladder_5;
            _3415 = frontier_phi_60_61_ladder_1;
            _3417 = frontier_phi_60_61_ladder;
        }
        float _3422 = isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0));
        _3191 = (_3422 * _3413) + _2703;
        _3193 = (_3422 * _3415) + _2705;
        _3195 = (_3422 * _3417) + _2707;
        _3197 = ((_3407 * _1148) * _3422) + _3041;
        _3199 = ((_3409 * _1150) * _3422) + _3043;
        _3201 = ((_3411 * _1151) * _3422) + _3045;
    }
    else
    {
        _3191 = _2703;
        _3193 = _2705;
        _3195 = _2707;
        _3197 = _3041;
        _3199 = _3043;
        _3201 = _3045;
    }
    uint _3207 = _1124 + uint(cbMatDynParam._m0[0u].w);
    float _3213 = cbInstanceData._m0[_3207].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_710.x - _707) * _688) + _707)) - _949) * _451) + _949);
    float _3214 = cbInstanceData._m0[_3207].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_710.y - _708) * _688) + _708)) - _950) * _451) + _950);
    float _3215 = cbInstanceData._m0[_3207].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_710.z - _709) * _688) + _709)) - _951) * _451) + _951);
    float _5164 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _5175 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _5186 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
    float _3232 = (((isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0))) * (_3191 + ((isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0))) * _1163))) + ((_3197 + ((isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0))) * _1971)) * cbPerFrame._m0[3u].x)) + _3213;
    float _3234 = (_3214 + ((_3199 + ((isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0))) * _1971)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0))) * (_3193 + ((isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0))) * _1163)));
    float _3236 = (_3215 + ((_3201 + ((isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0))) * _1971)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0))) * (_3195 + ((isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0))) * _1163)));
    float _5212 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3249 = isnan(1.0) ? _5212 : (isnan(_5212) ? 1.0 : min(_5212, 1.0));
    uint _3250 = _1123 + 6u;
    float _3258 = _1085 / cbSceneParam._m0[86u].x;
    float _3259 = _1086 / cbSceneParam._m0[86u].y;
    vec4 _3273 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3258, _3259, (log2((isnan(cbSceneParam._m0[77u].w) ? _1020 : (isnan(_1020) ? cbSceneParam._m0[77u].w : min(_1020, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3275 = _3273.x;
    float _3276 = _3273.y;
    float _3277 = _3273.z;
    float _3278 = _3273.w;
    float _3349;
    float _3351;
    float _3353;
    float _3355;
    if (_1020 > cbSceneParam._m0[78u].w)
    {
        float _3312 = isnan(_1020) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1020 : min(cbSceneParam._m0[80u].w, _1020));
        float _3313 = _3312 / _1020;
        float _3324 = _3313 * _1070;
        float _3325 = _1071 * _3313;
        float _3326 = (-0.0) - _3325;
        float _3327 = _3313 * _1072;
        float _3329 = (cbSceneParam._m0[77u].w * _3326) / _3312;
        float _3330 = _3329 + cbSceneParam._m0[79u].w;
        float _3331 = cbSceneParam._m0[79u].w - _3325;
        float _3337 = sqrt(((_3324 * _3324) + (_3325 * _3325)) + (_3327 * _3327));
        float _3340 = (1.0 - (cbSceneParam._m0[77u].w / _3312)) * _3337;
        float _3345 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3347 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3508;
        if (abs((_3326 - _3329) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3508 = ((((_3330 > 0.0) ? exp2(_3345 * _3330) : (2.0 - exp2(_3347 * _3330))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3340;
        }
        else
        {
            float _3468 = 1.0 / cbSceneParam._m0[80u].x;
            float _3469 = isnan(_3331) ? _3330 : (isnan(_3330) ? _3331 : max(_3330, _3331));
            float _3470 = isnan(_3331) ? _3330 : (isnan(_3330) ? _3331 : min(_3330, _3331));
            float _3479 = isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : min(_3469, 0.0));
            float _3480 = isnan(0.0) ? _3470 : (isnan(_3470) ? 0.0 : min(_3470, 0.0));
            _3508 = ((abs(_3337 / _3326) * cbSceneParam._m0[80u].y) * ((((_3479 - _3480) * 2.0) - ((exp2(_3345 * (isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0)))) - exp2(_3345 * (isnan(0.0) ? _3470 : (isnan(_3470) ? 0.0 : max(_3470, 0.0))))) * _3468)) - ((exp2(_3347 * _3479) - exp2(_3347 * _3480)) * _3468))) + (_3340 * cbSceneParam._m0[80u].z);
        }
        vec4 _3510 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3258, _3259, 1.0), 0.0);
        float _3519 = exp2((_3508 * (-1.44269502162933349609375)) * (1.0 - _3510.w));
        float _3520 = log2(_3519);
        float _3536 = log2(_3278);
        _3349 = (exp2(_3536 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3520 * cbSceneParam._m0[78u].x)) * _3510.x) / cbSceneParam._m0[78u].x)) + _3275;
        _3351 = (exp2(_3536 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3520 * cbSceneParam._m0[78u].y)) * _3510.y) / cbSceneParam._m0[78u].y)) + _3276;
        _3353 = (exp2(_3536 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3520 * cbSceneParam._m0[78u].z)) * _3510.z) / cbSceneParam._m0[78u].z)) + _3277;
        _3355 = _3519 * _3278;
    }
    else
    {
        _3349 = _3275;
        _3351 = _3276;
        _3353 = _3277;
        _3355 = _3278;
    }
    float _3366 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3367 = _3366 == 3.0;
    float _3368 = log2(_3355);
    float _3372 = exp2(_3368 * cbSceneParam._m0[78u].x);
    float _3373 = exp2(_3368 * cbSceneParam._m0[78u].y);
    float _3374 = exp2(_3368 * cbSceneParam._m0[78u].z);
    float _3375 = _3372 * (isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0)));
    float _3376 = _3373 * (isnan(0.0) ? _3234 : (isnan(_3234) ? 0.0 : max(_3234, 0.0)));
    float _3377 = _3374 * (isnan(0.0) ? _3236 : (isnan(_3236) ? 0.0 : max(_3236, 0.0)));
    float _3386 = (_3366 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3386 * (_3367 ? _3375 : (_3375 + (cbSceneParam._m0[72u].w * _3349)));
    SV_Target.y = _3386 * (_3367 ? _3376 : (_3376 + (cbSceneParam._m0[72u].w * _3351)));
    SV_Target.z = _3386 * (_3367 ? _3377 : (_3377 + (cbSceneParam._m0[72u].w * _3353)));
    SV_Target.w = cbInstanceData._m0[_3250].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3213) * _3249) * _3372) * _3386;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3214) * _3249) * _3373) * _3386;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3215) * _3249) * _3374) * _3386;
    SV_Target_1.w = cbInstanceData._m0[_3250].w;
}


