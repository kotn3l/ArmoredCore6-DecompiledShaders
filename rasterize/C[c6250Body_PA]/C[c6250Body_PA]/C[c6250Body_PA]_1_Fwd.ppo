#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1466;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _224 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _225 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _226 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _232 = inversesqrt(dot(vec3(_224, _225, _226), vec3(_224, _225, _226)));
    float _239 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _268 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _274 = _268.x * cbMtdParam._m0[9u].x;
    float _275 = _268.y * cbMtdParam._m0[9u].y;
    float _276 = _268.z * cbMtdParam._m0[9u].z;
    vec4 _303 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _331 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _360 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _383 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _391 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _383)) * (cbMtdParam._m0[17u].w + 1.0);
    float _3808 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _392 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
    float _399 = (_392 * ((_360.x * cbMtdParam._m0[11u].x) - _274)) + _274;
    float _400 = (_392 * ((_360.y * cbMtdParam._m0[11u].y) - _275)) + _275;
    float _401 = (_392 * ((_360.z * cbMtdParam._m0[11u].z) - _276)) + _276;
    float _407 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _383)) * (cbMtdParam._m0[19u].x + 1.0);
    float _3819 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _408 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
    float _415 = (((_331.x * cbMtdParam._m0[14u].x) - _399) * _408) + _399;
    float _416 = (((_331.y * cbMtdParam._m0[14u].y) - _400) * _408) + _400;
    float _417 = (((_331.z * cbMtdParam._m0[14u].z) - _401) * _408) + _401;
    float _433 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _442 = (_433 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _433))) * (cbMtdParam._m0[20u].x + 1.0);
    float _3830 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _443 = isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0));
    float _450 = (_443 * ((_303.x * cbMtdParam._m0[15u].x) - _415)) + _415;
    float _451 = (_443 * ((_303.y * cbMtdParam._m0[15u].y) - _416)) + _416;
    float _452 = (_443 * ((_303.z * cbMtdParam._m0[15u].z) - _417)) + _417;
    vec4 _468 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _490 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _506 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _508 = _506.x;
    float _509 = _506.y;
    float _510 = _506.z;
    float _519 = ((_490.z - _510) * _392) + _510;
    float _522 = ((((_490.x - _508) * _392) + _508) * 2.0) + (-1.0);
    float _523 = ((((_490.y - _509) * _392) + _509) * 2.0) + (-1.0);
    float _524 = dot(vec2(_522, _523), vec2(_522, _523));
    float _3841 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _529 = sqrt(1.0 - (isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0))));
    float _534 = (((_468.z - _519) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _519;
    vec4 _547 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _564 = (((((((_547.z - _534) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _534) * cbMtdParam._m0[21u].z) - _534) * _443) + _534;
    float _580 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _583 = (_580 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _584 = (_580 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _609 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _613 = cbPerFrame._m0[22u].x * 2.0;
    float _614 = _613 * cbMtdParam._m0[22u].y;
    float _621 = ((_609.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _623 = (-0.0) - (cbMtdParam._m0[22u].x * ((_609.x * 0.5) + (-0.25)));
    float _625 = fract(_614);
    float _627 = fract(_614 + 0.5);
    float _638 = abs((_625 * 2.0) + (-1.0));
    vec4 _655 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_625 * _623) + _583) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_621 * _625) + _584) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _657 = _655.x;
    float _658 = _655.y;
    float _659 = _655.z;
    vec4 _660 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_627 * _623) + _583) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_621 * _627) + _584) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _702 = (cbMtdParam._m0[23u].y * _580) + TEXCOORD_6.w;
    float _703 = (cbMtdParam._m0[23u].z * _580) + TEXCOORD_9.w;
    vec4 _716 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _720 = _613 * cbMtdParam._m0[18u].x;
    float _725 = ((_716.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _727 = (-0.0) - (cbMtdParam._m0[20u].z * ((_716.x * 0.5) + (-0.25)));
    float _728 = fract(_720);
    float _730 = fract(_720 + 0.5);
    float _731 = _728 * _727;
    float _732 = _725 * _728;
    float _735 = _730 * _727;
    float _736 = _725 * _730;
    float _741 = abs((_728 * 2.0) + (-1.0));
    vec4 _757 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_731 + _702) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_732 + _703) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _759 = _757.x;
    float _760 = _757.y;
    float _761 = _757.z;
    vec4 _762 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_735 + _702) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_736 + _703) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _792 = (cbMtdParam._m0[22u].w * _580) + TEXCOORD_6.w;
    float _793 = (cbMtdParam._m0[23u].x * _580) + TEXCOORD_9.w;
    vec4 _813 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_731 + _792) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_732 + _793) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _815 = _813.x;
    float _816 = _813.y;
    float _817 = _813.z;
    vec4 _818 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_735 + _792) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_736 + _793) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _838 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3852 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _839 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
    float _847 = (((_839 * _839) * (3.0 - (_839 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _880 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _792) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _793) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _3863 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _881 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _885 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_818.x - _815) * _741) + _815)) * _847) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_762.x - _759) * _741) + _759)))) * _881;
    float _889 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_818.y - _816) * _741) + _816)) * _847) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_762.y - _760) * _741) + _760)))) * _881;
    float _893 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_818.z - _817) * _741) + _817)) * _847) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_762.z - _761) * _741) + _761)))) * _881;
    float _897 = _885 - (_885 * _433);
    float _898 = _889 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _889);
    float _899 = _893 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _893);
    float _928 = ((((((_468.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _522) + (cbMtdParam._m0[20u].y * _522)) + (((((_547.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _443);
    float _931 = ((((((_468.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _523) + (cbMtdParam._m0[20u].y * _523)) + (((((_547.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _443);
    float _934 = fma(_529, _239 * NORMAL.x, fma(_931, _246 * TANGENT.x, (_232 * _224) * _928));
    float _937 = fma(_529, _239 * NORMAL.y, fma(_931, _246 * TANGENT.y, (_232 * _225) * _928));
    float _940 = fma(_529, _239 * NORMAL.z, fma(_931, _246 * TANGENT.z, (_232 * _226) * _928));
    float _944 = inversesqrt(dot(vec3(_934, _937, _940), vec3(_934, _937, _940)));
    float _945 = _944 * _934;
    float _946 = _944 * _937;
    float _947 = _944 * _940;
    float _3874 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _948 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
    float _3885 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _3896 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _3907 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _967 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1017 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1007);
    float _1018 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1007);
    float _1019 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1007);
    float _1023 = inversesqrt(dot(vec3(_1017, _1018, _1019), vec3(_1017, _1018, _1019)));
    float _1024 = _1017 * _1023;
    float _1025 = _1018 * _1023;
    float _1026 = _1019 * _1023;
    float _1032 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1033 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1052 = fma(_947, cbSceneParam._m0[5u].z, fma(_946, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _945));
    float _1055 = fma(_947, cbSceneParam._m0[6u].z, fma(_946, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _945));
    float _1058 = fma(_947, cbSceneParam._m0[7u].z, fma(_946, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _945));
    uint _1071 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1072 = _1071 + 9u;
    uint _1073 = _1072 + uint(cbMatDynParam._m0[0u].w);
    float _1079 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0)))) * cbInstanceData._m0[_1073].x;
    float _1080 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0)))) * cbInstanceData._m0[_1073].y;
    float _1081 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0)))) * cbInstanceData._m0[_1073].z;
    float _3918 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _1082 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _3929 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1083 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _3940 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _1084 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    vec4 _1093 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1032, cbSceneParam._m0[86u].y * _1033));
    float _1096 = _1093.x * TEXCOORD_3.w;
    float _1097 = dot(vec3(_945, _946, _947), vec3(_1024, _1025, _1026));
    float _1100 = _1097 * 2.0;
    float _1104 = (_1100 * _945) - _1024;
    float _1105 = (_1100 * _946) - _1025;
    float _1106 = (_1100 * _947) - _1026;
    float _1110 = abs(dot(vec3(_1024, _1025, _1026), vec3(_945, _946, _947)));
    float _3951 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    float _1112 = sqrt(_948);
    float _1124 = exp2((_1112 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1112 * 3.0));
    float _1156 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1164 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1465;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1191 = fma(_1164, cbModelParam._m0[26u].z, fma(_1160, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1156));
        float _1195 = fma(_1164, cbModelParam._m0[27u].z, fma(_1160, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1156));
        float _1199 = fma(_1164, cbModelParam._m0[28u].z, fma(_1160, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1156));
        float _1223 = _1156 + _945;
        float _1224 = _1160 + _946;
        float _1225 = _1164 + _947;
        float _1235 = fma(_1225, cbModelParam._m0[26u].z, fma(_1224, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1223)) - _1191;
        float _1236 = fma(_1225, cbModelParam._m0[27u].z, fma(_1224, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1223)) - _1195;
        float _1237 = fma(_1225, cbModelParam._m0[28u].z, fma(_1224, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1223)) - _1199;
        float _1241 = inversesqrt(dot(vec3(_1235, _1236, _1237), vec3(_1235, _1236, _1237)));
        float _1254 = ((_1241 * _1235) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1191 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1241 * _1236) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1195 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1256 = ((_1241 * _1237) / cbModelParam._m0[34u].z) + ((((((_1199 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1280 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        float _1293 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1294 = _1293 * (_1259.x + (-0.5));
        float _1295 = _1293 * (_1259.y + (-0.5));
        float _1296 = _1293 * (_1259.z + (-0.5));
        float _1303 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1304 = _1303 * (_1266.x + (-0.5));
        float _1305 = _1303 * (_1266.y + (-0.5));
        float _1306 = _1303 * (_1266.z + (-0.5));
        float _1313 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1314 = _1313 * (_1273.x + (-0.5));
        float _1315 = _1313 * (_1273.y + (-0.5));
        float _1316 = _1313 * (_1273.z + (-0.5));
        float _1323 = exp2((_1280.w + (-0.5)) * 20.0) * 2.0;
        float _1324 = _1323 * (_1280.x + (-0.5));
        float _1325 = _1323 * (_1280.y + (-0.5));
        float _1326 = _1323 * (_1280.z + (-0.5));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = _1294 * 0.5;
        float _1331 = _1304 * 0.5;
        float _1332 = _1314 * 0.5;
        float _1333 = dot(vec3(_1330, _1331, _1332), vec3(_1330, _1331, _1332));
        float _1338 = (_1333 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1333);
        float _1347 = (dot(vec3(_945, _946, _947), vec3(_1338 * _1330, _1338 * _1331, _1338 * _1332)) + 1.0) * 0.5;
        float _3977 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1357 = sqrt(((_1331 * _1331) + (_1330 * _1330)) + (_1332 * _1332)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _3988 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1358 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
        float _1359 = _1358 * 2.0;
        float _1363 = (1.0 - _1358) / (_1358 + 1.0);
        float _3999 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1364 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
        float _1373 = ((((1.0 - _1364) * (_1359 + 2.0)) * exp2(log2(isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))) * (_1359 + 1.0))) + _1364) * _1327;
        float _1374 = _1295 * 0.5;
        float _1375 = _1305 * 0.5;
        float _1376 = _1315 * 0.5;
        float _1377 = dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376));
        float _1382 = (_1377 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1377);
        float _1390 = (dot(vec3(_945, _946, _947), vec3(_1382 * _1374, _1382 * _1375, _1382 * _1376)) + 1.0) * 0.5;
        float _4010 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1399 = sqrt(((_1375 * _1375) + (_1374 * _1374)) + (_1376 * _1376)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4021 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
        float _1401 = _1400 * 2.0;
        float _1405 = (1.0 - _1400) / (_1400 + 1.0);
        float _4032 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1415 = ((((1.0 - _1406) * (_1401 + 2.0)) * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * (_1401 + 1.0))) + _1406) * _1328;
        float _1416 = _1296 * 0.5;
        float _1417 = _1306 * 0.5;
        float _1418 = _1316 * 0.5;
        float _1419 = dot(vec3(_1416, _1417, _1418), vec3(_1416, _1417, _1418));
        float _1424 = (_1419 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1419);
        float _1432 = (dot(vec3(_945, _946, _947), vec3(_1424 * _1416, _1424 * _1417, _1424 * _1418)) + 1.0) * 0.5;
        float _4043 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1441 = sqrt(((_1417 * _1417) + (_1416 * _1416)) + (_1418 * _1418)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _4054 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1442 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1443 = _1442 * 2.0;
        float _1447 = (1.0 - _1442) / (_1442 + 1.0);
        float _4065 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1457 = ((((1.0 - _1448) * (_1443 + 2.0)) * exp2(log2(isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (_1443 + 1.0))) + _1448) * _1329;
        _1465 = _1296;
        _1467 = _1295;
        _1468 = _1294;
        _1469 = _1306;
        _1470 = _1305;
        _1471 = _1304;
        _1472 = _1316;
        _1473 = _1315;
        _1474 = _1314;
        _1475 = _1329;
        _1476 = _1328;
        _1477 = _1327;
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0)));
        _1480 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0)));
    }
    else
    {
        _1465 = _1466;
        _1467 = _1466;
        _1468 = _1466;
        _1469 = _1466;
        _1470 = _1466;
        _1471 = _1466;
        _1472 = _1466;
        _1473 = _1466;
        _1474 = _1466;
        _1475 = _1466;
        _1476 = _1466;
        _1477 = _1466;
        _1478 = 0.0;
        _1479 = 0.0;
        _1480 = 0.0;
    }
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1506 = fma(_1164, cbModelParam._m0[30u].z, fma(_1160, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1156));
        float _1510 = fma(_1164, cbModelParam._m0[31u].z, fma(_1160, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1156));
        float _1514 = fma(_1164, cbModelParam._m0[32u].z, fma(_1160, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1156));
        float _1537 = _1156 + _945;
        float _1538 = _1160 + _946;
        float _1539 = _1164 + _947;
        float _1549 = fma(_1539, cbModelParam._m0[30u].z, fma(_1538, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1537)) - _1506;
        float _1550 = fma(_1539, cbModelParam._m0[31u].z, fma(_1538, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1537)) - _1510;
        float _1551 = fma(_1539, cbModelParam._m0[32u].z, fma(_1538, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1537)) - _1514;
        float _1555 = inversesqrt(dot(vec3(_1549, _1550, _1551), vec3(_1549, _1550, _1551)));
        float _1568 = ((_1555 * _1549) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1506 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1569 = ((_1555 * _1550) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1510 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1570 = ((_1555 * _1551) / cbModelParam._m0[35u].z) + ((((((_1514 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1586 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1593 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        float _1605 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1606 = _1605 * (_1572.x + (-0.5));
        float _1607 = _1605 * (_1572.y + (-0.5));
        float _1608 = _1605 * (_1572.z + (-0.5));
        float _1615 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1616 = _1615 * (_1579.x + (-0.5));
        float _1617 = _1615 * (_1579.y + (-0.5));
        float _1618 = _1615 * (_1579.z + (-0.5));
        float _1625 = exp2((_1586.w + (-0.5)) * 20.0) * 2.0;
        float _1626 = _1625 * (_1586.x + (-0.5));
        float _1627 = _1625 * (_1586.y + (-0.5));
        float _1628 = _1625 * (_1586.z + (-0.5));
        float _1635 = exp2((_1593.w + (-0.5)) * 20.0) * 2.0;
        float _1636 = _1635 * (_1593.x + (-0.5));
        float _1637 = _1635 * (_1593.y + (-0.5));
        float _1638 = _1635 * (_1593.z + (-0.5));
        float _1639 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1640 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = _1606 * 0.5;
        float _1643 = _1616 * 0.5;
        float _1644 = _1626 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_945, _946, _947), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4106 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1639 + 9.9999997473787516355514526367188e-06);
        float _4117 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4128 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * (_1669 + 1.0))) + _1674) * _1639;
        float _1684 = _1607 * 0.5;
        float _1685 = _1617 * 0.5;
        float _1686 = _1627 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_945, _946, _947), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4139 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1640 + 9.9999997473787516355514526367188e-06);
        float _4150 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4161 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0))) * (_1711 + 1.0))) + _1716) * _1640;
        float _1726 = _1608 * 0.5;
        float _1727 = _1618 * 0.5;
        float _1728 = _1628 * 0.5;
        float _1729 = dot(vec3(_1726, _1727, _1728), vec3(_1726, _1727, _1728));
        float _1734 = (_1729 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1729);
        float _1742 = (dot(vec3(_945, _946, _947), vec3(_1734 * _1726, _1734 * _1727, _1734 * _1728)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1751 = sqrt(((_1727 * _1727) + (_1726 * _1726)) + (_1728 * _1728)) / (_1641 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1752 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1753 = _1752 * 2.0;
        float _1757 = (1.0 - _1752) / (_1752 + 1.0);
        float _4194 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
        float _1758 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1767 = ((((1.0 - _1758) * (_1753 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1753 + 1.0))) + _1758) * _1641;
        _1775 = _1608;
        _1776 = _1607;
        _1777 = _1606;
        _1778 = _1618;
        _1779 = _1617;
        _1780 = _1616;
        _1781 = _1628;
        _1782 = _1627;
        _1783 = _1626;
        _1784 = _1641;
        _1785 = _1640;
        _1786 = _1639;
        _1787 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1788 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
        _1789 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)));
    }
    else
    {
        _1775 = _1466;
        _1776 = _1466;
        _1777 = _1466;
        _1778 = _1466;
        _1779 = _1466;
        _1780 = _1466;
        _1781 = _1466;
        _1782 = _1466;
        _1783 = _1466;
        _1784 = _1466;
        _1785 = _1466;
        _1786 = _1466;
        _1787 = 0.0;
        _1788 = 0.0;
        _1789 = 0.0;
    }
    float _1799 = (cbModelParam._m0[1u].x * (_1787 - _1478)) + _1478;
    float _1800 = (cbModelParam._m0[1u].x * (_1788 - _1479)) + _1479;
    float _1801 = (cbModelParam._m0[1u].x * (_1789 - _1480)) + _1480;
    float _1822 = fma(_1801, cbSceneParam._m0[89u].z, fma(_1800, cbSceneParam._m0[89u].y, _1799 * cbSceneParam._m0[89u].x));
    float _1825 = fma(_1801, cbSceneParam._m0[90u].z, fma(_1800, cbSceneParam._m0[90u].y, _1799 * cbSceneParam._m0[90u].x));
    float _1828 = fma(_1801, cbSceneParam._m0[91u].z, fma(_1800, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1799));
    float _1843 = _1104 * 0.5;
    float _1844 = _1105 * 0.5;
    float _1845 = _1106 * 0.5;
    float _1846 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1777, _1780, _1783, _1786));
    float _1849 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1776, _1779, _1782, _1785));
    float _1852 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1775, _1778, _1781, _1784));
    float _1886;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1859 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1465, _1469, _1472, _1475));
        float _1863 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1867 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1468, _1471, _1474, _1477));
        float _1874 = dot(vec4(cbModelParam._m0[39u]), vec4(_1843, _1844, _1845, 1.0));
        _1886 = dot(vec3(isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1874) ? 0.0 : (isnan(0.0) ? _1874 : max(0.0, _1874))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1886 = 1.0;
    }
    float _1897;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1888 = dot(vec4(cbModelParam._m0[40u]), vec4(_1843, _1844, _1845, 1.0));
        _1897 = dot(vec3(isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1888) ? 0.0 : (isnan(0.0) ? _1888 : max(0.0, _1888))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1897 = 1.0;
    }
    float _1901 = (_1897 * cbModelParam._m0[1u].x) + (_1886 * (1.0 - cbModelParam._m0[1u].x));
    float _1911 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _948);
    float _1912 = isnan(_1911) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1911 : min(cbModelParam._m0[25u].z, _1911));
    float _1992;
    float _1994;
    float _1996;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1959 = fma(_1164, cbModelParam._m0[13u].z, fma(_1160, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1156)) + cbModelParam._m0[13u].w;
        float _1963 = fma(_1164, cbModelParam._m0[14u].z, fma(_1160, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1156)) + cbModelParam._m0[14u].w;
        float _1967 = fma(_1164, cbModelParam._m0[15u].z, fma(_1160, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1156)) + cbModelParam._m0[15u].w;
        float _1970 = fma(_1106, cbModelParam._m0[13u].z, fma(_1105, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1104));
        float _1973 = fma(_1106, cbModelParam._m0[14u].z, fma(_1105, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1104));
        float _1976 = fma(_1106, cbModelParam._m0[15u].z, fma(_1105, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1104));
        float _2004;
        if (_1970 > 0.0)
        {
            _2004 = abs((1.0 - _1959) / _1970);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1970 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1959 + 1.0) / _1970);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2004 = frontier_phi_14_12_ladder;
        }
        float _2205;
        if (_1973 > 0.0)
        {
            _2205 = abs((1.0 - _1963) / _1973);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1963 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2205 = frontier_phi_23_19_ladder;
        }
        float _2448;
        if (_1976 > 0.0)
        {
            _2448 = abs((1.0 - _1967) / _1976);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1976 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1967 + 1.0) / _1976);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2448 = frontier_phi_35_30_ladder;
        }
        float _2450 = isnan(_2205) ? _2004 : (isnan(_2004) ? _2205 : min(_2004, _2205));
        float _2451 = isnan(_2448) ? _2450 : (isnan(_2450) ? _2448 : min(_2450, _2448));
        float _2455 = (_2451 * _1970) + _1959;
        float _2456 = (_2451 * _1973) + _1963;
        float _2457 = (_2451 * _1976) + _1967;
        float _2458 = _2451 * 9.9999997473787516355514526367188e-05;
        float _2460 = (-1.0) - _2458;
        float _2462 = _2458 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2457 > _2462) || ((_2457 < _2460) || ((_2456 > _2462) || ((_2456 < _2460) || ((_2455 < _2460) || (_2455 > _2462))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2581 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2457, cbModelParam._m0[9u].z, fma(_2456, cbModelParam._m0[9u].y, _2455 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2457, cbModelParam._m0[10u].z, fma(_2456, cbModelParam._m0[10u].y, _2455 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2457, cbModelParam._m0[11u].z, fma(_2456, cbModelParam._m0[11u].y, _2455 * cbModelParam._m0[11u].x))), _1912);
            frontier_phi_13_35_ladder = _2581.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2581.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2581.x * cbModelParam._m0[1u].y;
        }
        _1992 = frontier_phi_13_35_ladder_2;
        _1994 = frontier_phi_13_35_ladder_1;
        _1996 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1980 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1104, _1105, _1106), _1912);
        _1992 = _1980.x * cbModelParam._m0[1u].y;
        _1994 = _1980.y * cbModelParam._m0[1u].y;
        _1996 = _1980.z * cbModelParam._m0[1u].y;
    }
    float _2000 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _948);
    float _2001 = isnan(_2000) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2000 : min(cbModelParam._m0[25u].w, _2000));
    float _2090;
    float _2092;
    float _2094;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2054 = fma(_1164, cbModelParam._m0[21u].z, fma(_1160, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1156)) + cbModelParam._m0[21u].w;
        float _2058 = fma(_1164, cbModelParam._m0[22u].z, fma(_1160, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1156)) + cbModelParam._m0[22u].w;
        float _2062 = fma(_1164, cbModelParam._m0[23u].z, fma(_1160, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1156)) + cbModelParam._m0[23u].w;
        float _2065 = fma(_1106, cbModelParam._m0[21u].z, fma(_1105, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1104));
        float _2068 = fma(_1106, cbModelParam._m0[22u].z, fma(_1105, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1104));
        float _2071 = fma(_1106, cbModelParam._m0[23u].z, fma(_1105, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1104));
        float _2210;
        if (_2065 > 0.0)
        {
            _2210 = abs((1.0 - _2054) / _2065);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2054 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2210 = frontier_phi_25_21_ladder;
        }
        float _2475;
        if (_2068 > 0.0)
        {
            _2475 = abs((1.0 - _2058) / _2068);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2058 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2475 = frontier_phi_37_32_ladder;
        }
        float _2680;
        if (_2071 > 0.0)
        {
            _2680 = abs((1.0 - _2062) / _2071);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2062 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2680 = frontier_phi_46_43_ladder;
        }
        float _2682 = isnan(_2475) ? _2210 : (isnan(_2210) ? _2475 : min(_2210, _2475));
        float _2683 = isnan(_2680) ? _2682 : (isnan(_2682) ? _2680 : min(_2682, _2680));
        float _2687 = (_2683 * _2065) + _2054;
        float _2688 = (_2683 * _2068) + _2058;
        float _2689 = (_2683 * _2071) + _2062;
        float _2690 = _2683 * 9.9999997473787516355514526367188e-05;
        float _2691 = (-1.0) - _2690;
        float _2693 = _2690 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2689 > _2693) || ((_2689 < _2691) || ((_2688 > _2693) || ((_2688 < _2691) || ((_2687 < _2691) || (_2687 > _2693))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2917 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2689, cbModelParam._m0[17u].z, fma(_2688, cbModelParam._m0[17u].y, _2687 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2689, cbModelParam._m0[18u].z, fma(_2688, cbModelParam._m0[18u].y, _2687 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2689, cbModelParam._m0[19u].z, fma(_2688, cbModelParam._m0[19u].y, _2687 * cbModelParam._m0[19u].x))), _2001);
            frontier_phi_22_46_ladder = _2917.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2917.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2917.x * cbModelParam._m0[1u].z;
        }
        _2090 = frontier_phi_22_46_ladder_2;
        _2092 = frontier_phi_22_46_ladder_1;
        _2094 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2074 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1104, _1105, _1106), _2001);
        _2090 = _2074.x * cbModelParam._m0[1u].z;
        _2092 = _2074.y * cbModelParam._m0[1u].z;
        _2094 = _2074.z * cbModelParam._m0[1u].z;
    }
    float _2106 = ((((1.0 - _1124) * ((_1112 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1124 * _1112)) * _1096;
    float _2107 = _2106 * ((cbModelParam._m0[1u].w * (_2090 - _1992)) + _1992);
    float _2108 = _2106 * ((cbModelParam._m0[1u].w * (_2092 - _1994)) + _1994);
    float _2109 = _2106 * ((cbModelParam._m0[1u].w * (_2094 - _1996)) + _1996);
    float _2112 = fma(_2109, cbSceneParam._m0[89u].z, fma(_2108, cbSceneParam._m0[89u].y, _2107 * cbSceneParam._m0[89u].x));
    float _2115 = fma(_2109, cbSceneParam._m0[90u].z, fma(_2108, cbSceneParam._m0[90u].y, _2107 * cbSceneParam._m0[90u].x));
    float _2118 = fma(_2109, cbSceneParam._m0[91u].z, fma(_2108, cbSceneParam._m0[91u].y, _2107 * cbSceneParam._m0[91u].x));
    uvec4 _2128 = floatBitsToUint(cbInstanceData._m0[_1071 + 5u]);
    uint _2130 = _2128.x * 14u;
    uint _2131 = _2130 + 13u;
    float _2138 = _1096 + (-1.0);
    float _2143 = (cbLight._m0[_2131].x * _2138) + 1.0;
    float _2144 = (cbLight._m0[_2131].y * _2138) + 1.0;
    float _2145 = (cbLight._m0[_2131].z * _2138) + 1.0;
    float _2146 = (cbLight._m0[_2131].w * _2138) + 1.0;
    uint _2147 = _2130 + 5u;
    float _2153 = isnan(1.0) ? _2144 : (isnan(_2144) ? 1.0 : min(_2144, 1.0));
    uint _2157 = _2130 + 4u;
    float _2164 = isnan(1.0) ? _2143 : (isnan(_2143) ? 1.0 : min(_2143, 1.0));
    uint _2168 = _2130 | 1u;
    float _2179 = dot(vec3(cbLight._m0[_2130].xyz), vec3(_945, _946, _947));
    float _2182 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_945, _946, _947));
    float _4330 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _4341 = isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0));
    float _2187 = (isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0))) * 0.3183098733425140380859375;
    float _2189 = (isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) * 0.3183098733425140380859375;
    float _2196 = ((cbLight._m0[_2147].x * _2153) * _2189) + ((cbLight._m0[_2157].x * _2164) * _2187);
    float _2197 = ((_2153 * cbLight._m0[_2147].y) * _2189) + ((_2164 * cbLight._m0[_2157].y) * _2187);
    float _2198 = ((_2153 * cbLight._m0[_2147].z) * _2189) + ((_2164 * cbLight._m0[_2157].z) * _2187);
    uvec4 _2202 = floatBitsToUint(cbLight._m0[_2130 + 12u]);
    bool _2204 = _2202.x == 0u;
    float _2215;
    float _2217;
    float _2219;
    if (_2204)
    {
        _2215 = _2196;
        _2217 = _2197;
        _2219 = _2198;
    }
    else
    {
        uint _2223 = _2130 + 6u;
        float _2239 = (dot(vec3(cbLight._m0[_2130 + 2u].xyz), vec3(_945, _946, _947)) * 0.5) + 0.5;
        float _2240 = _2239 * _2239;
        float _4352 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
        float _2241 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _2242 = isnan(1.0) ? _2145 : (isnan(_2145) ? 1.0 : min(_2145, 1.0));
        _2215 = (((cbLight._m0[_2223].x * 0.3183098733425140380859375) * _2241) * _2242) + _2196;
        _2217 = (((cbLight._m0[_2223].y * 0.3183098733425140380859375) * _2241) * _2242) + _2197;
        _2219 = (((cbLight._m0[_2223].z * 0.3183098733425140380859375) * _2241) * _2242) + _2198;
    }
    bool _2222 = _2202.y == 0u;
    float _2260;
    float _2262;
    float _2264;
    if (_2222)
    {
        _2260 = _2215;
        _2262 = _2217;
        _2264 = _2219;
    }
    else
    {
        uint _2419 = _2130 + 7u;
        float _2435 = (dot(vec3(cbLight._m0[_2130 + 3u].xyz), vec3(_945, _946, _947)) * 0.5) + 0.5;
        float _2436 = _2435 * _2435;
        float _4368 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
        float _2437 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _2438 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
        _2260 = (((cbLight._m0[_2419].x * 0.3183098733425140380859375) * _2437) * _2438) + _2215;
        _2262 = (((cbLight._m0[_2419].y * 0.3183098733425140380859375) * _2437) * _2438) + _2217;
        _2264 = (((cbLight._m0[_2419].z * 0.3183098733425140380859375) * _2437) * _2438) + _2219;
    }
    uint _2267 = _2130 + 8u;
    float _2280 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2130].w)) * _948) * 0.949999988079071044921875);
    float _2281 = _2280 * _2280;
    float _2282 = cbLight._m0[_2130].x + _1024;
    float _2283 = cbLight._m0[_2130].y + _1025;
    float _2284 = cbLight._m0[_2130].z + _1026;
    float _2288 = inversesqrt(dot(vec3(_2282, _2283, _2284), vec3(_2282, _2283, _2284)));
    float _2289 = _2288 * _2282;
    float _2290 = _2288 * _2283;
    float _2291 = _2288 * _2284;
    float _2292 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2130].xyz));
    float _4384 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _2295 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
    float _4395 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
    float _2296 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
    float _2297 = dot(vec3(_945, _946, _947), vec3(_2289, _2290, _2291));
    float _4406 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2300 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
    float _2301 = dot(vec3(cbLight._m0[_2130].xyz), vec3(_2289, _2290, _2291));
    float _4417 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2305 = _2281 * _2281;
    float _2309 = ((_2300 * _2300) * (_2305 + (-1.0))) + 1.0;
    float _2320 = (exp2(log2(1.0 - (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2321 = 1.0 - _2281;
    float _2332 = (0.5 / (((_2296 * ((_2295 * _2321) + _2281)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2321) + _2281) * _2295))) * _2295;
    float _4428 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2334 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * (_2305 / ((_2309 * _2309) * 3.141590118408203125));
    uint _2345 = _2130 + 9u;
    float _2356 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2168].w)) * _948) * 0.949999988079071044921875);
    float _2357 = _2356 * _2356;
    float _2358 = cbLight._m0[_2168].x + _1024;
    float _2359 = cbLight._m0[_2168].y + _1025;
    float _2360 = cbLight._m0[_2168].z + _1026;
    float _2364 = inversesqrt(dot(vec3(_2358, _2359, _2360), vec3(_2358, _2359, _2360)));
    float _2365 = _2364 * _2358;
    float _2366 = _2364 * _2359;
    float _2367 = _2364 * _2360;
    float _2368 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2168].xyz));
    float _4439 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2371 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
    float _2372 = dot(vec3(_945, _946, _947), vec3(_2365, _2366, _2367));
    float _4450 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
    float _2375 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
    float _2376 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_2365, _2366, _2367));
    float _4461 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2380 = _2357 * _2357;
    float _2384 = ((_2375 * _2375) * (_2380 + (-1.0))) + 1.0;
    float _2393 = (exp2(log2(1.0 - (isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2394 = 1.0 - _2357;
    float _2404 = (0.5 / (((_2296 * ((_2371 * _2394) + _2357)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2394) + _2357) * _2371))) * _2371;
    float _4472 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
    float _2406 = (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * (_2380 / ((_2384 * _2384) * 3.141590118408203125));
    float _2416 = (((_2393 * cbLight._m0[_2345].x) * _2406) * _2153) + (((_2320 * cbLight._m0[_2267].x) * _2334) * _2164);
    float _2417 = (((_2393 * cbLight._m0[_2345].y) * _2406) * _2153) + (((_2320 * cbLight._m0[_2267].y) * _2334) * _2164);
    float _2418 = (((_2393 * cbLight._m0[_2345].z) * _2406) * _2153) + (((_2320 * cbLight._m0[_2267].z) * _2334) * _2164);
    float _2480;
    float _2482;
    float _2484;
    if (_2204)
    {
        _2480 = _2416;
        _2482 = _2417;
        _2484 = _2418;
    }
    else
    {
        uint _2486 = _2130 + 2u;
        uint _2490 = _2130 + 10u;
        float _2504 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2486].w)) * _948) * 0.949999988079071044921875);
        float _2505 = _2504 * _2504;
        float _2506 = cbLight._m0[_2486].x + _1024;
        float _2507 = cbLight._m0[_2486].y + _1025;
        float _2508 = cbLight._m0[_2486].z + _1026;
        float _2512 = inversesqrt(dot(vec3(_2506, _2507, _2508), vec3(_2506, _2507, _2508)));
        float _2513 = _2512 * _2506;
        float _2514 = _2512 * _2507;
        float _2515 = _2512 * _2508;
        float _2516 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2486].xyz));
        float _4483 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
        float _2519 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _2520 = dot(vec3(_945, _946, _947), vec3(_2513, _2514, _2515));
        float _4494 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
        float _2523 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _2524 = dot(vec3(cbLight._m0[_2486].xyz), vec3(_2513, _2514, _2515));
        float _4505 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
        float _2528 = _2505 * _2505;
        float _2532 = ((_2523 * _2523) * (_2528 + (-1.0))) + 1.0;
        float _2541 = (exp2(log2(1.0 - (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2542 = 1.0 - _2505;
        float _2552 = (0.5 / (((_2296 * ((_2519 * _2542) + _2505)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2542) + _2505) * _2519))) * _2519;
        float _4516 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        float _2554 = (isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0))) * (_2528 / ((_2532 * _2532) * 3.141590118408203125));
        float _2555 = isnan(1.0) ? _2145 : (isnan(_2145) ? 1.0 : min(_2145, 1.0));
        _2480 = (((_2541 * cbLight._m0[_2490].x) * _2554) * _2555) + _2416;
        _2482 = (((_2541 * cbLight._m0[_2490].y) * _2554) * _2555) + _2417;
        _2484 = (((_2541 * cbLight._m0[_2490].z) * _2554) * _2555) + _2418;
    }
    float _2590;
    float _2592;
    float _2594;
    if (_2222)
    {
        _2590 = _2480;
        _2592 = _2482;
        _2594 = _2484;
    }
    else
    {
        uint _2601 = _2130 + 3u;
        uint _2605 = _2130 + 11u;
        float _2619 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2601].w)) * _948) * 0.949999988079071044921875);
        float _2620 = _2619 * _2619;
        float _2621 = cbLight._m0[_2601].x + _1024;
        float _2622 = cbLight._m0[_2601].y + _1025;
        float _2623 = cbLight._m0[_2601].z + _1026;
        float _2627 = inversesqrt(dot(vec3(_2621, _2622, _2623), vec3(_2621, _2622, _2623)));
        float _2628 = _2627 * _2621;
        float _2629 = _2627 * _2622;
        float _2630 = _2627 * _2623;
        float _2631 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2601].xyz));
        float _4532 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        float _2634 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
        float _2635 = dot(vec3(_945, _946, _947), vec3(_2628, _2629, _2630));
        float _4543 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2638 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
        float _2639 = dot(vec3(cbLight._m0[_2601].xyz), vec3(_2628, _2629, _2630));
        float _4554 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        float _2643 = _2620 * _2620;
        float _2647 = ((_2638 * _2638) * (_2643 + (-1.0))) + 1.0;
        float _2656 = (exp2(log2(1.0 - (isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2657 = 1.0 - _2620;
        float _2667 = (0.5 / (((_2296 * ((_2634 * _2657) + _2620)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2657) + _2620) * _2634))) * _2634;
        float _4565 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
        float _2669 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * (_2643 / ((_2647 * _2647) * 3.141590118408203125));
        float _2670 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
        _2590 = (((_2656 * cbLight._m0[_2605].x) * _2669) * _2670) + _2480;
        _2592 = (((_2656 * cbLight._m0[_2605].y) * _2669) * _2670) + _2482;
        _2594 = (((_2656 * cbLight._m0[_2605].z) * _2669) * _2670) + _2484;
    }
    float _2805;
    float _2807;
    float _2809;
    float _2811;
    float _2813;
    float _2815;
    if (_2128.y == 0u)
    {
        float _2745 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2746 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2745;
        float _2747 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2745;
        float _2748 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2745;
        uvec4 _2760 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2761 = _2760.x;
        uint _2772 = uint((float(_2760.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1033) / _2761))) + floor(float(uint(cbSceneParam._m0[85u].x * _1032) / _2761)));
        float _2782 = (log2(_2748 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2783 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        uint _2786 = uint(isnan(14.0) ? _2783 : (isnan(_2783) ? 14.0 : min(_2783, 14.0)));
        uvec4 _2791 = texelFetch(g_lightClusterGridBuffer, int(((_2786 << 2u) + (_2772 << 6u)) >> 2u));
        uint _2792 = _2791.x;
        uint _2793 = _2760.z;
        float _2922;
        float _2924;
        float _2926;
        float _2928;
        float _2930;
        float _2932;
        if (((((1u << ((_2793 >> 4u) & 15u)) + 4294967295u) & _2792) == 0u) || ((_2793 & 240u) == 0u))
        {
            _2922 = 0.0;
            _2924 = 0.0;
            _2926 = 0.0;
            _2928 = 0.0;
            _2930 = 0.0;
            _2932 = 0.0;
        }
        else
        {
            float _2923;
            float _2925;
            float _2927;
            float _2929;
            float _2931;
            float _2933;
            float _3074 = 0.0;
            float _3075 = 0.0;
            float _3076 = 0.0;
            float _3077 = 0.0;
            float _3078 = 0.0;
            float _3079 = 0.0;
            uint _3080 = 0u;
            uint _3089;
            bool _3090;
            for (;;)
            {
                _3089 = texelFetch(g_lightClassification, int((((_2786 << 5u) + (_2772 << 9u)) + (_3080 << 2u)) >> 2u)).x;
                _3090 = _3089 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3090)
                {
                    frontier_phi_61_pred = _3074;
                    frontier_phi_61_pred_1 = _3079;
                    frontier_phi_61_pred_2 = _3078;
                    frontier_phi_61_pred_3 = _3077;
                    frontier_phi_61_pred_4 = _3076;
                    frontier_phi_61_pred_5 = _3075;
                }
                else
                {
                    float _3198;
                    float _3199;
                    float _3200;
                    float _3201;
                    float _3202;
                    float _3203;
                    uint _3204;
                    _3198 = _3074;
                    _3199 = _3075;
                    _3200 = _3076;
                    _3201 = _3077;
                    _3202 = _3078;
                    _3203 = _3079;
                    _3204 = _3089;
                    float _3130;
                    float _3131;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    for (;;)
                    {
                        uint _3208 = uint(findLSB(_3204)) + (_3080 << 5u);
                        uint _3205 = (_3204 + 4294967295u) & _3204;
                        uint _3210 = _3208 * 48u;
                        vec4 _3224 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3210)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 3u)).x));
                        uint _3230 = (_3208 * 48u) + 4u;
                        vec4 _3243 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3230)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 3u)).x));
                        uint _3249 = (_3208 * 48u) + 8u;
                        vec3 _3260 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3249)).x, texelFetch(g_PointLightRenderingBuffer, int(_3249 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3249 + 2u)).x));
                        float _3264 = _3224.x - _2746;
                        float _3265 = _3224.y - _2747;
                        float _3266 = _3224.z - _2748;
                        float _3267 = dot(vec3(_3264, _3265, _3266), vec3(_3264, _3265, _3266));
                        float _3270 = inversesqrt(_3267);
                        float _3271 = _3270 * _3264;
                        float _3272 = _3270 * _3265;
                        float _3273 = _3270 * _3266;
                        float _3274 = dot(vec3(_1052, _1055, _1058), vec3(_3271, _3272, _3273));
                        float _3279 = 1.0 - (_3267 * _3224.w);
                        float _4591 = isnan(0.0) ? _3279 : (isnan(_3279) ? 0.0 : max(_3279, 0.0));
                        float _3280 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
                        float _3281 = sqrt(_3267) * _3243.w;
                        float _3284 = 1.39999997615814208984375 / (_3281 + 1.39999997615814208984375);
                        float _3285 = _3284 * _3284;
                        float _3288 = ((1.0 - _3285) * _3274) + _3285;
                        float _3291 = _3281 * _3281;
                        float _3295 = ((isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0))) * _3280) / ((_3291 * 0.699999988079071044921875) + 1.0);
                        float _3299 = (-0.0) - _2746;
                        float _3300 = (-0.0) - _2747;
                        float _3301 = (-0.0) - _2748;
                        float _3305 = inversesqrt(dot(vec3(_3299, _3300, _3301), vec3(_3299, _3300, _3301)));
                        float _3306 = _3305 * _3299;
                        float _3307 = _3305 * _3300;
                        float _3308 = _3305 * _3301;
                        float _3316 = exp2(log2(1.0 / ((_3291 * 3.5) + 5.0)) * 0.25);
                        float _3317 = 1.0 - _1112;
                        float _3324 = sqrt(1.0 - ((1.0 - (_3317 * _3317)) * (1.0 - (_3316 * _3316))));
                        float _3325 = _3324 * _3324;
                        float _3326 = _3325 * _3325;
                        float _3327 = _3306 + _3271;
                        float _3328 = _3307 + _3272;
                        float _3329 = _3308 + _3273;
                        float _3333 = inversesqrt(dot(vec3(_3327, _3328, _3329), vec3(_3327, _3328, _3329)));
                        float _3337 = dot(vec3(_1052, _1055, _1058), vec3(_3306, _3307, _3308));
                        float _4607 = isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0));
                        float _3340 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
                        float _3341 = dot(vec3(_1052, _1055, _1058), vec3(_3333 * _3327, _3333 * _3328, _3333 * _3329));
                        float _4618 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0));
                        float _3344 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
                        float _3348 = ((_3344 * _3344) * (_3326 + (-1.0))) + 1.0;
                        float _3349 = _3284 * _3325;
                        float _3350 = _3349 * _3349;
                        float _3353 = ((1.0 - _3350) * _3274) + _3350;
                        float _4629 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0));
                        float _3354 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
                        float _3355 = 1.0 - _3325;
                        float _3365 = (0.5 / (((_3354 * ((_3340 * _3355) + _3325)) + 9.9999999392252902907785028219223e-09) + (((_3354 * _3355) + _3325) * _3340))) * _3354;
                        float _4640 = isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : max(_3365, 0.0));
                        float _3376 = (((_3326 * 3.1415927410125732421875) * (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0)))) / ((_3348 * _3348) * ((_3291 * 2.1991131305694580078125) + 3.141590118408203125))) * _3280;
                        _3133 = (_3295 * _3243.x) + _3201;
                        _3134 = (_3295 * _3243.y) + _3202;
                        _3135 = (_3295 * _3243.z) + _3203;
                        _3130 = (_3376 * _3260.x) + _3198;
                        _3131 = (_3376 * _3260.y) + _3199;
                        _3132 = (_3376 * _3260.z) + _3200;
                        if (_3205 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3198 = _3130;
                            _3199 = _3131;
                            _3200 = _3132;
                            _3201 = _3133;
                            _3202 = _3134;
                            _3203 = _3135;
                            _3204 = _3205;
                        }
                    }
                    frontier_phi_61_pred = _3130;
                    frontier_phi_61_pred_1 = _3135;
                    frontier_phi_61_pred_2 = _3134;
                    frontier_phi_61_pred_3 = _3133;
                    frontier_phi_61_pred_4 = _3132;
                    frontier_phi_61_pred_5 = _3131;
                }
                _2923 = frontier_phi_61_pred;
                _2933 = frontier_phi_61_pred_1;
                _2931 = frontier_phi_61_pred_2;
                _2929 = frontier_phi_61_pred_3;
                _2927 = frontier_phi_61_pred_4;
                _2925 = frontier_phi_61_pred_5;
                uint _3081 = _3080 + 1u;
                if (_3081 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3074 = _2923;
                    _3075 = _2925;
                    _3076 = _2927;
                    _3077 = _2929;
                    _3078 = _2931;
                    _3079 = _2933;
                    _3080 = _3081;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2922 = _2923;
            _2924 = _2925;
            _2926 = _2927;
            _2928 = _2929;
            _2930 = _2931;
            _2932 = _2933;
        }
        uvec4 _2936 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2937 = _2936.z;
        uint _2939 = (_2937 >> 8u) & 15u;
        float _3042;
        float _3044;
        float _3046;
        float _3048;
        float _3050;
        float _3052;
        if (((4294967295u << _2939) & _2792) == 0u)
        {
            _3042 = _2922;
            _3044 = _2924;
            _3046 = _2926;
            _3048 = _2928;
            _3050 = _2930;
            _3052 = _2932;
        }
        else
        {
            float _3067 = inversesqrt(dot(vec3(_2746, _2747, _2748), vec3(_2746, _2747, _2748)));
            float _3068 = _3067 * _2746;
            float _3069 = _3067 * _2747;
            float _3070 = _3067 * _2748;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2939 < ((_2937 >> 12u) & 15u))
            {
                float _3043;
                float _3045;
                float _3047;
                float _3049;
                float _3051;
                float _3053;
                float _3181 = _2922;
                float _3182 = _2924;
                float _3183 = _2926;
                float _3184 = _2928;
                float _3185 = _2930;
                float _3186 = _2932;
                uint _3187 = _2939;
                uint _3196;
                bool _3197;
                for (;;)
                {
                    _3196 = texelFetch(g_lightClassification, int((((_2786 << 5u) + (_2772 << 9u)) + (_3187 << 2u)) >> 2u)).x;
                    _3197 = _3196 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3197)
                    {
                        frontier_phi_67_pred = _3184;
                        frontier_phi_67_pred_1 = _3185;
                        frontier_phi_67_pred_2 = _3186;
                        frontier_phi_67_pred_3 = _3183;
                        frontier_phi_67_pred_4 = _3182;
                        frontier_phi_67_pred_5 = _3181;
                    }
                    else
                    {
                        float _3381;
                        float _3382;
                        float _3383;
                        float _3384;
                        float _3385;
                        float _3386;
                        float _3674;
                        float _3675;
                        float _3676;
                        float _3677;
                        float _3678;
                        float _3679;
                        float _3394 = _3181;
                        float _3395 = _3182;
                        float _3396 = _3183;
                        float _3397 = _3184;
                        float _3398 = _3185;
                        float _3399 = _3186;
                        uint _3400 = _3196;
                        uint _3401;
                        vec4 _3426;
                        float _3427;
                        vec4 _3442;
                        vec3 _3454;
                        vec4 _3469;
                        vec4 _3484;
                        float _3530;
                        bool _3531;
                        for (;;)
                        {
                            uint _3411 = ((_3187 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3400));
                            _3401 = (_3400 + 4294967295u) & _3400;
                            uint _3413 = _3411 * 40u;
                            _3426 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3413)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 3u)).x));
                            _3427 = _3426.w;
                            uint _3429 = (_3411 * 40u) + 4u;
                            _3442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 3u)).x));
                            uint _3444 = (_3411 * 40u) + 8u;
                            _3454 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3444)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 2u)).x));
                            uint _3456 = (_3411 * 40u) + 16u;
                            _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            uint _3471 = (_3411 * 40u) + 20u;
                            _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            uint _3486 = (_3411 * 40u) + 24u;
                            vec4 _3499 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 3u)).x));
                            uint _3505 = (_3411 * 40u) + 28u;
                            vec4 _3518 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3505)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 3u)).x));
                            _3530 = fma(_2748, _3518.z, fma(_2747, _3518.y, _3518.x * _2746)) + _3518.w;
                            _3531 = !((fma(_2748, _3499.z, fma(_2747, _3499.y, _3499.x * _2746)) + _3499.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3531)
                            {
                                float _3558 = _3426.x - _2746;
                                float _3559 = _3426.y - _2747;
                                float _3560 = _3426.z - _2748;
                                float _3561 = dot(vec3(_3558, _3559, _3560), vec3(_3558, _3559, _3560));
                                float _3564 = inversesqrt(_3561);
                                float _3565 = _3564 * _3558;
                                float _3566 = _3564 * _3559;
                                float _3567 = _3564 * _3560;
                                float _3571 = 1.0 - (_3561 / (_3427 * _3427));
                                float _4651 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                                float _3572 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
                                float _3576 = sqrt(_3561) * _3442.w;
                                float _3578 = 1.39999997615814208984375 / (_3576 + 1.39999997615814208984375);
                                float _3579 = _3578 * _3578;
                                float _3582 = ((1.0 - _3579) * dot(vec3(_3565, _3566, _3567), vec3(_1052, _1055, _1058))) + _3579;
                                float _3585 = _3576 * _3576;
                                float _3589 = (fma(_2748, _3469.z, fma(_2747, _3469.y, _3469.x * _2746)) + _3469.w) / _3530;
                                float _3590 = (fma(_2748, _3484.z, fma(_2747, _3484.y, _3484.x * _2746)) + _3484.w) / _3530;
                                float _3594 = 1.0 - dot(vec2(_3589, _3590), vec2(_3589, _3590));
                                float _4667 = isnan(0.0) ? _3594 : (isnan(_3594) ? 0.0 : max(_3594, 0.0));
                                float _3595 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
                                float _3596 = _3595 * (((isnan(0.0) ? _3582 : (isnan(_3582) ? 0.0 : max(_3582, 0.0))) * _3572) / ((_3585 * 0.699999988079071044921875) + 1.0));
                                float _3608 = exp2(log2(1.0 / ((_3585 * 3.5) + 5.0)) * 0.25);
                                float _3609 = 1.0 - _1112;
                                float _3616 = sqrt(1.0 - ((1.0 - (_3609 * _3609)) * (1.0 - (_3608 * _3608))));
                                float _3617 = _3616 * _3616;
                                float _3618 = _3617 * _3617;
                                float _3619 = _3565 - _3068;
                                float _3620 = _3566 - _3069;
                                float _3621 = _3567 - _3070;
                                float _3625 = inversesqrt(dot(vec3(_3619, _3620, _3621), vec3(_3619, _3620, _3621)));
                                float _3629 = dot(vec3(_1052, _1055, _1058), vec3((-0.0) - _3068, (-0.0) - _3069, (-0.0) - _3070));
                                float _4678 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                                float _3632 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                                float _3633 = dot(vec3(_1052, _1055, _1058), vec3(_3625 * _3619, _3625 * _3620, _3625 * _3621));
                                float _4689 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                                float _3636 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                                float _3640 = ((_3636 * _3636) * (_3618 + (-1.0))) + 1.0;
                                float _3641 = _3578 * _3617;
                                float _3642 = _3641 * _3641;
                                float _3648 = ((1.0 - _3642) * dot(vec3(_1052, _1055, _1058), vec3(_3565, _3566, _3567))) + _3642;
                                float _4700 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3649 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                                float _3650 = 1.0 - _3617;
                                float _3660 = (0.5 / (((_3649 * ((_3632 * _3650) + _3617)) + 9.9999999392252902907785028219223e-09) + (((_3649 * _3650) + _3617) * _3632))) * _3649;
                                float _4711 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3670 = (_3595 * _3572) * (((_3618 * 3.1415927410125732421875) * (isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0)))) / ((_3640 * _3640) * ((_3585 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3670 * _3454.x;
                                frontier_phi_73_pred_1 = _3670 * _3454.y;
                                frontier_phi_73_pred_2 = _3596 * _3442.z;
                                frontier_phi_73_pred_3 = _3596 * _3442.y;
                                frontier_phi_73_pred_4 = _3596 * _3442.x;
                                frontier_phi_73_pred_5 = _3670 * _3454.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3674 = frontier_phi_73_pred;
                            _3675 = frontier_phi_73_pred_1;
                            _3679 = frontier_phi_73_pred_2;
                            _3678 = frontier_phi_73_pred_3;
                            _3677 = frontier_phi_73_pred_4;
                            _3676 = frontier_phi_73_pred_5;
                            _3384 = _3677 + _3397;
                            _3385 = _3678 + _3398;
                            _3386 = _3679 + _3399;
                            _3381 = _3674 + _3394;
                            _3382 = _3675 + _3395;
                            _3383 = _3676 + _3396;
                            if (_3401 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3394 = _3381;
                                _3395 = _3382;
                                _3396 = _3383;
                                _3397 = _3384;
                                _3398 = _3385;
                                _3399 = _3386;
                                _3400 = _3401;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3384;
                        frontier_phi_67_pred_1 = _3385;
                        frontier_phi_67_pred_2 = _3386;
                        frontier_phi_67_pred_3 = _3383;
                        frontier_phi_67_pred_4 = _3382;
                        frontier_phi_67_pred_5 = _3381;
                    }
                    _3049 = frontier_phi_67_pred;
                    _3051 = frontier_phi_67_pred_1;
                    _3053 = frontier_phi_67_pred_2;
                    _3047 = frontier_phi_67_pred_3;
                    _3045 = frontier_phi_67_pred_4;
                    _3043 = frontier_phi_67_pred_5;
                    uint _3188 = _3187 + 1u;
                    if (_3188 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3181 = _3043;
                        _3182 = _3045;
                        _3183 = _3047;
                        _3184 = _3049;
                        _3185 = _3051;
                        _3186 = _3053;
                        _3187 = _3188;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3051;
                frontier_phi_55_56_ladder_1 = _3053;
                frontier_phi_55_56_ladder_2 = _3049;
                frontier_phi_55_56_ladder_3 = _3047;
                frontier_phi_55_56_ladder_4 = _3045;
                frontier_phi_55_56_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_55_56_ladder = _2930;
                frontier_phi_55_56_ladder_1 = _2932;
                frontier_phi_55_56_ladder_2 = _2928;
                frontier_phi_55_56_ladder_3 = _2926;
                frontier_phi_55_56_ladder_4 = _2924;
                frontier_phi_55_56_ladder_5 = _2922;
            }
            _3042 = frontier_phi_55_56_ladder_5;
            _3044 = frontier_phi_55_56_ladder_4;
            _3046 = frontier_phi_55_56_ladder_3;
            _3048 = frontier_phi_55_56_ladder_2;
            _3050 = frontier_phi_55_56_ladder;
            _3052 = frontier_phi_55_56_ladder_1;
        }
        float _3057 = isnan(1.0) ? _1096 : (isnan(_1096) ? 1.0 : min(_1096, 1.0));
        _2805 = (_3057 * _3048) + _2260;
        _2807 = (_3057 * _3050) + _2262;
        _2809 = (_3057 * _3052) + _2264;
        _2811 = ((_3042 * 0.039999999105930328369140625) * _3057) + _2590;
        _2813 = ((_3044 * 0.039999999105930328369140625) * _3057) + _2592;
        _2815 = ((_3046 * 0.039999999105930328369140625) * _3057) + _2594;
    }
    else
    {
        _2805 = _2260;
        _2807 = _2262;
        _2809 = _2264;
        _2811 = _2590;
        _2813 = _2592;
        _2815 = _2594;
    }
    uint _2821 = _1072 + uint(cbMatDynParam._m0[0u].w);
    float _2827 = cbInstanceData._m0[_2821].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_660.x - _657) * _638) + _657)) - _897) * _443) + _897);
    float _2828 = cbInstanceData._m0[_2821].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_660.y - _658) * _638) + _658)) - _898) * _443) + _898);
    float _2829 = cbInstanceData._m0[_2821].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_660.z - _659) * _638) + _659)) - _899) * _443) + _899);
    float _4727 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _4738 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _4749 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _2846 = (((isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0))) * (_2805 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1096))) + ((_2811 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + _2827;
    float _2848 = (_2828 + ((_2813 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0))) * (_2807 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1096)));
    float _2850 = (_2829 + ((_2815 + ((isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0))) * _1901)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0))) * (_2809 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1096)));
    float _4775 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2863 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
    uint _2864 = _1071 + 6u;
    float _2872 = _1032 / cbSceneParam._m0[86u].x;
    float _2873 = _1033 / cbSceneParam._m0[86u].y;
    vec4 _2887 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2872, _2873, (log2((isnan(cbSceneParam._m0[77u].w) ? _967 : (isnan(_967) ? cbSceneParam._m0[77u].w : min(_967, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2889 = _2887.x;
    float _2890 = _2887.y;
    float _2891 = _2887.z;
    float _2892 = _2887.w;
    float _2984;
    float _2986;
    float _2988;
    float _2990;
    if (_967 > cbSceneParam._m0[78u].w)
    {
        float _2947 = isnan(_967) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _967 : min(cbSceneParam._m0[80u].w, _967));
        float _2948 = _2947 / _967;
        float _2959 = _2948 * _1017;
        float _2960 = _1018 * _2948;
        float _2961 = (-0.0) - _2960;
        float _2962 = _2948 * _1019;
        float _2964 = (cbSceneParam._m0[77u].w * _2961) / _2947;
        float _2965 = _2964 + cbSceneParam._m0[79u].w;
        float _2966 = cbSceneParam._m0[79u].w - _2960;
        float _2972 = sqrt(((_2959 * _2959) + (_2960 * _2960)) + (_2962 * _2962));
        float _2975 = (1.0 - (cbSceneParam._m0[77u].w / _2947)) * _2972;
        float _2980 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2982 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3143;
        if (abs((_2961 - _2964) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3143 = ((((_2965 > 0.0) ? exp2(_2980 * _2965) : (2.0 - exp2(_2982 * _2965))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2975;
        }
        else
        {
            float _3103 = 1.0 / cbSceneParam._m0[80u].x;
            float _3104 = isnan(_2966) ? _2965 : (isnan(_2965) ? _2966 : max(_2965, _2966));
            float _3105 = isnan(_2966) ? _2965 : (isnan(_2965) ? _2966 : min(_2965, _2966));
            float _3114 = isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : min(_3104, 0.0));
            float _3115 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : min(_3105, 0.0));
            _3143 = ((abs(_2972 / _2961) * cbSceneParam._m0[80u].y) * ((((_3114 - _3115) * 2.0) - ((exp2(_2980 * (isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : max(_3104, 0.0)))) - exp2(_2980 * (isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0))))) * _3103)) - ((exp2(_2982 * _3114) - exp2(_2982 * _3115)) * _3103))) + (_2975 * cbSceneParam._m0[80u].z);
        }
        vec4 _3145 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2872, _2873, 1.0), 0.0);
        float _3154 = exp2((_3143 * (-1.44269502162933349609375)) * (1.0 - _3145.w));
        float _3155 = log2(_3154);
        float _3171 = log2(_2892);
        _2984 = (exp2(_3171 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].x)) * _3145.x) / cbSceneParam._m0[78u].x)) + _2889;
        _2986 = (exp2(_3171 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].y)) * _3145.y) / cbSceneParam._m0[78u].y)) + _2890;
        _2988 = (exp2(_3171 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].z)) * _3145.z) / cbSceneParam._m0[78u].z)) + _2891;
        _2990 = _3154 * _2892;
    }
    else
    {
        _2984 = _2889;
        _2986 = _2890;
        _2988 = _2891;
        _2990 = _2892;
    }
    float _3001 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3002 = _3001 == 3.0;
    float _3003 = log2(_2990);
    float _3007 = exp2(_3003 * cbSceneParam._m0[78u].x);
    float _3008 = exp2(_3003 * cbSceneParam._m0[78u].y);
    float _3009 = exp2(_3003 * cbSceneParam._m0[78u].z);
    float _3010 = _3007 * (isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0)));
    float _3011 = _3008 * (isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0)));
    float _3012 = _3009 * (isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0)));
    float _3021 = (_3001 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3021 * (_3002 ? _3010 : (_3010 + (cbSceneParam._m0[72u].w * _2984)));
    SV_Target.y = _3021 * (_3002 ? _3011 : (_3011 + (cbSceneParam._m0[72u].w * _2986)));
    SV_Target.z = _3021 * (_3002 ? _3012 : (_3012 + (cbSceneParam._m0[72u].w * _2988)));
    SV_Target.w = cbInstanceData._m0[_2864].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2827) * _2863) * _3007) * _3021;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2828) * _2863) * _3008) * _3021;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2829) * _2863) * _3009) * _3021;
    SV_Target_1.w = cbInstanceData._m0[_2864].w;
}


