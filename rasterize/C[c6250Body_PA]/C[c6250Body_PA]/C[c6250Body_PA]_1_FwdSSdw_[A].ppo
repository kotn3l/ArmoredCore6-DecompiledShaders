#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_10;
layout(set = 0, binding = 10) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_24;
layout(set = 0, binding = 11) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_25;
layout(set = 0, binding = 12) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_26;
layout(set = 0, binding = 13) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_7;
layout(set = 0, binding = 16) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_20;
layout(set = 0, binding = 7) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_21;
layout(set = 0, binding = 8) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_22;
layout(set = 0, binding = 9) uniform texture2D C_c6250Body_PA_snp_0_Texture2D_23;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in float TEXCOORD_13;
layout(location = 7, component = 2) in float TEXCOORD_14;
layout(location = 7, component = 3) in float TEXCOORD_15;
layout(location = 8) in float TEXCOORD_16;
layout(location = 8, component = 1) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1512;
float _3932;
float _3933;
float _3934;
float _3935;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _230 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _231 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _232 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _238 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _274 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[3u].w));
    float _280 = _274.x * cbMtdParam._m0[9u].x;
    float _281 = _274.y * cbMtdParam._m0[9u].y;
    float _282 = _274.z * cbMtdParam._m0[9u].z;
    vec4 _309 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[8u].w));
    vec4 _337 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[6u].w));
    vec4 _366 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[0u].w));
    float _389 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[16u].w)).x + 0.00999999977648258209228515625;
    float _397 = (TEXCOORD_3.x - ((cbMtdParam._m0[17u].z * (1.0 - TEXCOORD_3.x)) * _389)) * (cbMtdParam._m0[17u].w + 1.0);
    float _3944 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _398 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
    float _405 = (_398 * ((_366.x * cbMtdParam._m0[11u].x) - _280)) + _280;
    float _406 = (_398 * ((_366.y * cbMtdParam._m0[11u].y) - _281)) + _281;
    float _407 = (_398 * ((_366.z * cbMtdParam._m0[11u].z) - _282)) + _282;
    float _413 = (TEXCOORD_9.x - ((cbMtdParam._m0[19u].y * (1.0 - TEXCOORD_9.x)) * _389)) * (cbMtdParam._m0[19u].x + 1.0);
    float _3955 = isnan(0.0) ? _413 : (isnan(_413) ? 0.0 : max(_413, 0.0));
    float _414 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
    float _421 = (((_337.x * cbMtdParam._m0[14u].x) - _405) * _414) + _405;
    float _422 = (((_337.y * cbMtdParam._m0[14u].y) - _406) * _414) + _406;
    float _423 = (((_337.z * cbMtdParam._m0[14u].z) - _407) * _414) + _407;
    float _439 = cbMtdParam._m0[20u].w * TEXCOORD_15;
    float _448 = (_439 - (((texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_25, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[11u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[19u].w) * (1.0 - _439))) * (cbMtdParam._m0[20u].x + 1.0);
    float _3966 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _449 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
    float _456 = (_449 * ((_309.x * cbMtdParam._m0[15u].x) - _421)) + _421;
    float _457 = (_449 * ((_309.y * cbMtdParam._m0[15u].y) - _422)) + _422;
    float _458 = (_449 * ((_309.z * cbMtdParam._m0[15u].z) - _423)) + _423;
    vec4 _474 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[2u].w));
    vec4 _496 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[14u].w));
    vec4 _512 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[15u].w));
    float _514 = _512.x;
    float _515 = _512.y;
    float _516 = _512.z;
    float _525 = ((_496.z - _516) * _398) + _516;
    float _528 = ((((_496.x - _514) * _398) + _514) * 2.0) + (-1.0);
    float _529 = ((((_496.y - _515) * _398) + _515) * 2.0) + (-1.0);
    float _530 = dot(vec2(_528, _529), vec2(_528, _529));
    float _3977 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _535 = sqrt(1.0 - (isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))));
    float _540 = (((_474.z - _525) * TEXCOORD_9.x) * cbMtdParam._m0[19u].z) + _525;
    vec4 _553 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_6.w) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_9.w) + cbTextureTilingScale._m0[10u].w));
    float _570 = (((((((_553.z - _540) * TEXCOORD_15) * cbMtdParam._m0[21u].y) + _540) * cbMtdParam._m0[21u].z) - _540) * _449) + _540;
    float _586 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    float _589 = (_586 * cbMtdParam._m0[24u].y) + TEXCOORD_6.w;
    float _590 = (_586 * cbMtdParam._m0[24u].z) + TEXCOORD_9.w;
    vec4 _615 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[24u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[25u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _619 = cbPerFrame._m0[22u].x * 2.0;
    float _620 = _619 * cbMtdParam._m0[22u].y;
    float _627 = ((_615.y * 0.5) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _629 = (-0.0) - (cbMtdParam._m0[22u].x * ((_615.x * 0.5) + (-0.25)));
    float _631 = fract(_620);
    float _633 = fract(_620 + 0.5);
    float _644 = abs((_631 * 2.0) + (-1.0));
    vec4 _661 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_631 * _629) + _589) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_627 * _631) + _590) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _663 = _661.x;
    float _664 = _661.y;
    float _665 = _661.z;
    vec4 _666 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_26, SS_DiffuseMap), vec2((((_633 * _629) + _589) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_627 * _633) + _590) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _708 = (cbMtdParam._m0[23u].y * _586) + TEXCOORD_6.w;
    float _709 = (cbMtdParam._m0[23u].z * _586) + TEXCOORD_9.w;
    vec4 _722 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * ((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_6.w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_9.w)) + cbTextureTilingScale._m0[7u].w));
    float _726 = _619 * cbMtdParam._m0[18u].x;
    float _731 = ((_722.y * 0.5) + (-0.25)) * cbMtdParam._m0[20u].z;
    float _733 = (-0.0) - (cbMtdParam._m0[20u].z * ((_722.x * 0.5) + (-0.25)));
    float _734 = fract(_726);
    float _736 = fract(_726 + 0.5);
    float _737 = _734 * _733;
    float _738 = _731 * _734;
    float _741 = _736 * _733;
    float _742 = _731 * _736;
    float _747 = abs((_734 * 2.0) + (-1.0));
    vec4 _763 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_737 + _708) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_738 + _709) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _765 = _763.x;
    float _766 = _763.y;
    float _767 = _763.z;
    vec4 _768 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_10, SS_DiffuseMap), vec2(((_741 + _708) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_742 + _709) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _798 = (cbMtdParam._m0[22u].w * _586) + TEXCOORD_6.w;
    float _799 = (cbMtdParam._m0[23u].x * _586) + TEXCOORD_9.w;
    vec4 _819 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_737 + _798) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_738 + _799) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _821 = _819.x;
    float _822 = _819.y;
    float _823 = _819.z;
    vec4 _824 = texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_4, SS_DiffuseMap), vec2(((_741 + _798) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, ((_742 + _799) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _844 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3988 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _845 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
    float _853 = (((_845 * _845) * (3.0 - (_845 * 2.0))) * cbMtdParam._m0[17u].x) - cbMtdParam._m0[17u].y;
    float _886 = (TEXCOORD_6.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_6.x)) * (texture(sampler2D(C_c6250Body_PA_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _798) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _799) + cbTextureTilingScale._m0[9u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].x + 1.0);
    float _3999 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _887 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
    float _891 = (((cbSceneParam._m0[72u].y * TEXCOORD_12) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].y) * (((_824.x - _821) * _747) + _821)) * _853) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[16u].w) * (((_768.x - _765) * _747) + _765)))) * _887;
    float _895 = (((cbSceneParam._m0[72u].y * TEXCOORD_13) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].y) * (((_824.y - _822) * _747) + _822)) * _853) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[16u].w) * (((_768.y - _766) * _747) + _766)))) * _887;
    float _899 = (((cbSceneParam._m0[72u].y * TEXCOORD_14) * cbMtdParam._m0[18u].w) * ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].y) * (((_824.z - _823) * _747) + _823)) * _853) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[16u].w) * (((_768.z - _767) * _747) + _767)))) * _887;
    float _903 = _891 - (_891 * _439);
    float _904 = _895 - ((cbMtdParam._m0[20u].w * TEXCOORD_16) * _895);
    float _905 = _899 - ((cbMtdParam._m0[20u].w * TEXCOORD_17) * _899);
    float _934 = ((((((_474.x * 2.0) + (-1.0)) * TEXCOORD_9.x) * cbMtdParam._m0[18u].z) + _528) + (cbMtdParam._m0[20u].y * _528)) + (((((_553.x * 2.0) + (-1.0)) * TEXCOORD_15) * cbMtdParam._m0[21u].x) * _449);
    float _937 = ((((((_474.y * 2.0) + (-1.0)) * TEXCOORD_9.y) * cbMtdParam._m0[18u].z) + _529) + (cbMtdParam._m0[20u].y * _529)) + (((((_553.y * 2.0) + (-1.0)) * TEXCOORD_16) * cbMtdParam._m0[21u].x) * _449);
    float _940 = fma(_535, _245 * NORMAL.x, fma(_937, _252 * TANGENT.x, (_238 * _230) * _934));
    float _943 = fma(_535, _245 * NORMAL.y, fma(_937, _252 * TANGENT.y, (_238 * _231) * _934));
    float _946 = fma(_535, _245 * NORMAL.z, fma(_937, _252 * TANGENT.z, (_238 * _232) * _934));
    float _950 = inversesqrt(dot(vec3(_940, _943, _946), vec3(_940, _943, _946)));
    float _951 = _950 * _940;
    float _952 = _950 * _943;
    float _953 = _950 * _946;
    float _4010 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _954 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
    float _4021 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _4032 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _4043 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _973 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1013 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1023 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1013);
    float _1024 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1013);
    float _1025 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1013);
    float _1029 = inversesqrt(dot(vec3(_1023, _1024, _1025), vec3(_1023, _1024, _1025)));
    float _1030 = _1023 * _1029;
    float _1031 = _1024 * _1029;
    float _1032 = _1025 * _1029;
    vec4 _1037 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1039 = _1037.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1193 = sqrt(((_1023 * _1023) + (_1024 * _1024)) + (_1025 * _1025));
        float _1199 = (cbMatDynParam._m0[5u].x * _1193) + cbMatDynParam._m0[5u].y;
        float _4054 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1200 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1204 = (cbMatDynParam._m0[5u].z * _1193) + cbMatDynParam._m0[5u].w;
        float _4065 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) - _1200)) + _1200) < ((_1039 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1050 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1051 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1070 = fma(_953, cbSceneParam._m0[5u].z, fma(_952, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _951));
    float _1073 = fma(_953, cbSceneParam._m0[6u].z, fma(_952, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _951));
    float _1076 = fma(_953, cbSceneParam._m0[7u].z, fma(_952, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _951));
    uint _1089 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1090 = _1089 + 9u;
    uint _1091 = _1090 + uint(cbMatDynParam._m0[0u].w);
    float _1097 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0)))) * cbInstanceData._m0[_1091].x;
    float _1098 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0)))) * cbInstanceData._m0[_1091].y;
    float _1099 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0)))) * cbInstanceData._m0[_1091].z;
    float _4076 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
    float _1100 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
    float _4087 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _1101 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
    float _4098 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1102 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
    vec4 _1111 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1050, cbSceneParam._m0[86u].y * _1051));
    float _1114 = _1111.x * TEXCOORD_3.w;
    float _1115 = dot(vec3(_951, _952, _953), vec3(_1030, _1031, _1032));
    float _1118 = _1115 * 2.0;
    float _1122 = (_1118 * _951) - _1030;
    float _1123 = (_1118 * _952) - _1031;
    float _1124 = (_1118 * _953) - _1032;
    float _1128 = abs(dot(vec3(_1030, _1031, _1032), vec3(_951, _952, _953)));
    float _4109 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _1130 = sqrt(_954);
    float _1142 = exp2((_1130 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1130 * 3.0));
    float _1174 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1178 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1182 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1511;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1237 = fma(_1182, cbModelParam._m0[26u].z, fma(_1178, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1174));
        float _1241 = fma(_1182, cbModelParam._m0[27u].z, fma(_1178, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1174));
        float _1245 = fma(_1182, cbModelParam._m0[28u].z, fma(_1178, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1174));
        float _1269 = _1174 + _951;
        float _1270 = _1178 + _952;
        float _1271 = _1182 + _953;
        float _1281 = fma(_1271, cbModelParam._m0[26u].z, fma(_1270, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1269)) - _1237;
        float _1282 = fma(_1271, cbModelParam._m0[27u].z, fma(_1270, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1269)) - _1241;
        float _1283 = fma(_1271, cbModelParam._m0[28u].z, fma(_1270, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1269)) - _1245;
        float _1287 = inversesqrt(dot(vec3(_1281, _1282, _1283), vec3(_1281, _1282, _1283)));
        float _1300 = ((_1287 * _1281) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1237 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1301 = ((_1287 * _1282) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1241 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1302 = ((_1287 * _1283) / cbModelParam._m0[34u].z) + ((((((_1245 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1305 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1312 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1319 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        vec4 _1326 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1300, _1301, _1302), 0.0);
        float _1339 = exp2((_1305.w + (-0.5)) * 20.0) * 2.0;
        float _1340 = _1339 * (_1305.x + (-0.5));
        float _1341 = _1339 * (_1305.y + (-0.5));
        float _1342 = _1339 * (_1305.z + (-0.5));
        float _1349 = exp2((_1312.w + (-0.5)) * 20.0) * 2.0;
        float _1350 = _1349 * (_1312.x + (-0.5));
        float _1351 = _1349 * (_1312.y + (-0.5));
        float _1352 = _1349 * (_1312.z + (-0.5));
        float _1359 = exp2((_1319.w + (-0.5)) * 20.0) * 2.0;
        float _1360 = _1359 * (_1319.x + (-0.5));
        float _1361 = _1359 * (_1319.y + (-0.5));
        float _1362 = _1359 * (_1319.z + (-0.5));
        float _1369 = exp2((_1326.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1326.x + (-0.5));
        float _1371 = _1369 * (_1326.y + (-0.5));
        float _1372 = _1369 * (_1326.z + (-0.5));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1375 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1376 = _1340 * 0.5;
        float _1377 = _1350 * 0.5;
        float _1378 = _1360 * 0.5;
        float _1379 = dot(vec3(_1376, _1377, _1378), vec3(_1376, _1377, _1378));
        float _1384 = (_1379 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1379);
        float _1393 = (dot(vec3(_951, _952, _953), vec3(_1384 * _1376, _1384 * _1377, _1384 * _1378)) + 1.0) * 0.5;
        float _4135 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1403 = sqrt(((_1377 * _1377) + (_1376 * _1376)) + (_1378 * _1378)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _4146 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1404 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
        float _1405 = _1404 * 2.0;
        float _1409 = (1.0 - _1404) / (_1404 + 1.0);
        float _4157 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1410 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1419 = ((((1.0 - _1410) * (_1405 + 2.0)) * exp2(log2(isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * (_1405 + 1.0))) + _1410) * _1373;
        float _1420 = _1341 * 0.5;
        float _1421 = _1351 * 0.5;
        float _1422 = _1361 * 0.5;
        float _1423 = dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422));
        float _1428 = (_1423 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1423);
        float _1436 = (dot(vec3(_951, _952, _953), vec3(_1428 * _1420, _1428 * _1421, _1428 * _1422)) + 1.0) * 0.5;
        float _4168 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1445 = sqrt(((_1421 * _1421) + (_1420 * _1420)) + (_1422 * _1422)) / (_1374 + 9.9999997473787516355514526367188e-06);
        float _4179 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _4190 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0))) * (_1447 + 1.0))) + _1452) * _1374;
        float _1462 = _1342 * 0.5;
        float _1463 = _1352 * 0.5;
        float _1464 = _1362 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1478 = (dot(vec3(_951, _952, _953), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _4201 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1487 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1375 + 9.9999997473787516355514526367188e-06);
        float _4212 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _4223 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0))) * (_1489 + 1.0))) + _1494) * _1375;
        _1511 = _1342;
        _1513 = _1341;
        _1514 = _1340;
        _1515 = _1352;
        _1516 = _1351;
        _1517 = _1350;
        _1518 = _1362;
        _1519 = _1361;
        _1520 = _1360;
        _1521 = _1375;
        _1522 = _1374;
        _1523 = _1373;
        _1524 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0)));
        _1525 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
        _1526 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
    }
    else
    {
        _1511 = _1512;
        _1513 = _1512;
        _1514 = _1512;
        _1515 = _1512;
        _1516 = _1512;
        _1517 = _1512;
        _1518 = _1512;
        _1519 = _1512;
        _1520 = _1512;
        _1521 = _1512;
        _1522 = _1512;
        _1523 = _1512;
        _1524 = 0.0;
        _1525 = 0.0;
        _1526 = 0.0;
    }
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    float _1837;
    float _1838;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1555 = fma(_1182, cbModelParam._m0[30u].z, fma(_1178, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1174));
        float _1559 = fma(_1182, cbModelParam._m0[31u].z, fma(_1178, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1174));
        float _1563 = fma(_1182, cbModelParam._m0[32u].z, fma(_1178, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1174));
        float _1586 = _1174 + _951;
        float _1587 = _1178 + _952;
        float _1588 = _1182 + _953;
        float _1598 = fma(_1588, cbModelParam._m0[30u].z, fma(_1587, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1586)) - _1555;
        float _1599 = fma(_1588, cbModelParam._m0[31u].z, fma(_1587, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1586)) - _1559;
        float _1600 = fma(_1588, cbModelParam._m0[32u].z, fma(_1587, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1586)) - _1563;
        float _1604 = inversesqrt(dot(vec3(_1598, _1599, _1600), vec3(_1598, _1599, _1600)));
        float _1617 = ((_1604 * _1598) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1555 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1618 = ((_1604 * _1599) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1559 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1619 = ((_1604 * _1600) / cbModelParam._m0[35u].z) + ((((((_1563 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1621 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1617, _1618, _1619), 0.0);
        vec4 _1628 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1617, _1618, _1619), 0.0);
        vec4 _1635 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1617, _1618, _1619), 0.0);
        vec4 _1642 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1617, _1618, _1619), 0.0);
        float _1654 = exp2((_1621.w + (-0.5)) * 20.0) * 2.0;
        float _1655 = _1654 * (_1621.x + (-0.5));
        float _1656 = _1654 * (_1621.y + (-0.5));
        float _1657 = _1654 * (_1621.z + (-0.5));
        float _1664 = exp2((_1628.w + (-0.5)) * 20.0) * 2.0;
        float _1665 = _1664 * (_1628.x + (-0.5));
        float _1666 = _1664 * (_1628.y + (-0.5));
        float _1667 = _1664 * (_1628.z + (-0.5));
        float _1674 = exp2((_1635.w + (-0.5)) * 20.0) * 2.0;
        float _1675 = _1674 * (_1635.x + (-0.5));
        float _1676 = _1674 * (_1635.y + (-0.5));
        float _1677 = _1674 * (_1635.z + (-0.5));
        float _1684 = exp2((_1642.w + (-0.5)) * 20.0) * 2.0;
        float _1685 = _1684 * (_1642.x + (-0.5));
        float _1686 = _1684 * (_1642.y + (-0.5));
        float _1687 = _1684 * (_1642.z + (-0.5));
        float _1688 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1689 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1690 = isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0));
        float _1691 = _1655 * 0.5;
        float _1692 = _1665 * 0.5;
        float _1693 = _1675 * 0.5;
        float _1694 = dot(vec3(_1691, _1692, _1693), vec3(_1691, _1692, _1693));
        float _1699 = (_1694 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1694);
        float _1707 = (dot(vec3(_951, _952, _953), vec3(_1699 * _1691, _1699 * _1692, _1699 * _1693)) + 1.0) * 0.5;
        float _4264 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1716 = sqrt(((_1692 * _1692) + (_1691 * _1691)) + (_1693 * _1693)) / (_1688 + 9.9999997473787516355514526367188e-06);
        float _4275 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1717 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1718 = _1717 * 2.0;
        float _1722 = (1.0 - _1717) / (_1717 + 1.0);
        float _4286 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1723 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1732 = ((((1.0 - _1723) * (_1718 + 2.0)) * exp2(log2(isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_1718 + 1.0))) + _1723) * _1688;
        float _1733 = _1656 * 0.5;
        float _1734 = _1666 * 0.5;
        float _1735 = _1676 * 0.5;
        float _1736 = dot(vec3(_1733, _1734, _1735), vec3(_1733, _1734, _1735));
        float _1741 = (_1736 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1736);
        float _1749 = (dot(vec3(_951, _952, _953), vec3(_1741 * _1733, _1741 * _1734, _1741 * _1735)) + 1.0) * 0.5;
        float _4297 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1758 = sqrt(((_1734 * _1734) + (_1733 * _1733)) + (_1735 * _1735)) / (_1689 + 9.9999997473787516355514526367188e-06);
        float _4308 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1759 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1760 = _1759 * 2.0;
        float _1764 = (1.0 - _1759) / (_1759 + 1.0);
        float _4319 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1765 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1774 = ((((1.0 - _1765) * (_1760 + 2.0)) * exp2(log2(isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0))) * (_1760 + 1.0))) + _1765) * _1689;
        float _1775 = _1657 * 0.5;
        float _1776 = _1667 * 0.5;
        float _1777 = _1677 * 0.5;
        float _1778 = dot(vec3(_1775, _1776, _1777), vec3(_1775, _1776, _1777));
        float _1783 = (_1778 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1778);
        float _1791 = (dot(vec3(_951, _952, _953), vec3(_1783 * _1775, _1783 * _1776, _1783 * _1777)) + 1.0) * 0.5;
        float _4330 = isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0));
        float _1800 = sqrt(((_1776 * _1776) + (_1775 * _1775)) + (_1777 * _1777)) / (_1690 + 9.9999997473787516355514526367188e-06);
        float _4341 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1801 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1802 = _1801 * 2.0;
        float _1806 = (1.0 - _1801) / (_1801 + 1.0);
        float _4352 = isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0));
        float _1807 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1816 = ((((1.0 - _1807) * (_1802 + 2.0)) * exp2(log2(isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0))) * (_1802 + 1.0))) + _1807) * _1690;
        _1824 = _1657;
        _1825 = _1656;
        _1826 = _1655;
        _1827 = _1667;
        _1828 = _1666;
        _1829 = _1665;
        _1830 = _1677;
        _1831 = _1676;
        _1832 = _1675;
        _1833 = _1690;
        _1834 = _1689;
        _1835 = _1688;
        _1836 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0)));
        _1837 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0)));
        _1838 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)));
    }
    else
    {
        _1824 = _1512;
        _1825 = _1512;
        _1826 = _1512;
        _1827 = _1512;
        _1828 = _1512;
        _1829 = _1512;
        _1830 = _1512;
        _1831 = _1512;
        _1832 = _1512;
        _1833 = _1512;
        _1834 = _1512;
        _1835 = _1512;
        _1836 = 0.0;
        _1837 = 0.0;
        _1838 = 0.0;
    }
    float _1848 = (cbModelParam._m0[1u].x * (_1836 - _1524)) + _1524;
    float _1849 = (cbModelParam._m0[1u].x * (_1837 - _1525)) + _1525;
    float _1850 = (cbModelParam._m0[1u].x * (_1838 - _1526)) + _1526;
    float _1871 = fma(_1850, cbSceneParam._m0[89u].z, fma(_1849, cbSceneParam._m0[89u].y, _1848 * cbSceneParam._m0[89u].x));
    float _1874 = fma(_1850, cbSceneParam._m0[90u].z, fma(_1849, cbSceneParam._m0[90u].y, _1848 * cbSceneParam._m0[90u].x));
    float _1877 = fma(_1850, cbSceneParam._m0[91u].z, fma(_1849, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1848));
    float _1892 = _1122 * 0.5;
    float _1893 = _1123 * 0.5;
    float _1894 = _1124 * 0.5;
    float _1895 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1826, _1829, _1832, _1835));
    float _1898 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1825, _1828, _1831, _1834));
    float _1901 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1824, _1827, _1830, _1833));
    float _1935;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1908 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1511, _1515, _1518, _1521));
        float _1912 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1513, _1516, _1519, _1522));
        float _1916 = dot(vec4(_1892, _1893, _1894, 1.0), vec4(_1514, _1517, _1520, _1523));
        float _1923 = dot(vec4(cbModelParam._m0[39u]), vec4(_1892, _1893, _1894, 1.0));
        _1935 = dot(vec3(isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)), isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0)), isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1923) ? 0.0 : (isnan(0.0) ? _1923 : max(0.0, _1923))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1935 = 1.0;
    }
    float _1946;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1937 = dot(vec4(cbModelParam._m0[40u]), vec4(_1892, _1893, _1894, 1.0));
        _1946 = dot(vec3(isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0)), isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0)), isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1937) ? 0.0 : (isnan(0.0) ? _1937 : max(0.0, _1937))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1946 = 1.0;
    }
    float _1950 = (_1946 * cbModelParam._m0[1u].x) + (_1935 * (1.0 - cbModelParam._m0[1u].x));
    float _1960 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _954);
    float _1961 = isnan(_1960) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1960 : min(cbModelParam._m0[25u].z, _1960));
    float _2041;
    float _2043;
    float _2045;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2008 = fma(_1182, cbModelParam._m0[13u].z, fma(_1178, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1174)) + cbModelParam._m0[13u].w;
        float _2012 = fma(_1182, cbModelParam._m0[14u].z, fma(_1178, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1174)) + cbModelParam._m0[14u].w;
        float _2016 = fma(_1182, cbModelParam._m0[15u].z, fma(_1178, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1174)) + cbModelParam._m0[15u].w;
        float _2019 = fma(_1124, cbModelParam._m0[13u].z, fma(_1123, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1122));
        float _2022 = fma(_1124, cbModelParam._m0[14u].z, fma(_1123, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1122));
        float _2025 = fma(_1124, cbModelParam._m0[15u].z, fma(_1123, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1122));
        float _2053;
        if (_2019 > 0.0)
        {
            _2053 = abs((1.0 - _2008) / _2019);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2019 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2008 + 1.0) / _2019);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2053 = frontier_phi_17_15_ladder;
        }
        float _2275;
        if (_2022 > 0.0)
        {
            _2275 = abs((1.0 - _2012) / _2022);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2022 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2012 + 1.0) / _2022);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2275 = frontier_phi_26_22_ladder;
        }
        float _2521;
        if (_2025 > 0.0)
        {
            _2521 = abs((1.0 - _2016) / _2025);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2025 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2016 + 1.0) / _2025);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2521 = frontier_phi_38_33_ladder;
        }
        float _2523 = isnan(_2275) ? _2053 : (isnan(_2053) ? _2275 : min(_2053, _2275));
        float _2524 = isnan(_2521) ? _2523 : (isnan(_2523) ? _2521 : min(_2523, _2521));
        float _2528 = (_2524 * _2019) + _2008;
        float _2529 = (_2524 * _2022) + _2012;
        float _2530 = (_2524 * _2025) + _2016;
        float _2531 = _2524 * 9.9999997473787516355514526367188e-05;
        float _2533 = (-1.0) - _2531;
        float _2535 = _2531 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2530 > _2535) || ((_2530 < _2533) || ((_2529 > _2535) || ((_2529 < _2533) || ((_2528 < _2533) || (_2528 > _2535))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2654 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2530, cbModelParam._m0[9u].z, fma(_2529, cbModelParam._m0[9u].y, _2528 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2530, cbModelParam._m0[10u].z, fma(_2529, cbModelParam._m0[10u].y, _2528 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2530, cbModelParam._m0[11u].z, fma(_2529, cbModelParam._m0[11u].y, _2528 * cbModelParam._m0[11u].x))), _1961);
            frontier_phi_16_38_ladder = _2654.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2654.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2654.x * cbModelParam._m0[1u].y;
        }
        _2041 = frontier_phi_16_38_ladder_2;
        _2043 = frontier_phi_16_38_ladder_1;
        _2045 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2029 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1122, _1123, _1124), _1961);
        _2041 = _2029.x * cbModelParam._m0[1u].y;
        _2043 = _2029.y * cbModelParam._m0[1u].y;
        _2045 = _2029.z * cbModelParam._m0[1u].y;
    }
    float _2049 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _954);
    float _2050 = isnan(_2049) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2049 : min(cbModelParam._m0[25u].w, _2049));
    float _2139;
    float _2141;
    float _2143;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2103 = fma(_1182, cbModelParam._m0[21u].z, fma(_1178, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1174)) + cbModelParam._m0[21u].w;
        float _2107 = fma(_1182, cbModelParam._m0[22u].z, fma(_1178, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1174)) + cbModelParam._m0[22u].w;
        float _2111 = fma(_1182, cbModelParam._m0[23u].z, fma(_1178, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1174)) + cbModelParam._m0[23u].w;
        float _2114 = fma(_1124, cbModelParam._m0[21u].z, fma(_1123, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1122));
        float _2117 = fma(_1124, cbModelParam._m0[22u].z, fma(_1123, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1122));
        float _2120 = fma(_1124, cbModelParam._m0[23u].z, fma(_1123, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1122));
        float _2280;
        if (_2114 > 0.0)
        {
            _2280 = abs((1.0 - _2103) / _2114);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2114 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2103 + 1.0) / _2114);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2280 = frontier_phi_28_24_ladder;
        }
        float _2548;
        if (_2117 > 0.0)
        {
            _2548 = abs((1.0 - _2107) / _2117);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2117 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2107 + 1.0) / _2117);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2548 = frontier_phi_40_35_ladder;
        }
        float _2753;
        if (_2120 > 0.0)
        {
            _2753 = abs((1.0 - _2111) / _2120);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2120 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2111 + 1.0) / _2120);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2753 = frontier_phi_49_46_ladder;
        }
        float _2755 = isnan(_2548) ? _2280 : (isnan(_2280) ? _2548 : min(_2280, _2548));
        float _2756 = isnan(_2753) ? _2755 : (isnan(_2755) ? _2753 : min(_2755, _2753));
        float _2760 = (_2756 * _2114) + _2103;
        float _2761 = (_2756 * _2117) + _2107;
        float _2762 = (_2756 * _2120) + _2111;
        float _2763 = _2756 * 9.9999997473787516355514526367188e-05;
        float _2764 = (-1.0) - _2763;
        float _2766 = _2763 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2762 > _2766) || ((_2762 < _2764) || ((_2761 > _2766) || ((_2761 < _2764) || ((_2760 < _2764) || (_2760 > _2766))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2990 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2762, cbModelParam._m0[17u].z, fma(_2761, cbModelParam._m0[17u].y, _2760 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2762, cbModelParam._m0[18u].z, fma(_2761, cbModelParam._m0[18u].y, _2760 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2762, cbModelParam._m0[19u].z, fma(_2761, cbModelParam._m0[19u].y, _2760 * cbModelParam._m0[19u].x))), _2050);
            frontier_phi_25_49_ladder = _2990.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2990.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2990.x * cbModelParam._m0[1u].z;
        }
        _2139 = frontier_phi_25_49_ladder_2;
        _2141 = frontier_phi_25_49_ladder_1;
        _2143 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2123 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1122, _1123, _1124), _2050);
        _2139 = _2123.x * cbModelParam._m0[1u].z;
        _2141 = _2123.y * cbModelParam._m0[1u].z;
        _2143 = _2123.z * cbModelParam._m0[1u].z;
    }
    float _2155 = ((((1.0 - _1142) * ((_1130 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1142 * _1130)) * _1114;
    float _2156 = _2155 * ((cbModelParam._m0[1u].w * (_2139 - _2041)) + _2041);
    float _2157 = _2155 * ((cbModelParam._m0[1u].w * (_2141 - _2043)) + _2043);
    float _2158 = _2155 * ((cbModelParam._m0[1u].w * (_2143 - _2045)) + _2045);
    float _2161 = fma(_2158, cbSceneParam._m0[89u].z, fma(_2157, cbSceneParam._m0[89u].y, _2156 * cbSceneParam._m0[89u].x));
    float _2164 = fma(_2158, cbSceneParam._m0[90u].z, fma(_2157, cbSceneParam._m0[90u].y, _2156 * cbSceneParam._m0[90u].x));
    float _2167 = fma(_2158, cbSceneParam._m0[91u].z, fma(_2157, cbSceneParam._m0[91u].y, _2156 * cbSceneParam._m0[91u].x));
    vec4 _2175 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1050, _1051));
    float _2177 = _2175.w;
    float _2189 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2177);
    float _2190 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2177);
    float _2191 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2177);
    uvec4 _2195 = floatBitsToUint(cbInstanceData._m0[_1089 + 5u]);
    uint _2197 = _2195.x * 14u;
    uint _2198 = _2197 + 13u;
    float _2205 = _1114 + (-1.0);
    float _2210 = (cbLight._m0[_2198].x * _2205) + 1.0;
    float _2211 = (cbLight._m0[_2198].y * _2205) + 1.0;
    float _2212 = (cbLight._m0[_2198].z * _2205) + 1.0;
    float _2213 = (cbLight._m0[_2198].w * _2205) + 1.0;
    uint _2214 = _2197 + 5u;
    float _2220 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
    uint _2224 = _2197 + 4u;
    float _2234 = isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0));
    uint _2238 = _2197 | 1u;
    float _2249 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_951, _952, _953));
    float _2252 = dot(vec3(cbLight._m0[_2238].xyz), vec3(_951, _952, _953));
    float _4488 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
    float _4499 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
    float _2257 = (isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0))) * 0.3183098733425140380859375;
    float _2259 = (isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0))) * 0.3183098733425140380859375;
    float _2266 = ((cbLight._m0[_2214].x * _2220) * _2259) + (((cbLight._m0[_2224].x * _2189) * _2234) * _2257);
    float _2267 = ((_2220 * cbLight._m0[_2214].y) * _2259) + (((cbLight._m0[_2224].y * _2190) * _2234) * _2257);
    float _2268 = ((_2220 * cbLight._m0[_2214].z) * _2259) + (((cbLight._m0[_2224].z * _2191) * _2234) * _2257);
    uvec4 _2272 = floatBitsToUint(cbLight._m0[_2197 + 12u]);
    bool _2274 = _2272.x == 0u;
    float _2285;
    float _2287;
    float _2289;
    if (_2274)
    {
        _2285 = _2266;
        _2287 = _2267;
        _2289 = _2268;
    }
    else
    {
        uint _2293 = _2197 + 6u;
        float _2309 = (dot(vec3(cbLight._m0[_2197 + 2u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2310 = _2309 * _2309;
        float _4510 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
        float _2311 = isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0));
        float _2312 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2285 = (((cbLight._m0[_2293].x * 0.3183098733425140380859375) * _2311) * _2312) + _2266;
        _2287 = (((cbLight._m0[_2293].y * 0.3183098733425140380859375) * _2311) * _2312) + _2267;
        _2289 = (((cbLight._m0[_2293].z * 0.3183098733425140380859375) * _2311) * _2312) + _2268;
    }
    bool _2292 = _2272.y == 0u;
    float _2330;
    float _2332;
    float _2334;
    if (_2292)
    {
        _2330 = _2285;
        _2332 = _2287;
        _2334 = _2289;
    }
    else
    {
        uint _2492 = _2197 + 7u;
        float _2508 = (dot(vec3(cbLight._m0[_2197 + 3u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2509 = _2508 * _2508;
        float _4526 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
        float _2510 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
        float _2511 = isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0));
        _2330 = (((cbLight._m0[_2492].x * 0.3183098733425140380859375) * _2510) * _2511) + _2285;
        _2332 = (((cbLight._m0[_2492].y * 0.3183098733425140380859375) * _2510) * _2511) + _2287;
        _2334 = (((cbLight._m0[_2492].z * 0.3183098733425140380859375) * _2510) * _2511) + _2289;
    }
    uint _2337 = _2197 + 8u;
    float _2350 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2197].w)) * _954) * 0.949999988079071044921875);
    float _2351 = _2350 * _2350;
    float _2352 = cbLight._m0[_2197].x + _1030;
    float _2353 = cbLight._m0[_2197].y + _1031;
    float _2354 = cbLight._m0[_2197].z + _1032;
    float _2358 = inversesqrt(dot(vec3(_2352, _2353, _2354), vec3(_2352, _2353, _2354)));
    float _2359 = _2358 * _2352;
    float _2360 = _2358 * _2353;
    float _2361 = _2358 * _2354;
    float _2362 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2197].xyz));
    float _4542 = isnan(0.0) ? _2362 : (isnan(_2362) ? 0.0 : max(_2362, 0.0));
    float _2365 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
    float _4553 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _2366 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
    float _2367 = dot(vec3(_951, _952, _953), vec3(_2359, _2360, _2361));
    float _4564 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
    float _2370 = isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0));
    float _2371 = dot(vec3(cbLight._m0[_2197].xyz), vec3(_2359, _2360, _2361));
    float _4575 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
    float _2375 = _2351 * _2351;
    float _2379 = ((_2370 * _2370) * (_2375 + (-1.0))) + 1.0;
    float _2390 = (exp2(log2(1.0 - (isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2391 = 1.0 - _2351;
    float _2402 = (0.5 / (((_2366 * ((_2365 * _2391) + _2351)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2391) + _2351) * _2365))) * _2365;
    float _4586 = isnan(0.0) ? _2402 : (isnan(_2402) ? 0.0 : max(_2402, 0.0));
    float _2404 = (isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0))) * (_2375 / ((_2379 * _2379) * 3.141590118408203125));
    uint _2418 = _2197 + 9u;
    float _2429 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2238].w)) * _954) * 0.949999988079071044921875);
    float _2430 = _2429 * _2429;
    float _2431 = cbLight._m0[_2238].x + _1030;
    float _2432 = cbLight._m0[_2238].y + _1031;
    float _2433 = cbLight._m0[_2238].z + _1032;
    float _2437 = inversesqrt(dot(vec3(_2431, _2432, _2433), vec3(_2431, _2432, _2433)));
    float _2438 = _2437 * _2431;
    float _2439 = _2437 * _2432;
    float _2440 = _2437 * _2433;
    float _2441 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2238].xyz));
    float _4597 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
    float _2444 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
    float _2445 = dot(vec3(_951, _952, _953), vec3(_2438, _2439, _2440));
    float _4608 = isnan(0.0) ? _2445 : (isnan(_2445) ? 0.0 : max(_2445, 0.0));
    float _2448 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
    float _2449 = dot(vec3(cbLight._m0[_2238].xyz), vec3(_2438, _2439, _2440));
    float _4619 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _2453 = _2430 * _2430;
    float _2457 = ((_2448 * _2448) * (_2453 + (-1.0))) + 1.0;
    float _2466 = (exp2(log2(1.0 - (isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2467 = 1.0 - _2430;
    float _2477 = (0.5 / (((_2366 * ((_2444 * _2467) + _2430)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2467) + _2430) * _2444))) * _2444;
    float _4630 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _2479 = (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_2453 / ((_2457 * _2457) * 3.141590118408203125));
    float _2489 = (((_2466 * cbLight._m0[_2418].x) * _2479) * _2220) + ((((cbLight._m0[_2337].x * _2189) * _2390) * _2404) * _2234);
    float _2490 = (((_2466 * cbLight._m0[_2418].y) * _2479) * _2220) + ((((cbLight._m0[_2337].y * _2190) * _2390) * _2404) * _2234);
    float _2491 = (((_2466 * cbLight._m0[_2418].z) * _2479) * _2220) + ((((cbLight._m0[_2337].z * _2191) * _2390) * _2404) * _2234);
    float _2553;
    float _2555;
    float _2557;
    if (_2274)
    {
        _2553 = _2489;
        _2555 = _2490;
        _2557 = _2491;
    }
    else
    {
        uint _2559 = _2197 + 2u;
        uint _2563 = _2197 + 10u;
        float _2577 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2559].w)) * _954) * 0.949999988079071044921875);
        float _2578 = _2577 * _2577;
        float _2579 = cbLight._m0[_2559].x + _1030;
        float _2580 = cbLight._m0[_2559].y + _1031;
        float _2581 = cbLight._m0[_2559].z + _1032;
        float _2585 = inversesqrt(dot(vec3(_2579, _2580, _2581), vec3(_2579, _2580, _2581)));
        float _2586 = _2585 * _2579;
        float _2587 = _2585 * _2580;
        float _2588 = _2585 * _2581;
        float _2589 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2559].xyz));
        float _4641 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2592 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _2593 = dot(vec3(_951, _952, _953), vec3(_2586, _2587, _2588));
        float _4652 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
        float _2596 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _2597 = dot(vec3(cbLight._m0[_2559].xyz), vec3(_2586, _2587, _2588));
        float _4663 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2601 = _2578 * _2578;
        float _2605 = ((_2596 * _2596) * (_2601 + (-1.0))) + 1.0;
        float _2614 = (exp2(log2(1.0 - (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2615 = 1.0 - _2578;
        float _2625 = (0.5 / (((_2366 * ((_2592 * _2615) + _2578)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2615) + _2578) * _2592))) * _2592;
        float _4674 = isnan(0.0) ? _2625 : (isnan(_2625) ? 0.0 : max(_2625, 0.0));
        float _2627 = (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0))) * (_2601 / ((_2605 * _2605) * 3.141590118408203125));
        float _2628 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2553 = (((_2614 * cbLight._m0[_2563].x) * _2627) * _2628) + _2489;
        _2555 = (((_2614 * cbLight._m0[_2563].y) * _2627) * _2628) + _2490;
        _2557 = (((_2614 * cbLight._m0[_2563].z) * _2627) * _2628) + _2491;
    }
    float _2663;
    float _2665;
    float _2667;
    if (_2292)
    {
        _2663 = _2553;
        _2665 = _2555;
        _2667 = _2557;
    }
    else
    {
        uint _2674 = _2197 + 3u;
        uint _2678 = _2197 + 11u;
        float _2692 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2674].w)) * _954) * 0.949999988079071044921875);
        float _2693 = _2692 * _2692;
        float _2694 = cbLight._m0[_2674].x + _1030;
        float _2695 = cbLight._m0[_2674].y + _1031;
        float _2696 = cbLight._m0[_2674].z + _1032;
        float _2700 = inversesqrt(dot(vec3(_2694, _2695, _2696), vec3(_2694, _2695, _2696)));
        float _2701 = _2700 * _2694;
        float _2702 = _2700 * _2695;
        float _2703 = _2700 * _2696;
        float _2704 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2674].xyz));
        float _4690 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2707 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
        float _2708 = dot(vec3(_951, _952, _953), vec3(_2701, _2702, _2703));
        float _4701 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2711 = isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0));
        float _2712 = dot(vec3(cbLight._m0[_2674].xyz), vec3(_2701, _2702, _2703));
        float _4712 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2716 = _2693 * _2693;
        float _2720 = ((_2711 * _2711) * (_2716 + (-1.0))) + 1.0;
        float _2729 = (exp2(log2(1.0 - (isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2730 = 1.0 - _2693;
        float _2740 = (0.5 / (((_2366 * ((_2707 * _2730) + _2693)) + 9.9999999392252902907785028219223e-09) + (((_2366 * _2730) + _2693) * _2707))) * _2707;
        float _4723 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2742 = (isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0))) * (_2716 / ((_2720 * _2720) * 3.141590118408203125));
        float _2743 = isnan(1.0) ? _2213 : (isnan(_2213) ? 1.0 : min(_2213, 1.0));
        _2663 = (((_2729 * cbLight._m0[_2678].x) * _2742) * _2743) + _2553;
        _2665 = (((_2729 * cbLight._m0[_2678].y) * _2742) * _2743) + _2555;
        _2667 = (((_2729 * cbLight._m0[_2678].z) * _2742) * _2743) + _2557;
    }
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    float _2886;
    float _2888;
    if (_2195.y == 0u)
    {
        float _2818 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2819 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2818;
        float _2820 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2818;
        float _2821 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2818;
        uvec4 _2833 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2834 = _2833.x;
        uint _2845 = uint((float(_2833.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1051) / _2834))) + floor(float(uint(cbSceneParam._m0[85u].x * _1050) / _2834)));
        float _2855 = (log2(_2821 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2856 = isnan(0.0) ? _2855 : (isnan(_2855) ? 0.0 : max(_2855, 0.0));
        uint _2859 = uint(isnan(14.0) ? _2856 : (isnan(_2856) ? 14.0 : min(_2856, 14.0)));
        uvec4 _2864 = texelFetch(g_lightClusterGridBuffer, int(((_2859 << 2u) + (_2845 << 6u)) >> 2u));
        uint _2865 = _2864.x;
        uint _2866 = _2833.z;
        float _2995;
        float _2997;
        float _2999;
        float _3001;
        float _3003;
        float _3005;
        if (((((1u << ((_2866 >> 4u) & 15u)) + 4294967295u) & _2865) == 0u) || ((_2866 & 240u) == 0u))
        {
            _2995 = 0.0;
            _2997 = 0.0;
            _2999 = 0.0;
            _3001 = 0.0;
            _3003 = 0.0;
            _3005 = 0.0;
        }
        else
        {
            float _2996;
            float _2998;
            float _3000;
            float _3002;
            float _3004;
            float _3006;
            float _3155 = 0.0;
            float _3156 = 0.0;
            float _3157 = 0.0;
            float _3158 = 0.0;
            float _3159 = 0.0;
            float _3160 = 0.0;
            uint _3161 = 0u;
            uint _3170;
            bool _3171;
            for (;;)
            {
                _3170 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3161 << 2u)) >> 2u)).x;
                _3171 = _3170 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3171)
                {
                    frontier_phi_66_pred = _3155;
                    frontier_phi_66_pred_1 = _3160;
                    frontier_phi_66_pred_2 = _3159;
                    frontier_phi_66_pred_3 = _3158;
                    frontier_phi_66_pred_4 = _3157;
                    frontier_phi_66_pred_5 = _3156;
                }
                else
                {
                    float _3300;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    float _3305;
                    uint _3306;
                    _3300 = _3155;
                    _3301 = _3156;
                    _3302 = _3157;
                    _3303 = _3158;
                    _3304 = _3159;
                    _3305 = _3160;
                    _3306 = _3170;
                    float _3227;
                    float _3228;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    for (;;)
                    {
                        uint _3310 = uint(findLSB(_3306)) + (_3161 << 5u);
                        uint _3307 = (_3306 + 4294967295u) & _3306;
                        uint _3312 = _3310 * 48u;
                        vec4 _3326 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3312)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 3u)).x));
                        uint _3332 = (_3310 * 48u) + 4u;
                        vec4 _3345 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3332)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 3u)).x));
                        uint _3351 = (_3310 * 48u) + 8u;
                        vec3 _3362 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3351)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 2u)).x));
                        float _3366 = _3326.x - _2819;
                        float _3367 = _3326.y - _2820;
                        float _3368 = _3326.z - _2821;
                        float _3369 = dot(vec3(_3366, _3367, _3368), vec3(_3366, _3367, _3368));
                        float _3372 = inversesqrt(_3369);
                        float _3373 = _3372 * _3366;
                        float _3374 = _3372 * _3367;
                        float _3375 = _3372 * _3368;
                        float _3376 = dot(vec3(_1070, _1073, _1076), vec3(_3373, _3374, _3375));
                        float _3381 = 1.0 - (_3369 * _3326.w);
                        float _4749 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0));
                        float _3382 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                        float _3383 = sqrt(_3369) * _3345.w;
                        float _3386 = 1.39999997615814208984375 / (_3383 + 1.39999997615814208984375);
                        float _3387 = _3386 * _3386;
                        float _3390 = ((1.0 - _3387) * _3376) + _3387;
                        float _3393 = _3383 * _3383;
                        float _3397 = ((isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0))) * _3382) / ((_3393 * 0.699999988079071044921875) + 1.0);
                        float _3401 = (-0.0) - _2819;
                        float _3402 = (-0.0) - _2820;
                        float _3403 = (-0.0) - _2821;
                        float _3407 = inversesqrt(dot(vec3(_3401, _3402, _3403), vec3(_3401, _3402, _3403)));
                        float _3408 = _3407 * _3401;
                        float _3409 = _3407 * _3402;
                        float _3410 = _3407 * _3403;
                        float _3418 = exp2(log2(1.0 / ((_3393 * 3.5) + 5.0)) * 0.25);
                        float _3419 = 1.0 - _1130;
                        float _3426 = sqrt(1.0 - ((1.0 - (_3419 * _3419)) * (1.0 - (_3418 * _3418))));
                        float _3427 = _3426 * _3426;
                        float _3428 = _3427 * _3427;
                        float _3429 = _3408 + _3373;
                        float _3430 = _3409 + _3374;
                        float _3431 = _3410 + _3375;
                        float _3435 = inversesqrt(dot(vec3(_3429, _3430, _3431), vec3(_3429, _3430, _3431)));
                        float _3439 = dot(vec3(_1070, _1073, _1076), vec3(_3408, _3409, _3410));
                        float _4765 = isnan(0.0) ? _3439 : (isnan(_3439) ? 0.0 : max(_3439, 0.0));
                        float _3442 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                        float _3443 = dot(vec3(_1070, _1073, _1076), vec3(_3435 * _3429, _3435 * _3430, _3435 * _3431));
                        float _4776 = isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : max(_3443, 0.0));
                        float _3446 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                        float _3450 = ((_3446 * _3446) * (_3428 + (-1.0))) + 1.0;
                        float _3451 = _3386 * _3427;
                        float _3452 = _3451 * _3451;
                        float _3455 = ((1.0 - _3452) * _3376) + _3452;
                        float _4787 = isnan(0.0) ? _3455 : (isnan(_3455) ? 0.0 : max(_3455, 0.0));
                        float _3456 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                        float _3457 = 1.0 - _3427;
                        float _3467 = (0.5 / (((_3456 * ((_3442 * _3457) + _3427)) + 9.9999999392252902907785028219223e-09) + (((_3456 * _3457) + _3427) * _3442))) * _3456;
                        float _4798 = isnan(0.0) ? _3467 : (isnan(_3467) ? 0.0 : max(_3467, 0.0));
                        float _3478 = (((_3428 * 3.1415927410125732421875) * (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0)))) / ((_3450 * _3450) * ((_3393 * 2.1991131305694580078125) + 3.141590118408203125))) * _3382;
                        _3230 = (_3397 * _3345.x) + _3303;
                        _3231 = (_3397 * _3345.y) + _3304;
                        _3232 = (_3397 * _3345.z) + _3305;
                        _3227 = (_3478 * _3362.x) + _3300;
                        _3228 = (_3478 * _3362.y) + _3301;
                        _3229 = (_3478 * _3362.z) + _3302;
                        if (_3307 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3300 = _3227;
                            _3301 = _3228;
                            _3302 = _3229;
                            _3303 = _3230;
                            _3304 = _3231;
                            _3305 = _3232;
                            _3306 = _3307;
                        }
                    }
                    frontier_phi_66_pred = _3227;
                    frontier_phi_66_pred_1 = _3232;
                    frontier_phi_66_pred_2 = _3231;
                    frontier_phi_66_pred_3 = _3230;
                    frontier_phi_66_pred_4 = _3229;
                    frontier_phi_66_pred_5 = _3228;
                }
                _2996 = frontier_phi_66_pred;
                _3006 = frontier_phi_66_pred_1;
                _3004 = frontier_phi_66_pred_2;
                _3002 = frontier_phi_66_pred_3;
                _3000 = frontier_phi_66_pred_4;
                _2998 = frontier_phi_66_pred_5;
                uint _3162 = _3161 + 1u;
                if (_3162 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3155 = _2996;
                    _3156 = _2998;
                    _3157 = _3000;
                    _3158 = _3002;
                    _3159 = _3004;
                    _3160 = _3006;
                    _3161 = _3162;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2995 = _2996;
            _2997 = _2998;
            _2999 = _3000;
            _3001 = _3002;
            _3003 = _3004;
            _3005 = _3006;
        }
        uvec4 _3009 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3010 = _3009.z;
        uint _3012 = (_3010 >> 8u) & 15u;
        float _3123;
        float _3125;
        float _3127;
        float _3129;
        float _3131;
        float _3133;
        if (((4294967295u << _3012) & _2865) == 0u)
        {
            _3123 = _2995;
            _3125 = _2997;
            _3127 = _2999;
            _3129 = _3001;
            _3131 = _3003;
            _3133 = _3005;
        }
        else
        {
            float _3148 = inversesqrt(dot(vec3(_2819, _2820, _2821), vec3(_2819, _2820, _2821)));
            float _3149 = _3148 * _2819;
            float _3150 = _3148 * _2820;
            float _3151 = _3148 * _2821;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_3012 < ((_3010 >> 12u) & 15u))
            {
                float _3124;
                float _3126;
                float _3128;
                float _3130;
                float _3132;
                float _3134;
                float _3283 = _2995;
                float _3284 = _2997;
                float _3285 = _2999;
                float _3286 = _3001;
                float _3287 = _3003;
                float _3288 = _3005;
                uint _3289 = _3012;
                uint _3298;
                bool _3299;
                for (;;)
                {
                    _3298 = texelFetch(g_lightClassification, int((((_2859 << 5u) + (_2845 << 9u)) + (_3289 << 2u)) >> 2u)).x;
                    _3299 = _3298 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3299)
                    {
                        frontier_phi_77_pred = _3288;
                        frontier_phi_77_pred_1 = _3287;
                        frontier_phi_77_pred_2 = _3286;
                        frontier_phi_77_pred_3 = _3285;
                        frontier_phi_77_pred_4 = _3284;
                        frontier_phi_77_pred_5 = _3283;
                    }
                    else
                    {
                        float _3492;
                        float _3493;
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3785;
                        float _3786;
                        float _3787;
                        float _3788;
                        float _3789;
                        float _3790;
                        float _3505 = _3283;
                        float _3506 = _3284;
                        float _3507 = _3285;
                        float _3508 = _3286;
                        float _3509 = _3287;
                        float _3510 = _3288;
                        uint _3511 = _3298;
                        uint _3512;
                        vec4 _3537;
                        float _3538;
                        vec4 _3553;
                        vec3 _3565;
                        vec4 _3580;
                        vec4 _3595;
                        float _3641;
                        bool _3642;
                        for (;;)
                        {
                            uint _3522 = ((_3289 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3511));
                            _3512 = (_3511 + 4294967295u) & _3511;
                            uint _3524 = _3522 * 40u;
                            _3537 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3524)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 3u)).x));
                            _3538 = _3537.w;
                            uint _3540 = (_3522 * 40u) + 4u;
                            _3553 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3540)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 3u)).x));
                            uint _3555 = (_3522 * 40u) + 8u;
                            _3565 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3555)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3555 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3555 + 2u)).x));
                            uint _3567 = (_3522 * 40u) + 16u;
                            _3580 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3567)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 3u)).x));
                            uint _3582 = (_3522 * 40u) + 20u;
                            _3595 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 3u)).x));
                            uint _3597 = (_3522 * 40u) + 24u;
                            vec4 _3610 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 3u)).x));
                            uint _3616 = (_3522 * 40u) + 28u;
                            vec4 _3629 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3616)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 3u)).x));
                            _3641 = fma(_2821, _3629.z, fma(_2820, _3629.y, _3629.x * _2819)) + _3629.w;
                            _3642 = !((fma(_2821, _3610.z, fma(_2820, _3610.y, _3610.x * _2819)) + _3610.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3642)
                            {
                                float _3669 = _3537.x - _2819;
                                float _3670 = _3537.y - _2820;
                                float _3671 = _3537.z - _2821;
                                float _3672 = dot(vec3(_3669, _3670, _3671), vec3(_3669, _3670, _3671));
                                float _3675 = inversesqrt(_3672);
                                float _3676 = _3675 * _3669;
                                float _3677 = _3675 * _3670;
                                float _3678 = _3675 * _3671;
                                float _3682 = 1.0 - (_3672 / (_3538 * _3538));
                                float _4809 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3683 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
                                float _3687 = sqrt(_3672) * _3553.w;
                                float _3689 = 1.39999997615814208984375 / (_3687 + 1.39999997615814208984375);
                                float _3690 = _3689 * _3689;
                                float _3693 = ((1.0 - _3690) * dot(vec3(_3676, _3677, _3678), vec3(_1070, _1073, _1076))) + _3690;
                                float _3696 = _3687 * _3687;
                                float _3700 = (fma(_2821, _3580.z, fma(_2820, _3580.y, _3580.x * _2819)) + _3580.w) / _3641;
                                float _3701 = (fma(_2821, _3595.z, fma(_2820, _3595.y, _3595.x * _2819)) + _3595.w) / _3641;
                                float _3705 = 1.0 - dot(vec2(_3700, _3701), vec2(_3700, _3701));
                                float _4825 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                                float _3706 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
                                float _3707 = _3706 * (((isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0))) * _3683) / ((_3696 * 0.699999988079071044921875) + 1.0));
                                float _3719 = exp2(log2(1.0 / ((_3696 * 3.5) + 5.0)) * 0.25);
                                float _3720 = 1.0 - _1130;
                                float _3727 = sqrt(1.0 - ((1.0 - (_3720 * _3720)) * (1.0 - (_3719 * _3719))));
                                float _3728 = _3727 * _3727;
                                float _3729 = _3728 * _3728;
                                float _3730 = _3676 - _3149;
                                float _3731 = _3677 - _3150;
                                float _3732 = _3678 - _3151;
                                float _3736 = inversesqrt(dot(vec3(_3730, _3731, _3732), vec3(_3730, _3731, _3732)));
                                float _3740 = dot(vec3(_1070, _1073, _1076), vec3((-0.0) - _3149, (-0.0) - _3150, (-0.0) - _3151));
                                float _4836 = isnan(0.0) ? _3740 : (isnan(_3740) ? 0.0 : max(_3740, 0.0));
                                float _3743 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
                                float _3744 = dot(vec3(_1070, _1073, _1076), vec3(_3736 * _3730, _3736 * _3731, _3736 * _3732));
                                float _4847 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                                float _3747 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
                                float _3751 = ((_3747 * _3747) * (_3729 + (-1.0))) + 1.0;
                                float _3752 = _3689 * _3728;
                                float _3753 = _3752 * _3752;
                                float _3759 = ((1.0 - _3753) * dot(vec3(_1070, _1073, _1076), vec3(_3676, _3677, _3678))) + _3753;
                                float _4858 = isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : max(_3759, 0.0));
                                float _3760 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
                                float _3761 = 1.0 - _3728;
                                float _3771 = (0.5 / (((_3760 * ((_3743 * _3761) + _3728)) + 9.9999999392252902907785028219223e-09) + (((_3760 * _3761) + _3728) * _3743))) * _3760;
                                float _4869 = isnan(0.0) ? _3771 : (isnan(_3771) ? 0.0 : max(_3771, 0.0));
                                float _3781 = (_3706 * _3683) * (((_3729 * 3.1415927410125732421875) * (isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0)))) / ((_3751 * _3751) * ((_3696 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3707 * _3553.y;
                                frontier_phi_83_pred_1 = _3707 * _3553.x;
                                frontier_phi_83_pred_2 = _3781 * _3565.z;
                                frontier_phi_83_pred_3 = _3781 * _3565.y;
                                frontier_phi_83_pred_4 = _3781 * _3565.x;
                                frontier_phi_83_pred_5 = _3707 * _3553.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3789 = frontier_phi_83_pred;
                            _3788 = frontier_phi_83_pred_1;
                            _3787 = frontier_phi_83_pred_2;
                            _3786 = frontier_phi_83_pred_3;
                            _3785 = frontier_phi_83_pred_4;
                            _3790 = frontier_phi_83_pred_5;
                            _3495 = _3788 + _3508;
                            _3496 = _3789 + _3509;
                            _3497 = _3790 + _3510;
                            _3492 = _3785 + _3505;
                            _3493 = _3786 + _3506;
                            _3494 = _3787 + _3507;
                            if (_3512 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3505 = _3492;
                                _3506 = _3493;
                                _3507 = _3494;
                                _3508 = _3495;
                                _3509 = _3496;
                                _3510 = _3497;
                                _3511 = _3512;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3497;
                        frontier_phi_77_pred_1 = _3496;
                        frontier_phi_77_pred_2 = _3495;
                        frontier_phi_77_pred_3 = _3494;
                        frontier_phi_77_pred_4 = _3493;
                        frontier_phi_77_pred_5 = _3492;
                    }
                    _3134 = frontier_phi_77_pred;
                    _3132 = frontier_phi_77_pred_1;
                    _3130 = frontier_phi_77_pred_2;
                    _3128 = frontier_phi_77_pred_3;
                    _3126 = frontier_phi_77_pred_4;
                    _3124 = frontier_phi_77_pred_5;
                    uint _3290 = _3289 + 1u;
                    if (_3290 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3283 = _3124;
                        _3284 = _3126;
                        _3285 = _3128;
                        _3286 = _3130;
                        _3287 = _3132;
                        _3288 = _3134;
                        _3289 = _3290;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3128;
                frontier_phi_58_59_ladder_1 = _3134;
                frontier_phi_58_59_ladder_2 = _3132;
                frontier_phi_58_59_ladder_3 = _3130;
                frontier_phi_58_59_ladder_4 = _3126;
                frontier_phi_58_59_ladder_5 = _3124;
            }
            else
            {
                frontier_phi_58_59_ladder = _2999;
                frontier_phi_58_59_ladder_1 = _3005;
                frontier_phi_58_59_ladder_2 = _3003;
                frontier_phi_58_59_ladder_3 = _3001;
                frontier_phi_58_59_ladder_4 = _2997;
                frontier_phi_58_59_ladder_5 = _2995;
            }
            _3123 = frontier_phi_58_59_ladder_5;
            _3125 = frontier_phi_58_59_ladder_4;
            _3127 = frontier_phi_58_59_ladder;
            _3129 = frontier_phi_58_59_ladder_3;
            _3131 = frontier_phi_58_59_ladder_2;
            _3133 = frontier_phi_58_59_ladder_1;
        }
        float _3138 = isnan(1.0) ? _1114 : (isnan(_1114) ? 1.0 : min(_1114, 1.0));
        _2878 = (_3138 * _3129) + _2330;
        _2880 = (_3138 * _3131) + _2332;
        _2882 = (_3138 * _3133) + _2334;
        _2884 = ((_3123 * 0.039999999105930328369140625) * _3138) + _2663;
        _2886 = ((_3125 * 0.039999999105930328369140625) * _3138) + _2665;
        _2888 = ((_3127 * 0.039999999105930328369140625) * _3138) + _2667;
    }
    else
    {
        _2878 = _2330;
        _2880 = _2332;
        _2882 = _2334;
        _2884 = _2663;
        _2886 = _2665;
        _2888 = _2667;
    }
    uint _2894 = _1090 + uint(cbMatDynParam._m0[0u].w);
    float _2900 = cbInstanceData._m0[_2894].x * (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[21u].w) * (((_666.x - _663) * _644) + _663)) - _903) * _449) + _903);
    float _2901 = cbInstanceData._m0[_2894].y * (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[21u].w) * (((_666.y - _664) * _644) + _664)) - _904) * _449) + _904);
    float _2902 = cbInstanceData._m0[_2894].z * (((((cbMtdParam._m0[10u].z * cbMtdParam._m0[21u].w) * (((_666.z - _665) * _644) + _665)) - _905) * _449) + _905);
    float _4885 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    float _4896 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _4907 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _2919 = (((isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0))) * (_2878 + ((isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0))) * _1114))) + ((_2884 + ((isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0))) * _1950)) * cbPerFrame._m0[3u].x)) + _2900;
    float _2921 = (_2901 + ((_2886 + ((isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0))) * _1950)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0))) * (_2880 + ((isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))) * _1114)));
    float _2923 = (_2902 + ((_2888 + ((isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0))) * _1950)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0))) * (_2882 + ((isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0))) * _1114)));
    float _2924 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
    float _2925 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
    float _2926 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
    float _2932 = cbMtdParam._m0[2u].x * _2900;
    float _2933 = cbMtdParam._m0[2u].y * _2901;
    float _2934 = cbMtdParam._m0[2u].z * _2902;
    float _4933 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2936 = isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0));
    uint _2937 = _1089 + 6u;
    float _2945 = _1050 / cbSceneParam._m0[86u].x;
    float _2946 = _1051 / cbSceneParam._m0[86u].y;
    vec4 _2960 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2945, _2946, (log2((isnan(cbSceneParam._m0[77u].w) ? _973 : (isnan(_973) ? cbSceneParam._m0[77u].w : min(_973, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2962 = _2960.x;
    float _2963 = _2960.y;
    float _2964 = _2960.z;
    float _2965 = _2960.w;
    float _3057;
    float _3059;
    float _3061;
    float _3063;
    if (_973 > cbSceneParam._m0[78u].w)
    {
        float _3020 = isnan(_973) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _973 : min(cbSceneParam._m0[80u].w, _973));
        float _3021 = _3020 / _973;
        float _3032 = _3021 * _1023;
        float _3033 = _1024 * _3021;
        float _3034 = (-0.0) - _3033;
        float _3035 = _3021 * _1025;
        float _3037 = (cbSceneParam._m0[77u].w * _3034) / _3020;
        float _3038 = _3037 + cbSceneParam._m0[79u].w;
        float _3039 = cbSceneParam._m0[79u].w - _3033;
        float _3045 = sqrt(((_3032 * _3032) + (_3033 * _3033)) + (_3035 * _3035));
        float _3048 = (1.0 - (cbSceneParam._m0[77u].w / _3020)) * _3045;
        float _3053 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3055 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3240;
        if (abs((_3034 - _3037) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3240 = ((((_3038 > 0.0) ? exp2(_3053 * _3038) : (2.0 - exp2(_3055 * _3038))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3048;
        }
        else
        {
            float _3184 = 1.0 / cbSceneParam._m0[80u].x;
            float _3185 = isnan(_3039) ? _3038 : (isnan(_3038) ? _3039 : max(_3038, _3039));
            float _3186 = isnan(_3039) ? _3038 : (isnan(_3038) ? _3039 : min(_3038, _3039));
            float _3195 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : min(_3185, 0.0));
            float _3196 = isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : min(_3186, 0.0));
            _3240 = ((abs(_3045 / _3034) * cbSceneParam._m0[80u].y) * ((((_3195 - _3196) * 2.0) - ((exp2(_3053 * (isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0)))) - exp2(_3053 * (isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0))))) * _3184)) - ((exp2(_3055 * _3195) - exp2(_3055 * _3196)) * _3184))) + (_3048 * cbSceneParam._m0[80u].z);
        }
        vec4 _3242 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2945, _2946, 1.0), 0.0);
        float _3251 = exp2((_3240 * (-1.44269502162933349609375)) * (1.0 - _3242.w));
        float _3252 = log2(_3251);
        float _3268 = log2(_2965);
        _3057 = (exp2(_3268 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3252 * cbSceneParam._m0[78u].x)) * _3242.x) / cbSceneParam._m0[78u].x)) + _2962;
        _3059 = (exp2(_3268 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3252 * cbSceneParam._m0[78u].y)) * _3242.y) / cbSceneParam._m0[78u].y)) + _2963;
        _3061 = (exp2(_3268 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3252 * cbSceneParam._m0[78u].z)) * _3242.z) / cbSceneParam._m0[78u].z)) + _2964;
        _3063 = _3251 * _2965;
    }
    else
    {
        _3057 = _2962;
        _3059 = _2963;
        _3061 = _2964;
        _3063 = _2965;
    }
    bool _3278;
    vec4 _3072;
    vec4 _3094;
    float _3096;
    float _3100;
    float _3101;
    float _3102;
    float _3105;
    float _3108;
    float _3111;
    float _3112;
    bool _3122;
    for (;;)
    {
        _3072 = cbMatDynParam._m0[0u];
        float _3074 = roundEven(_3072.y);
        bool _3075 = _3074 == 3.0;
        float _3076 = log2(_3063);
        float _3080 = exp2(_3076 * cbSceneParam._m0[78u].x);
        float _3081 = exp2(_3076 * cbSceneParam._m0[78u].y);
        float _3082 = exp2(_3076 * cbSceneParam._m0[78u].z);
        float _3083 = _3080 * _2924;
        float _3084 = _3081 * _2925;
        float _3085 = _3082 * _2926;
        float _3092 = _1039 + (-0.5);
        _3094 = cbMtdParam._m0[1u];
        _3096 = _3094.y * _3092;
        float _3099 = (_3074 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3100 = _3099 * (_3075 ? _3083 : (_3083 + (cbSceneParam._m0[72u].w * _3057)));
        _3101 = _3099 * (_3075 ? _3084 : (_3084 + (cbSceneParam._m0[72u].w * _3059)));
        _3102 = _3099 * (_3075 ? _3085 : (_3085 + (cbSceneParam._m0[72u].w * _3061)));
        _3105 = ((_2932 * _2936) * _3080) * _3099;
        _3108 = ((_2933 * _2936) * _3081) * _3099;
        _3111 = ((_2934 * _2936) * _3082) * _3099;
        _3112 = _3092 * 0.999000012874603271484375;
        _3122 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3122)
        {
            if ((cbInstanceData._m0[_1089 + 7u].x + _3112) < 0.5)
            {
                _3278 = true;
                break;
            }
        }
        uint _3219 = _1090 + uint(_3072.w);
        if ((cbInstanceData._m0[_3219].w < 1.0) && ((cbInstanceData._m0[_3219].w + _3112) < 0.5))
        {
            _3278 = true;
            break;
        }
        if ((_3096 + 1.0) < _3094.x)
        {
            _3278 = true;
            break;
        }
        _3278 = false;
        break;
    }
    float _3483;
    if (_3278)
    {
        discard_state = true;
        _3483 = 0.0;
    }
    else
    {
        _3483 = cbInstanceData._m0[_2937].w;
    }
    SV_Target.x = _3100;
    SV_Target.y = _3101;
    SV_Target.z = _3102;
    SV_Target.w = _3483;
    SV_Target_1.x = _3105;
    SV_Target_1.y = _3108;
    SV_Target_1.z = _3111;
    SV_Target_1.w = cbInstanceData._m0[_2937].w;
    discard_exit();
}


