#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _170 = texture(sampler2D(P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _176 = _170.x * cbMtdParam._m0[9u].x;
    float _177 = _170.y * cbMtdParam._m0[9u].y;
    float _178 = _170.z * cbMtdParam._m0[9u].z;
    vec4 _190 = texture(sampler2D(P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _197 = cbMtdParam._m0[11u].x + _190.x;
    vec4 _209 = texture(sampler2D(P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _213 = _209.z;
    float _217 = (_209.x * 2.0) + (-1.0);
    float _219 = (_209.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_217, _219), vec2(_217, _219));
    float _374 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _374 : (isnan(_374) ? 1.0 : min(_374, 1.0))));
    vec4 _245 = texture(sampler2D(P_ENEParts_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _252 = fma(_226, _140 * NORMAL.x, fma(_219, _147 * TANGENT.x, (_133 * _126) * _217));
    float _255 = fma(_226, _140 * NORMAL.y, fma(_219, _147 * TANGENT.y, (_133 * _127) * _217));
    float _258 = fma(_226, _140 * NORMAL.z, fma(_219, _147 * TANGENT.z, (_133 * _128) * _217));
    float _262 = inversesqrt(dot(vec3(_252, _255, _258), vec3(_252, _255, _258)));
    float _385 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _396 = isnan(0.0) ? _176 : (isnan(_176) ? 0.0 : max(_176, 0.0));
    float _407 = isnan(0.0) ? _177 : (isnan(_177) ? 0.0 : max(_177, 0.0));
    float _418 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _429 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    uint _282 = uint(roundEven(NORMAL.w)) * 13u;
    uint _285 = (_282 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _291 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0)))) * cbInstanceData._m0[_285].x;
    float _292 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0)))) * cbInstanceData._m0[_285].y;
    float _293 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0)))) * cbInstanceData._m0[_285].z;
    float _440 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _451 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _462 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    uint _300 = _282 + 6u;
    float _346;
    float _347;
    float _348;
    float _349;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _346 = cbInstanceData._m0[_300].w;
        _347 = cbInstanceData._m0[_300].w;
        _348 = cbInstanceData._m0[_300].w;
        _349 = cbInstanceData._m0[_300].w;
    }
    else
    {
        _346 = cbMtdParam._m0[2u].w;
        _347 = 0.0;
        _348 = float(floatBitsToUint(cbInstanceData._m0[_282 + 5u]).x) * 0.0039215688593685626983642578125;
        _349 = TEXCOORD.z;
    }
    SV_Target.x = ((_252 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.y = ((_255 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.z = ((_258 * 0.5) * _262) + 0.500488758087158203125;
    SV_Target.w = _347;
    SV_Target_1.x = isnan(1.0) ? _429 : (isnan(_429) ? 1.0 : min(_429, 1.0));
    SV_Target_1.y = isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _349;
    SV_Target_2.x = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
    SV_Target_2.y = isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0));
    SV_Target_2.z = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
    SV_Target_2.w = _348;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _347;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].y) * _245.x) * cbInstanceData._m0[_285].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].y) * _245.y) * cbInstanceData._m0[_285].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].y) * _245.z) * cbInstanceData._m0[_285].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _346;
}


