#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_8;
layout(location = 5, component = 3) out float TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _192 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _225 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _227 = texelFetch(g_InstanceIndexBuffer, int(_225));
    uint _228 = _227.x;
    uint _230 = _228 * 13u;
    uint _238 = (floatBitsToUint(cbInstanceData._m0[_230 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _245 = _238 + 1u;
    uint _252 = _238 + 2u;
    precise float _259 = POSITION.x * cbObjMatrix._m0[_238].x;
    precise float _260 = POSITION.y * cbObjMatrix._m0[_238].y;
    precise float _261 = _260 + _259;
    precise float _262 = POSITION.z * cbObjMatrix._m0[_238].z;
    precise float _263 = _262 + _261;
    precise float _264 = 1.0 * cbObjMatrix._m0[_238].w;
    precise float _266 = _264 + _263;
    precise float _267 = POSITION.x * cbObjMatrix._m0[_245].x;
    precise float _268 = POSITION.y * cbObjMatrix._m0[_245].y;
    precise float _269 = _268 + _267;
    precise float _270 = POSITION.z * cbObjMatrix._m0[_245].z;
    precise float _271 = _270 + _269;
    precise float _272 = 1.0 * cbObjMatrix._m0[_245].w;
    precise float _273 = _272 + _271;
    precise float _274 = POSITION.x * cbObjMatrix._m0[_252].x;
    precise float _275 = POSITION.y * cbObjMatrix._m0[_252].y;
    precise float _276 = _275 + _274;
    precise float _277 = POSITION.z * cbObjMatrix._m0[_252].z;
    precise float _278 = _277 + _276;
    precise float _279 = 1.0 * cbObjMatrix._m0[_252].w;
    precise float _280 = _279 + _278;
    float _286 = cbSceneParam._m0[3u].x - _266;
    float _287 = cbSceneParam._m0[3u].y - _273;
    float _288 = cbSceneParam._m0[3u].z - _280;
    precise float _324 = _266 - cbSceneParam._m0[3u].x;
    precise float _325 = _273 - cbSceneParam._m0[3u].y;
    precise float _326 = _280 - cbSceneParam._m0[3u].z;
    precise float _354 = _324 * cbSceneParam._m0[24u].x;
    precise float _355 = _325 * cbSceneParam._m0[24u].y;
    precise float _356 = _355 + _354;
    precise float _357 = _326 * cbSceneParam._m0[24u].z;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _360 = _359 + _358;
    precise float _361 = _324 * cbSceneParam._m0[25u].x;
    precise float _362 = _325 * cbSceneParam._m0[25u].y;
    precise float _363 = _362 + _361;
    precise float _364 = _326 * cbSceneParam._m0[25u].z;
    precise float _365 = _364 + _363;
    precise float _366 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _367 = _366 + _365;
    precise float _368 = _324 * cbSceneParam._m0[26u].x;
    precise float _369 = _325 * cbSceneParam._m0[26u].y;
    precise float _370 = _369 + _368;
    precise float _371 = _326 * cbSceneParam._m0[26u].z;
    precise float _372 = _371 + _370;
    precise float _373 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _374 = _373 + _372;
    precise float _375 = _324 * cbSceneParam._m0[27u].x;
    precise float _376 = _325 * cbSceneParam._m0[27u].y;
    precise float _377 = _376 + _375;
    precise float _378 = _326 * cbSceneParam._m0[27u].z;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _381 = _380 + _379;
    gl_Position.x = _360;
    gl_Position.y = _367;
    gl_Position.z = _374;
    gl_Position.w = _381;
    NORMAL_1.x = fma(_195, cbObjMatrix._m0[_238].z, fma(_194, cbObjMatrix._m0[_238].y, cbObjMatrix._m0[_238].x * _192));
    NORMAL_1.y = fma(_195, cbObjMatrix._m0[_245].z, fma(_194, cbObjMatrix._m0[_245].y, cbObjMatrix._m0[_245].x * _192));
    NORMAL_1.z = fma(_195, cbObjMatrix._m0[_252].z, fma(_194, cbObjMatrix._m0[_252].y, cbObjMatrix._m0[_252].x * _192));
    NORMAL_1.w = float(_228);
    TANGENT_1.x = fma(_207, cbObjMatrix._m0[_238].z, fma(_206, cbObjMatrix._m0[_238].y, cbObjMatrix._m0[_238].x * _205));
    TANGENT_1.y = fma(_207, cbObjMatrix._m0[_245].z, fma(_206, cbObjMatrix._m0[_245].y, cbObjMatrix._m0[_245].x * _205));
    TANGENT_1.z = fma(_207, cbObjMatrix._m0[_252].z, fma(_206, cbObjMatrix._m0[_252].y, cbObjMatrix._m0[_252].x * _205));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_219, cbObjMatrix._m0[_238].z, fma(_218, cbObjMatrix._m0[_238].y, cbObjMatrix._m0[_238].x * _217));
    TANGENT_2_1.y = fma(_219, cbObjMatrix._m0[_245].z, fma(_218, cbObjMatrix._m0[_245].y, cbObjMatrix._m0[_245].x * _217));
    TANGENT_2_1.z = fma(_219, cbObjMatrix._m0[_252].z, fma(_218, cbObjMatrix._m0[_252].y, cbObjMatrix._m0[_252].x * _217));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
    TEXCOORD_8.x = _374;
    TEXCOORD_8.y = _381;
    TEXCOORD_12 = sqrt(((_286 * _286) + (_287 * _287)) + (_288 * _288));
    gl_ClipDistance[0u] = dot(vec4(_360, _367, _374, _381), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_360, _367, _374, _381), vec4(cbInstanceData._m0[_230 + 3u]));
}


