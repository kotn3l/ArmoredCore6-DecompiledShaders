#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _120 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _121 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _127 = inversesqrt(dot(vec3(_119, _120, _121), vec3(_119, _120, _121)));
    float _134 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _135 = _134 * NORMAL.x;
    float _136 = _134 * NORMAL.y;
    float _137 = _134 * NORMAL.z;
    float _141 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _149;
    float _150;
    float _151;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _149 = (-0.0) - _135;
        _150 = (-0.0) - _136;
        _151 = (-0.0) - _137;
    }
    else
    {
        _149 = _135;
        _150 = _136;
        _151 = _137;
    }
    vec4 _171 = texture(sampler2D(M_AMSN_V_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _178 = _171.x * cbMtdParam._m0[9u].x;
    float _179 = _171.y * cbMtdParam._m0[9u].y;
    float _180 = _171.z * cbMtdParam._m0[9u].z;
    float _181 = _171.w * TEXCOORD_1.z;
    vec4 _197 = texture(sampler2D(M_AMSN_V_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _201 = _197.z;
    float _205 = (_197.x * 2.0) + (-1.0);
    float _207 = (_197.y * 2.0) + (-1.0);
    float _208 = dot(vec2(_205, _207), vec2(_205, _207));
    float _322 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _214 = sqrt(1.0 - (isnan(1.0) ? _322 : (isnan(_322) ? 1.0 : min(_322, 1.0))));
    float _217 = fma(_214, _149, fma(_207, _141 * TANGENT.x, (_127 * _119) * _205));
    float _220 = fma(_214, _150, fma(_207, _141 * TANGENT.y, (_127 * _120) * _205));
    float _223 = fma(_214, _151, fma(_207, _141 * TANGENT.z, (_127 * _121) * _205));
    float _227 = inversesqrt(dot(vec3(_217, _220, _223), vec3(_217, _220, _223)));
    float _333 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _228 = isnan(1.0) ? _333 : (isnan(_333) ? 1.0 : min(_333, 1.0));
    float _344 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _355 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _366 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _377 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _388 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    uint _248 = uint(roundEven(NORMAL.w)) * 13u;
    uint _251 = (_248 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _257 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _355 : (isnan(_355) ? 1.0 : min(_355, 1.0)))) * cbInstanceData._m0[_251].x;
    float _258 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _366 : (isnan(_366) ? 1.0 : min(_366, 1.0)))) * cbInstanceData._m0[_251].y;
    float _259 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _377 : (isnan(_377) ? 1.0 : min(_377, 1.0)))) * cbInstanceData._m0[_251].z;
    float _399 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _410 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _421 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _432 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _269 = cbInstanceData._m0[_248 + 6u].w * (isnan(1.0) ? _432 : (isnan(_432) ? 1.0 : min(_432, 1.0)));
    bool _294 = cbMtdParam._m0[1u].z != 0.0;
    float _295 = _294 ? _269 : 0.0;
    SV_Target.x = ((_217 * 0.5) * _227) + 0.500488758087158203125;
    SV_Target.y = ((_220 * 0.5) * _227) + 0.500488758087158203125;
    SV_Target.z = ((_223 * 0.5) * _227) + 0.500488758087158203125;
    SV_Target.w = _295;
    SV_Target_1.x = isnan(1.0) ? _388 : (isnan(_388) ? 1.0 : min(_388, 1.0));
    SV_Target_1.y = isnan(1.0) ? _344 : (isnan(_344) ? 1.0 : min(_344, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _294 ? _269 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0));
    SV_Target_2.y = isnan(1.0) ? _410 : (isnan(_410) ? 1.0 : min(_410, 1.0));
    SV_Target_2.z = isnan(1.0) ? _421 : (isnan(_421) ? 1.0 : min(_421, 1.0));
    SV_Target_2.w = _294 ? _269 : (float(floatBitsToUint(cbInstanceData._m0[_248 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _295;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _295;
}


