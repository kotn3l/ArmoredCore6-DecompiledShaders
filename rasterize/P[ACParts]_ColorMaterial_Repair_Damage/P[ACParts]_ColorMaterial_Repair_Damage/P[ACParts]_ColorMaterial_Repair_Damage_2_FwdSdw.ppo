#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[44];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1714;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = cbMtdParam._m0[33u].z + TEXCOORD.y;
    vec4 _287 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (_274 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _292 = _287.z;
    float _293 = _287.w;
    vec4 _315 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _274) + cbTextureTilingScale._m0[11u].w));
    float _320 = _315.w;
    float _332 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].x * _292) * exp2(log2(1.0 - _320) * cbMtdParam._m0[36u].x))) * exp2(log2(cbMtdParam._m0[34u].y))) * cbMtdParam._m0[34u].w);
    float _333 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _334 = isnan(1.0) ? _333 : (isnan(_333) ? 1.0 : min(_333, 1.0));
    vec4 _348 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _274) + cbTextureTilingScale._m0[2u].w));
    float _358 = cbMtdParam._m0[31u].x * TEXCOORD_5.x;
    float _366 = (_358 - (((_348.w + 0.00999999977648258209228515625) * cbMtdParam._m0[36u].z) * (1.0 - _358))) * (cbMtdParam._m0[36u].w + 1.0);
    float _4359 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _367 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
    float _369 = _334 - (_367 * _334);
    float _370 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    vec4 _384 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -5.0);
    float _387 = _384.y;
    float _388 = _387 * (isnan(1.0) ? _370 : (isnan(_370) ? 1.0 : min(_370, 1.0)));
    float _397 = exp2(log2(cbMtdParam._m0[32u].w * _320) * cbMtdParam._m0[31u].z);
    float _399 = _397 - (_367 * _397);
    float _400 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _401 = isnan(1.0) ? _400 : (isnan(_400) ? 1.0 : min(_400, 1.0));
    float _412 = 1.0 - (cbMtdParam._m0[37u].y * exp2(log2(_293) * 4.5));
    float _421 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].z * _292) * _412)) * cbMtdParam._m0[35u].x) * cbMtdParam._m0[35u].y);
    float _422 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _423 = isnan(1.0) ? _422 : (isnan(_422) ? 1.0 : min(_422, 1.0));
    float _434 = exp2(log2((1.0 - (((_412 * _412) * _292) * cbMtdParam._m0[36u].y)) * cbMtdParam._m0[35u].w) * cbMtdParam._m0[35u].z);
    float _435 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _439 = (((isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0))) - _293) * _387) + _293;
    vec4 _451 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _274) + cbTextureTilingScale._m0[5u].w));
    float _211[6];
    float _212[6];
    float _213[6];
    _211[0u] = cbMtdParam._m0[12u].x;
    _212[0u] = cbMtdParam._m0[12u].y;
    _213[0u] = cbMtdParam._m0[12u].z;
    _211[1u] = cbMtdParam._m0[13u].x;
    _212[1u] = cbMtdParam._m0[13u].y;
    _213[1u] = cbMtdParam._m0[13u].z;
    _211[2u] = cbMtdParam._m0[14u].x;
    _212[2u] = cbMtdParam._m0[14u].y;
    _213[2u] = cbMtdParam._m0[14u].z;
    _211[3u] = cbMtdParam._m0[15u].x;
    _212[3u] = cbMtdParam._m0[15u].y;
    _213[3u] = cbMtdParam._m0[15u].z;
    _211[4u] = cbMtdParam._m0[16u].x;
    _212[4u] = cbMtdParam._m0[16u].y;
    _213[4u] = cbMtdParam._m0[16u].z;
    _211[5u] = cbMtdParam._m0[11u].x;
    _212[5u] = cbMtdParam._m0[11u].y;
    _213[5u] = cbMtdParam._m0[11u].z;
    float _519 = (_384.x + (-0.02500000037252902984619140625)) * 8.0;
    float _521 = roundEven(_519);
    float _522 = isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : max(_521, 0.0));
    uint _525 = uint(int(isnan(5.0) ? _522 : (isnan(_522) ? 5.0 : min(_522, 5.0))));
    float _207[6];
    float _208[6];
    float _209[6];
    _207[0u] = 1.0;
    _208[0u] = 1.0;
    _209[0u] = 1.0;
    _207[1u] = cbMtdParam._m0[23u].x;
    _208[1u] = cbMtdParam._m0[23u].y;
    _209[1u] = cbMtdParam._m0[23u].z;
    _207[2u] = cbMtdParam._m0[21u].x;
    _208[2u] = cbMtdParam._m0[21u].y;
    _209[2u] = cbMtdParam._m0[21u].z;
    _207[3u] = cbMtdParam._m0[19u].x;
    _208[3u] = cbMtdParam._m0[19u].y;
    _209[3u] = cbMtdParam._m0[19u].z;
    _207[4u] = cbMtdParam._m0[18u].x;
    _208[4u] = cbMtdParam._m0[18u].y;
    _209[4u] = cbMtdParam._m0[18u].z;
    _207[5u] = cbMtdParam._m0[17u].x;
    _208[5u] = cbMtdParam._m0[17u].y;
    _209[5u] = cbMtdParam._m0[17u].z;
    float _611 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[41u].w * TEXCOORD.x) * cbMtdParam._m0[33u].y) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[42u].x * TEXCOORD.y) * cbMtdParam._m0[33u].y) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _612 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    uint _614 = uint(int(isnan(5.0) ? _612 : (isnan(_612) ? 5.0 : min(_612, 5.0))));
    float _210[6];
    _210[0u] = 1.0;
    _210[1u] = cbMtdParam._m0[23u].w;
    _210[2u] = cbMtdParam._m0[21u].w;
    _210[3u] = cbMtdParam._m0[19u].w;
    _210[4u] = cbMtdParam._m0[18u].w;
    _210[5u] = cbMtdParam._m0[17u].w;
    float _651 = ((((_211[_525] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_207[_614] - _211[_525])) * _210[_525])) * _387) + cbMtdParam._m0[10u].x) * _451.x;
    float _652 = ((((_212[_525] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_208[_614] - _212[_525])) * _210[_525])) * _387) + cbMtdParam._m0[10u].y) * _451.y;
    float _653 = ((((_213[_525] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_209[_614] - _213[_525])) * _210[_525])) * _387) + cbMtdParam._m0[10u].z) * _451.z;
    vec4 _665 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _274) + cbTextureTilingScale._m0[1u].w));
    float _676 = cbMtdParam._m0[9u].x * _665.x;
    float _677 = cbMtdParam._m0[9u].y * _665.y;
    float _678 = cbMtdParam._m0[9u].z * _665.z;
    float _685 = ((_676 - _651) * _439) + _651;
    float _686 = ((_677 - _652) * _439) + _652;
    float _687 = ((_678 - _653) * _439) + _653;
    vec4 _699 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * _274) + cbTextureTilingScale._m0[6u].w));
    float _719 = (((cbMtdParam._m0[20u].x * _699.x) - _685) * _423) + _685;
    float _720 = (((cbMtdParam._m0[20u].y * _699.y) - _686) * _423) + _686;
    float _721 = (((cbMtdParam._m0[20u].z * _699.z) - _687) * _423) + _687;
    vec4 _733 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _274) + cbTextureTilingScale._m0[9u].w));
    float _753 = (((cbMtdParam._m0[29u].x * _733.x) - _719) * _401) + _719;
    float _754 = (((cbMtdParam._m0[29u].y * _733.y) - _720) * _401) + _720;
    float _755 = (((cbMtdParam._m0[29u].z * _733.z) - _721) * _401) + _721;
    float _204[6];
    float _205[6];
    float _206[6];
    _204[0u] = cbMtdParam._m0[30u].x;
    _205[0u] = cbMtdParam._m0[30u].y;
    _206[0u] = cbMtdParam._m0[30u].z;
    _204[1u] = cbMtdParam._m0[28u].x;
    _205[1u] = cbMtdParam._m0[28u].y;
    _206[1u] = cbMtdParam._m0[28u].z;
    _204[2u] = cbMtdParam._m0[27u].x;
    _205[2u] = cbMtdParam._m0[27u].y;
    _206[2u] = cbMtdParam._m0[27u].z;
    _204[3u] = cbMtdParam._m0[26u].x;
    _205[3u] = cbMtdParam._m0[26u].y;
    _206[3u] = cbMtdParam._m0[26u].z;
    _204[4u] = cbMtdParam._m0[25u].x;
    _205[4u] = cbMtdParam._m0[25u].y;
    _206[4u] = cbMtdParam._m0[25u].z;
    _204[5u] = cbMtdParam._m0[24u].x;
    _205[5u] = cbMtdParam._m0[24u].y;
    _206[5u] = cbMtdParam._m0[24u].z;
    float _828 = _204[_525] * _387;
    float _829 = _205[_525] * _387;
    float _830 = _206[_525] * _387;
    float _831 = _828 + ((_315.x * 4.5) * (((_676 - _753) * _388) + _753));
    float _832 = _829 + ((_315.y * 4.5) * (((_677 - _754) * _388) + _754));
    float _833 = _830 + ((_315.z * 4.5) * (((_678 - _755) * _388) + _755));
    float _199[5];
    float _200[5];
    _199[0u] = cbMtdParam._m0[37u].w;
    _200[0u] = cbMtdParam._m0[38u].x;
    _199[1u] = cbMtdParam._m0[39u].w;
    _200[1u] = cbMtdParam._m0[40u].x;
    _199[2u] = cbMtdParam._m0[40u].y;
    _200[2u] = cbMtdParam._m0[40u].z;
    _199[3u] = cbMtdParam._m0[40u].w;
    _200[3u] = cbMtdParam._m0[41u].x;
    _199[4u] = cbMtdParam._m0[41u].y;
    _200[4u] = cbMtdParam._m0[41u].z;
    float _866 = roundEven(5.0 - _519);
    float _867 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _868 = isnan(4.0) ? _867 : (isnan(_867) ? 4.0 : min(_867, 4.0));
    float _870 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    uint _872 = uint(int(isnan(4.0) ? _870 : (isnan(_870) ? 4.0 : min(_870, 4.0))));
    float _881 = ((cbMtdParam._m0[42u].z - _200[_872]) * _439) + _200[_872];
    float _889 = ((cbMtdParam._m0[43u].x - _881) * _423) + _881;
    float _894 = ((cbMtdParam._m0[43u].z - _889) * _401) + _889;
    float _899 = ((cbMtdParam._m0[39u].z - _894) * _388) + _894;
    vec4 _915 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _274) + cbTextureTilingScale._m0[7u].w));
    float _917 = _915.x;
    float _918 = _915.y;
    float _920 = _915.z + _199[_872];
    vec4 _932 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _274) + cbTextureTilingScale._m0[10u].w));
    float _940 = (((cbMtdParam._m0[42u].y - _920) + _932.z) * _439) + _920;
    vec4 _952 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _274) + cbTextureTilingScale._m0[12u].w));
    float _960 = (((cbMtdParam._m0[42u].w - _940) + _952.z) * _423) + _940;
    float _966 = ((((_292 * 2.0) * _960) - _960) * cbMtdParam._m0[34u].x) + _960;
    vec4 _978 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _274) + cbTextureTilingScale._m0[13u].w));
    float _986 = (((_978.z + cbMtdParam._m0[43u].y) - _966) * _401) + _966;
    float _990 = (((cbMtdParam._m0[39u].y + _348.z) - _986) * _388) + _986;
    float _1023 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1027 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _1054 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[38u].w * ((_1023 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[33u].x)) + ((cbMtdParam._m0[38u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, ((((cbMtdParam._m0[38u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[39u].x * ((_1027 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[33u].x))) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _1071 = (-0.0) - ((_1027 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].w);
    float _1075 = (_1027 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].w;
    float _1076 = isnan(_1075) ? _1071 : (isnan(_1071) ? _1075 : min(_1071, _1075));
    float _4455 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1077 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
    float _1103 = ((_932.x - _917) * _439) + _917;
    float _1104 = ((_932.y - _918) * _439) + _918;
    float _1109 = ((_952.x - _1103) * _423) + _1103;
    float _1110 = ((_952.y - _1104) * _423) + _1104;
    float _1115 = ((_978.x - _1109) * _401) + _1109;
    float _1116 = ((_978.y - _1110) * _401) + _1110;
    float _1125 = ((((_348.x - _1115) * _388) + _1115) * 2.0) + (-1.0);
    float _1126 = ((((_348.y - _1116) * _388) + _1116) * 2.0) + (-1.0);
    float _1127 = dot(vec2(_1125, _1126), vec2(_1125, _1126));
    float _4466 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
    float _1132 = sqrt(1.0 - (isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0))));
    float _1135 = (cbMtdParam._m0[34u].z * ((_287.x * 2.0) + (-1.0))) + _1125;
    float _1136 = (cbMtdParam._m0[34u].z * ((_287.y * 2.0) + (-1.0))) + _1126;
    float _1139 = fma(_1132, _253 * NORMAL.x, fma(_1136, _260 * TANGENT.x, (_246 * _238) * _1135));
    float _1142 = fma(_1132, _253 * NORMAL.y, fma(_1136, _260 * TANGENT.y, (_246 * _239) * _1135));
    float _1145 = fma(_1132, _253 * NORMAL.z, fma(_1136, _260 * TANGENT.z, (_246 * _240) * _1135));
    float _1149 = inversesqrt(dot(vec3(_1139, _1142, _1145), vec3(_1139, _1142, _1145)));
    float _1150 = _1149 * _1139;
    float _1151 = _1149 * _1142;
    float _1152 = _1149 * _1145;
    float _4477 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _1153 = isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0));
    float _4488 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _4499 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _4510 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _4521 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _1157 = isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0));
    float _1173 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1193 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1203 = cbSceneParam._m0[71u].x - (_1023 / _1193);
    float _1204 = cbSceneParam._m0[71u].y - (_1027 / _1193);
    float _1205 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1193);
    float _1209 = inversesqrt(dot(vec3(_1203, _1204, _1205), vec3(_1203, _1204, _1205)));
    float _1210 = _1203 * _1209;
    float _1211 = _1204 * _1209;
    float _1212 = _1205 * _1209;
    float _1218 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1219 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1221 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1223 = _1221.w;
    float _1241 = fma(_1152, cbSceneParam._m0[5u].z, fma(_1151, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1150));
    float _1244 = fma(_1152, cbSceneParam._m0[6u].z, fma(_1151, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1150));
    float _1247 = fma(_1152, cbSceneParam._m0[7u].z, fma(_1151, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1150));
    vec4 _1249 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1260 = (((_1249.y - _1153) + (_1249.w * _1153)) * cbMtdParam._m0[3u].x) + _1153;
    uint _1273 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1274 = _1273 + 9u;
    uint _1275 = _1274 + uint(cbMatDynParam._m0[0u].w);
    float _1281 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0)))) * cbInstanceData._m0[_1275].x;
    float _1282 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0)))) * cbInstanceData._m0[_1275].y;
    float _1283 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0)))) * cbInstanceData._m0[_1275].z;
    float _4532 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
    float _1284 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
    float _4543 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
    float _1285 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
    float _4554 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
    float _1286 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
    vec4 _1287 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1292 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1303 = (((_1292.x - _1157) + (_1292.w * _1157)) * cbMtdParam._m0[3u].x) + _1157;
    float _1316 = (cbMtdParam._m0[3u].x * (((_1284 * _1223) - _1284) + _1287.x)) + _1284;
    float _1317 = (cbMtdParam._m0[3u].x * (((_1285 * _1223) - _1285) + _1287.y)) + _1285;
    float _1318 = (cbMtdParam._m0[3u].x * (((_1286 * _1223) - _1286) + _1287.z)) + _1286;
    float _1319 = 1.0 - _1303;
    float _1320 = _1319 * _1316;
    float _1321 = _1319 * _1317;
    float _1322 = _1319 * _1318;
    float _1327 = (_1316 + (-0.039999999105930328369140625)) * _1303;
    float _1328 = (_1317 + (-0.039999999105930328369140625)) * _1303;
    float _1329 = (_1318 + (-0.039999999105930328369140625)) * _1303;
    float _1330 = _1327 + 0.039999999105930328369140625;
    float _1332 = _1328 + 0.039999999105930328369140625;
    float _1333 = _1329 + 0.039999999105930328369140625;
    vec4 _1342 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1218, cbSceneParam._m0[86u].y * _1219));
    float _1345 = _1342.x * TEXCOORD_5.w;
    float _1346 = dot(vec3(_1150, _1151, _1152), vec3(_1210, _1211, _1212));
    float _1349 = _1346 * 2.0;
    float _1353 = (_1349 * _1150) - _1210;
    float _1354 = (_1349 * _1151) - _1211;
    float _1355 = (_1349 * _1152) - _1212;
    float _1359 = abs(dot(vec3(_1210, _1211, _1212), vec3(_1150, _1151, _1152)));
    float _4565 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
    float _1361 = sqrt(_1260);
    float _1372 = exp2((_1361 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1361 * 3.0));
    float _1378 = (1.0 - _1372) * ((_1361 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1379 = _1372 * _1361;
    float _1407 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1411 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1415 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1713;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1440 = fma(_1415, cbModelParam._m0[26u].z, fma(_1411, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1407));
        float _1444 = fma(_1415, cbModelParam._m0[27u].z, fma(_1411, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1407));
        float _1448 = fma(_1415, cbModelParam._m0[28u].z, fma(_1411, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1407));
        float _1472 = _1407 + _1150;
        float _1473 = _1411 + _1151;
        float _1474 = _1415 + _1152;
        float _1484 = fma(_1474, cbModelParam._m0[26u].z, fma(_1473, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1472)) - _1440;
        float _1485 = fma(_1474, cbModelParam._m0[27u].z, fma(_1473, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1472)) - _1444;
        float _1486 = fma(_1474, cbModelParam._m0[28u].z, fma(_1473, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1472)) - _1448;
        float _1490 = inversesqrt(dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486)));
        float _1502 = ((_1490 * _1484) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1440 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1503 = ((_1490 * _1485) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1444 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1504 = ((_1490 * _1486) / cbModelParam._m0[34u].z) + ((((((_1448 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1507 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1502, _1503, _1504), 0.0);
        vec4 _1514 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1502, _1503, _1504), 0.0);
        vec4 _1521 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1502, _1503, _1504), 0.0);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1502, _1503, _1504), 0.0);
        float _1541 = exp2((_1507.w + (-0.5)) * 20.0) * 2.0;
        float _1542 = _1541 * (_1507.x + (-0.5));
        float _1543 = _1541 * (_1507.y + (-0.5));
        float _1544 = _1541 * (_1507.z + (-0.5));
        float _1551 = exp2((_1514.w + (-0.5)) * 20.0) * 2.0;
        float _1552 = _1551 * (_1514.x + (-0.5));
        float _1553 = _1551 * (_1514.y + (-0.5));
        float _1554 = _1551 * (_1514.z + (-0.5));
        float _1561 = exp2((_1521.w + (-0.5)) * 20.0) * 2.0;
        float _1562 = _1561 * (_1521.x + (-0.5));
        float _1563 = _1561 * (_1521.y + (-0.5));
        float _1564 = _1561 * (_1521.z + (-0.5));
        float _1571 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1572 = _1571 * (_1528.x + (-0.5));
        float _1573 = _1571 * (_1528.y + (-0.5));
        float _1574 = _1571 * (_1528.z + (-0.5));
        float _1575 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1576 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1577 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1578 = _1542 * 0.5;
        float _1579 = _1552 * 0.5;
        float _1580 = _1562 * 0.5;
        float _1581 = dot(vec3(_1578, _1579, _1580), vec3(_1578, _1579, _1580));
        float _1586 = (_1581 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1581);
        float _1595 = (dot(vec3(_1150, _1151, _1152), vec3(_1586 * _1578, _1586 * _1579, _1586 * _1580)) + 1.0) * 0.5;
        float _4591 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1605 = sqrt(((_1579 * _1579) + (_1578 * _1578)) + (_1580 * _1580)) / (_1575 + 9.9999997473787516355514526367188e-06);
        float _4602 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
        float _1606 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
        float _1607 = _1606 * 2.0;
        float _1611 = (1.0 - _1606) / (_1606 + 1.0);
        float _4613 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1612 = isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0));
        float _1621 = ((((1.0 - _1612) * (_1607 + 2.0)) * exp2(log2(isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0))) * (_1607 + 1.0))) + _1612) * _1575;
        float _1622 = _1543 * 0.5;
        float _1623 = _1553 * 0.5;
        float _1624 = _1563 * 0.5;
        float _1625 = dot(vec3(_1622, _1623, _1624), vec3(_1622, _1623, _1624));
        float _1630 = (_1625 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1625);
        float _1638 = (dot(vec3(_1150, _1151, _1152), vec3(_1630 * _1622, _1630 * _1623, _1630 * _1624)) + 1.0) * 0.5;
        float _4624 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1647 = sqrt(((_1623 * _1623) + (_1622 * _1622)) + (_1624 * _1624)) / (_1576 + 9.9999997473787516355514526367188e-06);
        float _4635 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1648 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
        float _1649 = _1648 * 2.0;
        float _1653 = (1.0 - _1648) / (_1648 + 1.0);
        float _4646 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1654 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
        float _1663 = ((((1.0 - _1654) * (_1649 + 2.0)) * exp2(log2(isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * (_1649 + 1.0))) + _1654) * _1576;
        float _1664 = _1544 * 0.5;
        float _1665 = _1554 * 0.5;
        float _1666 = _1564 * 0.5;
        float _1667 = dot(vec3(_1664, _1665, _1666), vec3(_1664, _1665, _1666));
        float _1672 = (_1667 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1667);
        float _1680 = (dot(vec3(_1150, _1151, _1152), vec3(_1672 * _1664, _1672 * _1665, _1672 * _1666)) + 1.0) * 0.5;
        float _4657 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1689 = sqrt(((_1665 * _1665) + (_1664 * _1664)) + (_1666 * _1666)) / (_1577 + 9.9999997473787516355514526367188e-06);
        float _4668 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1690 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
        float _1691 = _1690 * 2.0;
        float _1695 = (1.0 - _1690) / (_1690 + 1.0);
        float _4679 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1696 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _1705 = ((((1.0 - _1696) * (_1691 + 2.0)) * exp2(log2(isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * (_1691 + 1.0))) + _1696) * _1577;
        _1713 = _1544;
        _1715 = _1543;
        _1716 = _1542;
        _1717 = _1554;
        _1718 = _1553;
        _1719 = _1552;
        _1720 = _1564;
        _1721 = _1563;
        _1722 = _1562;
        _1723 = _1577;
        _1724 = _1576;
        _1725 = _1575;
        _1726 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0)));
        _1727 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)));
        _1728 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)));
    }
    else
    {
        _1713 = _1714;
        _1715 = _1714;
        _1716 = _1714;
        _1717 = _1714;
        _1718 = _1714;
        _1719 = _1714;
        _1720 = _1714;
        _1721 = _1714;
        _1722 = _1714;
        _1723 = _1714;
        _1724 = _1714;
        _1725 = _1714;
        _1726 = 0.0;
        _1727 = 0.0;
        _1728 = 0.0;
    }
    float _2018;
    float _2019;
    float _2020;
    float _2021;
    float _2022;
    float _2023;
    float _2024;
    float _2025;
    float _2026;
    float _2027;
    float _2028;
    float _2029;
    float _2030;
    float _2031;
    float _2032;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1751 = fma(_1415, cbModelParam._m0[30u].z, fma(_1411, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1407));
        float _1755 = fma(_1415, cbModelParam._m0[31u].z, fma(_1411, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1407));
        float _1759 = fma(_1415, cbModelParam._m0[32u].z, fma(_1411, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1407));
        float _1781 = _1407 + _1150;
        float _1782 = _1411 + _1151;
        float _1783 = _1415 + _1152;
        float _1793 = fma(_1783, cbModelParam._m0[30u].z, fma(_1782, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1781)) - _1751;
        float _1794 = fma(_1783, cbModelParam._m0[31u].z, fma(_1782, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1781)) - _1755;
        float _1795 = fma(_1783, cbModelParam._m0[32u].z, fma(_1782, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1781)) - _1759;
        float _1799 = inversesqrt(dot(vec3(_1793, _1794, _1795), vec3(_1793, _1794, _1795)));
        float _1811 = ((_1799 * _1793) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1751 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1812 = ((_1799 * _1794) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1755 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1813 = ((_1799 * _1795) / cbModelParam._m0[35u].z) + ((((((_1759 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1815 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1811, _1812, _1813), 0.0);
        vec4 _1822 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1811, _1812, _1813), 0.0);
        vec4 _1829 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1811, _1812, _1813), 0.0);
        vec4 _1836 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1811, _1812, _1813), 0.0);
        float _1848 = exp2((_1815.w + (-0.5)) * 20.0) * 2.0;
        float _1849 = _1848 * (_1815.x + (-0.5));
        float _1850 = _1848 * (_1815.y + (-0.5));
        float _1851 = _1848 * (_1815.z + (-0.5));
        float _1858 = exp2((_1822.w + (-0.5)) * 20.0) * 2.0;
        float _1859 = _1858 * (_1822.x + (-0.5));
        float _1860 = _1858 * (_1822.y + (-0.5));
        float _1861 = _1858 * (_1822.z + (-0.5));
        float _1868 = exp2((_1829.w + (-0.5)) * 20.0) * 2.0;
        float _1869 = _1868 * (_1829.x + (-0.5));
        float _1870 = _1868 * (_1829.y + (-0.5));
        float _1871 = _1868 * (_1829.z + (-0.5));
        float _1878 = exp2((_1836.w + (-0.5)) * 20.0) * 2.0;
        float _1879 = _1878 * (_1836.x + (-0.5));
        float _1880 = _1878 * (_1836.y + (-0.5));
        float _1881 = _1878 * (_1836.z + (-0.5));
        float _1882 = isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0));
        float _1883 = isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0));
        float _1884 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
        float _1885 = _1849 * 0.5;
        float _1886 = _1859 * 0.5;
        float _1887 = _1869 * 0.5;
        float _1888 = dot(vec3(_1885, _1886, _1887), vec3(_1885, _1886, _1887));
        float _1893 = (_1888 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1888);
        float _1901 = (dot(vec3(_1150, _1151, _1152), vec3(_1893 * _1885, _1893 * _1886, _1893 * _1887)) + 1.0) * 0.5;
        float _4720 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
        float _1910 = sqrt(((_1886 * _1886) + (_1885 * _1885)) + (_1887 * _1887)) / (_1882 + 9.9999997473787516355514526367188e-06);
        float _4731 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
        float _1911 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
        float _1912 = _1911 * 2.0;
        float _1916 = (1.0 - _1911) / (_1911 + 1.0);
        float _4742 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
        float _1917 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
        float _1926 = ((((1.0 - _1917) * (_1912 + 2.0)) * exp2(log2(isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_1912 + 1.0))) + _1917) * _1882;
        float _1927 = _1850 * 0.5;
        float _1928 = _1860 * 0.5;
        float _1929 = _1870 * 0.5;
        float _1930 = dot(vec3(_1927, _1928, _1929), vec3(_1927, _1928, _1929));
        float _1935 = (_1930 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1930);
        float _1943 = (dot(vec3(_1150, _1151, _1152), vec3(_1935 * _1927, _1935 * _1928, _1935 * _1929)) + 1.0) * 0.5;
        float _4753 = isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0));
        float _1952 = sqrt(((_1928 * _1928) + (_1927 * _1927)) + (_1929 * _1929)) / (_1883 + 9.9999997473787516355514526367188e-06);
        float _4764 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1953 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
        float _1954 = _1953 * 2.0;
        float _1958 = (1.0 - _1953) / (_1953 + 1.0);
        float _4775 = isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0));
        float _1959 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
        float _1968 = ((((1.0 - _1959) * (_1954 + 2.0)) * exp2(log2(isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0))) * (_1954 + 1.0))) + _1959) * _1883;
        float _1969 = _1851 * 0.5;
        float _1970 = _1861 * 0.5;
        float _1971 = _1871 * 0.5;
        float _1972 = dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971));
        float _1977 = (_1972 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1972);
        float _1985 = (dot(vec3(_1150, _1151, _1152), vec3(_1977 * _1969, _1977 * _1970, _1977 * _1971)) + 1.0) * 0.5;
        float _4786 = isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0));
        float _1994 = sqrt(((_1970 * _1970) + (_1969 * _1969)) + (_1971 * _1971)) / (_1884 + 9.9999997473787516355514526367188e-06);
        float _4797 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _1995 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
        float _1996 = _1995 * 2.0;
        float _2000 = (1.0 - _1995) / (_1995 + 1.0);
        float _4808 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
        float _2001 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
        float _2010 = ((((1.0 - _2001) * (_1996 + 2.0)) * exp2(log2(isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0))) * (_1996 + 1.0))) + _2001) * _1884;
        _2018 = _1851;
        _2019 = _1850;
        _2020 = _1849;
        _2021 = _1861;
        _2022 = _1860;
        _2023 = _1859;
        _2024 = _1871;
        _2025 = _1870;
        _2026 = _1869;
        _2027 = _1884;
        _2028 = _1883;
        _2029 = _1882;
        _2030 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0)));
        _2031 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0)));
        _2032 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0)));
    }
    else
    {
        _2018 = _1714;
        _2019 = _1714;
        _2020 = _1714;
        _2021 = _1714;
        _2022 = _1714;
        _2023 = _1714;
        _2024 = _1714;
        _2025 = _1714;
        _2026 = _1714;
        _2027 = _1714;
        _2028 = _1714;
        _2029 = _1714;
        _2030 = 0.0;
        _2031 = 0.0;
        _2032 = 0.0;
    }
    float _2042 = (cbModelParam._m0[1u].x * (_2030 - _1726)) + _1726;
    float _2043 = (cbModelParam._m0[1u].x * (_2031 - _1727)) + _1727;
    float _2044 = (cbModelParam._m0[1u].x * (_2032 - _1728)) + _1728;
    float _2065 = fma(_2044, cbSceneParam._m0[89u].z, fma(_2043, cbSceneParam._m0[89u].y, _2042 * cbSceneParam._m0[89u].x));
    float _2068 = fma(_2044, cbSceneParam._m0[90u].z, fma(_2043, cbSceneParam._m0[90u].y, _2042 * cbSceneParam._m0[90u].x));
    float _2071 = fma(_2044, cbSceneParam._m0[91u].z, fma(_2043, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2042));
    float _2084 = _1353 * 0.5;
    float _2085 = _1354 * 0.5;
    float _2086 = _1355 * 0.5;
    float _2087 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_2020, _2023, _2026, _2029));
    float _2090 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_2019, _2022, _2025, _2028));
    float _2093 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_2018, _2021, _2024, _2027));
    float _2127;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2100 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_1713, _1717, _1720, _1723));
        float _2104 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_1715, _1718, _1721, _1724));
        float _2108 = dot(vec4(_2084, _2085, _2086, 1.0), vec4(_1716, _1719, _1722, _1725));
        float _2115 = dot(vec4(cbModelParam._m0[39u]), vec4(_2084, _2085, _2086, 1.0));
        _2127 = dot(vec3(isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0)), isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0)), isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2115) ? 0.0 : (isnan(0.0) ? _2115 : max(0.0, _2115))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2127 = 1.0;
    }
    float _2138;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2129 = dot(vec4(cbModelParam._m0[40u]), vec4(_2084, _2085, _2086, 1.0));
        _2138 = dot(vec3(isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0)), isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0)), isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2129) ? 0.0 : (isnan(0.0) ? _2129 : max(0.0, _2129))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2138 = 1.0;
    }
    float _2142 = (_2138 * cbModelParam._m0[1u].x) + (_2127 * (1.0 - cbModelParam._m0[1u].x));
    float _2152 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1260);
    float _2153 = isnan(_2152) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2152 : min(cbModelParam._m0[25u].z, _2152));
    float _2233;
    float _2235;
    float _2237;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2200 = fma(_1415, cbModelParam._m0[13u].z, fma(_1411, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1407)) + cbModelParam._m0[13u].w;
        float _2204 = fma(_1415, cbModelParam._m0[14u].z, fma(_1411, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1407)) + cbModelParam._m0[14u].w;
        float _2208 = fma(_1415, cbModelParam._m0[15u].z, fma(_1411, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1407)) + cbModelParam._m0[15u].w;
        float _2211 = fma(_1355, cbModelParam._m0[13u].z, fma(_1354, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1353));
        float _2214 = fma(_1355, cbModelParam._m0[14u].z, fma(_1354, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1353));
        float _2217 = fma(_1355, cbModelParam._m0[15u].z, fma(_1354, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1353));
        float _2245;
        if (_2211 > 0.0)
        {
            _2245 = abs((1.0 - _2200) / _2211);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2211 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2200 + 1.0) / _2211);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2245 = frontier_phi_14_12_ladder;
        }
        float _2416;
        if (_2214 > 0.0)
        {
            _2416 = abs((1.0 - _2204) / _2214);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2214 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2204 + 1.0) / _2214);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2416 = frontier_phi_23_19_ladder;
        }
        float _2708;
        if (_2217 > 0.0)
        {
            _2708 = abs((1.0 - _2208) / _2217);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2217 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2208 + 1.0) / _2217);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2708 = frontier_phi_35_30_ladder;
        }
        float _2710 = isnan(_2416) ? _2245 : (isnan(_2245) ? _2416 : min(_2245, _2416));
        float _2711 = isnan(_2708) ? _2710 : (isnan(_2710) ? _2708 : min(_2710, _2708));
        float _2715 = (_2711 * _2211) + _2200;
        float _2716 = (_2711 * _2214) + _2204;
        float _2717 = (_2711 * _2217) + _2208;
        float _2718 = _2711 * 9.9999997473787516355514526367188e-05;
        float _2720 = (-1.0) - _2718;
        float _2722 = _2718 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2717 > _2722) || ((_2717 < _2720) || ((_2716 > _2722) || ((_2716 < _2720) || ((_2715 < _2720) || (_2715 > _2722))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2862 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2717, cbModelParam._m0[9u].z, fma(_2716, cbModelParam._m0[9u].y, _2715 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2717, cbModelParam._m0[10u].z, fma(_2716, cbModelParam._m0[10u].y, _2715 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2717, cbModelParam._m0[11u].z, fma(_2716, cbModelParam._m0[11u].y, _2715 * cbModelParam._m0[11u].x))), _2153);
            frontier_phi_13_35_ladder = _2862.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2862.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2862.x * cbModelParam._m0[1u].y;
        }
        _2233 = frontier_phi_13_35_ladder_2;
        _2235 = frontier_phi_13_35_ladder_1;
        _2237 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2221 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1353, _1354, _1355), _2153);
        _2233 = _2221.x * cbModelParam._m0[1u].y;
        _2235 = _2221.y * cbModelParam._m0[1u].y;
        _2237 = _2221.z * cbModelParam._m0[1u].y;
    }
    float _2241 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1260);
    float _2242 = isnan(_2241) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2241 : min(cbModelParam._m0[25u].w, _2241));
    float _2331;
    float _2333;
    float _2335;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2295 = fma(_1415, cbModelParam._m0[21u].z, fma(_1411, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1407)) + cbModelParam._m0[21u].w;
        float _2299 = fma(_1415, cbModelParam._m0[22u].z, fma(_1411, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1407)) + cbModelParam._m0[22u].w;
        float _2303 = fma(_1415, cbModelParam._m0[23u].z, fma(_1411, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1407)) + cbModelParam._m0[23u].w;
        float _2306 = fma(_1355, cbModelParam._m0[21u].z, fma(_1354, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1353));
        float _2309 = fma(_1355, cbModelParam._m0[22u].z, fma(_1354, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1353));
        float _2312 = fma(_1355, cbModelParam._m0[23u].z, fma(_1354, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1353));
        float _2421;
        if (_2306 > 0.0)
        {
            _2421 = abs((1.0 - _2295) / _2306);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2306 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2295 + 1.0) / _2306);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2421 = frontier_phi_25_21_ladder;
        }
        float _2735;
        if (_2309 > 0.0)
        {
            _2735 = abs((1.0 - _2299) / _2309);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2309 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2299 + 1.0) / _2309);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2735 = frontier_phi_37_32_ladder;
        }
        float _3073;
        if (_2312 > 0.0)
        {
            _3073 = abs((1.0 - _2303) / _2312);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2312 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2303 + 1.0) / _2312);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _3073 = frontier_phi_47_44_ladder;
        }
        float _3075 = isnan(_2735) ? _2421 : (isnan(_2421) ? _2735 : min(_2421, _2735));
        float _3076 = isnan(_3073) ? _3075 : (isnan(_3075) ? _3073 : min(_3075, _3073));
        float _3080 = (_3076 * _2306) + _2295;
        float _3081 = (_3076 * _2309) + _2299;
        float _3082 = (_3076 * _2312) + _2303;
        float _3083 = _3076 * 9.9999997473787516355514526367188e-05;
        float _3084 = (-1.0) - _3083;
        float _3086 = _3083 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_3082 > _3086) || ((_3082 < _3084) || ((_3081 > _3086) || ((_3081 < _3084) || ((_3080 < _3084) || (_3080 > _3086))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3204 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3082, cbModelParam._m0[17u].z, fma(_3081, cbModelParam._m0[17u].y, _3080 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3082, cbModelParam._m0[18u].z, fma(_3081, cbModelParam._m0[18u].y, _3080 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3082, cbModelParam._m0[19u].z, fma(_3081, cbModelParam._m0[19u].y, _3080 * cbModelParam._m0[19u].x))), _2242);
            frontier_phi_22_47_ladder = _3204.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3204.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3204.x * cbModelParam._m0[1u].z;
        }
        _2331 = frontier_phi_22_47_ladder_2;
        _2333 = frontier_phi_22_47_ladder_1;
        _2335 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2315 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1353, _1354, _1355), _2242);
        _2331 = _2315.x * cbModelParam._m0[1u].z;
        _2333 = _2315.y * cbModelParam._m0[1u].z;
        _2335 = _2315.z * cbModelParam._m0[1u].z;
    }
    float _2348 = (((_1378 * _1330) + _1379) * _1345) * ((cbModelParam._m0[1u].w * (_2331 - _2233)) + _2233);
    float _2350 = (((_1378 * _1332) + _1379) * _1345) * ((cbModelParam._m0[1u].w * (_2333 - _2235)) + _2235);
    float _2352 = (((_1378 * _1333) + _1379) * _1345) * ((cbModelParam._m0[1u].w * (_2335 - _2237)) + _2237);
    float _2355 = fma(_2352, cbSceneParam._m0[89u].z, fma(_2350, cbSceneParam._m0[89u].y, _2348 * cbSceneParam._m0[89u].x));
    float _2358 = fma(_2352, cbSceneParam._m0[90u].z, fma(_2350, cbSceneParam._m0[90u].y, _2348 * cbSceneParam._m0[90u].x));
    float _2361 = fma(_2352, cbSceneParam._m0[91u].z, fma(_2350, cbSceneParam._m0[91u].y, _2348 * cbSceneParam._m0[91u].x));
    float _2395 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2399 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2403 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2407 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2408 = _2395 / _2407;
    float _2409 = _2399 / _2407;
    float _2410 = _2403 / _2407;
    float _2554;
    float _2555;
    float _2556;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2437 = ((uint(_2410 > cbSceneParam._m0[59u].y) + uint(_2410 > cbSceneParam._m0[59u].x)) + uint(_2410 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2438 = _2437 + 43u;
        uint _2445 = _2437 + 44u;
        uint _2452 = _2437 + 45u;
        uint _2460 = _2437 + 46u;
        float _2471 = fma(_2407, cbSceneParam._m0[_2438].w, fma(_2403, cbSceneParam._m0[_2438].z, fma(_2399, cbSceneParam._m0[_2438].y, _2395 * cbSceneParam._m0[_2438].x)));
        float _2475 = fma(_2407, cbSceneParam._m0[_2445].w, fma(_2403, cbSceneParam._m0[_2445].z, fma(_2399, cbSceneParam._m0[_2445].y, _2395 * cbSceneParam._m0[_2445].x)));
        float _2483 = fma(_2407, cbSceneParam._m0[_2460].w, fma(_2403, cbSceneParam._m0[_2460].z, fma(_2399, cbSceneParam._m0[_2460].y, _2395 * cbSceneParam._m0[_2460].x)));
        float _2487 = cbSceneParam._m0[33u].z * _2483;
        float _2489 = cbSceneParam._m0[33u].w * _2483;
        float _2492 = fma(_2407, cbSceneParam._m0[_2452].w, fma(_2403, cbSceneParam._m0[_2452].z, fma(_2399, cbSceneParam._m0[_2452].y, _2395 * cbSceneParam._m0[_2452].x))) / _2483;
        float _2540 = (cbSceneParam._m0[33u].x - sqrt(((_2409 * _2409) + (_2408 * _2408)) + (_2410 * _2410))) * cbSceneParam._m0[33u].y;
        float _4934 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
        float _2547 = (isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2487 + _2471) / _2483, (_2489 + _2475) / _2483), _2492), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2489 + _2471) / _2483, (_2475 - _2487) / _2483), _2492), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2471 - _2487) / _2483, (_2475 - _2489) / _2483), _2492), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2471 - _2489) / _2483, (_2487 + _2475) / _2483), _2492), 0.0)).x), vec4(0.25)));
        _2554 = 1.0 - (_2547 * cbSceneParam._m0[34u].x);
        _2555 = 1.0 - (_2547 * cbSceneParam._m0[34u].y);
        _2556 = 1.0 - (_2547 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2554 = 1.0;
        _2555 = 1.0;
        _2556 = 1.0;
    }
    float _2620;
    float _2622;
    float _2624;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2608 = fma(_2407, cbSceneParam._m0[63u].w, fma(_2403, cbSceneParam._m0[63u].z, fma(_2399, cbSceneParam._m0[63u].y, _2395 * cbSceneParam._m0[63u].x)));
        float _2609 = fma(_2407, cbSceneParam._m0[60u].w, fma(_2403, cbSceneParam._m0[60u].z, fma(_2399, cbSceneParam._m0[60u].y, _2395 * cbSceneParam._m0[60u].x))) / _2608;
        float _2610 = fma(_2407, cbSceneParam._m0[61u].w, fma(_2403, cbSceneParam._m0[61u].z, fma(_2399, cbSceneParam._m0[61u].y, _2395 * cbSceneParam._m0[61u].x))) / _2608;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2609 >= cbSceneParam._m0[64u].x) && (_2610 >= cbSceneParam._m0[64u].y)) && (_2609 <= cbSceneParam._m0[64u].z)) && (_2610 <= cbSceneParam._m0[64u].w))
        {
            float _2748 = fma(_2407, cbSceneParam._m0[62u].w, fma(_2403, cbSceneParam._m0[62u].z, fma(_2399, cbSceneParam._m0[62u].y, _2395 * cbSceneParam._m0[62u].x))) / _2608;
            float _2752 = isnan(cbSceneParam._m0[41u].w) ? _2748 : (isnan(_2748) ? cbSceneParam._m0[41u].w : max(_2748, cbSceneParam._m0[41u].w));
            float _2795 = (cbSceneParam._m0[33u].x - sqrt(((_2409 * _2409) + (_2408 * _2408)) + (_2410 * _2410))) * cbSceneParam._m0[33u].y;
            float _4950 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
            float _2802 = (isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2609, cbSceneParam._m0[33u].w + _2610), _2752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2609, _2610 - cbSceneParam._m0[33u].z), _2752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2609 - cbSceneParam._m0[33u].z, _2610 - cbSceneParam._m0[33u].w), _2752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2609 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2610), _2752), 0.0)).x), vec4(0.25)));
            float _2806 = 1.0 - (_2802 * cbSceneParam._m0[34u].x);
            float _2807 = 1.0 - (_2802 * cbSceneParam._m0[34u].y);
            float _2808 = 1.0 - (_2802 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2808) ? _2556 : (isnan(_2556) ? _2808 : min(_2556, _2808));
            frontier_phi_34_33_ladder_1 = isnan(_2807) ? _2555 : (isnan(_2555) ? _2807 : min(_2555, _2807));
            frontier_phi_34_33_ladder_2 = isnan(_2806) ? _2554 : (isnan(_2554) ? _2806 : min(_2554, _2806));
        }
        else
        {
            frontier_phi_34_33_ladder = _2556;
            frontier_phi_34_33_ladder_1 = _2555;
            frontier_phi_34_33_ladder_2 = _2554;
        }
        _2620 = frontier_phi_34_33_ladder_2;
        _2622 = frontier_phi_34_33_ladder_1;
        _2624 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2620 = _2554;
        _2622 = _2555;
        _2624 = _2556;
    }
    uvec4 _2629 = floatBitsToUint(cbInstanceData._m0[_1273 + 5u]);
    uint _2631 = _2629.x * 14u;
    uint _2632 = _2631 + 13u;
    float _2639 = _1345 + (-1.0);
    float _2644 = (cbLight._m0[_2632].x * _2639) + 1.0;
    float _2645 = (cbLight._m0[_2632].y * _2639) + 1.0;
    float _2646 = (cbLight._m0[_2632].z * _2639) + 1.0;
    float _2647 = (cbLight._m0[_2632].w * _2639) + 1.0;
    uint _2648 = _2631 + 5u;
    float _2654 = isnan(1.0) ? _2645 : (isnan(_2645) ? 1.0 : min(_2645, 1.0));
    uint _2658 = _2631 + 4u;
    float _2667 = isnan(1.0) ? _2644 : (isnan(_2644) ? 1.0 : min(_2644, 1.0));
    uint _2671 = _2631 | 1u;
    float _2682 = dot(vec3(cbLight._m0[_2631].xyz), vec3(_1150, _1151, _1152));
    float _2685 = dot(vec3(cbLight._m0[_2671].xyz), vec3(_1150, _1151, _1152));
    float _4986 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
    float _4997 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2690 = (isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0))) * 0.3183098733425140380859375;
    float _2692 = (isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0))) * 0.3183098733425140380859375;
    float _2699 = ((cbLight._m0[_2648].x * _2654) * _2692) + (((cbLight._m0[_2658].x * _2620) * _2667) * _2690);
    float _2700 = ((_2654 * cbLight._m0[_2648].y) * _2692) + (((cbLight._m0[_2658].y * _2622) * _2667) * _2690);
    float _2701 = ((_2654 * cbLight._m0[_2648].z) * _2692) + (((cbLight._m0[_2658].z * _2624) * _2667) * _2690);
    uvec4 _2705 = floatBitsToUint(cbLight._m0[_2631 + 12u]);
    bool _2707 = _2705.x == 0u;
    float _2809;
    float _2811;
    float _2813;
    if (_2707)
    {
        _2809 = _2699;
        _2811 = _2700;
        _2813 = _2701;
    }
    else
    {
        uint _2817 = _2631 + 6u;
        float _2833 = (dot(vec3(cbLight._m0[_2631 + 2u].xyz), vec3(_1150, _1151, _1152)) * 0.5) + 0.5;
        float _2834 = _2833 * _2833;
        float _5008 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
        float _2835 = isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0));
        float _2836 = isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0));
        _2809 = (((cbLight._m0[_2817].x * 0.3183098733425140380859375) * _2835) * _2836) + _2699;
        _2811 = (((cbLight._m0[_2817].y * 0.3183098733425140380859375) * _2835) * _2836) + _2700;
        _2813 = (((cbLight._m0[_2817].z * 0.3183098733425140380859375) * _2835) * _2836) + _2701;
    }
    bool _2816 = _2705.y == 0u;
    float _2871;
    float _2873;
    float _2875;
    if (_2816)
    {
        _2871 = _2809;
        _2873 = _2811;
        _2875 = _2813;
    }
    else
    {
        uint _3044 = _2631 + 7u;
        float _3060 = (dot(vec3(cbLight._m0[_2631 + 3u].xyz), vec3(_1150, _1151, _1152)) * 0.5) + 0.5;
        float _3061 = _3060 * _3060;
        float _5024 = isnan(0.0) ? _3061 : (isnan(_3061) ? 0.0 : max(_3061, 0.0));
        float _3062 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
        float _3063 = isnan(1.0) ? _2647 : (isnan(_2647) ? 1.0 : min(_2647, 1.0));
        _2871 = (((cbLight._m0[_3044].x * 0.3183098733425140380859375) * _3062) * _3063) + _2809;
        _2873 = (((cbLight._m0[_3044].y * 0.3183098733425140380859375) * _3062) * _3063) + _2811;
        _2875 = (((cbLight._m0[_3044].z * 0.3183098733425140380859375) * _3062) * _3063) + _2813;
    }
    uint _2878 = _2631 + 8u;
    float _2891 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2631].w)) * _1260) * 0.949999988079071044921875);
    float _2892 = _2891 * _2891;
    float _2893 = cbLight._m0[_2631].x + _1210;
    float _2894 = cbLight._m0[_2631].y + _1211;
    float _2895 = cbLight._m0[_2631].z + _1212;
    float _2899 = inversesqrt(dot(vec3(_2893, _2894, _2895), vec3(_2893, _2894, _2895)));
    float _2900 = _2899 * _2893;
    float _2901 = _2899 * _2894;
    float _2902 = _2899 * _2895;
    float _2903 = dot(vec3(_1150, _1151, _1152), vec3(cbLight._m0[_2631].xyz));
    float _5040 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
    float _2906 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
    float _5051 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
    float _2907 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
    float _2908 = dot(vec3(_1150, _1151, _1152), vec3(_2900, _2901, _2902));
    float _5062 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
    float _2911 = isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0));
    float _2912 = dot(vec3(cbLight._m0[_2631].xyz), vec3(_2900, _2901, _2902));
    float _5073 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
    float _2916 = _2892 * _2892;
    float _2920 = ((_2911 * _2911) * (_2916 + (-1.0))) + 1.0;
    float _2928 = exp2(log2(1.0 - (isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0)))) * 5.0);
    float _2929 = 0.959999978542327880859375 - _1327;
    float _2931 = 0.959999978542327880859375 - _1328;
    float _2932 = 0.959999978542327880859375 - _1329;
    float _2939 = 1.0 - _2892;
    float _2950 = (0.5 / (((_2907 * ((_2906 * _2939) + _2892)) + 9.9999999392252902907785028219223e-09) + (((_2907 * _2939) + _2892) * _2906))) * _2906;
    float _5084 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
    float _2952 = (isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0))) * (_2916 / ((_2920 * _2920) * 3.141590118408203125));
    uint _2966 = _2631 + 9u;
    float _2977 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2671].w)) * _1260) * 0.949999988079071044921875);
    float _2978 = _2977 * _2977;
    float _2979 = cbLight._m0[_2671].x + _1210;
    float _2980 = cbLight._m0[_2671].y + _1211;
    float _2981 = cbLight._m0[_2671].z + _1212;
    float _2985 = inversesqrt(dot(vec3(_2979, _2980, _2981), vec3(_2979, _2980, _2981)));
    float _2986 = _2985 * _2979;
    float _2987 = _2985 * _2980;
    float _2988 = _2985 * _2981;
    float _2989 = dot(vec3(_1150, _1151, _1152), vec3(cbLight._m0[_2671].xyz));
    float _5095 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
    float _2992 = isnan(1.0) ? _5095 : (isnan(_5095) ? 1.0 : min(_5095, 1.0));
    float _2993 = dot(vec3(_1150, _1151, _1152), vec3(_2986, _2987, _2988));
    float _5106 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
    float _2996 = isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0));
    float _2997 = dot(vec3(cbLight._m0[_2671].xyz), vec3(_2986, _2987, _2988));
    float _5117 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
    float _3001 = _2978 * _2978;
    float _3005 = ((_2996 * _2996) * (_3001 + (-1.0))) + 1.0;
    float _3012 = exp2(log2(1.0 - (isnan(1.0) ? _5117 : (isnan(_5117) ? 1.0 : min(_5117, 1.0)))) * 5.0);
    float _3019 = 1.0 - _2978;
    float _3029 = (0.5 / (((_2907 * ((_2992 * _3019) + _2978)) + 9.9999999392252902907785028219223e-09) + (((_2907 * _3019) + _2978) * _2992))) * _2992;
    float _5128 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
    float _3031 = (isnan(1.0) ? _5128 : (isnan(_5128) ? 1.0 : min(_5128, 1.0))) * (_3001 / ((_3005 * _3005) * 3.141590118408203125));
    float _3041 = (((((_3012 * _2929) + _1330) * cbLight._m0[_2966].x) * _3031) * _2654) + ((((cbLight._m0[_2878].x * _2620) * ((_2928 * _2929) + _1330)) * _2952) * _2667);
    float _3042 = (((((_3012 * _2931) + _1332) * cbLight._m0[_2966].y) * _3031) * _2654) + ((((cbLight._m0[_2878].y * _2622) * ((_2928 * _2931) + _1332)) * _2952) * _2667);
    float _3043 = (((((_3012 * _2932) + _1333) * cbLight._m0[_2966].z) * _3031) * _2654) + ((((cbLight._m0[_2878].z * _2624) * ((_2928 * _2932) + _1333)) * _2952) * _2667);
    float _3099;
    float _3101;
    float _3103;
    if (_2707)
    {
        _3099 = _3041;
        _3101 = _3042;
        _3103 = _3043;
    }
    else
    {
        uint _3105 = _2631 + 2u;
        uint _3109 = _2631 + 10u;
        float _3123 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3105].w)) * _1260) * 0.949999988079071044921875);
        float _3124 = _3123 * _3123;
        float _3125 = cbLight._m0[_3105].x + _1210;
        float _3126 = cbLight._m0[_3105].y + _1211;
        float _3127 = cbLight._m0[_3105].z + _1212;
        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
        float _3132 = _3131 * _3125;
        float _3133 = _3131 * _3126;
        float _3134 = _3131 * _3127;
        float _3135 = dot(vec3(_1150, _1151, _1152), vec3(cbLight._m0[_3105].xyz));
        float _5139 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
        float _3138 = isnan(1.0) ? _5139 : (isnan(_5139) ? 1.0 : min(_5139, 1.0));
        float _3139 = dot(vec3(_1150, _1151, _1152), vec3(_3132, _3133, _3134));
        float _5150 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0));
        float _3142 = isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0));
        float _3143 = dot(vec3(cbLight._m0[_3105].xyz), vec3(_3132, _3133, _3134));
        float _5161 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0));
        float _3147 = _3124 * _3124;
        float _3151 = ((_3142 * _3142) * (_3147 + (-1.0))) + 1.0;
        float _3158 = exp2(log2(1.0 - (isnan(1.0) ? _5161 : (isnan(_5161) ? 1.0 : min(_5161, 1.0)))) * 5.0);
        float _3165 = 1.0 - _3124;
        float _3175 = (0.5 / (((_2907 * ((_3138 * _3165) + _3124)) + 9.9999999392252902907785028219223e-09) + (((_2907 * _3165) + _3124) * _3138))) * _3138;
        float _5172 = isnan(0.0) ? _3175 : (isnan(_3175) ? 0.0 : max(_3175, 0.0));
        float _3177 = (isnan(1.0) ? _5172 : (isnan(_5172) ? 1.0 : min(_5172, 1.0))) * (_3147 / ((_3151 * _3151) * 3.141590118408203125));
        float _3178 = isnan(1.0) ? _2646 : (isnan(_2646) ? 1.0 : min(_2646, 1.0));
        _3099 = (((((_3158 * _2929) + _1330) * cbLight._m0[_3109].x) * _3177) * _3178) + _3041;
        _3101 = (((((_3158 * _2931) + _1332) * cbLight._m0[_3109].y) * _3177) * _3178) + _3042;
        _3103 = (((((_3158 * _2932) + _1333) * cbLight._m0[_3109].z) * _3177) * _3178) + _3043;
    }
    float _3209;
    float _3211;
    float _3213;
    if (_2816)
    {
        _3209 = _3099;
        _3211 = _3101;
        _3213 = _3103;
    }
    else
    {
        uint _3220 = _2631 + 3u;
        uint _3224 = _2631 + 11u;
        float _3238 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3220].w)) * _1260) * 0.949999988079071044921875);
        float _3239 = _3238 * _3238;
        float _3240 = cbLight._m0[_3220].x + _1210;
        float _3241 = cbLight._m0[_3220].y + _1211;
        float _3242 = cbLight._m0[_3220].z + _1212;
        float _3246 = inversesqrt(dot(vec3(_3240, _3241, _3242), vec3(_3240, _3241, _3242)));
        float _3247 = _3246 * _3240;
        float _3248 = _3246 * _3241;
        float _3249 = _3246 * _3242;
        float _3250 = dot(vec3(_1150, _1151, _1152), vec3(cbLight._m0[_3220].xyz));
        float _5188 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
        float _3253 = isnan(1.0) ? _5188 : (isnan(_5188) ? 1.0 : min(_5188, 1.0));
        float _3254 = dot(vec3(_1150, _1151, _1152), vec3(_3247, _3248, _3249));
        float _5199 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0));
        float _3257 = isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0));
        float _3258 = dot(vec3(cbLight._m0[_3220].xyz), vec3(_3247, _3248, _3249));
        float _5210 = isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0));
        float _3262 = _3239 * _3239;
        float _3266 = ((_3257 * _3257) * (_3262 + (-1.0))) + 1.0;
        float _3273 = exp2(log2(1.0 - (isnan(1.0) ? _5210 : (isnan(_5210) ? 1.0 : min(_5210, 1.0)))) * 5.0);
        float _3280 = 1.0 - _3239;
        float _3290 = (0.5 / (((_2907 * ((_3253 * _3280) + _3239)) + 9.9999999392252902907785028219223e-09) + (((_2907 * _3280) + _3239) * _3253))) * _3253;
        float _5221 = isnan(0.0) ? _3290 : (isnan(_3290) ? 0.0 : max(_3290, 0.0));
        float _3292 = (isnan(1.0) ? _5221 : (isnan(_5221) ? 1.0 : min(_5221, 1.0))) * (_3262 / ((_3266 * _3266) * 3.141590118408203125));
        float _3293 = isnan(1.0) ? _2647 : (isnan(_2647) ? 1.0 : min(_2647, 1.0));
        _3209 = (((((_3273 * _2929) + _1330) * cbLight._m0[_3224].x) * _3292) * _3293) + _3099;
        _3211 = (((((_3273 * _2931) + _1332) * cbLight._m0[_3224].y) * _3292) * _3293) + _3101;
        _3213 = (((((_3273 * _2932) + _1333) * cbLight._m0[_3224].z) * _3292) * _3293) + _3103;
    }
    float _3359;
    float _3361;
    float _3363;
    float _3365;
    float _3367;
    float _3369;
    if (_2629.y == 0u)
    {
        uvec4 _3314 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3315 = _3314.x;
        uint _3326 = uint((float(_3314.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1219) / _3315))) + floor(float(uint(cbSceneParam._m0[85u].x * _1218) / _3315)));
        float _3336 = (log2(_2410 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3337 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0));
        uint _3340 = uint(isnan(14.0) ? _3337 : (isnan(_3337) ? 14.0 : min(_3337, 14.0)));
        uvec4 _3345 = texelFetch(g_lightClusterGridBuffer, int(((_3340 << 2u) + (_3326 << 6u)) >> 2u));
        uint _3346 = _3345.x;
        uint _3347 = _3314.z;
        float _3455;
        float _3457;
        float _3459;
        float _3461;
        float _3463;
        float _3465;
        if (((((1u << ((_3347 >> 4u) & 15u)) + 4294967295u) & _3346) == 0u) || ((_3347 & 240u) == 0u))
        {
            _3455 = 0.0;
            _3457 = 0.0;
            _3459 = 0.0;
            _3461 = 0.0;
            _3463 = 0.0;
            _3465 = 0.0;
        }
        else
        {
            float _3456;
            float _3458;
            float _3460;
            float _3462;
            float _3464;
            float _3466;
            float _3607 = 0.0;
            float _3608 = 0.0;
            float _3609 = 0.0;
            float _3610 = 0.0;
            float _3611 = 0.0;
            float _3612 = 0.0;
            uint _3613 = 0u;
            uint _3622;
            bool _3623;
            for (;;)
            {
                _3622 = texelFetch(g_lightClassification, int((((_3340 << 5u) + (_3326 << 9u)) + (_3613 << 2u)) >> 2u)).x;
                _3623 = _3622 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3623)
                {
                    frontier_phi_66_pred = _3612;
                    frontier_phi_66_pred_1 = _3611;
                    frontier_phi_66_pred_2 = _3610;
                    frontier_phi_66_pred_3 = _3609;
                    frontier_phi_66_pred_4 = _3608;
                    frontier_phi_66_pred_5 = _3607;
                }
                else
                {
                    float _3731;
                    float _3732;
                    float _3733;
                    float _3734;
                    float _3735;
                    float _3736;
                    uint _3737;
                    _3731 = _3607;
                    _3732 = _3608;
                    _3733 = _3609;
                    _3734 = _3610;
                    _3735 = _3611;
                    _3736 = _3612;
                    _3737 = _3622;
                    float _3663;
                    float _3664;
                    float _3665;
                    float _3666;
                    float _3667;
                    float _3668;
                    for (;;)
                    {
                        uint _3741 = uint(findLSB(_3737)) + (_3613 << 5u);
                        uint _3738 = (_3737 + 4294967295u) & _3737;
                        uint _3743 = _3741 * 48u;
                        vec4 _3757 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3743)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 3u)).x));
                        uint _3763 = (_3741 * 48u) + 4u;
                        vec4 _3776 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3763)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3763 + 3u)).x));
                        uint _3782 = (_3741 * 48u) + 8u;
                        vec3 _3793 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3782)).x, texelFetch(g_PointLightRenderingBuffer, int(_3782 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3782 + 2u)).x));
                        float _3797 = _3757.x - _2408;
                        float _3798 = _3757.y - _2409;
                        float _3799 = _3757.z - _2410;
                        float _3800 = dot(vec3(_3797, _3798, _3799), vec3(_3797, _3798, _3799));
                        float _3803 = inversesqrt(_3800);
                        float _3804 = _3803 * _3797;
                        float _3805 = _3803 * _3798;
                        float _3806 = _3803 * _3799;
                        float _3807 = dot(vec3(_1241, _1244, _1247), vec3(_3804, _3805, _3806));
                        float _3812 = 1.0 - (_3800 * _3757.w);
                        float _5247 = isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0));
                        float _3813 = isnan(1.0) ? _5247 : (isnan(_5247) ? 1.0 : min(_5247, 1.0));
                        float _3814 = sqrt(_3800) * _3776.w;
                        float _3817 = 1.39999997615814208984375 / (_3814 + 1.39999997615814208984375);
                        float _3818 = _3817 * _3817;
                        float _3821 = ((1.0 - _3818) * _3807) + _3818;
                        float _3824 = _3814 * _3814;
                        float _3828 = ((isnan(0.0) ? _3821 : (isnan(_3821) ? 0.0 : max(_3821, 0.0))) * _3813) / ((_3824 * 0.699999988079071044921875) + 1.0);
                        float _3832 = (-0.0) - _2408;
                        float _3833 = (-0.0) - _2409;
                        float _3834 = (-0.0) - _2410;
                        float _3838 = inversesqrt(dot(vec3(_3832, _3833, _3834), vec3(_3832, _3833, _3834)));
                        float _3839 = _3838 * _3832;
                        float _3840 = _3838 * _3833;
                        float _3841 = _3838 * _3834;
                        float _3848 = exp2(log2(1.0 / ((_3824 * 3.5) + 5.0)) * 0.25);
                        float _3849 = 1.0 - _1361;
                        float _3856 = sqrt(1.0 - ((1.0 - (_3849 * _3849)) * (1.0 - (_3848 * _3848))));
                        float _3857 = _3856 * _3856;
                        float _3858 = _3857 * _3857;
                        float _3859 = _3839 + _3804;
                        float _3860 = _3840 + _3805;
                        float _3861 = _3841 + _3806;
                        float _3865 = inversesqrt(dot(vec3(_3859, _3860, _3861), vec3(_3859, _3860, _3861)));
                        float _3869 = dot(vec3(_1241, _1244, _1247), vec3(_3839, _3840, _3841));
                        float _5263 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                        float _3872 = isnan(1.0) ? _5263 : (isnan(_5263) ? 1.0 : min(_5263, 1.0));
                        float _3873 = dot(vec3(_1241, _1244, _1247), vec3(_3865 * _3859, _3865 * _3860, _3865 * _3861));
                        float _5274 = isnan(0.0) ? _3873 : (isnan(_3873) ? 0.0 : max(_3873, 0.0));
                        float _3876 = isnan(1.0) ? _5274 : (isnan(_5274) ? 1.0 : min(_5274, 1.0));
                        float _3880 = ((_3876 * _3876) * (_3858 + (-1.0))) + 1.0;
                        float _3881 = _3817 * _3857;
                        float _3882 = _3881 * _3881;
                        float _3885 = ((1.0 - _3882) * _3807) + _3882;
                        float _5285 = isnan(0.0) ? _3885 : (isnan(_3885) ? 0.0 : max(_3885, 0.0));
                        float _3886 = isnan(1.0) ? _5285 : (isnan(_5285) ? 1.0 : min(_5285, 1.0));
                        float _3887 = 1.0 - _3857;
                        float _3897 = (0.5 / (((_3886 * ((_3872 * _3887) + _3857)) + 9.9999999392252902907785028219223e-09) + (((_3886 * _3887) + _3857) * _3872))) * _3886;
                        float _5296 = isnan(0.0) ? _3897 : (isnan(_3897) ? 0.0 : max(_3897, 0.0));
                        float _3908 = (((_3858 * 3.1415927410125732421875) * (isnan(1.0) ? _5296 : (isnan(_5296) ? 1.0 : min(_5296, 1.0)))) / ((_3880 * _3880) * ((_3824 * 2.1991131305694580078125) + 3.141590118408203125))) * _3813;
                        _3666 = (_3828 * _3776.x) + _3734;
                        _3667 = (_3828 * _3776.y) + _3735;
                        _3668 = (_3828 * _3776.z) + _3736;
                        _3663 = (_3908 * _3793.x) + _3731;
                        _3664 = (_3908 * _3793.y) + _3732;
                        _3665 = (_3908 * _3793.z) + _3733;
                        if (_3738 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3731 = _3663;
                            _3732 = _3664;
                            _3733 = _3665;
                            _3734 = _3666;
                            _3735 = _3667;
                            _3736 = _3668;
                            _3737 = _3738;
                        }
                    }
                    frontier_phi_66_pred = _3668;
                    frontier_phi_66_pred_1 = _3667;
                    frontier_phi_66_pred_2 = _3666;
                    frontier_phi_66_pred_3 = _3665;
                    frontier_phi_66_pred_4 = _3664;
                    frontier_phi_66_pred_5 = _3663;
                }
                _3466 = frontier_phi_66_pred;
                _3464 = frontier_phi_66_pred_1;
                _3462 = frontier_phi_66_pred_2;
                _3460 = frontier_phi_66_pred_3;
                _3458 = frontier_phi_66_pred_4;
                _3456 = frontier_phi_66_pred_5;
                uint _3614 = _3613 + 1u;
                if (_3614 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3607 = _3456;
                    _3608 = _3458;
                    _3609 = _3460;
                    _3610 = _3462;
                    _3611 = _3464;
                    _3612 = _3466;
                    _3613 = _3614;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3455 = _3456;
            _3457 = _3458;
            _3459 = _3460;
            _3461 = _3462;
            _3463 = _3464;
            _3465 = _3466;
        }
        uvec4 _3469 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3470 = _3469.z;
        uint _3472 = (_3470 >> 8u) & 15u;
        float _3575;
        float _3577;
        float _3579;
        float _3581;
        float _3583;
        float _3585;
        if (((4294967295u << _3472) & _3346) == 0u)
        {
            _3575 = _3455;
            _3577 = _3457;
            _3579 = _3459;
            _3581 = _3461;
            _3583 = _3463;
            _3585 = _3465;
        }
        else
        {
            float _3600 = inversesqrt(dot(vec3(_2408, _2409, _2410), vec3(_2408, _2409, _2410)));
            float _3601 = _3600 * _2408;
            float _3602 = _3600 * _2409;
            float _3603 = _3600 * _2410;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3472 < ((_3470 >> 12u) & 15u))
            {
                float _3576;
                float _3578;
                float _3580;
                float _3582;
                float _3584;
                float _3586;
                float _3714 = _3455;
                float _3715 = _3457;
                float _3716 = _3459;
                float _3717 = _3461;
                float _3718 = _3463;
                float _3719 = _3465;
                uint _3720 = _3472;
                uint _3729;
                bool _3730;
                for (;;)
                {
                    _3729 = texelFetch(g_lightClassification, int((((_3340 << 5u) + (_3326 << 9u)) + (_3720 << 2u)) >> 2u)).x;
                    _3730 = _3729 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3730)
                    {
                        frontier_phi_72_pred = _3719;
                        frontier_phi_72_pred_1 = _3718;
                        frontier_phi_72_pred_2 = _3717;
                        frontier_phi_72_pred_3 = _3716;
                        frontier_phi_72_pred_4 = _3715;
                        frontier_phi_72_pred_5 = _3714;
                    }
                    else
                    {
                        float _3913;
                        float _3914;
                        float _3915;
                        float _3916;
                        float _3917;
                        float _3918;
                        float _4206;
                        float _4207;
                        float _4208;
                        float _4209;
                        float _4210;
                        float _4211;
                        float _3926 = _3714;
                        float _3927 = _3715;
                        float _3928 = _3716;
                        float _3929 = _3717;
                        float _3930 = _3718;
                        float _3931 = _3719;
                        uint _3932 = _3729;
                        uint _3933;
                        vec4 _3958;
                        float _3959;
                        vec4 _3974;
                        vec3 _3986;
                        vec4 _4001;
                        vec4 _4016;
                        float _4062;
                        bool _4063;
                        for (;;)
                        {
                            uint _3943 = ((_3720 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3932));
                            _3933 = (_3932 + 4294967295u) & _3932;
                            uint _3945 = _3943 * 40u;
                            _3958 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3945)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 3u)).x));
                            _3959 = _3958.w;
                            uint _3961 = (_3943 * 40u) + 4u;
                            _3974 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3961)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 3u)).x));
                            uint _3976 = (_3943 * 40u) + 8u;
                            _3986 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3976)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3976 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3976 + 2u)).x));
                            uint _3988 = (_3943 * 40u) + 16u;
                            _4001 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3988)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 3u)).x));
                            uint _4003 = (_3943 * 40u) + 20u;
                            _4016 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4003)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 3u)).x));
                            uint _4018 = (_3943 * 40u) + 24u;
                            vec4 _4031 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4018)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 3u)).x));
                            uint _4037 = (_3943 * 40u) + 28u;
                            vec4 _4050 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4037)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 3u)).x));
                            _4062 = fma(_2410, _4050.z, fma(_2409, _4050.y, _4050.x * _2408)) + _4050.w;
                            _4063 = !((fma(_2410, _4031.z, fma(_2409, _4031.y, _4031.x * _2408)) + _4031.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_4063)
                            {
                                float _4090 = _3958.x - _2408;
                                float _4091 = _3958.y - _2409;
                                float _4092 = _3958.z - _2410;
                                float _4093 = dot(vec3(_4090, _4091, _4092), vec3(_4090, _4091, _4092));
                                float _4096 = inversesqrt(_4093);
                                float _4097 = _4096 * _4090;
                                float _4098 = _4096 * _4091;
                                float _4099 = _4096 * _4092;
                                float _4103 = 1.0 - (_4093 / (_3959 * _3959));
                                float _5307 = isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0));
                                float _4104 = isnan(1.0) ? _5307 : (isnan(_5307) ? 1.0 : min(_5307, 1.0));
                                float _4108 = sqrt(_4093) * _3974.w;
                                float _4110 = 1.39999997615814208984375 / (_4108 + 1.39999997615814208984375);
                                float _4111 = _4110 * _4110;
                                float _4114 = ((1.0 - _4111) * dot(vec3(_4097, _4098, _4099), vec3(_1241, _1244, _1247))) + _4111;
                                float _4117 = _4108 * _4108;
                                float _4121 = (fma(_2410, _4001.z, fma(_2409, _4001.y, _4001.x * _2408)) + _4001.w) / _4062;
                                float _4122 = (fma(_2410, _4016.z, fma(_2409, _4016.y, _4016.x * _2408)) + _4016.w) / _4062;
                                float _4126 = 1.0 - dot(vec2(_4121, _4122), vec2(_4121, _4122));
                                float _5323 = isnan(0.0) ? _4126 : (isnan(_4126) ? 0.0 : max(_4126, 0.0));
                                float _4127 = isnan(1.0) ? _5323 : (isnan(_5323) ? 1.0 : min(_5323, 1.0));
                                float _4128 = _4127 * (((isnan(0.0) ? _4114 : (isnan(_4114) ? 0.0 : max(_4114, 0.0))) * _4104) / ((_4117 * 0.699999988079071044921875) + 1.0));
                                float _4140 = exp2(log2(1.0 / ((_4117 * 3.5) + 5.0)) * 0.25);
                                float _4141 = 1.0 - _1361;
                                float _4148 = sqrt(1.0 - ((1.0 - (_4141 * _4141)) * (1.0 - (_4140 * _4140))));
                                float _4149 = _4148 * _4148;
                                float _4150 = _4149 * _4149;
                                float _4151 = _4097 - _3601;
                                float _4152 = _4098 - _3602;
                                float _4153 = _4099 - _3603;
                                float _4157 = inversesqrt(dot(vec3(_4151, _4152, _4153), vec3(_4151, _4152, _4153)));
                                float _4161 = dot(vec3(_1241, _1244, _1247), vec3((-0.0) - _3601, (-0.0) - _3602, (-0.0) - _3603));
                                float _5334 = isnan(0.0) ? _4161 : (isnan(_4161) ? 0.0 : max(_4161, 0.0));
                                float _4164 = isnan(1.0) ? _5334 : (isnan(_5334) ? 1.0 : min(_5334, 1.0));
                                float _4165 = dot(vec3(_1241, _1244, _1247), vec3(_4157 * _4151, _4157 * _4152, _4157 * _4153));
                                float _5345 = isnan(0.0) ? _4165 : (isnan(_4165) ? 0.0 : max(_4165, 0.0));
                                float _4168 = isnan(1.0) ? _5345 : (isnan(_5345) ? 1.0 : min(_5345, 1.0));
                                float _4172 = ((_4168 * _4168) * (_4150 + (-1.0))) + 1.0;
                                float _4173 = _4110 * _4149;
                                float _4174 = _4173 * _4173;
                                float _4180 = ((1.0 - _4174) * dot(vec3(_1241, _1244, _1247), vec3(_4097, _4098, _4099))) + _4174;
                                float _5356 = isnan(0.0) ? _4180 : (isnan(_4180) ? 0.0 : max(_4180, 0.0));
                                float _4181 = isnan(1.0) ? _5356 : (isnan(_5356) ? 1.0 : min(_5356, 1.0));
                                float _4182 = 1.0 - _4149;
                                float _4192 = (0.5 / (((_4181 * ((_4164 * _4182) + _4149)) + 9.9999999392252902907785028219223e-09) + (((_4181 * _4182) + _4149) * _4164))) * _4181;
                                float _5367 = isnan(0.0) ? _4192 : (isnan(_4192) ? 0.0 : max(_4192, 0.0));
                                float _4202 = (_4127 * _4104) * (((_4150 * 3.1415927410125732421875) * (isnan(1.0) ? _5367 : (isnan(_5367) ? 1.0 : min(_5367, 1.0)))) / ((_4172 * _4172) * ((_4117 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4128 * _3974.y;
                                frontier_phi_78_pred_1 = _4128 * _3974.x;
                                frontier_phi_78_pred_2 = _4202 * _3986.z;
                                frontier_phi_78_pred_3 = _4202 * _3986.y;
                                frontier_phi_78_pred_4 = _4202 * _3986.x;
                                frontier_phi_78_pred_5 = _4128 * _3974.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4210 = frontier_phi_78_pred;
                            _4209 = frontier_phi_78_pred_1;
                            _4208 = frontier_phi_78_pred_2;
                            _4207 = frontier_phi_78_pred_3;
                            _4206 = frontier_phi_78_pred_4;
                            _4211 = frontier_phi_78_pred_5;
                            _3916 = _4209 + _3929;
                            _3917 = _4210 + _3930;
                            _3918 = _4211 + _3931;
                            _3913 = _4206 + _3926;
                            _3914 = _4207 + _3927;
                            _3915 = _4208 + _3928;
                            if (_3933 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3926 = _3913;
                                _3927 = _3914;
                                _3928 = _3915;
                                _3929 = _3916;
                                _3930 = _3917;
                                _3931 = _3918;
                                _3932 = _3933;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3918;
                        frontier_phi_72_pred_1 = _3917;
                        frontier_phi_72_pred_2 = _3916;
                        frontier_phi_72_pred_3 = _3915;
                        frontier_phi_72_pred_4 = _3914;
                        frontier_phi_72_pred_5 = _3913;
                    }
                    _3586 = frontier_phi_72_pred;
                    _3584 = frontier_phi_72_pred_1;
                    _3582 = frontier_phi_72_pred_2;
                    _3580 = frontier_phi_72_pred_3;
                    _3578 = frontier_phi_72_pred_4;
                    _3576 = frontier_phi_72_pred_5;
                    uint _3721 = _3720 + 1u;
                    if (_3721 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3714 = _3576;
                        _3715 = _3578;
                        _3716 = _3580;
                        _3717 = _3582;
                        _3718 = _3584;
                        _3719 = _3586;
                        _3720 = _3721;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3586;
                frontier_phi_60_61_ladder_1 = _3584;
                frontier_phi_60_61_ladder_2 = _3580;
                frontier_phi_60_61_ladder_3 = _3578;
                frontier_phi_60_61_ladder_4 = _3576;
                frontier_phi_60_61_ladder_5 = _3582;
            }
            else
            {
                frontier_phi_60_61_ladder = _3465;
                frontier_phi_60_61_ladder_1 = _3463;
                frontier_phi_60_61_ladder_2 = _3459;
                frontier_phi_60_61_ladder_3 = _3457;
                frontier_phi_60_61_ladder_4 = _3455;
                frontier_phi_60_61_ladder_5 = _3461;
            }
            _3575 = frontier_phi_60_61_ladder_4;
            _3577 = frontier_phi_60_61_ladder_3;
            _3579 = frontier_phi_60_61_ladder_2;
            _3581 = frontier_phi_60_61_ladder_5;
            _3583 = frontier_phi_60_61_ladder_1;
            _3585 = frontier_phi_60_61_ladder;
        }
        float _3590 = isnan(1.0) ? _1345 : (isnan(_1345) ? 1.0 : min(_1345, 1.0));
        _3359 = (_3590 * _3581) + _2871;
        _3361 = (_3590 * _3583) + _2873;
        _3363 = (_3590 * _3585) + _2875;
        _3365 = ((_3575 * _1330) * _3590) + _3209;
        _3367 = ((_3577 * _1332) * _3590) + _3211;
        _3369 = ((_3579 * _1333) * _3590) + _3213;
    }
    else
    {
        _3359 = _2871;
        _3361 = _2873;
        _3363 = _2875;
        _3365 = _3209;
        _3367 = _3211;
        _3369 = _3213;
    }
    uint _3375 = _1274 + uint(cbMatDynParam._m0[0u].w);
    float _3381 = (((((cbMtdParam._m0[22u].x * _1054.x) * cbMtdParam._m0[32u].x) * _1077) + _828) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3375].x;
    float _3382 = (((((cbMtdParam._m0[22u].y * _1054.y) * cbMtdParam._m0[32u].x) * _1077) + _829) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3375].y;
    float _3383 = (((((cbMtdParam._m0[22u].z * _1054.z) * cbMtdParam._m0[32u].x) * _1077) + _830) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3375].z;
    float _5383 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
    float _5394 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
    float _5405 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
    float _3400 = (((isnan(1.0) ? _5383 : (isnan(_5383) ? 1.0 : min(_5383, 1.0))) * (_3359 + ((isnan(0.0) ? _2065 : (isnan(_2065) ? 0.0 : max(_2065, 0.0))) * _1345))) + ((_3365 + ((isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0))) * _2142)) * cbPerFrame._m0[3u].x)) + _3381;
    float _3402 = (_3382 + ((_3367 + ((isnan(0.0) ? _2358 : (isnan(_2358) ? 0.0 : max(_2358, 0.0))) * _2142)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5394 : (isnan(_5394) ? 1.0 : min(_5394, 1.0))) * (_3361 + ((isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0))) * _1345)));
    float _3404 = (_3383 + ((_3369 + ((isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0))) * _2142)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5405 : (isnan(_5405) ? 1.0 : min(_5405, 1.0))) * (_3363 + ((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1345)));
    float _5431 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3417 = isnan(1.0) ? _5431 : (isnan(_5431) ? 1.0 : min(_5431, 1.0));
    uint _3418 = _1273 + 6u;
    float _3426 = _1218 / cbSceneParam._m0[86u].x;
    float _3427 = _1219 / cbSceneParam._m0[86u].y;
    vec4 _3441 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3426, _3427, (log2((isnan(cbSceneParam._m0[77u].w) ? _1173 : (isnan(_1173) ? cbSceneParam._m0[77u].w : min(_1173, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3443 = _3441.x;
    float _3444 = _3441.y;
    float _3445 = _3441.z;
    float _3446 = _3441.w;
    float _3517;
    float _3519;
    float _3521;
    float _3523;
    if (_1173 > cbSceneParam._m0[78u].w)
    {
        float _3480 = isnan(_1173) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1173 : min(cbSceneParam._m0[80u].w, _1173));
        float _3481 = _3480 / _1173;
        float _3492 = _3481 * _1203;
        float _3493 = _1204 * _3481;
        float _3494 = (-0.0) - _3493;
        float _3495 = _3481 * _1205;
        float _3497 = (cbSceneParam._m0[77u].w * _3494) / _3480;
        float _3498 = _3497 + cbSceneParam._m0[79u].w;
        float _3499 = cbSceneParam._m0[79u].w - _3493;
        float _3505 = sqrt(((_3492 * _3492) + (_3493 * _3493)) + (_3495 * _3495));
        float _3508 = (1.0 - (cbSceneParam._m0[77u].w / _3480)) * _3505;
        float _3513 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3515 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3676;
        if (abs((_3494 - _3497) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3676 = ((((_3498 > 0.0) ? exp2(_3513 * _3498) : (2.0 - exp2(_3515 * _3498))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3508;
        }
        else
        {
            float _3636 = 1.0 / cbSceneParam._m0[80u].x;
            float _3637 = isnan(_3499) ? _3498 : (isnan(_3498) ? _3499 : max(_3498, _3499));
            float _3638 = isnan(_3499) ? _3498 : (isnan(_3498) ? _3499 : min(_3498, _3499));
            float _3647 = isnan(0.0) ? _3637 : (isnan(_3637) ? 0.0 : min(_3637, 0.0));
            float _3648 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : min(_3638, 0.0));
            _3676 = ((abs(_3505 / _3494) * cbSceneParam._m0[80u].y) * ((((_3647 - _3648) * 2.0) - ((exp2(_3513 * (isnan(0.0) ? _3637 : (isnan(_3637) ? 0.0 : max(_3637, 0.0)))) - exp2(_3513 * (isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0))))) * _3636)) - ((exp2(_3515 * _3647) - exp2(_3515 * _3648)) * _3636))) + (_3508 * cbSceneParam._m0[80u].z);
        }
        vec4 _3678 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3426, _3427, 1.0), 0.0);
        float _3687 = exp2((_3676 * (-1.44269502162933349609375)) * (1.0 - _3678.w));
        float _3688 = log2(_3687);
        float _3704 = log2(_3446);
        _3517 = (exp2(_3704 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3688 * cbSceneParam._m0[78u].x)) * _3678.x) / cbSceneParam._m0[78u].x)) + _3443;
        _3519 = (exp2(_3704 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3688 * cbSceneParam._m0[78u].y)) * _3678.y) / cbSceneParam._m0[78u].y)) + _3444;
        _3521 = (exp2(_3704 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3688 * cbSceneParam._m0[78u].z)) * _3678.z) / cbSceneParam._m0[78u].z)) + _3445;
        _3523 = _3687 * _3446;
    }
    else
    {
        _3517 = _3443;
        _3519 = _3444;
        _3521 = _3445;
        _3523 = _3446;
    }
    float _3534 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3535 = _3534 == 3.0;
    float _3536 = log2(_3523);
    float _3540 = exp2(_3536 * cbSceneParam._m0[78u].x);
    float _3541 = exp2(_3536 * cbSceneParam._m0[78u].y);
    float _3542 = exp2(_3536 * cbSceneParam._m0[78u].z);
    float _3543 = _3540 * (isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0)));
    float _3544 = _3541 * (isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0)));
    float _3545 = _3542 * (isnan(0.0) ? _3404 : (isnan(_3404) ? 0.0 : max(_3404, 0.0)));
    float _3554 = (_3534 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3554 * (_3535 ? _3543 : (_3543 + (cbSceneParam._m0[72u].w * _3517)));
    SV_Target.y = _3554 * (_3535 ? _3544 : (_3544 + (cbSceneParam._m0[72u].w * _3519)));
    SV_Target.z = _3554 * (_3535 ? _3545 : (_3545 + (cbSceneParam._m0[72u].w * _3521)));
    SV_Target.w = cbInstanceData._m0[_3418].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3381) * _3417) * _3540) * _3554;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3382) * _3417) * _3541) * _3554;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3383) * _3417) * _3542) * _3554;
    SV_Target_1.w = cbInstanceData._m0[_3418].w;
}


