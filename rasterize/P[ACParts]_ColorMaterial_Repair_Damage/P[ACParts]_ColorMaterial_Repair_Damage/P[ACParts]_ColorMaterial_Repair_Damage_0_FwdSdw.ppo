#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[44];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1710;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _282 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _287 = _282.z;
    float _288 = _282.w;
    vec4 _310 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _315 = _310.w;
    float _327 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].x * _287) * exp2(log2(1.0 - _315) * cbMtdParam._m0[36u].x))) * exp2(log2(cbMtdParam._m0[34u].y))) * cbMtdParam._m0[34u].w);
    float _328 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _329 = isnan(1.0) ? _328 : (isnan(_328) ? 1.0 : min(_328, 1.0));
    vec4 _343 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_11, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _353 = cbMtdParam._m0[31u].x * TEXCOORD_5.x;
    float _361 = (_353 - (((_343.w + 0.00999999977648258209228515625) * cbMtdParam._m0[36u].z) * (1.0 - _353))) * (cbMtdParam._m0[36u].w + 1.0);
    float _4355 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _362 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
    float _364 = _329 - (_362 * _329);
    float _365 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    vec4 _379 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -5.0);
    float _382 = _379.y;
    float _383 = _382 * (isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : min(_365, 1.0)));
    float _392 = exp2(log2(cbMtdParam._m0[32u].w * _315) * cbMtdParam._m0[31u].z);
    float _394 = _392 - (_362 * _392);
    float _395 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _396 = isnan(1.0) ? _395 : (isnan(_395) ? 1.0 : min(_395, 1.0));
    float _407 = 1.0 - (cbMtdParam._m0[37u].y * exp2(log2(_288) * 4.5));
    float _416 = exp2(log2((1.0 - ((cbMtdParam._m0[37u].z * _287) * _407)) * cbMtdParam._m0[35u].x) * cbMtdParam._m0[35u].y);
    float _417 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _418 = isnan(1.0) ? _417 : (isnan(_417) ? 1.0 : min(_417, 1.0));
    float _429 = exp2(log2((1.0 - (((_407 * _407) * _287) * cbMtdParam._m0[36u].y)) * cbMtdParam._m0[35u].w) * cbMtdParam._m0[35u].z);
    float _430 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _434 = (((isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0))) - _288) * _382) + _288;
    vec4 _446 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _211[6];
    float _212[6];
    float _213[6];
    _211[0u] = cbMtdParam._m0[12u].x;
    _212[0u] = cbMtdParam._m0[12u].y;
    _213[0u] = cbMtdParam._m0[12u].z;
    _211[1u] = cbMtdParam._m0[13u].x;
    _212[1u] = cbMtdParam._m0[13u].y;
    _213[1u] = cbMtdParam._m0[13u].z;
    _211[2u] = cbMtdParam._m0[14u].x;
    _212[2u] = cbMtdParam._m0[14u].y;
    _213[2u] = cbMtdParam._m0[14u].z;
    _211[3u] = cbMtdParam._m0[15u].x;
    _212[3u] = cbMtdParam._m0[15u].y;
    _213[3u] = cbMtdParam._m0[15u].z;
    _211[4u] = cbMtdParam._m0[16u].x;
    _212[4u] = cbMtdParam._m0[16u].y;
    _213[4u] = cbMtdParam._m0[16u].z;
    _211[5u] = cbMtdParam._m0[11u].x;
    _212[5u] = cbMtdParam._m0[11u].y;
    _213[5u] = cbMtdParam._m0[11u].z;
    float _514 = (_379.x + (-0.02500000037252902984619140625)) * 8.0;
    float _516 = roundEven(_514);
    float _517 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    uint _520 = uint(int(isnan(5.0) ? _517 : (isnan(_517) ? 5.0 : min(_517, 5.0))));
    float _207[6];
    float _208[6];
    float _209[6];
    _207[0u] = 1.0;
    _208[0u] = 1.0;
    _209[0u] = 1.0;
    _207[1u] = cbMtdParam._m0[23u].x;
    _208[1u] = cbMtdParam._m0[23u].y;
    _209[1u] = cbMtdParam._m0[23u].z;
    _207[2u] = cbMtdParam._m0[21u].x;
    _208[2u] = cbMtdParam._m0[21u].y;
    _209[2u] = cbMtdParam._m0[21u].z;
    _207[3u] = cbMtdParam._m0[19u].x;
    _208[3u] = cbMtdParam._m0[19u].y;
    _209[3u] = cbMtdParam._m0[19u].z;
    _207[4u] = cbMtdParam._m0[18u].x;
    _208[4u] = cbMtdParam._m0[18u].y;
    _209[4u] = cbMtdParam._m0[18u].z;
    _207[5u] = cbMtdParam._m0[17u].x;
    _208[5u] = cbMtdParam._m0[17u].y;
    _209[5u] = cbMtdParam._m0[17u].z;
    float _609 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[41u].w * TEXCOORD.x) * cbMtdParam._m0[33u].y) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[42u].x * TEXCOORD.y) * cbMtdParam._m0[33u].y) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _610 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    uint _612 = uint(int(isnan(5.0) ? _610 : (isnan(_610) ? 5.0 : min(_610, 5.0))));
    float _210[6];
    _210[0u] = 1.0;
    _210[1u] = cbMtdParam._m0[23u].w;
    _210[2u] = cbMtdParam._m0[21u].w;
    _210[3u] = cbMtdParam._m0[19u].w;
    _210[4u] = cbMtdParam._m0[18u].w;
    _210[5u] = cbMtdParam._m0[17u].w;
    float _649 = ((((_211[_520] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_207[_612] - _211[_520])) * _210[_520])) * _382) + cbMtdParam._m0[10u].x) * _446.x;
    float _650 = ((((_212[_520] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_208[_612] - _212[_520])) * _210[_520])) * _382) + cbMtdParam._m0[10u].y) * _446.y;
    float _651 = ((((_213[_520] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_209[_612] - _213[_520])) * _210[_520])) * _382) + cbMtdParam._m0[10u].z) * _446.z;
    vec4 _663 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _674 = cbMtdParam._m0[9u].x * _663.x;
    float _675 = cbMtdParam._m0[9u].y * _663.y;
    float _676 = cbMtdParam._m0[9u].z * _663.z;
    float _683 = ((_674 - _649) * _434) + _649;
    float _684 = ((_675 - _650) * _434) + _650;
    float _685 = ((_676 - _651) * _434) + _651;
    vec4 _697 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _717 = (((cbMtdParam._m0[20u].x * _697.x) - _683) * _418) + _683;
    float _718 = (((cbMtdParam._m0[20u].y * _697.y) - _684) * _418) + _684;
    float _719 = (((cbMtdParam._m0[20u].z * _697.z) - _685) * _418) + _685;
    vec4 _731 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _751 = (((cbMtdParam._m0[29u].x * _731.x) - _717) * _396) + _717;
    float _752 = (((cbMtdParam._m0[29u].y * _731.y) - _718) * _396) + _718;
    float _753 = (((cbMtdParam._m0[29u].z * _731.z) - _719) * _396) + _719;
    float _204[6];
    float _205[6];
    float _206[6];
    _204[0u] = cbMtdParam._m0[30u].x;
    _205[0u] = cbMtdParam._m0[30u].y;
    _206[0u] = cbMtdParam._m0[30u].z;
    _204[1u] = cbMtdParam._m0[28u].x;
    _205[1u] = cbMtdParam._m0[28u].y;
    _206[1u] = cbMtdParam._m0[28u].z;
    _204[2u] = cbMtdParam._m0[27u].x;
    _205[2u] = cbMtdParam._m0[27u].y;
    _206[2u] = cbMtdParam._m0[27u].z;
    _204[3u] = cbMtdParam._m0[26u].x;
    _205[3u] = cbMtdParam._m0[26u].y;
    _206[3u] = cbMtdParam._m0[26u].z;
    _204[4u] = cbMtdParam._m0[25u].x;
    _205[4u] = cbMtdParam._m0[25u].y;
    _206[4u] = cbMtdParam._m0[25u].z;
    _204[5u] = cbMtdParam._m0[24u].x;
    _205[5u] = cbMtdParam._m0[24u].y;
    _206[5u] = cbMtdParam._m0[24u].z;
    float _826 = _204[_520] * _382;
    float _827 = _205[_520] * _382;
    float _828 = _206[_520] * _382;
    float _829 = _826 + ((_310.x * 4.5) * (((_674 - _751) * _383) + _751));
    float _830 = _827 + ((_310.y * 4.5) * (((_675 - _752) * _383) + _752));
    float _831 = _828 + ((_310.z * 4.5) * (((_676 - _753) * _383) + _753));
    float _199[5];
    float _200[5];
    _199[0u] = cbMtdParam._m0[37u].w;
    _200[0u] = cbMtdParam._m0[38u].x;
    _199[1u] = cbMtdParam._m0[39u].w;
    _200[1u] = cbMtdParam._m0[40u].x;
    _199[2u] = cbMtdParam._m0[40u].y;
    _200[2u] = cbMtdParam._m0[40u].z;
    _199[3u] = cbMtdParam._m0[40u].w;
    _200[3u] = cbMtdParam._m0[41u].x;
    _199[4u] = cbMtdParam._m0[41u].y;
    _200[4u] = cbMtdParam._m0[41u].z;
    float _864 = roundEven(5.0 - _514);
    float _865 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _866 = isnan(4.0) ? _865 : (isnan(_865) ? 4.0 : min(_865, 4.0));
    float _868 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    uint _870 = uint(int(isnan(4.0) ? _868 : (isnan(_868) ? 4.0 : min(_868, 4.0))));
    float _879 = ((cbMtdParam._m0[42u].z - _200[_870]) * _434) + _200[_870];
    float _887 = ((cbMtdParam._m0[43u].x - _879) * _418) + _879;
    float _892 = ((cbMtdParam._m0[43u].z - _887) * _396) + _887;
    float _897 = ((cbMtdParam._m0[39u].z - _892) * _383) + _892;
    vec4 _913 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _915 = _913.x;
    float _916 = _913.y;
    float _918 = _913.z + _199[_870];
    vec4 _930 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _938 = (((cbMtdParam._m0[42u].y - _918) + _930.z) * _434) + _918;
    vec4 _950 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _958 = (((cbMtdParam._m0[42u].w - _938) + _950.z) * _418) + _938;
    float _964 = ((((_287 * 2.0) * _958) - _958) * cbMtdParam._m0[34u].x) + _958;
    vec4 _976 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _984 = (((_976.z + cbMtdParam._m0[43u].y) - _964) * _396) + _964;
    float _988 = (((cbMtdParam._m0[39u].y + _343.z) - _984) * _383) + _984;
    float _1019 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1023 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _1050 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[38u].w * ((_1019 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[33u].x)) + ((cbMtdParam._m0[38u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, ((((cbMtdParam._m0[38u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[39u].x * ((_1023 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[33u].x))) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _1067 = (-0.0) - ((_1023 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].w);
    float _1071 = (_1023 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].w;
    float _1072 = isnan(_1071) ? _1067 : (isnan(_1067) ? _1071 : min(_1067, _1071));
    float _4451 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    float _1073 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
    float _1099 = ((_930.x - _915) * _434) + _915;
    float _1100 = ((_930.y - _916) * _434) + _916;
    float _1105 = ((_950.x - _1099) * _418) + _1099;
    float _1106 = ((_950.y - _1100) * _418) + _1100;
    float _1111 = ((_976.x - _1105) * _396) + _1105;
    float _1112 = ((_976.y - _1106) * _396) + _1106;
    float _1121 = ((((_343.x - _1111) * _383) + _1111) * 2.0) + (-1.0);
    float _1122 = ((((_343.y - _1112) * _383) + _1112) * 2.0) + (-1.0);
    float _1123 = dot(vec2(_1121, _1122), vec2(_1121, _1122));
    float _4462 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
    float _1128 = sqrt(1.0 - (isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0))));
    float _1131 = (cbMtdParam._m0[34u].z * ((_282.x * 2.0) + (-1.0))) + _1121;
    float _1132 = (cbMtdParam._m0[34u].z * ((_282.y * 2.0) + (-1.0))) + _1122;
    float _1135 = fma(_1128, _253 * NORMAL.x, fma(_1132, _260 * TANGENT.x, (_246 * _238) * _1131));
    float _1138 = fma(_1128, _253 * NORMAL.y, fma(_1132, _260 * TANGENT.y, (_246 * _239) * _1131));
    float _1141 = fma(_1128, _253 * NORMAL.z, fma(_1132, _260 * TANGENT.z, (_246 * _240) * _1131));
    float _1145 = inversesqrt(dot(vec3(_1135, _1138, _1141), vec3(_1135, _1138, _1141)));
    float _1146 = _1145 * _1135;
    float _1147 = _1145 * _1138;
    float _1148 = _1145 * _1141;
    float _4473 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    float _1149 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
    float _4484 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4495 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _4506 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _4517 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _1153 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
    float _1169 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1189 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1199 = cbSceneParam._m0[71u].x - (_1019 / _1189);
    float _1200 = cbSceneParam._m0[71u].y - (_1023 / _1189);
    float _1201 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1189);
    float _1205 = inversesqrt(dot(vec3(_1199, _1200, _1201), vec3(_1199, _1200, _1201)));
    float _1206 = _1199 * _1205;
    float _1207 = _1200 * _1205;
    float _1208 = _1201 * _1205;
    float _1214 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1215 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1217 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1219 = _1217.w;
    float _1237 = fma(_1148, cbSceneParam._m0[5u].z, fma(_1147, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1146));
    float _1240 = fma(_1148, cbSceneParam._m0[6u].z, fma(_1147, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1146));
    float _1243 = fma(_1148, cbSceneParam._m0[7u].z, fma(_1147, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1146));
    vec4 _1245 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1256 = (((_1245.y - _1149) + (_1245.w * _1149)) * cbMtdParam._m0[3u].x) + _1149;
    uint _1269 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1270 = _1269 + 9u;
    uint _1271 = _1270 + uint(cbMatDynParam._m0[0u].w);
    float _1277 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0)))) * cbInstanceData._m0[_1271].x;
    float _1278 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0)))) * cbInstanceData._m0[_1271].y;
    float _1279 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0)))) * cbInstanceData._m0[_1271].z;
    float _4528 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
    float _1280 = isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0));
    float _4539 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
    float _1281 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
    float _4550 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
    float _1282 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
    vec4 _1283 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1288 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1299 = (((_1288.x - _1153) + (_1288.w * _1153)) * cbMtdParam._m0[3u].x) + _1153;
    float _1312 = (cbMtdParam._m0[3u].x * (((_1280 * _1219) - _1280) + _1283.x)) + _1280;
    float _1313 = (cbMtdParam._m0[3u].x * (((_1281 * _1219) - _1281) + _1283.y)) + _1281;
    float _1314 = (cbMtdParam._m0[3u].x * (((_1282 * _1219) - _1282) + _1283.z)) + _1282;
    float _1315 = 1.0 - _1299;
    float _1316 = _1315 * _1312;
    float _1317 = _1315 * _1313;
    float _1318 = _1315 * _1314;
    float _1323 = (_1312 + (-0.039999999105930328369140625)) * _1299;
    float _1324 = (_1313 + (-0.039999999105930328369140625)) * _1299;
    float _1325 = (_1314 + (-0.039999999105930328369140625)) * _1299;
    float _1326 = _1323 + 0.039999999105930328369140625;
    float _1328 = _1324 + 0.039999999105930328369140625;
    float _1329 = _1325 + 0.039999999105930328369140625;
    vec4 _1338 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1214, cbSceneParam._m0[86u].y * _1215));
    float _1341 = _1338.x * TEXCOORD_5.w;
    float _1342 = dot(vec3(_1146, _1147, _1148), vec3(_1206, _1207, _1208));
    float _1345 = _1342 * 2.0;
    float _1349 = (_1345 * _1146) - _1206;
    float _1350 = (_1345 * _1147) - _1207;
    float _1351 = (_1345 * _1148) - _1208;
    float _1355 = abs(dot(vec3(_1206, _1207, _1208), vec3(_1146, _1147, _1148)));
    float _4561 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
    float _1357 = sqrt(_1256);
    float _1368 = exp2((_1357 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1357 * 3.0));
    float _1374 = (1.0 - _1368) * ((_1357 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1375 = _1368 * _1357;
    float _1403 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1407 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1411 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1709;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1436 = fma(_1411, cbModelParam._m0[26u].z, fma(_1407, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1403));
        float _1440 = fma(_1411, cbModelParam._m0[27u].z, fma(_1407, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1403));
        float _1444 = fma(_1411, cbModelParam._m0[28u].z, fma(_1407, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1403));
        float _1468 = _1403 + _1146;
        float _1469 = _1407 + _1147;
        float _1470 = _1411 + _1148;
        float _1480 = fma(_1470, cbModelParam._m0[26u].z, fma(_1469, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1468)) - _1436;
        float _1481 = fma(_1470, cbModelParam._m0[27u].z, fma(_1469, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1468)) - _1440;
        float _1482 = fma(_1470, cbModelParam._m0[28u].z, fma(_1469, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1468)) - _1444;
        float _1486 = inversesqrt(dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482)));
        float _1498 = ((_1486 * _1480) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1436 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1499 = ((_1486 * _1481) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1440 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1500 = ((_1486 * _1482) / cbModelParam._m0[34u].z) + ((((((_1444 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1503 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1498, _1499, _1500), 0.0);
        vec4 _1510 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1498, _1499, _1500), 0.0);
        vec4 _1517 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1498, _1499, _1500), 0.0);
        vec4 _1524 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1498, _1499, _1500), 0.0);
        float _1537 = exp2((_1503.w + (-0.5)) * 20.0) * 2.0;
        float _1538 = _1537 * (_1503.x + (-0.5));
        float _1539 = _1537 * (_1503.y + (-0.5));
        float _1540 = _1537 * (_1503.z + (-0.5));
        float _1547 = exp2((_1510.w + (-0.5)) * 20.0) * 2.0;
        float _1548 = _1547 * (_1510.x + (-0.5));
        float _1549 = _1547 * (_1510.y + (-0.5));
        float _1550 = _1547 * (_1510.z + (-0.5));
        float _1557 = exp2((_1517.w + (-0.5)) * 20.0) * 2.0;
        float _1558 = _1557 * (_1517.x + (-0.5));
        float _1559 = _1557 * (_1517.y + (-0.5));
        float _1560 = _1557 * (_1517.z + (-0.5));
        float _1567 = exp2((_1524.w + (-0.5)) * 20.0) * 2.0;
        float _1568 = _1567 * (_1524.x + (-0.5));
        float _1569 = _1567 * (_1524.y + (-0.5));
        float _1570 = _1567 * (_1524.z + (-0.5));
        float _1571 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1572 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1573 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
        float _1574 = _1538 * 0.5;
        float _1575 = _1548 * 0.5;
        float _1576 = _1558 * 0.5;
        float _1577 = dot(vec3(_1574, _1575, _1576), vec3(_1574, _1575, _1576));
        float _1582 = (_1577 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1577);
        float _1591 = (dot(vec3(_1146, _1147, _1148), vec3(_1582 * _1574, _1582 * _1575, _1582 * _1576)) + 1.0) * 0.5;
        float _4587 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1601 = sqrt(((_1575 * _1575) + (_1574 * _1574)) + (_1576 * _1576)) / (_1571 + 9.9999997473787516355514526367188e-06);
        float _4598 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1602 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
        float _1603 = _1602 * 2.0;
        float _1607 = (1.0 - _1602) / (_1602 + 1.0);
        float _4609 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1608 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
        float _1617 = ((((1.0 - _1608) * (_1603 + 2.0)) * exp2(log2(isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0))) * (_1603 + 1.0))) + _1608) * _1571;
        float _1618 = _1539 * 0.5;
        float _1619 = _1549 * 0.5;
        float _1620 = _1559 * 0.5;
        float _1621 = dot(vec3(_1618, _1619, _1620), vec3(_1618, _1619, _1620));
        float _1626 = (_1621 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1621);
        float _1634 = (dot(vec3(_1146, _1147, _1148), vec3(_1626 * _1618, _1626 * _1619, _1626 * _1620)) + 1.0) * 0.5;
        float _4620 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1643 = sqrt(((_1619 * _1619) + (_1618 * _1618)) + (_1620 * _1620)) / (_1572 + 9.9999997473787516355514526367188e-06);
        float _4631 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1644 = isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0));
        float _1645 = _1644 * 2.0;
        float _1649 = (1.0 - _1644) / (_1644 + 1.0);
        float _4642 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1650 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
        float _1659 = ((((1.0 - _1650) * (_1645 + 2.0)) * exp2(log2(isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0))) * (_1645 + 1.0))) + _1650) * _1572;
        float _1660 = _1540 * 0.5;
        float _1661 = _1550 * 0.5;
        float _1662 = _1560 * 0.5;
        float _1663 = dot(vec3(_1660, _1661, _1662), vec3(_1660, _1661, _1662));
        float _1668 = (_1663 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1663);
        float _1676 = (dot(vec3(_1146, _1147, _1148), vec3(_1668 * _1660, _1668 * _1661, _1668 * _1662)) + 1.0) * 0.5;
        float _4653 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
        float _1685 = sqrt(((_1661 * _1661) + (_1660 * _1660)) + (_1662 * _1662)) / (_1573 + 9.9999997473787516355514526367188e-06);
        float _4664 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1686 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
        float _1687 = _1686 * 2.0;
        float _1691 = (1.0 - _1686) / (_1686 + 1.0);
        float _4675 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1692 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
        float _1701 = ((((1.0 - _1692) * (_1687 + 2.0)) * exp2(log2(isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0))) * (_1687 + 1.0))) + _1692) * _1573;
        _1709 = _1540;
        _1711 = _1539;
        _1712 = _1538;
        _1713 = _1550;
        _1714 = _1549;
        _1715 = _1548;
        _1716 = _1560;
        _1717 = _1559;
        _1718 = _1558;
        _1719 = _1573;
        _1720 = _1572;
        _1721 = _1571;
        _1722 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0)));
        _1723 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0)));
        _1724 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0)));
    }
    else
    {
        _1709 = _1710;
        _1711 = _1710;
        _1712 = _1710;
        _1713 = _1710;
        _1714 = _1710;
        _1715 = _1710;
        _1716 = _1710;
        _1717 = _1710;
        _1718 = _1710;
        _1719 = _1710;
        _1720 = _1710;
        _1721 = _1710;
        _1722 = 0.0;
        _1723 = 0.0;
        _1724 = 0.0;
    }
    float _2014;
    float _2015;
    float _2016;
    float _2017;
    float _2018;
    float _2019;
    float _2020;
    float _2021;
    float _2022;
    float _2023;
    float _2024;
    float _2025;
    float _2026;
    float _2027;
    float _2028;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1747 = fma(_1411, cbModelParam._m0[30u].z, fma(_1407, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1403));
        float _1751 = fma(_1411, cbModelParam._m0[31u].z, fma(_1407, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1403));
        float _1755 = fma(_1411, cbModelParam._m0[32u].z, fma(_1407, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1403));
        float _1777 = _1403 + _1146;
        float _1778 = _1407 + _1147;
        float _1779 = _1411 + _1148;
        float _1789 = fma(_1779, cbModelParam._m0[30u].z, fma(_1778, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1777)) - _1747;
        float _1790 = fma(_1779, cbModelParam._m0[31u].z, fma(_1778, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1777)) - _1751;
        float _1791 = fma(_1779, cbModelParam._m0[32u].z, fma(_1778, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1777)) - _1755;
        float _1795 = inversesqrt(dot(vec3(_1789, _1790, _1791), vec3(_1789, _1790, _1791)));
        float _1807 = ((_1795 * _1789) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1747 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1808 = ((_1795 * _1790) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1751 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1809 = ((_1795 * _1791) / cbModelParam._m0[35u].z) + ((((((_1755 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1811 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1807, _1808, _1809), 0.0);
        vec4 _1818 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1807, _1808, _1809), 0.0);
        vec4 _1825 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1807, _1808, _1809), 0.0);
        vec4 _1832 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1807, _1808, _1809), 0.0);
        float _1844 = exp2((_1811.w + (-0.5)) * 20.0) * 2.0;
        float _1845 = _1844 * (_1811.x + (-0.5));
        float _1846 = _1844 * (_1811.y + (-0.5));
        float _1847 = _1844 * (_1811.z + (-0.5));
        float _1854 = exp2((_1818.w + (-0.5)) * 20.0) * 2.0;
        float _1855 = _1854 * (_1818.x + (-0.5));
        float _1856 = _1854 * (_1818.y + (-0.5));
        float _1857 = _1854 * (_1818.z + (-0.5));
        float _1864 = exp2((_1825.w + (-0.5)) * 20.0) * 2.0;
        float _1865 = _1864 * (_1825.x + (-0.5));
        float _1866 = _1864 * (_1825.y + (-0.5));
        float _1867 = _1864 * (_1825.z + (-0.5));
        float _1874 = exp2((_1832.w + (-0.5)) * 20.0) * 2.0;
        float _1875 = _1874 * (_1832.x + (-0.5));
        float _1876 = _1874 * (_1832.y + (-0.5));
        float _1877 = _1874 * (_1832.z + (-0.5));
        float _1878 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
        float _1879 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
        float _1880 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
        float _1881 = _1845 * 0.5;
        float _1882 = _1855 * 0.5;
        float _1883 = _1865 * 0.5;
        float _1884 = dot(vec3(_1881, _1882, _1883), vec3(_1881, _1882, _1883));
        float _1889 = (_1884 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1884);
        float _1897 = (dot(vec3(_1146, _1147, _1148), vec3(_1889 * _1881, _1889 * _1882, _1889 * _1883)) + 1.0) * 0.5;
        float _4716 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _1906 = sqrt(((_1882 * _1882) + (_1881 * _1881)) + (_1883 * _1883)) / (_1878 + 9.9999997473787516355514526367188e-06);
        float _4727 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1907 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
        float _1908 = _1907 * 2.0;
        float _1912 = (1.0 - _1907) / (_1907 + 1.0);
        float _4738 = isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0));
        float _1913 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
        float _1922 = ((((1.0 - _1913) * (_1908 + 2.0)) * exp2(log2(isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0))) * (_1908 + 1.0))) + _1913) * _1878;
        float _1923 = _1846 * 0.5;
        float _1924 = _1856 * 0.5;
        float _1925 = _1866 * 0.5;
        float _1926 = dot(vec3(_1923, _1924, _1925), vec3(_1923, _1924, _1925));
        float _1931 = (_1926 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1926);
        float _1939 = (dot(vec3(_1146, _1147, _1148), vec3(_1931 * _1923, _1931 * _1924, _1931 * _1925)) + 1.0) * 0.5;
        float _4749 = isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0));
        float _1948 = sqrt(((_1924 * _1924) + (_1923 * _1923)) + (_1925 * _1925)) / (_1879 + 9.9999997473787516355514526367188e-06);
        float _4760 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0));
        float _1949 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
        float _1950 = _1949 * 2.0;
        float _1954 = (1.0 - _1949) / (_1949 + 1.0);
        float _4771 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1955 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
        float _1964 = ((((1.0 - _1955) * (_1950 + 2.0)) * exp2(log2(isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0))) * (_1950 + 1.0))) + _1955) * _1879;
        float _1965 = _1847 * 0.5;
        float _1966 = _1857 * 0.5;
        float _1967 = _1867 * 0.5;
        float _1968 = dot(vec3(_1965, _1966, _1967), vec3(_1965, _1966, _1967));
        float _1973 = (_1968 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1968);
        float _1981 = (dot(vec3(_1146, _1147, _1148), vec3(_1973 * _1965, _1973 * _1966, _1973 * _1967)) + 1.0) * 0.5;
        float _4782 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
        float _1990 = sqrt(((_1966 * _1966) + (_1965 * _1965)) + (_1967 * _1967)) / (_1880 + 9.9999997473787516355514526367188e-06);
        float _4793 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1991 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
        float _1992 = _1991 * 2.0;
        float _1996 = (1.0 - _1991) / (_1991 + 1.0);
        float _4804 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _1997 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
        float _2006 = ((((1.0 - _1997) * (_1992 + 2.0)) * exp2(log2(isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * (_1992 + 1.0))) + _1997) * _1880;
        _2014 = _1847;
        _2015 = _1846;
        _2016 = _1845;
        _2017 = _1857;
        _2018 = _1856;
        _2019 = _1855;
        _2020 = _1867;
        _2021 = _1866;
        _2022 = _1865;
        _2023 = _1880;
        _2024 = _1879;
        _2025 = _1878;
        _2026 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0)));
        _2027 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0)));
        _2028 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0)));
    }
    else
    {
        _2014 = _1710;
        _2015 = _1710;
        _2016 = _1710;
        _2017 = _1710;
        _2018 = _1710;
        _2019 = _1710;
        _2020 = _1710;
        _2021 = _1710;
        _2022 = _1710;
        _2023 = _1710;
        _2024 = _1710;
        _2025 = _1710;
        _2026 = 0.0;
        _2027 = 0.0;
        _2028 = 0.0;
    }
    float _2038 = (cbModelParam._m0[1u].x * (_2026 - _1722)) + _1722;
    float _2039 = (cbModelParam._m0[1u].x * (_2027 - _1723)) + _1723;
    float _2040 = (cbModelParam._m0[1u].x * (_2028 - _1724)) + _1724;
    float _2061 = fma(_2040, cbSceneParam._m0[89u].z, fma(_2039, cbSceneParam._m0[89u].y, _2038 * cbSceneParam._m0[89u].x));
    float _2064 = fma(_2040, cbSceneParam._m0[90u].z, fma(_2039, cbSceneParam._m0[90u].y, _2038 * cbSceneParam._m0[90u].x));
    float _2067 = fma(_2040, cbSceneParam._m0[91u].z, fma(_2039, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2038));
    float _2080 = _1349 * 0.5;
    float _2081 = _1350 * 0.5;
    float _2082 = _1351 * 0.5;
    float _2083 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_2016, _2019, _2022, _2025));
    float _2086 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_2015, _2018, _2021, _2024));
    float _2089 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_2014, _2017, _2020, _2023));
    float _2123;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2096 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_1709, _1713, _1716, _1719));
        float _2100 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_1711, _1714, _1717, _1720));
        float _2104 = dot(vec4(_2080, _2081, _2082, 1.0), vec4(_1712, _1715, _1718, _1721));
        float _2111 = dot(vec4(cbModelParam._m0[39u]), vec4(_2080, _2081, _2082, 1.0));
        _2123 = dot(vec3(isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0)), isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0)), isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2111) ? 0.0 : (isnan(0.0) ? _2111 : max(0.0, _2111))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2123 = 1.0;
    }
    float _2134;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2125 = dot(vec4(cbModelParam._m0[40u]), vec4(_2080, _2081, _2082, 1.0));
        _2134 = dot(vec3(isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0)), isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0)), isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2125) ? 0.0 : (isnan(0.0) ? _2125 : max(0.0, _2125))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2134 = 1.0;
    }
    float _2138 = (_2134 * cbModelParam._m0[1u].x) + (_2123 * (1.0 - cbModelParam._m0[1u].x));
    float _2148 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1256);
    float _2149 = isnan(_2148) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2148 : min(cbModelParam._m0[25u].z, _2148));
    float _2229;
    float _2231;
    float _2233;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2196 = fma(_1411, cbModelParam._m0[13u].z, fma(_1407, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1403)) + cbModelParam._m0[13u].w;
        float _2200 = fma(_1411, cbModelParam._m0[14u].z, fma(_1407, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1403)) + cbModelParam._m0[14u].w;
        float _2204 = fma(_1411, cbModelParam._m0[15u].z, fma(_1407, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1403)) + cbModelParam._m0[15u].w;
        float _2207 = fma(_1351, cbModelParam._m0[13u].z, fma(_1350, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1349));
        float _2210 = fma(_1351, cbModelParam._m0[14u].z, fma(_1350, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1349));
        float _2213 = fma(_1351, cbModelParam._m0[15u].z, fma(_1350, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1349));
        float _2241;
        if (_2207 > 0.0)
        {
            _2241 = abs((1.0 - _2196) / _2207);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2207 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2196 + 1.0) / _2207);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2241 = frontier_phi_14_12_ladder;
        }
        float _2412;
        if (_2210 > 0.0)
        {
            _2412 = abs((1.0 - _2200) / _2210);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2210 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2200 + 1.0) / _2210);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2412 = frontier_phi_23_19_ladder;
        }
        float _2704;
        if (_2213 > 0.0)
        {
            _2704 = abs((1.0 - _2204) / _2213);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2213 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2204 + 1.0) / _2213);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2704 = frontier_phi_35_30_ladder;
        }
        float _2706 = isnan(_2412) ? _2241 : (isnan(_2241) ? _2412 : min(_2241, _2412));
        float _2707 = isnan(_2704) ? _2706 : (isnan(_2706) ? _2704 : min(_2706, _2704));
        float _2711 = (_2707 * _2207) + _2196;
        float _2712 = (_2707 * _2210) + _2200;
        float _2713 = (_2707 * _2213) + _2204;
        float _2714 = _2707 * 9.9999997473787516355514526367188e-05;
        float _2716 = (-1.0) - _2714;
        float _2718 = _2714 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2713 > _2718) || ((_2713 < _2716) || ((_2712 > _2718) || ((_2712 < _2716) || ((_2711 < _2716) || (_2711 > _2718))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2858 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2713, cbModelParam._m0[9u].z, fma(_2712, cbModelParam._m0[9u].y, _2711 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2713, cbModelParam._m0[10u].z, fma(_2712, cbModelParam._m0[10u].y, _2711 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2713, cbModelParam._m0[11u].z, fma(_2712, cbModelParam._m0[11u].y, _2711 * cbModelParam._m0[11u].x))), _2149);
            frontier_phi_13_35_ladder = _2858.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2858.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2858.x * cbModelParam._m0[1u].y;
        }
        _2229 = frontier_phi_13_35_ladder_2;
        _2231 = frontier_phi_13_35_ladder_1;
        _2233 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2217 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1349, _1350, _1351), _2149);
        _2229 = _2217.x * cbModelParam._m0[1u].y;
        _2231 = _2217.y * cbModelParam._m0[1u].y;
        _2233 = _2217.z * cbModelParam._m0[1u].y;
    }
    float _2237 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1256);
    float _2238 = isnan(_2237) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2237 : min(cbModelParam._m0[25u].w, _2237));
    float _2327;
    float _2329;
    float _2331;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2291 = fma(_1411, cbModelParam._m0[21u].z, fma(_1407, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1403)) + cbModelParam._m0[21u].w;
        float _2295 = fma(_1411, cbModelParam._m0[22u].z, fma(_1407, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1403)) + cbModelParam._m0[22u].w;
        float _2299 = fma(_1411, cbModelParam._m0[23u].z, fma(_1407, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1403)) + cbModelParam._m0[23u].w;
        float _2302 = fma(_1351, cbModelParam._m0[21u].z, fma(_1350, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1349));
        float _2305 = fma(_1351, cbModelParam._m0[22u].z, fma(_1350, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1349));
        float _2308 = fma(_1351, cbModelParam._m0[23u].z, fma(_1350, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1349));
        float _2417;
        if (_2302 > 0.0)
        {
            _2417 = abs((1.0 - _2291) / _2302);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2302 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2291 + 1.0) / _2302);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2417 = frontier_phi_25_21_ladder;
        }
        float _2731;
        if (_2305 > 0.0)
        {
            _2731 = abs((1.0 - _2295) / _2305);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2305 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2295 + 1.0) / _2305);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2731 = frontier_phi_37_32_ladder;
        }
        float _3069;
        if (_2308 > 0.0)
        {
            _3069 = abs((1.0 - _2299) / _2308);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2308 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2299 + 1.0) / _2308);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _3069 = frontier_phi_47_44_ladder;
        }
        float _3071 = isnan(_2731) ? _2417 : (isnan(_2417) ? _2731 : min(_2417, _2731));
        float _3072 = isnan(_3069) ? _3071 : (isnan(_3071) ? _3069 : min(_3071, _3069));
        float _3076 = (_3072 * _2302) + _2291;
        float _3077 = (_3072 * _2305) + _2295;
        float _3078 = (_3072 * _2308) + _2299;
        float _3079 = _3072 * 9.9999997473787516355514526367188e-05;
        float _3080 = (-1.0) - _3079;
        float _3082 = _3079 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_3078 > _3082) || ((_3078 < _3080) || ((_3077 > _3082) || ((_3077 < _3080) || ((_3076 < _3080) || (_3076 > _3082))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3200 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3078, cbModelParam._m0[17u].z, fma(_3077, cbModelParam._m0[17u].y, _3076 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3078, cbModelParam._m0[18u].z, fma(_3077, cbModelParam._m0[18u].y, _3076 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3078, cbModelParam._m0[19u].z, fma(_3077, cbModelParam._m0[19u].y, _3076 * cbModelParam._m0[19u].x))), _2238);
            frontier_phi_22_47_ladder = _3200.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3200.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3200.x * cbModelParam._m0[1u].z;
        }
        _2327 = frontier_phi_22_47_ladder_2;
        _2329 = frontier_phi_22_47_ladder_1;
        _2331 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2311 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1349, _1350, _1351), _2238);
        _2327 = _2311.x * cbModelParam._m0[1u].z;
        _2329 = _2311.y * cbModelParam._m0[1u].z;
        _2331 = _2311.z * cbModelParam._m0[1u].z;
    }
    float _2344 = (((_1374 * _1326) + _1375) * _1341) * ((cbModelParam._m0[1u].w * (_2327 - _2229)) + _2229);
    float _2346 = (((_1374 * _1328) + _1375) * _1341) * ((cbModelParam._m0[1u].w * (_2329 - _2231)) + _2231);
    float _2348 = (((_1374 * _1329) + _1375) * _1341) * ((cbModelParam._m0[1u].w * (_2331 - _2233)) + _2233);
    float _2351 = fma(_2348, cbSceneParam._m0[89u].z, fma(_2346, cbSceneParam._m0[89u].y, _2344 * cbSceneParam._m0[89u].x));
    float _2354 = fma(_2348, cbSceneParam._m0[90u].z, fma(_2346, cbSceneParam._m0[90u].y, _2344 * cbSceneParam._m0[90u].x));
    float _2357 = fma(_2348, cbSceneParam._m0[91u].z, fma(_2346, cbSceneParam._m0[91u].y, _2344 * cbSceneParam._m0[91u].x));
    float _2391 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2395 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2399 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2403 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2404 = _2391 / _2403;
    float _2405 = _2395 / _2403;
    float _2406 = _2399 / _2403;
    float _2550;
    float _2551;
    float _2552;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2433 = ((uint(_2406 > cbSceneParam._m0[59u].y) + uint(_2406 > cbSceneParam._m0[59u].x)) + uint(_2406 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2434 = _2433 + 43u;
        uint _2441 = _2433 + 44u;
        uint _2448 = _2433 + 45u;
        uint _2456 = _2433 + 46u;
        float _2467 = fma(_2403, cbSceneParam._m0[_2434].w, fma(_2399, cbSceneParam._m0[_2434].z, fma(_2395, cbSceneParam._m0[_2434].y, _2391 * cbSceneParam._m0[_2434].x)));
        float _2471 = fma(_2403, cbSceneParam._m0[_2441].w, fma(_2399, cbSceneParam._m0[_2441].z, fma(_2395, cbSceneParam._m0[_2441].y, _2391 * cbSceneParam._m0[_2441].x)));
        float _2479 = fma(_2403, cbSceneParam._m0[_2456].w, fma(_2399, cbSceneParam._m0[_2456].z, fma(_2395, cbSceneParam._m0[_2456].y, _2391 * cbSceneParam._m0[_2456].x)));
        float _2483 = cbSceneParam._m0[33u].z * _2479;
        float _2485 = cbSceneParam._m0[33u].w * _2479;
        float _2488 = fma(_2403, cbSceneParam._m0[_2448].w, fma(_2399, cbSceneParam._m0[_2448].z, fma(_2395, cbSceneParam._m0[_2448].y, _2391 * cbSceneParam._m0[_2448].x))) / _2479;
        float _2536 = (cbSceneParam._m0[33u].x - sqrt(((_2405 * _2405) + (_2404 * _2404)) + (_2406 * _2406))) * cbSceneParam._m0[33u].y;
        float _4930 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
        float _2543 = (isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2483 + _2467) / _2479, (_2485 + _2471) / _2479), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2485 + _2467) / _2479, (_2471 - _2483) / _2479), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2467 - _2483) / _2479, (_2471 - _2485) / _2479), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2467 - _2485) / _2479, (_2483 + _2471) / _2479), _2488), 0.0)).x), vec4(0.25)));
        _2550 = 1.0 - (_2543 * cbSceneParam._m0[34u].x);
        _2551 = 1.0 - (_2543 * cbSceneParam._m0[34u].y);
        _2552 = 1.0 - (_2543 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2550 = 1.0;
        _2551 = 1.0;
        _2552 = 1.0;
    }
    float _2616;
    float _2618;
    float _2620;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2604 = fma(_2403, cbSceneParam._m0[63u].w, fma(_2399, cbSceneParam._m0[63u].z, fma(_2395, cbSceneParam._m0[63u].y, _2391 * cbSceneParam._m0[63u].x)));
        float _2605 = fma(_2403, cbSceneParam._m0[60u].w, fma(_2399, cbSceneParam._m0[60u].z, fma(_2395, cbSceneParam._m0[60u].y, _2391 * cbSceneParam._m0[60u].x))) / _2604;
        float _2606 = fma(_2403, cbSceneParam._m0[61u].w, fma(_2399, cbSceneParam._m0[61u].z, fma(_2395, cbSceneParam._m0[61u].y, _2391 * cbSceneParam._m0[61u].x))) / _2604;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2605 >= cbSceneParam._m0[64u].x) && (_2606 >= cbSceneParam._m0[64u].y)) && (_2605 <= cbSceneParam._m0[64u].z)) && (_2606 <= cbSceneParam._m0[64u].w))
        {
            float _2744 = fma(_2403, cbSceneParam._m0[62u].w, fma(_2399, cbSceneParam._m0[62u].z, fma(_2395, cbSceneParam._m0[62u].y, _2391 * cbSceneParam._m0[62u].x))) / _2604;
            float _2748 = isnan(cbSceneParam._m0[41u].w) ? _2744 : (isnan(_2744) ? cbSceneParam._m0[41u].w : max(_2744, cbSceneParam._m0[41u].w));
            float _2791 = (cbSceneParam._m0[33u].x - sqrt(((_2405 * _2405) + (_2404 * _2404)) + (_2406 * _2406))) * cbSceneParam._m0[33u].y;
            float _4946 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
            float _2798 = (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2605, cbSceneParam._m0[33u].w + _2606), _2748), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2605, _2606 - cbSceneParam._m0[33u].z), _2748), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2605 - cbSceneParam._m0[33u].z, _2606 - cbSceneParam._m0[33u].w), _2748), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2605 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2606), _2748), 0.0)).x), vec4(0.25)));
            float _2802 = 1.0 - (_2798 * cbSceneParam._m0[34u].x);
            float _2803 = 1.0 - (_2798 * cbSceneParam._m0[34u].y);
            float _2804 = 1.0 - (_2798 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2804) ? _2552 : (isnan(_2552) ? _2804 : min(_2552, _2804));
            frontier_phi_34_33_ladder_1 = isnan(_2803) ? _2551 : (isnan(_2551) ? _2803 : min(_2551, _2803));
            frontier_phi_34_33_ladder_2 = isnan(_2802) ? _2550 : (isnan(_2550) ? _2802 : min(_2550, _2802));
        }
        else
        {
            frontier_phi_34_33_ladder = _2552;
            frontier_phi_34_33_ladder_1 = _2551;
            frontier_phi_34_33_ladder_2 = _2550;
        }
        _2616 = frontier_phi_34_33_ladder_2;
        _2618 = frontier_phi_34_33_ladder_1;
        _2620 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2616 = _2550;
        _2618 = _2551;
        _2620 = _2552;
    }
    uvec4 _2625 = floatBitsToUint(cbInstanceData._m0[_1269 + 5u]);
    uint _2627 = _2625.x * 14u;
    uint _2628 = _2627 + 13u;
    float _2635 = _1341 + (-1.0);
    float _2640 = (cbLight._m0[_2628].x * _2635) + 1.0;
    float _2641 = (cbLight._m0[_2628].y * _2635) + 1.0;
    float _2642 = (cbLight._m0[_2628].z * _2635) + 1.0;
    float _2643 = (cbLight._m0[_2628].w * _2635) + 1.0;
    uint _2644 = _2627 + 5u;
    float _2650 = isnan(1.0) ? _2641 : (isnan(_2641) ? 1.0 : min(_2641, 1.0));
    uint _2654 = _2627 + 4u;
    float _2663 = isnan(1.0) ? _2640 : (isnan(_2640) ? 1.0 : min(_2640, 1.0));
    uint _2667 = _2627 | 1u;
    float _2678 = dot(vec3(cbLight._m0[_2627].xyz), vec3(_1146, _1147, _1148));
    float _2681 = dot(vec3(cbLight._m0[_2667].xyz), vec3(_1146, _1147, _1148));
    float _4982 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
    float _4993 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
    float _2686 = (isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0))) * 0.3183098733425140380859375;
    float _2688 = (isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0))) * 0.3183098733425140380859375;
    float _2695 = ((cbLight._m0[_2644].x * _2650) * _2688) + (((cbLight._m0[_2654].x * _2616) * _2663) * _2686);
    float _2696 = ((_2650 * cbLight._m0[_2644].y) * _2688) + (((cbLight._m0[_2654].y * _2618) * _2663) * _2686);
    float _2697 = ((_2650 * cbLight._m0[_2644].z) * _2688) + (((cbLight._m0[_2654].z * _2620) * _2663) * _2686);
    uvec4 _2701 = floatBitsToUint(cbLight._m0[_2627 + 12u]);
    bool _2703 = _2701.x == 0u;
    float _2805;
    float _2807;
    float _2809;
    if (_2703)
    {
        _2805 = _2695;
        _2807 = _2696;
        _2809 = _2697;
    }
    else
    {
        uint _2813 = _2627 + 6u;
        float _2829 = (dot(vec3(cbLight._m0[_2627 + 2u].xyz), vec3(_1146, _1147, _1148)) * 0.5) + 0.5;
        float _2830 = _2829 * _2829;
        float _5004 = isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : max(_2830, 0.0));
        float _2831 = isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0));
        float _2832 = isnan(1.0) ? _2642 : (isnan(_2642) ? 1.0 : min(_2642, 1.0));
        _2805 = (((cbLight._m0[_2813].x * 0.3183098733425140380859375) * _2831) * _2832) + _2695;
        _2807 = (((cbLight._m0[_2813].y * 0.3183098733425140380859375) * _2831) * _2832) + _2696;
        _2809 = (((cbLight._m0[_2813].z * 0.3183098733425140380859375) * _2831) * _2832) + _2697;
    }
    bool _2812 = _2701.y == 0u;
    float _2867;
    float _2869;
    float _2871;
    if (_2812)
    {
        _2867 = _2805;
        _2869 = _2807;
        _2871 = _2809;
    }
    else
    {
        uint _3040 = _2627 + 7u;
        float _3056 = (dot(vec3(cbLight._m0[_2627 + 3u].xyz), vec3(_1146, _1147, _1148)) * 0.5) + 0.5;
        float _3057 = _3056 * _3056;
        float _5020 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
        float _3058 = isnan(1.0) ? _5020 : (isnan(_5020) ? 1.0 : min(_5020, 1.0));
        float _3059 = isnan(1.0) ? _2643 : (isnan(_2643) ? 1.0 : min(_2643, 1.0));
        _2867 = (((cbLight._m0[_3040].x * 0.3183098733425140380859375) * _3058) * _3059) + _2805;
        _2869 = (((cbLight._m0[_3040].y * 0.3183098733425140380859375) * _3058) * _3059) + _2807;
        _2871 = (((cbLight._m0[_3040].z * 0.3183098733425140380859375) * _3058) * _3059) + _2809;
    }
    uint _2874 = _2627 + 8u;
    float _2887 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2627].w)) * _1256) * 0.949999988079071044921875);
    float _2888 = _2887 * _2887;
    float _2889 = cbLight._m0[_2627].x + _1206;
    float _2890 = cbLight._m0[_2627].y + _1207;
    float _2891 = cbLight._m0[_2627].z + _1208;
    float _2895 = inversesqrt(dot(vec3(_2889, _2890, _2891), vec3(_2889, _2890, _2891)));
    float _2896 = _2895 * _2889;
    float _2897 = _2895 * _2890;
    float _2898 = _2895 * _2891;
    float _2899 = dot(vec3(_1146, _1147, _1148), vec3(cbLight._m0[_2627].xyz));
    float _5036 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
    float _2902 = isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0));
    float _5047 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    float _2903 = isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0));
    float _2904 = dot(vec3(_1146, _1147, _1148), vec3(_2896, _2897, _2898));
    float _5058 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
    float _2907 = isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0));
    float _2908 = dot(vec3(cbLight._m0[_2627].xyz), vec3(_2896, _2897, _2898));
    float _5069 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
    float _2912 = _2888 * _2888;
    float _2916 = ((_2907 * _2907) * (_2912 + (-1.0))) + 1.0;
    float _2924 = exp2(log2(1.0 - (isnan(1.0) ? _5069 : (isnan(_5069) ? 1.0 : min(_5069, 1.0)))) * 5.0);
    float _2925 = 0.959999978542327880859375 - _1323;
    float _2927 = 0.959999978542327880859375 - _1324;
    float _2928 = 0.959999978542327880859375 - _1325;
    float _2935 = 1.0 - _2888;
    float _2946 = (0.5 / (((_2903 * ((_2902 * _2935) + _2888)) + 9.9999999392252902907785028219223e-09) + (((_2903 * _2935) + _2888) * _2902))) * _2902;
    float _5080 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
    float _2948 = (isnan(1.0) ? _5080 : (isnan(_5080) ? 1.0 : min(_5080, 1.0))) * (_2912 / ((_2916 * _2916) * 3.141590118408203125));
    uint _2962 = _2627 + 9u;
    float _2973 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2667].w)) * _1256) * 0.949999988079071044921875);
    float _2974 = _2973 * _2973;
    float _2975 = cbLight._m0[_2667].x + _1206;
    float _2976 = cbLight._m0[_2667].y + _1207;
    float _2977 = cbLight._m0[_2667].z + _1208;
    float _2981 = inversesqrt(dot(vec3(_2975, _2976, _2977), vec3(_2975, _2976, _2977)));
    float _2982 = _2981 * _2975;
    float _2983 = _2981 * _2976;
    float _2984 = _2981 * _2977;
    float _2985 = dot(vec3(_1146, _1147, _1148), vec3(cbLight._m0[_2667].xyz));
    float _5091 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
    float _2988 = isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0));
    float _2989 = dot(vec3(_1146, _1147, _1148), vec3(_2982, _2983, _2984));
    float _5102 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
    float _2992 = isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0));
    float _2993 = dot(vec3(cbLight._m0[_2667].xyz), vec3(_2982, _2983, _2984));
    float _5113 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
    float _2997 = _2974 * _2974;
    float _3001 = ((_2992 * _2992) * (_2997 + (-1.0))) + 1.0;
    float _3008 = exp2(log2(1.0 - (isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0)))) * 5.0);
    float _3015 = 1.0 - _2974;
    float _3025 = (0.5 / (((_2903 * ((_2988 * _3015) + _2974)) + 9.9999999392252902907785028219223e-09) + (((_2903 * _3015) + _2974) * _2988))) * _2988;
    float _5124 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
    float _3027 = (isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0))) * (_2997 / ((_3001 * _3001) * 3.141590118408203125));
    float _3037 = (((((_3008 * _2925) + _1326) * cbLight._m0[_2962].x) * _3027) * _2650) + ((((cbLight._m0[_2874].x * _2616) * ((_2924 * _2925) + _1326)) * _2948) * _2663);
    float _3038 = (((((_3008 * _2927) + _1328) * cbLight._m0[_2962].y) * _3027) * _2650) + ((((cbLight._m0[_2874].y * _2618) * ((_2924 * _2927) + _1328)) * _2948) * _2663);
    float _3039 = (((((_3008 * _2928) + _1329) * cbLight._m0[_2962].z) * _3027) * _2650) + ((((cbLight._m0[_2874].z * _2620) * ((_2924 * _2928) + _1329)) * _2948) * _2663);
    float _3095;
    float _3097;
    float _3099;
    if (_2703)
    {
        _3095 = _3037;
        _3097 = _3038;
        _3099 = _3039;
    }
    else
    {
        uint _3101 = _2627 + 2u;
        uint _3105 = _2627 + 10u;
        float _3119 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3101].w)) * _1256) * 0.949999988079071044921875);
        float _3120 = _3119 * _3119;
        float _3121 = cbLight._m0[_3101].x + _1206;
        float _3122 = cbLight._m0[_3101].y + _1207;
        float _3123 = cbLight._m0[_3101].z + _1208;
        float _3127 = inversesqrt(dot(vec3(_3121, _3122, _3123), vec3(_3121, _3122, _3123)));
        float _3128 = _3127 * _3121;
        float _3129 = _3127 * _3122;
        float _3130 = _3127 * _3123;
        float _3131 = dot(vec3(_1146, _1147, _1148), vec3(cbLight._m0[_3101].xyz));
        float _5135 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0));
        float _3134 = isnan(1.0) ? _5135 : (isnan(_5135) ? 1.0 : min(_5135, 1.0));
        float _3135 = dot(vec3(_1146, _1147, _1148), vec3(_3128, _3129, _3130));
        float _5146 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
        float _3138 = isnan(1.0) ? _5146 : (isnan(_5146) ? 1.0 : min(_5146, 1.0));
        float _3139 = dot(vec3(cbLight._m0[_3101].xyz), vec3(_3128, _3129, _3130));
        float _5157 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0));
        float _3143 = _3120 * _3120;
        float _3147 = ((_3138 * _3138) * (_3143 + (-1.0))) + 1.0;
        float _3154 = exp2(log2(1.0 - (isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0)))) * 5.0);
        float _3161 = 1.0 - _3120;
        float _3171 = (0.5 / (((_2903 * ((_3134 * _3161) + _3120)) + 9.9999999392252902907785028219223e-09) + (((_2903 * _3161) + _3120) * _3134))) * _3134;
        float _5168 = isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0));
        float _3173 = (isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0))) * (_3143 / ((_3147 * _3147) * 3.141590118408203125));
        float _3174 = isnan(1.0) ? _2642 : (isnan(_2642) ? 1.0 : min(_2642, 1.0));
        _3095 = (((((_3154 * _2925) + _1326) * cbLight._m0[_3105].x) * _3173) * _3174) + _3037;
        _3097 = (((((_3154 * _2927) + _1328) * cbLight._m0[_3105].y) * _3173) * _3174) + _3038;
        _3099 = (((((_3154 * _2928) + _1329) * cbLight._m0[_3105].z) * _3173) * _3174) + _3039;
    }
    float _3205;
    float _3207;
    float _3209;
    if (_2812)
    {
        _3205 = _3095;
        _3207 = _3097;
        _3209 = _3099;
    }
    else
    {
        uint _3216 = _2627 + 3u;
        uint _3220 = _2627 + 11u;
        float _3234 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3216].w)) * _1256) * 0.949999988079071044921875);
        float _3235 = _3234 * _3234;
        float _3236 = cbLight._m0[_3216].x + _1206;
        float _3237 = cbLight._m0[_3216].y + _1207;
        float _3238 = cbLight._m0[_3216].z + _1208;
        float _3242 = inversesqrt(dot(vec3(_3236, _3237, _3238), vec3(_3236, _3237, _3238)));
        float _3243 = _3242 * _3236;
        float _3244 = _3242 * _3237;
        float _3245 = _3242 * _3238;
        float _3246 = dot(vec3(_1146, _1147, _1148), vec3(cbLight._m0[_3216].xyz));
        float _5184 = isnan(0.0) ? _3246 : (isnan(_3246) ? 0.0 : max(_3246, 0.0));
        float _3249 = isnan(1.0) ? _5184 : (isnan(_5184) ? 1.0 : min(_5184, 1.0));
        float _3250 = dot(vec3(_1146, _1147, _1148), vec3(_3243, _3244, _3245));
        float _5195 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
        float _3253 = isnan(1.0) ? _5195 : (isnan(_5195) ? 1.0 : min(_5195, 1.0));
        float _3254 = dot(vec3(cbLight._m0[_3216].xyz), vec3(_3243, _3244, _3245));
        float _5206 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0));
        float _3258 = _3235 * _3235;
        float _3262 = ((_3253 * _3253) * (_3258 + (-1.0))) + 1.0;
        float _3269 = exp2(log2(1.0 - (isnan(1.0) ? _5206 : (isnan(_5206) ? 1.0 : min(_5206, 1.0)))) * 5.0);
        float _3276 = 1.0 - _3235;
        float _3286 = (0.5 / (((_2903 * ((_3249 * _3276) + _3235)) + 9.9999999392252902907785028219223e-09) + (((_2903 * _3276) + _3235) * _3249))) * _3249;
        float _5217 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
        float _3288 = (isnan(1.0) ? _5217 : (isnan(_5217) ? 1.0 : min(_5217, 1.0))) * (_3258 / ((_3262 * _3262) * 3.141590118408203125));
        float _3289 = isnan(1.0) ? _2643 : (isnan(_2643) ? 1.0 : min(_2643, 1.0));
        _3205 = (((((_3269 * _2925) + _1326) * cbLight._m0[_3220].x) * _3288) * _3289) + _3095;
        _3207 = (((((_3269 * _2927) + _1328) * cbLight._m0[_3220].y) * _3288) * _3289) + _3097;
        _3209 = (((((_3269 * _2928) + _1329) * cbLight._m0[_3220].z) * _3288) * _3289) + _3099;
    }
    float _3355;
    float _3357;
    float _3359;
    float _3361;
    float _3363;
    float _3365;
    if (_2625.y == 0u)
    {
        uvec4 _3310 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3311 = _3310.x;
        uint _3322 = uint((float(_3310.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1215) / _3311))) + floor(float(uint(cbSceneParam._m0[85u].x * _1214) / _3311)));
        float _3332 = (log2(_2406 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3333 = isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0));
        uint _3336 = uint(isnan(14.0) ? _3333 : (isnan(_3333) ? 14.0 : min(_3333, 14.0)));
        uvec4 _3341 = texelFetch(g_lightClusterGridBuffer, int(((_3336 << 2u) + (_3322 << 6u)) >> 2u));
        uint _3342 = _3341.x;
        uint _3343 = _3310.z;
        float _3451;
        float _3453;
        float _3455;
        float _3457;
        float _3459;
        float _3461;
        if (((((1u << ((_3343 >> 4u) & 15u)) + 4294967295u) & _3342) == 0u) || ((_3343 & 240u) == 0u))
        {
            _3451 = 0.0;
            _3453 = 0.0;
            _3455 = 0.0;
            _3457 = 0.0;
            _3459 = 0.0;
            _3461 = 0.0;
        }
        else
        {
            float _3452;
            float _3454;
            float _3456;
            float _3458;
            float _3460;
            float _3462;
            float _3603 = 0.0;
            float _3604 = 0.0;
            float _3605 = 0.0;
            float _3606 = 0.0;
            float _3607 = 0.0;
            float _3608 = 0.0;
            uint _3609 = 0u;
            uint _3618;
            bool _3619;
            for (;;)
            {
                _3618 = texelFetch(g_lightClassification, int((((_3336 << 5u) + (_3322 << 9u)) + (_3609 << 2u)) >> 2u)).x;
                _3619 = _3618 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3619)
                {
                    frontier_phi_66_pred = _3608;
                    frontier_phi_66_pred_1 = _3607;
                    frontier_phi_66_pred_2 = _3606;
                    frontier_phi_66_pred_3 = _3605;
                    frontier_phi_66_pred_4 = _3604;
                    frontier_phi_66_pred_5 = _3603;
                }
                else
                {
                    float _3727;
                    float _3728;
                    float _3729;
                    float _3730;
                    float _3731;
                    float _3732;
                    uint _3733;
                    _3727 = _3603;
                    _3728 = _3604;
                    _3729 = _3605;
                    _3730 = _3606;
                    _3731 = _3607;
                    _3732 = _3608;
                    _3733 = _3618;
                    float _3659;
                    float _3660;
                    float _3661;
                    float _3662;
                    float _3663;
                    float _3664;
                    for (;;)
                    {
                        uint _3737 = uint(findLSB(_3733)) + (_3609 << 5u);
                        uint _3734 = (_3733 + 4294967295u) & _3733;
                        uint _3739 = _3737 * 48u;
                        vec4 _3753 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3739)).x, texelFetch(g_PointLightRenderingBuffer, int(_3739 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3739 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3739 + 3u)).x));
                        uint _3759 = (_3737 * 48u) + 4u;
                        vec4 _3772 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3759)).x, texelFetch(g_PointLightRenderingBuffer, int(_3759 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3759 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3759 + 3u)).x));
                        uint _3778 = (_3737 * 48u) + 8u;
                        vec3 _3789 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3778)).x, texelFetch(g_PointLightRenderingBuffer, int(_3778 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3778 + 2u)).x));
                        float _3793 = _3753.x - _2404;
                        float _3794 = _3753.y - _2405;
                        float _3795 = _3753.z - _2406;
                        float _3796 = dot(vec3(_3793, _3794, _3795), vec3(_3793, _3794, _3795));
                        float _3799 = inversesqrt(_3796);
                        float _3800 = _3799 * _3793;
                        float _3801 = _3799 * _3794;
                        float _3802 = _3799 * _3795;
                        float _3803 = dot(vec3(_1237, _1240, _1243), vec3(_3800, _3801, _3802));
                        float _3808 = 1.0 - (_3796 * _3753.w);
                        float _5243 = isnan(0.0) ? _3808 : (isnan(_3808) ? 0.0 : max(_3808, 0.0));
                        float _3809 = isnan(1.0) ? _5243 : (isnan(_5243) ? 1.0 : min(_5243, 1.0));
                        float _3810 = sqrt(_3796) * _3772.w;
                        float _3813 = 1.39999997615814208984375 / (_3810 + 1.39999997615814208984375);
                        float _3814 = _3813 * _3813;
                        float _3817 = ((1.0 - _3814) * _3803) + _3814;
                        float _3820 = _3810 * _3810;
                        float _3824 = ((isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0))) * _3809) / ((_3820 * 0.699999988079071044921875) + 1.0);
                        float _3828 = (-0.0) - _2404;
                        float _3829 = (-0.0) - _2405;
                        float _3830 = (-0.0) - _2406;
                        float _3834 = inversesqrt(dot(vec3(_3828, _3829, _3830), vec3(_3828, _3829, _3830)));
                        float _3835 = _3834 * _3828;
                        float _3836 = _3834 * _3829;
                        float _3837 = _3834 * _3830;
                        float _3844 = exp2(log2(1.0 / ((_3820 * 3.5) + 5.0)) * 0.25);
                        float _3845 = 1.0 - _1357;
                        float _3852 = sqrt(1.0 - ((1.0 - (_3845 * _3845)) * (1.0 - (_3844 * _3844))));
                        float _3853 = _3852 * _3852;
                        float _3854 = _3853 * _3853;
                        float _3855 = _3835 + _3800;
                        float _3856 = _3836 + _3801;
                        float _3857 = _3837 + _3802;
                        float _3861 = inversesqrt(dot(vec3(_3855, _3856, _3857), vec3(_3855, _3856, _3857)));
                        float _3865 = dot(vec3(_1237, _1240, _1243), vec3(_3835, _3836, _3837));
                        float _5259 = isnan(0.0) ? _3865 : (isnan(_3865) ? 0.0 : max(_3865, 0.0));
                        float _3868 = isnan(1.0) ? _5259 : (isnan(_5259) ? 1.0 : min(_5259, 1.0));
                        float _3869 = dot(vec3(_1237, _1240, _1243), vec3(_3861 * _3855, _3861 * _3856, _3861 * _3857));
                        float _5270 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                        float _3872 = isnan(1.0) ? _5270 : (isnan(_5270) ? 1.0 : min(_5270, 1.0));
                        float _3876 = ((_3872 * _3872) * (_3854 + (-1.0))) + 1.0;
                        float _3877 = _3813 * _3853;
                        float _3878 = _3877 * _3877;
                        float _3881 = ((1.0 - _3878) * _3803) + _3878;
                        float _5281 = isnan(0.0) ? _3881 : (isnan(_3881) ? 0.0 : max(_3881, 0.0));
                        float _3882 = isnan(1.0) ? _5281 : (isnan(_5281) ? 1.0 : min(_5281, 1.0));
                        float _3883 = 1.0 - _3853;
                        float _3893 = (0.5 / (((_3882 * ((_3868 * _3883) + _3853)) + 9.9999999392252902907785028219223e-09) + (((_3882 * _3883) + _3853) * _3868))) * _3882;
                        float _5292 = isnan(0.0) ? _3893 : (isnan(_3893) ? 0.0 : max(_3893, 0.0));
                        float _3904 = (((_3854 * 3.1415927410125732421875) * (isnan(1.0) ? _5292 : (isnan(_5292) ? 1.0 : min(_5292, 1.0)))) / ((_3876 * _3876) * ((_3820 * 2.1991131305694580078125) + 3.141590118408203125))) * _3809;
                        _3662 = (_3824 * _3772.x) + _3730;
                        _3663 = (_3824 * _3772.y) + _3731;
                        _3664 = (_3824 * _3772.z) + _3732;
                        _3659 = (_3904 * _3789.x) + _3727;
                        _3660 = (_3904 * _3789.y) + _3728;
                        _3661 = (_3904 * _3789.z) + _3729;
                        if (_3734 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3727 = _3659;
                            _3728 = _3660;
                            _3729 = _3661;
                            _3730 = _3662;
                            _3731 = _3663;
                            _3732 = _3664;
                            _3733 = _3734;
                        }
                    }
                    frontier_phi_66_pred = _3664;
                    frontier_phi_66_pred_1 = _3663;
                    frontier_phi_66_pred_2 = _3662;
                    frontier_phi_66_pred_3 = _3661;
                    frontier_phi_66_pred_4 = _3660;
                    frontier_phi_66_pred_5 = _3659;
                }
                _3462 = frontier_phi_66_pred;
                _3460 = frontier_phi_66_pred_1;
                _3458 = frontier_phi_66_pred_2;
                _3456 = frontier_phi_66_pred_3;
                _3454 = frontier_phi_66_pred_4;
                _3452 = frontier_phi_66_pred_5;
                uint _3610 = _3609 + 1u;
                if (_3610 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3603 = _3452;
                    _3604 = _3454;
                    _3605 = _3456;
                    _3606 = _3458;
                    _3607 = _3460;
                    _3608 = _3462;
                    _3609 = _3610;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3451 = _3452;
            _3453 = _3454;
            _3455 = _3456;
            _3457 = _3458;
            _3459 = _3460;
            _3461 = _3462;
        }
        uvec4 _3465 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3466 = _3465.z;
        uint _3468 = (_3466 >> 8u) & 15u;
        float _3571;
        float _3573;
        float _3575;
        float _3577;
        float _3579;
        float _3581;
        if (((4294967295u << _3468) & _3342) == 0u)
        {
            _3571 = _3451;
            _3573 = _3453;
            _3575 = _3455;
            _3577 = _3457;
            _3579 = _3459;
            _3581 = _3461;
        }
        else
        {
            float _3596 = inversesqrt(dot(vec3(_2404, _2405, _2406), vec3(_2404, _2405, _2406)));
            float _3597 = _3596 * _2404;
            float _3598 = _3596 * _2405;
            float _3599 = _3596 * _2406;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3468 < ((_3466 >> 12u) & 15u))
            {
                float _3572;
                float _3574;
                float _3576;
                float _3578;
                float _3580;
                float _3582;
                float _3710 = _3451;
                float _3711 = _3453;
                float _3712 = _3455;
                float _3713 = _3457;
                float _3714 = _3459;
                float _3715 = _3461;
                uint _3716 = _3468;
                uint _3725;
                bool _3726;
                for (;;)
                {
                    _3725 = texelFetch(g_lightClassification, int((((_3336 << 5u) + (_3322 << 9u)) + (_3716 << 2u)) >> 2u)).x;
                    _3726 = _3725 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3726)
                    {
                        frontier_phi_72_pred = _3715;
                        frontier_phi_72_pred_1 = _3714;
                        frontier_phi_72_pred_2 = _3713;
                        frontier_phi_72_pred_3 = _3712;
                        frontier_phi_72_pred_4 = _3711;
                        frontier_phi_72_pred_5 = _3710;
                    }
                    else
                    {
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3914;
                        float _4202;
                        float _4203;
                        float _4204;
                        float _4205;
                        float _4206;
                        float _4207;
                        float _3922 = _3710;
                        float _3923 = _3711;
                        float _3924 = _3712;
                        float _3925 = _3713;
                        float _3926 = _3714;
                        float _3927 = _3715;
                        uint _3928 = _3725;
                        uint _3929;
                        vec4 _3954;
                        float _3955;
                        vec4 _3970;
                        vec3 _3982;
                        vec4 _3997;
                        vec4 _4012;
                        float _4058;
                        bool _4059;
                        for (;;)
                        {
                            uint _3939 = ((_3716 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3928));
                            _3929 = (_3928 + 4294967295u) & _3928;
                            uint _3941 = _3939 * 40u;
                            _3954 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3941)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 3u)).x));
                            _3955 = _3954.w;
                            uint _3957 = (_3939 * 40u) + 4u;
                            _3970 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3957)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 3u)).x));
                            uint _3972 = (_3939 * 40u) + 8u;
                            _3982 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3972)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3972 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3972 + 2u)).x));
                            uint _3984 = (_3939 * 40u) + 16u;
                            _3997 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3984)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 3u)).x));
                            uint _3999 = (_3939 * 40u) + 20u;
                            _4012 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3999)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 3u)).x));
                            uint _4014 = (_3939 * 40u) + 24u;
                            vec4 _4027 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4014)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 3u)).x));
                            uint _4033 = (_3939 * 40u) + 28u;
                            vec4 _4046 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4033)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 3u)).x));
                            _4058 = fma(_2406, _4046.z, fma(_2405, _4046.y, _4046.x * _2404)) + _4046.w;
                            _4059 = !((fma(_2406, _4027.z, fma(_2405, _4027.y, _4027.x * _2404)) + _4027.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_4059)
                            {
                                float _4086 = _3954.x - _2404;
                                float _4087 = _3954.y - _2405;
                                float _4088 = _3954.z - _2406;
                                float _4089 = dot(vec3(_4086, _4087, _4088), vec3(_4086, _4087, _4088));
                                float _4092 = inversesqrt(_4089);
                                float _4093 = _4092 * _4086;
                                float _4094 = _4092 * _4087;
                                float _4095 = _4092 * _4088;
                                float _4099 = 1.0 - (_4089 / (_3955 * _3955));
                                float _5303 = isnan(0.0) ? _4099 : (isnan(_4099) ? 0.0 : max(_4099, 0.0));
                                float _4100 = isnan(1.0) ? _5303 : (isnan(_5303) ? 1.0 : min(_5303, 1.0));
                                float _4104 = sqrt(_4089) * _3970.w;
                                float _4106 = 1.39999997615814208984375 / (_4104 + 1.39999997615814208984375);
                                float _4107 = _4106 * _4106;
                                float _4110 = ((1.0 - _4107) * dot(vec3(_4093, _4094, _4095), vec3(_1237, _1240, _1243))) + _4107;
                                float _4113 = _4104 * _4104;
                                float _4117 = (fma(_2406, _3997.z, fma(_2405, _3997.y, _3997.x * _2404)) + _3997.w) / _4058;
                                float _4118 = (fma(_2406, _4012.z, fma(_2405, _4012.y, _4012.x * _2404)) + _4012.w) / _4058;
                                float _4122 = 1.0 - dot(vec2(_4117, _4118), vec2(_4117, _4118));
                                float _5319 = isnan(0.0) ? _4122 : (isnan(_4122) ? 0.0 : max(_4122, 0.0));
                                float _4123 = isnan(1.0) ? _5319 : (isnan(_5319) ? 1.0 : min(_5319, 1.0));
                                float _4124 = _4123 * (((isnan(0.0) ? _4110 : (isnan(_4110) ? 0.0 : max(_4110, 0.0))) * _4100) / ((_4113 * 0.699999988079071044921875) + 1.0));
                                float _4136 = exp2(log2(1.0 / ((_4113 * 3.5) + 5.0)) * 0.25);
                                float _4137 = 1.0 - _1357;
                                float _4144 = sqrt(1.0 - ((1.0 - (_4137 * _4137)) * (1.0 - (_4136 * _4136))));
                                float _4145 = _4144 * _4144;
                                float _4146 = _4145 * _4145;
                                float _4147 = _4093 - _3597;
                                float _4148 = _4094 - _3598;
                                float _4149 = _4095 - _3599;
                                float _4153 = inversesqrt(dot(vec3(_4147, _4148, _4149), vec3(_4147, _4148, _4149)));
                                float _4157 = dot(vec3(_1237, _1240, _1243), vec3((-0.0) - _3597, (-0.0) - _3598, (-0.0) - _3599));
                                float _5330 = isnan(0.0) ? _4157 : (isnan(_4157) ? 0.0 : max(_4157, 0.0));
                                float _4160 = isnan(1.0) ? _5330 : (isnan(_5330) ? 1.0 : min(_5330, 1.0));
                                float _4161 = dot(vec3(_1237, _1240, _1243), vec3(_4153 * _4147, _4153 * _4148, _4153 * _4149));
                                float _5341 = isnan(0.0) ? _4161 : (isnan(_4161) ? 0.0 : max(_4161, 0.0));
                                float _4164 = isnan(1.0) ? _5341 : (isnan(_5341) ? 1.0 : min(_5341, 1.0));
                                float _4168 = ((_4164 * _4164) * (_4146 + (-1.0))) + 1.0;
                                float _4169 = _4106 * _4145;
                                float _4170 = _4169 * _4169;
                                float _4176 = ((1.0 - _4170) * dot(vec3(_1237, _1240, _1243), vec3(_4093, _4094, _4095))) + _4170;
                                float _5352 = isnan(0.0) ? _4176 : (isnan(_4176) ? 0.0 : max(_4176, 0.0));
                                float _4177 = isnan(1.0) ? _5352 : (isnan(_5352) ? 1.0 : min(_5352, 1.0));
                                float _4178 = 1.0 - _4145;
                                float _4188 = (0.5 / (((_4177 * ((_4160 * _4178) + _4145)) + 9.9999999392252902907785028219223e-09) + (((_4177 * _4178) + _4145) * _4160))) * _4177;
                                float _5363 = isnan(0.0) ? _4188 : (isnan(_4188) ? 0.0 : max(_4188, 0.0));
                                float _4198 = (_4123 * _4100) * (((_4146 * 3.1415927410125732421875) * (isnan(1.0) ? _5363 : (isnan(_5363) ? 1.0 : min(_5363, 1.0)))) / ((_4168 * _4168) * ((_4113 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4124 * _3970.y;
                                frontier_phi_78_pred_1 = _4124 * _3970.x;
                                frontier_phi_78_pred_2 = _4198 * _3982.z;
                                frontier_phi_78_pred_3 = _4198 * _3982.y;
                                frontier_phi_78_pred_4 = _4198 * _3982.x;
                                frontier_phi_78_pred_5 = _4124 * _3970.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4206 = frontier_phi_78_pred;
                            _4205 = frontier_phi_78_pred_1;
                            _4204 = frontier_phi_78_pred_2;
                            _4203 = frontier_phi_78_pred_3;
                            _4202 = frontier_phi_78_pred_4;
                            _4207 = frontier_phi_78_pred_5;
                            _3912 = _4205 + _3925;
                            _3913 = _4206 + _3926;
                            _3914 = _4207 + _3927;
                            _3909 = _4202 + _3922;
                            _3910 = _4203 + _3923;
                            _3911 = _4204 + _3924;
                            if (_3929 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3922 = _3909;
                                _3923 = _3910;
                                _3924 = _3911;
                                _3925 = _3912;
                                _3926 = _3913;
                                _3927 = _3914;
                                _3928 = _3929;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3914;
                        frontier_phi_72_pred_1 = _3913;
                        frontier_phi_72_pred_2 = _3912;
                        frontier_phi_72_pred_3 = _3911;
                        frontier_phi_72_pred_4 = _3910;
                        frontier_phi_72_pred_5 = _3909;
                    }
                    _3582 = frontier_phi_72_pred;
                    _3580 = frontier_phi_72_pred_1;
                    _3578 = frontier_phi_72_pred_2;
                    _3576 = frontier_phi_72_pred_3;
                    _3574 = frontier_phi_72_pred_4;
                    _3572 = frontier_phi_72_pred_5;
                    uint _3717 = _3716 + 1u;
                    if (_3717 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3710 = _3572;
                        _3711 = _3574;
                        _3712 = _3576;
                        _3713 = _3578;
                        _3714 = _3580;
                        _3715 = _3582;
                        _3716 = _3717;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3582;
                frontier_phi_60_61_ladder_1 = _3580;
                frontier_phi_60_61_ladder_2 = _3576;
                frontier_phi_60_61_ladder_3 = _3574;
                frontier_phi_60_61_ladder_4 = _3572;
                frontier_phi_60_61_ladder_5 = _3578;
            }
            else
            {
                frontier_phi_60_61_ladder = _3461;
                frontier_phi_60_61_ladder_1 = _3459;
                frontier_phi_60_61_ladder_2 = _3455;
                frontier_phi_60_61_ladder_3 = _3453;
                frontier_phi_60_61_ladder_4 = _3451;
                frontier_phi_60_61_ladder_5 = _3457;
            }
            _3571 = frontier_phi_60_61_ladder_4;
            _3573 = frontier_phi_60_61_ladder_3;
            _3575 = frontier_phi_60_61_ladder_2;
            _3577 = frontier_phi_60_61_ladder_5;
            _3579 = frontier_phi_60_61_ladder_1;
            _3581 = frontier_phi_60_61_ladder;
        }
        float _3586 = isnan(1.0) ? _1341 : (isnan(_1341) ? 1.0 : min(_1341, 1.0));
        _3355 = (_3586 * _3577) + _2867;
        _3357 = (_3586 * _3579) + _2869;
        _3359 = (_3586 * _3581) + _2871;
        _3361 = ((_3571 * _1326) * _3586) + _3205;
        _3363 = ((_3573 * _1328) * _3586) + _3207;
        _3365 = ((_3575 * _1329) * _3586) + _3209;
    }
    else
    {
        _3355 = _2867;
        _3357 = _2869;
        _3359 = _2871;
        _3361 = _3205;
        _3363 = _3207;
        _3365 = _3209;
    }
    uint _3371 = _1270 + uint(cbMatDynParam._m0[0u].w);
    float _3377 = (((((cbMtdParam._m0[22u].x * _1050.x) * cbMtdParam._m0[32u].x) * _1073) + _826) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3371].x;
    float _3378 = (((((cbMtdParam._m0[22u].y * _1050.y) * cbMtdParam._m0[32u].x) * _1073) + _827) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3371].y;
    float _3379 = (((((cbMtdParam._m0[22u].z * _1050.z) * cbMtdParam._m0[32u].x) * _1073) + _828) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_3371].z;
    float _5379 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
    float _5390 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
    float _5401 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
    float _3396 = (((isnan(1.0) ? _5379 : (isnan(_5379) ? 1.0 : min(_5379, 1.0))) * (_3355 + ((isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0))) * _1341))) + ((_3361 + ((isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0))) * _2138)) * cbPerFrame._m0[3u].x)) + _3377;
    float _3398 = (_3378 + ((_3363 + ((isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0))) * _2138)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5390 : (isnan(_5390) ? 1.0 : min(_5390, 1.0))) * (_3357 + ((isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0))) * _1341)));
    float _3400 = (_3379 + ((_3365 + ((isnan(0.0) ? _2357 : (isnan(_2357) ? 0.0 : max(_2357, 0.0))) * _2138)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5401 : (isnan(_5401) ? 1.0 : min(_5401, 1.0))) * (_3359 + ((isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0))) * _1341)));
    float _5427 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3413 = isnan(1.0) ? _5427 : (isnan(_5427) ? 1.0 : min(_5427, 1.0));
    uint _3414 = _1269 + 6u;
    float _3422 = _1214 / cbSceneParam._m0[86u].x;
    float _3423 = _1215 / cbSceneParam._m0[86u].y;
    vec4 _3437 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3422, _3423, (log2((isnan(cbSceneParam._m0[77u].w) ? _1169 : (isnan(_1169) ? cbSceneParam._m0[77u].w : min(_1169, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3439 = _3437.x;
    float _3440 = _3437.y;
    float _3441 = _3437.z;
    float _3442 = _3437.w;
    float _3513;
    float _3515;
    float _3517;
    float _3519;
    if (_1169 > cbSceneParam._m0[78u].w)
    {
        float _3476 = isnan(_1169) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1169 : min(cbSceneParam._m0[80u].w, _1169));
        float _3477 = _3476 / _1169;
        float _3488 = _3477 * _1199;
        float _3489 = _1200 * _3477;
        float _3490 = (-0.0) - _3489;
        float _3491 = _3477 * _1201;
        float _3493 = (cbSceneParam._m0[77u].w * _3490) / _3476;
        float _3494 = _3493 + cbSceneParam._m0[79u].w;
        float _3495 = cbSceneParam._m0[79u].w - _3489;
        float _3501 = sqrt(((_3488 * _3488) + (_3489 * _3489)) + (_3491 * _3491));
        float _3504 = (1.0 - (cbSceneParam._m0[77u].w / _3476)) * _3501;
        float _3509 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3511 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3672;
        if (abs((_3490 - _3493) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3672 = ((((_3494 > 0.0) ? exp2(_3509 * _3494) : (2.0 - exp2(_3511 * _3494))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3504;
        }
        else
        {
            float _3632 = 1.0 / cbSceneParam._m0[80u].x;
            float _3633 = isnan(_3495) ? _3494 : (isnan(_3494) ? _3495 : max(_3494, _3495));
            float _3634 = isnan(_3495) ? _3494 : (isnan(_3494) ? _3495 : min(_3494, _3495));
            float _3643 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : min(_3633, 0.0));
            float _3644 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : min(_3634, 0.0));
            _3672 = ((abs(_3501 / _3490) * cbSceneParam._m0[80u].y) * ((((_3643 - _3644) * 2.0) - ((exp2(_3509 * (isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0)))) - exp2(_3509 * (isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0))))) * _3632)) - ((exp2(_3511 * _3643) - exp2(_3511 * _3644)) * _3632))) + (_3504 * cbSceneParam._m0[80u].z);
        }
        vec4 _3674 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3422, _3423, 1.0), 0.0);
        float _3683 = exp2((_3672 * (-1.44269502162933349609375)) * (1.0 - _3674.w));
        float _3684 = log2(_3683);
        float _3700 = log2(_3442);
        _3513 = (exp2(_3700 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3684 * cbSceneParam._m0[78u].x)) * _3674.x) / cbSceneParam._m0[78u].x)) + _3439;
        _3515 = (exp2(_3700 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3684 * cbSceneParam._m0[78u].y)) * _3674.y) / cbSceneParam._m0[78u].y)) + _3440;
        _3517 = (exp2(_3700 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3684 * cbSceneParam._m0[78u].z)) * _3674.z) / cbSceneParam._m0[78u].z)) + _3441;
        _3519 = _3683 * _3442;
    }
    else
    {
        _3513 = _3439;
        _3515 = _3440;
        _3517 = _3441;
        _3519 = _3442;
    }
    float _3530 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3531 = _3530 == 3.0;
    float _3532 = log2(_3519);
    float _3536 = exp2(_3532 * cbSceneParam._m0[78u].x);
    float _3537 = exp2(_3532 * cbSceneParam._m0[78u].y);
    float _3538 = exp2(_3532 * cbSceneParam._m0[78u].z);
    float _3539 = _3536 * (isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0)));
    float _3540 = _3537 * (isnan(0.0) ? _3398 : (isnan(_3398) ? 0.0 : max(_3398, 0.0)));
    float _3541 = _3538 * (isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0)));
    float _3550 = (_3530 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3550 * (_3531 ? _3539 : (_3539 + (cbSceneParam._m0[72u].w * _3513)));
    SV_Target.y = _3550 * (_3531 ? _3540 : (_3540 + (cbSceneParam._m0[72u].w * _3515)));
    SV_Target.z = _3550 * (_3531 ? _3541 : (_3541 + (cbSceneParam._m0[72u].w * _3517)));
    SV_Target.w = cbInstanceData._m0[_3414].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3377) * _3413) * _3536) * _3550;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3378) * _3413) * _3537) * _3550;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3379) * _3413) * _3538) * _3550;
    SV_Target_1.w = cbInstanceData._m0[_3414].w;
}


