#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[44];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 29) uniform texture2D g_PaintEmissiveTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    vec4 _158 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -5.0);
    float _162 = _158.y;
    float _167 = roundEven((_158.x + (-0.02500000037252902984619140625)) * 8.0);
    float _114[6];
    float _115[6];
    float _116[6];
    _114[0u] = cbMtdParam._m0[30u].x;
    _115[0u] = cbMtdParam._m0[30u].y;
    _116[0u] = cbMtdParam._m0[30u].z;
    _114[1u] = cbMtdParam._m0[28u].x;
    _115[1u] = cbMtdParam._m0[28u].y;
    _116[1u] = cbMtdParam._m0[28u].z;
    _114[2u] = cbMtdParam._m0[27u].x;
    _115[2u] = cbMtdParam._m0[27u].y;
    _116[2u] = cbMtdParam._m0[27u].z;
    _114[3u] = cbMtdParam._m0[26u].x;
    _115[3u] = cbMtdParam._m0[26u].y;
    _116[3u] = cbMtdParam._m0[26u].z;
    _114[4u] = cbMtdParam._m0[25u].x;
    _115[4u] = cbMtdParam._m0[25u].y;
    _116[4u] = cbMtdParam._m0[25u].z;
    _114[5u] = cbMtdParam._m0[24u].x;
    _115[5u] = cbMtdParam._m0[24u].y;
    _116[5u] = cbMtdParam._m0[24u].z;
    float _222 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    uint _225 = uint(int(isnan(5.0) ? _222 : (isnan(_222) ? 5.0 : min(_222, 5.0))));
    float _274 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _294 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_Damage_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbMtdParam._m0[38u].w * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[33u].x)) + ((cbMtdParam._m0[38u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y), ((cbMtdParam._m0[38u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[39u].x * ((_274 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[33u].x))));
    float _312 = (-0.0) - ((_274 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].w);
    float _316 = (_274 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].w;
    float _317 = isnan(_316) ? _312 : (isnan(_312) ? _316 : min(_312, _316));
    float _681 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _319 = isnan(1.0) ? _681 : (isnan(_681) ? 1.0 : min(_681, 1.0));
    float _353 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _354 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _359 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_353, _354));
    float _361 = _359.x;
    float _362 = _359.y;
    float _363 = _359.z;
    vec4 _365 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_353, _354));
    vec4 _369 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_353, _354));
    vec4 _376 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_353, _354));
    uint _384 = uint(roundEven(NORMAL.w)) * 13u;
    uint _387 = (_384 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _393 = cbInstanceData._m0[_387].x * _369.x;
    float _394 = cbInstanceData._m0[_387].y * _369.y;
    float _395 = cbInstanceData._m0[_387].z * _369.z;
    float _396 = _361 * 3.3333332538604736328125;
    float _398 = _362 * 3.3333332538604736328125;
    float _399 = _363 * 3.3333332538604736328125;
    float _407 = ((isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _409 = ((isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _410 = ((isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _411 = isnan(_407) ? _393 : (isnan(_393) ? _407 : max(_393, _407));
    float _412 = isnan(_409) ? _394 : (isnan(_394) ? _409 : max(_394, _409));
    float _413 = isnan(_410) ? _395 : (isnan(_395) ? _410 : max(_395, _410));
    float _416 = (_361 + (-0.0599999986588954925537109375)) + _411;
    float _418 = (_362 + (-0.0599999986588954925537109375)) + _412;
    float _420 = (_363 + (-0.0599999986588954925537109375)) + _413;
    float _432 = (_416 * _416) - ((0.02999999932944774627685546875 - _361) * 0.119999997317790985107421875);
    float _433 = (_418 * _418) - ((0.02999999932944774627685546875 - _362) * 0.119999997317790985107421875);
    float _434 = (_420 * _420) - ((0.02999999932944774627685546875 - _363) * 0.119999997317790985107421875);
    float _444 = (sqrt(isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0))) - _416) * 16.666667938232421875;
    float _446 = (sqrt(isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0))) - _418) * 16.666667938232421875;
    float _447 = (sqrt(isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0))) - _420) * 16.666667938232421875;
    float _448 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _449 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _450 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _461 = (((isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0))) * 0.114000000059604644775390625);
    float _462 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _463 = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
    float _466 = 1.0 - (isnan(0.99989998340606689453125) ? _463 : (isnan(_463) ? 0.99989998340606689453125 : min(_463, 0.99989998340606689453125)));
    uvec4 _475 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _479 = (_475.y != 0u) ? (1.0 - _353) : _353;
    vec4 _483 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_479, _354), 0.0, ivec2(1));
    float _487 = _483.x;
    vec4 _489 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_479, _354), 0.0, ivec2(-1, 1));
    float _492 = _489.x;
    vec4 _493 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_479, _354), 0.0, ivec2(1, -1));
    float _496 = _493.x;
    vec4 _497 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_479, _354), 0.0, ivec2(-1));
    float _500 = _497.x;
    float _501 = isnan(_500) ? _496 : (isnan(_496) ? _500 : min(_496, _500));
    float _502 = isnan(_492) ? _487 : (isnan(_487) ? _492 : min(_487, _492));
    float _513;
    float _515;
    float _517;
    if (_475.x == 0u)
    {
        _513 = (((((cbMtdParam._m0[22u].x * _294.x) * cbMtdParam._m0[32u].x) * _319) + (_114[_225] * _162)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_387].x;
        _515 = (((((cbMtdParam._m0[22u].y * _294.y) * cbMtdParam._m0[32u].x) * _319) + (_115[_225] * _162)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_387].y;
        _517 = (((((cbMtdParam._m0[22u].z * _294.z) * cbMtdParam._m0[32u].x) * _319) + (_116[_225] * _162)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_387].z;
    }
    else
    {
        vec4 _528 = texture(sampler2D(g_PaintEmissiveTexture, SS_PaintDecal), vec2(_353, _354));
        _513 = cbPaintParam._m0[18u].x * _528.x;
        _515 = cbPaintParam._m0[18u].y * _528.y;
        _517 = cbPaintParam._m0[18u].z * _528.z;
    }
    if (((1u << (uint(floor(float(uint(_167)))) & 31u)) & _475.z) == 0u)
    {
        discard_state = true;
    }
    float _560 = (dot(vec3(_141 * NORMAL.x, _141 * NORMAL.y, _141 * NORMAL.z), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _797 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _602 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _608 = fma(_602, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _602;
    float _614 = (_608 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _808 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _620 = (_608 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _819 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _623 = ((((_376.x * _369.w) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_501) ? _502 : (isnan(_502) ? _501 : min(_502, _501))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _797 : (isnan(_797) ? 1.0 : min(_797, 1.0)))) * (isnan(1.0) ? _808 : (isnan(_808) ? 1.0 : min(_808, 1.0)))) * (1.0 - (isnan(1.0) ? _819 : (isnan(_819) ? 1.0 : min(_819, 1.0))));
    float _631;
    if (_623 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _631 = 0.0;
    }
    else
    {
        _631 = _623 * cbInstanceData._m0[_384 + 6u].w;
    }
    SV_Target.x = cbInstanceData._m0[_387].x * (_411 / _466);
    SV_Target.y = cbInstanceData._m0[_387].y * (_412 / _466);
    SV_Target.z = cbInstanceData._m0[_387].z * (_413 / _466);
    SV_Target.w = _631;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _463;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _365.z;
    SV_Target_1.z = _363;
    SV_Target_1.w = _631;
    SV_Target_2.x = _513;
    SV_Target_2.y = _515;
    SV_Target_2.z = _517;
    SV_Target_2.w = _631;
    discard_exit();
}


