#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _144 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _146 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _147 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _148 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _149 = _147 + 0.0;
    precise float _150 = _148 + 0.0;
    float _158 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _171 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _173 = texelFetch(g_InstanceIndexBuffer, int(_171));
    uint _174 = _173.x;
    precise float _175 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _180 = isnan(_175) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _175 : max(0.001000000047497451305389404296875, _175));
    precise float _182 = BLENDWEIGHT.x / _180;
    precise float _183 = BLENDWEIGHT.y / _180;
    precise float _184 = BLENDWEIGHT.z / _180;
    precise float _185 = BLENDWEIGHT.w / _180;
    uint _187 = _174 * 13u;
    uvec4 _193 = floatBitsToUint(cbInstanceData._m0[_187 + 4u]);
    uint _194 = _193.x;
    uint _196 = (_194 + uint(float(BLENDINDICES.x))) * 3u;
    uint _203 = _196 + 1u;
    uint _210 = _196 + 2u;
    precise float _217 = _182 * cbObjMatrix._m0[_196].x;
    precise float _218 = _182 * cbObjMatrix._m0[_203].x;
    precise float _219 = _182 * cbObjMatrix._m0[_210].x;
    precise float _220 = _182 * cbObjMatrix._m0[_196].y;
    precise float _221 = _182 * cbObjMatrix._m0[_203].y;
    precise float _222 = _182 * cbObjMatrix._m0[_210].y;
    precise float _223 = _182 * cbObjMatrix._m0[_196].z;
    precise float _224 = _182 * cbObjMatrix._m0[_203].z;
    precise float _225 = _182 * cbObjMatrix._m0[_210].z;
    precise float _226 = _182 * cbObjMatrix._m0[_196].w;
    precise float _227 = _182 * cbObjMatrix._m0[_203].w;
    precise float _228 = _182 * cbObjMatrix._m0[_210].w;
    uint _231 = (_194 + uint(float(BLENDINDICES.y))) * 3u;
    uint _238 = _231 + 1u;
    uint _245 = _231 + 2u;
    precise float _252 = _183 * cbObjMatrix._m0[_231].x;
    precise float _253 = _183 * cbObjMatrix._m0[_238].x;
    precise float _254 = _183 * cbObjMatrix._m0[_245].x;
    precise float _255 = _183 * cbObjMatrix._m0[_231].y;
    precise float _256 = _183 * cbObjMatrix._m0[_238].y;
    precise float _257 = _183 * cbObjMatrix._m0[_245].y;
    precise float _258 = _183 * cbObjMatrix._m0[_231].z;
    precise float _259 = _183 * cbObjMatrix._m0[_238].z;
    precise float _260 = _183 * cbObjMatrix._m0[_245].z;
    precise float _261 = _183 * cbObjMatrix._m0[_231].w;
    precise float _262 = _183 * cbObjMatrix._m0[_238].w;
    precise float _263 = _183 * cbObjMatrix._m0[_245].w;
    precise float _264 = _217 + _252;
    precise float _265 = _218 + _253;
    precise float _266 = _219 + _254;
    precise float _267 = _220 + _255;
    precise float _268 = _221 + _256;
    precise float _269 = _222 + _257;
    precise float _270 = _223 + _258;
    precise float _271 = _224 + _259;
    precise float _272 = _225 + _260;
    precise float _273 = _226 + _261;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    uint _278 = (_194 + uint(float(BLENDINDICES.z))) * 3u;
    uint _285 = _278 + 1u;
    uint _292 = _278 + 2u;
    precise float _299 = _184 * cbObjMatrix._m0[_278].x;
    precise float _300 = _184 * cbObjMatrix._m0[_285].x;
    precise float _301 = _184 * cbObjMatrix._m0[_292].x;
    precise float _302 = _184 * cbObjMatrix._m0[_278].y;
    precise float _303 = _184 * cbObjMatrix._m0[_285].y;
    precise float _304 = _184 * cbObjMatrix._m0[_292].y;
    precise float _305 = _184 * cbObjMatrix._m0[_278].z;
    precise float _306 = _184 * cbObjMatrix._m0[_285].z;
    precise float _307 = _184 * cbObjMatrix._m0[_292].z;
    precise float _308 = _184 * cbObjMatrix._m0[_278].w;
    precise float _309 = _184 * cbObjMatrix._m0[_285].w;
    precise float _310 = _184 * cbObjMatrix._m0[_292].w;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    uint _325 = (_194 + uint(float(BLENDINDICES.w))) * 3u;
    uint _332 = _325 + 1u;
    uint _339 = _325 + 2u;
    precise float _346 = _185 * cbObjMatrix._m0[_325].x;
    precise float _347 = _185 * cbObjMatrix._m0[_332].x;
    precise float _348 = _185 * cbObjMatrix._m0[_339].x;
    precise float _349 = _185 * cbObjMatrix._m0[_325].y;
    precise float _350 = _185 * cbObjMatrix._m0[_332].y;
    precise float _351 = _185 * cbObjMatrix._m0[_339].y;
    precise float _352 = _185 * cbObjMatrix._m0[_325].z;
    precise float _353 = _185 * cbObjMatrix._m0[_332].z;
    precise float _354 = _185 * cbObjMatrix._m0[_339].z;
    precise float _355 = _185 * cbObjMatrix._m0[_325].w;
    precise float _356 = _185 * cbObjMatrix._m0[_332].w;
    precise float _357 = _185 * cbObjMatrix._m0[_339].w;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = POSITION.x * _358;
    precise float _371 = POSITION.y * _361;
    precise float _372 = _371 + _370;
    precise float _373 = POSITION.z * _364;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * _367;
    precise float _376 = _375 + _374;
    precise float _377 = POSITION.x * _359;
    precise float _378 = POSITION.y * _362;
    precise float _379 = _378 + _377;
    precise float _380 = POSITION.z * _365;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * _368;
    precise float _383 = _382 + _381;
    precise float _384 = POSITION.x * _360;
    precise float _385 = POSITION.y * _363;
    precise float _386 = _385 + _384;
    precise float _387 = POSITION.z * _366;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * _369;
    precise float _390 = _389 + _388;
    precise float _406 = _376 - cbSceneParam._m0[3u].x;
    precise float _407 = _383 - cbSceneParam._m0[3u].y;
    precise float _408 = _390 - cbSceneParam._m0[3u].z;
    precise float _444 = _406 * cbSceneParam._m0[26u].x;
    precise float _445 = _407 * cbSceneParam._m0[26u].y;
    precise float _446 = _445 + _444;
    precise float _447 = _408 * cbSceneParam._m0[26u].z;
    precise float _448 = _447 + _446;
    precise float _449 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _450 = _449 + _448;
    precise float _451 = _406 * cbSceneParam._m0[27u].x;
    precise float _452 = _407 * cbSceneParam._m0[27u].y;
    precise float _453 = _452 + _451;
    precise float _454 = _408 * cbSceneParam._m0[27u].z;
    precise float _455 = _454 + _453;
    precise float _456 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _457 = _456 + _455;
    precise float _458 = _149 * 2.0;
    precise float _460 = _150 * 2.0;
    precise float _461 = _458 + (-1.0);
    precise float _463 = 1.0 - _460;
    precise float _464 = _461 * _457;
    precise float _465 = _463 * _457;
    gl_Position.x = _464;
    gl_Position.y = _465;
    gl_Position.z = _450;
    gl_Position.w = _457;
    POSITION_1.x = fma(_408, cbSceneParam._m0[24u].z, fma(_407, cbSceneParam._m0[24u].y, _406 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w;
    POSITION_1.y = fma(_408, cbSceneParam._m0[25u].z, fma(_407, cbSceneParam._m0[25u].y, cbSceneParam._m0[25u].x * _406)) + cbSceneParam._m0[25u].w;
    POSITION_1.z = _450;
    POSITION_1.w = _457;
    NORMAL_1.x = fma(_161, _364, fma(_160, _361, _358 * _158));
    NORMAL_1.y = fma(_161, _365, fma(_160, _362, _359 * _158));
    NORMAL_1.z = fma(_161, _366, fma(_160, _363, _360 * _158));
    NORMAL_1.w = float(_174);
    TEXCOORD_2.x = _144;
    TEXCOORD_2.y = _146;
    TEXCOORD_2.z = _149;
    TEXCOORD_2.w = _150;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_464, _465, _450, _457), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_464, _465, _450, _457), vec4(cbInstanceData._m0[_187 + 3u]));
}


