#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    precise float _86 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _88 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _89 = _86 + 0.0;
    precise float _90 = _88 + 0.0;
    uint _97 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _111 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_97)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _118 = _111 + 1u;
    uint _125 = _111 + 2u;
    precise float _132 = POSITION.x * cbObjMatrix._m0[_111].x;
    precise float _133 = POSITION.y * cbObjMatrix._m0[_111].y;
    precise float _134 = _133 + _132;
    precise float _135 = POSITION.z * cbObjMatrix._m0[_111].z;
    precise float _136 = _135 + _134;
    precise float _137 = 1.0 * cbObjMatrix._m0[_111].w;
    precise float _139 = _137 + _136;
    precise float _140 = POSITION.x * cbObjMatrix._m0[_118].x;
    precise float _141 = POSITION.y * cbObjMatrix._m0[_118].y;
    precise float _142 = _141 + _140;
    precise float _143 = POSITION.z * cbObjMatrix._m0[_118].z;
    precise float _144 = _143 + _142;
    precise float _145 = 1.0 * cbObjMatrix._m0[_118].w;
    precise float _146 = _145 + _144;
    precise float _147 = POSITION.x * cbObjMatrix._m0[_125].x;
    precise float _148 = POSITION.y * cbObjMatrix._m0[_125].y;
    precise float _149 = _148 + _147;
    precise float _150 = POSITION.z * cbObjMatrix._m0[_125].z;
    precise float _151 = _150 + _149;
    precise float _152 = 1.0 * cbObjMatrix._m0[_125].w;
    precise float _153 = _152 + _151;
    precise float _154 = _89 * 2.0;
    precise float _156 = _90 * 2.0;
    precise float _157 = _154 + (-1.0);
    precise float _159 = 1.0 - _156;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    gl_Position.x = _157;
    gl_Position.y = _159;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = _139;
    TEXCOORD_2.y = _146;
    TEXCOORD_2.z = _153;
}


