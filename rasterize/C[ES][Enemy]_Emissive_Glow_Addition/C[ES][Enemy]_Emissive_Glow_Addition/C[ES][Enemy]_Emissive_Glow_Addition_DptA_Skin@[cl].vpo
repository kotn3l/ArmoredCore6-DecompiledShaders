#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec2 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    float _165 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _189 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _191 = texelFetch(g_InstanceIndexBuffer, int(_189));
    uint _192 = _191.x;
    precise float _193 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _198 = isnan(_193) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _193 : max(0.001000000047497451305389404296875, _193));
    precise float _200 = BLENDWEIGHT.x / _198;
    precise float _201 = BLENDWEIGHT.y / _198;
    precise float _202 = BLENDWEIGHT.z / _198;
    precise float _203 = BLENDWEIGHT.w / _198;
    uvec4 _210 = floatBitsToUint(cbInstanceData._m0[(_192 * 13u) + 4u]);
    uint _211 = _210.x;
    uint _213 = (_211 + uint(float(BLENDINDICES.x))) * 3u;
    uint _220 = _213 + 1u;
    uint _227 = _213 + 2u;
    precise float _234 = _200 * cbObjMatrix._m0[_213].x;
    precise float _235 = _200 * cbObjMatrix._m0[_220].x;
    precise float _236 = _200 * cbObjMatrix._m0[_227].x;
    precise float _237 = _200 * cbObjMatrix._m0[_213].y;
    precise float _238 = _200 * cbObjMatrix._m0[_220].y;
    precise float _239 = _200 * cbObjMatrix._m0[_227].y;
    precise float _240 = _200 * cbObjMatrix._m0[_213].z;
    precise float _241 = _200 * cbObjMatrix._m0[_220].z;
    precise float _242 = _200 * cbObjMatrix._m0[_227].z;
    precise float _243 = _200 * cbObjMatrix._m0[_213].w;
    precise float _244 = _200 * cbObjMatrix._m0[_220].w;
    precise float _245 = _200 * cbObjMatrix._m0[_227].w;
    uint _248 = (_211 + uint(float(BLENDINDICES.y))) * 3u;
    uint _255 = _248 + 1u;
    uint _262 = _248 + 2u;
    precise float _269 = _201 * cbObjMatrix._m0[_248].x;
    precise float _270 = _201 * cbObjMatrix._m0[_255].x;
    precise float _271 = _201 * cbObjMatrix._m0[_262].x;
    precise float _272 = _201 * cbObjMatrix._m0[_248].y;
    precise float _273 = _201 * cbObjMatrix._m0[_255].y;
    precise float _274 = _201 * cbObjMatrix._m0[_262].y;
    precise float _275 = _201 * cbObjMatrix._m0[_248].z;
    precise float _276 = _201 * cbObjMatrix._m0[_255].z;
    precise float _277 = _201 * cbObjMatrix._m0[_262].z;
    precise float _278 = _201 * cbObjMatrix._m0[_248].w;
    precise float _279 = _201 * cbObjMatrix._m0[_255].w;
    precise float _280 = _201 * cbObjMatrix._m0[_262].w;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    uint _295 = (_211 + uint(float(BLENDINDICES.z))) * 3u;
    uint _302 = _295 + 1u;
    uint _309 = _295 + 2u;
    precise float _316 = _202 * cbObjMatrix._m0[_295].x;
    precise float _317 = _202 * cbObjMatrix._m0[_302].x;
    precise float _318 = _202 * cbObjMatrix._m0[_309].x;
    precise float _319 = _202 * cbObjMatrix._m0[_295].y;
    precise float _320 = _202 * cbObjMatrix._m0[_302].y;
    precise float _321 = _202 * cbObjMatrix._m0[_309].y;
    precise float _322 = _202 * cbObjMatrix._m0[_295].z;
    precise float _323 = _202 * cbObjMatrix._m0[_302].z;
    precise float _324 = _202 * cbObjMatrix._m0[_309].z;
    precise float _325 = _202 * cbObjMatrix._m0[_295].w;
    precise float _326 = _202 * cbObjMatrix._m0[_302].w;
    precise float _327 = _202 * cbObjMatrix._m0[_309].w;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    uint _342 = (_211 + uint(float(BLENDINDICES.w))) * 3u;
    uint _349 = _342 + 1u;
    uint _356 = _342 + 2u;
    precise float _363 = _203 * cbObjMatrix._m0[_342].x;
    precise float _364 = _203 * cbObjMatrix._m0[_349].x;
    precise float _365 = _203 * cbObjMatrix._m0[_356].x;
    precise float _366 = _203 * cbObjMatrix._m0[_342].y;
    precise float _367 = _203 * cbObjMatrix._m0[_349].y;
    precise float _368 = _203 * cbObjMatrix._m0[_356].y;
    precise float _369 = _203 * cbObjMatrix._m0[_342].z;
    precise float _370 = _203 * cbObjMatrix._m0[_349].z;
    precise float _371 = _203 * cbObjMatrix._m0[_356].z;
    precise float _372 = _203 * cbObjMatrix._m0[_342].w;
    precise float _373 = _203 * cbObjMatrix._m0[_349].w;
    precise float _374 = _203 * cbObjMatrix._m0[_356].w;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = POSITION.x * _375;
    precise float _388 = POSITION.y * _378;
    precise float _389 = _388 + _387;
    precise float _390 = POSITION.z * _381;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * _384;
    precise float _393 = _392 + _391;
    precise float _394 = POSITION.x * _376;
    precise float _395 = POSITION.y * _379;
    precise float _396 = _395 + _394;
    precise float _397 = POSITION.z * _382;
    precise float _398 = _397 + _396;
    precise float _399 = 1.0 * _385;
    precise float _400 = _399 + _398;
    precise float _401 = POSITION.x * _377;
    precise float _402 = POSITION.y * _380;
    precise float _403 = _402 + _401;
    precise float _404 = POSITION.z * _383;
    precise float _405 = _404 + _403;
    precise float _406 = 1.0 * _386;
    precise float _407 = _406 + _405;
    precise float _432 = _393 - cbSceneParam._m0[3u].x;
    precise float _433 = _400 - cbSceneParam._m0[3u].y;
    precise float _434 = _407 - cbSceneParam._m0[3u].z;
    precise float _462 = _432 * cbSceneParam._m0[24u].x;
    precise float _463 = _433 * cbSceneParam._m0[24u].y;
    precise float _464 = _463 + _462;
    precise float _465 = _434 * cbSceneParam._m0[24u].z;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _468 = _467 + _466;
    precise float _469 = _432 * cbSceneParam._m0[25u].x;
    precise float _470 = _433 * cbSceneParam._m0[25u].y;
    precise float _471 = _470 + _469;
    precise float _472 = _434 * cbSceneParam._m0[25u].z;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _475 = _474 + _473;
    precise float _476 = _432 * cbSceneParam._m0[26u].x;
    precise float _477 = _433 * cbSceneParam._m0[26u].y;
    precise float _478 = _477 + _476;
    precise float _479 = _434 * cbSceneParam._m0[26u].z;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _482 = _481 + _480;
    precise float _483 = _432 * cbSceneParam._m0[27u].x;
    precise float _484 = _433 * cbSceneParam._m0[27u].y;
    precise float _485 = _484 + _483;
    precise float _486 = _434 * cbSceneParam._m0[27u].z;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _489 = _488 + _487;
    gl_Position.x = _468;
    gl_Position.y = _475;
    gl_Position.z = _482;
    gl_Position.w = _489;
    POSITION_1.x = _468;
    POSITION_1.y = _475;
    POSITION_1.z = _482;
    POSITION_1.w = _489;
    NORMAL_1.x = fma(_168, _381, fma(_167, _378, _375 * _165));
    NORMAL_1.y = fma(_168, _382, fma(_167, _379, _376 * _165));
    NORMAL_1.z = fma(_168, _383, fma(_167, _380, _377 * _165));
    NORMAL_1.w = float(_192);
    TANGENT_1.x = fma(_179, _381, fma(_178, _378, _375 * _177));
    TANGENT_1.y = fma(_179, _382, fma(_178, _379, _376 * _177));
    TANGENT_1.z = fma(_179, _383, fma(_178, _380, _377 * _177));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_5.x = _482;
    TEXCOORD_5.y = _489;
}


