#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out vec2 TEXCOORD_6;
layout(location = 5, component = 3) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _199 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _213 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _235 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _237 = texelFetch(g_InstanceIndexBuffer, int(_235));
    uint _238 = _237.x;
    precise float _239 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _244 = isnan(_239) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _239 : max(0.001000000047497451305389404296875, _239));
    precise float _246 = BLENDWEIGHT.x / _244;
    precise float _247 = BLENDWEIGHT.y / _244;
    precise float _248 = BLENDWEIGHT.z / _244;
    precise float _249 = BLENDWEIGHT.w / _244;
    uint _251 = _238 * 13u;
    uvec4 _256 = floatBitsToUint(cbInstanceData._m0[_251 + 4u]);
    uint _257 = _256.x;
    uint _259 = (_257 + uint(float(BLENDINDICES.x))) * 3u;
    uint _266 = _259 + 1u;
    uint _273 = _259 + 2u;
    precise float _280 = _246 * cbObjMatrix._m0[_259].x;
    precise float _281 = _246 * cbObjMatrix._m0[_266].x;
    precise float _282 = _246 * cbObjMatrix._m0[_273].x;
    precise float _283 = _246 * cbObjMatrix._m0[_259].y;
    precise float _284 = _246 * cbObjMatrix._m0[_266].y;
    precise float _285 = _246 * cbObjMatrix._m0[_273].y;
    precise float _286 = _246 * cbObjMatrix._m0[_259].z;
    precise float _287 = _246 * cbObjMatrix._m0[_266].z;
    precise float _288 = _246 * cbObjMatrix._m0[_273].z;
    precise float _289 = _246 * cbObjMatrix._m0[_259].w;
    precise float _290 = _246 * cbObjMatrix._m0[_266].w;
    precise float _291 = _246 * cbObjMatrix._m0[_273].w;
    uint _294 = (_257 + uint(float(BLENDINDICES.y))) * 3u;
    uint _301 = _294 + 1u;
    uint _308 = _294 + 2u;
    precise float _315 = _247 * cbObjMatrix._m0[_294].x;
    precise float _316 = _247 * cbObjMatrix._m0[_301].x;
    precise float _317 = _247 * cbObjMatrix._m0[_308].x;
    precise float _318 = _247 * cbObjMatrix._m0[_294].y;
    precise float _319 = _247 * cbObjMatrix._m0[_301].y;
    precise float _320 = _247 * cbObjMatrix._m0[_308].y;
    precise float _321 = _247 * cbObjMatrix._m0[_294].z;
    precise float _322 = _247 * cbObjMatrix._m0[_301].z;
    precise float _323 = _247 * cbObjMatrix._m0[_308].z;
    precise float _324 = _247 * cbObjMatrix._m0[_294].w;
    precise float _325 = _247 * cbObjMatrix._m0[_301].w;
    precise float _326 = _247 * cbObjMatrix._m0[_308].w;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    uint _341 = (_257 + uint(float(BLENDINDICES.z))) * 3u;
    uint _348 = _341 + 1u;
    uint _355 = _341 + 2u;
    precise float _362 = _248 * cbObjMatrix._m0[_341].x;
    precise float _363 = _248 * cbObjMatrix._m0[_348].x;
    precise float _364 = _248 * cbObjMatrix._m0[_355].x;
    precise float _365 = _248 * cbObjMatrix._m0[_341].y;
    precise float _366 = _248 * cbObjMatrix._m0[_348].y;
    precise float _367 = _248 * cbObjMatrix._m0[_355].y;
    precise float _368 = _248 * cbObjMatrix._m0[_341].z;
    precise float _369 = _248 * cbObjMatrix._m0[_348].z;
    precise float _370 = _248 * cbObjMatrix._m0[_355].z;
    precise float _371 = _248 * cbObjMatrix._m0[_341].w;
    precise float _372 = _248 * cbObjMatrix._m0[_348].w;
    precise float _373 = _248 * cbObjMatrix._m0[_355].w;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    uint _388 = (_257 + uint(float(BLENDINDICES.w))) * 3u;
    uint _395 = _388 + 1u;
    uint _402 = _388 + 2u;
    precise float _409 = _249 * cbObjMatrix._m0[_388].x;
    precise float _410 = _249 * cbObjMatrix._m0[_395].x;
    precise float _411 = _249 * cbObjMatrix._m0[_402].x;
    precise float _412 = _249 * cbObjMatrix._m0[_388].y;
    precise float _413 = _249 * cbObjMatrix._m0[_395].y;
    precise float _414 = _249 * cbObjMatrix._m0[_402].y;
    precise float _415 = _249 * cbObjMatrix._m0[_388].z;
    precise float _416 = _249 * cbObjMatrix._m0[_395].z;
    precise float _417 = _249 * cbObjMatrix._m0[_402].z;
    precise float _418 = _249 * cbObjMatrix._m0[_388].w;
    precise float _419 = _249 * cbObjMatrix._m0[_395].w;
    precise float _420 = _249 * cbObjMatrix._m0[_402].w;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = POSITION.x * _421;
    precise float _434 = POSITION.y * _424;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.z * _427;
    precise float _437 = _436 + _435;
    precise float _438 = 1.0 * _430;
    precise float _439 = _438 + _437;
    precise float _440 = POSITION.x * _422;
    precise float _441 = POSITION.y * _425;
    precise float _442 = _441 + _440;
    precise float _443 = POSITION.z * _428;
    precise float _444 = _443 + _442;
    precise float _445 = 1.0 * _431;
    precise float _446 = _445 + _444;
    precise float _447 = POSITION.x * _423;
    precise float _448 = POSITION.y * _426;
    precise float _449 = _448 + _447;
    precise float _450 = POSITION.z * _429;
    precise float _451 = _450 + _449;
    precise float _452 = 1.0 * _432;
    precise float _453 = _452 + _451;
    float _459 = cbSceneParam._m0[3u].x - _439;
    float _460 = cbSceneParam._m0[3u].y - _446;
    float _461 = cbSceneParam._m0[3u].z - _453;
    precise float _496 = _439 - cbSceneParam._m0[3u].x;
    precise float _497 = _446 - cbSceneParam._m0[3u].y;
    precise float _498 = _453 - cbSceneParam._m0[3u].z;
    precise float _526 = _496 * cbSceneParam._m0[24u].x;
    precise float _527 = _497 * cbSceneParam._m0[24u].y;
    precise float _528 = _527 + _526;
    precise float _529 = _498 * cbSceneParam._m0[24u].z;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _532 = _531 + _530;
    precise float _533 = _496 * cbSceneParam._m0[25u].x;
    precise float _534 = _497 * cbSceneParam._m0[25u].y;
    precise float _535 = _534 + _533;
    precise float _536 = _498 * cbSceneParam._m0[25u].z;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _539 = _538 + _537;
    precise float _540 = _496 * cbSceneParam._m0[26u].x;
    precise float _541 = _497 * cbSceneParam._m0[26u].y;
    precise float _542 = _541 + _540;
    precise float _543 = _498 * cbSceneParam._m0[26u].z;
    precise float _544 = _543 + _542;
    precise float _545 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _546 = _545 + _544;
    precise float _547 = _496 * cbSceneParam._m0[27u].x;
    precise float _548 = _497 * cbSceneParam._m0[27u].y;
    precise float _549 = _548 + _547;
    precise float _550 = _498 * cbSceneParam._m0[27u].z;
    precise float _551 = _550 + _549;
    precise float _552 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _553 = _552 + _551;
    gl_Position.x = _532;
    gl_Position.y = _539;
    gl_Position.z = _546;
    gl_Position.w = _553;
    NORMAL_1.x = fma(_202, _427, fma(_201, _424, _421 * _199));
    NORMAL_1.y = fma(_202, _428, fma(_201, _425, _422 * _199));
    NORMAL_1.z = fma(_202, _429, fma(_201, _426, _423 * _199));
    NORMAL_1.w = float(_238);
    TANGENT_1.x = fma(_213, _427, fma(_212, _424, _421 * _211));
    TANGENT_1.y = fma(_213, _428, fma(_212, _425, _422 * _211));
    TANGENT_1.z = fma(_213, _429, fma(_212, _426, _423 * _211));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_225, _427, fma(_224, _424, _421 * _223));
    TANGENT_2_1.y = fma(_225, _428, fma(_224, _425, _422 * _223));
    TANGENT_2_1.z = fma(_225, _429, fma(_224, _426, _423 * _223));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _546;
    TEXCOORD_6.y = _553;
    TEXCOORD_10 = sqrt(((_459 * _459) + (_460 * _460)) + (_461 * _461));
    gl_ClipDistance[0u] = dot(vec4(_532, _539, _546, _553), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_532, _539, _546, _553), vec4(cbInstanceData._m0[_251 + 3u]));
}


