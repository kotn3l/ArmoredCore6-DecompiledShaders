#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out float TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _177 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _210 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _212 = texelFetch(g_InstanceIndexBuffer, int(_210));
    uint _213 = _212.x;
    uint _223 = (floatBitsToUint(cbInstanceData._m0[(_213 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _230 = _223 + 1u;
    uint _237 = _223 + 2u;
    precise float _244 = POSITION.x * cbObjMatrix._m0[_223].x;
    precise float _245 = POSITION.y * cbObjMatrix._m0[_223].y;
    precise float _246 = _245 + _244;
    precise float _247 = POSITION.z * cbObjMatrix._m0[_223].z;
    precise float _248 = _247 + _246;
    precise float _249 = 1.0 * cbObjMatrix._m0[_223].w;
    precise float _251 = _249 + _248;
    precise float _252 = POSITION.x * cbObjMatrix._m0[_230].x;
    precise float _253 = POSITION.y * cbObjMatrix._m0[_230].y;
    precise float _254 = _253 + _252;
    precise float _255 = POSITION.z * cbObjMatrix._m0[_230].z;
    precise float _256 = _255 + _254;
    precise float _257 = 1.0 * cbObjMatrix._m0[_230].w;
    precise float _258 = _257 + _256;
    precise float _259 = POSITION.x * cbObjMatrix._m0[_237].x;
    precise float _260 = POSITION.y * cbObjMatrix._m0[_237].y;
    precise float _261 = _260 + _259;
    precise float _262 = POSITION.z * cbObjMatrix._m0[_237].z;
    precise float _263 = _262 + _261;
    precise float _264 = 1.0 * cbObjMatrix._m0[_237].w;
    precise float _265 = _264 + _263;
    precise float _300 = _251 - cbSceneParam._m0[3u].x;
    precise float _301 = _258 - cbSceneParam._m0[3u].y;
    precise float _302 = _265 - cbSceneParam._m0[3u].z;
    precise float _330 = _300 * cbSceneParam._m0[24u].x;
    precise float _331 = _301 * cbSceneParam._m0[24u].y;
    precise float _332 = _331 + _330;
    precise float _333 = _302 * cbSceneParam._m0[24u].z;
    precise float _334 = _333 + _332;
    precise float _335 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _336 = _335 + _334;
    precise float _337 = _300 * cbSceneParam._m0[25u].x;
    precise float _338 = _301 * cbSceneParam._m0[25u].y;
    precise float _339 = _338 + _337;
    precise float _340 = _302 * cbSceneParam._m0[25u].z;
    precise float _341 = _340 + _339;
    precise float _342 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _343 = _342 + _341;
    precise float _344 = _300 * cbSceneParam._m0[26u].x;
    precise float _345 = _301 * cbSceneParam._m0[26u].y;
    precise float _346 = _345 + _344;
    precise float _347 = _302 * cbSceneParam._m0[26u].z;
    precise float _348 = _347 + _346;
    precise float _349 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _350 = _349 + _348;
    precise float _351 = _300 * cbSceneParam._m0[27u].x;
    precise float _352 = _301 * cbSceneParam._m0[27u].y;
    precise float _353 = _352 + _351;
    precise float _354 = _302 * cbSceneParam._m0[27u].z;
    precise float _355 = _354 + _353;
    precise float _356 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _357 = _356 + _355;
    gl_Position.x = _336;
    gl_Position.y = _343;
    gl_Position.z = _350;
    gl_Position.w = _357;
    POSITION_1.x = _336;
    POSITION_1.y = _343;
    POSITION_1.z = _350;
    POSITION_1.w = _357;
    NORMAL_1.x = fma(_180, cbObjMatrix._m0[_223].z, fma(_179, cbObjMatrix._m0[_223].y, cbObjMatrix._m0[_223].x * _177));
    NORMAL_1.y = fma(_180, cbObjMatrix._m0[_230].z, fma(_179, cbObjMatrix._m0[_230].y, cbObjMatrix._m0[_230].x * _177));
    NORMAL_1.z = fma(_180, cbObjMatrix._m0[_237].z, fma(_179, cbObjMatrix._m0[_237].y, cbObjMatrix._m0[_237].x * _177));
    NORMAL_1.w = float(_213);
    TANGENT_1.x = fma(_192, cbObjMatrix._m0[_223].z, fma(_191, cbObjMatrix._m0[_223].y, cbObjMatrix._m0[_223].x * _190));
    TANGENT_1.y = fma(_192, cbObjMatrix._m0[_230].z, fma(_191, cbObjMatrix._m0[_230].y, cbObjMatrix._m0[_230].x * _190));
    TANGENT_1.z = fma(_192, cbObjMatrix._m0[_237].z, fma(_191, cbObjMatrix._m0[_237].y, cbObjMatrix._m0[_237].x * _190));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_204, cbObjMatrix._m0[_223].z, fma(_203, cbObjMatrix._m0[_223].y, cbObjMatrix._m0[_223].x * _202));
    TANGENT_2_1.y = fma(_204, cbObjMatrix._m0[_230].z, fma(_203, cbObjMatrix._m0[_230].y, cbObjMatrix._m0[_230].x * _202));
    TANGENT_2_1.z = fma(_204, cbObjMatrix._m0[_237].z, fma(_203, cbObjMatrix._m0[_237].y, cbObjMatrix._m0[_237].x * _202));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4 = COLOR_1.x;
}


