#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1091;
float _3741;
float _3742;
float _3743;
float _3744;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240;
    float _241;
    float _242;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
    }
    else
    {
        _240 = _226;
        _241 = _227;
        _242 = _228;
    }
    vec4 _263 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _292 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[1u].w));
    float _297 = _292.x * cbMtdParam._m0[9u].x;
    float _298 = _292.y * cbMtdParam._m0[9u].y;
    float _299 = _292.z * cbMtdParam._m0[9u].z;
    vec4 _318 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _344 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[6u].w));
    float _371 = (texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_0, SS_DiffuseMap), vec2(((cbMtdParam._m0[13u].z * TEXCOORD_4.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[13u].z * TEXCOORD_4.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[13u].x;
    float _379 = (cbMtdParam._m0[13u].y * TEXCOORD.w) + 1.0;
    float _380 = (TEXCOORD_9.x - (_371 * (1.0 - TEXCOORD_9.x))) * _379;
    float _381 = (TEXCOORD_9.y - (_371 * (1.0 - TEXCOORD_9.y))) * _379;
    float _3753 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _382 = isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0));
    float _3764 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _383 = isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0));
    float _390 = (_382 * ((_318.x * cbMtdParam._m0[10u].x) - _297)) + _297;
    float _391 = (_382 * ((_318.y * cbMtdParam._m0[10u].y) - _298)) + _298;
    float _392 = (_382 * ((_318.z * cbMtdParam._m0[10u].z) - _299)) + _299;
    float _405 = ((cbMtdParam._m0[12u].x * 4.55000019073486328125) * _263.x) * ((((_344.x * cbMtdParam._m0[11u].x) - _390) * _383) + _390);
    float _408 = ((cbMtdParam._m0[12u].y * 4.55000019073486328125) * _263.y) * ((((_344.y * cbMtdParam._m0[11u].y) - _391) * _383) + _391);
    float _411 = ((cbMtdParam._m0[12u].z * 4.55000019073486328125) * _263.z) * ((((_344.z * cbMtdParam._m0[11u].z) - _392) * _383) + _392);
    vec4 _423 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_4.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_4.w) + cbTextureTilingScale._m0[2u].w));
    float _425 = _423.x;
    float _426 = _423.y;
    float _427 = _423.z;
    vec4 _439 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_14, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _456 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_4.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_4.w) + cbTextureTilingScale._m0[8u].w));
    float _467 = (_382 * (_439.x - _425)) + _425;
    float _468 = (_382 * (_439.y - _426)) + _426;
    float _469 = (_382 * (_439.z - _427)) + _427;
    float _478 = ((_456.z - _469) * _383) + _469;
    float _482 = ((((_456.x - _467) * _383) + _467) * 2.0) + (-1.0);
    float _484 = ((((_456.y - _468) * _383) + _468) * 2.0) + (-1.0);
    float _485 = dot(vec2(_482, _484), vec2(_482, _484));
    float _3775 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _490 = sqrt(1.0 - (isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))));
    vec4 _504 = texture(sampler2D(M_AMSN_V_Mb3_Ov_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[7u].w));
    float _514 = (((_504.x * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w) + _482;
    float _515 = (((_504.y * 2.0) + (-1.0)) * cbMtdParam._m0[13u].w) + _484;
    float _518 = fma(_490, _240, fma(_515, _232 * TANGENT.x, (_218 * _210) * _514));
    float _521 = fma(_490, _241, fma(_515, _232 * TANGENT.y, (_218 * _211) * _514));
    float _524 = fma(_490, _242, fma(_515, _232 * TANGENT.z, (_218 * _212) * _514));
    float _528 = inversesqrt(dot(vec3(_518, _521, _524), vec3(_518, _521, _524)));
    float _529 = _528 * _518;
    float _530 = _528 * _521;
    float _531 = _528 * _524;
    float _3786 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _532 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
    float _3797 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _3808 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _3819 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _551 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _591 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _601 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _591);
    float _602 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _591);
    float _603 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _591);
    float _607 = inversesqrt(dot(vec3(_601, _602, _603), vec3(_601, _602, _603)));
    float _608 = _601 * _607;
    float _609 = _602 * _607;
    float _610 = _603 * _607;
    vec4 _615 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _617 = _615.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _771 = sqrt(((_601 * _601) + (_602 * _602)) + (_603 * _603));
        float _777 = (cbMatDynParam._m0[5u].x * _771) + cbMatDynParam._m0[5u].y;
        float _3830 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
        float _778 = isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0));
        float _782 = (cbMatDynParam._m0[5u].z * _771) + cbMatDynParam._m0[5u].w;
        float _3841 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0))) - _778)) + _778) < ((_617 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _628 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _629 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _647 = fma(_531, cbSceneParam._m0[5u].z, fma(_530, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _529));
    float _650 = fma(_531, cbSceneParam._m0[6u].z, fma(_530, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _529));
    float _653 = fma(_531, cbSceneParam._m0[7u].z, fma(_530, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _529));
    uint _666 = uint(roundEven(NORMAL.w)) * 13u;
    uint _667 = _666 + 9u;
    uint _668 = _667 + uint(cbMatDynParam._m0[0u].w);
    float _674 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0)))) * cbInstanceData._m0[_668].x;
    float _675 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0)))) * cbInstanceData._m0[_668].y;
    float _676 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0)))) * cbInstanceData._m0[_668].z;
    float _3852 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _677 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
    float _3863 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _678 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _3874 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _679 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
    vec4 _688 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _628, cbSceneParam._m0[86u].y * _629));
    float _691 = _688.x * TEXCOORD_9.w;
    float _692 = dot(vec3(_529, _530, _531), vec3(_608, _609, _610));
    float _695 = _692 * 2.0;
    float _699 = (_695 * _529) - _608;
    float _700 = (_695 * _530) - _609;
    float _701 = (_695 * _531) - _610;
    float _705 = abs(dot(vec3(_608, _609, _610), vec3(_529, _530, _531)));
    float _3885 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _707 = sqrt(_532);
    float _720 = exp2((_707 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_707 * 3.0));
    float _752 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _756 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _760 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1090;
    float _1092;
    float _1093;
    float _1094;
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _815 = fma(_760, cbModelParam._m0[26u].z, fma(_756, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _752));
        float _819 = fma(_760, cbModelParam._m0[27u].z, fma(_756, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _752));
        float _823 = fma(_760, cbModelParam._m0[28u].z, fma(_756, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _752));
        float _848 = _752 + _529;
        float _849 = _756 + _530;
        float _850 = _760 + _531;
        float _860 = fma(_850, cbModelParam._m0[26u].z, fma(_849, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _848)) - _815;
        float _861 = fma(_850, cbModelParam._m0[27u].z, fma(_849, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _848)) - _819;
        float _862 = fma(_850, cbModelParam._m0[28u].z, fma(_849, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _848)) - _823;
        float _866 = inversesqrt(dot(vec3(_860, _861, _862), vec3(_860, _861, _862)));
        float _879 = ((_866 * _860) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_815 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _880 = ((_866 * _861) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_819 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _881 = ((_866 * _862) / cbModelParam._m0[34u].z) + ((((((_823 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _884 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_879, _880, _881), 0.0);
        vec4 _891 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_879, _880, _881), 0.0);
        vec4 _898 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_879, _880, _881), 0.0);
        vec4 _905 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_879, _880, _881), 0.0);
        float _918 = exp2((_884.w + (-0.5)) * 20.0) * 2.0;
        float _919 = _918 * (_884.x + (-0.5));
        float _920 = _918 * (_884.y + (-0.5));
        float _921 = _918 * (_884.z + (-0.5));
        float _928 = exp2((_891.w + (-0.5)) * 20.0) * 2.0;
        float _929 = _928 * (_891.x + (-0.5));
        float _930 = _928 * (_891.y + (-0.5));
        float _931 = _928 * (_891.z + (-0.5));
        float _938 = exp2((_898.w + (-0.5)) * 20.0) * 2.0;
        float _939 = _938 * (_898.x + (-0.5));
        float _940 = _938 * (_898.y + (-0.5));
        float _941 = _938 * (_898.z + (-0.5));
        float _948 = exp2((_905.w + (-0.5)) * 20.0) * 2.0;
        float _949 = _948 * (_905.x + (-0.5));
        float _950 = _948 * (_905.y + (-0.5));
        float _951 = _948 * (_905.z + (-0.5));
        float _952 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _953 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _954 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        float _955 = _919 * 0.5;
        float _956 = _929 * 0.5;
        float _957 = _939 * 0.5;
        float _958 = dot(vec3(_955, _956, _957), vec3(_955, _956, _957));
        float _963 = (_958 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_958);
        float _972 = (dot(vec3(_529, _530, _531), vec3(_963 * _955, _963 * _956, _963 * _957)) + 1.0) * 0.5;
        float _3911 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
        float _982 = sqrt(((_956 * _956) + (_955 * _955)) + (_957 * _957)) / (_952 + 9.9999997473787516355514526367188e-06);
        float _3922 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
        float _983 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
        float _984 = _983 * 2.0;
        float _988 = (1.0 - _983) / (_983 + 1.0);
        float _3933 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _989 = isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0));
        float _998 = ((((1.0 - _989) * (_984 + 2.0)) * exp2(log2(isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0))) * (_984 + 1.0))) + _989) * _952;
        float _999 = _920 * 0.5;
        float _1000 = _930 * 0.5;
        float _1001 = _940 * 0.5;
        float _1002 = dot(vec3(_999, _1000, _1001), vec3(_999, _1000, _1001));
        float _1007 = (_1002 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1002);
        float _1015 = (dot(vec3(_529, _530, _531), vec3(_1007 * _999, _1007 * _1000, _1007 * _1001)) + 1.0) * 0.5;
        float _3944 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1024 = sqrt(((_1000 * _1000) + (_999 * _999)) + (_1001 * _1001)) / (_953 + 9.9999997473787516355514526367188e-06);
        float _3955 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        float _1025 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
        float _1026 = _1025 * 2.0;
        float _1030 = (1.0 - _1025) / (_1025 + 1.0);
        float _3966 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
        float _1040 = ((((1.0 - _1031) * (_1026 + 2.0)) * exp2(log2(isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0))) * (_1026 + 1.0))) + _1031) * _953;
        float _1041 = _921 * 0.5;
        float _1042 = _931 * 0.5;
        float _1043 = _941 * 0.5;
        float _1044 = dot(vec3(_1041, _1042, _1043), vec3(_1041, _1042, _1043));
        float _1049 = (_1044 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1044);
        float _1057 = (dot(vec3(_529, _530, _531), vec3(_1049 * _1041, _1049 * _1042, _1049 * _1043)) + 1.0) * 0.5;
        float _3977 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1066 = sqrt(((_1042 * _1042) + (_1041 * _1041)) + (_1043 * _1043)) / (_954 + 9.9999997473787516355514526367188e-06);
        float _3988 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1067 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
        float _1068 = _1067 * 2.0;
        float _1072 = (1.0 - _1067) / (_1067 + 1.0);
        float _3999 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1073 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
        float _1082 = ((((1.0 - _1073) * (_1068 + 2.0)) * exp2(log2(isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))) * (_1068 + 1.0))) + _1073) * _954;
        _1090 = _921;
        _1092 = _920;
        _1093 = _919;
        _1094 = _931;
        _1095 = _930;
        _1096 = _929;
        _1097 = _941;
        _1098 = _940;
        _1099 = _939;
        _1100 = _954;
        _1101 = _953;
        _1102 = _952;
        _1103 = cbModelParam._m0[36u].z * (isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0)));
        _1104 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0)));
        _1105 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0)));
    }
    else
    {
        _1090 = _1091;
        _1092 = _1091;
        _1093 = _1091;
        _1094 = _1091;
        _1095 = _1091;
        _1096 = _1091;
        _1097 = _1091;
        _1098 = _1091;
        _1099 = _1091;
        _1100 = _1091;
        _1101 = _1091;
        _1102 = _1091;
        _1103 = 0.0;
        _1104 = 0.0;
        _1105 = 0.0;
    }
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1134 = fma(_760, cbModelParam._m0[30u].z, fma(_756, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _752));
        float _1138 = fma(_760, cbModelParam._m0[31u].z, fma(_756, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _752));
        float _1142 = fma(_760, cbModelParam._m0[32u].z, fma(_756, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _752));
        float _1165 = _752 + _529;
        float _1166 = _756 + _530;
        float _1167 = _760 + _531;
        float _1177 = fma(_1167, cbModelParam._m0[30u].z, fma(_1166, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1165)) - _1134;
        float _1178 = fma(_1167, cbModelParam._m0[31u].z, fma(_1166, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1165)) - _1138;
        float _1179 = fma(_1167, cbModelParam._m0[32u].z, fma(_1166, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1165)) - _1142;
        float _1183 = inversesqrt(dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179)));
        float _1196 = ((_1183 * _1177) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1134 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1197 = ((_1183 * _1178) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1138 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1198 = ((_1183 * _1179) / cbModelParam._m0[35u].z) + ((((((_1142 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1200 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1207 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1196, _1197, _1198), 0.0);
        float _1233 = exp2((_1200.w + (-0.5)) * 20.0) * 2.0;
        float _1234 = _1233 * (_1200.x + (-0.5));
        float _1235 = _1233 * (_1200.y + (-0.5));
        float _1236 = _1233 * (_1200.z + (-0.5));
        float _1243 = exp2((_1207.w + (-0.5)) * 20.0) * 2.0;
        float _1244 = _1243 * (_1207.x + (-0.5));
        float _1245 = _1243 * (_1207.y + (-0.5));
        float _1246 = _1243 * (_1207.z + (-0.5));
        float _1253 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1254 = _1253 * (_1214.x + (-0.5));
        float _1255 = _1253 * (_1214.y + (-0.5));
        float _1256 = _1253 * (_1214.z + (-0.5));
        float _1263 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1264 = _1263 * (_1221.x + (-0.5));
        float _1265 = _1263 * (_1221.y + (-0.5));
        float _1266 = _1263 * (_1221.z + (-0.5));
        float _1267 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1268 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1269 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1270 = _1234 * 0.5;
        float _1271 = _1244 * 0.5;
        float _1272 = _1254 * 0.5;
        float _1273 = dot(vec3(_1270, _1271, _1272), vec3(_1270, _1271, _1272));
        float _1278 = (_1273 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1273);
        float _1286 = (dot(vec3(_529, _530, _531), vec3(_1278 * _1270, _1278 * _1271, _1278 * _1272)) + 1.0) * 0.5;
        float _4040 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1295 = sqrt(((_1271 * _1271) + (_1270 * _1270)) + (_1272 * _1272)) / (_1267 + 9.9999997473787516355514526367188e-06);
        float _4051 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1296 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1297 = _1296 * 2.0;
        float _1301 = (1.0 - _1296) / (_1296 + 1.0);
        float _4062 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
        float _1311 = ((((1.0 - _1302) * (_1297 + 2.0)) * exp2(log2(isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * (_1297 + 1.0))) + _1302) * _1267;
        float _1312 = _1235 * 0.5;
        float _1313 = _1245 * 0.5;
        float _1314 = _1255 * 0.5;
        float _1315 = dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314));
        float _1320 = (_1315 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1315);
        float _1328 = (dot(vec3(_529, _530, _531), vec3(_1320 * _1312, _1320 * _1313, _1320 * _1314)) + 1.0) * 0.5;
        float _4073 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1337 = sqrt(((_1313 * _1313) + (_1312 * _1312)) + (_1314 * _1314)) / (_1268 + 9.9999997473787516355514526367188e-06);
        float _4084 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1339 = _1338 * 2.0;
        float _1343 = (1.0 - _1338) / (_1338 + 1.0);
        float _4095 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1344 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
        float _1353 = ((((1.0 - _1344) * (_1339 + 2.0)) * exp2(log2(isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0))) * (_1339 + 1.0))) + _1344) * _1268;
        float _1354 = _1236 * 0.5;
        float _1355 = _1246 * 0.5;
        float _1356 = _1256 * 0.5;
        float _1357 = dot(vec3(_1354, _1355, _1356), vec3(_1354, _1355, _1356));
        float _1362 = (_1357 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1357);
        float _1370 = (dot(vec3(_529, _530, _531), vec3(_1362 * _1354, _1362 * _1355, _1362 * _1356)) + 1.0) * 0.5;
        float _4106 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1379 = sqrt(((_1355 * _1355) + (_1354 * _1354)) + (_1356 * _1356)) / (_1269 + 9.9999997473787516355514526367188e-06);
        float _4117 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1381 = _1380 * 2.0;
        float _1385 = (1.0 - _1380) / (_1380 + 1.0);
        float _4128 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1386 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1395 = ((((1.0 - _1386) * (_1381 + 2.0)) * exp2(log2(isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))) * (_1381 + 1.0))) + _1386) * _1269;
        _1403 = _1236;
        _1404 = _1235;
        _1405 = _1234;
        _1406 = _1246;
        _1407 = _1245;
        _1408 = _1244;
        _1409 = _1256;
        _1410 = _1255;
        _1411 = _1254;
        _1412 = _1269;
        _1413 = _1268;
        _1414 = _1267;
        _1415 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0)));
        _1416 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)));
        _1417 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0)));
    }
    else
    {
        _1403 = _1091;
        _1404 = _1091;
        _1405 = _1091;
        _1406 = _1091;
        _1407 = _1091;
        _1408 = _1091;
        _1409 = _1091;
        _1410 = _1091;
        _1411 = _1091;
        _1412 = _1091;
        _1413 = _1091;
        _1414 = _1091;
        _1415 = 0.0;
        _1416 = 0.0;
        _1417 = 0.0;
    }
    float _1427 = (cbModelParam._m0[1u].x * (_1415 - _1103)) + _1103;
    float _1428 = (cbModelParam._m0[1u].x * (_1416 - _1104)) + _1104;
    float _1429 = (cbModelParam._m0[1u].x * (_1417 - _1105)) + _1105;
    float _1450 = fma(_1429, cbSceneParam._m0[89u].z, fma(_1428, cbSceneParam._m0[89u].y, _1427 * cbSceneParam._m0[89u].x));
    float _1453 = fma(_1429, cbSceneParam._m0[90u].z, fma(_1428, cbSceneParam._m0[90u].y, _1427 * cbSceneParam._m0[90u].x));
    float _1456 = fma(_1429, cbSceneParam._m0[91u].z, fma(_1428, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1427));
    float _1471 = _699 * 0.5;
    float _1472 = _700 * 0.5;
    float _1473 = _701 * 0.5;
    float _1474 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1405, _1408, _1411, _1414));
    float _1477 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1404, _1407, _1410, _1413));
    float _1480 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1403, _1406, _1409, _1412));
    float _1514;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1487 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1090, _1094, _1097, _1100));
        float _1491 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1092, _1095, _1098, _1101));
        float _1495 = dot(vec4(_1471, _1472, _1473, 1.0), vec4(_1093, _1096, _1099, _1102));
        float _1502 = dot(vec4(cbModelParam._m0[39u]), vec4(_1471, _1472, _1473, 1.0));
        _1514 = dot(vec3(isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0)), isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)), isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1502) ? 0.0 : (isnan(0.0) ? _1502 : max(0.0, _1502))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1514 = 1.0;
    }
    float _1525;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1516 = dot(vec4(cbModelParam._m0[40u]), vec4(_1471, _1472, _1473, 1.0));
        _1525 = dot(vec3(isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)), isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0)), isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1516) ? 0.0 : (isnan(0.0) ? _1516 : max(0.0, _1516))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1525 = 1.0;
    }
    float _1529 = (_1525 * cbModelParam._m0[1u].x) + (_1514 * (1.0 - cbModelParam._m0[1u].x));
    float _1539 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _532);
    float _1540 = isnan(_1539) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1539 : min(cbModelParam._m0[25u].z, _1539));
    float _1621;
    float _1623;
    float _1625;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1588 = fma(_760, cbModelParam._m0[13u].z, fma(_756, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _752)) + cbModelParam._m0[13u].w;
        float _1592 = fma(_760, cbModelParam._m0[14u].z, fma(_756, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _752)) + cbModelParam._m0[14u].w;
        float _1596 = fma(_760, cbModelParam._m0[15u].z, fma(_756, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _752)) + cbModelParam._m0[15u].w;
        float _1599 = fma(_701, cbModelParam._m0[13u].z, fma(_700, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _699));
        float _1602 = fma(_701, cbModelParam._m0[14u].z, fma(_700, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _699));
        float _1605 = fma(_701, cbModelParam._m0[15u].z, fma(_700, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _699));
        float _1633;
        if (_1599 > 0.0)
        {
            _1633 = abs((1.0 - _1588) / _1599);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1599 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1588 + 1.0) / _1599);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1633 = frontier_phi_19_17_ladder;
        }
        float _1806;
        if (_1602 > 0.0)
        {
            _1806 = abs((1.0 - _1592) / _1602);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1602 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1592 + 1.0) / _1602);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1806 = frontier_phi_28_24_ladder;
        }
        float _2101;
        if (_1605 > 0.0)
        {
            _2101 = abs((1.0 - _1596) / _1605);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1605 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1596 + 1.0) / _1605);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2101 = frontier_phi_40_35_ladder;
        }
        float _2103 = isnan(_1806) ? _1633 : (isnan(_1633) ? _1806 : min(_1633, _1806));
        float _2104 = isnan(_2101) ? _2103 : (isnan(_2103) ? _2101 : min(_2103, _2101));
        float _2108 = (_2104 * _1599) + _1588;
        float _2109 = (_2104 * _1602) + _1592;
        float _2110 = (_2104 * _1605) + _1596;
        float _2111 = _2104 * 9.9999997473787516355514526367188e-05;
        float _2113 = (-1.0) - _2111;
        float _2115 = _2111 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2110 > _2115) || ((_2110 < _2113) || ((_2109 > _2115) || ((_2109 < _2113) || ((_2108 < _2113) || (_2108 > _2115))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2255 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2110, cbModelParam._m0[9u].z, fma(_2109, cbModelParam._m0[9u].y, _2108 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2110, cbModelParam._m0[10u].z, fma(_2109, cbModelParam._m0[10u].y, _2108 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2110, cbModelParam._m0[11u].z, fma(_2109, cbModelParam._m0[11u].y, _2108 * cbModelParam._m0[11u].x))), _1540);
            frontier_phi_18_40_ladder = _2255.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2255.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2255.x * cbModelParam._m0[1u].y;
        }
        _1621 = frontier_phi_18_40_ladder_2;
        _1623 = frontier_phi_18_40_ladder_1;
        _1625 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1609 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_699, _700, _701), _1540);
        _1621 = _1609.x * cbModelParam._m0[1u].y;
        _1623 = _1609.y * cbModelParam._m0[1u].y;
        _1625 = _1609.z * cbModelParam._m0[1u].y;
    }
    float _1629 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _532);
    float _1630 = isnan(_1629) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1629 : min(cbModelParam._m0[25u].w, _1629));
    float _1723;
    float _1725;
    float _1727;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1687 = fma(_760, cbModelParam._m0[21u].z, fma(_756, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _752)) + cbModelParam._m0[21u].w;
        float _1691 = fma(_760, cbModelParam._m0[22u].z, fma(_756, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _752)) + cbModelParam._m0[22u].w;
        float _1695 = fma(_760, cbModelParam._m0[23u].z, fma(_756, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _752)) + cbModelParam._m0[23u].w;
        float _1698 = fma(_701, cbModelParam._m0[21u].z, fma(_700, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _699));
        float _1701 = fma(_701, cbModelParam._m0[22u].z, fma(_700, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _699));
        float _1704 = fma(_701, cbModelParam._m0[23u].z, fma(_700, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _699));
        float _1811;
        if (_1698 > 0.0)
        {
            _1811 = abs((1.0 - _1687) / _1698);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1698 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1687 + 1.0) / _1698);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1811 = frontier_phi_30_26_ladder;
        }
        float _2128;
        if (_1701 > 0.0)
        {
            _2128 = abs((1.0 - _1691) / _1701);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1701 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1691 + 1.0) / _1701);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2128 = frontier_phi_42_37_ladder;
        }
        float _2455;
        if (_1704 > 0.0)
        {
            _2455 = abs((1.0 - _1695) / _1704);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1704 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1695 + 1.0) / _1704);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2455 = frontier_phi_52_49_ladder;
        }
        float _2457 = isnan(_2128) ? _1811 : (isnan(_1811) ? _2128 : min(_1811, _2128));
        float _2458 = isnan(_2455) ? _2457 : (isnan(_2457) ? _2455 : min(_2457, _2455));
        float _2462 = (_2458 * _1698) + _1687;
        float _2463 = (_2458 * _1701) + _1691;
        float _2464 = (_2458 * _1704) + _1695;
        float _2465 = _2458 * 9.9999997473787516355514526367188e-05;
        float _2466 = (-1.0) - _2465;
        float _2468 = _2465 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2464 > _2468) || ((_2464 < _2466) || ((_2463 > _2468) || ((_2463 < _2466) || ((_2462 < _2466) || (_2462 > _2468))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2582 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2464, cbModelParam._m0[17u].z, fma(_2463, cbModelParam._m0[17u].y, _2462 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2464, cbModelParam._m0[18u].z, fma(_2463, cbModelParam._m0[18u].y, _2462 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2464, cbModelParam._m0[19u].z, fma(_2463, cbModelParam._m0[19u].y, _2462 * cbModelParam._m0[19u].x))), _1630);
            frontier_phi_27_52_ladder = _2582.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2582.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2582.x * cbModelParam._m0[1u].z;
        }
        _1723 = frontier_phi_27_52_ladder_2;
        _1725 = frontier_phi_27_52_ladder_1;
        _1727 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1707 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_699, _700, _701), _1630);
        _1723 = _1707.x * cbModelParam._m0[1u].z;
        _1725 = _1707.y * cbModelParam._m0[1u].z;
        _1727 = _1707.z * cbModelParam._m0[1u].z;
    }
    float _1739 = ((((1.0 - _720) * ((_707 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_720 * _707)) * _691;
    float _1740 = _1739 * ((cbModelParam._m0[1u].w * (_1723 - _1621)) + _1621);
    float _1741 = _1739 * ((cbModelParam._m0[1u].w * (_1725 - _1623)) + _1623);
    float _1742 = _1739 * ((cbModelParam._m0[1u].w * (_1727 - _1625)) + _1625);
    float _1745 = fma(_1742, cbSceneParam._m0[89u].z, fma(_1741, cbSceneParam._m0[89u].y, _1740 * cbSceneParam._m0[89u].x));
    float _1748 = fma(_1742, cbSceneParam._m0[90u].z, fma(_1741, cbSceneParam._m0[90u].y, _1740 * cbSceneParam._m0[90u].x));
    float _1751 = fma(_1742, cbSceneParam._m0[91u].z, fma(_1741, cbSceneParam._m0[91u].y, _1740 * cbSceneParam._m0[91u].x));
    float _1785 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1789 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1793 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1797 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1798 = _1785 / _1797;
    float _1799 = _1789 / _1797;
    float _1800 = _1793 / _1797;
    float _1947;
    float _1948;
    float _1949;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1827 = ((uint(_1800 > cbSceneParam._m0[59u].y) + uint(_1800 > cbSceneParam._m0[59u].x)) + uint(_1800 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1828 = _1827 + 43u;
        uint _1836 = _1827 + 44u;
        uint _1844 = _1827 + 45u;
        uint _1852 = _1827 + 46u;
        float _1863 = fma(_1797, cbSceneParam._m0[_1828].w, fma(_1793, cbSceneParam._m0[_1828].z, fma(_1789, cbSceneParam._m0[_1828].y, _1785 * cbSceneParam._m0[_1828].x)));
        float _1867 = fma(_1797, cbSceneParam._m0[_1836].w, fma(_1793, cbSceneParam._m0[_1836].z, fma(_1789, cbSceneParam._m0[_1836].y, _1785 * cbSceneParam._m0[_1836].x)));
        float _1875 = fma(_1797, cbSceneParam._m0[_1852].w, fma(_1793, cbSceneParam._m0[_1852].z, fma(_1789, cbSceneParam._m0[_1852].y, _1785 * cbSceneParam._m0[_1852].x)));
        float _1880 = cbSceneParam._m0[33u].z * _1875;
        float _1882 = cbSceneParam._m0[33u].w * _1875;
        float _1885 = fma(_1797, cbSceneParam._m0[_1844].w, fma(_1793, cbSceneParam._m0[_1844].z, fma(_1789, cbSceneParam._m0[_1844].y, _1785 * cbSceneParam._m0[_1844].x))) / _1875;
        float _1933 = (cbSceneParam._m0[33u].x - sqrt(((_1799 * _1799) + (_1798 * _1798)) + (_1800 * _1800))) * cbSceneParam._m0[33u].y;
        float _4254 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1940 = (isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1880 + _1863) / _1875, (_1882 + _1867) / _1875), _1885), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1882 + _1863) / _1875, (_1867 - _1880) / _1875), _1885), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1863 - _1880) / _1875, (_1867 - _1882) / _1875), _1885), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1863 - _1882) / _1875, (_1880 + _1867) / _1875), _1885), 0.0)).x), vec4(0.25)));
        _1947 = 1.0 - (_1940 * cbSceneParam._m0[34u].x);
        _1948 = 1.0 - (_1940 * cbSceneParam._m0[34u].y);
        _1949 = 1.0 - (_1940 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1947 = 1.0;
        _1948 = 1.0;
        _1949 = 1.0;
    }
    float _2013;
    float _2015;
    float _2017;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2001 = fma(_1797, cbSceneParam._m0[63u].w, fma(_1793, cbSceneParam._m0[63u].z, fma(_1789, cbSceneParam._m0[63u].y, _1785 * cbSceneParam._m0[63u].x)));
        float _2002 = fma(_1797, cbSceneParam._m0[60u].w, fma(_1793, cbSceneParam._m0[60u].z, fma(_1789, cbSceneParam._m0[60u].y, _1785 * cbSceneParam._m0[60u].x))) / _2001;
        float _2003 = fma(_1797, cbSceneParam._m0[61u].w, fma(_1793, cbSceneParam._m0[61u].z, fma(_1789, cbSceneParam._m0[61u].y, _1785 * cbSceneParam._m0[61u].x))) / _2001;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2002 >= cbSceneParam._m0[64u].x) && (_2003 >= cbSceneParam._m0[64u].y)) && (_2002 <= cbSceneParam._m0[64u].z)) && (_2003 <= cbSceneParam._m0[64u].w))
        {
            float _2141 = fma(_1797, cbSceneParam._m0[62u].w, fma(_1793, cbSceneParam._m0[62u].z, fma(_1789, cbSceneParam._m0[62u].y, _1785 * cbSceneParam._m0[62u].x))) / _2001;
            float _2145 = isnan(cbSceneParam._m0[41u].w) ? _2141 : (isnan(_2141) ? cbSceneParam._m0[41u].w : max(_2141, cbSceneParam._m0[41u].w));
            float _2188 = (cbSceneParam._m0[33u].x - sqrt(((_1799 * _1799) + (_1798 * _1798)) + (_1800 * _1800))) * cbSceneParam._m0[33u].y;
            float _4270 = isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0));
            float _2195 = (isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2002, cbSceneParam._m0[33u].w + _2003), _2145), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2002, _2003 - cbSceneParam._m0[33u].z), _2145), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2002 - cbSceneParam._m0[33u].z, _2003 - cbSceneParam._m0[33u].w), _2145), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2002 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2003), _2145), 0.0)).x), vec4(0.25)));
            float _2199 = 1.0 - (_2195 * cbSceneParam._m0[34u].x);
            float _2200 = 1.0 - (_2195 * cbSceneParam._m0[34u].y);
            float _2201 = 1.0 - (_2195 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2200) ? _1948 : (isnan(_1948) ? _2200 : min(_1948, _2200));
            frontier_phi_39_38_ladder_1 = isnan(_2199) ? _1947 : (isnan(_1947) ? _2199 : min(_1947, _2199));
            frontier_phi_39_38_ladder_2 = isnan(_2201) ? _1949 : (isnan(_1949) ? _2201 : min(_1949, _2201));
        }
        else
        {
            frontier_phi_39_38_ladder = _1948;
            frontier_phi_39_38_ladder_1 = _1947;
            frontier_phi_39_38_ladder_2 = _1949;
        }
        _2013 = frontier_phi_39_38_ladder_1;
        _2015 = frontier_phi_39_38_ladder;
        _2017 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2013 = _1947;
        _2015 = _1948;
        _2017 = _1949;
    }
    uvec4 _2022 = floatBitsToUint(cbInstanceData._m0[_666 + 5u]);
    uint _2024 = _2022.x * 14u;
    uint _2025 = _2024 + 13u;
    float _2032 = _691 + (-1.0);
    float _2037 = (cbLight._m0[_2025].x * _2032) + 1.0;
    float _2038 = (cbLight._m0[_2025].y * _2032) + 1.0;
    float _2039 = (cbLight._m0[_2025].z * _2032) + 1.0;
    float _2040 = (cbLight._m0[_2025].w * _2032) + 1.0;
    uint _2041 = _2024 + 5u;
    float _2047 = isnan(1.0) ? _2038 : (isnan(_2038) ? 1.0 : min(_2038, 1.0));
    uint _2051 = _2024 + 4u;
    float _2060 = isnan(1.0) ? _2037 : (isnan(_2037) ? 1.0 : min(_2037, 1.0));
    uint _2064 = _2024 | 1u;
    float _2075 = dot(vec3(cbLight._m0[_2024].xyz), vec3(_529, _530, _531));
    float _2078 = dot(vec3(cbLight._m0[_2064].xyz), vec3(_529, _530, _531));
    float _4306 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
    float _4317 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
    float _2083 = (isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0))) * 0.3183098733425140380859375;
    float _2085 = (isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0))) * 0.3183098733425140380859375;
    float _2092 = ((cbLight._m0[_2041].x * _2047) * _2085) + (((cbLight._m0[_2051].x * _2013) * _2060) * _2083);
    float _2093 = ((_2047 * cbLight._m0[_2041].y) * _2085) + (((cbLight._m0[_2051].y * _2015) * _2060) * _2083);
    float _2094 = ((_2047 * cbLight._m0[_2041].z) * _2085) + (((cbLight._m0[_2051].z * _2017) * _2060) * _2083);
    uvec4 _2098 = floatBitsToUint(cbLight._m0[_2024 + 12u]);
    bool _2100 = _2098.x == 0u;
    float _2202;
    float _2204;
    float _2206;
    if (_2100)
    {
        _2202 = _2092;
        _2204 = _2093;
        _2206 = _2094;
    }
    else
    {
        uint _2210 = _2024 + 6u;
        float _2226 = (dot(vec3(cbLight._m0[_2024 + 2u].xyz), vec3(_529, _530, _531)) * 0.5) + 0.5;
        float _2227 = _2226 * _2226;
        float _4328 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
        float _2228 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
        float _2229 = isnan(1.0) ? _2039 : (isnan(_2039) ? 1.0 : min(_2039, 1.0));
        _2202 = (((cbLight._m0[_2210].x * 0.3183098733425140380859375) * _2228) * _2229) + _2092;
        _2204 = (((cbLight._m0[_2210].y * 0.3183098733425140380859375) * _2228) * _2229) + _2093;
        _2206 = (((cbLight._m0[_2210].z * 0.3183098733425140380859375) * _2228) * _2229) + _2094;
    }
    bool _2209 = _2098.y == 0u;
    float _2264;
    float _2266;
    float _2268;
    if (_2209)
    {
        _2264 = _2202;
        _2266 = _2204;
        _2268 = _2206;
    }
    else
    {
        uint _2426 = _2024 + 7u;
        float _2442 = (dot(vec3(cbLight._m0[_2024 + 3u].xyz), vec3(_529, _530, _531)) * 0.5) + 0.5;
        float _2443 = _2442 * _2442;
        float _4344 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
        float _2444 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _2445 = isnan(1.0) ? _2040 : (isnan(_2040) ? 1.0 : min(_2040, 1.0));
        _2264 = (((cbLight._m0[_2426].x * 0.3183098733425140380859375) * _2444) * _2445) + _2202;
        _2266 = (((cbLight._m0[_2426].y * 0.3183098733425140380859375) * _2444) * _2445) + _2204;
        _2268 = (((cbLight._m0[_2426].z * 0.3183098733425140380859375) * _2444) * _2445) + _2206;
    }
    uint _2271 = _2024 + 8u;
    float _2284 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2024].w)) * _532) * 0.949999988079071044921875);
    float _2285 = _2284 * _2284;
    float _2286 = cbLight._m0[_2024].x + _608;
    float _2287 = cbLight._m0[_2024].y + _609;
    float _2288 = cbLight._m0[_2024].z + _610;
    float _2292 = inversesqrt(dot(vec3(_2286, _2287, _2288), vec3(_2286, _2287, _2288)));
    float _2293 = _2292 * _2286;
    float _2294 = _2292 * _2287;
    float _2295 = _2292 * _2288;
    float _2296 = dot(vec3(_529, _530, _531), vec3(cbLight._m0[_2024].xyz));
    float _4360 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
    float _2299 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
    float _4371 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _2300 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
    float _2301 = dot(vec3(_529, _530, _531), vec3(_2293, _2294, _2295));
    float _4382 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2304 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _2305 = dot(vec3(cbLight._m0[_2024].xyz), vec3(_2293, _2294, _2295));
    float _4393 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2309 = _2285 * _2285;
    float _2313 = ((_2304 * _2304) * (_2309 + (-1.0))) + 1.0;
    float _2324 = (exp2(log2(1.0 - (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2325 = 1.0 - _2285;
    float _2336 = (0.5 / (((_2300 * ((_2299 * _2325) + _2285)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2325) + _2285) * _2299))) * _2299;
    float _4404 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
    float _2338 = (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * (_2309 / ((_2313 * _2313) * 3.141590118408203125));
    uint _2352 = _2024 + 9u;
    float _2363 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2064].w)) * _532) * 0.949999988079071044921875);
    float _2364 = _2363 * _2363;
    float _2365 = cbLight._m0[_2064].x + _608;
    float _2366 = cbLight._m0[_2064].y + _609;
    float _2367 = cbLight._m0[_2064].z + _610;
    float _2371 = inversesqrt(dot(vec3(_2365, _2366, _2367), vec3(_2365, _2366, _2367)));
    float _2372 = _2371 * _2365;
    float _2373 = _2371 * _2366;
    float _2374 = _2371 * _2367;
    float _2375 = dot(vec3(_529, _530, _531), vec3(cbLight._m0[_2064].xyz));
    float _4415 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
    float _2378 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
    float _2379 = dot(vec3(_529, _530, _531), vec3(_2372, _2373, _2374));
    float _4426 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2382 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
    float _2383 = dot(vec3(cbLight._m0[_2064].xyz), vec3(_2372, _2373, _2374));
    float _4437 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
    float _2387 = _2364 * _2364;
    float _2391 = ((_2382 * _2382) * (_2387 + (-1.0))) + 1.0;
    float _2400 = (exp2(log2(1.0 - (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2401 = 1.0 - _2364;
    float _2411 = (0.5 / (((_2300 * ((_2378 * _2401) + _2364)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2401) + _2364) * _2378))) * _2378;
    float _4448 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2413 = (isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_2387 / ((_2391 * _2391) * 3.141590118408203125));
    float _2423 = (((_2400 * cbLight._m0[_2352].x) * _2413) * _2047) + ((((cbLight._m0[_2271].x * _2013) * _2324) * _2338) * _2060);
    float _2424 = (((_2400 * cbLight._m0[_2352].y) * _2413) * _2047) + ((((cbLight._m0[_2271].y * _2015) * _2324) * _2338) * _2060);
    float _2425 = (((_2400 * cbLight._m0[_2352].z) * _2413) * _2047) + ((((cbLight._m0[_2271].z * _2017) * _2324) * _2338) * _2060);
    float _2481;
    float _2483;
    float _2485;
    if (_2100)
    {
        _2481 = _2423;
        _2483 = _2424;
        _2485 = _2425;
    }
    else
    {
        uint _2487 = _2024 + 2u;
        uint _2491 = _2024 + 10u;
        float _2505 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2487].w)) * _532) * 0.949999988079071044921875);
        float _2506 = _2505 * _2505;
        float _2507 = cbLight._m0[_2487].x + _608;
        float _2508 = cbLight._m0[_2487].y + _609;
        float _2509 = cbLight._m0[_2487].z + _610;
        float _2513 = inversesqrt(dot(vec3(_2507, _2508, _2509), vec3(_2507, _2508, _2509)));
        float _2514 = _2513 * _2507;
        float _2515 = _2513 * _2508;
        float _2516 = _2513 * _2509;
        float _2517 = dot(vec3(_529, _530, _531), vec3(cbLight._m0[_2487].xyz));
        float _4459 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
        float _2520 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _2521 = dot(vec3(_529, _530, _531), vec3(_2514, _2515, _2516));
        float _4470 = isnan(0.0) ? _2521 : (isnan(_2521) ? 0.0 : max(_2521, 0.0));
        float _2524 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _2525 = dot(vec3(cbLight._m0[_2487].xyz), vec3(_2514, _2515, _2516));
        float _4481 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
        float _2529 = _2506 * _2506;
        float _2533 = ((_2524 * _2524) * (_2529 + (-1.0))) + 1.0;
        float _2542 = (exp2(log2(1.0 - (isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2543 = 1.0 - _2506;
        float _2553 = (0.5 / (((_2300 * ((_2520 * _2543) + _2506)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2543) + _2506) * _2520))) * _2520;
        float _4492 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2555 = (isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * (_2529 / ((_2533 * _2533) * 3.141590118408203125));
        float _2556 = isnan(1.0) ? _2039 : (isnan(_2039) ? 1.0 : min(_2039, 1.0));
        _2481 = (((_2542 * cbLight._m0[_2491].x) * _2555) * _2556) + _2423;
        _2483 = (((_2542 * cbLight._m0[_2491].y) * _2555) * _2556) + _2424;
        _2485 = (((_2542 * cbLight._m0[_2491].z) * _2555) * _2556) + _2425;
    }
    float _2587;
    float _2589;
    float _2591;
    if (_2209)
    {
        _2587 = _2481;
        _2589 = _2483;
        _2591 = _2485;
    }
    else
    {
        uint _2598 = _2024 + 3u;
        uint _2602 = _2024 + 11u;
        float _2616 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2598].w)) * _532) * 0.949999988079071044921875);
        float _2617 = _2616 * _2616;
        float _2618 = cbLight._m0[_2598].x + _608;
        float _2619 = cbLight._m0[_2598].y + _609;
        float _2620 = cbLight._m0[_2598].z + _610;
        float _2624 = inversesqrt(dot(vec3(_2618, _2619, _2620), vec3(_2618, _2619, _2620)));
        float _2625 = _2624 * _2618;
        float _2626 = _2624 * _2619;
        float _2627 = _2624 * _2620;
        float _2628 = dot(vec3(_529, _530, _531), vec3(cbLight._m0[_2598].xyz));
        float _4508 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
        float _2631 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _2632 = dot(vec3(_529, _530, _531), vec3(_2625, _2626, _2627));
        float _4519 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
        float _2635 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
        float _2636 = dot(vec3(cbLight._m0[_2598].xyz), vec3(_2625, _2626, _2627));
        float _4530 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
        float _2640 = _2617 * _2617;
        float _2644 = ((_2635 * _2635) * (_2640 + (-1.0))) + 1.0;
        float _2653 = (exp2(log2(1.0 - (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2654 = 1.0 - _2617;
        float _2664 = (0.5 / (((_2300 * ((_2631 * _2654) + _2617)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2654) + _2617) * _2631))) * _2631;
        float _4541 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
        float _2666 = (isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0))) * (_2640 / ((_2644 * _2644) * 3.141590118408203125));
        float _2667 = isnan(1.0) ? _2040 : (isnan(_2040) ? 1.0 : min(_2040, 1.0));
        _2587 = (((_2653 * cbLight._m0[_2602].x) * _2666) * _2667) + _2481;
        _2589 = (((_2653 * cbLight._m0[_2602].y) * _2666) * _2667) + _2483;
        _2591 = (((_2653 * cbLight._m0[_2602].z) * _2666) * _2667) + _2485;
    }
    float _2732;
    float _2734;
    float _2736;
    float _2738;
    float _2740;
    float _2742;
    if (_2022.y == 0u)
    {
        uvec4 _2688 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2689 = _2688.x;
        uint _2700 = uint((float(_2688.y) * floor(float(uint(cbSceneParam._m0[85u].y * _629) / _2689))) + floor(float(uint(cbSceneParam._m0[85u].x * _628) / _2689)));
        float _2710 = (log2(_1800 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2711 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        uint _2714 = uint(isnan(14.0) ? _2711 : (isnan(_2711) ? 14.0 : min(_2711, 14.0)));
        uvec4 _2719 = texelFetch(g_lightClusterGridBuffer, int(((_2714 << 2u) + (_2700 << 6u)) >> 2u));
        uint _2720 = _2719.x;
        uint _2721 = _2688.z;
        float _2799;
        float _2801;
        float _2803;
        float _2805;
        float _2807;
        float _2809;
        if (((((1u << ((_2721 >> 4u) & 15u)) + 4294967295u) & _2720) == 0u) || ((_2721 & 240u) == 0u))
        {
            _2799 = 0.0;
            _2801 = 0.0;
            _2803 = 0.0;
            _2805 = 0.0;
            _2807 = 0.0;
            _2809 = 0.0;
        }
        else
        {
            float _2800;
            float _2802;
            float _2804;
            float _2806;
            float _2808;
            float _2810;
            float _2951 = 0.0;
            float _2952 = 0.0;
            float _2953 = 0.0;
            float _2954 = 0.0;
            float _2955 = 0.0;
            float _2956 = 0.0;
            uint _2957 = 0u;
            uint _2966;
            bool _2967;
            for (;;)
            {
                _2966 = texelFetch(g_lightClassification, int((((_2714 << 5u) + (_2700 << 9u)) + (_2957 << 2u)) >> 2u)).x;
                _2967 = _2966 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_2967)
                {
                    frontier_phi_73_pred = _2956;
                    frontier_phi_73_pred_1 = _2955;
                    frontier_phi_73_pred_2 = _2954;
                    frontier_phi_73_pred_3 = _2953;
                    frontier_phi_73_pred_4 = _2952;
                    frontier_phi_73_pred_5 = _2951;
                }
                else
                {
                    float _3096;
                    float _3097;
                    float _3098;
                    float _3099;
                    float _3100;
                    float _3101;
                    uint _3102;
                    _3096 = _2951;
                    _3097 = _2952;
                    _3098 = _2953;
                    _3099 = _2954;
                    _3100 = _2955;
                    _3101 = _2956;
                    _3102 = _2966;
                    float _3023;
                    float _3024;
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    for (;;)
                    {
                        uint _3106 = uint(findLSB(_3102)) + (_2957 << 5u);
                        uint _3103 = (_3102 + 4294967295u) & _3102;
                        uint _3108 = _3106 * 48u;
                        vec4 _3122 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3108)).x, texelFetch(g_PointLightRenderingBuffer, int(_3108 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3108 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3108 + 3u)).x));
                        uint _3128 = (_3106 * 48u) + 4u;
                        vec4 _3141 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3128)).x, texelFetch(g_PointLightRenderingBuffer, int(_3128 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3128 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3128 + 3u)).x));
                        uint _3147 = (_3106 * 48u) + 8u;
                        vec3 _3158 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3147)).x, texelFetch(g_PointLightRenderingBuffer, int(_3147 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3147 + 2u)).x));
                        float _3162 = _3122.x - _1798;
                        float _3163 = _3122.y - _1799;
                        float _3164 = _3122.z - _1800;
                        float _3165 = dot(vec3(_3162, _3163, _3164), vec3(_3162, _3163, _3164));
                        float _3168 = inversesqrt(_3165);
                        float _3169 = _3168 * _3162;
                        float _3170 = _3168 * _3163;
                        float _3171 = _3168 * _3164;
                        float _3172 = dot(vec3(_647, _650, _653), vec3(_3169, _3170, _3171));
                        float _3177 = 1.0 - (_3165 * _3122.w);
                        float _4567 = isnan(0.0) ? _3177 : (isnan(_3177) ? 0.0 : max(_3177, 0.0));
                        float _3178 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
                        float _3179 = sqrt(_3165) * _3141.w;
                        float _3182 = 1.39999997615814208984375 / (_3179 + 1.39999997615814208984375);
                        float _3183 = _3182 * _3182;
                        float _3186 = ((1.0 - _3183) * _3172) + _3183;
                        float _3189 = _3179 * _3179;
                        float _3193 = ((isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0))) * _3178) / ((_3189 * 0.699999988079071044921875) + 1.0);
                        float _3197 = (-0.0) - _1798;
                        float _3198 = (-0.0) - _1799;
                        float _3199 = (-0.0) - _1800;
                        float _3203 = inversesqrt(dot(vec3(_3197, _3198, _3199), vec3(_3197, _3198, _3199)));
                        float _3204 = _3203 * _3197;
                        float _3205 = _3203 * _3198;
                        float _3206 = _3203 * _3199;
                        float _3213 = exp2(log2(1.0 / ((_3189 * 3.5) + 5.0)) * 0.25);
                        float _3214 = 1.0 - _707;
                        float _3221 = sqrt(1.0 - ((1.0 - (_3214 * _3214)) * (1.0 - (_3213 * _3213))));
                        float _3222 = _3221 * _3221;
                        float _3223 = _3222 * _3222;
                        float _3224 = _3204 + _3169;
                        float _3225 = _3205 + _3170;
                        float _3226 = _3206 + _3171;
                        float _3230 = inversesqrt(dot(vec3(_3224, _3225, _3226), vec3(_3224, _3225, _3226)));
                        float _3234 = dot(vec3(_647, _650, _653), vec3(_3204, _3205, _3206));
                        float _4583 = isnan(0.0) ? _3234 : (isnan(_3234) ? 0.0 : max(_3234, 0.0));
                        float _3237 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
                        float _3238 = dot(vec3(_647, _650, _653), vec3(_3230 * _3224, _3230 * _3225, _3230 * _3226));
                        float _4594 = isnan(0.0) ? _3238 : (isnan(_3238) ? 0.0 : max(_3238, 0.0));
                        float _3241 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
                        float _3245 = ((_3241 * _3241) * (_3223 + (-1.0))) + 1.0;
                        float _3246 = _3182 * _3222;
                        float _3247 = _3246 * _3246;
                        float _3250 = ((1.0 - _3247) * _3172) + _3247;
                        float _4605 = isnan(0.0) ? _3250 : (isnan(_3250) ? 0.0 : max(_3250, 0.0));
                        float _3251 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
                        float _3252 = 1.0 - _3222;
                        float _3262 = (0.5 / (((_3251 * ((_3237 * _3252) + _3222)) + 9.9999999392252902907785028219223e-09) + (((_3251 * _3252) + _3222) * _3237))) * _3251;
                        float _4616 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                        float _3273 = (((_3223 * 3.1415927410125732421875) * (isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0)))) / ((_3245 * _3245) * ((_3189 * 2.1991131305694580078125) + 3.141590118408203125))) * _3178;
                        _3026 = (_3193 * _3141.x) + _3099;
                        _3027 = (_3193 * _3141.y) + _3100;
                        _3028 = (_3193 * _3141.z) + _3101;
                        _3023 = (_3273 * _3158.x) + _3096;
                        _3024 = (_3273 * _3158.y) + _3097;
                        _3025 = (_3273 * _3158.z) + _3098;
                        if (_3103 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3096 = _3023;
                            _3097 = _3024;
                            _3098 = _3025;
                            _3099 = _3026;
                            _3100 = _3027;
                            _3101 = _3028;
                            _3102 = _3103;
                        }
                    }
                    frontier_phi_73_pred = _3028;
                    frontier_phi_73_pred_1 = _3027;
                    frontier_phi_73_pred_2 = _3026;
                    frontier_phi_73_pred_3 = _3025;
                    frontier_phi_73_pred_4 = _3024;
                    frontier_phi_73_pred_5 = _3023;
                }
                _2810 = frontier_phi_73_pred;
                _2808 = frontier_phi_73_pred_1;
                _2806 = frontier_phi_73_pred_2;
                _2804 = frontier_phi_73_pred_3;
                _2802 = frontier_phi_73_pred_4;
                _2800 = frontier_phi_73_pred_5;
                uint _2958 = _2957 + 1u;
                if (_2958 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2951 = _2800;
                    _2952 = _2802;
                    _2953 = _2804;
                    _2954 = _2806;
                    _2955 = _2808;
                    _2956 = _2810;
                    _2957 = _2958;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2799 = _2800;
            _2801 = _2802;
            _2803 = _2804;
            _2805 = _2806;
            _2807 = _2808;
            _2809 = _2810;
        }
        uvec4 _2813 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2814 = _2813.z;
        uint _2816 = (_2814 >> 8u) & 15u;
        float _2919;
        float _2921;
        float _2923;
        float _2925;
        float _2927;
        float _2929;
        if (((4294967295u << _2816) & _2720) == 0u)
        {
            _2919 = _2799;
            _2921 = _2801;
            _2923 = _2803;
            _2925 = _2805;
            _2927 = _2807;
            _2929 = _2809;
        }
        else
        {
            float _2944 = inversesqrt(dot(vec3(_1798, _1799, _1800), vec3(_1798, _1799, _1800)));
            float _2945 = _2944 * _1798;
            float _2946 = _2944 * _1799;
            float _2947 = _2944 * _1800;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_2816 < ((_2814 >> 12u) & 15u))
            {
                float _2920;
                float _2922;
                float _2924;
                float _2926;
                float _2928;
                float _2930;
                float _3079 = _2799;
                float _3080 = _2801;
                float _3081 = _2803;
                float _3082 = _2805;
                float _3083 = _2807;
                float _3084 = _2809;
                uint _3085 = _2816;
                uint _3094;
                bool _3095;
                for (;;)
                {
                    _3094 = texelFetch(g_lightClassification, int((((_2714 << 5u) + (_2700 << 9u)) + (_3085 << 2u)) >> 2u)).x;
                    _3095 = _3094 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3095)
                    {
                        frontier_phi_84_pred = _3083;
                        frontier_phi_84_pred_1 = _3082;
                        frontier_phi_84_pred_2 = _3081;
                        frontier_phi_84_pred_3 = _3080;
                        frontier_phi_84_pred_4 = _3079;
                        frontier_phi_84_pred_5 = _3084;
                    }
                    else
                    {
                        float _3287;
                        float _3288;
                        float _3289;
                        float _3290;
                        float _3291;
                        float _3292;
                        float _3583;
                        float _3584;
                        float _3585;
                        float _3586;
                        float _3587;
                        float _3588;
                        float _3300 = _3079;
                        float _3301 = _3080;
                        float _3302 = _3081;
                        float _3303 = _3082;
                        float _3304 = _3083;
                        float _3305 = _3084;
                        uint _3306 = _3094;
                        uint _3307;
                        vec4 _3332;
                        float _3333;
                        vec4 _3348;
                        vec3 _3360;
                        vec4 _3376;
                        vec4 _3392;
                        float _3439;
                        bool _3440;
                        for (;;)
                        {
                            uint _3317 = ((_3085 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3306));
                            _3307 = (_3306 + 4294967295u) & _3306;
                            uint _3319 = _3317 * 40u;
                            _3332 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3319)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3319 + 3u)).x));
                            _3333 = _3332.w;
                            uint _3335 = (_3317 * 40u) + 4u;
                            _3348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 3u)).x));
                            uint _3350 = (_3317 * 40u) + 8u;
                            _3360 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3350)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 2u)).x));
                            uint _3363 = (_3317 * 40u) + 16u;
                            _3376 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3363)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3363 + 3u)).x));
                            uint _3379 = (_3317 * 40u) + 20u;
                            _3392 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3379)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3379 + 3u)).x));
                            uint _3395 = (_3317 * 40u) + 24u;
                            vec4 _3408 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3395)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 3u)).x));
                            uint _3414 = (_3317 * 40u) + 28u;
                            vec4 _3427 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3414)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3414 + 3u)).x));
                            _3439 = fma(_1800, _3427.z, fma(_1799, _3427.y, _3427.x * _1798)) + _3427.w;
                            _3440 = !((fma(_1800, _3408.z, fma(_1799, _3408.y, _3408.x * _1798)) + _3408.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3440)
                            {
                                float _3467 = _3332.x - _1798;
                                float _3468 = _3332.y - _1799;
                                float _3469 = _3332.z - _1800;
                                float _3470 = dot(vec3(_3467, _3468, _3469), vec3(_3467, _3468, _3469));
                                float _3473 = inversesqrt(_3470);
                                float _3474 = _3473 * _3467;
                                float _3475 = _3473 * _3468;
                                float _3476 = _3473 * _3469;
                                float _3480 = 1.0 - (_3470 / (_3333 * _3333));
                                float _4627 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                                float _3481 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
                                float _3485 = sqrt(_3470) * _3348.w;
                                float _3487 = 1.39999997615814208984375 / (_3485 + 1.39999997615814208984375);
                                float _3488 = _3487 * _3487;
                                float _3491 = ((1.0 - _3488) * dot(vec3(_3474, _3475, _3476), vec3(_647, _650, _653))) + _3488;
                                float _3494 = _3485 * _3485;
                                float _3498 = (fma(_1800, _3376.z, fma(_1799, _3376.y, _3376.x * _1798)) + _3376.w) / _3439;
                                float _3499 = (fma(_1800, _3392.z, fma(_1799, _3392.y, _3392.x * _1798)) + _3392.w) / _3439;
                                float _3503 = 1.0 - dot(vec2(_3498, _3499), vec2(_3498, _3499));
                                float _4643 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0));
                                float _3504 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
                                float _3505 = _3504 * (((isnan(0.0) ? _3491 : (isnan(_3491) ? 0.0 : max(_3491, 0.0))) * _3481) / ((_3494 * 0.699999988079071044921875) + 1.0));
                                float _3517 = exp2(log2(1.0 / ((_3494 * 3.5) + 5.0)) * 0.25);
                                float _3518 = 1.0 - _707;
                                float _3525 = sqrt(1.0 - ((1.0 - (_3518 * _3518)) * (1.0 - (_3517 * _3517))));
                                float _3526 = _3525 * _3525;
                                float _3527 = _3526 * _3526;
                                float _3528 = _3474 - _2945;
                                float _3529 = _3475 - _2946;
                                float _3530 = _3476 - _2947;
                                float _3534 = inversesqrt(dot(vec3(_3528, _3529, _3530), vec3(_3528, _3529, _3530)));
                                float _3538 = dot(vec3(_647, _650, _653), vec3((-0.0) - _2945, (-0.0) - _2946, (-0.0) - _2947));
                                float _4654 = isnan(0.0) ? _3538 : (isnan(_3538) ? 0.0 : max(_3538, 0.0));
                                float _3541 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
                                float _3542 = dot(vec3(_647, _650, _653), vec3(_3534 * _3528, _3534 * _3529, _3534 * _3530));
                                float _4665 = isnan(0.0) ? _3542 : (isnan(_3542) ? 0.0 : max(_3542, 0.0));
                                float _3545 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
                                float _3549 = ((_3545 * _3545) * (_3527 + (-1.0))) + 1.0;
                                float _3550 = _3487 * _3526;
                                float _3551 = _3550 * _3550;
                                float _3557 = ((1.0 - _3551) * dot(vec3(_647, _650, _653), vec3(_3474, _3475, _3476))) + _3551;
                                float _4676 = isnan(0.0) ? _3557 : (isnan(_3557) ? 0.0 : max(_3557, 0.0));
                                float _3558 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
                                float _3559 = 1.0 - _3526;
                                float _3569 = (0.5 / (((_3558 * ((_3541 * _3559) + _3526)) + 9.9999999392252902907785028219223e-09) + (((_3558 * _3559) + _3526) * _3541))) * _3558;
                                float _4687 = isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0));
                                float _3579 = (_3504 * _3481) * (((_3527 * 3.1415927410125732421875) * (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0)))) / ((_3549 * _3549) * ((_3494 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3505 * _3348.y;
                                frontier_phi_90_pred_1 = _3505 * _3348.x;
                                frontier_phi_90_pred_2 = _3579 * _3360.z;
                                frontier_phi_90_pred_3 = _3579 * _3360.y;
                                frontier_phi_90_pred_4 = _3579 * _3360.x;
                                frontier_phi_90_pred_5 = _3505 * _3348.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3587 = frontier_phi_90_pred;
                            _3586 = frontier_phi_90_pred_1;
                            _3585 = frontier_phi_90_pred_2;
                            _3584 = frontier_phi_90_pred_3;
                            _3583 = frontier_phi_90_pred_4;
                            _3588 = frontier_phi_90_pred_5;
                            _3290 = _3586 + _3303;
                            _3291 = _3587 + _3304;
                            _3292 = _3588 + _3305;
                            _3287 = _3583 + _3300;
                            _3288 = _3584 + _3301;
                            _3289 = _3585 + _3302;
                            if (_3307 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3300 = _3287;
                                _3301 = _3288;
                                _3302 = _3289;
                                _3303 = _3290;
                                _3304 = _3291;
                                _3305 = _3292;
                                _3306 = _3307;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3291;
                        frontier_phi_84_pred_1 = _3290;
                        frontier_phi_84_pred_2 = _3289;
                        frontier_phi_84_pred_3 = _3288;
                        frontier_phi_84_pred_4 = _3287;
                        frontier_phi_84_pred_5 = _3292;
                    }
                    _2928 = frontier_phi_84_pred;
                    _2926 = frontier_phi_84_pred_1;
                    _2924 = frontier_phi_84_pred_2;
                    _2922 = frontier_phi_84_pred_3;
                    _2920 = frontier_phi_84_pred_4;
                    _2930 = frontier_phi_84_pred_5;
                    uint _3086 = _3085 + 1u;
                    if (_3086 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3079 = _2920;
                        _3080 = _2922;
                        _3081 = _2924;
                        _3082 = _2926;
                        _3083 = _2928;
                        _3084 = _2930;
                        _3085 = _3086;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _2930;
                frontier_phi_65_66_ladder_1 = _2926;
                frontier_phi_65_66_ladder_2 = _2928;
                frontier_phi_65_66_ladder_3 = _2922;
                frontier_phi_65_66_ladder_4 = _2920;
                frontier_phi_65_66_ladder_5 = _2924;
            }
            else
            {
                frontier_phi_65_66_ladder = _2809;
                frontier_phi_65_66_ladder_1 = _2805;
                frontier_phi_65_66_ladder_2 = _2807;
                frontier_phi_65_66_ladder_3 = _2801;
                frontier_phi_65_66_ladder_4 = _2799;
                frontier_phi_65_66_ladder_5 = _2803;
            }
            _2919 = frontier_phi_65_66_ladder_4;
            _2921 = frontier_phi_65_66_ladder_3;
            _2923 = frontier_phi_65_66_ladder_5;
            _2925 = frontier_phi_65_66_ladder_1;
            _2927 = frontier_phi_65_66_ladder_2;
            _2929 = frontier_phi_65_66_ladder;
        }
        float _2934 = isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0));
        _2732 = (_2934 * _2925) + _2264;
        _2734 = (_2934 * _2927) + _2266;
        _2736 = (_2934 * _2929) + _2268;
        _2738 = ((_2919 * 0.039999999105930328369140625) * _2934) + _2587;
        _2740 = ((_2921 * 0.039999999105930328369140625) * _2934) + _2589;
        _2742 = ((_2923 * 0.039999999105930328369140625) * _2934) + _2591;
    }
    else
    {
        _2732 = _2264;
        _2734 = _2266;
        _2736 = _2268;
        _2738 = _2587;
        _2740 = _2589;
        _2742 = _2591;
    }
    float _4703 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _4714 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _4725 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _2759 = ((isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * (_2732 + ((isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0))) * _691))) + ((_2738 + ((isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0))) * _1529)) * cbPerFrame._m0[3u].x);
    float _2760 = ((isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * (_2734 + ((isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0))) * _691))) + ((_2740 + ((isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))) * _1529)) * cbPerFrame._m0[3u].x);
    float _2761 = ((isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2736 + ((isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0))) * _691))) + ((_2742 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _1529)) * cbPerFrame._m0[3u].x);
    uint _2762 = _666 + 6u;
    float _2770 = _628 / cbSceneParam._m0[86u].x;
    float _2771 = _629 / cbSceneParam._m0[86u].y;
    vec4 _2785 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2770, _2771, (log2((isnan(cbSceneParam._m0[77u].w) ? _551 : (isnan(_551) ? cbSceneParam._m0[77u].w : min(_551, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2787 = _2785.x;
    float _2788 = _2785.y;
    float _2789 = _2785.z;
    float _2790 = _2785.w;
    float _2861;
    float _2863;
    float _2865;
    float _2867;
    if (_551 > cbSceneParam._m0[78u].w)
    {
        float _2824 = isnan(_551) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _551 : min(cbSceneParam._m0[80u].w, _551));
        float _2825 = _2824 / _551;
        float _2836 = _2825 * _601;
        float _2837 = _602 * _2825;
        float _2838 = (-0.0) - _2837;
        float _2839 = _2825 * _603;
        float _2841 = (cbSceneParam._m0[77u].w * _2838) / _2824;
        float _2842 = _2841 + cbSceneParam._m0[79u].w;
        float _2843 = cbSceneParam._m0[79u].w - _2837;
        float _2849 = sqrt(((_2836 * _2836) + (_2837 * _2837)) + (_2839 * _2839));
        float _2852 = (1.0 - (cbSceneParam._m0[77u].w / _2824)) * _2849;
        float _2857 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2859 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3036;
        if (abs((_2838 - _2841) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3036 = ((((_2842 > 0.0) ? exp2(_2857 * _2842) : (2.0 - exp2(_2859 * _2842))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2852;
        }
        else
        {
            float _2980 = 1.0 / cbSceneParam._m0[80u].x;
            float _2981 = isnan(_2843) ? _2842 : (isnan(_2842) ? _2843 : max(_2842, _2843));
            float _2982 = isnan(_2843) ? _2842 : (isnan(_2842) ? _2843 : min(_2842, _2843));
            float _2991 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : min(_2981, 0.0));
            float _2992 = isnan(0.0) ? _2982 : (isnan(_2982) ? 0.0 : min(_2982, 0.0));
            _3036 = ((abs(_2849 / _2838) * cbSceneParam._m0[80u].y) * ((((_2991 - _2992) * 2.0) - ((exp2(_2857 * (isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0)))) - exp2(_2857 * (isnan(0.0) ? _2982 : (isnan(_2982) ? 0.0 : max(_2982, 0.0))))) * _2980)) - ((exp2(_2859 * _2991) - exp2(_2859 * _2992)) * _2980))) + (_2852 * cbSceneParam._m0[80u].z);
        }
        vec4 _3038 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2770, _2771, 1.0), 0.0);
        float _3047 = exp2((_3036 * (-1.44269502162933349609375)) * (1.0 - _3038.w));
        float _3048 = log2(_3047);
        float _3064 = log2(_2790);
        _2861 = (exp2(_3064 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3048 * cbSceneParam._m0[78u].x)) * _3038.x) / cbSceneParam._m0[78u].x)) + _2787;
        _2863 = (exp2(_3064 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3048 * cbSceneParam._m0[78u].y)) * _3038.y) / cbSceneParam._m0[78u].y)) + _2788;
        _2865 = (exp2(_3064 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3048 * cbSceneParam._m0[78u].z)) * _3038.z) / cbSceneParam._m0[78u].z)) + _2789;
        _2867 = _3047 * _2790;
    }
    else
    {
        _2861 = _2787;
        _2863 = _2788;
        _2865 = _2789;
        _2867 = _2790;
    }
    bool _3074;
    vec4 _2877;
    vec4 _2899;
    float _2901;
    float _2905;
    float _2906;
    float _2907;
    float _2908;
    bool _2918;
    for (;;)
    {
        _2877 = cbMatDynParam._m0[0u];
        float _2879 = roundEven(_2877.y);
        bool _2880 = _2879 == 3.0;
        float _2881 = log2(_2867);
        float _2888 = exp2(_2881 * cbSceneParam._m0[78u].x) * _2759;
        float _2889 = exp2(_2881 * cbSceneParam._m0[78u].y) * _2760;
        float _2890 = exp2(_2881 * cbSceneParam._m0[78u].z) * _2761;
        float _2897 = _617 + (-0.5);
        _2899 = cbMtdParam._m0[1u];
        _2901 = _2899.y * _2897;
        float _2904 = (_2879 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2905 = _2904 * (_2880 ? _2888 : (_2888 + (cbSceneParam._m0[72u].w * _2861)));
        _2906 = _2904 * (_2880 ? _2889 : (_2889 + (cbSceneParam._m0[72u].w * _2863)));
        _2907 = _2904 * (_2880 ? _2890 : (_2890 + (cbSceneParam._m0[72u].w * _2865)));
        _2908 = _2897 * 0.999000012874603271484375;
        _2918 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2918)
        {
            if ((cbInstanceData._m0[_666 + 7u].x + _2908) < 0.5)
            {
                _3074 = true;
                break;
            }
        }
        uint _3015 = _667 + uint(_2877.w);
        if ((cbInstanceData._m0[_3015].w < 1.0) && ((cbInstanceData._m0[_3015].w + _2908) < 0.5))
        {
            _3074 = true;
            break;
        }
        if ((_2901 + 1.0) < _2899.x)
        {
            _3074 = true;
            break;
        }
        _3074 = false;
        break;
    }
    float _3278;
    if (_3074)
    {
        discard_state = true;
        _3278 = 0.0;
    }
    else
    {
        _3278 = cbInstanceData._m0[_2762].w;
    }
    SV_Target.x = _2905;
    SV_Target.y = _2906;
    SV_Target.z = _2907;
    SV_Target.w = _3278;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2762].w;
    discard_exit();
}


