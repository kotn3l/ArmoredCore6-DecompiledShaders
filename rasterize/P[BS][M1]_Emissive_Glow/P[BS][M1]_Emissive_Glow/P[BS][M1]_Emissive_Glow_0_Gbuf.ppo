#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _170 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _176 = _170.x * cbMtdParam._m0[9u].x;
    float _177 = _170.y * cbMtdParam._m0[9u].y;
    float _178 = _170.z * cbMtdParam._m0[9u].z;
    vec4 _190 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _197 = cbMtdParam._m0[12u].x + _190.x;
    vec4 _209 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _213 = _209.z;
    float _217 = (_209.x * 2.0) + (-1.0);
    float _219 = (_209.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_217, _219), vec2(_217, _219));
    float _386 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0))));
    vec4 _249 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _274 = fma(_226, _140 * NORMAL.x, fma(_219, _147 * TANGENT.x, (_133 * _126) * _217));
    float _277 = fma(_226, _140 * NORMAL.y, fma(_219, _147 * TANGENT.y, (_133 * _127) * _217));
    float _280 = fma(_226, _140 * NORMAL.z, fma(_219, _147 * TANGENT.z, (_133 * _128) * _217));
    float _284 = inversesqrt(dot(vec3(_274, _277, _280), vec3(_274, _277, _280)));
    float _397 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _408 = isnan(0.0) ? _176 : (isnan(_176) ? 0.0 : max(_176, 0.0));
    float _419 = isnan(0.0) ? _177 : (isnan(_177) ? 0.0 : max(_177, 0.0));
    float _430 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _441 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    uint _304 = uint(roundEven(NORMAL.w)) * 13u;
    uint _306 = (_304 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _312 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0)))) * cbInstanceData._m0[_306].x;
    float _313 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0)))) * cbInstanceData._m0[_306].y;
    float _314 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0)))) * cbInstanceData._m0[_306].z;
    float _452 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
    float _463 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _474 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    uint _324 = _304 + 6u;
    float _358;
    float _359;
    float _360;
    float _361;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _358 = cbInstanceData._m0[_324].w;
        _359 = cbInstanceData._m0[_324].w;
        _360 = cbInstanceData._m0[_324].w;
        _361 = cbInstanceData._m0[_324].w;
    }
    else
    {
        _358 = cbMtdParam._m0[2u].w;
        _359 = 0.0;
        _360 = float(floatBitsToUint(cbInstanceData._m0[_304 + 5u]).x) * 0.0039215688593685626983642578125;
        _361 = TEXCOORD.z;
    }
    SV_Target.x = ((_274 * 0.5) * _284) + 0.500488758087158203125;
    SV_Target.y = ((_277 * 0.5) * _284) + 0.500488758087158203125;
    SV_Target.z = ((_280 * 0.5) * _284) + 0.500488758087158203125;
    SV_Target.w = _359;
    SV_Target_1.x = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
    SV_Target_1.y = isnan(1.0) ? _397 : (isnan(_397) ? 1.0 : min(_397, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _361;
    SV_Target_2.x = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
    SV_Target_2.y = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
    SV_Target_2.z = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
    SV_Target_2.w = _360;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _359;
    SV_Target_4.x = (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].y) * _249.x) + cbMtdParam._m0[11u].x) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_306].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].y) * _249.y) + cbMtdParam._m0[11u].y) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_306].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[11u].z + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].y) * _249.z)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_306].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _358;
}


