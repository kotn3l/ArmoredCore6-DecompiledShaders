#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _122 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _123 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _124 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _129 = inversesqrt(dot(vec3(_122, _123, _124), vec3(_122, _123, _124)));
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _143 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _166 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _172 = _166.x * cbMtdParam._m0[9u].x;
    float _173 = _166.y * cbMtdParam._m0[9u].y;
    float _174 = _166.z * cbMtdParam._m0[9u].z;
    vec4 _190 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _194 = _190.z;
    float _198 = (_190.x * 2.0) + (-1.0);
    float _200 = (_190.y * 2.0) + (-1.0);
    float _201 = dot(vec2(_198, _200), vec2(_198, _200));
    float _367 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _207 = sqrt(1.0 - (isnan(1.0) ? _367 : (isnan(_367) ? 1.0 : min(_367, 1.0))));
    vec4 _230 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _255 = fma(_207, _136 * NORMAL.x, fma(_200, _143 * TANGENT.x, (_129 * _122) * _198));
    float _258 = fma(_207, _136 * NORMAL.y, fma(_200, _143 * TANGENT.y, (_129 * _123) * _198));
    float _261 = fma(_207, _136 * NORMAL.z, fma(_200, _143 * TANGENT.z, (_129 * _124) * _198));
    float _265 = inversesqrt(dot(vec3(_255, _258, _261), vec3(_255, _258, _261)));
    float _378 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _389 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _400 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _411 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _422 = isnan(0.0) ? cbMtdParam._m0[12u].x : (isnan(cbMtdParam._m0[12u].x) ? 0.0 : max(cbMtdParam._m0[12u].x, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _287 = (_285 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _293 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _389 : (isnan(_389) ? 1.0 : min(_389, 1.0)))) * cbInstanceData._m0[_287].x;
    float _294 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _400 : (isnan(_400) ? 1.0 : min(_400, 1.0)))) * cbInstanceData._m0[_287].y;
    float _295 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _411 : (isnan(_411) ? 1.0 : min(_411, 1.0)))) * cbInstanceData._m0[_287].z;
    float _433 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _444 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
    float _455 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    uint _305 = _285 + 6u;
    float _339;
    float _340;
    float _341;
    float _342;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _339 = cbInstanceData._m0[_305].w;
        _340 = cbInstanceData._m0[_305].w;
        _341 = cbInstanceData._m0[_305].w;
        _342 = cbInstanceData._m0[_305].w;
    }
    else
    {
        _339 = cbMtdParam._m0[2u].w;
        _340 = 0.0;
        _341 = float(floatBitsToUint(cbInstanceData._m0[_285 + 5u]).x) * 0.0039215688593685626983642578125;
        _342 = TEXCOORD.z;
    }
    SV_Target.x = ((_255 * 0.5) * _265) + 0.500488758087158203125;
    SV_Target.y = ((_258 * 0.5) * _265) + 0.500488758087158203125;
    SV_Target.z = ((_261 * 0.5) * _265) + 0.500488758087158203125;
    SV_Target.w = _340;
    SV_Target_1.x = isnan(1.0) ? _422 : (isnan(_422) ? 1.0 : min(_422, 1.0));
    SV_Target_1.y = isnan(1.0) ? _378 : (isnan(_378) ? 1.0 : min(_378, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _342;
    SV_Target_2.x = isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0));
    SV_Target_2.y = isnan(1.0) ? _444 : (isnan(_444) ? 1.0 : min(_444, 1.0));
    SV_Target_2.z = isnan(1.0) ? _455 : (isnan(_455) ? 1.0 : min(_455, 1.0));
    SV_Target_2.w = _341;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _340;
    SV_Target_4.x = (((((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].y) * _230.x) + cbMtdParam._m0[11u].x) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_287].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].y) * _230.y) + cbMtdParam._m0[11u].y) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_287].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[11u].z + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].y) * _230.z)) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_287].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _339;
}


