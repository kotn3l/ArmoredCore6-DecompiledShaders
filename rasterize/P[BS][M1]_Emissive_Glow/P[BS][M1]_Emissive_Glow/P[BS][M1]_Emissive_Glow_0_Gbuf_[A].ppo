#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D P_BS_M1_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _147 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _154 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _161 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _184 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _190 = _184.x * cbMtdParam._m0[9u].x;
    float _191 = _184.y * cbMtdParam._m0[9u].y;
    float _192 = _184.z * cbMtdParam._m0[9u].z;
    vec4 _204 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _211 = cbMtdParam._m0[12u].x + _204.x;
    vec4 _223 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _227 = _223.z;
    float _231 = (_223.x * 2.0) + (-1.0);
    float _233 = (_223.y * 2.0) + (-1.0);
    float _234 = dot(vec2(_231, _233), vec2(_231, _233));
    float _496 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _240 = sqrt(1.0 - (isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0))));
    vec4 _263 = texture(sampler2D(P_BS_M1_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _283 = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].y) * _263.x) + cbMtdParam._m0[11u].x) * cbSceneParam._m0[72u].y;
    float _284 = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].y) * _263.y) + cbMtdParam._m0[11u].y) * cbSceneParam._m0[72u].y;
    float _285 = (cbMtdParam._m0[11u].z + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].y) * _263.z)) * cbSceneParam._m0[72u].y;
    float _288 = fma(_240, _154 * NORMAL.x, fma(_233, _161 * TANGENT.x, (_147 * _140) * _231));
    float _291 = fma(_240, _154 * NORMAL.y, fma(_233, _161 * TANGENT.y, (_147 * _141) * _231));
    float _294 = fma(_240, _154 * NORMAL.z, fma(_233, _161 * TANGENT.z, (_147 * _142) * _231));
    float _298 = inversesqrt(dot(vec3(_288, _291, _294), vec3(_288, _291, _294)));
    float _507 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _518 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _300 = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
    float _529 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _301 = isnan(1.0) ? _529 : (isnan(_529) ? 1.0 : min(_529, 1.0));
    float _540 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _302 = isnan(1.0) ? _540 : (isnan(_540) ? 1.0 : min(_540, 1.0));
    float _551 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    uint _305 = uint(roundEven(NORMAL.w));
    vec4 _310 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _312 = _310.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _380 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _562 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
        float _381 = isnan(1.0) ? _562 : (isnan(_562) ? 1.0 : min(_562, 1.0));
        float _385 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _573 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _573 : (isnan(_573) ? 1.0 : min(_573, 1.0))) - _381)) + _381) < ((_312 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _414;
    uint _332;
    vec4 _336;
    float _343;
    float _344;
    float _345;
    float _346;
    float _347;
    float _348;
    float _351;
    float _355;
    vec4 _359;
    float _361;
    float _362;
    bool _373;
    for (;;)
    {
        _332 = _305 * 13u;
        _336 = cbInstanceData._m0[(_332 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _340 = (cbMtdParam._m0[0u].x * _300) * _336.x;
        float _341 = (cbMtdParam._m0[0u].y * _301) * _336.y;
        float _342 = (cbMtdParam._m0[0u].z * _302) * _336.z;
        float _584 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
        _343 = isnan(1.0) ? _584 : (isnan(_584) ? 1.0 : min(_584, 1.0));
        float _595 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
        _344 = isnan(1.0) ? _595 : (isnan(_595) ? 1.0 : min(_595, 1.0));
        float _606 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
        _345 = isnan(1.0) ? _606 : (isnan(_606) ? 1.0 : min(_606, 1.0));
        _346 = _283 * _336.x;
        _347 = _284 * _336.y;
        _348 = _285 * _336.z;
        _351 = cbMtdParam._m0[2u].w;
        _355 = cbInstanceData._m0[_332 + 6u].w;
        float _356 = _312 + (-0.5);
        _359 = cbMtdParam._m0[1u];
        _361 = _359.y * _356;
        _362 = _356 * 0.999000012874603271484375;
        _373 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_373)
        {
            if ((cbInstanceData._m0[_332 + 7u].x + _362) < 0.5)
            {
                _414 = true;
                break;
            }
        }
        if ((_336.w < 1.0) && ((_336.w + _362) < 0.5))
        {
            _414 = true;
            break;
        }
        if ((_361 + 1.0) < _359.x)
        {
            _414 = true;
            break;
        }
        _414 = false;
        break;
    }
    if (_414)
    {
        discard_state = true;
    }
    float _447;
    float _448;
    float _449;
    float _450;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _447 = _355;
        _448 = _355;
        _449 = _355;
        _450 = _355;
    }
    else
    {
        _447 = _351;
        _448 = 0.0;
        _449 = float(floatBitsToUint(cbInstanceData._m0[_332 + 5u]).x) * 0.0039215688593685626983642578125;
        _450 = TEXCOORD.z;
    }
    SV_Target.x = ((_288 * 0.5) * _298) + 0.500488758087158203125;
    SV_Target.y = ((_291 * 0.5) * _298) + 0.500488758087158203125;
    SV_Target.z = ((_294 * 0.5) * _298) + 0.500488758087158203125;
    SV_Target.w = _448;
    SV_Target_1.x = isnan(1.0) ? _551 : (isnan(_551) ? 1.0 : min(_551, 1.0));
    SV_Target_1.y = isnan(1.0) ? _507 : (isnan(_507) ? 1.0 : min(_507, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _450;
    SV_Target_2.x = _343;
    SV_Target_2.y = _344;
    SV_Target_2.z = _345;
    SV_Target_2.w = _449;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _448;
    SV_Target_4.x = _346 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _347 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _348 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _447;
    discard_exit();
}


