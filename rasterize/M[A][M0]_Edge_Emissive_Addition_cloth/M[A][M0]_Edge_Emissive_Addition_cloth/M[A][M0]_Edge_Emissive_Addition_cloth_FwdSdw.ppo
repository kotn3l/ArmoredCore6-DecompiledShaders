#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _735;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _175;
    float _176;
    float _177;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
    }
    else
    {
        _175 = _168;
        _176 = _169;
        _177 = _170;
    }
    vec4 _197 = texture(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _203 = _197.x * cbMtdParam._m0[9u].x;
    float _204 = _197.y * cbMtdParam._m0[9u].y;
    float _205 = _197.z * cbMtdParam._m0[9u].z;
    vec4 _227 = texture(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _235 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _236 = _235 * _175;
    float _237 = _235 * _176;
    float _238 = _235 * _177;
    float _3153 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _3164 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _3175 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _258 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _299 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _309 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _299);
    float _310 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _299);
    float _311 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _299);
    float _315 = inversesqrt(dot(vec3(_309, _310, _311), vec3(_309, _310, _311)));
    float _316 = _309 * _315;
    float _317 = _310 * _315;
    float _318 = _311 * _315;
    float _324 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _325 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _346 = fma(_238, cbSceneParam._m0[5u].z, fma(_237, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _236));
    float _349 = fma(_238, cbSceneParam._m0[6u].z, fma(_237, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _236));
    float _352 = fma(_238, cbSceneParam._m0[7u].z, fma(_237, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _236));
    uint _365 = uint(roundEven(NORMAL.w)) * 13u;
    uint _367 = _365 + 9u;
    uint _368 = _367 + uint(cbMatDynParam._m0[0u].w);
    float _374 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3153 : (isnan(_3153) ? 1.0 : min(_3153, 1.0)))) * cbInstanceData._m0[_368].x;
    float _375 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3164 : (isnan(_3164) ? 1.0 : min(_3164, 1.0)))) * cbInstanceData._m0[_368].y;
    float _376 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3175 : (isnan(_3175) ? 1.0 : min(_3175, 1.0)))) * cbInstanceData._m0[_368].z;
    float _3186 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _377 = isnan(1.0) ? _3186 : (isnan(_3186) ? 1.0 : min(_3186, 1.0));
    float _3197 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _378 = isnan(1.0) ? _3197 : (isnan(_3197) ? 1.0 : min(_3197, 1.0));
    float _3208 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _379 = isnan(1.0) ? _3208 : (isnan(_3208) ? 1.0 : min(_3208, 1.0));
    vec4 _388 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _324, cbSceneParam._m0[86u].y * _325));
    float _391 = _388.x * TEXCOORD.z;
    float _392 = dot(vec3(_236, _237, _238), vec3(_316, _317, _318));
    float _395 = _392 * 2.0;
    float _400 = (_395 * _236) - _316;
    float _401 = (_395 * _237) - _317;
    float _402 = (_395 * _238) - _318;
    float _424 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _428 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _432 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _734;
    float _736;
    float _737;
    float _738;
    float _739;
    float _740;
    float _741;
    float _742;
    float _743;
    float _744;
    float _745;
    float _746;
    float _747;
    float _748;
    float _749;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _459 = fma(_432, cbModelParam._m0[26u].z, fma(_428, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _424));
        float _463 = fma(_432, cbModelParam._m0[27u].z, fma(_428, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _424));
        float _467 = fma(_432, cbModelParam._m0[28u].z, fma(_428, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _424));
        float _492 = _424 + _236;
        float _493 = _428 + _237;
        float _494 = _432 + _238;
        float _504 = fma(_494, cbModelParam._m0[26u].z, fma(_493, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _492)) - _459;
        float _505 = fma(_494, cbModelParam._m0[27u].z, fma(_493, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _492)) - _463;
        float _506 = fma(_494, cbModelParam._m0[28u].z, fma(_493, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _492)) - _467;
        float _510 = inversesqrt(dot(vec3(_504, _505, _506), vec3(_504, _505, _506)));
        float _523 = ((_510 * _504) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_459 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _524 = ((_510 * _505) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_463 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _525 = ((_510 * _506) / cbModelParam._m0[34u].z) + ((((((_467 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _528 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_523, _524, _525), 0.0);
        vec4 _535 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_523, _524, _525), 0.0);
        vec4 _542 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_523, _524, _525), 0.0);
        vec4 _549 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_523, _524, _525), 0.0);
        float _562 = exp2((_528.w + (-0.5)) * 20.0) * 2.0;
        float _563 = _562 * (_528.x + (-0.5));
        float _564 = _562 * (_528.y + (-0.5));
        float _565 = _562 * (_528.z + (-0.5));
        float _572 = exp2((_535.w + (-0.5)) * 20.0) * 2.0;
        float _573 = _572 * (_535.x + (-0.5));
        float _574 = _572 * (_535.y + (-0.5));
        float _575 = _572 * (_535.z + (-0.5));
        float _582 = exp2((_542.w + (-0.5)) * 20.0) * 2.0;
        float _583 = _582 * (_542.x + (-0.5));
        float _584 = _582 * (_542.y + (-0.5));
        float _585 = _582 * (_542.z + (-0.5));
        float _592 = exp2((_549.w + (-0.5)) * 20.0) * 2.0;
        float _593 = _592 * (_549.x + (-0.5));
        float _594 = _592 * (_549.y + (-0.5));
        float _595 = _592 * (_549.z + (-0.5));
        float _596 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
        float _597 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
        float _598 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
        float _599 = _563 * 0.5;
        float _600 = _573 * 0.5;
        float _601 = _583 * 0.5;
        float _602 = dot(vec3(_599, _600, _601), vec3(_599, _600, _601));
        float _607 = (_602 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_602);
        float _616 = (dot(vec3(_236, _237, _238), vec3(_607 * _599, _607 * _600, _607 * _601)) + 1.0) * 0.5;
        float _3234 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
        float _626 = sqrt(((_600 * _600) + (_599 * _599)) + (_601 * _601)) / (_596 + 9.9999997473787516355514526367188e-06);
        float _3245 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
        float _627 = isnan(1.0) ? _3245 : (isnan(_3245) ? 1.0 : min(_3245, 1.0));
        float _628 = _627 * 2.0;
        float _632 = (1.0 - _627) / (_627 + 1.0);
        float _3256 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
        float _633 = isnan(1.0) ? _3256 : (isnan(_3256) ? 1.0 : min(_3256, 1.0));
        float _642 = ((((1.0 - _633) * (_628 + 2.0)) * exp2(log2(isnan(1.0) ? _3234 : (isnan(_3234) ? 1.0 : min(_3234, 1.0))) * (_628 + 1.0))) + _633) * _596;
        float _643 = _564 * 0.5;
        float _644 = _574 * 0.5;
        float _645 = _584 * 0.5;
        float _646 = dot(vec3(_643, _644, _645), vec3(_643, _644, _645));
        float _651 = (_646 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_646);
        float _659 = (dot(vec3(_236, _237, _238), vec3(_651 * _643, _651 * _644, _651 * _645)) + 1.0) * 0.5;
        float _3267 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
        float _668 = sqrt(((_644 * _644) + (_643 * _643)) + (_645 * _645)) / (_597 + 9.9999997473787516355514526367188e-06);
        float _3278 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
        float _669 = isnan(1.0) ? _3278 : (isnan(_3278) ? 1.0 : min(_3278, 1.0));
        float _670 = _669 * 2.0;
        float _674 = (1.0 - _669) / (_669 + 1.0);
        float _3289 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
        float _675 = isnan(1.0) ? _3289 : (isnan(_3289) ? 1.0 : min(_3289, 1.0));
        float _684 = ((((1.0 - _675) * (_670 + 2.0)) * exp2(log2(isnan(1.0) ? _3267 : (isnan(_3267) ? 1.0 : min(_3267, 1.0))) * (_670 + 1.0))) + _675) * _597;
        float _685 = _565 * 0.5;
        float _686 = _575 * 0.5;
        float _687 = _585 * 0.5;
        float _688 = dot(vec3(_685, _686, _687), vec3(_685, _686, _687));
        float _693 = (_688 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_688);
        float _701 = (dot(vec3(_236, _237, _238), vec3(_693 * _685, _693 * _686, _693 * _687)) + 1.0) * 0.5;
        float _3300 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
        float _710 = sqrt(((_686 * _686) + (_685 * _685)) + (_687 * _687)) / (_598 + 9.9999997473787516355514526367188e-06);
        float _3311 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
        float _711 = isnan(1.0) ? _3311 : (isnan(_3311) ? 1.0 : min(_3311, 1.0));
        float _712 = _711 * 2.0;
        float _716 = (1.0 - _711) / (_711 + 1.0);
        float _3322 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
        float _717 = isnan(1.0) ? _3322 : (isnan(_3322) ? 1.0 : min(_3322, 1.0));
        float _726 = ((((1.0 - _717) * (_712 + 2.0)) * exp2(log2(isnan(1.0) ? _3300 : (isnan(_3300) ? 1.0 : min(_3300, 1.0))) * (_712 + 1.0))) + _717) * _598;
        _734 = _565;
        _736 = _564;
        _737 = _563;
        _738 = _575;
        _739 = _574;
        _740 = _573;
        _741 = _585;
        _742 = _584;
        _743 = _583;
        _744 = _598;
        _745 = _597;
        _746 = _596;
        _747 = cbModelParam._m0[36u].z * (isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0)));
        _748 = cbModelParam._m0[36u].z * (isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0)));
        _749 = cbModelParam._m0[36u].z * (isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0)));
    }
    else
    {
        _734 = _735;
        _736 = _735;
        _737 = _735;
        _738 = _735;
        _739 = _735;
        _740 = _735;
        _741 = _735;
        _742 = _735;
        _743 = _735;
        _744 = _735;
        _745 = _735;
        _746 = _735;
        _747 = 0.0;
        _748 = 0.0;
        _749 = 0.0;
    }
    float _1044;
    float _1045;
    float _1046;
    float _1047;
    float _1048;
    float _1049;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1058;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _775 = fma(_432, cbModelParam._m0[30u].z, fma(_428, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _424));
        float _779 = fma(_432, cbModelParam._m0[31u].z, fma(_428, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _424));
        float _783 = fma(_432, cbModelParam._m0[32u].z, fma(_428, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _424));
        float _806 = _424 + _236;
        float _807 = _428 + _237;
        float _808 = _432 + _238;
        float _818 = fma(_808, cbModelParam._m0[30u].z, fma(_807, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _806)) - _775;
        float _819 = fma(_808, cbModelParam._m0[31u].z, fma(_807, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _806)) - _779;
        float _820 = fma(_808, cbModelParam._m0[32u].z, fma(_807, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _806)) - _783;
        float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
        float _837 = ((_824 * _818) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_775 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _838 = ((_824 * _819) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_779 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _839 = ((_824 * _820) / cbModelParam._m0[35u].z) + ((((((_783 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _841 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _848 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _855 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _862 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        float _874 = exp2((_841.w + (-0.5)) * 20.0) * 2.0;
        float _875 = _874 * (_841.x + (-0.5));
        float _876 = _874 * (_841.y + (-0.5));
        float _877 = _874 * (_841.z + (-0.5));
        float _884 = exp2((_848.w + (-0.5)) * 20.0) * 2.0;
        float _885 = _884 * (_848.x + (-0.5));
        float _886 = _884 * (_848.y + (-0.5));
        float _887 = _884 * (_848.z + (-0.5));
        float _894 = exp2((_855.w + (-0.5)) * 20.0) * 2.0;
        float _895 = _894 * (_855.x + (-0.5));
        float _896 = _894 * (_855.y + (-0.5));
        float _897 = _894 * (_855.z + (-0.5));
        float _904 = exp2((_862.w + (-0.5)) * 20.0) * 2.0;
        float _905 = _904 * (_862.x + (-0.5));
        float _906 = _904 * (_862.y + (-0.5));
        float _907 = _904 * (_862.z + (-0.5));
        float _908 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
        float _909 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _910 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
        float _911 = _875 * 0.5;
        float _912 = _885 * 0.5;
        float _913 = _895 * 0.5;
        float _914 = dot(vec3(_911, _912, _913), vec3(_911, _912, _913));
        float _919 = (_914 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_914);
        float _927 = (dot(vec3(_236, _237, _238), vec3(_919 * _911, _919 * _912, _919 * _913)) + 1.0) * 0.5;
        float _3363 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
        float _936 = sqrt(((_912 * _912) + (_911 * _911)) + (_913 * _913)) / (_908 + 9.9999997473787516355514526367188e-06);
        float _3374 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        float _937 = isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0));
        float _938 = _937 * 2.0;
        float _942 = (1.0 - _937) / (_937 + 1.0);
        float _3385 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _943 = isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0));
        float _952 = ((((1.0 - _943) * (_938 + 2.0)) * exp2(log2(isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0))) * (_938 + 1.0))) + _943) * _908;
        float _953 = _876 * 0.5;
        float _954 = _886 * 0.5;
        float _955 = _896 * 0.5;
        float _956 = dot(vec3(_953, _954, _955), vec3(_953, _954, _955));
        float _961 = (_956 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_956);
        float _969 = (dot(vec3(_236, _237, _238), vec3(_961 * _953, _961 * _954, _961 * _955)) + 1.0) * 0.5;
        float _3396 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
        float _978 = sqrt(((_954 * _954) + (_953 * _953)) + (_955 * _955)) / (_909 + 9.9999997473787516355514526367188e-06);
        float _3407 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _979 = isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0));
        float _980 = _979 * 2.0;
        float _984 = (1.0 - _979) / (_979 + 1.0);
        float _3418 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _985 = isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0));
        float _994 = ((((1.0 - _985) * (_980 + 2.0)) * exp2(log2(isnan(1.0) ? _3396 : (isnan(_3396) ? 1.0 : min(_3396, 1.0))) * (_980 + 1.0))) + _985) * _909;
        float _995 = _877 * 0.5;
        float _996 = _887 * 0.5;
        float _997 = _897 * 0.5;
        float _998 = dot(vec3(_995, _996, _997), vec3(_995, _996, _997));
        float _1003 = (_998 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_998);
        float _1011 = (dot(vec3(_236, _237, _238), vec3(_1003 * _995, _1003 * _996, _1003 * _997)) + 1.0) * 0.5;
        float _3429 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
        float _1020 = sqrt(((_996 * _996) + (_995 * _995)) + (_997 * _997)) / (_910 + 9.9999997473787516355514526367188e-06);
        float _3440 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1021 = isnan(1.0) ? _3440 : (isnan(_3440) ? 1.0 : min(_3440, 1.0));
        float _1022 = _1021 * 2.0;
        float _1026 = (1.0 - _1021) / (_1021 + 1.0);
        float _3451 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1027 = isnan(1.0) ? _3451 : (isnan(_3451) ? 1.0 : min(_3451, 1.0));
        float _1036 = ((((1.0 - _1027) * (_1022 + 2.0)) * exp2(log2(isnan(1.0) ? _3429 : (isnan(_3429) ? 1.0 : min(_3429, 1.0))) * (_1022 + 1.0))) + _1027) * _910;
        _1044 = _877;
        _1045 = _876;
        _1046 = _875;
        _1047 = _887;
        _1048 = _886;
        _1049 = _885;
        _1050 = _897;
        _1051 = _896;
        _1052 = _895;
        _1053 = _910;
        _1054 = _909;
        _1055 = _908;
        _1056 = cbModelParam._m0[36u].w * (isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0)));
        _1057 = cbModelParam._m0[36u].w * (isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0)));
        _1058 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0)));
    }
    else
    {
        _1044 = _735;
        _1045 = _735;
        _1046 = _735;
        _1047 = _735;
        _1048 = _735;
        _1049 = _735;
        _1050 = _735;
        _1051 = _735;
        _1052 = _735;
        _1053 = _735;
        _1054 = _735;
        _1055 = _735;
        _1056 = 0.0;
        _1057 = 0.0;
        _1058 = 0.0;
    }
    float _1068 = (cbModelParam._m0[1u].x * (_1056 - _747)) + _747;
    float _1069 = (cbModelParam._m0[1u].x * (_1057 - _748)) + _748;
    float _1070 = (cbModelParam._m0[1u].x * (_1058 - _749)) + _749;
    float _1091 = fma(_1070, cbSceneParam._m0[89u].z, fma(_1069, cbSceneParam._m0[89u].y, _1068 * cbSceneParam._m0[89u].x));
    float _1094 = fma(_1070, cbSceneParam._m0[90u].z, fma(_1069, cbSceneParam._m0[90u].y, _1068 * cbSceneParam._m0[90u].x));
    float _1097 = fma(_1070, cbSceneParam._m0[91u].z, fma(_1069, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1068));
    float _1112 = _400 * 0.5;
    float _1113 = _401 * 0.5;
    float _1114 = _402 * 0.5;
    float _1115 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_1046, _1049, _1052, _1055));
    float _1118 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_1045, _1048, _1051, _1054));
    float _1121 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_1044, _1047, _1050, _1053));
    float _1155;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1128 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_734, _738, _741, _744));
        float _1132 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_736, _739, _742, _745));
        float _1136 = dot(vec4(_1112, _1113, _1114, 1.0), vec4(_737, _740, _743, _746));
        float _1143 = dot(vec4(cbModelParam._m0[39u]), vec4(_1112, _1113, _1114, 1.0));
        _1155 = dot(vec3(isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0)), isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0)), isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1143) ? 0.0 : (isnan(0.0) ? _1143 : max(0.0, _1143))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1155 = 1.0;
    }
    float _1166;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1157 = dot(vec4(cbModelParam._m0[40u]), vec4(_1112, _1113, _1114, 1.0));
        _1166 = dot(vec3(isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0)), isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0)), isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1157) ? 0.0 : (isnan(0.0) ? _1157 : max(0.0, _1157))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1166 = 1.0;
    }
    float _1170 = (_1166 * cbModelParam._m0[1u].x) + (_1155 * (1.0 - cbModelParam._m0[1u].x));
    float _1179 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1261;
    float _1263;
    float _1265;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1228 = fma(_432, cbModelParam._m0[13u].z, fma(_428, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _424)) + cbModelParam._m0[13u].w;
        float _1232 = fma(_432, cbModelParam._m0[14u].z, fma(_428, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _424)) + cbModelParam._m0[14u].w;
        float _1236 = fma(_432, cbModelParam._m0[15u].z, fma(_428, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _424)) + cbModelParam._m0[15u].w;
        float _1239 = fma(_402, cbModelParam._m0[13u].z, fma(_401, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _400));
        float _1242 = fma(_402, cbModelParam._m0[14u].z, fma(_401, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _400));
        float _1245 = fma(_402, cbModelParam._m0[15u].z, fma(_401, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _400));
        float _1271;
        if (_1239 > 0.0)
        {
            _1271 = abs((1.0 - _1228) / _1239);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1239 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1228 + 1.0) / _1239);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1271 = frontier_phi_16_14_ladder;
        }
        float _1445;
        if (_1242 > 0.0)
        {
            _1445 = abs((1.0 - _1232) / _1242);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1242 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1232 + 1.0) / _1242);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1445 = frontier_phi_25_21_ladder;
        }
        float _1742;
        if (_1245 > 0.0)
        {
            _1742 = abs((1.0 - _1236) / _1245);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1245 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1236 + 1.0) / _1245);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1742 = frontier_phi_37_32_ladder;
        }
        float _1744 = isnan(_1445) ? _1271 : (isnan(_1271) ? _1445 : min(_1271, _1445));
        float _1745 = isnan(_1742) ? _1744 : (isnan(_1744) ? _1742 : min(_1744, _1742));
        float _1749 = (_1745 * _1239) + _1228;
        float _1750 = (_1745 * _1242) + _1232;
        float _1751 = (_1745 * _1245) + _1236;
        float _1752 = _1745 * 9.9999997473787516355514526367188e-05;
        float _1754 = (-1.0) - _1752;
        float _1756 = _1752 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1751 > _1756) || ((_1751 < _1754) || ((_1750 > _1756) || ((_1750 < _1754) || ((_1749 < _1754) || (_1749 > _1756))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1896 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1751, cbModelParam._m0[9u].z, fma(_1750, cbModelParam._m0[9u].y, _1749 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1751, cbModelParam._m0[10u].z, fma(_1750, cbModelParam._m0[10u].y, _1749 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1751, cbModelParam._m0[11u].z, fma(_1750, cbModelParam._m0[11u].y, _1749 * cbModelParam._m0[11u].x))), _1179);
            frontier_phi_15_37_ladder = _1896.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1896.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1896.z * cbModelParam._m0[1u].y;
        }
        _1261 = frontier_phi_15_37_ladder_1;
        _1263 = frontier_phi_15_37_ladder;
        _1265 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1249 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_400, _401, _402), _1179);
        _1261 = _1249.x * cbModelParam._m0[1u].y;
        _1263 = _1249.y * cbModelParam._m0[1u].y;
        _1265 = _1249.z * cbModelParam._m0[1u].y;
    }
    float _1268 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1361;
    float _1363;
    float _1365;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1325 = fma(_432, cbModelParam._m0[21u].z, fma(_428, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _424)) + cbModelParam._m0[21u].w;
        float _1329 = fma(_432, cbModelParam._m0[22u].z, fma(_428, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _424)) + cbModelParam._m0[22u].w;
        float _1333 = fma(_432, cbModelParam._m0[23u].z, fma(_428, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _424)) + cbModelParam._m0[23u].w;
        float _1336 = fma(_402, cbModelParam._m0[21u].z, fma(_401, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _400));
        float _1339 = fma(_402, cbModelParam._m0[22u].z, fma(_401, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _400));
        float _1342 = fma(_402, cbModelParam._m0[23u].z, fma(_401, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _400));
        float _1450;
        if (_1336 > 0.0)
        {
            _1450 = abs((1.0 - _1325) / _1336);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1336 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1325 + 1.0) / _1336);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1450 = frontier_phi_27_23_ladder;
        }
        float _1769;
        if (_1339 > 0.0)
        {
            _1769 = abs((1.0 - _1329) / _1339);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1339 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1329 + 1.0) / _1339);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1769 = frontier_phi_39_34_ladder;
        }
        float _2042;
        if (_1342 > 0.0)
        {
            _2042 = abs((1.0 - _1333) / _1342);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1342 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1333 + 1.0) / _1342);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2042 = frontier_phi_49_46_ladder;
        }
        float _2044 = isnan(_1769) ? _1450 : (isnan(_1450) ? _1769 : min(_1450, _1769));
        float _2045 = isnan(_2042) ? _2044 : (isnan(_2044) ? _2042 : min(_2044, _2042));
        float _2049 = (_2045 * _1336) + _1325;
        float _2050 = (_2045 * _1339) + _1329;
        float _2051 = (_2045 * _1342) + _1333;
        float _2052 = _2045 * 9.9999997473787516355514526367188e-05;
        float _2053 = (-1.0) - _2052;
        float _2055 = _2052 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2051 > _2055) || ((_2051 < _2053) || ((_2050 > _2055) || ((_2050 < _2053) || ((_2049 < _2053) || (_2049 > _2055))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2142 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2051, cbModelParam._m0[17u].z, fma(_2050, cbModelParam._m0[17u].y, _2049 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2051, cbModelParam._m0[18u].z, fma(_2050, cbModelParam._m0[18u].y, _2049 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2051, cbModelParam._m0[19u].z, fma(_2050, cbModelParam._m0[19u].y, _2049 * cbModelParam._m0[19u].x))), _1268);
            frontier_phi_24_49_ladder = _2142.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2142.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2142.x * cbModelParam._m0[1u].z;
        }
        _1361 = frontier_phi_24_49_ladder_2;
        _1363 = frontier_phi_24_49_ladder_1;
        _1365 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1345 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_400, _401, _402), _1268);
        _1361 = _1345.x * cbModelParam._m0[1u].z;
        _1363 = _1345.y * cbModelParam._m0[1u].z;
        _1365 = _1345.z * cbModelParam._m0[1u].z;
    }
    float _1377 = _391 * 0.01200000010430812835693359375;
    float _1379 = _1377 * ((cbModelParam._m0[1u].w * (_1361 - _1261)) + _1261);
    float _1380 = _1377 * ((cbModelParam._m0[1u].w * (_1363 - _1263)) + _1263);
    float _1381 = _1377 * ((cbModelParam._m0[1u].w * (_1365 - _1265)) + _1265);
    float _1384 = fma(_1381, cbSceneParam._m0[89u].z, fma(_1380, cbSceneParam._m0[89u].y, _1379 * cbSceneParam._m0[89u].x));
    float _1387 = fma(_1381, cbSceneParam._m0[90u].z, fma(_1380, cbSceneParam._m0[90u].y, _1379 * cbSceneParam._m0[90u].x));
    float _1390 = fma(_1381, cbSceneParam._m0[91u].z, fma(_1380, cbSceneParam._m0[91u].y, _1379 * cbSceneParam._m0[91u].x));
    float _1424 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1428 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1432 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1436 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1437 = _1424 / _1436;
    float _1438 = _1428 / _1436;
    float _1439 = _1432 / _1436;
    float _1586;
    float _1587;
    float _1588;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1466 = ((uint(_1439 > cbSceneParam._m0[59u].y) + uint(_1439 > cbSceneParam._m0[59u].x)) + uint(_1439 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1467 = _1466 + 43u;
        uint _1475 = _1466 + 44u;
        uint _1483 = _1466 + 45u;
        uint _1491 = _1466 + 46u;
        float _1502 = fma(_1436, cbSceneParam._m0[_1467].w, fma(_1432, cbSceneParam._m0[_1467].z, fma(_1428, cbSceneParam._m0[_1467].y, _1424 * cbSceneParam._m0[_1467].x)));
        float _1506 = fma(_1436, cbSceneParam._m0[_1475].w, fma(_1432, cbSceneParam._m0[_1475].z, fma(_1428, cbSceneParam._m0[_1475].y, _1424 * cbSceneParam._m0[_1475].x)));
        float _1514 = fma(_1436, cbSceneParam._m0[_1491].w, fma(_1432, cbSceneParam._m0[_1491].z, fma(_1428, cbSceneParam._m0[_1491].y, _1424 * cbSceneParam._m0[_1491].x)));
        float _1519 = cbSceneParam._m0[33u].z * _1514;
        float _1521 = cbSceneParam._m0[33u].w * _1514;
        float _1524 = fma(_1436, cbSceneParam._m0[_1483].w, fma(_1432, cbSceneParam._m0[_1483].z, fma(_1428, cbSceneParam._m0[_1483].y, _1424 * cbSceneParam._m0[_1483].x))) / _1514;
        float _1572 = (cbSceneParam._m0[33u].x - sqrt(((_1438 * _1438) + (_1437 * _1437)) + (_1439 * _1439))) * cbSceneParam._m0[33u].y;
        float _3577 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1579 = (isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1519 + _1502) / _1514, (_1521 + _1506) / _1514), _1524), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1521 + _1502) / _1514, (_1506 - _1519) / _1514), _1524), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1502 - _1519) / _1514, (_1506 - _1521) / _1514), _1524), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1502 - _1521) / _1514, (_1519 + _1506) / _1514), _1524), 0.0)).x), vec4(0.25)));
        _1586 = 1.0 - (_1579 * cbSceneParam._m0[34u].x);
        _1587 = 1.0 - (_1579 * cbSceneParam._m0[34u].y);
        _1588 = 1.0 - (_1579 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1586 = 1.0;
        _1587 = 1.0;
        _1588 = 1.0;
    }
    float _1652;
    float _1654;
    float _1656;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1640 = fma(_1436, cbSceneParam._m0[63u].w, fma(_1432, cbSceneParam._m0[63u].z, fma(_1428, cbSceneParam._m0[63u].y, _1424 * cbSceneParam._m0[63u].x)));
        float _1641 = fma(_1436, cbSceneParam._m0[60u].w, fma(_1432, cbSceneParam._m0[60u].z, fma(_1428, cbSceneParam._m0[60u].y, _1424 * cbSceneParam._m0[60u].x))) / _1640;
        float _1642 = fma(_1436, cbSceneParam._m0[61u].w, fma(_1432, cbSceneParam._m0[61u].z, fma(_1428, cbSceneParam._m0[61u].y, _1424 * cbSceneParam._m0[61u].x))) / _1640;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1641 >= cbSceneParam._m0[64u].x) && (_1642 >= cbSceneParam._m0[64u].y)) && (_1641 <= cbSceneParam._m0[64u].z)) && (_1642 <= cbSceneParam._m0[64u].w))
        {
            float _1782 = fma(_1436, cbSceneParam._m0[62u].w, fma(_1432, cbSceneParam._m0[62u].z, fma(_1428, cbSceneParam._m0[62u].y, _1424 * cbSceneParam._m0[62u].x))) / _1640;
            float _1786 = isnan(cbSceneParam._m0[41u].w) ? _1782 : (isnan(_1782) ? cbSceneParam._m0[41u].w : max(_1782, cbSceneParam._m0[41u].w));
            float _1829 = (cbSceneParam._m0[33u].x - sqrt(((_1438 * _1438) + (_1437 * _1437)) + (_1439 * _1439))) * cbSceneParam._m0[33u].y;
            float _3593 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
            float _1836 = (isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1641, cbSceneParam._m0[33u].w + _1642), _1786), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1641, _1642 - cbSceneParam._m0[33u].z), _1786), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1641 - cbSceneParam._m0[33u].z, _1642 - cbSceneParam._m0[33u].w), _1786), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1641 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1642), _1786), 0.0)).x), vec4(0.25)));
            float _1840 = 1.0 - (_1836 * cbSceneParam._m0[34u].x);
            float _1841 = 1.0 - (_1836 * cbSceneParam._m0[34u].y);
            float _1842 = 1.0 - (_1836 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1841) ? _1587 : (isnan(_1587) ? _1841 : min(_1587, _1841));
            frontier_phi_36_35_ladder_1 = isnan(_1842) ? _1588 : (isnan(_1588) ? _1842 : min(_1588, _1842));
            frontier_phi_36_35_ladder_2 = isnan(_1840) ? _1586 : (isnan(_1586) ? _1840 : min(_1586, _1840));
        }
        else
        {
            frontier_phi_36_35_ladder = _1587;
            frontier_phi_36_35_ladder_1 = _1588;
            frontier_phi_36_35_ladder_2 = _1586;
        }
        _1652 = frontier_phi_36_35_ladder_2;
        _1654 = frontier_phi_36_35_ladder;
        _1656 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1652 = _1586;
        _1654 = _1587;
        _1656 = _1588;
    }
    uvec4 _1661 = floatBitsToUint(cbInstanceData._m0[_365 + 5u]);
    uint _1663 = _1661.x * 14u;
    uint _1664 = _1663 + 13u;
    float _1671 = _391 + (-1.0);
    float _1677 = (cbLight._m0[_1664].x * _1671) + 1.0;
    float _1678 = (cbLight._m0[_1664].y * _1671) + 1.0;
    float _1679 = (cbLight._m0[_1664].z * _1671) + 1.0;
    float _1680 = (cbLight._m0[_1664].w * _1671) + 1.0;
    uint _1681 = _1663 + 5u;
    float _1687 = isnan(1.0) ? _1678 : (isnan(_1678) ? 1.0 : min(_1678, 1.0));
    uint _1691 = _1663 + 4u;
    float _1701 = isnan(1.0) ? _1677 : (isnan(_1677) ? 1.0 : min(_1677, 1.0));
    uint _1705 = _1663 | 1u;
    float _1716 = dot(vec3(cbLight._m0[_1663].xyz), vec3(_236, _237, _238));
    float _1719 = dot(vec3(cbLight._m0[_1705].xyz), vec3(_236, _237, _238));
    float _3629 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
    float _3640 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
    float _1724 = (isnan(1.0) ? _3629 : (isnan(_3629) ? 1.0 : min(_3629, 1.0))) * 0.3183098733425140380859375;
    float _1726 = (isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0))) * 0.3183098733425140380859375;
    float _1733 = ((cbLight._m0[_1681].x * _1687) * _1726) + (((cbLight._m0[_1691].x * _1652) * _1701) * _1724);
    float _1734 = ((_1687 * cbLight._m0[_1681].y) * _1726) + (((cbLight._m0[_1691].y * _1654) * _1701) * _1724);
    float _1735 = ((_1687 * cbLight._m0[_1681].z) * _1726) + (((cbLight._m0[_1691].z * _1656) * _1701) * _1724);
    uvec4 _1739 = floatBitsToUint(cbLight._m0[_1663 + 12u]);
    bool _1741 = _1739.x == 0u;
    float _1843;
    float _1845;
    float _1847;
    if (_1741)
    {
        _1843 = _1733;
        _1845 = _1734;
        _1847 = _1735;
    }
    else
    {
        uint _1851 = _1663 + 6u;
        float _1867 = (dot(vec3(cbLight._m0[_1663 + 2u].xyz), vec3(_236, _237, _238)) * 0.5) + 0.5;
        float _1868 = _1867 * _1867;
        float _3651 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1869 = isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0));
        float _1870 = isnan(1.0) ? _1679 : (isnan(_1679) ? 1.0 : min(_1679, 1.0));
        _1843 = (((cbLight._m0[_1851].x * 0.3183098733425140380859375) * _1869) * _1870) + _1733;
        _1845 = (((cbLight._m0[_1851].y * 0.3183098733425140380859375) * _1869) * _1870) + _1734;
        _1847 = (((cbLight._m0[_1851].z * 0.3183098733425140380859375) * _1869) * _1870) + _1735;
    }
    bool _1850 = _1739.y == 0u;
    float _1905;
    float _1907;
    float _1909;
    if (_1850)
    {
        _1905 = _1843;
        _1907 = _1845;
        _1909 = _1847;
    }
    else
    {
        uint _2013 = _1663 + 7u;
        float _2029 = (dot(vec3(cbLight._m0[_1663 + 3u].xyz), vec3(_236, _237, _238)) * 0.5) + 0.5;
        float _2030 = _2029 * _2029;
        float _3667 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
        float _2031 = isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0));
        float _2032 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
        _1905 = (((cbLight._m0[_2013].x * 0.3183098733425140380859375) * _2031) * _2032) + _1843;
        _1907 = (((cbLight._m0[_2013].y * 0.3183098733425140380859375) * _2031) * _2032) + _1845;
        _1909 = (((cbLight._m0[_2013].z * 0.3183098733425140380859375) * _2031) * _2032) + _1847;
    }
    uint _1911 = _1663 + 8u;
    float _1917 = cbLight._m0[_1663].x + _316;
    float _1918 = cbLight._m0[_1663].y + _317;
    float _1919 = cbLight._m0[_1663].z + _318;
    float _1923 = inversesqrt(dot(vec3(_1917, _1918, _1919), vec3(_1917, _1918, _1919)));
    float _1927 = dot(vec3(_236, _237, _238), vec3(cbLight._m0[_1663].xyz));
    float _3683 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
    float _1930 = isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0));
    float _3694 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _1931 = isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0));
    float _1932 = dot(vec3(cbLight._m0[_1663].xyz), vec3(_1917 * _1923, _1918 * _1923, _1919 * _1923));
    float _3705 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
    float _1943 = (exp2(log2(1.0 - (isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1949 = (0.5 / ((_1930 + 9.9999999392252902907785028219223e-09) + _1931)) * _1930;
    float _3716 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
    float _1951 = (isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0))) * 0.31831014156341552734375;
    uint _1965 = _1663 + 9u;
    float _1971 = cbLight._m0[_1705].x + _316;
    float _1972 = cbLight._m0[_1705].y + _317;
    float _1973 = cbLight._m0[_1705].z + _318;
    float _1977 = inversesqrt(dot(vec3(_1971, _1972, _1973), vec3(_1971, _1972, _1973)));
    float _1981 = dot(vec3(_236, _237, _238), vec3(cbLight._m0[_1705].xyz));
    float _3727 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
    float _1984 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
    float _1985 = dot(vec3(cbLight._m0[_1705].xyz), vec3(_1971 * _1977, _1972 * _1977, _1973 * _1977));
    float _3738 = isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0));
    float _1994 = (exp2(log2(1.0 - (isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1998 = (0.5 / ((_1984 + 9.9999999392252902907785028219223e-09) + _1931)) * _1984;
    float _3749 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
    float _2000 = (isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0))) * 0.31831014156341552734375;
    float _2010 = (((_1994 * cbLight._m0[_1965].x) * _2000) * _1687) + ((((cbLight._m0[_1911].x * _1652) * _1943) * _1951) * _1701);
    float _2011 = (((_1994 * cbLight._m0[_1965].y) * _2000) * _1687) + ((((cbLight._m0[_1911].y * _1654) * _1943) * _1951) * _1701);
    float _2012 = (((_1994 * cbLight._m0[_1965].z) * _2000) * _1687) + ((((cbLight._m0[_1911].z * _1656) * _1943) * _1951) * _1701);
    float _2068;
    float _2070;
    float _2072;
    if (_1741)
    {
        _2068 = _2010;
        _2070 = _2011;
        _2072 = _2012;
    }
    else
    {
        uint _2074 = _1663 + 10u;
        uint _2080 = _1663 + 2u;
        float _2086 = cbLight._m0[_2080].x + _316;
        float _2087 = cbLight._m0[_2080].y + _317;
        float _2088 = cbLight._m0[_2080].z + _318;
        float _2092 = inversesqrt(dot(vec3(_2086, _2087, _2088), vec3(_2086, _2087, _2088)));
        float _2096 = dot(vec3(_236, _237, _238), vec3(cbLight._m0[_2080].xyz));
        float _3760 = isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0));
        float _2099 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
        float _2100 = dot(vec3(cbLight._m0[_2080].xyz), vec3(_2086 * _2092, _2087 * _2092, _2088 * _2092));
        float _3771 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2109 = (exp2(log2(1.0 - (isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2113 = (0.5 / ((_2099 + 9.9999999392252902907785028219223e-09) + _1931)) * _2099;
        float _3782 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
        float _2115 = (isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0))) * 0.31831014156341552734375;
        float _2116 = isnan(1.0) ? _1679 : (isnan(_1679) ? 1.0 : min(_1679, 1.0));
        _2068 = (((_2109 * cbLight._m0[_2074].x) * _2115) * _2116) + _2010;
        _2070 = (((_2109 * cbLight._m0[_2074].y) * _2115) * _2116) + _2011;
        _2072 = (((_2109 * cbLight._m0[_2074].z) * _2115) * _2116) + _2012;
    }
    float _2147;
    float _2149;
    float _2151;
    if (_1850)
    {
        _2147 = _2068;
        _2149 = _2070;
        _2151 = _2072;
    }
    else
    {
        uint _2158 = _1663 + 11u;
        uint _2164 = _1663 + 3u;
        float _2170 = cbLight._m0[_2164].x + _316;
        float _2171 = cbLight._m0[_2164].y + _317;
        float _2172 = cbLight._m0[_2164].z + _318;
        float _2176 = inversesqrt(dot(vec3(_2170, _2171, _2172), vec3(_2170, _2171, _2172)));
        float _2180 = dot(vec3(_236, _237, _238), vec3(cbLight._m0[_2164].xyz));
        float _3798 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
        float _2183 = isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0));
        float _2184 = dot(vec3(cbLight._m0[_2164].xyz), vec3(_2170 * _2176, _2171 * _2176, _2172 * _2176));
        float _3809 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
        float _2193 = (exp2(log2(1.0 - (isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2197 = (0.5 / ((_2183 + 9.9999999392252902907785028219223e-09) + _1931)) * _2183;
        float _3820 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
        float _2199 = (isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0))) * 0.31831014156341552734375;
        float _2200 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
        _2147 = (((_2193 * cbLight._m0[_2158].x) * _2199) * _2200) + _2068;
        _2149 = (((_2193 * cbLight._m0[_2158].y) * _2199) * _2200) + _2070;
        _2151 = (((_2193 * cbLight._m0[_2158].z) * _2199) * _2200) + _2072;
    }
    float _2265;
    float _2267;
    float _2269;
    float _2271;
    float _2273;
    float _2275;
    if (_1661.y == 0u)
    {
        uvec4 _2221 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2222 = _2221.x;
        uint _2233 = uint((float(_2221.y) * floor(float(uint(cbSceneParam._m0[85u].y * _325) / _2222))) + floor(float(uint(cbSceneParam._m0[85u].x * _324) / _2222)));
        float _2243 = (log2(_1439 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2244 = isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0));
        uint _2247 = uint(isnan(14.0) ? _2244 : (isnan(_2244) ? 14.0 : min(_2244, 14.0)));
        uvec4 _2252 = texelFetch(g_lightClusterGridBuffer, int(((_2247 << 2u) + (_2233 << 6u)) >> 2u));
        uint _2253 = _2252.x;
        uint _2254 = _2221.z;
        float _2357;
        float _2359;
        float _2361;
        float _2363;
        float _2365;
        float _2367;
        if (((((1u << ((_2254 >> 4u) & 15u)) + 4294967295u) & _2253) == 0u) || ((_2254 & 240u) == 0u))
        {
            _2357 = 0.0;
            _2359 = 0.0;
            _2361 = 0.0;
            _2363 = 0.0;
            _2365 = 0.0;
            _2367 = 0.0;
        }
        else
        {
            float _2358;
            float _2360;
            float _2362;
            float _2364;
            float _2366;
            float _2368;
            float _2499 = 0.0;
            float _2500 = 0.0;
            float _2501 = 0.0;
            float _2502 = 0.0;
            float _2503 = 0.0;
            float _2504 = 0.0;
            uint _2505 = 0u;
            uint _2514;
            bool _2515;
            for (;;)
            {
                _2514 = texelFetch(g_lightClassification, int((((_2247 << 5u) + (_2233 << 9u)) + (_2505 << 2u)) >> 2u)).x;
                _2515 = _2514 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2515)
                {
                    frontier_phi_68_pred = _2504;
                    frontier_phi_68_pred_1 = _2503;
                    frontier_phi_68_pred_2 = _2502;
                    frontier_phi_68_pred_3 = _2500;
                    frontier_phi_68_pred_4 = _2499;
                    frontier_phi_68_pred_5 = _2501;
                }
                else
                {
                    float _2623;
                    float _2624;
                    float _2625;
                    float _2626;
                    float _2627;
                    float _2628;
                    uint _2629;
                    _2623 = _2499;
                    _2624 = _2500;
                    _2625 = _2501;
                    _2626 = _2502;
                    _2627 = _2503;
                    _2628 = _2504;
                    _2629 = _2514;
                    float _2555;
                    float _2556;
                    float _2557;
                    float _2558;
                    float _2559;
                    float _2560;
                    for (;;)
                    {
                        uint _2633 = uint(findLSB(_2629)) + (_2505 << 5u);
                        uint _2630 = (_2629 + 4294967295u) & _2629;
                        uint _2635 = _2633 * 48u;
                        vec4 _2649 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2635)).x, texelFetch(g_PointLightRenderingBuffer, int(_2635 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2635 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2635 + 3u)).x));
                        uint _2655 = (_2633 * 48u) + 4u;
                        vec4 _2668 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2655)).x, texelFetch(g_PointLightRenderingBuffer, int(_2655 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2655 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2655 + 3u)).x));
                        uint _2674 = (_2633 * 48u) + 8u;
                        vec3 _2685 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2674)).x, texelFetch(g_PointLightRenderingBuffer, int(_2674 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2674 + 2u)).x));
                        float _2689 = _2649.x - _1437;
                        float _2690 = _2649.y - _1438;
                        float _2691 = _2649.z - _1439;
                        float _2692 = dot(vec3(_2689, _2690, _2691), vec3(_2689, _2690, _2691));
                        float _2695 = inversesqrt(_2692);
                        float _2704 = 1.0 - (_2692 * _2649.w);
                        float _3846 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
                        float _2705 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
                        float _2706 = sqrt(_2692) * _2668.w;
                        float _2709 = 1.39999997615814208984375 / (_2706 + 1.39999997615814208984375);
                        float _2710 = _2709 * _2709;
                        float _2713 = ((1.0 - _2710) * dot(vec3(_346, _349, _352), vec3(_2695 * _2689, _2695 * _2690, _2695 * _2691))) + _2710;
                        float _2716 = _2706 * _2706;
                        float _2720 = ((isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0))) * _2705) / ((_2716 * 0.699999988079071044921875) + 1.0);
                        float _2724 = (-0.0) - _1437;
                        float _2725 = (-0.0) - _1438;
                        float _2726 = (-0.0) - _1439;
                        float _2730 = inversesqrt(dot(vec3(_2724, _2725, _2726), vec3(_2724, _2725, _2726)));
                        float _2734 = dot(vec3(_346, _349, _352), vec3(_2730 * _2724, _2730 * _2725, _2730 * _2726));
                        float _3862 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
                        float _3873 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
                        float _2738 = isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0));
                        float _2742 = (0.5 / (((isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0))) + 9.9999999392252902907785028219223e-09) + _2738)) * _2738;
                        float _3884 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
                        float _2751 = (((isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0))) * 3.1415927410125732421875) / ((_2716 * 2.1991131305694580078125) + 3.141590118408203125)) * _2705;
                        _2558 = (_2720 * _2668.x) + _2626;
                        _2559 = (_2720 * _2668.y) + _2627;
                        _2560 = (_2720 * _2668.z) + _2628;
                        _2555 = (_2751 * _2685.x) + _2623;
                        _2556 = (_2751 * _2685.y) + _2624;
                        _2557 = (_2751 * _2685.z) + _2625;
                        if (_2630 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2623 = _2555;
                            _2624 = _2556;
                            _2625 = _2557;
                            _2626 = _2558;
                            _2627 = _2559;
                            _2628 = _2560;
                            _2629 = _2630;
                        }
                    }
                    frontier_phi_68_pred = _2560;
                    frontier_phi_68_pred_1 = _2559;
                    frontier_phi_68_pred_2 = _2558;
                    frontier_phi_68_pred_3 = _2556;
                    frontier_phi_68_pred_4 = _2555;
                    frontier_phi_68_pred_5 = _2557;
                }
                _2368 = frontier_phi_68_pred;
                _2366 = frontier_phi_68_pred_1;
                _2364 = frontier_phi_68_pred_2;
                _2360 = frontier_phi_68_pred_3;
                _2358 = frontier_phi_68_pred_4;
                _2362 = frontier_phi_68_pred_5;
                uint _2506 = _2505 + 1u;
                if (_2506 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2499 = _2358;
                    _2500 = _2360;
                    _2501 = _2362;
                    _2502 = _2364;
                    _2503 = _2366;
                    _2504 = _2368;
                    _2505 = _2506;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2357 = _2358;
            _2359 = _2360;
            _2361 = _2362;
            _2363 = _2364;
            _2365 = _2366;
            _2367 = _2368;
        }
        uvec4 _2371 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2372 = _2371.z;
        uint _2374 = (_2372 >> 8u) & 15u;
        float _2470;
        float _2472;
        float _2474;
        float _2476;
        float _2478;
        float _2480;
        if (((4294967295u << _2374) & _2253) == 0u)
        {
            _2470 = _2357;
            _2472 = _2359;
            _2474 = _2361;
            _2476 = _2363;
            _2478 = _2365;
            _2480 = _2367;
        }
        else
        {
            float _2495 = inversesqrt(dot(vec3(_1437, _1438, _1439), vec3(_1437, _1438, _1439)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2374 < ((_2372 >> 12u) & 15u))
            {
                float _2471;
                float _2473;
                float _2475;
                float _2477;
                float _2479;
                float _2481;
                float _2606 = _2357;
                float _2607 = _2359;
                float _2608 = _2361;
                float _2609 = _2363;
                float _2610 = _2365;
                float _2611 = _2367;
                uint _2612 = _2374;
                uint _2621;
                bool _2622;
                for (;;)
                {
                    _2621 = texelFetch(g_lightClassification, int((((_2247 << 5u) + (_2233 << 9u)) + (_2612 << 2u)) >> 2u)).x;
                    _2622 = _2621 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_2622)
                    {
                        frontier_phi_74_pred = _2608;
                        frontier_phi_74_pred_1 = _2607;
                        frontier_phi_74_pred_2 = _2606;
                        frontier_phi_74_pred_3 = _2611;
                        frontier_phi_74_pred_4 = _2610;
                        frontier_phi_74_pred_5 = _2609;
                    }
                    else
                    {
                        float _2756;
                        float _2757;
                        float _2758;
                        float _2759;
                        float _2760;
                        float _2761;
                        float _3008;
                        float _3009;
                        float _3010;
                        float _3011;
                        float _3012;
                        float _3013;
                        float _2769 = _2606;
                        float _2770 = _2607;
                        float _2771 = _2608;
                        float _2772 = _2609;
                        float _2773 = _2610;
                        float _2774 = _2611;
                        uint _2775 = _2621;
                        uint _2776;
                        vec4 _2801;
                        float _2802;
                        vec4 _2817;
                        vec3 _2829;
                        vec4 _2845;
                        vec4 _2861;
                        float _2908;
                        bool _2909;
                        for (;;)
                        {
                            uint _2786 = ((_2612 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2775));
                            _2776 = (_2775 + 4294967295u) & _2775;
                            uint _2788 = _2786 * 40u;
                            _2801 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2788)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2788 + 3u)).x));
                            _2802 = _2801.w;
                            uint _2804 = (_2786 * 40u) + 4u;
                            _2817 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2804)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2804 + 3u)).x));
                            uint _2819 = (_2786 * 40u) + 8u;
                            _2829 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2819)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2819 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2819 + 2u)).x));
                            uint _2832 = (_2786 * 40u) + 16u;
                            _2845 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2832)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2832 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2832 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2832 + 3u)).x));
                            uint _2848 = (_2786 * 40u) + 20u;
                            _2861 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2848)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 3u)).x));
                            uint _2864 = (_2786 * 40u) + 24u;
                            vec4 _2877 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2864)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2864 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2864 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2864 + 3u)).x));
                            uint _2883 = (_2786 * 40u) + 28u;
                            vec4 _2896 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2883)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2883 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2883 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2883 + 3u)).x));
                            _2908 = fma(_1439, _2896.z, fma(_1438, _2896.y, _2896.x * _1437)) + _2896.w;
                            _2909 = !((fma(_1439, _2877.z, fma(_1438, _2877.y, _2877.x * _1437)) + _2877.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_2909)
                            {
                                float _2936 = _2801.x - _1437;
                                float _2937 = _2801.y - _1438;
                                float _2938 = _2801.z - _1439;
                                float _2939 = dot(vec3(_2936, _2937, _2938), vec3(_2936, _2937, _2938));
                                float _2942 = inversesqrt(_2939);
                                float _2943 = _2942 * _2936;
                                float _2944 = _2942 * _2937;
                                float _2945 = _2942 * _2938;
                                float _2949 = 1.0 - (_2939 / (_2802 * _2802));
                                float _3895 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
                                float _2950 = isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0));
                                float _2954 = sqrt(_2939) * _2817.w;
                                float _2956 = 1.39999997615814208984375 / (_2954 + 1.39999997615814208984375);
                                float _2957 = _2956 * _2956;
                                float _2958 = 1.0 - _2957;
                                float _2960 = (_2958 * dot(vec3(_2943, _2944, _2945), vec3(_346, _349, _352))) + _2957;
                                float _2963 = _2954 * _2954;
                                float _2967 = (fma(_1439, _2845.z, fma(_1438, _2845.y, _2845.x * _1437)) + _2845.w) / _2908;
                                float _2968 = (fma(_1439, _2861.z, fma(_1438, _2861.y, _2861.x * _1437)) + _2861.w) / _2908;
                                float _2972 = 1.0 - dot(vec2(_2967, _2968), vec2(_2967, _2968));
                                float _3911 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
                                float _2973 = isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0));
                                float _2974 = _2973 * (((isnan(0.0) ? _2960 : (isnan(_2960) ? 0.0 : max(_2960, 0.0))) * _2950) / ((_2963 * 0.699999988079071044921875) + 1.0));
                                float _2984 = dot(vec3(_346, _349, _352), vec3((-0.0) - (_1437 * _2495), (-0.0) - (_1438 * _2495), (-0.0) - (_1439 * _2495)));
                                float _3922 = isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0));
                                float _2992 = (_2958 * dot(vec3(_346, _349, _352), vec3(_2943, _2944, _2945))) + _2957;
                                float _3933 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
                                float _2993 = isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0));
                                float _2997 = (0.5 / (((isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0))) + 9.9999999392252902907785028219223e-09) + _2993)) * _2993;
                                float _3944 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
                                float _3004 = (_2973 * _2950) * (((isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0))) * 3.1415927410125732421875) / ((_2963 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_80_pred = _3004 * _2829.z;
                                frontier_phi_80_pred_1 = _3004 * _2829.y;
                                frontier_phi_80_pred_2 = _3004 * _2829.x;
                                frontier_phi_80_pred_3 = _2974 * _2817.z;
                                frontier_phi_80_pred_4 = _2974 * _2817.y;
                                frontier_phi_80_pred_5 = _2974 * _2817.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3010 = frontier_phi_80_pred;
                            _3009 = frontier_phi_80_pred_1;
                            _3008 = frontier_phi_80_pred_2;
                            _3013 = frontier_phi_80_pred_3;
                            _3012 = frontier_phi_80_pred_4;
                            _3011 = frontier_phi_80_pred_5;
                            _2759 = _3011 + _2772;
                            _2760 = _3012 + _2773;
                            _2761 = _3013 + _2774;
                            _2756 = _3008 + _2769;
                            _2757 = _3009 + _2770;
                            _2758 = _3010 + _2771;
                            if (_2776 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2769 = _2756;
                                _2770 = _2757;
                                _2771 = _2758;
                                _2772 = _2759;
                                _2773 = _2760;
                                _2774 = _2761;
                                _2775 = _2776;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _2758;
                        frontier_phi_74_pred_1 = _2757;
                        frontier_phi_74_pred_2 = _2756;
                        frontier_phi_74_pred_3 = _2761;
                        frontier_phi_74_pred_4 = _2760;
                        frontier_phi_74_pred_5 = _2759;
                    }
                    _2475 = frontier_phi_74_pred;
                    _2473 = frontier_phi_74_pred_1;
                    _2471 = frontier_phi_74_pred_2;
                    _2481 = frontier_phi_74_pred_3;
                    _2479 = frontier_phi_74_pred_4;
                    _2477 = frontier_phi_74_pred_5;
                    uint _2613 = _2612 + 1u;
                    if (_2613 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2606 = _2471;
                        _2607 = _2473;
                        _2608 = _2475;
                        _2609 = _2477;
                        _2610 = _2479;
                        _2611 = _2481;
                        _2612 = _2613;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2479;
                frontier_phi_62_63_ladder_1 = _2477;
                frontier_phi_62_63_ladder_2 = _2475;
                frontier_phi_62_63_ladder_3 = _2481;
                frontier_phi_62_63_ladder_4 = _2473;
                frontier_phi_62_63_ladder_5 = _2471;
            }
            else
            {
                frontier_phi_62_63_ladder = _2365;
                frontier_phi_62_63_ladder_1 = _2363;
                frontier_phi_62_63_ladder_2 = _2361;
                frontier_phi_62_63_ladder_3 = _2367;
                frontier_phi_62_63_ladder_4 = _2359;
                frontier_phi_62_63_ladder_5 = _2357;
            }
            _2470 = frontier_phi_62_63_ladder_5;
            _2472 = frontier_phi_62_63_ladder_4;
            _2474 = frontier_phi_62_63_ladder_2;
            _2476 = frontier_phi_62_63_ladder_1;
            _2478 = frontier_phi_62_63_ladder;
            _2480 = frontier_phi_62_63_ladder_3;
        }
        float _2485 = isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0));
        _2265 = (_2485 * _2476) + _1905;
        _2267 = (_2485 * _2478) + _1907;
        _2269 = (_2485 * _2480) + _1909;
        _2271 = ((_2470 * 0.039999999105930328369140625) * _2485) + _2147;
        _2273 = ((_2472 * 0.039999999105930328369140625) * _2485) + _2149;
        _2275 = ((_2474 * 0.039999999105930328369140625) * _2485) + _2151;
    }
    else
    {
        _2265 = _1905;
        _2267 = _1907;
        _2269 = _1909;
        _2271 = _2147;
        _2273 = _2149;
        _2275 = _2151;
    }
    uint _2281 = _367 + uint(cbMatDynParam._m0[0u].w);
    float _3960 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _3971 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _3982 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _2312 = (((isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0))) * (_2265 + ((isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0))) * _391))) + ((_2271 + ((isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0))) * _1170)) * cbPerFrame._m0[3u].x)) + (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _227.x) * cbInstanceData._m0[_2281].x);
    float _2314 = ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _227.y) * cbInstanceData._m0[_2281].y) + ((_2273 + ((isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0))) * _1170)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0))) * (_2267 + ((isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0))) * _391)));
    float _2316 = ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _227.z) * cbInstanceData._m0[_2281].z) + ((_2275 + ((isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0))) * _1170)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0))) * (_2269 + ((isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0))) * _391)));
    uint _2320 = _365 + 6u;
    float _2328 = _324 / cbSceneParam._m0[86u].x;
    float _2329 = _325 / cbSceneParam._m0[86u].y;
    vec4 _2343 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2328, _2329, (log2((isnan(cbSceneParam._m0[77u].w) ? _258 : (isnan(_258) ? cbSceneParam._m0[77u].w : min(_258, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2345 = _2343.x;
    float _2346 = _2343.y;
    float _2347 = _2343.z;
    float _2348 = _2343.w;
    float _2419;
    float _2421;
    float _2423;
    float _2425;
    if (_258 > cbSceneParam._m0[78u].w)
    {
        float _2382 = isnan(_258) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _258 : min(cbSceneParam._m0[80u].w, _258));
        float _2383 = _2382 / _258;
        float _2394 = _2383 * _309;
        float _2395 = _310 * _2383;
        float _2396 = (-0.0) - _2395;
        float _2397 = _2383 * _311;
        float _2399 = (cbSceneParam._m0[77u].w * _2396) / _2382;
        float _2400 = _2399 + cbSceneParam._m0[79u].w;
        float _2401 = cbSceneParam._m0[79u].w - _2395;
        float _2407 = sqrt(((_2394 * _2394) + (_2395 * _2395)) + (_2397 * _2397));
        float _2410 = (1.0 - (cbSceneParam._m0[77u].w / _2382)) * _2407;
        float _2415 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2417 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2568;
        if (abs((_2396 - _2399) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2568 = ((((_2400 > 0.0) ? exp2(_2415 * _2400) : (2.0 - exp2(_2417 * _2400))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2410;
        }
        else
        {
            float _2528 = 1.0 / cbSceneParam._m0[80u].x;
            float _2529 = isnan(_2401) ? _2400 : (isnan(_2400) ? _2401 : max(_2400, _2401));
            float _2530 = isnan(_2401) ? _2400 : (isnan(_2400) ? _2401 : min(_2400, _2401));
            float _2539 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : min(_2529, 0.0));
            float _2540 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : min(_2530, 0.0));
            _2568 = ((abs(_2407 / _2396) * cbSceneParam._m0[80u].y) * ((((_2539 - _2540) * 2.0) - ((exp2(_2415 * (isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0)))) - exp2(_2415 * (isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0))))) * _2528)) - ((exp2(_2417 * _2539) - exp2(_2417 * _2540)) * _2528))) + (_2410 * cbSceneParam._m0[80u].z);
        }
        vec4 _2570 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2328, _2329, 1.0), 0.0);
        float _2579 = exp2((_2568 * (-1.44269502162933349609375)) * (1.0 - _2570.w));
        float _2580 = log2(_2579);
        float _2596 = log2(_2348);
        _2419 = (exp2(_2596 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2580 * cbSceneParam._m0[78u].x)) * _2570.x) / cbSceneParam._m0[78u].x)) + _2345;
        _2421 = (exp2(_2596 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2580 * cbSceneParam._m0[78u].y)) * _2570.y) / cbSceneParam._m0[78u].y)) + _2346;
        _2423 = (exp2(_2596 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2580 * cbSceneParam._m0[78u].z)) * _2570.z) / cbSceneParam._m0[78u].z)) + _2347;
        _2425 = _2579 * _2348;
    }
    else
    {
        _2419 = _2345;
        _2421 = _2346;
        _2423 = _2347;
        _2425 = _2348;
    }
    float _2437 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2438 = _2437 == 3.0;
    float _2440 = log2(_2425);
    float _2447 = exp2(_2440 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0)));
    float _2448 = exp2(_2440 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0)));
    float _2449 = exp2(_2440 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0)));
    float _2458 = (_2437 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2458 * (_2438 ? _2447 : (_2447 + (cbSceneParam._m0[72u].w * _2419)));
    SV_Target.y = _2458 * (_2438 ? _2448 : (_2448 + (cbSceneParam._m0[72u].w * _2421)));
    SV_Target.z = _2458 * (_2438 ? _2449 : (_2449 + (cbSceneParam._m0[72u].w * _2423)));
    SV_Target.w = cbInstanceData._m0[_2320].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2320].w;
}


