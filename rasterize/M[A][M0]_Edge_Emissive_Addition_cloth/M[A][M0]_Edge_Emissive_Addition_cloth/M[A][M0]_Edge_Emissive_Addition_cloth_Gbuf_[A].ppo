#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _124 = _123 * NORMAL.x;
    float _125 = _123 * NORMAL.y;
    float _126 = _123 * NORMAL.z;
    float _131;
    float _132;
    float _133;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _131 = (-0.0) - _124;
        _132 = (-0.0) - _125;
        _133 = (-0.0) - _126;
    }
    else
    {
        _131 = _124;
        _132 = _125;
        _133 = _126;
    }
    vec4 _153 = texture(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _158 = _153.z;
    float _159 = _153.x * cbMtdParam._m0[9u].x;
    float _160 = _153.y * cbMtdParam._m0[9u].y;
    float _161 = _158 * cbMtdParam._m0[9u].z;
    vec4 _183 = texture(sampler2D(M_A_M0_Edge_Emissive_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _191 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _392 = isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0));
    float _193 = isnan(1.0) ? _392 : (isnan(_392) ? 1.0 : min(_392, 1.0));
    float _403 = isnan(0.0) ? _160 : (isnan(_160) ? 0.0 : max(_160, 0.0));
    float _194 = isnan(1.0) ? _403 : (isnan(_403) ? 1.0 : min(_403, 1.0));
    float _414 = isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0));
    float _195 = isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0));
    uint _197 = uint(roundEven(NORMAL.w));
    vec4 _202 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _204 = _202.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _267 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _425 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        float _268 = isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0));
        float _272 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _436 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0))) - _268)) + _268) < ((_204 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _301;
    uint _224;
    vec4 _229;
    float _230;
    float _231;
    float _232;
    float _236;
    float _237;
    float _238;
    float _242;
    vec4 _246;
    float _248;
    float _249;
    bool _260;
    for (;;)
    {
        _224 = _197 * 13u;
        _229 = cbInstanceData._m0[(_224 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _230 = _229.x;
        _231 = _229.y;
        _232 = _229.z;
        float _233 = (cbMtdParam._m0[0u].x * _193) * _230;
        float _234 = (cbMtdParam._m0[0u].y * _194) * _231;
        float _235 = (cbMtdParam._m0[0u].z * _195) * _232;
        float _447 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
        _236 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
        float _458 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
        _237 = isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0));
        float _469 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
        _238 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
        _242 = cbInstanceData._m0[_224 + 6u].w;
        float _243 = _204 + (-0.5);
        _246 = cbMtdParam._m0[1u];
        _248 = _246.y * _243;
        _249 = _243 * 0.999000012874603271484375;
        _260 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_260)
        {
            if ((cbInstanceData._m0[_224 + 7u].x + _249) < 0.5)
            {
                _301 = true;
                break;
            }
        }
        if ((_229.w < 1.0) && ((_229.w + _249) < 0.5))
        {
            _301 = true;
            break;
        }
        if ((_248 + _158) < _246.x)
        {
            _301 = true;
            break;
        }
        _301 = false;
        break;
    }
    if (_301)
    {
        discard_state = true;
    }
    bool _343 = cbMtdParam._m0[1u].z != 0.0;
    float _344 = _343 ? _242 : 0.0;
    SV_Target.x = ((_131 * 0.5) * _191) + 0.500488758087158203125;
    SV_Target.y = ((_132 * 0.5) * _191) + 0.500488758087158203125;
    SV_Target.z = ((_133 * 0.5) * _191) + 0.500488758087158203125;
    SV_Target.w = _344;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _343 ? _242 : TEXCOORD.z;
    SV_Target_2.x = _236;
    SV_Target_2.y = _237;
    SV_Target_2.z = _238;
    SV_Target_2.w = _343 ? _242 : (float(floatBitsToUint(cbInstanceData._m0[_224 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _344;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _183.x) * _230) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _183.y) * _231) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _183.z) * _232) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _344;
    discard_exit();
}


