#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _115 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _116 = _115 * NORMAL.x;
    float _117 = _115 * NORMAL.y;
    float _118 = _115 * NORMAL.z;
    float _123;
    float _124;
    float _125;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _123 = (-0.0) - _116;
        _124 = (-0.0) - _117;
        _125 = (-0.0) - _118;
    }
    else
    {
        _123 = _116;
        _124 = _117;
        _125 = _118;
    }
    float _140 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _462 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _142 = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
    float _473 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _143 = isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0));
    float _484 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _144 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
    float _495 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    uint _147 = uint(roundEven(NORMAL.w));
    float _189 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _199 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _189);
    float _200 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _189);
    float _201 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _189);
    vec4 _207 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _210 = _207.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _346 = sqrt(((_199 * _199) + (_200 * _200)) + (_201 * _201));
        float _353 = (cbMatDynParam._m0[5u].x * _346) + cbMatDynParam._m0[5u].y;
        float _506 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
        float _354 = isnan(1.0) ? _506 : (isnan(_506) ? 1.0 : min(_506, 1.0));
        float _358 = (cbMatDynParam._m0[5u].z * _346) + cbMatDynParam._m0[5u].w;
        float _517 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0))) - _354)) + _354) < ((_210 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _387;
    float _285;
    uint _304;
    vec4 _309;
    float _316;
    float _317;
    float _318;
    float _322;
    vec4 _326;
    float _328;
    float _329;
    bool _340;
    for (;;)
    {
        float _218 = _142 * 3.3333332538604736328125;
        float _220 = _143 * 3.3333332538604736328125;
        float _221 = _144 * 3.3333332538604736328125;
        float _229 = ((isnan(1.0) ? _218 : (isnan(_218) ? 1.0 : min(_218, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _231 = ((isnan(1.0) ? _220 : (isnan(_220) ? 1.0 : min(_220, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _232 = ((isnan(1.0) ? _221 : (isnan(_221) ? 1.0 : min(_221, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
        float _233 = isnan(_229) ? 0.0 : (isnan(0.0) ? _229 : max(0.0, _229));
        float _234 = isnan(_231) ? 0.0 : (isnan(0.0) ? _231 : max(0.0, _231));
        float _235 = isnan(_232) ? 0.0 : (isnan(0.0) ? _232 : max(0.0, _232));
        float _238 = (_142 + (-0.0599999986588954925537109375)) + _233;
        float _240 = (_143 + (-0.0599999986588954925537109375)) + _234;
        float _242 = (_144 + (-0.0599999986588954925537109375)) + _235;
        float _254 = (_238 * _238) - ((0.02999999932944774627685546875 - _142) * 0.119999997317790985107421875);
        float _255 = (_240 * _240) - ((0.02999999932944774627685546875 - _143) * 0.119999997317790985107421875);
        float _256 = (_242 * _242) - ((0.02999999932944774627685546875 - _144) * 0.119999997317790985107421875);
        float _266 = (sqrt(isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0))) - _238) * 16.666667938232421875;
        float _268 = (sqrt(isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0))) - _240) * 16.666667938232421875;
        float _269 = (sqrt(isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0))) - _242) * 16.666667938232421875;
        float _270 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        float _271 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
        float _272 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
        float _283 = (((isnan(1.0) ? _271 : (isnan(_271) ? 1.0 : min(_271, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _270 : (isnan(_270) ? 1.0 : min(_270, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _272 : (isnan(_272) ? 1.0 : min(_272, 1.0))) * 0.114000000059604644775390625);
        float _284 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
        _285 = isnan(1.0) ? _284 : (isnan(_284) ? 1.0 : min(_284, 1.0));
        float _288 = 1.0 - (isnan(0.99989998340606689453125) ? _285 : (isnan(_285) ? 0.99989998340606689453125 : min(_285, 0.99989998340606689453125)));
        _304 = _147 * 13u;
        _309 = cbInstanceData._m0[(_304 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _313 = (cbMtdParam._m0[0u].x * (_233 / _288)) * _309.x;
        float _314 = (cbMtdParam._m0[0u].y * (_234 / _288)) * _309.y;
        float _315 = (cbMtdParam._m0[0u].z * (_235 / _288)) * _309.z;
        float _618 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
        _316 = isnan(1.0) ? _618 : (isnan(_618) ? 1.0 : min(_618, 1.0));
        float _629 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
        _317 = isnan(1.0) ? _629 : (isnan(_629) ? 1.0 : min(_629, 1.0));
        float _640 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        _318 = isnan(1.0) ? _640 : (isnan(_640) ? 1.0 : min(_640, 1.0));
        _322 = cbInstanceData._m0[_304 + 6u].w;
        float _323 = _210 + (-0.5);
        _326 = cbMtdParam._m0[1u];
        _328 = _326.y * _323;
        _329 = _323 * 0.999000012874603271484375;
        _340 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_340)
        {
            if ((cbInstanceData._m0[_304 + 7u].x + _329) < 0.5)
            {
                _387 = true;
                break;
            }
        }
        if ((_309.w < 1.0) && ((_309.w + _329) < 0.5))
        {
            _387 = true;
            break;
        }
        if ((_328 + 1.0) < _326.x)
        {
            _387 = true;
            break;
        }
        _387 = false;
        break;
    }
    if (_387)
    {
        discard_state = true;
    }
    bool _413 = cbMtdParam._m0[1u].z != 0.0;
    float _414 = _413 ? _322 : 0.0;
    SV_Target.x = ((_123 * 0.5) * _140) + 0.500488758087158203125;
    SV_Target.y = ((_124 * 0.5) * _140) + 0.500488758087158203125;
    SV_Target.z = ((_125 * 0.5) * _140) + 0.500488758087158203125;
    SV_Target.w = _414;
    SV_Target_1.x = _285;
    SV_Target_1.y = isnan(1.0) ? _495 : (isnan(_495) ? 1.0 : min(_495, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _413 ? _322 : TEXCOORD.z;
    SV_Target_2.x = _316;
    SV_Target_2.y = _317;
    SV_Target_2.z = _318;
    SV_Target_2.w = _413 ? _322 : (float(floatBitsToUint(cbInstanceData._m0[_304 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _414;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _414;
    discard_exit();
}


