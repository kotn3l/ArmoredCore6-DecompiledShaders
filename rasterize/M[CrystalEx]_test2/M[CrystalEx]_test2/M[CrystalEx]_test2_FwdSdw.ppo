#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D M_CrystalEx_test2_snp_0_Screen_0;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _766;
uint _2490;
uint _2491;
uint _2492;
uint _2753;
uint _2754;
uint _2755;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _158 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = _158 * NORMAL.x;
    float _160 = _158 * NORMAL.y;
    float _161 = _158 * NORMAL.z;
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _159;
        _167 = (-0.0) - _160;
        _168 = (-0.0) - _161;
    }
    else
    {
        _166 = _159;
        _167 = _160;
        _168 = _161;
    }
    float _213 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _223 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _213);
    float _224 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _213);
    float _225 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _213);
    float _239 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _240 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _246 = _239 / cbSceneParam._m0[86u].x;
    float _247 = _240 / cbSceneParam._m0[86u].y;
    float _254 = isnan(cbInstanceData._m0[8u].x) ? _246 : (isnan(_246) ? cbInstanceData._m0[8u].x : max(_246, cbInstanceData._m0[8u].x));
    float _255 = isnan(cbInstanceData._m0[8u].y) ? _247 : (isnan(_247) ? cbInstanceData._m0[8u].y : max(_247, cbInstanceData._m0[8u].y));
    vec4 _260 = texture(sampler2D(M_CrystalEx_test2_snp_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _254 : (isnan(_254) ? cbInstanceData._m0[8u].z : min(_254, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _255 : (isnan(_255) ? cbInstanceData._m0[8u].w : min(_255, cbInstanceData._m0[8u].w))));
    float _283 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _291 = abs(dot(vec4(_166, _167, _168, 0.0), vec4(_283 * _223, _283 * _224, _283 * _225, 0.0))) * cbMtdParam._m0[10u].x;
    vec4 _293 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_239, _240));
    float _295 = _293.x;
    bool _302 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _317 = (_302 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _295)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _295))) - POSITION_1.w;
    float _318 = isnan(_317) ? _291 : (isnan(_291) ? _317 : min(_291, _317));
    float _319 = log2(cbMtdParam._m0[10u].y);
    float _338 = inversesqrt(dot(vec3(_166, _167, _168), vec3(_166, _167, _168)));
    float _339 = _338 * _166;
    float _340 = _338 * _167;
    float _341 = _338 * _168;
    float _3035 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _343 = isnan(1.0) ? _3035 : (isnan(_3035) ? 1.0 : min(_3035, 1.0));
    float _3046 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _344 = isnan(1.0) ? _3046 : (isnan(_3046) ? 1.0 : min(_3046, 1.0));
    float _3057 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _345 = isnan(1.0) ? _3057 : (isnan(_3057) ? 1.0 : min(_3057, 1.0));
    float _3068 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _346 = isnan(1.0) ? _3068 : (isnan(_3068) ? 1.0 : min(_3068, 1.0));
    float _351 = _302 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _391 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _400 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _391);
    float _401 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _391);
    float _402 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _391);
    float _406 = inversesqrt(dot(vec3(_400, _401, _402), vec3(_400, _401, _402)));
    float _407 = _400 * _406;
    float _408 = _401 * _406;
    float _409 = _402 * _406;
    float _414 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _415 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _436 = fma(_341, cbSceneParam._m0[5u].z, fma(_340, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _339));
    float _439 = fma(_341, cbSceneParam._m0[6u].z, fma(_340, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _339));
    float _442 = fma(_341, cbSceneParam._m0[7u].z, fma(_340, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _339));
    float _443 = _343 * 3.3333332538604736328125;
    float _445 = _344 * 3.3333332538604736328125;
    float _446 = _345 * 3.3333332538604736328125;
    float _454 = ((isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _456 = ((isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _457 = ((isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _463 = (_343 + (-0.0599999986588954925537109375)) + (isnan(_454) ? 0.0 : (isnan(0.0) ? _454 : max(0.0, _454)));
    float _465 = (_344 + (-0.0599999986588954925537109375)) + (isnan(_456) ? 0.0 : (isnan(0.0) ? _456 : max(0.0, _456)));
    float _467 = (_345 + (-0.0599999986588954925537109375)) + (isnan(_457) ? 0.0 : (isnan(0.0) ? _457 : max(0.0, _457)));
    float _479 = (_463 * _463) - ((0.02999999932944774627685546875 - _343) * 0.119999997317790985107421875);
    float _480 = (_465 * _465) - ((0.02999999932944774627685546875 - _344) * 0.119999997317790985107421875);
    float _481 = (_467 * _467) - ((0.02999999932944774627685546875 - _345) * 0.119999997317790985107421875);
    float _491 = (sqrt(isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0))) - _463) * 16.666667938232421875;
    float _493 = (sqrt(isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0))) - _465) * 16.666667938232421875;
    float _494 = (sqrt(isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0))) - _467) * 16.666667938232421875;
    float _495 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _496 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _497 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _508 = (((isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _495 : (isnan(_495) ? 1.0 : min(_495, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _497 : (isnan(_497) ? 1.0 : min(_497, 1.0))) * 0.114000000059604644775390625);
    float _509 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    vec4 _518 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _414, cbSceneParam._m0[86u].y * _415));
    float _521 = _518.x * TEXCOORD.z;
    float _522 = dot(vec3(_339, _340, _341), vec3(_407, _408, _409));
    float _525 = _522 * 2.0;
    float _530 = (_525 * _339) - _407;
    float _531 = (_525 * _340) - _408;
    float _532 = (_525 * _341) - _409;
    float _536 = abs(dot(vec3(_407, _408, _409), vec3(_339, _340, _341)));
    float _3164 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _3164 : (isnan(_3164) ? 1.0 : min(_3164, 1.0));
    float _543 = sqrt(_346);
    float _555 = exp2((_543 * 5.0) * log2(1.0 - (_537 * 0.999000012874603271484375))) / (4.0 - (_543 * 3.0));
    float _561 = (1.0 - _555) * ((_543 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _562 = _555 * _543;
    float _590 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _594 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _598 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _765;
    float _767;
    float _768;
    float _769;
    float _770;
    float _771;
    float _772;
    float _773;
    float _774;
    float _775;
    float _776;
    float _777;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _625 = fma(_598, cbModelParam._m0[26u].z, fma(_594, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _590));
        float _629 = fma(_598, cbModelParam._m0[27u].z, fma(_594, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _590));
        float _633 = fma(_598, cbModelParam._m0[28u].z, fma(_594, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _590));
        float _658 = _590 + _339;
        float _659 = _594 + _340;
        float _660 = _598 + _341;
        float _670 = fma(_660, cbModelParam._m0[26u].z, fma(_659, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _658)) - _625;
        float _671 = fma(_660, cbModelParam._m0[27u].z, fma(_659, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _658)) - _629;
        float _672 = fma(_660, cbModelParam._m0[28u].z, fma(_659, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _658)) - _633;
        float _676 = inversesqrt(dot(vec3(_670, _671, _672), vec3(_670, _671, _672)));
        float _689 = ((_676 * _670) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_625 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _690 = ((_676 * _671) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_629 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _691 = ((_676 * _672) / cbModelParam._m0[34u].z) + ((((((_633 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _694 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_689, _690, _691), 0.0);
        vec4 _701 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_689, _690, _691), 0.0);
        vec4 _708 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_689, _690, _691), 0.0);
        vec4 _715 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_689, _690, _691), 0.0);
        float _728 = exp2((_694.w + (-0.5)) * 20.0) * 2.0;
        float _738 = exp2((_701.w + (-0.5)) * 20.0) * 2.0;
        float _748 = exp2((_708.w + (-0.5)) * 20.0) * 2.0;
        float _758 = exp2((_715.w + (-0.5)) * 20.0) * 2.0;
        float _759 = _758 * (_715.x + (-0.5));
        float _760 = _758 * (_715.y + (-0.5));
        float _761 = _758 * (_715.z + (-0.5));
        _765 = _728 * (_694.z + (-0.5));
        _767 = _728 * (_694.y + (-0.5));
        _768 = _728 * (_694.x + (-0.5));
        _769 = _738 * (_701.z + (-0.5));
        _770 = _738 * (_701.y + (-0.5));
        _771 = _738 * (_701.x + (-0.5));
        _772 = _748 * (_708.z + (-0.5));
        _773 = _748 * (_708.y + (-0.5));
        _774 = _748 * (_708.x + (-0.5));
        _775 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        _776 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
        _777 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    }
    else
    {
        _765 = _766;
        _767 = _766;
        _768 = _766;
        _769 = _766;
        _770 = _766;
        _771 = _766;
        _772 = _766;
        _773 = _766;
        _774 = _766;
        _775 = _766;
        _776 = _766;
        _777 = _766;
    }
    float _939;
    float _940;
    float _941;
    float _942;
    float _943;
    float _944;
    float _945;
    float _946;
    float _947;
    float _948;
    float _949;
    float _950;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _803 = fma(_598, cbModelParam._m0[30u].z, fma(_594, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _590));
        float _807 = fma(_598, cbModelParam._m0[31u].z, fma(_594, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _590));
        float _811 = fma(_598, cbModelParam._m0[32u].z, fma(_594, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _590));
        float _834 = _590 + _339;
        float _835 = _594 + _340;
        float _836 = _598 + _341;
        float _846 = fma(_836, cbModelParam._m0[30u].z, fma(_835, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _834)) - _803;
        float _847 = fma(_836, cbModelParam._m0[31u].z, fma(_835, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _834)) - _807;
        float _848 = fma(_836, cbModelParam._m0[32u].z, fma(_835, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _834)) - _811;
        float _852 = inversesqrt(dot(vec3(_846, _847, _848), vec3(_846, _847, _848)));
        float _865 = ((_852 * _846) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_803 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _866 = ((_852 * _847) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_807 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _867 = ((_852 * _848) / cbModelParam._m0[35u].z) + ((((((_811 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _869 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_865, _866, _867), 0.0);
        vec4 _876 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_865, _866, _867), 0.0);
        vec4 _883 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_865, _866, _867), 0.0);
        vec4 _890 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_865, _866, _867), 0.0);
        float _902 = exp2((_869.w + (-0.5)) * 20.0) * 2.0;
        float _912 = exp2((_876.w + (-0.5)) * 20.0) * 2.0;
        float _922 = exp2((_883.w + (-0.5)) * 20.0) * 2.0;
        float _932 = exp2((_890.w + (-0.5)) * 20.0) * 2.0;
        float _933 = _932 * (_890.x + (-0.5));
        float _934 = _932 * (_890.y + (-0.5));
        float _935 = _932 * (_890.z + (-0.5));
        _939 = _902 * (_869.z + (-0.5));
        _940 = _902 * (_869.y + (-0.5));
        _941 = _902 * (_869.x + (-0.5));
        _942 = _912 * (_876.z + (-0.5));
        _943 = _912 * (_876.y + (-0.5));
        _944 = _912 * (_876.x + (-0.5));
        _945 = _922 * (_883.z + (-0.5));
        _946 = _922 * (_883.y + (-0.5));
        _947 = _922 * (_883.x + (-0.5));
        _948 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
        _949 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        _950 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    }
    else
    {
        _939 = _766;
        _940 = _766;
        _941 = _766;
        _942 = _766;
        _943 = _766;
        _944 = _766;
        _945 = _766;
        _946 = _766;
        _947 = _766;
        _948 = _766;
        _949 = _766;
        _950 = _766;
    }
    float _965 = _530 * 0.5;
    float _966 = _531 * 0.5;
    float _967 = _532 * 0.5;
    float _968 = dot(vec4(_965, _966, _967, 1.0), vec4(_941, _944, _947, _950));
    float _971 = dot(vec4(_965, _966, _967, 1.0), vec4(_940, _943, _946, _949));
    float _974 = dot(vec4(_965, _966, _967, 1.0), vec4(_939, _942, _945, _948));
    float _1009;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _981 = dot(vec4(_965, _966, _967, 1.0), vec4(_765, _769, _772, _775));
        float _985 = dot(vec4(_965, _966, _967, 1.0), vec4(_767, _770, _773, _776));
        float _989 = dot(vec4(_965, _966, _967, 1.0), vec4(_768, _771, _774, _777));
        float _996 = dot(vec4(cbModelParam._m0[39u]), vec4(_965, _966, _967, 1.0));
        _1009 = dot(vec3(isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0)), isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0)), isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_996) ? 0.0 : (isnan(0.0) ? _996 : max(0.0, _996))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1009 = 1.0;
    }
    float _1020;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1011 = dot(vec4(cbModelParam._m0[40u]), vec4(_965, _966, _967, 1.0));
        _1020 = dot(vec3(isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0)), isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0)), isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1011) ? 0.0 : (isnan(0.0) ? _1011 : max(0.0, _1011))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1020 = 1.0;
    }
    float _1024 = (_1020 * cbModelParam._m0[1u].x) + (_1009 * (1.0 - cbModelParam._m0[1u].x));
    float _1032 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _346);
    float _1033 = isnan(_1032) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1032 : min(cbModelParam._m0[25u].z, _1032));
    float _1116;
    float _1118;
    float _1120;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1083 = fma(_598, cbModelParam._m0[13u].z, fma(_594, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _590)) + cbModelParam._m0[13u].w;
        float _1087 = fma(_598, cbModelParam._m0[14u].z, fma(_594, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _590)) + cbModelParam._m0[14u].w;
        float _1091 = fma(_598, cbModelParam._m0[15u].z, fma(_594, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _590)) + cbModelParam._m0[15u].w;
        float _1094 = fma(_532, cbModelParam._m0[13u].z, fma(_531, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _530));
        float _1097 = fma(_532, cbModelParam._m0[14u].z, fma(_531, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _530));
        float _1100 = fma(_532, cbModelParam._m0[15u].z, fma(_531, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _530));
        float _1128;
        if (_1094 > 0.0)
        {
            _1128 = abs((1.0 - _1083) / _1094);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1094 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1083 + 1.0) / _1094);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1128 = frontier_phi_16_14_ladder;
        }
        float _1321;
        if (_1097 > 0.0)
        {
            _1321 = abs((1.0 - _1087) / _1097);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1097 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1087 + 1.0) / _1097);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1321 = frontier_phi_25_21_ladder;
        }
        float _1740;
        if (_1100 > 0.0)
        {
            _1740 = abs((1.0 - _1091) / _1100);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1100 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1091 + 1.0) / _1100);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1740 = frontier_phi_37_32_ladder;
        }
        float _1742 = isnan(_1321) ? _1128 : (isnan(_1128) ? _1321 : min(_1128, _1321));
        float _1743 = isnan(_1740) ? _1742 : (isnan(_1742) ? _1740 : min(_1742, _1740));
        float _1747 = (_1743 * _1094) + _1083;
        float _1748 = (_1743 * _1097) + _1087;
        float _1749 = (_1743 * _1100) + _1091;
        float _1750 = _1743 * 9.9999997473787516355514526367188e-05;
        float _1752 = (-1.0) - _1750;
        float _1754 = _1750 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1749 > _1754) || ((_1749 < _1752) || ((_1748 > _1754) || ((_1748 < _1752) || ((_1747 < _1752) || (_1747 > _1754))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1951 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1749, cbModelParam._m0[9u].z, fma(_1748, cbModelParam._m0[9u].y, _1747 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1749, cbModelParam._m0[10u].z, fma(_1748, cbModelParam._m0[10u].y, _1747 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1749, cbModelParam._m0[11u].z, fma(_1748, cbModelParam._m0[11u].y, _1747 * cbModelParam._m0[11u].x))), _1033);
            frontier_phi_15_37_ladder = _1951.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1951.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1951.x * cbModelParam._m0[1u].y;
        }
        _1116 = frontier_phi_15_37_ladder_2;
        _1118 = frontier_phi_15_37_ladder_1;
        _1120 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1104 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_530, _531, _532), _1033);
        _1116 = _1104.x * cbModelParam._m0[1u].y;
        _1118 = _1104.y * cbModelParam._m0[1u].y;
        _1120 = _1104.z * cbModelParam._m0[1u].y;
    }
    float _1124 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _346);
    float _1125 = isnan(_1124) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1124 : min(cbModelParam._m0[25u].w, _1124));
    float _1218;
    float _1220;
    float _1222;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1182 = fma(_598, cbModelParam._m0[21u].z, fma(_594, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _590)) + cbModelParam._m0[21u].w;
        float _1186 = fma(_598, cbModelParam._m0[22u].z, fma(_594, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _590)) + cbModelParam._m0[22u].w;
        float _1190 = fma(_598, cbModelParam._m0[23u].z, fma(_594, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _590)) + cbModelParam._m0[23u].w;
        float _1193 = fma(_532, cbModelParam._m0[21u].z, fma(_531, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _530));
        float _1196 = fma(_532, cbModelParam._m0[22u].z, fma(_531, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _530));
        float _1199 = fma(_532, cbModelParam._m0[23u].z, fma(_531, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _530));
        float _1326;
        if (_1193 > 0.0)
        {
            _1326 = abs((1.0 - _1182) / _1193);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1193 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1182 + 1.0) / _1193);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1326 = frontier_phi_27_23_ladder;
        }
        float _1767;
        if (_1196 > 0.0)
        {
            _1767 = abs((1.0 - _1186) / _1196);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1196 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1186 + 1.0) / _1196);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1767 = frontier_phi_39_34_ladder;
        }
        float _2054;
        if (_1199 > 0.0)
        {
            _2054 = abs((1.0 - _1190) / _1199);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1199 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1190 + 1.0) / _1199);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2054 = frontier_phi_49_46_ladder;
        }
        float _2056 = isnan(_1767) ? _1326 : (isnan(_1326) ? _1767 : min(_1326, _1767));
        float _2057 = isnan(_2054) ? _2056 : (isnan(_2056) ? _2054 : min(_2056, _2054));
        float _2061 = (_2057 * _1193) + _1182;
        float _2062 = (_2057 * _1196) + _1186;
        float _2063 = (_2057 * _1199) + _1190;
        float _2064 = _2057 * 9.9999997473787516355514526367188e-05;
        float _2065 = (-1.0) - _2064;
        float _2067 = _2064 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2063 > _2067) || ((_2063 < _2065) || ((_2062 > _2067) || ((_2062 < _2065) || ((_2061 < _2065) || (_2061 > _2067))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2212 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2063, cbModelParam._m0[17u].z, fma(_2062, cbModelParam._m0[17u].y, _2061 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2063, cbModelParam._m0[18u].z, fma(_2062, cbModelParam._m0[18u].y, _2061 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2063, cbModelParam._m0[19u].z, fma(_2062, cbModelParam._m0[19u].y, _2061 * cbModelParam._m0[19u].x))), _1125);
            frontier_phi_24_49_ladder = _2212.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2212.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2212.x * cbModelParam._m0[1u].z;
        }
        _1218 = frontier_phi_24_49_ladder_2;
        _1220 = frontier_phi_24_49_ladder_1;
        _1222 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1202 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_530, _531, _532), _1125);
        _1218 = _1202.x * cbModelParam._m0[1u].z;
        _1220 = _1202.y * cbModelParam._m0[1u].z;
        _1222 = _1202.z * cbModelParam._m0[1u].z;
    }
    float _1235 = (((_561 * _343) + _562) * _521) * ((cbModelParam._m0[1u].w * (_1218 - _1116)) + _1116);
    float _1237 = (((_561 * _344) + _562) * _521) * ((cbModelParam._m0[1u].w * (_1220 - _1118)) + _1118);
    float _1239 = (((_561 * _345) + _562) * _521) * ((cbModelParam._m0[1u].w * (_1222 - _1120)) + _1120);
    float _1260 = fma(_1239, cbSceneParam._m0[89u].z, fma(_1237, cbSceneParam._m0[89u].y, _1235 * cbSceneParam._m0[89u].x));
    float _1263 = fma(_1239, cbSceneParam._m0[90u].z, fma(_1237, cbSceneParam._m0[90u].y, _1235 * cbSceneParam._m0[90u].x));
    float _1266 = fma(_1239, cbSceneParam._m0[91u].z, fma(_1237, cbSceneParam._m0[91u].y, _1235 * cbSceneParam._m0[91u].x));
    float _1300 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1304 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1308 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1312 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1313 = _1300 / _1312;
    float _1314 = _1304 / _1312;
    float _1315 = _1308 / _1312;
    float _1462;
    float _1463;
    float _1464;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1342 = ((uint(_1315 > cbSceneParam._m0[59u].y) + uint(_1315 > cbSceneParam._m0[59u].x)) + uint(_1315 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1343 = _1342 + 43u;
        uint _1351 = _1342 + 44u;
        uint _1359 = _1342 + 45u;
        uint _1367 = _1342 + 46u;
        float _1378 = fma(_1312, cbSceneParam._m0[_1343].w, fma(_1308, cbSceneParam._m0[_1343].z, fma(_1304, cbSceneParam._m0[_1343].y, _1300 * cbSceneParam._m0[_1343].x)));
        float _1382 = fma(_1312, cbSceneParam._m0[_1351].w, fma(_1308, cbSceneParam._m0[_1351].z, fma(_1304, cbSceneParam._m0[_1351].y, _1300 * cbSceneParam._m0[_1351].x)));
        float _1390 = fma(_1312, cbSceneParam._m0[_1367].w, fma(_1308, cbSceneParam._m0[_1367].z, fma(_1304, cbSceneParam._m0[_1367].y, _1300 * cbSceneParam._m0[_1367].x)));
        float _1395 = cbSceneParam._m0[33u].z * _1390;
        float _1397 = cbSceneParam._m0[33u].w * _1390;
        float _1400 = fma(_1312, cbSceneParam._m0[_1359].w, fma(_1308, cbSceneParam._m0[_1359].z, fma(_1304, cbSceneParam._m0[_1359].y, _1300 * cbSceneParam._m0[_1359].x))) / _1390;
        float _1448 = (cbSceneParam._m0[33u].x - sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315))) * cbSceneParam._m0[33u].y;
        float _3290 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1455 = (isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1395 + _1378) / _1390, (_1397 + _1382) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1397 + _1378) / _1390, (_1382 - _1395) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1378 - _1395) / _1390, (_1382 - _1397) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1378 - _1397) / _1390, (_1395 + _1382) / _1390), _1400), 0.0)).x), vec4(0.25)));
        _1462 = 1.0 - (_1455 * cbSceneParam._m0[34u].x);
        _1463 = 1.0 - (_1455 * cbSceneParam._m0[34u].y);
        _1464 = 1.0 - (_1455 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1462 = 1.0;
        _1463 = 1.0;
        _1464 = 1.0;
    }
    float _1528;
    float _1530;
    float _1532;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1516 = fma(_1312, cbSceneParam._m0[63u].w, fma(_1308, cbSceneParam._m0[63u].z, fma(_1304, cbSceneParam._m0[63u].y, _1300 * cbSceneParam._m0[63u].x)));
        float _1517 = fma(_1312, cbSceneParam._m0[60u].w, fma(_1308, cbSceneParam._m0[60u].z, fma(_1304, cbSceneParam._m0[60u].y, _1300 * cbSceneParam._m0[60u].x))) / _1516;
        float _1518 = fma(_1312, cbSceneParam._m0[61u].w, fma(_1308, cbSceneParam._m0[61u].z, fma(_1304, cbSceneParam._m0[61u].y, _1300 * cbSceneParam._m0[61u].x))) / _1516;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1517 >= cbSceneParam._m0[64u].x) && (_1518 >= cbSceneParam._m0[64u].y)) && (_1517 <= cbSceneParam._m0[64u].z)) && (_1518 <= cbSceneParam._m0[64u].w))
        {
            float _1780 = fma(_1312, cbSceneParam._m0[62u].w, fma(_1308, cbSceneParam._m0[62u].z, fma(_1304, cbSceneParam._m0[62u].y, _1300 * cbSceneParam._m0[62u].x))) / _1516;
            float _1784 = isnan(cbSceneParam._m0[41u].w) ? _1780 : (isnan(_1780) ? cbSceneParam._m0[41u].w : max(_1780, cbSceneParam._m0[41u].w));
            float _1827 = (cbSceneParam._m0[33u].x - sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315))) * cbSceneParam._m0[33u].y;
            float _3306 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
            float _1834 = (isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1517, cbSceneParam._m0[33u].w + _1518), _1784), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1517, _1518 - cbSceneParam._m0[33u].z), _1784), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1517 - cbSceneParam._m0[33u].z, _1518 - cbSceneParam._m0[33u].w), _1784), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1517 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1518), _1784), 0.0)).x), vec4(0.25)));
            float _1838 = 1.0 - (_1834 * cbSceneParam._m0[34u].x);
            float _1839 = 1.0 - (_1834 * cbSceneParam._m0[34u].y);
            float _1840 = 1.0 - (_1834 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1840) ? _1464 : (isnan(_1464) ? _1840 : min(_1464, _1840));
            frontier_phi_36_35_ladder_1 = isnan(_1838) ? _1462 : (isnan(_1462) ? _1838 : min(_1462, _1838));
            frontier_phi_36_35_ladder_2 = isnan(_1839) ? _1463 : (isnan(_1463) ? _1839 : min(_1463, _1839));
        }
        else
        {
            frontier_phi_36_35_ladder = _1464;
            frontier_phi_36_35_ladder_1 = _1462;
            frontier_phi_36_35_ladder_2 = _1463;
        }
        _1528 = frontier_phi_36_35_ladder_1;
        _1530 = frontier_phi_36_35_ladder_2;
        _1532 = frontier_phi_36_35_ladder;
    }
    else
    {
        _1528 = _1462;
        _1530 = _1463;
        _1532 = _1464;
    }
    uint _1534 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1538 = floatBitsToUint(cbInstanceData._m0[_1534 + 5u]);
    uint _1540 = _1538.x * 14u;
    uint _1541 = _1540 + 13u;
    float _1547 = _521 + (-1.0);
    float _1552 = (cbLight._m0[_1541].x * _1547) + 1.0;
    float _1553 = (cbLight._m0[_1541].y * _1547) + 1.0;
    float _1554 = (cbLight._m0[_1541].w * _1547) + 1.0;
    uint _1558 = _1540 + 8u;
    float _1574 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1540].w)) * _346) * 0.949999988079071044921875);
    float _1575 = _1574 * _1574;
    float _1576 = cbLight._m0[_1540].x + _407;
    float _1577 = cbLight._m0[_1540].y + _408;
    float _1578 = cbLight._m0[_1540].z + _409;
    float _1582 = inversesqrt(dot(vec3(_1576, _1577, _1578), vec3(_1576, _1577, _1578)));
    float _1583 = _1582 * _1576;
    float _1584 = _1582 * _1577;
    float _1585 = _1582 * _1578;
    float _1586 = dot(vec3(_339, _340, _341), vec3(cbLight._m0[_1540].xyz));
    float _3332 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
    float _1589 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
    float _3343 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _1590 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
    float _1591 = dot(vec3(_339, _340, _341), vec3(_1583, _1584, _1585));
    float _3354 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
    float _1594 = isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0));
    float _1595 = dot(vec3(cbLight._m0[_1540].xyz), vec3(_1583, _1584, _1585));
    float _3365 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
    float _1599 = _1575 * _1575;
    float _1603 = ((_1594 * _1594) * (_1599 + (-1.0))) + 1.0;
    float _1611 = exp2(log2(1.0 - (isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0)))) * 5.0);
    float _1612 = 1.0 - _343;
    float _1613 = 1.0 - _344;
    float _1614 = 1.0 - _345;
    float _1621 = 1.0 - _1575;
    float _1632 = (0.5 / (((_1590 * ((_1589 * _1621) + _1575)) + 9.9999999392252902907785028219223e-09) + (((_1590 * _1621) + _1575) * _1589))) * _1589;
    float _3376 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
    float _1634 = (isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0))) * (_1599 / ((_1603 * _1603) * 3.141590118408203125));
    float _1635 = isnan(1.0) ? _1552 : (isnan(_1552) ? 1.0 : min(_1552, 1.0));
    uint _1648 = _1540 | 1u;
    uint _1652 = _1540 + 9u;
    float _1666 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1648].w)) * _346) * 0.949999988079071044921875);
    float _1667 = _1666 * _1666;
    float _1668 = cbLight._m0[_1648].x + _407;
    float _1669 = cbLight._m0[_1648].y + _408;
    float _1670 = cbLight._m0[_1648].z + _409;
    float _1674 = inversesqrt(dot(vec3(_1668, _1669, _1670), vec3(_1668, _1669, _1670)));
    float _1675 = _1674 * _1668;
    float _1676 = _1674 * _1669;
    float _1677 = _1674 * _1670;
    float _1678 = dot(vec3(_339, _340, _341), vec3(cbLight._m0[_1648].xyz));
    float _3392 = isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0));
    float _1681 = isnan(1.0) ? _3392 : (isnan(_3392) ? 1.0 : min(_3392, 1.0));
    float _1682 = dot(vec3(_339, _340, _341), vec3(_1675, _1676, _1677));
    float _3403 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
    float _1685 = isnan(1.0) ? _3403 : (isnan(_3403) ? 1.0 : min(_3403, 1.0));
    float _1686 = dot(vec3(cbLight._m0[_1648].xyz), vec3(_1675, _1676, _1677));
    float _3414 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
    float _1690 = _1667 * _1667;
    float _1694 = ((_1685 * _1685) * (_1690 + (-1.0))) + 1.0;
    float _1701 = exp2(log2(1.0 - (isnan(1.0) ? _3414 : (isnan(_3414) ? 1.0 : min(_3414, 1.0)))) * 5.0);
    float _1708 = 1.0 - _1667;
    float _1718 = (0.5 / (((_1590 * ((_1681 * _1708) + _1667)) + 9.9999999392252902907785028219223e-09) + (((_1590 * _1708) + _1667) * _1681))) * _1681;
    float _3425 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
    float _1720 = (isnan(1.0) ? _3425 : (isnan(_3425) ? 1.0 : min(_3425, 1.0))) * (_1690 / ((_1694 * _1694) * 3.141590118408203125));
    float _1721 = isnan(1.0) ? _1553 : (isnan(_1553) ? 1.0 : min(_1553, 1.0));
    float _1731 = (((((_1701 * _1612) + _343) * cbLight._m0[_1652].x) * _1720) * _1721) + ((((cbLight._m0[_1558].x * _1528) * ((_1611 * _1612) + _343)) * _1634) * _1635);
    float _1732 = (((((_1701 * _1613) + _344) * cbLight._m0[_1652].y) * _1720) * _1721) + ((((cbLight._m0[_1558].y * _1530) * ((_1611 * _1613) + _344)) * _1634) * _1635);
    float _1733 = (((((_1701 * _1614) + _345) * cbLight._m0[_1652].z) * _1720) * _1721) + ((((cbLight._m0[_1558].z * _1532) * ((_1611 * _1614) + _345)) * _1634) * _1635);
    uvec4 _1737 = floatBitsToUint(cbLight._m0[_1540 + 12u]);
    float _1841;
    float _1843;
    float _1845;
    if (_1737.x == 0u)
    {
        _1841 = _1731;
        _1843 = _1732;
        _1845 = _1733;
    }
    else
    {
        float _1851 = (cbLight._m0[_1541].z * _1547) + 1.0;
        uint _1852 = _1540 + 2u;
        uint _1856 = _1540 + 10u;
        float _1870 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1852].w)) * _346) * 0.949999988079071044921875);
        float _1871 = _1870 * _1870;
        float _1872 = cbLight._m0[_1852].x + _407;
        float _1873 = cbLight._m0[_1852].y + _408;
        float _1874 = cbLight._m0[_1852].z + _409;
        float _1878 = inversesqrt(dot(vec3(_1872, _1873, _1874), vec3(_1872, _1873, _1874)));
        float _1879 = _1878 * _1872;
        float _1880 = _1878 * _1873;
        float _1881 = _1878 * _1874;
        float _1882 = dot(vec3(_339, _340, _341), vec3(cbLight._m0[_1852].xyz));
        float _3441 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
        float _1885 = isnan(1.0) ? _3441 : (isnan(_3441) ? 1.0 : min(_3441, 1.0));
        float _1886 = dot(vec3(_339, _340, _341), vec3(_1879, _1880, _1881));
        float _3452 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1889 = isnan(1.0) ? _3452 : (isnan(_3452) ? 1.0 : min(_3452, 1.0));
        float _1890 = dot(vec3(cbLight._m0[_1852].xyz), vec3(_1879, _1880, _1881));
        float _3463 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1894 = _1871 * _1871;
        float _1898 = ((_1889 * _1889) * (_1894 + (-1.0))) + 1.0;
        float _1905 = exp2(log2(1.0 - (isnan(1.0) ? _3463 : (isnan(_3463) ? 1.0 : min(_3463, 1.0)))) * 5.0);
        float _1912 = 1.0 - _1871;
        float _1922 = (0.5 / (((_1590 * ((_1885 * _1912) + _1871)) + 9.9999999392252902907785028219223e-09) + (((_1590 * _1912) + _1871) * _1885))) * _1885;
        float _3474 = isnan(0.0) ? _1922 : (isnan(_1922) ? 0.0 : max(_1922, 0.0));
        float _1924 = (isnan(1.0) ? _3474 : (isnan(_3474) ? 1.0 : min(_3474, 1.0))) * (_1894 / ((_1898 * _1898) * 3.141590118408203125));
        float _1925 = isnan(1.0) ? _1851 : (isnan(_1851) ? 1.0 : min(_1851, 1.0));
        _1841 = (((((_1905 * _1612) + _343) * cbLight._m0[_1856].x) * _1924) * _1925) + _1731;
        _1843 = (((((_1905 * _1613) + _344) * cbLight._m0[_1856].y) * _1924) * _1925) + _1732;
        _1845 = (((((_1905 * _1614) + _345) * cbLight._m0[_1856].z) * _1924) * _1925) + _1733;
    }
    float _1960;
    float _1962;
    float _1964;
    if (_1737.y == 0u)
    {
        _1960 = _1841;
        _1962 = _1843;
        _1964 = _1845;
    }
    else
    {
        uint _1971 = _1540 + 3u;
        uint _1975 = _1540 + 11u;
        float _1989 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1971].w)) * _346) * 0.949999988079071044921875);
        float _1990 = _1989 * _1989;
        float _1991 = cbLight._m0[_1971].x + _407;
        float _1992 = cbLight._m0[_1971].y + _408;
        float _1993 = cbLight._m0[_1971].z + _409;
        float _1997 = inversesqrt(dot(vec3(_1991, _1992, _1993), vec3(_1991, _1992, _1993)));
        float _1998 = _1997 * _1991;
        float _1999 = _1997 * _1992;
        float _2000 = _1997 * _1993;
        float _2001 = dot(vec3(_339, _340, _341), vec3(cbLight._m0[_1971].xyz));
        float _3490 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2004 = isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0));
        float _2005 = dot(vec3(_339, _340, _341), vec3(_1998, _1999, _2000));
        float _3501 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0));
        float _2008 = isnan(1.0) ? _3501 : (isnan(_3501) ? 1.0 : min(_3501, 1.0));
        float _2009 = dot(vec3(cbLight._m0[_1971].xyz), vec3(_1998, _1999, _2000));
        float _3512 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
        float _2013 = _1990 * _1990;
        float _2017 = ((_2008 * _2008) * (_2013 + (-1.0))) + 1.0;
        float _2024 = exp2(log2(1.0 - (isnan(1.0) ? _3512 : (isnan(_3512) ? 1.0 : min(_3512, 1.0)))) * 5.0);
        float _2031 = 1.0 - _1990;
        float _2041 = (0.5 / (((_1590 * ((_2004 * _2031) + _1990)) + 9.9999999392252902907785028219223e-09) + (((_1590 * _2031) + _1990) * _2004))) * _2004;
        float _3523 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2043 = (isnan(1.0) ? _3523 : (isnan(_3523) ? 1.0 : min(_3523, 1.0))) * (_2013 / ((_2017 * _2017) * 3.141590118408203125));
        float _2044 = isnan(1.0) ? _1554 : (isnan(_1554) ? 1.0 : min(_1554, 1.0));
        _1960 = (((((_2024 * _1612) + _343) * cbLight._m0[_1975].x) * _2043) * _2044) + _1841;
        _1962 = (((((_2024 * _1613) + _344) * cbLight._m0[_1975].y) * _2043) * _2044) + _1843;
        _1964 = (((((_2024 * _1614) + _345) * cbLight._m0[_1975].z) * _2043) * _2044) + _1845;
    }
    float _2136;
    float _2138;
    float _2140;
    if (_1538.y == 0u)
    {
        uvec4 _2091 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2092 = _2091.x;
        uint _2103 = uint((float(_2091.y) * floor(float(uint(cbSceneParam._m0[85u].y * _415) / _2092))) + floor(float(uint(cbSceneParam._m0[85u].x * _414) / _2092)));
        float _2113 = (log2(_1315 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2114 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
        uint _2117 = uint(isnan(14.0) ? _2114 : (isnan(_2114) ? 14.0 : min(_2114, 14.0)));
        uvec4 _2122 = texelFetch(g_lightClusterGridBuffer, int(((_2117 << 2u) + (_2103 << 6u)) >> 2u));
        uint _2123 = _2122.x;
        uint _2124 = _2091.z;
        float _2217;
        float _2219;
        float _2221;
        if (((((1u << ((_2124 >> 4u) & 15u)) + 4294967295u) & _2123) == 0u) || ((_2124 & 240u) == 0u))
        {
            _2217 = 0.0;
            _2219 = 0.0;
            _2221 = 0.0;
        }
        else
        {
            float _2218;
            float _2220;
            float _2222;
            float _2345 = 0.0;
            float _2346 = 0.0;
            float _2347 = 0.0;
            uint _2348 = 0u;
            uint _2357;
            bool _2358;
            for (;;)
            {
                _2357 = texelFetch(g_lightClassification, int((((_2117 << 5u) + (_2103 << 9u)) + (_2348 << 2u)) >> 2u)).x;
                _2358 = _2357 == 0u;
                float frontier_phi_64_pred;
                float frontier_phi_64_pred_1;
                float frontier_phi_64_pred_2;
                if (_2358)
                {
                    frontier_phi_64_pred = _2347;
                    frontier_phi_64_pred_1 = _2346;
                    frontier_phi_64_pred_2 = _2345;
                }
                else
                {
                    float _2460;
                    float _2461;
                    float _2462;
                    uint _2463;
                    _2460 = _2345;
                    _2461 = _2346;
                    _2462 = _2347;
                    _2463 = _2357;
                    float _2398;
                    float _2399;
                    float _2400;
                    for (;;)
                    {
                        uint _2467 = uint(findLSB(_2463)) + (_2348 << 5u);
                        uint _2464 = (_2463 + 4294967295u) & _2463;
                        uint _2469 = _2467 * 48u;
                        vec4 _2483 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2469)).x, texelFetch(g_PointLightRenderingBuffer, int(_2469 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2469 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2469 + 3u)).x));
                        uint _2500 = (_2467 * 48u) + 8u;
                        vec3 _2511 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2500)).x, texelFetch(g_PointLightRenderingBuffer, int(_2500 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2500 + 2u)).x));
                        float _2515 = _2483.x - _1313;
                        float _2516 = _2483.y - _1314;
                        float _2517 = _2483.z - _1315;
                        float _2518 = dot(vec3(_2515, _2516, _2517), vec3(_2515, _2516, _2517));
                        float _2521 = inversesqrt(_2518);
                        float _2522 = _2521 * _2515;
                        float _2523 = _2521 * _2516;
                        float _2524 = _2521 * _2517;
                        float _2530 = 1.0 - (_2518 * _2483.w);
                        float _3549 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
                        float _2532 = sqrt(_2518) * uintBitsToFloat(uvec4(_2490, _2491, _2492, texelFetch(g_PointLightRenderingBuffer, int(((_2467 * 48u) + 4u) + 3u)).x)).w;
                        float _2536 = _2532 * _2532;
                        float _2537 = (-0.0) - _1313;
                        float _2538 = (-0.0) - _1314;
                        float _2539 = (-0.0) - _1315;
                        float _2543 = inversesqrt(dot(vec3(_2537, _2538, _2539), vec3(_2537, _2538, _2539)));
                        float _2544 = _2543 * _2537;
                        float _2545 = _2543 * _2538;
                        float _2546 = _2543 * _2539;
                        float _2553 = exp2(log2(1.0 / ((_2536 * 3.5) + 5.0)) * 0.25);
                        float _2554 = 1.0 - _543;
                        float _2561 = sqrt(1.0 - ((1.0 - (_2554 * _2554)) * (1.0 - (_2553 * _2553))));
                        float _2562 = _2561 * _2561;
                        float _2563 = _2562 * _2562;
                        float _2564 = _2544 + _2522;
                        float _2565 = _2545 + _2523;
                        float _2566 = _2546 + _2524;
                        float _2570 = inversesqrt(dot(vec3(_2564, _2565, _2566), vec3(_2564, _2565, _2566)));
                        float _2574 = dot(vec3(_436, _439, _442), vec3(_2544, _2545, _2546));
                        float _3560 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
                        float _2577 = isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0));
                        float _2578 = dot(vec3(_436, _439, _442), vec3(_2570 * _2564, _2570 * _2565, _2570 * _2566));
                        float _3571 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
                        float _2581 = isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0));
                        float _2585 = ((_2581 * _2581) * (_2563 + (-1.0))) + 1.0;
                        float _2586 = (1.39999997615814208984375 / (_2532 + 1.39999997615814208984375)) * _2562;
                        float _2587 = _2586 * _2586;
                        float _2590 = ((1.0 - _2587) * dot(vec3(_436, _439, _442), vec3(_2522, _2523, _2524))) + _2587;
                        float _3582 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
                        float _2591 = isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0));
                        float _2592 = 1.0 - _2562;
                        float _2602 = (0.5 / (((_2591 * ((_2577 * _2592) + _2562)) + 9.9999999392252902907785028219223e-09) + (((_2591 * _2592) + _2562) * _2577))) * _2591;
                        float _3593 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
                        float _2613 = (((_2563 * 3.1415927410125732421875) * (isnan(1.0) ? _3593 : (isnan(_3593) ? 1.0 : min(_3593, 1.0)))) / ((_2585 * _2585) * ((_2536 * 2.1991131305694580078125) + 3.141590118408203125))) * (isnan(1.0) ? _3549 : (isnan(_3549) ? 1.0 : min(_3549, 1.0)));
                        _2398 = (_2613 * _2511.x) + _2460;
                        _2399 = (_2613 * _2511.y) + _2461;
                        _2400 = (_2613 * _2511.z) + _2462;
                        if (_2464 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2460 = _2398;
                            _2461 = _2399;
                            _2462 = _2400;
                            _2463 = _2464;
                        }
                    }
                    frontier_phi_64_pred = _2400;
                    frontier_phi_64_pred_1 = _2399;
                    frontier_phi_64_pred_2 = _2398;
                }
                _2222 = frontier_phi_64_pred;
                _2220 = frontier_phi_64_pred_1;
                _2218 = frontier_phi_64_pred_2;
                uint _2349 = _2348 + 1u;
                if (_2349 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2345 = _2218;
                    _2346 = _2220;
                    _2347 = _2222;
                    _2348 = _2349;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2217 = _2218;
            _2219 = _2220;
            _2221 = _2222;
        }
        uvec4 _2225 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2226 = _2225.z;
        uint _2228 = (_2226 >> 8u) & 15u;
        float _2322;
        float _2324;
        float _2326;
        if (((4294967295u << _2228) & _2123) == 0u)
        {
            _2322 = _2217;
            _2324 = _2219;
            _2326 = _2221;
        }
        else
        {
            float _2338 = inversesqrt(dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315)));
            float _2339 = _2338 * _1313;
            float _2340 = _2338 * _1314;
            float _2341 = _2338 * _1315;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            if (_2228 < ((_2226 >> 12u) & 15u))
            {
                float _2323;
                float _2325;
                float _2327;
                float _2446 = _2217;
                float _2447 = _2219;
                float _2448 = _2221;
                uint _2449 = _2228;
                uint _2458;
                bool _2459;
                for (;;)
                {
                    _2458 = texelFetch(g_lightClassification, int((((_2117 << 5u) + (_2103 << 9u)) + (_2449 << 2u)) >> 2u)).x;
                    _2459 = _2458 == 0u;
                    float frontier_phi_70_pred;
                    float frontier_phi_70_pred_1;
                    float frontier_phi_70_pred_2;
                    if (_2459)
                    {
                        frontier_phi_70_pred = _2448;
                        frontier_phi_70_pred_1 = _2446;
                        frontier_phi_70_pred_2 = _2447;
                    }
                    else
                    {
                        float _2618;
                        float _2619;
                        float _2620;
                        float _2884;
                        float _2885;
                        float _2886;
                        float _2628 = _2446;
                        float _2629 = _2447;
                        float _2630 = _2448;
                        uint _2631 = _2458;
                        uint _2632;
                        uint _2642;
                        vec4 _2657;
                        float _2658;
                        vec3 _2670;
                        vec4 _2686;
                        vec4 _2702;
                        float _2749;
                        bool _2750;
                        for (;;)
                        {
                            _2642 = ((_2449 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2631));
                            _2632 = (_2631 + 4294967295u) & _2631;
                            uint _2644 = _2642 * 40u;
                            _2657 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2644)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2644 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2644 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2644 + 3u)).x));
                            _2658 = _2657.w;
                            uint _2660 = (_2642 * 40u) + 8u;
                            _2670 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2660)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2660 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2660 + 2u)).x));
                            uint _2673 = (_2642 * 40u) + 16u;
                            _2686 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2673)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2673 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2673 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2673 + 3u)).x));
                            uint _2689 = (_2642 * 40u) + 20u;
                            _2702 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2689 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2689 + 3u)).x));
                            uint _2705 = (_2642 * 40u) + 24u;
                            vec4 _2718 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2705)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2705 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2705 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2705 + 3u)).x));
                            uint _2724 = (_2642 * 40u) + 28u;
                            vec4 _2737 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2724)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2724 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2724 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2724 + 3u)).x));
                            _2749 = fma(_1315, _2737.z, fma(_1314, _2737.y, _2737.x * _1313)) + _2737.w;
                            _2750 = !((fma(_1315, _2718.z, fma(_1314, _2718.y, _2718.x * _1313)) + _2718.w) <= 0.0);
                            float frontier_phi_76_pred;
                            float frontier_phi_76_pred_1;
                            float frontier_phi_76_pred_2;
                            if (_2750)
                            {
                                float _2784 = _2657.x - _1313;
                                float _2785 = _2657.y - _1314;
                                float _2786 = _2657.z - _1315;
                                float _2787 = dot(vec3(_2784, _2785, _2786), vec3(_2784, _2785, _2786));
                                float _2790 = inversesqrt(_2787);
                                float _2791 = _2790 * _2784;
                                float _2792 = _2790 * _2785;
                                float _2793 = _2790 * _2786;
                                float _2797 = 1.0 - (_2787 / (_2658 * _2658));
                                float _3604 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
                                float _2799 = sqrt(_2787) * uintBitsToFloat(uvec4(_2753, _2754, _2755, texelFetch(g_SpotLightRenderingBuffer, int(((_2642 * 40u) + 4u) + 3u)).x)).w;
                                float _2802 = _2799 * _2799;
                                float _2803 = (fma(_1315, _2686.z, fma(_1314, _2686.y, _2686.x * _1313)) + _2686.w) / _2749;
                                float _2804 = (fma(_1315, _2702.z, fma(_1314, _2702.y, _2702.x * _1313)) + _2702.w) / _2749;
                                float _2808 = 1.0 - dot(vec2(_2803, _2804), vec2(_2803, _2804));
                                float _3615 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
                                float _2818 = exp2(log2(1.0 / ((_2802 * 3.5) + 5.0)) * 0.25);
                                float _2819 = 1.0 - _543;
                                float _2826 = sqrt(1.0 - ((1.0 - (_2819 * _2819)) * (1.0 - (_2818 * _2818))));
                                float _2827 = _2826 * _2826;
                                float _2828 = _2827 * _2827;
                                float _2829 = _2791 - _2339;
                                float _2830 = _2792 - _2340;
                                float _2831 = _2793 - _2341;
                                float _2835 = inversesqrt(dot(vec3(_2829, _2830, _2831), vec3(_2829, _2830, _2831)));
                                float _2839 = dot(vec3(_436, _439, _442), vec3((-0.0) - _2339, (-0.0) - _2340, (-0.0) - _2341));
                                float _3626 = isnan(0.0) ? _2839 : (isnan(_2839) ? 0.0 : max(_2839, 0.0));
                                float _2842 = isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0));
                                float _2843 = dot(vec3(_436, _439, _442), vec3(_2835 * _2829, _2835 * _2830, _2835 * _2831));
                                float _3637 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
                                float _2846 = isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0));
                                float _2850 = ((_2846 * _2846) * (_2828 + (-1.0))) + 1.0;
                                float _2851 = (1.39999997615814208984375 / (_2799 + 1.39999997615814208984375)) * _2827;
                                float _2852 = _2851 * _2851;
                                float _2858 = ((1.0 - _2852) * dot(vec3(_436, _439, _442), vec3(_2791, _2792, _2793))) + _2852;
                                float _3648 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
                                float _2859 = isnan(1.0) ? _3648 : (isnan(_3648) ? 1.0 : min(_3648, 1.0));
                                float _2860 = 1.0 - _2827;
                                float _2870 = (0.5 / (((_2859 * ((_2842 * _2860) + _2827)) + 9.9999999392252902907785028219223e-09) + (((_2859 * _2860) + _2827) * _2842))) * _2859;
                                float _3659 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
                                float _2880 = ((isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0))) * (isnan(1.0) ? _3604 : (isnan(_3604) ? 1.0 : min(_3604, 1.0)))) * (((_2828 * 3.1415927410125732421875) * (isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0)))) / ((_2850 * _2850) * ((_2802 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_76_pred = _2880 * _2670.z;
                                frontier_phi_76_pred_1 = _2880 * _2670.y;
                                frontier_phi_76_pred_2 = _2880 * _2670.x;
                            }
                            else
                            {
                                frontier_phi_76_pred = 0.0;
                                frontier_phi_76_pred_1 = 0.0;
                                frontier_phi_76_pred_2 = 0.0;
                            }
                            _2886 = frontier_phi_76_pred;
                            _2885 = frontier_phi_76_pred_1;
                            _2884 = frontier_phi_76_pred_2;
                            _2618 = _2884 + _2628;
                            _2619 = _2885 + _2629;
                            _2620 = _2886 + _2630;
                            if (_2632 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2628 = _2618;
                                _2629 = _2619;
                                _2630 = _2620;
                                _2631 = _2632;
                                continue;
                            }
                        }
                        frontier_phi_70_pred = _2620;
                        frontier_phi_70_pred_1 = _2618;
                        frontier_phi_70_pred_2 = _2619;
                    }
                    _2327 = frontier_phi_70_pred;
                    _2323 = frontier_phi_70_pred_1;
                    _2325 = frontier_phi_70_pred_2;
                    uint _2450 = _2449 + 1u;
                    if (_2450 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2446 = _2323;
                        _2447 = _2325;
                        _2448 = _2327;
                        _2449 = _2450;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2327;
                frontier_phi_58_59_ladder_1 = _2325;
                frontier_phi_58_59_ladder_2 = _2323;
            }
            else
            {
                frontier_phi_58_59_ladder = _2221;
                frontier_phi_58_59_ladder_1 = _2219;
                frontier_phi_58_59_ladder_2 = _2217;
            }
            _2322 = frontier_phi_58_59_ladder_2;
            _2324 = frontier_phi_58_59_ladder_1;
            _2326 = frontier_phi_58_59_ladder;
        }
        float _2331 = isnan(1.0) ? _521 : (isnan(_521) ? 1.0 : min(_521, 1.0));
        _2136 = ((_2322 * _343) * _2331) + _1960;
        _2138 = ((_2324 * _344) * _2331) + _1962;
        _2140 = ((_2326 * _345) * _2331) + _1964;
    }
    else
    {
        _2136 = _1960;
        _2138 = _1962;
        _2140 = _1964;
    }
    float _2144 = 0.959999978542327880859375 - ((isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0))) * 0.959999978542327880859375);
    float _2152 = _2144 - (exp2(log2(1.0 - _537) * 5.0) * _2144);
    uint _2159 = _1534 + 6u;
    float _2167 = _414 / cbSceneParam._m0[86u].x;
    float _2168 = _415 / cbSceneParam._m0[86u].y;
    vec4 _2182 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2167, _2168, (log2((isnan(cbSceneParam._m0[77u].w) ? _351 : (isnan(_351) ? cbSceneParam._m0[77u].w : min(_351, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2184 = _2182.x;
    float _2185 = _2182.y;
    float _2186 = _2182.z;
    float _2187 = _2182.w;
    float _2273;
    float _2275;
    float _2277;
    float _2279;
    if (_351 > cbSceneParam._m0[78u].w)
    {
        float _2236 = isnan(_351) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _351 : min(cbSceneParam._m0[80u].w, _351));
        float _2237 = _2236 / _351;
        float _2248 = _2237 * _400;
        float _2249 = _401 * _2237;
        float _2250 = (-0.0) - _2249;
        float _2251 = _2237 * _402;
        float _2253 = (cbSceneParam._m0[77u].w * _2250) / _2236;
        float _2254 = _2253 + cbSceneParam._m0[79u].w;
        float _2255 = cbSceneParam._m0[79u].w - _2249;
        float _2261 = sqrt(((_2248 * _2248) + (_2249 * _2249)) + (_2251 * _2251));
        float _2264 = (1.0 - (cbSceneParam._m0[77u].w / _2236)) * _2261;
        float _2269 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2271 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2408;
        if (abs((_2250 - _2253) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2408 = ((((_2254 > 0.0) ? exp2(_2269 * _2254) : (2.0 - exp2(_2271 * _2254))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2264;
        }
        else
        {
            float _2371 = 1.0 / cbSceneParam._m0[80u].x;
            float _2372 = isnan(_2255) ? _2254 : (isnan(_2254) ? _2255 : max(_2254, _2255));
            float _2373 = isnan(_2255) ? _2254 : (isnan(_2254) ? _2255 : min(_2254, _2255));
            float _2382 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : min(_2372, 0.0));
            float _2383 = isnan(0.0) ? _2373 : (isnan(_2373) ? 0.0 : min(_2373, 0.0));
            _2408 = ((abs(_2261 / _2250) * cbSceneParam._m0[80u].y) * ((((_2382 - _2383) * 2.0) - ((exp2(_2269 * (isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0)))) - exp2(_2269 * (isnan(0.0) ? _2373 : (isnan(_2373) ? 0.0 : max(_2373, 0.0))))) * _2371)) - ((exp2(_2271 * _2382) - exp2(_2271 * _2383)) * _2371))) + (_2264 * cbSceneParam._m0[80u].z);
        }
        vec4 _2410 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2167, _2168, 1.0), 0.0);
        float _2419 = exp2((_2408 * (-1.44269502162933349609375)) * (1.0 - _2410.w));
        float _2420 = log2(_2419);
        float _2436 = log2(_2187);
        _2273 = (exp2(_2436 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2420 * cbSceneParam._m0[78u].x)) * _2410.x) / cbSceneParam._m0[78u].x)) + _2184;
        _2275 = (exp2(_2436 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2420 * cbSceneParam._m0[78u].y)) * _2410.y) / cbSceneParam._m0[78u].y)) + _2185;
        _2277 = (exp2(_2436 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2420 * cbSceneParam._m0[78u].z)) * _2410.z) / cbSceneParam._m0[78u].z)) + _2186;
        _2279 = _2419 * _2187;
    }
    else
    {
        _2273 = _2184;
        _2275 = _2185;
        _2277 = _2186;
        _2279 = _2187;
    }
    float _2290 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2291 = _2290 == 3.0;
    float _2292 = log2(_2279);
    float _2299 = exp2(_2292 * cbSceneParam._m0[78u].x) * (((_2136 + ((isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0))) * _1024)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.x) * exp2((-0.0) - ((cbMtdParam._m0[10u].w * _318) * _319))) * _2152));
    float _2300 = exp2(_2292 * cbSceneParam._m0[78u].y) * (((_2138 + ((isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0))) * _1024)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.y) * exp2((-0.0) - ((cbMtdParam._m0[11u].x * _318) * _319))) * _2152));
    float _2301 = exp2(_2292 * cbSceneParam._m0[78u].z) * (((_2140 + ((isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0))) * _1024)) * cbPerFrame._m0[3u].x) + (((cbSceneParam._m0[72u].w * _260.z) * exp2((-0.0) - ((cbMtdParam._m0[11u].y * _318) * _319))) * _2152));
    float _2310 = (_2290 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2310 * (_2291 ? _2299 : (_2299 + (cbSceneParam._m0[72u].w * _2273)));
    SV_Target.y = _2310 * (_2291 ? _2300 : (_2300 + (cbSceneParam._m0[72u].w * _2275)));
    SV_Target.z = _2310 * (_2291 ? _2301 : (_2301 + (cbSceneParam._m0[72u].w * _2277)));
    SV_Target.w = cbInstanceData._m0[_2159].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2159].w;
}


