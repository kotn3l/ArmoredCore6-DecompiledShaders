#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_M1_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _127 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _128 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _129 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _134 = inversesqrt(dot(vec3(_127, _128, _129), vec3(_127, _128, _129)));
    float _135 = _134 * _127;
    float _136 = _134 * _128;
    float _137 = _134 * _129;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = _141 * NORMAL.x;
    float _143 = _141 * NORMAL.y;
    float _144 = _141 * NORMAL.z;
    float _148 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _149 = _148 * TANGENT.x;
    float _150 = _148 * TANGENT.y;
    float _151 = _148 * TANGENT.z;
    float _156;
    float _157;
    float _158;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _156 = (-0.0) - _142;
        _157 = (-0.0) - _143;
        _158 = (-0.0) - _144;
    }
    else
    {
        _156 = _142;
        _157 = _143;
        _158 = _144;
    }
    vec4 _178 = texture(sampler2D(M_AMSN_M0_M1_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _184 = _178.x * cbMtdParam._m0[9u].x;
    float _185 = _178.y * cbMtdParam._m0[9u].y;
    float _186 = _178.z * cbMtdParam._m0[9u].z;
    vec4 _207 = texture(sampler2D(M_AMSN_M0_M1_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _211 = _207.z;
    float _215 = (_207.x * 2.0) + (-1.0);
    float _217 = (_207.y * 2.0) + (-1.0);
    float _218 = dot(vec2(_215, _217), vec2(_215, _217));
    float _436 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _224 = sqrt(1.0 - (isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0))));
    float _227 = fma(_224, _156, fma(_217, _149, _215 * _135));
    float _230 = fma(_224, _157, fma(_217, _150, _215 * _136));
    float _233 = fma(_224, _158, fma(_217, _151, _215 * _137));
    float _237 = inversesqrt(dot(vec3(_227, _230, _233), vec3(_227, _230, _233)));
    float _245 = cbMtdParam._m0[10u].x + dot(vec4(_237 * _227, _237 * _230, _237 * _233, 0.0), vec4(cbMtdParam._m0[10u].zw, cbMtdParam._m0[11u].x, 0.0));
    float _447 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _246 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
    vec4 _258 = texture(sampler2D(M_AMSN_M0_M1_Snow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _269 = ((_258.x - _184) * _246) + _184;
    float _270 = ((_258.y - _185) * _246) + _185;
    float _271 = ((_258.z - _186) * _246) + _186;
    vec4 _283 = texture(sampler2D(M_AMSN_M0_M1_Snow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _285 = _283.x;
    float _287 = _285 - (_285 * _246);
    vec4 _300 = texture(sampler2D(M_AMSN_M0_M1_Snow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _307 = (_300.x * 2.0) + (-1.0);
    float _308 = (_300.y * 2.0) + (-1.0);
    float _309 = dot(vec2(_307, _308), vec2(_307, _308));
    float _458 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _317 = ((_300.z - _211) * _246) + _211;
    float _326 = ((sqrt(1.0 - (isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0)))) - _224) * _246) + _224;
    float _330 = (((_307 - _215) * _246) + _215) + (cbMtdParam._m0[10u].y * _215);
    float _331 = (((_308 - _217) * _246) + _217) + (cbMtdParam._m0[10u].y * _217);
    float _334 = fma(_326, _156, fma(_331, _149, _330 * _135));
    float _337 = fma(_326, _157, fma(_331, _150, _330 * _136));
    float _340 = fma(_326, _158, fma(_331, _151, _330 * _137));
    float _344 = inversesqrt(dot(vec3(_334, _337, _340), vec3(_334, _337, _340)));
    float _469 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _480 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _491 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _502 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _513 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    uint _364 = uint(roundEven(NORMAL.w)) * 13u;
    uint _367 = (_364 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _373 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0)))) * cbInstanceData._m0[_367].x;
    float _374 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0)))) * cbInstanceData._m0[_367].y;
    float _375 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0)))) * cbInstanceData._m0[_367].z;
    float _524 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _535 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _546 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    uint _379 = _364 + 6u;
    bool _408 = cbMtdParam._m0[1u].z != 0.0;
    float _409 = _408 ? cbInstanceData._m0[_379].w : 0.0;
    SV_Target.x = ((_334 * 0.5) * _344) + 0.500488758087158203125;
    SV_Target.y = ((_337 * 0.5) * _344) + 0.500488758087158203125;
    SV_Target.z = ((_340 * 0.5) * _344) + 0.500488758087158203125;
    SV_Target.w = _409;
    SV_Target_1.x = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    SV_Target_1.y = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _408 ? cbInstanceData._m0[_379].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
    SV_Target_2.y = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
    SV_Target_2.z = isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0));
    SV_Target_2.w = _408 ? cbInstanceData._m0[_379].w : (float(floatBitsToUint(cbInstanceData._m0[_364 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _409;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _409;
}


