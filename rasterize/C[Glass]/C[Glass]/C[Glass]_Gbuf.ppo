#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D C_Glass_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _111 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _112 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _113 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _118 = inversesqrt(dot(vec3(_111, _112, _113), vec3(_111, _112, _113)));
    float _125 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _132 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _160 = texture(sampler2D(C_Glass_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _169 = (_160.x * 2.0) + (-1.0);
    float _171 = (_160.y * 2.0) + (-1.0);
    float _172 = dot(vec2(_169, _171), vec2(_169, _171));
    float _286 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _178 = sqrt(1.0 - (isnan(1.0) ? _286 : (isnan(_286) ? 1.0 : min(_286, 1.0))));
    float _180 = cbMtdParam._m0[10u].x + _160.z;
    float _183 = fma(_178, _125 * NORMAL.x, fma(_171, _132 * TANGENT.x, (_118 * _111) * _169));
    float _186 = fma(_178, _125 * NORMAL.y, fma(_171, _132 * TANGENT.y, (_118 * _112) * _169));
    float _189 = fma(_178, _125 * NORMAL.z, fma(_171, _132 * TANGENT.z, (_118 * _113) * _169));
    float _193 = inversesqrt(dot(vec3(_183, _186, _189), vec3(_183, _186, _189)));
    float _297 = isnan(0.0) ? cbMtdParam._m0[10u].y : (isnan(cbMtdParam._m0[10u].y) ? 0.0 : max(cbMtdParam._m0[10u].y, 0.0));
    float _194 = isnan(1.0) ? _297 : (isnan(_297) ? 1.0 : min(_297, 1.0));
    float _308 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _319 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _330 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _341 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _352 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    uint _214 = uint(roundEven(NORMAL.w)) * 13u;
    uint _217 = (_214 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _223 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _319 : (isnan(_319) ? 1.0 : min(_319, 1.0)))) * cbInstanceData._m0[_217].x;
    float _224 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _330 : (isnan(_330) ? 1.0 : min(_330, 1.0)))) * cbInstanceData._m0[_217].y;
    float _225 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0)))) * cbInstanceData._m0[_217].z;
    float _363 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _374 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _385 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _396 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _235 = cbInstanceData._m0[_214 + 6u].w * (isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0)));
    bool _260 = cbMtdParam._m0[1u].z != 0.0;
    float _261 = _260 ? _235 : 0.0;
    SV_Target.x = ((_183 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.y = ((_186 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.z = ((_189 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.w = _261;
    SV_Target_1.x = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    SV_Target_1.y = isnan(1.0) ? _308 : (isnan(_308) ? 1.0 : min(_308, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _260 ? _235 : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _363 : (isnan(_363) ? 1.0 : min(_363, 1.0));
    SV_Target_2.y = isnan(1.0) ? _374 : (isnan(_374) ? 1.0 : min(_374, 1.0));
    SV_Target_2.z = isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0));
    SV_Target_2.w = _260 ? _235 : (float(floatBitsToUint(cbInstanceData._m0[_214 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _261;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _261;
}


