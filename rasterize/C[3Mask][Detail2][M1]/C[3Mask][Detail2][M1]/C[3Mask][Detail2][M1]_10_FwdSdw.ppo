#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_20;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_21;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1439;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _298 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _348 = cbMtdParam._m0[20u].z * texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w)).x;
    float _358 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _348)) + 1.0;
    float _4049 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _359 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
    float _366 = (_359 * ((_298.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _367 = (_359 * ((_298.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _368 = (_359 * ((_298.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _386 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.x) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.y) + cbTextureTilingScale._m0[20u].w));
    float _417 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _348)) + 1.0;
    float _4060 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _418 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
    float _425 = (_418 * ((_386.x * cbMtdParam._m0[12u].x) - _366)) + _366;
    float _426 = (_418 * ((_386.y * cbMtdParam._m0[12u].y) - _367)) + _367;
    float _427 = (_418 * ((_386.z * cbMtdParam._m0[12u].z) - _368)) + _368;
    vec4 _445 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _470 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _348)) + 1.0;
    float _4071 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
    vec4 _499 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _507 = ((((_471 * ((_445.x * cbMtdParam._m0[13u].x) - _425)) + _425) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _499.x;
    float _510 = ((((_471 * ((_445.y * cbMtdParam._m0[13u].y) - _426)) + _426) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _499.y;
    float _513 = ((((_471 * ((_445.z * cbMtdParam._m0[13u].z) - _427)) + _427) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _499.z;
    vec4 _533 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _562 = (TEXCOORD_5.x - ((cbMtdParam._m0[16u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD.z) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD.w) + cbTextureTilingScale._m0[21u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].z + 1.0);
    float _4082 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _563 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
    float _570 = (_563 * ((_533.x * cbMtdParam._m0[14u].x) - _507)) + _507;
    float _571 = (_563 * ((_533.y * cbMtdParam._m0[14u].y) - _510)) + _510;
    float _572 = (_563 * ((_533.z * cbMtdParam._m0[14u].z) - _513)) + _513;
    vec4 _592 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _620 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[19u].z + 1.0);
    float _4093 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _621 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    float _628 = (_621 * ((_592.x * cbMtdParam._m0[15u].x) - _570)) + _570;
    float _629 = (_621 * ((_592.y * cbMtdParam._m0[15u].y) - _571)) + _571;
    float _630 = (_621 * ((_592.z * cbMtdParam._m0[15u].z) - _572)) + _572;
    vec4 _643 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _645 = _643.x;
    float _663 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _645) * _359) + _645;
    float _680 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _663) * _418) + _663;
    float _697 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _680) * _471) + _680;
    float _699 = _697 - (_697 * TEXCOORD_5.x);
    vec4 _715 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _737 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _739 = _737.x;
    float _740 = _737.y;
    float _743 = cbMtdParam._m0[18u].y * _737.z;
    vec4 _755 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _764 = (((cbMtdParam._m0[18u].x * _755.z) - _743) * _359) + _743;
    vec4 _777 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _788 = (((cbMtdParam._m0[17u].w * _777.z) - _764) * _418) + _764;
    vec4 _801 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _810 = (((cbMtdParam._m0[17u].z * _801.z) - _788) * _471) + _788;
    float _815 = ((cbMtdParam._m0[17u].x * TEXCOORD_5.x) * ((_715.z * cbMtdParam._m0[18u].z) - _810)) + _810;
    vec4 _828 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_21, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _842 = ((cbMtdParam._m0[19u].x * TEXCOORD_8) * ((_828.z * cbMtdParam._m0[19u].y) - _815)) + _815;
    float _847 = ((_755.x - _739) * _359) + _739;
    float _848 = ((_755.y - _740) * _359) + _740;
    float _853 = ((_777.x - _847) * _418) + _847;
    float _854 = ((_777.y - _848) * _418) + _848;
    float _863 = ((((_801.x - _853) * _471) + _853) * 2.0) + (-1.0);
    float _864 = ((((_801.y - _854) * _471) + _854) * 2.0) + (-1.0);
    float _865 = dot(vec2(_863, _864), vec2(_863, _864));
    float _4104 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _870 = sqrt(1.0 - (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))));
    float _883 = (((((_715.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[16u].y) + _863) + ((((_828.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[18u].w);
    float _884 = (((((_715.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[16u].y) + _864) + ((((_828.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[18u].w);
    float _887 = fma(_870, _242 * NORMAL.x, fma(_884, _249 * TANGENT.x, (_235 * _227) * _883));
    float _890 = fma(_870, _242 * NORMAL.y, fma(_884, _249 * TANGENT.y, (_235 * _228) * _883));
    float _893 = fma(_870, _242 * NORMAL.z, fma(_884, _249 * TANGENT.z, (_235 * _229) * _883));
    float _897 = inversesqrt(dot(vec3(_887, _890, _893), vec3(_887, _890, _893)));
    float _898 = _897 * _887;
    float _899 = _897 * _890;
    float _900 = _897 * _893;
    float _4115 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _901 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    float _4126 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _4137 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _4148 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _4159 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _905 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    float _921 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _961 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _971 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _961);
    float _972 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _961);
    float _973 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _961);
    float _977 = inversesqrt(dot(vec3(_971, _972, _973), vec3(_971, _972, _973)));
    float _978 = _971 * _977;
    float _979 = _972 * _977;
    float _980 = _973 * _977;
    float _986 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _987 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1005 = fma(_900, cbSceneParam._m0[5u].z, fma(_899, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _898));
    float _1008 = fma(_900, cbSceneParam._m0[6u].z, fma(_899, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _898));
    float _1011 = fma(_900, cbSceneParam._m0[7u].z, fma(_899, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _898));
    uint _1024 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1026 = (_1024 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1032 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)))) * cbInstanceData._m0[_1026].x;
    float _1033 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0)))) * cbInstanceData._m0[_1026].y;
    float _1034 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0)))) * cbInstanceData._m0[_1026].z;
    float _4170 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _1035 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
    float _4181 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _1036 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    float _4192 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _1037 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _1038 = 1.0 - _905;
    float _1039 = _1035 * _1038;
    float _1040 = _1036 * _1038;
    float _1041 = _1037 * _1038;
    float _1046 = (_1035 + (-0.039999999105930328369140625)) * _905;
    float _1047 = (_1036 + (-0.039999999105930328369140625)) * _905;
    float _1048 = (_1037 + (-0.039999999105930328369140625)) * _905;
    float _1049 = _1046 + 0.039999999105930328369140625;
    float _1051 = _1047 + 0.039999999105930328369140625;
    float _1052 = _1048 + 0.039999999105930328369140625;
    vec4 _1061 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _986, cbSceneParam._m0[86u].y * _987));
    float _1064 = _1061.x * TEXCOORD_5.w;
    float _1065 = dot(vec3(_898, _899, _900), vec3(_978, _979, _980));
    float _1068 = _1065 * 2.0;
    float _1072 = (_1068 * _898) - _978;
    float _1073 = (_1068 * _899) - _979;
    float _1074 = (_1068 * _900) - _980;
    float _1078 = abs(dot(vec3(_978, _979, _980), vec3(_898, _899, _900)));
    float _4203 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1080 = sqrt(_901);
    float _1093 = exp2((_1080 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1080 * 3.0));
    float _1099 = (1.0 - _1093) * ((_1080 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1100 = _1093 * _1080;
    float _1128 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1132 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1136 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1438;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1163 = fma(_1136, cbModelParam._m0[26u].z, fma(_1132, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1128));
        float _1167 = fma(_1136, cbModelParam._m0[27u].z, fma(_1132, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1128));
        float _1171 = fma(_1136, cbModelParam._m0[28u].z, fma(_1132, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1128));
        float _1196 = _1128 + _898;
        float _1197 = _1132 + _899;
        float _1198 = _1136 + _900;
        float _1208 = fma(_1198, cbModelParam._m0[26u].z, fma(_1197, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1196)) - _1163;
        float _1209 = fma(_1198, cbModelParam._m0[27u].z, fma(_1197, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1196)) - _1167;
        float _1210 = fma(_1198, cbModelParam._m0[28u].z, fma(_1197, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1196)) - _1171;
        float _1214 = inversesqrt(dot(vec3(_1208, _1209, _1210), vec3(_1208, _1209, _1210)));
        float _1227 = ((_1214 * _1208) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1163 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1228 = ((_1214 * _1209) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1167 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1229 = ((_1214 * _1210) / cbModelParam._m0[34u].z) + ((((((_1171 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1232 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1239 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1246 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1253 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        float _1266 = exp2((_1232.w + (-0.5)) * 20.0) * 2.0;
        float _1267 = _1266 * (_1232.x + (-0.5));
        float _1268 = _1266 * (_1232.y + (-0.5));
        float _1269 = _1266 * (_1232.z + (-0.5));
        float _1276 = exp2((_1239.w + (-0.5)) * 20.0) * 2.0;
        float _1277 = _1276 * (_1239.x + (-0.5));
        float _1278 = _1276 * (_1239.y + (-0.5));
        float _1279 = _1276 * (_1239.z + (-0.5));
        float _1286 = exp2((_1246.w + (-0.5)) * 20.0) * 2.0;
        float _1287 = _1286 * (_1246.x + (-0.5));
        float _1288 = _1286 * (_1246.y + (-0.5));
        float _1289 = _1286 * (_1246.z + (-0.5));
        float _1296 = exp2((_1253.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1253.x + (-0.5));
        float _1298 = _1296 * (_1253.y + (-0.5));
        float _1299 = _1296 * (_1253.z + (-0.5));
        float _1300 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1301 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1302 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = _1267 * 0.5;
        float _1304 = _1277 * 0.5;
        float _1305 = _1287 * 0.5;
        float _1306 = dot(vec3(_1303, _1304, _1305), vec3(_1303, _1304, _1305));
        float _1311 = (_1306 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1306);
        float _1320 = (dot(vec3(_898, _899, _900), vec3(_1311 * _1303, _1311 * _1304, _1311 * _1305)) + 1.0) * 0.5;
        float _4229 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1330 = sqrt(((_1304 * _1304) + (_1303 * _1303)) + (_1305 * _1305)) / (_1300 + 9.9999997473787516355514526367188e-06);
        float _4240 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1331 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _1332 = _1331 * 2.0;
        float _1336 = (1.0 - _1331) / (_1331 + 1.0);
        float _4251 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
        float _1346 = ((((1.0 - _1337) * (_1332 + 2.0)) * exp2(log2(isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0))) * (_1332 + 1.0))) + _1337) * _1300;
        float _1347 = _1268 * 0.5;
        float _1348 = _1278 * 0.5;
        float _1349 = _1288 * 0.5;
        float _1350 = dot(vec3(_1347, _1348, _1349), vec3(_1347, _1348, _1349));
        float _1355 = (_1350 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1350);
        float _1363 = (dot(vec3(_898, _899, _900), vec3(_1355 * _1347, _1355 * _1348, _1355 * _1349)) + 1.0) * 0.5;
        float _4262 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1372 = sqrt(((_1348 * _1348) + (_1347 * _1347)) + (_1349 * _1349)) / (_1301 + 9.9999997473787516355514526367188e-06);
        float _4273 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1373 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1374 = _1373 * 2.0;
        float _1378 = (1.0 - _1373) / (_1373 + 1.0);
        float _4284 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
        float _1388 = ((((1.0 - _1379) * (_1374 + 2.0)) * exp2(log2(isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (_1374 + 1.0))) + _1379) * _1301;
        float _1389 = _1269 * 0.5;
        float _1390 = _1279 * 0.5;
        float _1391 = _1289 * 0.5;
        float _1392 = dot(vec3(_1389, _1390, _1391), vec3(_1389, _1390, _1391));
        float _1397 = (_1392 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1392);
        float _1405 = (dot(vec3(_898, _899, _900), vec3(_1397 * _1389, _1397 * _1390, _1397 * _1391)) + 1.0) * 0.5;
        float _4295 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1414 = sqrt(((_1390 * _1390) + (_1389 * _1389)) + (_1391 * _1391)) / (_1302 + 9.9999997473787516355514526367188e-06);
        float _4306 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1415 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1416 = _1415 * 2.0;
        float _1420 = (1.0 - _1415) / (_1415 + 1.0);
        float _4317 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _1430 = ((((1.0 - _1421) * (_1416 + 2.0)) * exp2(log2(isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * (_1416 + 1.0))) + _1421) * _1302;
        _1438 = _1269;
        _1440 = _1268;
        _1441 = _1267;
        _1442 = _1279;
        _1443 = _1278;
        _1444 = _1277;
        _1445 = _1289;
        _1446 = _1288;
        _1447 = _1287;
        _1448 = _1302;
        _1449 = _1301;
        _1450 = _1300;
        _1451 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0)));
        _1452 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0)));
        _1453 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0)));
    }
    else
    {
        _1438 = _1439;
        _1440 = _1439;
        _1441 = _1439;
        _1442 = _1439;
        _1443 = _1439;
        _1444 = _1439;
        _1445 = _1439;
        _1446 = _1439;
        _1447 = _1439;
        _1448 = _1439;
        _1449 = _1439;
        _1450 = _1439;
        _1451 = 0.0;
        _1452 = 0.0;
        _1453 = 0.0;
    }
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    float _1761;
    float _1762;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1479 = fma(_1136, cbModelParam._m0[30u].z, fma(_1132, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1128));
        float _1483 = fma(_1136, cbModelParam._m0[31u].z, fma(_1132, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1128));
        float _1487 = fma(_1136, cbModelParam._m0[32u].z, fma(_1132, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1128));
        float _1510 = _1128 + _898;
        float _1511 = _1132 + _899;
        float _1512 = _1136 + _900;
        float _1522 = fma(_1512, cbModelParam._m0[30u].z, fma(_1511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1510)) - _1479;
        float _1523 = fma(_1512, cbModelParam._m0[31u].z, fma(_1511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1510)) - _1483;
        float _1524 = fma(_1512, cbModelParam._m0[32u].z, fma(_1511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1510)) - _1487;
        float _1528 = inversesqrt(dot(vec3(_1522, _1523, _1524), vec3(_1522, _1523, _1524)));
        float _1541 = ((_1528 * _1522) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1479 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1542 = ((_1528 * _1523) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1483 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1543 = ((_1528 * _1524) / cbModelParam._m0[35u].z) + ((((((_1487 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1545 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1552 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1559 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1566 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        float _1578 = exp2((_1545.w + (-0.5)) * 20.0) * 2.0;
        float _1579 = _1578 * (_1545.x + (-0.5));
        float _1580 = _1578 * (_1545.y + (-0.5));
        float _1581 = _1578 * (_1545.z + (-0.5));
        float _1588 = exp2((_1552.w + (-0.5)) * 20.0) * 2.0;
        float _1589 = _1588 * (_1552.x + (-0.5));
        float _1590 = _1588 * (_1552.y + (-0.5));
        float _1591 = _1588 * (_1552.z + (-0.5));
        float _1598 = exp2((_1559.w + (-0.5)) * 20.0) * 2.0;
        float _1599 = _1598 * (_1559.x + (-0.5));
        float _1600 = _1598 * (_1559.y + (-0.5));
        float _1601 = _1598 * (_1559.z + (-0.5));
        float _1608 = exp2((_1566.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1566.x + (-0.5));
        float _1610 = _1608 * (_1566.y + (-0.5));
        float _1611 = _1608 * (_1566.z + (-0.5));
        float _1612 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1613 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1614 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1615 = _1579 * 0.5;
        float _1616 = _1589 * 0.5;
        float _1617 = _1599 * 0.5;
        float _1618 = dot(vec3(_1615, _1616, _1617), vec3(_1615, _1616, _1617));
        float _1623 = (_1618 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1618);
        float _1631 = (dot(vec3(_898, _899, _900), vec3(_1623 * _1615, _1623 * _1616, _1623 * _1617)) + 1.0) * 0.5;
        float _4358 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1640 = sqrt(((_1616 * _1616) + (_1615 * _1615)) + (_1617 * _1617)) / (_1612 + 9.9999997473787516355514526367188e-06);
        float _4369 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1641 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
        float _1642 = _1641 * 2.0;
        float _1646 = (1.0 - _1641) / (_1641 + 1.0);
        float _4380 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1647 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _1656 = ((((1.0 - _1647) * (_1642 + 2.0)) * exp2(log2(isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * (_1642 + 1.0))) + _1647) * _1612;
        float _1657 = _1580 * 0.5;
        float _1658 = _1590 * 0.5;
        float _1659 = _1600 * 0.5;
        float _1660 = dot(vec3(_1657, _1658, _1659), vec3(_1657, _1658, _1659));
        float _1665 = (_1660 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1660);
        float _1673 = (dot(vec3(_898, _899, _900), vec3(_1665 * _1657, _1665 * _1658, _1665 * _1659)) + 1.0) * 0.5;
        float _4391 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1682 = sqrt(((_1658 * _1658) + (_1657 * _1657)) + (_1659 * _1659)) / (_1613 + 9.9999997473787516355514526367188e-06);
        float _4402 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1683 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1684 = _1683 * 2.0;
        float _1688 = (1.0 - _1683) / (_1683 + 1.0);
        float _4413 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1689 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1698 = ((((1.0 - _1689) * (_1684 + 2.0)) * exp2(log2(isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * (_1684 + 1.0))) + _1689) * _1613;
        float _1699 = _1581 * 0.5;
        float _1700 = _1591 * 0.5;
        float _1701 = _1601 * 0.5;
        float _1702 = dot(vec3(_1699, _1700, _1701), vec3(_1699, _1700, _1701));
        float _1707 = (_1702 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1702);
        float _1715 = (dot(vec3(_898, _899, _900), vec3(_1707 * _1699, _1707 * _1700, _1707 * _1701)) + 1.0) * 0.5;
        float _4424 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1724 = sqrt(((_1700 * _1700) + (_1699 * _1699)) + (_1701 * _1701)) / (_1614 + 9.9999997473787516355514526367188e-06);
        float _4435 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1725 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1726 = _1725 * 2.0;
        float _1730 = (1.0 - _1725) / (_1725 + 1.0);
        float _4446 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1731 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
        float _1740 = ((((1.0 - _1731) * (_1726 + 2.0)) * exp2(log2(isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (_1726 + 1.0))) + _1731) * _1614;
        _1748 = _1581;
        _1749 = _1580;
        _1750 = _1579;
        _1751 = _1591;
        _1752 = _1590;
        _1753 = _1589;
        _1754 = _1601;
        _1755 = _1600;
        _1756 = _1599;
        _1757 = _1614;
        _1758 = _1613;
        _1759 = _1612;
        _1760 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0)));
        _1761 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0)));
        _1762 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0)));
    }
    else
    {
        _1748 = _1439;
        _1749 = _1439;
        _1750 = _1439;
        _1751 = _1439;
        _1752 = _1439;
        _1753 = _1439;
        _1754 = _1439;
        _1755 = _1439;
        _1756 = _1439;
        _1757 = _1439;
        _1758 = _1439;
        _1759 = _1439;
        _1760 = 0.0;
        _1761 = 0.0;
        _1762 = 0.0;
    }
    float _1772 = (cbModelParam._m0[1u].x * (_1760 - _1451)) + _1451;
    float _1773 = (cbModelParam._m0[1u].x * (_1761 - _1452)) + _1452;
    float _1774 = (cbModelParam._m0[1u].x * (_1762 - _1453)) + _1453;
    float _1795 = fma(_1774, cbSceneParam._m0[89u].z, fma(_1773, cbSceneParam._m0[89u].y, _1772 * cbSceneParam._m0[89u].x));
    float _1798 = fma(_1774, cbSceneParam._m0[90u].z, fma(_1773, cbSceneParam._m0[90u].y, _1772 * cbSceneParam._m0[90u].x));
    float _1801 = fma(_1774, cbSceneParam._m0[91u].z, fma(_1773, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1772));
    float _1816 = _1072 * 0.5;
    float _1817 = _1073 * 0.5;
    float _1818 = _1074 * 0.5;
    float _1819 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1750, _1753, _1756, _1759));
    float _1822 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1749, _1752, _1755, _1758));
    float _1825 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1748, _1751, _1754, _1757));
    float _1859;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1832 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1438, _1442, _1445, _1448));
        float _1836 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1440, _1443, _1446, _1449));
        float _1840 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1441, _1444, _1447, _1450));
        float _1847 = dot(vec4(cbModelParam._m0[39u]), vec4(_1816, _1817, _1818, 1.0));
        _1859 = dot(vec3(isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0)), isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)), isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1847) ? 0.0 : (isnan(0.0) ? _1847 : max(0.0, _1847))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1859 = 1.0;
    }
    float _1870;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1861 = dot(vec4(cbModelParam._m0[40u]), vec4(_1816, _1817, _1818, 1.0));
        _1870 = dot(vec3(isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0)), isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0)), isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1861) ? 0.0 : (isnan(0.0) ? _1861 : max(0.0, _1861))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1870 = 1.0;
    }
    float _1874 = (_1870 * cbModelParam._m0[1u].x) + (_1859 * (1.0 - cbModelParam._m0[1u].x));
    float _1884 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _901);
    float _1885 = isnan(_1884) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1884 : min(cbModelParam._m0[25u].z, _1884));
    float _1965;
    float _1967;
    float _1969;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1932 = fma(_1136, cbModelParam._m0[13u].z, fma(_1132, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1128)) + cbModelParam._m0[13u].w;
        float _1936 = fma(_1136, cbModelParam._m0[14u].z, fma(_1132, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1128)) + cbModelParam._m0[14u].w;
        float _1940 = fma(_1136, cbModelParam._m0[15u].z, fma(_1132, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1128)) + cbModelParam._m0[15u].w;
        float _1943 = fma(_1074, cbModelParam._m0[13u].z, fma(_1073, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1072));
        float _1946 = fma(_1074, cbModelParam._m0[14u].z, fma(_1073, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1072));
        float _1949 = fma(_1074, cbModelParam._m0[15u].z, fma(_1073, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1072));
        float _1977;
        if (_1943 > 0.0)
        {
            _1977 = abs((1.0 - _1932) / _1943);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1943 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1932 + 1.0) / _1943);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1977 = frontier_phi_14_12_ladder;
        }
        float _2148;
        if (_1946 > 0.0)
        {
            _2148 = abs((1.0 - _1936) / _1946);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1946 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1936 + 1.0) / _1946);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2148 = frontier_phi_23_19_ladder;
        }
        float _2443;
        if (_1949 > 0.0)
        {
            _2443 = abs((1.0 - _1940) / _1949);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1949 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1940 + 1.0) / _1949);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2443 = frontier_phi_35_30_ladder;
        }
        float _2445 = isnan(_2148) ? _1977 : (isnan(_1977) ? _2148 : min(_1977, _2148));
        float _2446 = isnan(_2443) ? _2445 : (isnan(_2445) ? _2443 : min(_2445, _2443));
        float _2450 = (_2446 * _1943) + _1932;
        float _2451 = (_2446 * _1946) + _1936;
        float _2452 = (_2446 * _1949) + _1940;
        float _2453 = _2446 * 9.9999997473787516355514526367188e-05;
        float _2455 = (-1.0) - _2453;
        float _2457 = _2453 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2452 > _2457) || ((_2452 < _2455) || ((_2451 > _2457) || ((_2451 < _2455) || ((_2450 < _2455) || (_2450 > _2457))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2597 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2452, cbModelParam._m0[9u].z, fma(_2451, cbModelParam._m0[9u].y, _2450 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2452, cbModelParam._m0[10u].z, fma(_2451, cbModelParam._m0[10u].y, _2450 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2452, cbModelParam._m0[11u].z, fma(_2451, cbModelParam._m0[11u].y, _2450 * cbModelParam._m0[11u].x))), _1885);
            frontier_phi_13_35_ladder = _2597.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2597.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2597.x * cbModelParam._m0[1u].y;
        }
        _1965 = frontier_phi_13_35_ladder_2;
        _1967 = frontier_phi_13_35_ladder_1;
        _1969 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1953 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1072, _1073, _1074), _1885);
        _1965 = _1953.x * cbModelParam._m0[1u].y;
        _1967 = _1953.y * cbModelParam._m0[1u].y;
        _1969 = _1953.z * cbModelParam._m0[1u].y;
    }
    float _1973 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _901);
    float _1974 = isnan(_1973) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1973 : min(cbModelParam._m0[25u].w, _1973));
    float _2063;
    float _2065;
    float _2067;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2027 = fma(_1136, cbModelParam._m0[21u].z, fma(_1132, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1128)) + cbModelParam._m0[21u].w;
        float _2031 = fma(_1136, cbModelParam._m0[22u].z, fma(_1132, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1128)) + cbModelParam._m0[22u].w;
        float _2035 = fma(_1136, cbModelParam._m0[23u].z, fma(_1132, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1128)) + cbModelParam._m0[23u].w;
        float _2038 = fma(_1074, cbModelParam._m0[21u].z, fma(_1073, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1072));
        float _2041 = fma(_1074, cbModelParam._m0[22u].z, fma(_1073, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1072));
        float _2044 = fma(_1074, cbModelParam._m0[23u].z, fma(_1073, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1072));
        float _2153;
        if (_2038 > 0.0)
        {
            _2153 = abs((1.0 - _2027) / _2038);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2038 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2027 + 1.0) / _2038);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2153 = frontier_phi_25_21_ladder;
        }
        float _2470;
        if (_2041 > 0.0)
        {
            _2470 = abs((1.0 - _2031) / _2041);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2041 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2031 + 1.0) / _2041);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2470 = frontier_phi_37_32_ladder;
        }
        float _2808;
        if (_2044 > 0.0)
        {
            _2808 = abs((1.0 - _2035) / _2044);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2044 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2035 + 1.0) / _2044);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2808 = frontier_phi_47_44_ladder;
        }
        float _2810 = isnan(_2470) ? _2153 : (isnan(_2153) ? _2470 : min(_2153, _2470));
        float _2811 = isnan(_2808) ? _2810 : (isnan(_2810) ? _2808 : min(_2810, _2808));
        float _2815 = (_2811 * _2038) + _2027;
        float _2816 = (_2811 * _2041) + _2031;
        float _2817 = (_2811 * _2044) + _2035;
        float _2818 = _2811 * 9.9999997473787516355514526367188e-05;
        float _2819 = (-1.0) - _2818;
        float _2821 = _2818 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2817 > _2821) || ((_2817 < _2819) || ((_2816 > _2821) || ((_2816 < _2819) || ((_2815 < _2819) || (_2815 > _2821))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2939 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2817, cbModelParam._m0[17u].z, fma(_2816, cbModelParam._m0[17u].y, _2815 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2817, cbModelParam._m0[18u].z, fma(_2816, cbModelParam._m0[18u].y, _2815 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2817, cbModelParam._m0[19u].z, fma(_2816, cbModelParam._m0[19u].y, _2815 * cbModelParam._m0[19u].x))), _1974);
            frontier_phi_22_47_ladder = _2939.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2939.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2939.x * cbModelParam._m0[1u].z;
        }
        _2063 = frontier_phi_22_47_ladder_2;
        _2065 = frontier_phi_22_47_ladder_1;
        _2067 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2047 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1072, _1073, _1074), _1974);
        _2063 = _2047.x * cbModelParam._m0[1u].z;
        _2065 = _2047.y * cbModelParam._m0[1u].z;
        _2067 = _2047.z * cbModelParam._m0[1u].z;
    }
    float _2080 = (((_1099 * _1049) + _1100) * _1064) * ((cbModelParam._m0[1u].w * (_2063 - _1965)) + _1965);
    float _2082 = (((_1099 * _1051) + _1100) * _1064) * ((cbModelParam._m0[1u].w * (_2065 - _1967)) + _1967);
    float _2084 = (((_1099 * _1052) + _1100) * _1064) * ((cbModelParam._m0[1u].w * (_2067 - _1969)) + _1969);
    float _2087 = fma(_2084, cbSceneParam._m0[89u].z, fma(_2082, cbSceneParam._m0[89u].y, _2080 * cbSceneParam._m0[89u].x));
    float _2090 = fma(_2084, cbSceneParam._m0[90u].z, fma(_2082, cbSceneParam._m0[90u].y, _2080 * cbSceneParam._m0[90u].x));
    float _2093 = fma(_2084, cbSceneParam._m0[91u].z, fma(_2082, cbSceneParam._m0[91u].y, _2080 * cbSceneParam._m0[91u].x));
    float _2127 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2131 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2135 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2139 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2140 = _2127 / _2139;
    float _2141 = _2131 / _2139;
    float _2142 = _2135 / _2139;
    float _2289;
    float _2290;
    float _2291;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2169 = ((uint(_2142 > cbSceneParam._m0[59u].y) + uint(_2142 > cbSceneParam._m0[59u].x)) + uint(_2142 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2170 = _2169 + 43u;
        uint _2178 = _2169 + 44u;
        uint _2186 = _2169 + 45u;
        uint _2194 = _2169 + 46u;
        float _2205 = fma(_2139, cbSceneParam._m0[_2170].w, fma(_2135, cbSceneParam._m0[_2170].z, fma(_2131, cbSceneParam._m0[_2170].y, _2127 * cbSceneParam._m0[_2170].x)));
        float _2209 = fma(_2139, cbSceneParam._m0[_2178].w, fma(_2135, cbSceneParam._m0[_2178].z, fma(_2131, cbSceneParam._m0[_2178].y, _2127 * cbSceneParam._m0[_2178].x)));
        float _2217 = fma(_2139, cbSceneParam._m0[_2194].w, fma(_2135, cbSceneParam._m0[_2194].z, fma(_2131, cbSceneParam._m0[_2194].y, _2127 * cbSceneParam._m0[_2194].x)));
        float _2222 = cbSceneParam._m0[33u].z * _2217;
        float _2224 = cbSceneParam._m0[33u].w * _2217;
        float _2227 = fma(_2139, cbSceneParam._m0[_2186].w, fma(_2135, cbSceneParam._m0[_2186].z, fma(_2131, cbSceneParam._m0[_2186].y, _2127 * cbSceneParam._m0[_2186].x))) / _2217;
        float _2275 = (cbSceneParam._m0[33u].x - sqrt(((_2141 * _2141) + (_2140 * _2140)) + (_2142 * _2142))) * cbSceneParam._m0[33u].y;
        float _4572 = isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0));
        float _2282 = (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2222 + _2205) / _2217, (_2224 + _2209) / _2217), _2227), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2224 + _2205) / _2217, (_2209 - _2222) / _2217), _2227), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2205 - _2222) / _2217, (_2209 - _2224) / _2217), _2227), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2205 - _2224) / _2217, (_2222 + _2209) / _2217), _2227), 0.0)).x), vec4(0.25)));
        _2289 = 1.0 - (_2282 * cbSceneParam._m0[34u].x);
        _2290 = 1.0 - (_2282 * cbSceneParam._m0[34u].y);
        _2291 = 1.0 - (_2282 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2289 = 1.0;
        _2290 = 1.0;
        _2291 = 1.0;
    }
    float _2355;
    float _2357;
    float _2359;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2343 = fma(_2139, cbSceneParam._m0[63u].w, fma(_2135, cbSceneParam._m0[63u].z, fma(_2131, cbSceneParam._m0[63u].y, _2127 * cbSceneParam._m0[63u].x)));
        float _2344 = fma(_2139, cbSceneParam._m0[60u].w, fma(_2135, cbSceneParam._m0[60u].z, fma(_2131, cbSceneParam._m0[60u].y, _2127 * cbSceneParam._m0[60u].x))) / _2343;
        float _2345 = fma(_2139, cbSceneParam._m0[61u].w, fma(_2135, cbSceneParam._m0[61u].z, fma(_2131, cbSceneParam._m0[61u].y, _2127 * cbSceneParam._m0[61u].x))) / _2343;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2344 >= cbSceneParam._m0[64u].x) && (_2345 >= cbSceneParam._m0[64u].y)) && (_2344 <= cbSceneParam._m0[64u].z)) && (_2345 <= cbSceneParam._m0[64u].w))
        {
            float _2483 = fma(_2139, cbSceneParam._m0[62u].w, fma(_2135, cbSceneParam._m0[62u].z, fma(_2131, cbSceneParam._m0[62u].y, _2127 * cbSceneParam._m0[62u].x))) / _2343;
            float _2487 = isnan(cbSceneParam._m0[41u].w) ? _2483 : (isnan(_2483) ? cbSceneParam._m0[41u].w : max(_2483, cbSceneParam._m0[41u].w));
            float _2530 = (cbSceneParam._m0[33u].x - sqrt(((_2141 * _2141) + (_2140 * _2140)) + (_2142 * _2142))) * cbSceneParam._m0[33u].y;
            float _4588 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
            float _2537 = (isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2344, cbSceneParam._m0[33u].w + _2345), _2487), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2344, _2345 - cbSceneParam._m0[33u].z), _2487), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2344 - cbSceneParam._m0[33u].z, _2345 - cbSceneParam._m0[33u].w), _2487), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2344 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2345), _2487), 0.0)).x), vec4(0.25)));
            float _2541 = 1.0 - (_2537 * cbSceneParam._m0[34u].x);
            float _2542 = 1.0 - (_2537 * cbSceneParam._m0[34u].y);
            float _2543 = 1.0 - (_2537 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2543) ? _2291 : (isnan(_2291) ? _2543 : min(_2291, _2543));
            frontier_phi_34_33_ladder_1 = isnan(_2542) ? _2290 : (isnan(_2290) ? _2542 : min(_2290, _2542));
            frontier_phi_34_33_ladder_2 = isnan(_2541) ? _2289 : (isnan(_2289) ? _2541 : min(_2289, _2541));
        }
        else
        {
            frontier_phi_34_33_ladder = _2291;
            frontier_phi_34_33_ladder_1 = _2290;
            frontier_phi_34_33_ladder_2 = _2289;
        }
        _2355 = frontier_phi_34_33_ladder_2;
        _2357 = frontier_phi_34_33_ladder_1;
        _2359 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2355 = _2289;
        _2357 = _2290;
        _2359 = _2291;
    }
    uvec4 _2364 = floatBitsToUint(cbInstanceData._m0[_1024 + 5u]);
    uint _2366 = _2364.x * 14u;
    uint _2367 = _2366 + 13u;
    float _2374 = _1064 + (-1.0);
    float _2379 = (cbLight._m0[_2367].x * _2374) + 1.0;
    float _2380 = (cbLight._m0[_2367].y * _2374) + 1.0;
    float _2381 = (cbLight._m0[_2367].z * _2374) + 1.0;
    float _2382 = (cbLight._m0[_2367].w * _2374) + 1.0;
    uint _2383 = _2366 + 5u;
    float _2389 = isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0));
    uint _2393 = _2366 + 4u;
    float _2402 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
    uint _2406 = _2366 | 1u;
    float _2417 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_898, _899, _900));
    float _2420 = dot(vec3(cbLight._m0[_2406].xyz), vec3(_898, _899, _900));
    float _4624 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _4635 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2425 = (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * 0.3183098733425140380859375;
    float _2427 = (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0))) * 0.3183098733425140380859375;
    float _2434 = ((cbLight._m0[_2383].x * _2389) * _2427) + (((cbLight._m0[_2393].x * _2355) * _2402) * _2425);
    float _2435 = ((_2389 * cbLight._m0[_2383].y) * _2427) + (((cbLight._m0[_2393].y * _2357) * _2402) * _2425);
    float _2436 = ((_2389 * cbLight._m0[_2383].z) * _2427) + (((cbLight._m0[_2393].z * _2359) * _2402) * _2425);
    uvec4 _2440 = floatBitsToUint(cbLight._m0[_2366 + 12u]);
    bool _2442 = _2440.x == 0u;
    float _2544;
    float _2546;
    float _2548;
    if (_2442)
    {
        _2544 = _2434;
        _2546 = _2435;
        _2548 = _2436;
    }
    else
    {
        uint _2552 = _2366 + 6u;
        float _2568 = (dot(vec3(cbLight._m0[_2366 + 2u].xyz), vec3(_898, _899, _900)) * 0.5) + 0.5;
        float _2569 = _2568 * _2568;
        float _4646 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2570 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
        float _2571 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2544 = (((cbLight._m0[_2552].x * 0.3183098733425140380859375) * _2570) * _2571) + _2434;
        _2546 = (((cbLight._m0[_2552].y * 0.3183098733425140380859375) * _2570) * _2571) + _2435;
        _2548 = (((cbLight._m0[_2552].z * 0.3183098733425140380859375) * _2570) * _2571) + _2436;
    }
    bool _2551 = _2440.y == 0u;
    float _2606;
    float _2608;
    float _2610;
    if (_2551)
    {
        _2606 = _2544;
        _2608 = _2546;
        _2610 = _2548;
    }
    else
    {
        uint _2779 = _2366 + 7u;
        float _2795 = (dot(vec3(cbLight._m0[_2366 + 3u].xyz), vec3(_898, _899, _900)) * 0.5) + 0.5;
        float _2796 = _2795 * _2795;
        float _4662 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2797 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
        float _2798 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2606 = (((cbLight._m0[_2779].x * 0.3183098733425140380859375) * _2797) * _2798) + _2544;
        _2608 = (((cbLight._m0[_2779].y * 0.3183098733425140380859375) * _2797) * _2798) + _2546;
        _2610 = (((cbLight._m0[_2779].z * 0.3183098733425140380859375) * _2797) * _2798) + _2548;
    }
    uint _2613 = _2366 + 8u;
    float _2626 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2366].w)) * _901) * 0.949999988079071044921875);
    float _2627 = _2626 * _2626;
    float _2628 = cbLight._m0[_2366].x + _978;
    float _2629 = cbLight._m0[_2366].y + _979;
    float _2630 = cbLight._m0[_2366].z + _980;
    float _2634 = inversesqrt(dot(vec3(_2628, _2629, _2630), vec3(_2628, _2629, _2630)));
    float _2635 = _2634 * _2628;
    float _2636 = _2634 * _2629;
    float _2637 = _2634 * _2630;
    float _2638 = dot(vec3(_898, _899, _900), vec3(cbLight._m0[_2366].xyz));
    float _4678 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2641 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
    float _4689 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _2642 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
    float _2643 = dot(vec3(_898, _899, _900), vec3(_2635, _2636, _2637));
    float _4700 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
    float _2646 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
    float _2647 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_2635, _2636, _2637));
    float _4711 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
    float _2651 = _2627 * _2627;
    float _2655 = ((_2646 * _2646) * (_2651 + (-1.0))) + 1.0;
    float _2663 = exp2(log2(1.0 - (isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0)))) * 5.0);
    float _2664 = 0.959999978542327880859375 - _1046;
    float _2666 = 0.959999978542327880859375 - _1047;
    float _2667 = 0.959999978542327880859375 - _1048;
    float _2674 = 1.0 - _2627;
    float _2685 = (0.5 / (((_2642 * ((_2641 * _2674) + _2627)) + 9.9999999392252902907785028219223e-09) + (((_2642 * _2674) + _2627) * _2641))) * _2641;
    float _4722 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2687 = (isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0))) * (_2651 / ((_2655 * _2655) * 3.141590118408203125));
    uint _2701 = _2366 + 9u;
    float _2712 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2406].w)) * _901) * 0.949999988079071044921875);
    float _2713 = _2712 * _2712;
    float _2714 = cbLight._m0[_2406].x + _978;
    float _2715 = cbLight._m0[_2406].y + _979;
    float _2716 = cbLight._m0[_2406].z + _980;
    float _2720 = inversesqrt(dot(vec3(_2714, _2715, _2716), vec3(_2714, _2715, _2716)));
    float _2721 = _2720 * _2714;
    float _2722 = _2720 * _2715;
    float _2723 = _2720 * _2716;
    float _2724 = dot(vec3(_898, _899, _900), vec3(cbLight._m0[_2406].xyz));
    float _4733 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
    float _2727 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
    float _2728 = dot(vec3(_898, _899, _900), vec3(_2721, _2722, _2723));
    float _4744 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
    float _2731 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
    float _2732 = dot(vec3(cbLight._m0[_2406].xyz), vec3(_2721, _2722, _2723));
    float _4755 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
    float _2736 = _2713 * _2713;
    float _2740 = ((_2731 * _2731) * (_2736 + (-1.0))) + 1.0;
    float _2747 = exp2(log2(1.0 - (isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0)))) * 5.0);
    float _2754 = 1.0 - _2713;
    float _2764 = (0.5 / (((_2642 * ((_2727 * _2754) + _2713)) + 9.9999999392252902907785028219223e-09) + (((_2642 * _2754) + _2713) * _2727))) * _2727;
    float _4766 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
    float _2766 = (isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0))) * (_2736 / ((_2740 * _2740) * 3.141590118408203125));
    float _2776 = (((((_2747 * _2664) + _1049) * cbLight._m0[_2701].x) * _2766) * _2389) + ((((cbLight._m0[_2613].x * _2355) * ((_2663 * _2664) + _1049)) * _2687) * _2402);
    float _2777 = (((((_2747 * _2666) + _1051) * cbLight._m0[_2701].y) * _2766) * _2389) + ((((cbLight._m0[_2613].y * _2357) * ((_2663 * _2666) + _1051)) * _2687) * _2402);
    float _2778 = (((((_2747 * _2667) + _1052) * cbLight._m0[_2701].z) * _2766) * _2389) + ((((cbLight._m0[_2613].z * _2359) * ((_2663 * _2667) + _1052)) * _2687) * _2402);
    float _2834;
    float _2836;
    float _2838;
    if (_2442)
    {
        _2834 = _2776;
        _2836 = _2777;
        _2838 = _2778;
    }
    else
    {
        uint _2840 = _2366 + 2u;
        uint _2844 = _2366 + 10u;
        float _2858 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2840].w)) * _901) * 0.949999988079071044921875);
        float _2859 = _2858 * _2858;
        float _2860 = cbLight._m0[_2840].x + _978;
        float _2861 = cbLight._m0[_2840].y + _979;
        float _2862 = cbLight._m0[_2840].z + _980;
        float _2866 = inversesqrt(dot(vec3(_2860, _2861, _2862), vec3(_2860, _2861, _2862)));
        float _2867 = _2866 * _2860;
        float _2868 = _2866 * _2861;
        float _2869 = _2866 * _2862;
        float _2870 = dot(vec3(_898, _899, _900), vec3(cbLight._m0[_2840].xyz));
        float _4777 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2873 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
        float _2874 = dot(vec3(_898, _899, _900), vec3(_2867, _2868, _2869));
        float _4788 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
        float _2877 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
        float _2878 = dot(vec3(cbLight._m0[_2840].xyz), vec3(_2867, _2868, _2869));
        float _4799 = isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0));
        float _2882 = _2859 * _2859;
        float _2886 = ((_2877 * _2877) * (_2882 + (-1.0))) + 1.0;
        float _2893 = exp2(log2(1.0 - (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0)))) * 5.0);
        float _2900 = 1.0 - _2859;
        float _2910 = (0.5 / (((_2642 * ((_2873 * _2900) + _2859)) + 9.9999999392252902907785028219223e-09) + (((_2642 * _2900) + _2859) * _2873))) * _2873;
        float _4810 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
        float _2912 = (isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0))) * (_2882 / ((_2886 * _2886) * 3.141590118408203125));
        float _2913 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2834 = (((((_2893 * _2664) + _1049) * cbLight._m0[_2844].x) * _2912) * _2913) + _2776;
        _2836 = (((((_2893 * _2666) + _1051) * cbLight._m0[_2844].y) * _2912) * _2913) + _2777;
        _2838 = (((((_2893 * _2667) + _1052) * cbLight._m0[_2844].z) * _2912) * _2913) + _2778;
    }
    float _2944;
    float _2946;
    float _2948;
    if (_2551)
    {
        _2944 = _2834;
        _2946 = _2836;
        _2948 = _2838;
    }
    else
    {
        uint _2955 = _2366 + 3u;
        uint _2959 = _2366 + 11u;
        float _2973 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2955].w)) * _901) * 0.949999988079071044921875);
        float _2974 = _2973 * _2973;
        float _2975 = cbLight._m0[_2955].x + _978;
        float _2976 = cbLight._m0[_2955].y + _979;
        float _2977 = cbLight._m0[_2955].z + _980;
        float _2981 = inversesqrt(dot(vec3(_2975, _2976, _2977), vec3(_2975, _2976, _2977)));
        float _2982 = _2981 * _2975;
        float _2983 = _2981 * _2976;
        float _2984 = _2981 * _2977;
        float _2985 = dot(vec3(_898, _899, _900), vec3(cbLight._m0[_2955].xyz));
        float _4826 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
        float _2988 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
        float _2989 = dot(vec3(_898, _899, _900), vec3(_2982, _2983, _2984));
        float _4837 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
        float _2992 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
        float _2993 = dot(vec3(cbLight._m0[_2955].xyz), vec3(_2982, _2983, _2984));
        float _4848 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
        float _2997 = _2974 * _2974;
        float _3001 = ((_2992 * _2992) * (_2997 + (-1.0))) + 1.0;
        float _3008 = exp2(log2(1.0 - (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0)))) * 5.0);
        float _3015 = 1.0 - _2974;
        float _3025 = (0.5 / (((_2642 * ((_2988 * _3015) + _2974)) + 9.9999999392252902907785028219223e-09) + (((_2642 * _3015) + _2974) * _2988))) * _2988;
        float _4859 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
        float _3027 = (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0))) * (_2997 / ((_3001 * _3001) * 3.141590118408203125));
        float _3028 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2944 = (((((_3008 * _2664) + _1049) * cbLight._m0[_2959].x) * _3027) * _3028) + _2834;
        _2946 = (((((_3008 * _2666) + _1051) * cbLight._m0[_2959].y) * _3027) * _3028) + _2836;
        _2948 = (((((_3008 * _2667) + _1052) * cbLight._m0[_2959].z) * _3027) * _3028) + _2838;
    }
    float _3094;
    float _3096;
    float _3098;
    float _3100;
    float _3102;
    float _3104;
    if (_2364.y == 0u)
    {
        uvec4 _3049 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3050 = _3049.x;
        uint _3061 = uint((float(_3049.y) * floor(float(uint(cbSceneParam._m0[85u].y * _987) / _3050))) + floor(float(uint(cbSceneParam._m0[85u].x * _986) / _3050)));
        float _3071 = (log2(_2142 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3072 = isnan(0.0) ? _3071 : (isnan(_3071) ? 0.0 : max(_3071, 0.0));
        uint _3075 = uint(isnan(14.0) ? _3072 : (isnan(_3072) ? 14.0 : min(_3072, 14.0)));
        uvec4 _3080 = texelFetch(g_lightClusterGridBuffer, int(((_3075 << 2u) + (_3061 << 6u)) >> 2u));
        uint _3081 = _3080.x;
        uint _3082 = _3049.z;
        float _3161;
        float _3163;
        float _3165;
        float _3167;
        float _3169;
        float _3171;
        if (((((1u << ((_3082 >> 4u) & 15u)) + 4294967295u) & _3081) == 0u) || ((_3082 & 240u) == 0u))
        {
            _3161 = 0.0;
            _3163 = 0.0;
            _3165 = 0.0;
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
        }
        else
        {
            float _3162;
            float _3164;
            float _3166;
            float _3168;
            float _3170;
            float _3172;
            float _3306 = 0.0;
            float _3307 = 0.0;
            float _3308 = 0.0;
            float _3309 = 0.0;
            float _3310 = 0.0;
            float _3311 = 0.0;
            uint _3312 = 0u;
            uint _3321;
            bool _3322;
            for (;;)
            {
                _3321 = texelFetch(g_lightClassification, int((((_3075 << 5u) + (_3061 << 9u)) + (_3312 << 2u)) >> 2u)).x;
                _3322 = _3321 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3322)
                {
                    frontier_phi_66_pred = _3311;
                    frontier_phi_66_pred_1 = _3310;
                    frontier_phi_66_pred_2 = _3309;
                    frontier_phi_66_pred_3 = _3308;
                    frontier_phi_66_pred_4 = _3307;
                    frontier_phi_66_pred_5 = _3306;
                }
                else
                {
                    float _3430;
                    float _3431;
                    float _3432;
                    float _3433;
                    float _3434;
                    float _3435;
                    uint _3436;
                    _3430 = _3306;
                    _3431 = _3307;
                    _3432 = _3308;
                    _3433 = _3309;
                    _3434 = _3310;
                    _3435 = _3311;
                    _3436 = _3321;
                    float _3362;
                    float _3363;
                    float _3364;
                    float _3365;
                    float _3366;
                    float _3367;
                    for (;;)
                    {
                        uint _3440 = uint(findLSB(_3436)) + (_3312 << 5u);
                        uint _3437 = (_3436 + 4294967295u) & _3436;
                        uint _3442 = _3440 * 48u;
                        vec4 _3456 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3442)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3442 + 3u)).x));
                        uint _3462 = (_3440 * 48u) + 4u;
                        vec4 _3475 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3462)).x, texelFetch(g_PointLightRenderingBuffer, int(_3462 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3462 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3462 + 3u)).x));
                        uint _3481 = (_3440 * 48u) + 8u;
                        vec3 _3492 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3481)).x, texelFetch(g_PointLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3481 + 2u)).x));
                        float _3496 = _3456.x - _2140;
                        float _3497 = _3456.y - _2141;
                        float _3498 = _3456.z - _2142;
                        float _3499 = dot(vec3(_3496, _3497, _3498), vec3(_3496, _3497, _3498));
                        float _3502 = inversesqrt(_3499);
                        float _3503 = _3502 * _3496;
                        float _3504 = _3502 * _3497;
                        float _3505 = _3502 * _3498;
                        float _3506 = dot(vec3(_1005, _1008, _1011), vec3(_3503, _3504, _3505));
                        float _3511 = 1.0 - (_3499 * _3456.w);
                        float _4885 = isnan(0.0) ? _3511 : (isnan(_3511) ? 0.0 : max(_3511, 0.0));
                        float _3512 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
                        float _3513 = sqrt(_3499) * _3475.w;
                        float _3516 = 1.39999997615814208984375 / (_3513 + 1.39999997615814208984375);
                        float _3517 = _3516 * _3516;
                        float _3520 = ((1.0 - _3517) * _3506) + _3517;
                        float _3523 = _3513 * _3513;
                        float _3527 = ((isnan(0.0) ? _3520 : (isnan(_3520) ? 0.0 : max(_3520, 0.0))) * _3512) / ((_3523 * 0.699999988079071044921875) + 1.0);
                        float _3531 = (-0.0) - _2140;
                        float _3532 = (-0.0) - _2141;
                        float _3533 = (-0.0) - _2142;
                        float _3537 = inversesqrt(dot(vec3(_3531, _3532, _3533), vec3(_3531, _3532, _3533)));
                        float _3538 = _3537 * _3531;
                        float _3539 = _3537 * _3532;
                        float _3540 = _3537 * _3533;
                        float _3547 = exp2(log2(1.0 / ((_3523 * 3.5) + 5.0)) * 0.25);
                        float _3548 = 1.0 - _1080;
                        float _3555 = sqrt(1.0 - ((1.0 - (_3548 * _3548)) * (1.0 - (_3547 * _3547))));
                        float _3556 = _3555 * _3555;
                        float _3557 = _3556 * _3556;
                        float _3558 = _3538 + _3503;
                        float _3559 = _3539 + _3504;
                        float _3560 = _3540 + _3505;
                        float _3564 = inversesqrt(dot(vec3(_3558, _3559, _3560), vec3(_3558, _3559, _3560)));
                        float _3568 = dot(vec3(_1005, _1008, _1011), vec3(_3538, _3539, _3540));
                        float _4901 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                        float _3571 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
                        float _3572 = dot(vec3(_1005, _1008, _1011), vec3(_3564 * _3558, _3564 * _3559, _3564 * _3560));
                        float _4912 = isnan(0.0) ? _3572 : (isnan(_3572) ? 0.0 : max(_3572, 0.0));
                        float _3575 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                        float _3579 = ((_3575 * _3575) * (_3557 + (-1.0))) + 1.0;
                        float _3580 = _3516 * _3556;
                        float _3581 = _3580 * _3580;
                        float _3584 = ((1.0 - _3581) * _3506) + _3581;
                        float _4923 = isnan(0.0) ? _3584 : (isnan(_3584) ? 0.0 : max(_3584, 0.0));
                        float _3585 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
                        float _3586 = 1.0 - _3556;
                        float _3596 = (0.5 / (((_3585 * ((_3571 * _3586) + _3556)) + 9.9999999392252902907785028219223e-09) + (((_3585 * _3586) + _3556) * _3571))) * _3585;
                        float _4934 = isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : max(_3596, 0.0));
                        float _3607 = (((_3557 * 3.1415927410125732421875) * (isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0)))) / ((_3579 * _3579) * ((_3523 * 2.1991131305694580078125) + 3.141590118408203125))) * _3512;
                        _3365 = (_3527 * _3475.x) + _3433;
                        _3366 = (_3527 * _3475.y) + _3434;
                        _3367 = (_3527 * _3475.z) + _3435;
                        _3362 = (_3607 * _3492.x) + _3430;
                        _3363 = (_3607 * _3492.y) + _3431;
                        _3364 = (_3607 * _3492.z) + _3432;
                        if (_3437 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3430 = _3362;
                            _3431 = _3363;
                            _3432 = _3364;
                            _3433 = _3365;
                            _3434 = _3366;
                            _3435 = _3367;
                            _3436 = _3437;
                        }
                    }
                    frontier_phi_66_pred = _3367;
                    frontier_phi_66_pred_1 = _3366;
                    frontier_phi_66_pred_2 = _3365;
                    frontier_phi_66_pred_3 = _3364;
                    frontier_phi_66_pred_4 = _3363;
                    frontier_phi_66_pred_5 = _3362;
                }
                _3172 = frontier_phi_66_pred;
                _3170 = frontier_phi_66_pred_1;
                _3168 = frontier_phi_66_pred_2;
                _3166 = frontier_phi_66_pred_3;
                _3164 = frontier_phi_66_pred_4;
                _3162 = frontier_phi_66_pred_5;
                uint _3313 = _3312 + 1u;
                if (_3313 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3306 = _3162;
                    _3307 = _3164;
                    _3308 = _3166;
                    _3309 = _3168;
                    _3310 = _3170;
                    _3311 = _3172;
                    _3312 = _3313;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3161 = _3162;
            _3163 = _3164;
            _3165 = _3166;
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
        }
        uvec4 _3175 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3176 = _3175.z;
        uint _3178 = (_3176 >> 8u) & 15u;
        float _3274;
        float _3276;
        float _3278;
        float _3280;
        float _3282;
        float _3284;
        if (((4294967295u << _3178) & _3081) == 0u)
        {
            _3274 = _3161;
            _3276 = _3163;
            _3278 = _3165;
            _3280 = _3167;
            _3282 = _3169;
            _3284 = _3171;
        }
        else
        {
            float _3299 = inversesqrt(dot(vec3(_2140, _2141, _2142), vec3(_2140, _2141, _2142)));
            float _3300 = _3299 * _2140;
            float _3301 = _3299 * _2141;
            float _3302 = _3299 * _2142;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3178 < ((_3176 >> 12u) & 15u))
            {
                float _3275;
                float _3277;
                float _3279;
                float _3281;
                float _3283;
                float _3285;
                float _3413 = _3161;
                float _3414 = _3163;
                float _3415 = _3165;
                float _3416 = _3167;
                float _3417 = _3169;
                float _3418 = _3171;
                uint _3419 = _3178;
                uint _3428;
                bool _3429;
                for (;;)
                {
                    _3428 = texelFetch(g_lightClassification, int((((_3075 << 5u) + (_3061 << 9u)) + (_3419 << 2u)) >> 2u)).x;
                    _3429 = _3428 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3429)
                    {
                        frontier_phi_72_pred = _3418;
                        frontier_phi_72_pred_1 = _3417;
                        frontier_phi_72_pred_2 = _3416;
                        frontier_phi_72_pred_3 = _3415;
                        frontier_phi_72_pred_4 = _3414;
                        frontier_phi_72_pred_5 = _3413;
                    }
                    else
                    {
                        float _3612;
                        float _3613;
                        float _3614;
                        float _3615;
                        float _3616;
                        float _3617;
                        float _3906;
                        float _3907;
                        float _3908;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3625 = _3413;
                        float _3626 = _3414;
                        float _3627 = _3415;
                        float _3628 = _3416;
                        float _3629 = _3417;
                        float _3630 = _3418;
                        uint _3631 = _3428;
                        uint _3632;
                        vec4 _3657;
                        float _3658;
                        vec4 _3673;
                        vec3 _3685;
                        vec4 _3700;
                        vec4 _3715;
                        float _3762;
                        bool _3763;
                        for (;;)
                        {
                            uint _3642 = ((_3419 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3631));
                            _3632 = (_3631 + 4294967295u) & _3631;
                            uint _3644 = _3642 * 40u;
                            _3657 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3644)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 3u)).x));
                            _3658 = _3657.w;
                            uint _3660 = (_3642 * 40u) + 4u;
                            _3673 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3660)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 3u)).x));
                            uint _3675 = (_3642 * 40u) + 8u;
                            _3685 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3675)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3675 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3675 + 2u)).x));
                            uint _3687 = (_3642 * 40u) + 16u;
                            _3700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 3u)).x));
                            uint _3702 = (_3642 * 40u) + 20u;
                            _3715 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3702)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3702 + 3u)).x));
                            uint _3718 = (_3642 * 40u) + 24u;
                            vec4 _3731 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 3u)).x));
                            uint _3737 = (_3642 * 40u) + 28u;
                            vec4 _3750 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3737)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 3u)).x));
                            _3762 = fma(_2142, _3750.z, fma(_2141, _3750.y, _3750.x * _2140)) + _3750.w;
                            _3763 = !((fma(_2142, _3731.z, fma(_2141, _3731.y, _3731.x * _2140)) + _3731.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3763)
                            {
                                float _3790 = _3657.x - _2140;
                                float _3791 = _3657.y - _2141;
                                float _3792 = _3657.z - _2142;
                                float _3793 = dot(vec3(_3790, _3791, _3792), vec3(_3790, _3791, _3792));
                                float _3796 = inversesqrt(_3793);
                                float _3797 = _3796 * _3790;
                                float _3798 = _3796 * _3791;
                                float _3799 = _3796 * _3792;
                                float _3803 = 1.0 - (_3793 / (_3658 * _3658));
                                float _4945 = isnan(0.0) ? _3803 : (isnan(_3803) ? 0.0 : max(_3803, 0.0));
                                float _3804 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
                                float _3808 = sqrt(_3793) * _3673.w;
                                float _3810 = 1.39999997615814208984375 / (_3808 + 1.39999997615814208984375);
                                float _3811 = _3810 * _3810;
                                float _3814 = ((1.0 - _3811) * dot(vec3(_3797, _3798, _3799), vec3(_1005, _1008, _1011))) + _3811;
                                float _3817 = _3808 * _3808;
                                float _3821 = (fma(_2142, _3700.z, fma(_2141, _3700.y, _3700.x * _2140)) + _3700.w) / _3762;
                                float _3822 = (fma(_2142, _3715.z, fma(_2141, _3715.y, _3715.x * _2140)) + _3715.w) / _3762;
                                float _3826 = 1.0 - dot(vec2(_3821, _3822), vec2(_3821, _3822));
                                float _4961 = isnan(0.0) ? _3826 : (isnan(_3826) ? 0.0 : max(_3826, 0.0));
                                float _3827 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                                float _3828 = _3827 * (((isnan(0.0) ? _3814 : (isnan(_3814) ? 0.0 : max(_3814, 0.0))) * _3804) / ((_3817 * 0.699999988079071044921875) + 1.0));
                                float _3840 = exp2(log2(1.0 / ((_3817 * 3.5) + 5.0)) * 0.25);
                                float _3841 = 1.0 - _1080;
                                float _3848 = sqrt(1.0 - ((1.0 - (_3841 * _3841)) * (1.0 - (_3840 * _3840))));
                                float _3849 = _3848 * _3848;
                                float _3850 = _3849 * _3849;
                                float _3851 = _3797 - _3300;
                                float _3852 = _3798 - _3301;
                                float _3853 = _3799 - _3302;
                                float _3857 = inversesqrt(dot(vec3(_3851, _3852, _3853), vec3(_3851, _3852, _3853)));
                                float _3861 = dot(vec3(_1005, _1008, _1011), vec3((-0.0) - _3300, (-0.0) - _3301, (-0.0) - _3302));
                                float _4972 = isnan(0.0) ? _3861 : (isnan(_3861) ? 0.0 : max(_3861, 0.0));
                                float _3864 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
                                float _3865 = dot(vec3(_1005, _1008, _1011), vec3(_3857 * _3851, _3857 * _3852, _3857 * _3853));
                                float _4983 = isnan(0.0) ? _3865 : (isnan(_3865) ? 0.0 : max(_3865, 0.0));
                                float _3868 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
                                float _3872 = ((_3868 * _3868) * (_3850 + (-1.0))) + 1.0;
                                float _3873 = _3810 * _3849;
                                float _3874 = _3873 * _3873;
                                float _3880 = ((1.0 - _3874) * dot(vec3(_1005, _1008, _1011), vec3(_3797, _3798, _3799))) + _3874;
                                float _4994 = isnan(0.0) ? _3880 : (isnan(_3880) ? 0.0 : max(_3880, 0.0));
                                float _3881 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
                                float _3882 = 1.0 - _3849;
                                float _3892 = (0.5 / (((_3881 * ((_3864 * _3882) + _3849)) + 9.9999999392252902907785028219223e-09) + (((_3881 * _3882) + _3849) * _3864))) * _3881;
                                float _5005 = isnan(0.0) ? _3892 : (isnan(_3892) ? 0.0 : max(_3892, 0.0));
                                float _3902 = (_3827 * _3804) * (((_3850 * 3.1415927410125732421875) * (isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0)))) / ((_3872 * _3872) * ((_3817 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3828 * _3673.y;
                                frontier_phi_78_pred_1 = _3828 * _3673.x;
                                frontier_phi_78_pred_2 = _3902 * _3685.z;
                                frontier_phi_78_pred_3 = _3902 * _3685.y;
                                frontier_phi_78_pred_4 = _3902 * _3685.x;
                                frontier_phi_78_pred_5 = _3828 * _3673.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3910 = frontier_phi_78_pred;
                            _3909 = frontier_phi_78_pred_1;
                            _3908 = frontier_phi_78_pred_2;
                            _3907 = frontier_phi_78_pred_3;
                            _3906 = frontier_phi_78_pred_4;
                            _3911 = frontier_phi_78_pred_5;
                            _3615 = _3909 + _3628;
                            _3616 = _3910 + _3629;
                            _3617 = _3911 + _3630;
                            _3612 = _3906 + _3625;
                            _3613 = _3907 + _3626;
                            _3614 = _3908 + _3627;
                            if (_3632 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3625 = _3612;
                                _3626 = _3613;
                                _3627 = _3614;
                                _3628 = _3615;
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3632;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3617;
                        frontier_phi_72_pred_1 = _3616;
                        frontier_phi_72_pred_2 = _3615;
                        frontier_phi_72_pred_3 = _3614;
                        frontier_phi_72_pred_4 = _3613;
                        frontier_phi_72_pred_5 = _3612;
                    }
                    _3285 = frontier_phi_72_pred;
                    _3283 = frontier_phi_72_pred_1;
                    _3281 = frontier_phi_72_pred_2;
                    _3279 = frontier_phi_72_pred_3;
                    _3277 = frontier_phi_72_pred_4;
                    _3275 = frontier_phi_72_pred_5;
                    uint _3420 = _3419 + 1u;
                    if (_3420 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3413 = _3275;
                        _3414 = _3277;
                        _3415 = _3279;
                        _3416 = _3281;
                        _3417 = _3283;
                        _3418 = _3285;
                        _3419 = _3420;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3285;
                frontier_phi_60_61_ladder_1 = _3283;
                frontier_phi_60_61_ladder_2 = _3279;
                frontier_phi_60_61_ladder_3 = _3277;
                frontier_phi_60_61_ladder_4 = _3275;
                frontier_phi_60_61_ladder_5 = _3281;
            }
            else
            {
                frontier_phi_60_61_ladder = _3171;
                frontier_phi_60_61_ladder_1 = _3169;
                frontier_phi_60_61_ladder_2 = _3165;
                frontier_phi_60_61_ladder_3 = _3163;
                frontier_phi_60_61_ladder_4 = _3161;
                frontier_phi_60_61_ladder_5 = _3167;
            }
            _3274 = frontier_phi_60_61_ladder_4;
            _3276 = frontier_phi_60_61_ladder_3;
            _3278 = frontier_phi_60_61_ladder_2;
            _3280 = frontier_phi_60_61_ladder_5;
            _3282 = frontier_phi_60_61_ladder_1;
            _3284 = frontier_phi_60_61_ladder;
        }
        float _3289 = isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0));
        _3094 = (_3289 * _3280) + _2606;
        _3096 = (_3289 * _3282) + _2608;
        _3098 = (_3289 * _3284) + _2610;
        _3100 = ((_3274 * _1049) * _3289) + _2944;
        _3102 = ((_3276 * _1051) * _3289) + _2946;
        _3104 = ((_3278 * _1052) * _3289) + _2948;
    }
    else
    {
        _3094 = _2606;
        _3096 = _2608;
        _3098 = _2610;
        _3100 = _2944;
        _3102 = _2946;
        _3104 = _2948;
    }
    float _5021 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
    float _5032 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    float _5043 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    uint _3124 = _1024 + 6u;
    float _3132 = _986 / cbSceneParam._m0[86u].x;
    float _3133 = _987 / cbSceneParam._m0[86u].y;
    vec4 _3147 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3132, _3133, (log2((isnan(cbSceneParam._m0[77u].w) ? _921 : (isnan(_921) ? cbSceneParam._m0[77u].w : min(_921, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3149 = _3147.x;
    float _3150 = _3147.y;
    float _3151 = _3147.z;
    float _3152 = _3147.w;
    float _3224;
    float _3226;
    float _3228;
    float _3230;
    if (_921 > cbSceneParam._m0[78u].w)
    {
        float _3186 = isnan(_921) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _921 : min(cbSceneParam._m0[80u].w, _921));
        float _3187 = _3186 / _921;
        float _3198 = _3187 * _971;
        float _3199 = _972 * _3187;
        float _3200 = (-0.0) - _3199;
        float _3202 = _3187 * _973;
        float _3204 = (cbSceneParam._m0[77u].w * _3200) / _3186;
        float _3205 = _3204 + cbSceneParam._m0[79u].w;
        float _3206 = cbSceneParam._m0[79u].w - _3199;
        float _3212 = sqrt(((_3198 * _3198) + (_3199 * _3199)) + (_3202 * _3202));
        float _3215 = (1.0 - (cbSceneParam._m0[77u].w / _3186)) * _3212;
        float _3220 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3222 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3375;
        if (abs((_3200 - _3204) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3375 = ((((_3205 > 0.0) ? exp2(_3220 * _3205) : (2.0 - exp2(_3222 * _3205))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3215;
        }
        else
        {
            float _3335 = 1.0 / cbSceneParam._m0[80u].x;
            float _3336 = isnan(_3206) ? _3205 : (isnan(_3205) ? _3206 : max(_3205, _3206));
            float _3337 = isnan(_3206) ? _3205 : (isnan(_3205) ? _3206 : min(_3205, _3206));
            float _3346 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : min(_3336, 0.0));
            float _3347 = isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : min(_3337, 0.0));
            _3375 = ((abs(_3212 / _3200) * cbSceneParam._m0[80u].y) * ((((_3346 - _3347) * 2.0) - ((exp2(_3220 * (isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0)))) - exp2(_3220 * (isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0))))) * _3335)) - ((exp2(_3222 * _3346) - exp2(_3222 * _3347)) * _3335))) + (_3215 * cbSceneParam._m0[80u].z);
        }
        vec4 _3377 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3132, _3133, 1.0), 0.0);
        float _3386 = exp2((_3375 * (-1.44269502162933349609375)) * (1.0 - _3377.w));
        float _3387 = log2(_3386);
        float _3403 = log2(_3152);
        _3224 = (exp2(_3403 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].x)) * _3377.x) / cbSceneParam._m0[78u].x)) + _3149;
        _3226 = (exp2(_3403 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].y)) * _3377.y) / cbSceneParam._m0[78u].y)) + _3150;
        _3228 = (exp2(_3403 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].z)) * _3377.z) / cbSceneParam._m0[78u].z)) + _3151;
        _3230 = _3386 * _3152;
    }
    else
    {
        _3224 = _3149;
        _3226 = _3150;
        _3228 = _3151;
        _3230 = _3152;
    }
    float _3242 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3243 = _3242 == 3.0;
    float _3244 = log2(_3230);
    float _3251 = exp2(_3244 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0))) * (_3094 + ((isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0))) * _1064))) + ((_3100 + ((isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3252 = exp2(_3244 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0))) * (_3096 + ((isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))) * _1064))) + ((_3102 + ((isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3253 = exp2(_3244 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0))) * (_3098 + ((isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))) * _1064))) + ((_3104 + ((isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3262 = (_3242 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3262 * (_3243 ? _3251 : (_3251 + (cbSceneParam._m0[72u].w * _3224)));
    SV_Target.y = _3262 * (_3243 ? _3252 : (_3252 + (cbSceneParam._m0[72u].w * _3226)));
    SV_Target.z = _3262 * (_3243 ? _3253 : (_3253 + (cbSceneParam._m0[72u].w * _3228)));
    SV_Target.w = cbInstanceData._m0[_3124].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3124].w;
}


