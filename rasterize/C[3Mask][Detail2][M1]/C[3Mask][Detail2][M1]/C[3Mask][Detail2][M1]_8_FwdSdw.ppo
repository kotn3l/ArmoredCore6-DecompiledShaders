#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_20;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_21;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1465;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _274 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _280 = _274.x * cbMtdParam._m0[10u].x;
    float _281 = _274.y * cbMtdParam._m0[10u].y;
    float _282 = _274.z * cbMtdParam._m0[10u].z;
    vec4 _300 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _350 = cbMtdParam._m0[20u].z * texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w)).x;
    float _360 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _350)) + 1.0;
    float _4075 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
    float _368 = (_361 * ((_300.x * cbMtdParam._m0[11u].x) - _280)) + _280;
    float _369 = (_361 * ((_300.y * cbMtdParam._m0[11u].y) - _281)) + _281;
    float _370 = (_361 * ((_300.z * cbMtdParam._m0[11u].z) - _282)) + _282;
    vec4 _388 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.x) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.y) + cbTextureTilingScale._m0[20u].w));
    float _419 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _350)) + 1.0;
    float _4086 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _420 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
    float _427 = (_420 * ((_388.x * cbMtdParam._m0[12u].x) - _368)) + _368;
    float _428 = (_420 * ((_388.y * cbMtdParam._m0[12u].y) - _369)) + _369;
    float _429 = (_420 * ((_388.z * cbMtdParam._m0[12u].z) - _370)) + _370;
    vec4 _447 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _472 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _350)) + 1.0;
    float _4097 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _473 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
    vec4 _501 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _509 = ((((_473 * ((_447.x * cbMtdParam._m0[13u].x) - _427)) + _427) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _501.x;
    float _512 = ((((_473 * ((_447.y * cbMtdParam._m0[13u].y) - _428)) + _428) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _501.y;
    float _515 = ((((_473 * ((_447.z * cbMtdParam._m0[13u].z) - _429)) + _429) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _501.z;
    vec4 _535 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _564 = (TEXCOORD_5.x - ((cbMtdParam._m0[16u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD.z) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD.w) + cbTextureTilingScale._m0[21u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].z + 1.0);
    float _4108 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _565 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
    float _572 = (_565 * ((_535.x * cbMtdParam._m0[14u].x) - _509)) + _509;
    float _573 = (_565 * ((_535.y * cbMtdParam._m0[14u].y) - _512)) + _512;
    float _574 = (_565 * ((_535.z * cbMtdParam._m0[14u].z) - _515)) + _515;
    vec4 _594 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _622 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[19u].z + 1.0);
    float _4119 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
    float _630 = (_623 * ((_594.x * cbMtdParam._m0[15u].x) - _572)) + _572;
    float _631 = (_623 * ((_594.y * cbMtdParam._m0[15u].y) - _573)) + _573;
    float _632 = (_623 * ((_594.z * cbMtdParam._m0[15u].z) - _574)) + _574;
    vec4 _645 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _647 = _645.x;
    float _665 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _647) * _361) + _647;
    float _682 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _665) * _420) + _665;
    float _699 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _682) * _473) + _682;
    float _701 = _699 - (_699 * TEXCOORD_5.x);
    vec4 _717 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _739 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _741 = _739.x;
    float _742 = _739.y;
    float _745 = cbMtdParam._m0[18u].y * _739.z;
    vec4 _757 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _766 = (((cbMtdParam._m0[18u].x * _757.z) - _745) * _361) + _745;
    vec4 _779 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _790 = (((cbMtdParam._m0[17u].w * _779.z) - _766) * _420) + _766;
    vec4 _803 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _812 = (((cbMtdParam._m0[17u].z * _803.z) - _790) * _473) + _790;
    float _817 = ((cbMtdParam._m0[17u].x * TEXCOORD_5.x) * ((_717.z * cbMtdParam._m0[18u].z) - _812)) + _812;
    vec4 _830 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_21, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _844 = ((cbMtdParam._m0[19u].x * TEXCOORD_8) * ((_830.z * cbMtdParam._m0[19u].y) - _817)) + _817;
    vec4 _857 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _869 = ((_757.x - _741) * _361) + _741;
    float _870 = ((_757.y - _742) * _361) + _742;
    float _875 = ((_779.x - _869) * _420) + _869;
    float _876 = ((_779.y - _870) * _420) + _870;
    float _885 = ((((_803.x - _875) * _473) + _875) * 2.0) + (-1.0);
    float _886 = ((((_803.y - _876) * _473) + _876) * 2.0) + (-1.0);
    float _887 = dot(vec2(_885, _886), vec2(_885, _886));
    float _4130 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _892 = sqrt(1.0 - (isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0))));
    float _909 = (((((_857.x * 2.0) + (-1.0)) * cbMtdParam._m0[17u].y) + _885) + ((((_717.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[16u].y)) + ((((_830.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[18u].w);
    float _910 = (((((_857.y * 2.0) + (-1.0)) * cbMtdParam._m0[17u].y) + _886) + ((((_717.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[16u].y)) + ((((_830.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[18u].w);
    float _913 = fma(_892, _244 * NORMAL.x, fma(_910, _251 * TANGENT.x, (_237 * _229) * _909));
    float _916 = fma(_892, _244 * NORMAL.y, fma(_910, _251 * TANGENT.y, (_237 * _230) * _909));
    float _919 = fma(_892, _244 * NORMAL.z, fma(_910, _251 * TANGENT.z, (_237 * _231) * _909));
    float _923 = inversesqrt(dot(vec3(_913, _916, _919), vec3(_913, _916, _919)));
    float _924 = _923 * _913;
    float _925 = _923 * _916;
    float _926 = _923 * _919;
    float _4141 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _927 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
    float _4152 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _4163 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _4174 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _4185 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _931 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
    float _947 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _987 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _997 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _987);
    float _998 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _987);
    float _999 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _987);
    float _1003 = inversesqrt(dot(vec3(_997, _998, _999), vec3(_997, _998, _999)));
    float _1004 = _997 * _1003;
    float _1005 = _998 * _1003;
    float _1006 = _999 * _1003;
    float _1012 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1013 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1031 = fma(_926, cbSceneParam._m0[5u].z, fma(_925, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _924));
    float _1034 = fma(_926, cbSceneParam._m0[6u].z, fma(_925, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _924));
    float _1037 = fma(_926, cbSceneParam._m0[7u].z, fma(_925, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _924));
    uint _1050 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1052 = (_1050 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1058 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0)))) * cbInstanceData._m0[_1052].x;
    float _1059 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0)))) * cbInstanceData._m0[_1052].y;
    float _1060 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0)))) * cbInstanceData._m0[_1052].z;
    float _4196 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1061 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
    float _4207 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _1062 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
    float _4218 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1063 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
    float _1064 = 1.0 - _931;
    float _1065 = _1061 * _1064;
    float _1066 = _1062 * _1064;
    float _1067 = _1063 * _1064;
    float _1072 = (_1061 + (-0.039999999105930328369140625)) * _931;
    float _1073 = (_1062 + (-0.039999999105930328369140625)) * _931;
    float _1074 = (_1063 + (-0.039999999105930328369140625)) * _931;
    float _1075 = _1072 + 0.039999999105930328369140625;
    float _1077 = _1073 + 0.039999999105930328369140625;
    float _1078 = _1074 + 0.039999999105930328369140625;
    vec4 _1087 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1012, cbSceneParam._m0[86u].y * _1013));
    float _1090 = _1087.x * TEXCOORD_5.w;
    float _1091 = dot(vec3(_924, _925, _926), vec3(_1004, _1005, _1006));
    float _1094 = _1091 * 2.0;
    float _1098 = (_1094 * _924) - _1004;
    float _1099 = (_1094 * _925) - _1005;
    float _1100 = (_1094 * _926) - _1006;
    float _1104 = abs(dot(vec3(_1004, _1005, _1006), vec3(_924, _925, _926)));
    float _4229 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1106 = sqrt(_927);
    float _1119 = exp2((_1106 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1106 * 3.0));
    float _1125 = (1.0 - _1119) * ((_1106 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1126 = _1119 * _1106;
    float _1154 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1158 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1464;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1189 = fma(_1162, cbModelParam._m0[26u].z, fma(_1158, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1154));
        float _1193 = fma(_1162, cbModelParam._m0[27u].z, fma(_1158, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1154));
        float _1197 = fma(_1162, cbModelParam._m0[28u].z, fma(_1158, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1154));
        float _1222 = _1154 + _924;
        float _1223 = _1158 + _925;
        float _1224 = _1162 + _926;
        float _1234 = fma(_1224, cbModelParam._m0[26u].z, fma(_1223, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1222)) - _1189;
        float _1235 = fma(_1224, cbModelParam._m0[27u].z, fma(_1223, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1222)) - _1193;
        float _1236 = fma(_1224, cbModelParam._m0[28u].z, fma(_1223, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1222)) - _1197;
        float _1240 = inversesqrt(dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236)));
        float _1253 = ((_1240 * _1234) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1189 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1240 * _1235) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1193 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1240 * _1236) / cbModelParam._m0[34u].z) + ((((((_1197 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        float _1292 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1258.x + (-0.5));
        float _1294 = _1292 * (_1258.y + (-0.5));
        float _1295 = _1292 * (_1258.z + (-0.5));
        float _1302 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1265.x + (-0.5));
        float _1304 = _1302 * (_1265.y + (-0.5));
        float _1305 = _1302 * (_1265.z + (-0.5));
        float _1312 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1272.x + (-0.5));
        float _1314 = _1312 * (_1272.y + (-0.5));
        float _1315 = _1312 * (_1272.z + (-0.5));
        float _1322 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1279.x + (-0.5));
        float _1324 = _1322 * (_1279.y + (-0.5));
        float _1325 = _1322 * (_1279.z + (-0.5));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = _1293 * 0.5;
        float _1330 = _1303 * 0.5;
        float _1331 = _1313 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1346 = (dot(vec3(_924, _925, _926), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4255 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1356 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _4266 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _4277 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0))) * (_1358 + 1.0))) + _1363) * _1326;
        float _1373 = _1294 * 0.5;
        float _1374 = _1304 * 0.5;
        float _1375 = _1314 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_924, _925, _926), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _4288 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4299 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4310 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0))) * (_1400 + 1.0))) + _1405) * _1327;
        float _1415 = _1295 * 0.5;
        float _1416 = _1305 * 0.5;
        float _1417 = _1315 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_924, _925, _926), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _4321 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4332 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4343 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0))) * (_1442 + 1.0))) + _1447) * _1328;
        _1464 = _1295;
        _1466 = _1294;
        _1467 = _1293;
        _1468 = _1305;
        _1469 = _1304;
        _1470 = _1303;
        _1471 = _1315;
        _1472 = _1314;
        _1473 = _1313;
        _1474 = _1328;
        _1475 = _1327;
        _1476 = _1326;
        _1477 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
    }
    else
    {
        _1464 = _1465;
        _1466 = _1465;
        _1467 = _1465;
        _1468 = _1465;
        _1469 = _1465;
        _1470 = _1465;
        _1471 = _1465;
        _1472 = _1465;
        _1473 = _1465;
        _1474 = _1465;
        _1475 = _1465;
        _1476 = _1465;
        _1477 = 0.0;
        _1478 = 0.0;
        _1479 = 0.0;
    }
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1505 = fma(_1162, cbModelParam._m0[30u].z, fma(_1158, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1154));
        float _1509 = fma(_1162, cbModelParam._m0[31u].z, fma(_1158, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1154));
        float _1513 = fma(_1162, cbModelParam._m0[32u].z, fma(_1158, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1154));
        float _1536 = _1154 + _924;
        float _1537 = _1158 + _925;
        float _1538 = _1162 + _926;
        float _1548 = fma(_1538, cbModelParam._m0[30u].z, fma(_1537, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1536)) - _1505;
        float _1549 = fma(_1538, cbModelParam._m0[31u].z, fma(_1537, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1536)) - _1509;
        float _1550 = fma(_1538, cbModelParam._m0[32u].z, fma(_1537, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1536)) - _1513;
        float _1554 = inversesqrt(dot(vec3(_1548, _1549, _1550), vec3(_1548, _1549, _1550)));
        float _1567 = ((_1554 * _1548) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1505 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1568 = ((_1554 * _1549) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1509 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1569 = ((_1554 * _1550) / cbModelParam._m0[35u].z) + ((((((_1513 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1571 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1567, _1568, _1569), 0.0);
        vec4 _1578 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1567, _1568, _1569), 0.0);
        vec4 _1585 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1567, _1568, _1569), 0.0);
        vec4 _1592 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1567, _1568, _1569), 0.0);
        float _1604 = exp2((_1571.w + (-0.5)) * 20.0) * 2.0;
        float _1605 = _1604 * (_1571.x + (-0.5));
        float _1606 = _1604 * (_1571.y + (-0.5));
        float _1607 = _1604 * (_1571.z + (-0.5));
        float _1614 = exp2((_1578.w + (-0.5)) * 20.0) * 2.0;
        float _1615 = _1614 * (_1578.x + (-0.5));
        float _1616 = _1614 * (_1578.y + (-0.5));
        float _1617 = _1614 * (_1578.z + (-0.5));
        float _1624 = exp2((_1585.w + (-0.5)) * 20.0) * 2.0;
        float _1625 = _1624 * (_1585.x + (-0.5));
        float _1626 = _1624 * (_1585.y + (-0.5));
        float _1627 = _1624 * (_1585.z + (-0.5));
        float _1634 = exp2((_1592.w + (-0.5)) * 20.0) * 2.0;
        float _1635 = _1634 * (_1592.x + (-0.5));
        float _1636 = _1634 * (_1592.y + (-0.5));
        float _1637 = _1634 * (_1592.z + (-0.5));
        float _1638 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1639 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1640 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1641 = _1605 * 0.5;
        float _1642 = _1615 * 0.5;
        float _1643 = _1625 * 0.5;
        float _1644 = dot(vec3(_1641, _1642, _1643), vec3(_1641, _1642, _1643));
        float _1649 = (_1644 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1644);
        float _1657 = (dot(vec3(_924, _925, _926), vec3(_1649 * _1641, _1649 * _1642, _1649 * _1643)) + 1.0) * 0.5;
        float _4384 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1666 = sqrt(((_1642 * _1642) + (_1641 * _1641)) + (_1643 * _1643)) / (_1638 + 9.9999997473787516355514526367188e-06);
        float _4395 = isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0));
        float _1667 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _1668 = _1667 * 2.0;
        float _1672 = (1.0 - _1667) / (_1667 + 1.0);
        float _4406 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        float _1673 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
        float _1682 = ((((1.0 - _1673) * (_1668 + 2.0)) * exp2(log2(isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0))) * (_1668 + 1.0))) + _1673) * _1638;
        float _1683 = _1606 * 0.5;
        float _1684 = _1616 * 0.5;
        float _1685 = _1626 * 0.5;
        float _1686 = dot(vec3(_1683, _1684, _1685), vec3(_1683, _1684, _1685));
        float _1691 = (_1686 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1686);
        float _1699 = (dot(vec3(_924, _925, _926), vec3(_1691 * _1683, _1691 * _1684, _1691 * _1685)) + 1.0) * 0.5;
        float _4417 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1708 = sqrt(((_1684 * _1684) + (_1683 * _1683)) + (_1685 * _1685)) / (_1639 + 9.9999997473787516355514526367188e-06);
        float _4428 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1709 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
        float _1710 = _1709 * 2.0;
        float _1714 = (1.0 - _1709) / (_1709 + 1.0);
        float _4439 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1724 = ((((1.0 - _1715) * (_1710 + 2.0)) * exp2(log2(isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * (_1710 + 1.0))) + _1715) * _1639;
        float _1725 = _1607 * 0.5;
        float _1726 = _1617 * 0.5;
        float _1727 = _1627 * 0.5;
        float _1728 = dot(vec3(_1725, _1726, _1727), vec3(_1725, _1726, _1727));
        float _1733 = (_1728 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1728);
        float _1741 = (dot(vec3(_924, _925, _926), vec3(_1733 * _1725, _1733 * _1726, _1733 * _1727)) + 1.0) * 0.5;
        float _4450 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1750 = sqrt(((_1726 * _1726) + (_1725 * _1725)) + (_1727 * _1727)) / (_1640 + 9.9999997473787516355514526367188e-06);
        float _4461 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1751 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _1752 = _1751 * 2.0;
        float _1756 = (1.0 - _1751) / (_1751 + 1.0);
        float _4472 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1766 = ((((1.0 - _1757) * (_1752 + 2.0)) * exp2(log2(isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0))) * (_1752 + 1.0))) + _1757) * _1640;
        _1774 = _1607;
        _1775 = _1606;
        _1776 = _1605;
        _1777 = _1617;
        _1778 = _1616;
        _1779 = _1615;
        _1780 = _1627;
        _1781 = _1626;
        _1782 = _1625;
        _1783 = _1640;
        _1784 = _1639;
        _1785 = _1638;
        _1786 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0)));
        _1787 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)));
        _1788 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0)));
    }
    else
    {
        _1774 = _1465;
        _1775 = _1465;
        _1776 = _1465;
        _1777 = _1465;
        _1778 = _1465;
        _1779 = _1465;
        _1780 = _1465;
        _1781 = _1465;
        _1782 = _1465;
        _1783 = _1465;
        _1784 = _1465;
        _1785 = _1465;
        _1786 = 0.0;
        _1787 = 0.0;
        _1788 = 0.0;
    }
    float _1798 = (cbModelParam._m0[1u].x * (_1786 - _1477)) + _1477;
    float _1799 = (cbModelParam._m0[1u].x * (_1787 - _1478)) + _1478;
    float _1800 = (cbModelParam._m0[1u].x * (_1788 - _1479)) + _1479;
    float _1821 = fma(_1800, cbSceneParam._m0[89u].z, fma(_1799, cbSceneParam._m0[89u].y, _1798 * cbSceneParam._m0[89u].x));
    float _1824 = fma(_1800, cbSceneParam._m0[90u].z, fma(_1799, cbSceneParam._m0[90u].y, _1798 * cbSceneParam._m0[90u].x));
    float _1827 = fma(_1800, cbSceneParam._m0[91u].z, fma(_1799, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1798));
    float _1842 = _1098 * 0.5;
    float _1843 = _1099 * 0.5;
    float _1844 = _1100 * 0.5;
    float _1845 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1776, _1779, _1782, _1785));
    float _1848 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1775, _1778, _1781, _1784));
    float _1851 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1774, _1777, _1780, _1783));
    float _1885;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1858 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1464, _1468, _1471, _1474));
        float _1862 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1466, _1469, _1472, _1475));
        float _1866 = dot(vec4(_1842, _1843, _1844, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1873 = dot(vec4(cbModelParam._m0[39u]), vec4(_1842, _1843, _1844, 1.0));
        _1885 = dot(vec3(isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)), isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0)), isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1873) ? 0.0 : (isnan(0.0) ? _1873 : max(0.0, _1873))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1885 = 1.0;
    }
    float _1896;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1887 = dot(vec4(cbModelParam._m0[40u]), vec4(_1842, _1843, _1844, 1.0));
        _1896 = dot(vec3(isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1887) ? 0.0 : (isnan(0.0) ? _1887 : max(0.0, _1887))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1896 = 1.0;
    }
    float _1900 = (_1896 * cbModelParam._m0[1u].x) + (_1885 * (1.0 - cbModelParam._m0[1u].x));
    float _1910 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _927);
    float _1911 = isnan(_1910) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1910 : min(cbModelParam._m0[25u].z, _1910));
    float _1991;
    float _1993;
    float _1995;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1958 = fma(_1162, cbModelParam._m0[13u].z, fma(_1158, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1154)) + cbModelParam._m0[13u].w;
        float _1962 = fma(_1162, cbModelParam._m0[14u].z, fma(_1158, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1154)) + cbModelParam._m0[14u].w;
        float _1966 = fma(_1162, cbModelParam._m0[15u].z, fma(_1158, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1154)) + cbModelParam._m0[15u].w;
        float _1969 = fma(_1100, cbModelParam._m0[13u].z, fma(_1099, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1098));
        float _1972 = fma(_1100, cbModelParam._m0[14u].z, fma(_1099, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1098));
        float _1975 = fma(_1100, cbModelParam._m0[15u].z, fma(_1099, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1098));
        float _2003;
        if (_1969 > 0.0)
        {
            _2003 = abs((1.0 - _1958) / _1969);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1958 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2003 = frontier_phi_14_12_ladder;
        }
        float _2174;
        if (_1972 > 0.0)
        {
            _2174 = abs((1.0 - _1962) / _1972);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1962 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2174 = frontier_phi_23_19_ladder;
        }
        float _2469;
        if (_1975 > 0.0)
        {
            _2469 = abs((1.0 - _1966) / _1975);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1966 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2469 = frontier_phi_35_30_ladder;
        }
        float _2471 = isnan(_2174) ? _2003 : (isnan(_2003) ? _2174 : min(_2003, _2174));
        float _2472 = isnan(_2469) ? _2471 : (isnan(_2471) ? _2469 : min(_2471, _2469));
        float _2476 = (_2472 * _1969) + _1958;
        float _2477 = (_2472 * _1972) + _1962;
        float _2478 = (_2472 * _1975) + _1966;
        float _2479 = _2472 * 9.9999997473787516355514526367188e-05;
        float _2481 = (-1.0) - _2479;
        float _2483 = _2479 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2478 > _2483) || ((_2478 < _2481) || ((_2477 > _2483) || ((_2477 < _2481) || ((_2476 < _2481) || (_2476 > _2483))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2623 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2478, cbModelParam._m0[9u].z, fma(_2477, cbModelParam._m0[9u].y, _2476 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2478, cbModelParam._m0[10u].z, fma(_2477, cbModelParam._m0[10u].y, _2476 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2478, cbModelParam._m0[11u].z, fma(_2477, cbModelParam._m0[11u].y, _2476 * cbModelParam._m0[11u].x))), _1911);
            frontier_phi_13_35_ladder = _2623.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2623.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2623.x * cbModelParam._m0[1u].y;
        }
        _1991 = frontier_phi_13_35_ladder_2;
        _1993 = frontier_phi_13_35_ladder_1;
        _1995 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1979 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1098, _1099, _1100), _1911);
        _1991 = _1979.x * cbModelParam._m0[1u].y;
        _1993 = _1979.y * cbModelParam._m0[1u].y;
        _1995 = _1979.z * cbModelParam._m0[1u].y;
    }
    float _1999 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _927);
    float _2000 = isnan(_1999) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1999 : min(cbModelParam._m0[25u].w, _1999));
    float _2089;
    float _2091;
    float _2093;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2053 = fma(_1162, cbModelParam._m0[21u].z, fma(_1158, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1154)) + cbModelParam._m0[21u].w;
        float _2057 = fma(_1162, cbModelParam._m0[22u].z, fma(_1158, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1154)) + cbModelParam._m0[22u].w;
        float _2061 = fma(_1162, cbModelParam._m0[23u].z, fma(_1158, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1154)) + cbModelParam._m0[23u].w;
        float _2064 = fma(_1100, cbModelParam._m0[21u].z, fma(_1099, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1098));
        float _2067 = fma(_1100, cbModelParam._m0[22u].z, fma(_1099, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1098));
        float _2070 = fma(_1100, cbModelParam._m0[23u].z, fma(_1099, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1098));
        float _2179;
        if (_2064 > 0.0)
        {
            _2179 = abs((1.0 - _2053) / _2064);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2064 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2053 + 1.0) / _2064);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2179 = frontier_phi_25_21_ladder;
        }
        float _2496;
        if (_2067 > 0.0)
        {
            _2496 = abs((1.0 - _2057) / _2067);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2067 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2057 + 1.0) / _2067);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2496 = frontier_phi_37_32_ladder;
        }
        float _2834;
        if (_2070 > 0.0)
        {
            _2834 = abs((1.0 - _2061) / _2070);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2061 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2834 = frontier_phi_47_44_ladder;
        }
        float _2836 = isnan(_2496) ? _2179 : (isnan(_2179) ? _2496 : min(_2179, _2496));
        float _2837 = isnan(_2834) ? _2836 : (isnan(_2836) ? _2834 : min(_2836, _2834));
        float _2841 = (_2837 * _2064) + _2053;
        float _2842 = (_2837 * _2067) + _2057;
        float _2843 = (_2837 * _2070) + _2061;
        float _2844 = _2837 * 9.9999997473787516355514526367188e-05;
        float _2845 = (-1.0) - _2844;
        float _2847 = _2844 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2843 > _2847) || ((_2843 < _2845) || ((_2842 > _2847) || ((_2842 < _2845) || ((_2841 < _2845) || (_2841 > _2847))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2965 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2843, cbModelParam._m0[17u].z, fma(_2842, cbModelParam._m0[17u].y, _2841 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2843, cbModelParam._m0[18u].z, fma(_2842, cbModelParam._m0[18u].y, _2841 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2843, cbModelParam._m0[19u].z, fma(_2842, cbModelParam._m0[19u].y, _2841 * cbModelParam._m0[19u].x))), _2000);
            frontier_phi_22_47_ladder = _2965.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2965.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2965.x * cbModelParam._m0[1u].z;
        }
        _2089 = frontier_phi_22_47_ladder_2;
        _2091 = frontier_phi_22_47_ladder_1;
        _2093 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2073 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1098, _1099, _1100), _2000);
        _2089 = _2073.x * cbModelParam._m0[1u].z;
        _2091 = _2073.y * cbModelParam._m0[1u].z;
        _2093 = _2073.z * cbModelParam._m0[1u].z;
    }
    float _2106 = (((_1125 * _1075) + _1126) * _1090) * ((cbModelParam._m0[1u].w * (_2089 - _1991)) + _1991);
    float _2108 = (((_1125 * _1077) + _1126) * _1090) * ((cbModelParam._m0[1u].w * (_2091 - _1993)) + _1993);
    float _2110 = (((_1125 * _1078) + _1126) * _1090) * ((cbModelParam._m0[1u].w * (_2093 - _1995)) + _1995);
    float _2113 = fma(_2110, cbSceneParam._m0[89u].z, fma(_2108, cbSceneParam._m0[89u].y, _2106 * cbSceneParam._m0[89u].x));
    float _2116 = fma(_2110, cbSceneParam._m0[90u].z, fma(_2108, cbSceneParam._m0[90u].y, _2106 * cbSceneParam._m0[90u].x));
    float _2119 = fma(_2110, cbSceneParam._m0[91u].z, fma(_2108, cbSceneParam._m0[91u].y, _2106 * cbSceneParam._m0[91u].x));
    float _2153 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2161 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2165 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2166 = _2153 / _2165;
    float _2167 = _2157 / _2165;
    float _2168 = _2161 / _2165;
    float _2315;
    float _2316;
    float _2317;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2195 = ((uint(_2168 > cbSceneParam._m0[59u].y) + uint(_2168 > cbSceneParam._m0[59u].x)) + uint(_2168 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2196 = _2195 + 43u;
        uint _2204 = _2195 + 44u;
        uint _2212 = _2195 + 45u;
        uint _2220 = _2195 + 46u;
        float _2231 = fma(_2165, cbSceneParam._m0[_2196].w, fma(_2161, cbSceneParam._m0[_2196].z, fma(_2157, cbSceneParam._m0[_2196].y, _2153 * cbSceneParam._m0[_2196].x)));
        float _2235 = fma(_2165, cbSceneParam._m0[_2204].w, fma(_2161, cbSceneParam._m0[_2204].z, fma(_2157, cbSceneParam._m0[_2204].y, _2153 * cbSceneParam._m0[_2204].x)));
        float _2243 = fma(_2165, cbSceneParam._m0[_2220].w, fma(_2161, cbSceneParam._m0[_2220].z, fma(_2157, cbSceneParam._m0[_2220].y, _2153 * cbSceneParam._m0[_2220].x)));
        float _2248 = cbSceneParam._m0[33u].z * _2243;
        float _2250 = cbSceneParam._m0[33u].w * _2243;
        float _2253 = fma(_2165, cbSceneParam._m0[_2212].w, fma(_2161, cbSceneParam._m0[_2212].z, fma(_2157, cbSceneParam._m0[_2212].y, _2153 * cbSceneParam._m0[_2212].x))) / _2243;
        float _2301 = (cbSceneParam._m0[33u].x - sqrt(((_2167 * _2167) + (_2166 * _2166)) + (_2168 * _2168))) * cbSceneParam._m0[33u].y;
        float _4598 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
        float _2308 = (isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2248 + _2231) / _2243, (_2250 + _2235) / _2243), _2253), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2250 + _2231) / _2243, (_2235 - _2248) / _2243), _2253), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2231 - _2248) / _2243, (_2235 - _2250) / _2243), _2253), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2231 - _2250) / _2243, (_2248 + _2235) / _2243), _2253), 0.0)).x), vec4(0.25)));
        _2315 = 1.0 - (_2308 * cbSceneParam._m0[34u].x);
        _2316 = 1.0 - (_2308 * cbSceneParam._m0[34u].y);
        _2317 = 1.0 - (_2308 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2315 = 1.0;
        _2316 = 1.0;
        _2317 = 1.0;
    }
    float _2381;
    float _2383;
    float _2385;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2369 = fma(_2165, cbSceneParam._m0[63u].w, fma(_2161, cbSceneParam._m0[63u].z, fma(_2157, cbSceneParam._m0[63u].y, _2153 * cbSceneParam._m0[63u].x)));
        float _2370 = fma(_2165, cbSceneParam._m0[60u].w, fma(_2161, cbSceneParam._m0[60u].z, fma(_2157, cbSceneParam._m0[60u].y, _2153 * cbSceneParam._m0[60u].x))) / _2369;
        float _2371 = fma(_2165, cbSceneParam._m0[61u].w, fma(_2161, cbSceneParam._m0[61u].z, fma(_2157, cbSceneParam._m0[61u].y, _2153 * cbSceneParam._m0[61u].x))) / _2369;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2370 >= cbSceneParam._m0[64u].x) && (_2371 >= cbSceneParam._m0[64u].y)) && (_2370 <= cbSceneParam._m0[64u].z)) && (_2371 <= cbSceneParam._m0[64u].w))
        {
            float _2509 = fma(_2165, cbSceneParam._m0[62u].w, fma(_2161, cbSceneParam._m0[62u].z, fma(_2157, cbSceneParam._m0[62u].y, _2153 * cbSceneParam._m0[62u].x))) / _2369;
            float _2513 = isnan(cbSceneParam._m0[41u].w) ? _2509 : (isnan(_2509) ? cbSceneParam._m0[41u].w : max(_2509, cbSceneParam._m0[41u].w));
            float _2556 = (cbSceneParam._m0[33u].x - sqrt(((_2167 * _2167) + (_2166 * _2166)) + (_2168 * _2168))) * cbSceneParam._m0[33u].y;
            float _4614 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
            float _2563 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2370, cbSceneParam._m0[33u].w + _2371), _2513), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2370, _2371 - cbSceneParam._m0[33u].z), _2513), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2370 - cbSceneParam._m0[33u].z, _2371 - cbSceneParam._m0[33u].w), _2513), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2370 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2371), _2513), 0.0)).x), vec4(0.25)));
            float _2567 = 1.0 - (_2563 * cbSceneParam._m0[34u].x);
            float _2568 = 1.0 - (_2563 * cbSceneParam._m0[34u].y);
            float _2569 = 1.0 - (_2563 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2569) ? _2317 : (isnan(_2317) ? _2569 : min(_2317, _2569));
            frontier_phi_34_33_ladder_1 = isnan(_2568) ? _2316 : (isnan(_2316) ? _2568 : min(_2316, _2568));
            frontier_phi_34_33_ladder_2 = isnan(_2567) ? _2315 : (isnan(_2315) ? _2567 : min(_2315, _2567));
        }
        else
        {
            frontier_phi_34_33_ladder = _2317;
            frontier_phi_34_33_ladder_1 = _2316;
            frontier_phi_34_33_ladder_2 = _2315;
        }
        _2381 = frontier_phi_34_33_ladder_2;
        _2383 = frontier_phi_34_33_ladder_1;
        _2385 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2381 = _2315;
        _2383 = _2316;
        _2385 = _2317;
    }
    uvec4 _2390 = floatBitsToUint(cbInstanceData._m0[_1050 + 5u]);
    uint _2392 = _2390.x * 14u;
    uint _2393 = _2392 + 13u;
    float _2400 = _1090 + (-1.0);
    float _2405 = (cbLight._m0[_2393].x * _2400) + 1.0;
    float _2406 = (cbLight._m0[_2393].y * _2400) + 1.0;
    float _2407 = (cbLight._m0[_2393].z * _2400) + 1.0;
    float _2408 = (cbLight._m0[_2393].w * _2400) + 1.0;
    uint _2409 = _2392 + 5u;
    float _2415 = isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0));
    uint _2419 = _2392 + 4u;
    float _2428 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
    uint _2432 = _2392 | 1u;
    float _2443 = dot(vec3(cbLight._m0[_2392].xyz), vec3(_924, _925, _926));
    float _2446 = dot(vec3(cbLight._m0[_2432].xyz), vec3(_924, _925, _926));
    float _4650 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _4661 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
    float _2451 = (isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0))) * 0.3183098733425140380859375;
    float _2453 = (isnan(1.0) ? _4661 : (isnan(_4661) ? 1.0 : min(_4661, 1.0))) * 0.3183098733425140380859375;
    float _2460 = ((cbLight._m0[_2409].x * _2415) * _2453) + (((cbLight._m0[_2419].x * _2381) * _2428) * _2451);
    float _2461 = ((_2415 * cbLight._m0[_2409].y) * _2453) + (((cbLight._m0[_2419].y * _2383) * _2428) * _2451);
    float _2462 = ((_2415 * cbLight._m0[_2409].z) * _2453) + (((cbLight._m0[_2419].z * _2385) * _2428) * _2451);
    uvec4 _2466 = floatBitsToUint(cbLight._m0[_2392 + 12u]);
    bool _2468 = _2466.x == 0u;
    float _2570;
    float _2572;
    float _2574;
    if (_2468)
    {
        _2570 = _2460;
        _2572 = _2461;
        _2574 = _2462;
    }
    else
    {
        uint _2578 = _2392 + 6u;
        float _2594 = (dot(vec3(cbLight._m0[_2392 + 2u].xyz), vec3(_924, _925, _926)) * 0.5) + 0.5;
        float _2595 = _2594 * _2594;
        float _4672 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
        float _2596 = isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0));
        float _2597 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        _2570 = (((cbLight._m0[_2578].x * 0.3183098733425140380859375) * _2596) * _2597) + _2460;
        _2572 = (((cbLight._m0[_2578].y * 0.3183098733425140380859375) * _2596) * _2597) + _2461;
        _2574 = (((cbLight._m0[_2578].z * 0.3183098733425140380859375) * _2596) * _2597) + _2462;
    }
    bool _2577 = _2466.y == 0u;
    float _2632;
    float _2634;
    float _2636;
    if (_2577)
    {
        _2632 = _2570;
        _2634 = _2572;
        _2636 = _2574;
    }
    else
    {
        uint _2805 = _2392 + 7u;
        float _2821 = (dot(vec3(cbLight._m0[_2392 + 3u].xyz), vec3(_924, _925, _926)) * 0.5) + 0.5;
        float _2822 = _2821 * _2821;
        float _4688 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
        float _2823 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
        float _2824 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
        _2632 = (((cbLight._m0[_2805].x * 0.3183098733425140380859375) * _2823) * _2824) + _2570;
        _2634 = (((cbLight._m0[_2805].y * 0.3183098733425140380859375) * _2823) * _2824) + _2572;
        _2636 = (((cbLight._m0[_2805].z * 0.3183098733425140380859375) * _2823) * _2824) + _2574;
    }
    uint _2639 = _2392 + 8u;
    float _2652 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2392].w)) * _927) * 0.949999988079071044921875);
    float _2653 = _2652 * _2652;
    float _2654 = cbLight._m0[_2392].x + _1004;
    float _2655 = cbLight._m0[_2392].y + _1005;
    float _2656 = cbLight._m0[_2392].z + _1006;
    float _2660 = inversesqrt(dot(vec3(_2654, _2655, _2656), vec3(_2654, _2655, _2656)));
    float _2661 = _2660 * _2654;
    float _2662 = _2660 * _2655;
    float _2663 = _2660 * _2656;
    float _2664 = dot(vec3(_924, _925, _926), vec3(cbLight._m0[_2392].xyz));
    float _4704 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
    float _2667 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
    float _4715 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _2668 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
    float _2669 = dot(vec3(_924, _925, _926), vec3(_2661, _2662, _2663));
    float _4726 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
    float _2672 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
    float _2673 = dot(vec3(cbLight._m0[_2392].xyz), vec3(_2661, _2662, _2663));
    float _4737 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2677 = _2653 * _2653;
    float _2681 = ((_2672 * _2672) * (_2677 + (-1.0))) + 1.0;
    float _2689 = exp2(log2(1.0 - (isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0)))) * 5.0);
    float _2690 = 0.959999978542327880859375 - _1072;
    float _2692 = 0.959999978542327880859375 - _1073;
    float _2693 = 0.959999978542327880859375 - _1074;
    float _2700 = 1.0 - _2653;
    float _2711 = (0.5 / (((_2668 * ((_2667 * _2700) + _2653)) + 9.9999999392252902907785028219223e-09) + (((_2668 * _2700) + _2653) * _2667))) * _2667;
    float _4748 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
    float _2713 = (isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0))) * (_2677 / ((_2681 * _2681) * 3.141590118408203125));
    uint _2727 = _2392 + 9u;
    float _2738 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2432].w)) * _927) * 0.949999988079071044921875);
    float _2739 = _2738 * _2738;
    float _2740 = cbLight._m0[_2432].x + _1004;
    float _2741 = cbLight._m0[_2432].y + _1005;
    float _2742 = cbLight._m0[_2432].z + _1006;
    float _2746 = inversesqrt(dot(vec3(_2740, _2741, _2742), vec3(_2740, _2741, _2742)));
    float _2747 = _2746 * _2740;
    float _2748 = _2746 * _2741;
    float _2749 = _2746 * _2742;
    float _2750 = dot(vec3(_924, _925, _926), vec3(cbLight._m0[_2432].xyz));
    float _4759 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2753 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
    float _2754 = dot(vec3(_924, _925, _926), vec3(_2747, _2748, _2749));
    float _4770 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
    float _2757 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
    float _2758 = dot(vec3(cbLight._m0[_2432].xyz), vec3(_2747, _2748, _2749));
    float _4781 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
    float _2762 = _2739 * _2739;
    float _2766 = ((_2757 * _2757) * (_2762 + (-1.0))) + 1.0;
    float _2773 = exp2(log2(1.0 - (isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0)))) * 5.0);
    float _2780 = 1.0 - _2739;
    float _2790 = (0.5 / (((_2668 * ((_2753 * _2780) + _2739)) + 9.9999999392252902907785028219223e-09) + (((_2668 * _2780) + _2739) * _2753))) * _2753;
    float _4792 = isnan(0.0) ? _2790 : (isnan(_2790) ? 0.0 : max(_2790, 0.0));
    float _2792 = (isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0))) * (_2762 / ((_2766 * _2766) * 3.141590118408203125));
    float _2802 = (((((_2773 * _2690) + _1075) * cbLight._m0[_2727].x) * _2792) * _2415) + ((((cbLight._m0[_2639].x * _2381) * ((_2689 * _2690) + _1075)) * _2713) * _2428);
    float _2803 = (((((_2773 * _2692) + _1077) * cbLight._m0[_2727].y) * _2792) * _2415) + ((((cbLight._m0[_2639].y * _2383) * ((_2689 * _2692) + _1077)) * _2713) * _2428);
    float _2804 = (((((_2773 * _2693) + _1078) * cbLight._m0[_2727].z) * _2792) * _2415) + ((((cbLight._m0[_2639].z * _2385) * ((_2689 * _2693) + _1078)) * _2713) * _2428);
    float _2860;
    float _2862;
    float _2864;
    if (_2468)
    {
        _2860 = _2802;
        _2862 = _2803;
        _2864 = _2804;
    }
    else
    {
        uint _2866 = _2392 + 2u;
        uint _2870 = _2392 + 10u;
        float _2884 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2866].w)) * _927) * 0.949999988079071044921875);
        float _2885 = _2884 * _2884;
        float _2886 = cbLight._m0[_2866].x + _1004;
        float _2887 = cbLight._m0[_2866].y + _1005;
        float _2888 = cbLight._m0[_2866].z + _1006;
        float _2892 = inversesqrt(dot(vec3(_2886, _2887, _2888), vec3(_2886, _2887, _2888)));
        float _2893 = _2892 * _2886;
        float _2894 = _2892 * _2887;
        float _2895 = _2892 * _2888;
        float _2896 = dot(vec3(_924, _925, _926), vec3(cbLight._m0[_2866].xyz));
        float _4803 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
        float _2899 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
        float _2900 = dot(vec3(_924, _925, _926), vec3(_2893, _2894, _2895));
        float _4814 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2903 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
        float _2904 = dot(vec3(cbLight._m0[_2866].xyz), vec3(_2893, _2894, _2895));
        float _4825 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
        float _2908 = _2885 * _2885;
        float _2912 = ((_2903 * _2903) * (_2908 + (-1.0))) + 1.0;
        float _2919 = exp2(log2(1.0 - (isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0)))) * 5.0);
        float _2926 = 1.0 - _2885;
        float _2936 = (0.5 / (((_2668 * ((_2899 * _2926) + _2885)) + 9.9999999392252902907785028219223e-09) + (((_2668 * _2926) + _2885) * _2899))) * _2899;
        float _4836 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
        float _2938 = (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2908 / ((_2912 * _2912) * 3.141590118408203125));
        float _2939 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        _2860 = (((((_2919 * _2690) + _1075) * cbLight._m0[_2870].x) * _2938) * _2939) + _2802;
        _2862 = (((((_2919 * _2692) + _1077) * cbLight._m0[_2870].y) * _2938) * _2939) + _2803;
        _2864 = (((((_2919 * _2693) + _1078) * cbLight._m0[_2870].z) * _2938) * _2939) + _2804;
    }
    float _2970;
    float _2972;
    float _2974;
    if (_2577)
    {
        _2970 = _2860;
        _2972 = _2862;
        _2974 = _2864;
    }
    else
    {
        uint _2981 = _2392 + 3u;
        uint _2985 = _2392 + 11u;
        float _2999 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2981].w)) * _927) * 0.949999988079071044921875);
        float _3000 = _2999 * _2999;
        float _3001 = cbLight._m0[_2981].x + _1004;
        float _3002 = cbLight._m0[_2981].y + _1005;
        float _3003 = cbLight._m0[_2981].z + _1006;
        float _3007 = inversesqrt(dot(vec3(_3001, _3002, _3003), vec3(_3001, _3002, _3003)));
        float _3008 = _3007 * _3001;
        float _3009 = _3007 * _3002;
        float _3010 = _3007 * _3003;
        float _3011 = dot(vec3(_924, _925, _926), vec3(cbLight._m0[_2981].xyz));
        float _4852 = isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0));
        float _3014 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
        float _3015 = dot(vec3(_924, _925, _926), vec3(_3008, _3009, _3010));
        float _4863 = isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0));
        float _3018 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
        float _3019 = dot(vec3(cbLight._m0[_2981].xyz), vec3(_3008, _3009, _3010));
        float _4874 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
        float _3023 = _3000 * _3000;
        float _3027 = ((_3018 * _3018) * (_3023 + (-1.0))) + 1.0;
        float _3034 = exp2(log2(1.0 - (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0)))) * 5.0);
        float _3041 = 1.0 - _3000;
        float _3051 = (0.5 / (((_2668 * ((_3014 * _3041) + _3000)) + 9.9999999392252902907785028219223e-09) + (((_2668 * _3041) + _3000) * _3014))) * _3014;
        float _4885 = isnan(0.0) ? _3051 : (isnan(_3051) ? 0.0 : max(_3051, 0.0));
        float _3053 = (isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0))) * (_3023 / ((_3027 * _3027) * 3.141590118408203125));
        float _3054 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
        _2970 = (((((_3034 * _2690) + _1075) * cbLight._m0[_2985].x) * _3053) * _3054) + _2860;
        _2972 = (((((_3034 * _2692) + _1077) * cbLight._m0[_2985].y) * _3053) * _3054) + _2862;
        _2974 = (((((_3034 * _2693) + _1078) * cbLight._m0[_2985].z) * _3053) * _3054) + _2864;
    }
    float _3120;
    float _3122;
    float _3124;
    float _3126;
    float _3128;
    float _3130;
    if (_2390.y == 0u)
    {
        uvec4 _3075 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3076 = _3075.x;
        uint _3087 = uint((float(_3075.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1013) / _3076))) + floor(float(uint(cbSceneParam._m0[85u].x * _1012) / _3076)));
        float _3097 = (log2(_2168 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3098 = isnan(0.0) ? _3097 : (isnan(_3097) ? 0.0 : max(_3097, 0.0));
        uint _3101 = uint(isnan(14.0) ? _3098 : (isnan(_3098) ? 14.0 : min(_3098, 14.0)));
        uvec4 _3106 = texelFetch(g_lightClusterGridBuffer, int(((_3101 << 2u) + (_3087 << 6u)) >> 2u));
        uint _3107 = _3106.x;
        uint _3108 = _3075.z;
        float _3187;
        float _3189;
        float _3191;
        float _3193;
        float _3195;
        float _3197;
        if (((((1u << ((_3108 >> 4u) & 15u)) + 4294967295u) & _3107) == 0u) || ((_3108 & 240u) == 0u))
        {
            _3187 = 0.0;
            _3189 = 0.0;
            _3191 = 0.0;
            _3193 = 0.0;
            _3195 = 0.0;
            _3197 = 0.0;
        }
        else
        {
            float _3188;
            float _3190;
            float _3192;
            float _3194;
            float _3196;
            float _3198;
            float _3332 = 0.0;
            float _3333 = 0.0;
            float _3334 = 0.0;
            float _3335 = 0.0;
            float _3336 = 0.0;
            float _3337 = 0.0;
            uint _3338 = 0u;
            uint _3347;
            bool _3348;
            for (;;)
            {
                _3347 = texelFetch(g_lightClassification, int((((_3101 << 5u) + (_3087 << 9u)) + (_3338 << 2u)) >> 2u)).x;
                _3348 = _3347 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3348)
                {
                    frontier_phi_66_pred = _3337;
                    frontier_phi_66_pred_1 = _3336;
                    frontier_phi_66_pred_2 = _3335;
                    frontier_phi_66_pred_3 = _3334;
                    frontier_phi_66_pred_4 = _3333;
                    frontier_phi_66_pred_5 = _3332;
                }
                else
                {
                    float _3456;
                    float _3457;
                    float _3458;
                    float _3459;
                    float _3460;
                    float _3461;
                    uint _3462;
                    _3456 = _3332;
                    _3457 = _3333;
                    _3458 = _3334;
                    _3459 = _3335;
                    _3460 = _3336;
                    _3461 = _3337;
                    _3462 = _3347;
                    float _3388;
                    float _3389;
                    float _3390;
                    float _3391;
                    float _3392;
                    float _3393;
                    for (;;)
                    {
                        uint _3466 = uint(findLSB(_3462)) + (_3338 << 5u);
                        uint _3463 = (_3462 + 4294967295u) & _3462;
                        uint _3468 = _3466 * 48u;
                        vec4 _3482 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3468)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 3u)).x));
                        uint _3488 = (_3466 * 48u) + 4u;
                        vec4 _3501 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3488)).x, texelFetch(g_PointLightRenderingBuffer, int(_3488 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3488 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3488 + 3u)).x));
                        uint _3507 = (_3466 * 48u) + 8u;
                        vec3 _3518 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3507)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 2u)).x));
                        float _3522 = _3482.x - _2166;
                        float _3523 = _3482.y - _2167;
                        float _3524 = _3482.z - _2168;
                        float _3525 = dot(vec3(_3522, _3523, _3524), vec3(_3522, _3523, _3524));
                        float _3528 = inversesqrt(_3525);
                        float _3529 = _3528 * _3522;
                        float _3530 = _3528 * _3523;
                        float _3531 = _3528 * _3524;
                        float _3532 = dot(vec3(_1031, _1034, _1037), vec3(_3529, _3530, _3531));
                        float _3537 = 1.0 - (_3525 * _3482.w);
                        float _4911 = isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0));
                        float _3538 = isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0));
                        float _3539 = sqrt(_3525) * _3501.w;
                        float _3542 = 1.39999997615814208984375 / (_3539 + 1.39999997615814208984375);
                        float _3543 = _3542 * _3542;
                        float _3546 = ((1.0 - _3543) * _3532) + _3543;
                        float _3549 = _3539 * _3539;
                        float _3553 = ((isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0))) * _3538) / ((_3549 * 0.699999988079071044921875) + 1.0);
                        float _3557 = (-0.0) - _2166;
                        float _3558 = (-0.0) - _2167;
                        float _3559 = (-0.0) - _2168;
                        float _3563 = inversesqrt(dot(vec3(_3557, _3558, _3559), vec3(_3557, _3558, _3559)));
                        float _3564 = _3563 * _3557;
                        float _3565 = _3563 * _3558;
                        float _3566 = _3563 * _3559;
                        float _3573 = exp2(log2(1.0 / ((_3549 * 3.5) + 5.0)) * 0.25);
                        float _3574 = 1.0 - _1106;
                        float _3581 = sqrt(1.0 - ((1.0 - (_3574 * _3574)) * (1.0 - (_3573 * _3573))));
                        float _3582 = _3581 * _3581;
                        float _3583 = _3582 * _3582;
                        float _3584 = _3564 + _3529;
                        float _3585 = _3565 + _3530;
                        float _3586 = _3566 + _3531;
                        float _3590 = inversesqrt(dot(vec3(_3584, _3585, _3586), vec3(_3584, _3585, _3586)));
                        float _3594 = dot(vec3(_1031, _1034, _1037), vec3(_3564, _3565, _3566));
                        float _4927 = isnan(0.0) ? _3594 : (isnan(_3594) ? 0.0 : max(_3594, 0.0));
                        float _3597 = isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0));
                        float _3598 = dot(vec3(_1031, _1034, _1037), vec3(_3590 * _3584, _3590 * _3585, _3590 * _3586));
                        float _4938 = isnan(0.0) ? _3598 : (isnan(_3598) ? 0.0 : max(_3598, 0.0));
                        float _3601 = isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0));
                        float _3605 = ((_3601 * _3601) * (_3583 + (-1.0))) + 1.0;
                        float _3606 = _3542 * _3582;
                        float _3607 = _3606 * _3606;
                        float _3610 = ((1.0 - _3607) * _3532) + _3607;
                        float _4949 = isnan(0.0) ? _3610 : (isnan(_3610) ? 0.0 : max(_3610, 0.0));
                        float _3611 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
                        float _3612 = 1.0 - _3582;
                        float _3622 = (0.5 / (((_3611 * ((_3597 * _3612) + _3582)) + 9.9999999392252902907785028219223e-09) + (((_3611 * _3612) + _3582) * _3597))) * _3611;
                        float _4960 = isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0));
                        float _3633 = (((_3583 * 3.1415927410125732421875) * (isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0)))) / ((_3605 * _3605) * ((_3549 * 2.1991131305694580078125) + 3.141590118408203125))) * _3538;
                        _3391 = (_3553 * _3501.x) + _3459;
                        _3392 = (_3553 * _3501.y) + _3460;
                        _3393 = (_3553 * _3501.z) + _3461;
                        _3388 = (_3633 * _3518.x) + _3456;
                        _3389 = (_3633 * _3518.y) + _3457;
                        _3390 = (_3633 * _3518.z) + _3458;
                        if (_3463 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3456 = _3388;
                            _3457 = _3389;
                            _3458 = _3390;
                            _3459 = _3391;
                            _3460 = _3392;
                            _3461 = _3393;
                            _3462 = _3463;
                        }
                    }
                    frontier_phi_66_pred = _3393;
                    frontier_phi_66_pred_1 = _3392;
                    frontier_phi_66_pred_2 = _3391;
                    frontier_phi_66_pred_3 = _3390;
                    frontier_phi_66_pred_4 = _3389;
                    frontier_phi_66_pred_5 = _3388;
                }
                _3198 = frontier_phi_66_pred;
                _3196 = frontier_phi_66_pred_1;
                _3194 = frontier_phi_66_pred_2;
                _3192 = frontier_phi_66_pred_3;
                _3190 = frontier_phi_66_pred_4;
                _3188 = frontier_phi_66_pred_5;
                uint _3339 = _3338 + 1u;
                if (_3339 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3332 = _3188;
                    _3333 = _3190;
                    _3334 = _3192;
                    _3335 = _3194;
                    _3336 = _3196;
                    _3337 = _3198;
                    _3338 = _3339;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3187 = _3188;
            _3189 = _3190;
            _3191 = _3192;
            _3193 = _3194;
            _3195 = _3196;
            _3197 = _3198;
        }
        uvec4 _3201 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3202 = _3201.z;
        uint _3204 = (_3202 >> 8u) & 15u;
        float _3300;
        float _3302;
        float _3304;
        float _3306;
        float _3308;
        float _3310;
        if (((4294967295u << _3204) & _3107) == 0u)
        {
            _3300 = _3187;
            _3302 = _3189;
            _3304 = _3191;
            _3306 = _3193;
            _3308 = _3195;
            _3310 = _3197;
        }
        else
        {
            float _3325 = inversesqrt(dot(vec3(_2166, _2167, _2168), vec3(_2166, _2167, _2168)));
            float _3326 = _3325 * _2166;
            float _3327 = _3325 * _2167;
            float _3328 = _3325 * _2168;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3204 < ((_3202 >> 12u) & 15u))
            {
                float _3301;
                float _3303;
                float _3305;
                float _3307;
                float _3309;
                float _3311;
                float _3439 = _3187;
                float _3440 = _3189;
                float _3441 = _3191;
                float _3442 = _3193;
                float _3443 = _3195;
                float _3444 = _3197;
                uint _3445 = _3204;
                uint _3454;
                bool _3455;
                for (;;)
                {
                    _3454 = texelFetch(g_lightClassification, int((((_3101 << 5u) + (_3087 << 9u)) + (_3445 << 2u)) >> 2u)).x;
                    _3455 = _3454 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3455)
                    {
                        frontier_phi_72_pred = _3444;
                        frontier_phi_72_pred_1 = _3443;
                        frontier_phi_72_pred_2 = _3442;
                        frontier_phi_72_pred_3 = _3441;
                        frontier_phi_72_pred_4 = _3440;
                        frontier_phi_72_pred_5 = _3439;
                    }
                    else
                    {
                        float _3638;
                        float _3639;
                        float _3640;
                        float _3641;
                        float _3642;
                        float _3643;
                        float _3932;
                        float _3933;
                        float _3934;
                        float _3935;
                        float _3936;
                        float _3937;
                        float _3651 = _3439;
                        float _3652 = _3440;
                        float _3653 = _3441;
                        float _3654 = _3442;
                        float _3655 = _3443;
                        float _3656 = _3444;
                        uint _3657 = _3454;
                        uint _3658;
                        vec4 _3683;
                        float _3684;
                        vec4 _3699;
                        vec3 _3711;
                        vec4 _3726;
                        vec4 _3741;
                        float _3788;
                        bool _3789;
                        for (;;)
                        {
                            uint _3668 = ((_3445 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3657));
                            _3658 = (_3657 + 4294967295u) & _3657;
                            uint _3670 = _3668 * 40u;
                            _3683 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3670)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3670 + 3u)).x));
                            _3684 = _3683.w;
                            uint _3686 = (_3668 * 40u) + 4u;
                            _3699 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3686)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 3u)).x));
                            uint _3701 = (_3668 * 40u) + 8u;
                            _3711 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3701)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 2u)).x));
                            uint _3713 = (_3668 * 40u) + 16u;
                            _3726 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 3u)).x));
                            uint _3728 = (_3668 * 40u) + 20u;
                            _3741 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3728)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 3u)).x));
                            uint _3744 = (_3668 * 40u) + 24u;
                            vec4 _3757 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3744)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3744 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3744 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3744 + 3u)).x));
                            uint _3763 = (_3668 * 40u) + 28u;
                            vec4 _3776 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3763)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3763 + 3u)).x));
                            _3788 = fma(_2168, _3776.z, fma(_2167, _3776.y, _3776.x * _2166)) + _3776.w;
                            _3789 = !((fma(_2168, _3757.z, fma(_2167, _3757.y, _3757.x * _2166)) + _3757.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3789)
                            {
                                float _3816 = _3683.x - _2166;
                                float _3817 = _3683.y - _2167;
                                float _3818 = _3683.z - _2168;
                                float _3819 = dot(vec3(_3816, _3817, _3818), vec3(_3816, _3817, _3818));
                                float _3822 = inversesqrt(_3819);
                                float _3823 = _3822 * _3816;
                                float _3824 = _3822 * _3817;
                                float _3825 = _3822 * _3818;
                                float _3829 = 1.0 - (_3819 / (_3684 * _3684));
                                float _4971 = isnan(0.0) ? _3829 : (isnan(_3829) ? 0.0 : max(_3829, 0.0));
                                float _3830 = isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0));
                                float _3834 = sqrt(_3819) * _3699.w;
                                float _3836 = 1.39999997615814208984375 / (_3834 + 1.39999997615814208984375);
                                float _3837 = _3836 * _3836;
                                float _3840 = ((1.0 - _3837) * dot(vec3(_3823, _3824, _3825), vec3(_1031, _1034, _1037))) + _3837;
                                float _3843 = _3834 * _3834;
                                float _3847 = (fma(_2168, _3726.z, fma(_2167, _3726.y, _3726.x * _2166)) + _3726.w) / _3788;
                                float _3848 = (fma(_2168, _3741.z, fma(_2167, _3741.y, _3741.x * _2166)) + _3741.w) / _3788;
                                float _3852 = 1.0 - dot(vec2(_3847, _3848), vec2(_3847, _3848));
                                float _4987 = isnan(0.0) ? _3852 : (isnan(_3852) ? 0.0 : max(_3852, 0.0));
                                float _3853 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
                                float _3854 = _3853 * (((isnan(0.0) ? _3840 : (isnan(_3840) ? 0.0 : max(_3840, 0.0))) * _3830) / ((_3843 * 0.699999988079071044921875) + 1.0));
                                float _3866 = exp2(log2(1.0 / ((_3843 * 3.5) + 5.0)) * 0.25);
                                float _3867 = 1.0 - _1106;
                                float _3874 = sqrt(1.0 - ((1.0 - (_3867 * _3867)) * (1.0 - (_3866 * _3866))));
                                float _3875 = _3874 * _3874;
                                float _3876 = _3875 * _3875;
                                float _3877 = _3823 - _3326;
                                float _3878 = _3824 - _3327;
                                float _3879 = _3825 - _3328;
                                float _3883 = inversesqrt(dot(vec3(_3877, _3878, _3879), vec3(_3877, _3878, _3879)));
                                float _3887 = dot(vec3(_1031, _1034, _1037), vec3((-0.0) - _3326, (-0.0) - _3327, (-0.0) - _3328));
                                float _4998 = isnan(0.0) ? _3887 : (isnan(_3887) ? 0.0 : max(_3887, 0.0));
                                float _3890 = isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0));
                                float _3891 = dot(vec3(_1031, _1034, _1037), vec3(_3883 * _3877, _3883 * _3878, _3883 * _3879));
                                float _5009 = isnan(0.0) ? _3891 : (isnan(_3891) ? 0.0 : max(_3891, 0.0));
                                float _3894 = isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0));
                                float _3898 = ((_3894 * _3894) * (_3876 + (-1.0))) + 1.0;
                                float _3899 = _3836 * _3875;
                                float _3900 = _3899 * _3899;
                                float _3906 = ((1.0 - _3900) * dot(vec3(_1031, _1034, _1037), vec3(_3823, _3824, _3825))) + _3900;
                                float _5020 = isnan(0.0) ? _3906 : (isnan(_3906) ? 0.0 : max(_3906, 0.0));
                                float _3907 = isnan(1.0) ? _5020 : (isnan(_5020) ? 1.0 : min(_5020, 1.0));
                                float _3908 = 1.0 - _3875;
                                float _3918 = (0.5 / (((_3907 * ((_3890 * _3908) + _3875)) + 9.9999999392252902907785028219223e-09) + (((_3907 * _3908) + _3875) * _3890))) * _3907;
                                float _5031 = isnan(0.0) ? _3918 : (isnan(_3918) ? 0.0 : max(_3918, 0.0));
                                float _3928 = (_3853 * _3830) * (((_3876 * 3.1415927410125732421875) * (isnan(1.0) ? _5031 : (isnan(_5031) ? 1.0 : min(_5031, 1.0)))) / ((_3898 * _3898) * ((_3843 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3854 * _3699.y;
                                frontier_phi_78_pred_1 = _3854 * _3699.x;
                                frontier_phi_78_pred_2 = _3928 * _3711.z;
                                frontier_phi_78_pred_3 = _3928 * _3711.y;
                                frontier_phi_78_pred_4 = _3928 * _3711.x;
                                frontier_phi_78_pred_5 = _3854 * _3699.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3936 = frontier_phi_78_pred;
                            _3935 = frontier_phi_78_pred_1;
                            _3934 = frontier_phi_78_pred_2;
                            _3933 = frontier_phi_78_pred_3;
                            _3932 = frontier_phi_78_pred_4;
                            _3937 = frontier_phi_78_pred_5;
                            _3641 = _3935 + _3654;
                            _3642 = _3936 + _3655;
                            _3643 = _3937 + _3656;
                            _3638 = _3932 + _3651;
                            _3639 = _3933 + _3652;
                            _3640 = _3934 + _3653;
                            if (_3658 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3651 = _3638;
                                _3652 = _3639;
                                _3653 = _3640;
                                _3654 = _3641;
                                _3655 = _3642;
                                _3656 = _3643;
                                _3657 = _3658;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3643;
                        frontier_phi_72_pred_1 = _3642;
                        frontier_phi_72_pred_2 = _3641;
                        frontier_phi_72_pred_3 = _3640;
                        frontier_phi_72_pred_4 = _3639;
                        frontier_phi_72_pred_5 = _3638;
                    }
                    _3311 = frontier_phi_72_pred;
                    _3309 = frontier_phi_72_pred_1;
                    _3307 = frontier_phi_72_pred_2;
                    _3305 = frontier_phi_72_pred_3;
                    _3303 = frontier_phi_72_pred_4;
                    _3301 = frontier_phi_72_pred_5;
                    uint _3446 = _3445 + 1u;
                    if (_3446 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3439 = _3301;
                        _3440 = _3303;
                        _3441 = _3305;
                        _3442 = _3307;
                        _3443 = _3309;
                        _3444 = _3311;
                        _3445 = _3446;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3311;
                frontier_phi_60_61_ladder_1 = _3309;
                frontier_phi_60_61_ladder_2 = _3305;
                frontier_phi_60_61_ladder_3 = _3303;
                frontier_phi_60_61_ladder_4 = _3301;
                frontier_phi_60_61_ladder_5 = _3307;
            }
            else
            {
                frontier_phi_60_61_ladder = _3197;
                frontier_phi_60_61_ladder_1 = _3195;
                frontier_phi_60_61_ladder_2 = _3191;
                frontier_phi_60_61_ladder_3 = _3189;
                frontier_phi_60_61_ladder_4 = _3187;
                frontier_phi_60_61_ladder_5 = _3193;
            }
            _3300 = frontier_phi_60_61_ladder_4;
            _3302 = frontier_phi_60_61_ladder_3;
            _3304 = frontier_phi_60_61_ladder_2;
            _3306 = frontier_phi_60_61_ladder_5;
            _3308 = frontier_phi_60_61_ladder_1;
            _3310 = frontier_phi_60_61_ladder;
        }
        float _3315 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
        _3120 = (_3315 * _3306) + _2632;
        _3122 = (_3315 * _3308) + _2634;
        _3124 = (_3315 * _3310) + _2636;
        _3126 = ((_3300 * _1075) * _3315) + _2970;
        _3128 = ((_3302 * _1077) * _3315) + _2972;
        _3130 = ((_3304 * _1078) * _3315) + _2974;
    }
    else
    {
        _3120 = _2632;
        _3122 = _2634;
        _3124 = _2636;
        _3126 = _2970;
        _3128 = _2972;
        _3130 = _2974;
    }
    float _5047 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _5058 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _5069 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    uint _3150 = _1050 + 6u;
    float _3158 = _1012 / cbSceneParam._m0[86u].x;
    float _3159 = _1013 / cbSceneParam._m0[86u].y;
    vec4 _3173 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3158, _3159, (log2((isnan(cbSceneParam._m0[77u].w) ? _947 : (isnan(_947) ? cbSceneParam._m0[77u].w : min(_947, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3175 = _3173.x;
    float _3176 = _3173.y;
    float _3177 = _3173.z;
    float _3178 = _3173.w;
    float _3250;
    float _3252;
    float _3254;
    float _3256;
    if (_947 > cbSceneParam._m0[78u].w)
    {
        float _3212 = isnan(_947) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _947 : min(cbSceneParam._m0[80u].w, _947));
        float _3213 = _3212 / _947;
        float _3224 = _3213 * _997;
        float _3225 = _998 * _3213;
        float _3226 = (-0.0) - _3225;
        float _3228 = _3213 * _999;
        float _3230 = (cbSceneParam._m0[77u].w * _3226) / _3212;
        float _3231 = _3230 + cbSceneParam._m0[79u].w;
        float _3232 = cbSceneParam._m0[79u].w - _3225;
        float _3238 = sqrt(((_3224 * _3224) + (_3225 * _3225)) + (_3228 * _3228));
        float _3241 = (1.0 - (cbSceneParam._m0[77u].w / _3212)) * _3238;
        float _3246 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3248 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3401;
        if (abs((_3226 - _3230) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3401 = ((((_3231 > 0.0) ? exp2(_3246 * _3231) : (2.0 - exp2(_3248 * _3231))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3241;
        }
        else
        {
            float _3361 = 1.0 / cbSceneParam._m0[80u].x;
            float _3362 = isnan(_3232) ? _3231 : (isnan(_3231) ? _3232 : max(_3231, _3232));
            float _3363 = isnan(_3232) ? _3231 : (isnan(_3231) ? _3232 : min(_3231, _3232));
            float _3372 = isnan(0.0) ? _3362 : (isnan(_3362) ? 0.0 : min(_3362, 0.0));
            float _3373 = isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : min(_3363, 0.0));
            _3401 = ((abs(_3238 / _3226) * cbSceneParam._m0[80u].y) * ((((_3372 - _3373) * 2.0) - ((exp2(_3246 * (isnan(0.0) ? _3362 : (isnan(_3362) ? 0.0 : max(_3362, 0.0)))) - exp2(_3246 * (isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : max(_3363, 0.0))))) * _3361)) - ((exp2(_3248 * _3372) - exp2(_3248 * _3373)) * _3361))) + (_3241 * cbSceneParam._m0[80u].z);
        }
        vec4 _3403 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3158, _3159, 1.0), 0.0);
        float _3412 = exp2((_3401 * (-1.44269502162933349609375)) * (1.0 - _3403.w));
        float _3413 = log2(_3412);
        float _3429 = log2(_3178);
        _3250 = (exp2(_3429 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3413 * cbSceneParam._m0[78u].x)) * _3403.x) / cbSceneParam._m0[78u].x)) + _3175;
        _3252 = (exp2(_3429 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3413 * cbSceneParam._m0[78u].y)) * _3403.y) / cbSceneParam._m0[78u].y)) + _3176;
        _3254 = (exp2(_3429 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3413 * cbSceneParam._m0[78u].z)) * _3403.z) / cbSceneParam._m0[78u].z)) + _3177;
        _3256 = _3412 * _3178;
    }
    else
    {
        _3250 = _3175;
        _3252 = _3176;
        _3254 = _3177;
        _3256 = _3178;
    }
    float _3268 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3269 = _3268 == 3.0;
    float _3270 = log2(_3256);
    float _3277 = exp2(_3270 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0))) * (_3120 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1090))) + ((_3126 + ((isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0))) * _1900)) * cbPerFrame._m0[3u].x));
    float _3278 = exp2(_3270 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0))) * (_3122 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1090))) + ((_3128 + ((isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0))) * _1900)) * cbPerFrame._m0[3u].x));
    float _3279 = exp2(_3270 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5069 : (isnan(_5069) ? 1.0 : min(_5069, 1.0))) * (_3124 + ((isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0))) * _1090))) + ((_3130 + ((isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0))) * _1900)) * cbPerFrame._m0[3u].x));
    float _3288 = (_3268 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3288 * (_3269 ? _3277 : (_3277 + (cbSceneParam._m0[72u].w * _3250)));
    SV_Target.y = _3288 * (_3269 ? _3278 : (_3278 + (cbSceneParam._m0[72u].w * _3252)));
    SV_Target.z = _3288 * (_3269 ? _3279 : (_3279 + (cbSceneParam._m0[72u].w * _3254)));
    SV_Target.w = cbInstanceData._m0[_3150].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3150].w;
}


