#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_21;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1412;
float _4076;
float _4077;
float _4078;
float _4079;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _272 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _298 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _348 = cbMtdParam._m0[20u].z * texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w)).x;
    float _358 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _348)) + 1.0;
    float _4088 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _359 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
    float _366 = (_359 * ((_298.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _367 = (_359 * ((_298.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _368 = (_359 * ((_298.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _386 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.x) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.y) + cbTextureTilingScale._m0[20u].w));
    float _417 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _348)) + 1.0;
    float _4099 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _418 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
    float _425 = (_418 * ((_386.x * cbMtdParam._m0[12u].x) - _366)) + _366;
    float _426 = (_418 * ((_386.y * cbMtdParam._m0[12u].y) - _367)) + _367;
    float _427 = (_418 * ((_386.z * cbMtdParam._m0[12u].z) - _368)) + _368;
    vec4 _445 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _470 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _348)) + 1.0;
    float _4110 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
    vec4 _499 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _507 = ((((_471 * ((_445.x * cbMtdParam._m0[13u].x) - _425)) + _425) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _499.x;
    float _510 = ((((_471 * ((_445.y * cbMtdParam._m0[13u].y) - _426)) + _426) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _499.y;
    float _513 = ((((_471 * ((_445.z * cbMtdParam._m0[13u].z) - _427)) + _427) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _499.z;
    vec4 _534 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _563 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[19u].z + 1.0);
    float _4121 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
    float _571 = (_564 * ((_534.x * cbMtdParam._m0[15u].x) - _507)) + _507;
    float _572 = (_564 * ((_534.y * cbMtdParam._m0[15u].y) - _510)) + _510;
    float _573 = (_564 * ((_534.z * cbMtdParam._m0[15u].z) - _513)) + _513;
    vec4 _586 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _588 = _586.x;
    float _606 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _588) * _359) + _588;
    float _623 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _606) * _418) + _606;
    float _640 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _623) * _471) + _623;
    vec4 _652 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _672 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _674 = _672.x;
    float _675 = _672.y;
    float _681 = cbMtdParam._m0[18u].y * _672.z;
    vec4 _693 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _702 = (((cbMtdParam._m0[18u].x * _693.z) - _681) * _359) + _681;
    vec4 _715 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _726 = (((cbMtdParam._m0[17u].w * _715.z) - _702) * _418) + _702;
    vec4 _739 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _748 = (((cbMtdParam._m0[17u].z * _739.z) - _726) * _471) + _726;
    vec4 _761 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_21, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _775 = ((cbMtdParam._m0[19u].x * TEXCOORD_8) * ((_761.z * cbMtdParam._m0[19u].y) - _748)) + _748;
    float _780 = ((_693.x - _674) * _359) + _674;
    float _781 = ((_693.y - _675) * _359) + _675;
    float _786 = ((_715.x - _780) * _418) + _780;
    float _787 = ((_715.y - _781) * _418) + _781;
    float _796 = ((((_739.x - _786) * _471) + _786) * 2.0) + (-1.0);
    float _797 = ((((_739.y - _787) * _471) + _787) * 2.0) + (-1.0);
    float _798 = dot(vec2(_796, _797), vec2(_796, _797));
    float _4132 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _803 = sqrt(1.0 - (isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))));
    float _816 = (((((_652.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[16u].y) + _796) + ((((_761.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[18u].w);
    float _817 = (((((_652.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[16u].y) + _797) + ((((_761.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[18u].w);
    float _820 = fma(_803, _242 * NORMAL.x, fma(_817, _249 * TANGENT.x, (_235 * _227) * _816));
    float _823 = fma(_803, _242 * NORMAL.y, fma(_817, _249 * TANGENT.y, (_235 * _228) * _816));
    float _826 = fma(_803, _242 * NORMAL.z, fma(_817, _249 * TANGENT.z, (_235 * _229) * _816));
    float _830 = inversesqrt(dot(vec3(_820, _823, _826), vec3(_820, _823, _826)));
    float _831 = _830 * _820;
    float _832 = _830 * _823;
    float _833 = _830 * _826;
    float _4143 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _834 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
    float _4154 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _4165 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _4176 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _4187 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _838 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
    float _854 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _894 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _904 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _894);
    float _905 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _894);
    float _906 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _894);
    float _910 = inversesqrt(dot(vec3(_904, _905, _906), vec3(_904, _905, _906)));
    float _911 = _904 * _910;
    float _912 = _905 * _910;
    float _913 = _906 * _910;
    vec4 _918 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _920 = _918.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1092 = sqrt(((_904 * _904) + (_905 * _905)) + (_906 * _906));
        float _1098 = (cbMatDynParam._m0[5u].x * _1092) + cbMatDynParam._m0[5u].y;
        float _4198 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1099 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1103 = (cbMatDynParam._m0[5u].z * _1092) + cbMatDynParam._m0[5u].w;
        float _4209 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) - _1099)) + _1099) < ((_920 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _931 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _932 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _950 = fma(_833, cbSceneParam._m0[5u].z, fma(_832, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _831));
    float _953 = fma(_833, cbSceneParam._m0[6u].z, fma(_832, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _831));
    float _956 = fma(_833, cbSceneParam._m0[7u].z, fma(_832, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _831));
    uint _969 = uint(roundEven(NORMAL.w)) * 13u;
    uint _970 = _969 + 9u;
    uint _971 = _970 + uint(cbMatDynParam._m0[0u].w);
    float _977 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0)))) * cbInstanceData._m0[_971].x;
    float _978 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0)))) * cbInstanceData._m0[_971].y;
    float _979 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0)))) * cbInstanceData._m0[_971].z;
    float _4220 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _980 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
    float _4231 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _981 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
    float _4242 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
    float _983 = 1.0 - _838;
    float _984 = _980 * _983;
    float _985 = _981 * _983;
    float _986 = _982 * _983;
    float _991 = (_980 + (-0.039999999105930328369140625)) * _838;
    float _992 = (_981 + (-0.039999999105930328369140625)) * _838;
    float _993 = (_982 + (-0.039999999105930328369140625)) * _838;
    float _994 = _991 + 0.039999999105930328369140625;
    float _996 = _992 + 0.039999999105930328369140625;
    float _997 = _993 + 0.039999999105930328369140625;
    vec4 _1006 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _931, cbSceneParam._m0[86u].y * _932));
    float _1009 = _1006.x * TEXCOORD_5.w;
    float _1010 = dot(vec3(_831, _832, _833), vec3(_911, _912, _913));
    float _1013 = _1010 * 2.0;
    float _1017 = (_1013 * _831) - _911;
    float _1018 = (_1013 * _832) - _912;
    float _1019 = (_1013 * _833) - _913;
    float _1023 = abs(dot(vec3(_911, _912, _913), vec3(_831, _832, _833)));
    float _4253 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1025 = sqrt(_834);
    float _1038 = exp2((_1025 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1025 * 3.0));
    float _1044 = (1.0 - _1038) * ((_1025 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1045 = _1038 * _1025;
    float _1073 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1077 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1081 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1411;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1136 = fma(_1081, cbModelParam._m0[26u].z, fma(_1077, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1073));
        float _1140 = fma(_1081, cbModelParam._m0[27u].z, fma(_1077, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1073));
        float _1144 = fma(_1081, cbModelParam._m0[28u].z, fma(_1077, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1073));
        float _1169 = _1073 + _831;
        float _1170 = _1077 + _832;
        float _1171 = _1081 + _833;
        float _1181 = fma(_1171, cbModelParam._m0[26u].z, fma(_1170, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1169)) - _1136;
        float _1182 = fma(_1171, cbModelParam._m0[27u].z, fma(_1170, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1169)) - _1140;
        float _1183 = fma(_1171, cbModelParam._m0[28u].z, fma(_1170, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1169)) - _1144;
        float _1187 = inversesqrt(dot(vec3(_1181, _1182, _1183), vec3(_1181, _1182, _1183)));
        float _1200 = ((_1187 * _1181) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1136 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1201 = ((_1187 * _1182) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1140 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1202 = ((_1187 * _1183) / cbModelParam._m0[34u].z) + ((((((_1144 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1205 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1200, _1201, _1202), 0.0);
        vec4 _1212 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1200, _1201, _1202), 0.0);
        vec4 _1219 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1200, _1201, _1202), 0.0);
        vec4 _1226 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1200, _1201, _1202), 0.0);
        float _1239 = exp2((_1205.w + (-0.5)) * 20.0) * 2.0;
        float _1240 = _1239 * (_1205.x + (-0.5));
        float _1241 = _1239 * (_1205.y + (-0.5));
        float _1242 = _1239 * (_1205.z + (-0.5));
        float _1249 = exp2((_1212.w + (-0.5)) * 20.0) * 2.0;
        float _1250 = _1249 * (_1212.x + (-0.5));
        float _1251 = _1249 * (_1212.y + (-0.5));
        float _1252 = _1249 * (_1212.z + (-0.5));
        float _1259 = exp2((_1219.w + (-0.5)) * 20.0) * 2.0;
        float _1260 = _1259 * (_1219.x + (-0.5));
        float _1261 = _1259 * (_1219.y + (-0.5));
        float _1262 = _1259 * (_1219.z + (-0.5));
        float _1269 = exp2((_1226.w + (-0.5)) * 20.0) * 2.0;
        float _1270 = _1269 * (_1226.x + (-0.5));
        float _1271 = _1269 * (_1226.y + (-0.5));
        float _1272 = _1269 * (_1226.z + (-0.5));
        float _1273 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1274 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        float _1275 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
        float _1276 = _1240 * 0.5;
        float _1277 = _1250 * 0.5;
        float _1278 = _1260 * 0.5;
        float _1279 = dot(vec3(_1276, _1277, _1278), vec3(_1276, _1277, _1278));
        float _1284 = (_1279 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1279);
        float _1293 = (dot(vec3(_831, _832, _833), vec3(_1284 * _1276, _1284 * _1277, _1284 * _1278)) + 1.0) * 0.5;
        float _4279 = isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0));
        float _1303 = sqrt(((_1277 * _1277) + (_1276 * _1276)) + (_1278 * _1278)) / (_1273 + 9.9999997473787516355514526367188e-06);
        float _4290 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1304 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
        float _1305 = _1304 * 2.0;
        float _1309 = (1.0 - _1304) / (_1304 + 1.0);
        float _4301 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1310 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1319 = ((((1.0 - _1310) * (_1305 + 2.0)) * exp2(log2(isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * (_1305 + 1.0))) + _1310) * _1273;
        float _1320 = _1241 * 0.5;
        float _1321 = _1251 * 0.5;
        float _1322 = _1261 * 0.5;
        float _1323 = dot(vec3(_1320, _1321, _1322), vec3(_1320, _1321, _1322));
        float _1328 = (_1323 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1323);
        float _1336 = (dot(vec3(_831, _832, _833), vec3(_1328 * _1320, _1328 * _1321, _1328 * _1322)) + 1.0) * 0.5;
        float _4312 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1345 = sqrt(((_1321 * _1321) + (_1320 * _1320)) + (_1322 * _1322)) / (_1274 + 9.9999997473787516355514526367188e-06);
        float _4323 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _1347 = _1346 * 2.0;
        float _1351 = (1.0 - _1346) / (_1346 + 1.0);
        float _4334 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1361 = ((((1.0 - _1352) * (_1347 + 2.0)) * exp2(log2(isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_1347 + 1.0))) + _1352) * _1274;
        float _1362 = _1242 * 0.5;
        float _1363 = _1252 * 0.5;
        float _1364 = _1262 * 0.5;
        float _1365 = dot(vec3(_1362, _1363, _1364), vec3(_1362, _1363, _1364));
        float _1370 = (_1365 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1365);
        float _1378 = (dot(vec3(_831, _832, _833), vec3(_1370 * _1362, _1370 * _1363, _1370 * _1364)) + 1.0) * 0.5;
        float _4345 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1387 = sqrt(((_1363 * _1363) + (_1362 * _1362)) + (_1364 * _1364)) / (_1275 + 9.9999997473787516355514526367188e-06);
        float _4356 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1388 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1389 = _1388 * 2.0;
        float _1393 = (1.0 - _1388) / (_1388 + 1.0);
        float _4367 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1394 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1403 = ((((1.0 - _1394) * (_1389 + 2.0)) * exp2(log2(isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_1389 + 1.0))) + _1394) * _1275;
        _1411 = _1242;
        _1413 = _1241;
        _1414 = _1240;
        _1415 = _1252;
        _1416 = _1251;
        _1417 = _1250;
        _1418 = _1262;
        _1419 = _1261;
        _1420 = _1260;
        _1421 = _1275;
        _1422 = _1274;
        _1423 = _1273;
        _1424 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0)));
        _1425 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0)));
        _1426 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0)));
    }
    else
    {
        _1411 = _1412;
        _1413 = _1412;
        _1414 = _1412;
        _1415 = _1412;
        _1416 = _1412;
        _1417 = _1412;
        _1418 = _1412;
        _1419 = _1412;
        _1420 = _1412;
        _1421 = _1412;
        _1422 = _1412;
        _1423 = _1412;
        _1424 = 0.0;
        _1425 = 0.0;
        _1426 = 0.0;
    }
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1455 = fma(_1081, cbModelParam._m0[30u].z, fma(_1077, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1073));
        float _1459 = fma(_1081, cbModelParam._m0[31u].z, fma(_1077, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1073));
        float _1463 = fma(_1081, cbModelParam._m0[32u].z, fma(_1077, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1073));
        float _1486 = _1073 + _831;
        float _1487 = _1077 + _832;
        float _1488 = _1081 + _833;
        float _1498 = fma(_1488, cbModelParam._m0[30u].z, fma(_1487, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1486)) - _1455;
        float _1499 = fma(_1488, cbModelParam._m0[31u].z, fma(_1487, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1486)) - _1459;
        float _1500 = fma(_1488, cbModelParam._m0[32u].z, fma(_1487, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1486)) - _1463;
        float _1504 = inversesqrt(dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500)));
        float _1517 = ((_1504 * _1498) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1455 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1518 = ((_1504 * _1499) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1459 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1519 = ((_1504 * _1500) / cbModelParam._m0[35u].z) + ((((((_1463 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1521 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1535 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        vec4 _1542 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1517, _1518, _1519), 0.0);
        float _1554 = exp2((_1521.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1521.x + (-0.5));
        float _1556 = _1554 * (_1521.y + (-0.5));
        float _1557 = _1554 * (_1521.z + (-0.5));
        float _1564 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1528.x + (-0.5));
        float _1566 = _1564 * (_1528.y + (-0.5));
        float _1567 = _1564 * (_1528.z + (-0.5));
        float _1574 = exp2((_1535.w + (-0.5)) * 20.0) * 2.0;
        float _1575 = _1574 * (_1535.x + (-0.5));
        float _1576 = _1574 * (_1535.y + (-0.5));
        float _1577 = _1574 * (_1535.z + (-0.5));
        float _1584 = exp2((_1542.w + (-0.5)) * 20.0) * 2.0;
        float _1585 = _1584 * (_1542.x + (-0.5));
        float _1586 = _1584 * (_1542.y + (-0.5));
        float _1587 = _1584 * (_1542.z + (-0.5));
        float _1588 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1589 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1590 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1591 = _1555 * 0.5;
        float _1592 = _1565 * 0.5;
        float _1593 = _1575 * 0.5;
        float _1594 = dot(vec3(_1591, _1592, _1593), vec3(_1591, _1592, _1593));
        float _1599 = (_1594 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1594);
        float _1607 = (dot(vec3(_831, _832, _833), vec3(_1599 * _1591, _1599 * _1592, _1599 * _1593)) + 1.0) * 0.5;
        float _4408 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1616 = sqrt(((_1592 * _1592) + (_1591 * _1591)) + (_1593 * _1593)) / (_1588 + 9.9999997473787516355514526367188e-06);
        float _4419 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1617 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
        float _1618 = _1617 * 2.0;
        float _1622 = (1.0 - _1617) / (_1617 + 1.0);
        float _4430 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0));
        float _1632 = ((((1.0 - _1623) * (_1618 + 2.0)) * exp2(log2(isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0))) * (_1618 + 1.0))) + _1623) * _1588;
        float _1633 = _1556 * 0.5;
        float _1634 = _1566 * 0.5;
        float _1635 = _1576 * 0.5;
        float _1636 = dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635));
        float _1641 = (_1636 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1636);
        float _1649 = (dot(vec3(_831, _832, _833), vec3(_1641 * _1633, _1641 * _1634, _1641 * _1635)) + 1.0) * 0.5;
        float _4441 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1658 = sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635)) / (_1589 + 9.9999997473787516355514526367188e-06);
        float _4452 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _1660 = _1659 * 2.0;
        float _1664 = (1.0 - _1659) / (_1659 + 1.0);
        float _4463 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
        float _1674 = ((((1.0 - _1665) * (_1660 + 2.0)) * exp2(log2(isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * (_1660 + 1.0))) + _1665) * _1589;
        float _1675 = _1557 * 0.5;
        float _1676 = _1567 * 0.5;
        float _1677 = _1577 * 0.5;
        float _1678 = dot(vec3(_1675, _1676, _1677), vec3(_1675, _1676, _1677));
        float _1683 = (_1678 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1678);
        float _1691 = (dot(vec3(_831, _832, _833), vec3(_1683 * _1675, _1683 * _1676, _1683 * _1677)) + 1.0) * 0.5;
        float _4474 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1700 = sqrt(((_1676 * _1676) + (_1675 * _1675)) + (_1677 * _1677)) / (_1590 + 9.9999997473787516355514526367188e-06);
        float _4485 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
        float _1702 = _1701 * 2.0;
        float _1706 = (1.0 - _1701) / (_1701 + 1.0);
        float _4496 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
        float _1716 = ((((1.0 - _1707) * (_1702 + 2.0)) * exp2(log2(isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (_1702 + 1.0))) + _1707) * _1590;
        _1724 = _1557;
        _1725 = _1556;
        _1726 = _1555;
        _1727 = _1567;
        _1728 = _1566;
        _1729 = _1565;
        _1730 = _1577;
        _1731 = _1576;
        _1732 = _1575;
        _1733 = _1590;
        _1734 = _1589;
        _1735 = _1588;
        _1736 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)));
        _1737 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)));
        _1738 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)));
    }
    else
    {
        _1724 = _1412;
        _1725 = _1412;
        _1726 = _1412;
        _1727 = _1412;
        _1728 = _1412;
        _1729 = _1412;
        _1730 = _1412;
        _1731 = _1412;
        _1732 = _1412;
        _1733 = _1412;
        _1734 = _1412;
        _1735 = _1412;
        _1736 = 0.0;
        _1737 = 0.0;
        _1738 = 0.0;
    }
    float _1748 = (cbModelParam._m0[1u].x * (_1736 - _1424)) + _1424;
    float _1749 = (cbModelParam._m0[1u].x * (_1737 - _1425)) + _1425;
    float _1750 = (cbModelParam._m0[1u].x * (_1738 - _1426)) + _1426;
    float _1771 = fma(_1750, cbSceneParam._m0[89u].z, fma(_1749, cbSceneParam._m0[89u].y, _1748 * cbSceneParam._m0[89u].x));
    float _1774 = fma(_1750, cbSceneParam._m0[90u].z, fma(_1749, cbSceneParam._m0[90u].y, _1748 * cbSceneParam._m0[90u].x));
    float _1777 = fma(_1750, cbSceneParam._m0[91u].z, fma(_1749, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1748));
    float _1792 = _1017 * 0.5;
    float _1793 = _1018 * 0.5;
    float _1794 = _1019 * 0.5;
    float _1795 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1798 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1725, _1728, _1731, _1734));
    float _1801 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1724, _1727, _1730, _1733));
    float _1835;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1808 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1411, _1415, _1418, _1421));
        float _1812 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1413, _1416, _1419, _1422));
        float _1816 = dot(vec4(_1792, _1793, _1794, 1.0), vec4(_1414, _1417, _1420, _1423));
        float _1823 = dot(vec4(cbModelParam._m0[39u]), vec4(_1792, _1793, _1794, 1.0));
        _1835 = dot(vec3(isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)), isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)), isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1823) ? 0.0 : (isnan(0.0) ? _1823 : max(0.0, _1823))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1835 = 1.0;
    }
    float _1846;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1837 = dot(vec4(cbModelParam._m0[40u]), vec4(_1792, _1793, _1794, 1.0));
        _1846 = dot(vec3(isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)), isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)), isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1837) ? 0.0 : (isnan(0.0) ? _1837 : max(0.0, _1837))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1846 = 1.0;
    }
    float _1850 = (_1846 * cbModelParam._m0[1u].x) + (_1835 * (1.0 - cbModelParam._m0[1u].x));
    float _1860 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _834);
    float _1861 = isnan(_1860) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1860 : min(cbModelParam._m0[25u].z, _1860));
    float _1941;
    float _1943;
    float _1945;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1908 = fma(_1081, cbModelParam._m0[13u].z, fma(_1077, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1073)) + cbModelParam._m0[13u].w;
        float _1912 = fma(_1081, cbModelParam._m0[14u].z, fma(_1077, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1073)) + cbModelParam._m0[14u].w;
        float _1916 = fma(_1081, cbModelParam._m0[15u].z, fma(_1077, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1073)) + cbModelParam._m0[15u].w;
        float _1919 = fma(_1019, cbModelParam._m0[13u].z, fma(_1018, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1017));
        float _1922 = fma(_1019, cbModelParam._m0[14u].z, fma(_1018, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1017));
        float _1925 = fma(_1019, cbModelParam._m0[15u].z, fma(_1018, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1017));
        float _1953;
        if (_1919 > 0.0)
        {
            _1953 = abs((1.0 - _1908) / _1919);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1919 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1908 + 1.0) / _1919);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1953 = frontier_phi_17_15_ladder;
        }
        float _2124;
        if (_1922 > 0.0)
        {
            _2124 = abs((1.0 - _1912) / _1922);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1922 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1912 + 1.0) / _1922);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2124 = frontier_phi_26_22_ladder;
        }
        float _2419;
        if (_1925 > 0.0)
        {
            _2419 = abs((1.0 - _1916) / _1925);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1925 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1916 + 1.0) / _1925);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2419 = frontier_phi_38_33_ladder;
        }
        float _2421 = isnan(_2124) ? _1953 : (isnan(_1953) ? _2124 : min(_1953, _2124));
        float _2422 = isnan(_2419) ? _2421 : (isnan(_2421) ? _2419 : min(_2421, _2419));
        float _2426 = (_2422 * _1919) + _1908;
        float _2427 = (_2422 * _1922) + _1912;
        float _2428 = (_2422 * _1925) + _1916;
        float _2429 = _2422 * 9.9999997473787516355514526367188e-05;
        float _2431 = (-1.0) - _2429;
        float _2433 = _2429 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2428 > _2433) || ((_2428 < _2431) || ((_2427 > _2433) || ((_2427 < _2431) || ((_2426 < _2431) || (_2426 > _2433))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2573 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2428, cbModelParam._m0[9u].z, fma(_2427, cbModelParam._m0[9u].y, _2426 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2428, cbModelParam._m0[10u].z, fma(_2427, cbModelParam._m0[10u].y, _2426 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2428, cbModelParam._m0[11u].z, fma(_2427, cbModelParam._m0[11u].y, _2426 * cbModelParam._m0[11u].x))), _1861);
            frontier_phi_16_38_ladder = _2573.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2573.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2573.x * cbModelParam._m0[1u].y;
        }
        _1941 = frontier_phi_16_38_ladder_2;
        _1943 = frontier_phi_16_38_ladder_1;
        _1945 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1929 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1017, _1018, _1019), _1861);
        _1941 = _1929.x * cbModelParam._m0[1u].y;
        _1943 = _1929.y * cbModelParam._m0[1u].y;
        _1945 = _1929.z * cbModelParam._m0[1u].y;
    }
    float _1949 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _834);
    float _1950 = isnan(_1949) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1949 : min(cbModelParam._m0[25u].w, _1949));
    float _2039;
    float _2041;
    float _2043;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2003 = fma(_1081, cbModelParam._m0[21u].z, fma(_1077, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1073)) + cbModelParam._m0[21u].w;
        float _2007 = fma(_1081, cbModelParam._m0[22u].z, fma(_1077, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1073)) + cbModelParam._m0[22u].w;
        float _2011 = fma(_1081, cbModelParam._m0[23u].z, fma(_1077, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1073)) + cbModelParam._m0[23u].w;
        float _2014 = fma(_1019, cbModelParam._m0[21u].z, fma(_1018, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1017));
        float _2017 = fma(_1019, cbModelParam._m0[22u].z, fma(_1018, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1017));
        float _2020 = fma(_1019, cbModelParam._m0[23u].z, fma(_1018, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1017));
        float _2129;
        if (_2014 > 0.0)
        {
            _2129 = abs((1.0 - _2003) / _2014);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2014 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2003 + 1.0) / _2014);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2129 = frontier_phi_28_24_ladder;
        }
        float _2446;
        if (_2017 > 0.0)
        {
            _2446 = abs((1.0 - _2007) / _2017);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2017 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2007 + 1.0) / _2017);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2446 = frontier_phi_40_35_ladder;
        }
        float _2784;
        if (_2020 > 0.0)
        {
            _2784 = abs((1.0 - _2011) / _2020);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2020 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2011 + 1.0) / _2020);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2784 = frontier_phi_50_47_ladder;
        }
        float _2786 = isnan(_2446) ? _2129 : (isnan(_2129) ? _2446 : min(_2129, _2446));
        float _2787 = isnan(_2784) ? _2786 : (isnan(_2786) ? _2784 : min(_2786, _2784));
        float _2791 = (_2787 * _2014) + _2003;
        float _2792 = (_2787 * _2017) + _2007;
        float _2793 = (_2787 * _2020) + _2011;
        float _2794 = _2787 * 9.9999997473787516355514526367188e-05;
        float _2795 = (-1.0) - _2794;
        float _2797 = _2794 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2793 > _2797) || ((_2793 < _2795) || ((_2792 > _2797) || ((_2792 < _2795) || ((_2791 < _2795) || (_2791 > _2797))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2915 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2793, cbModelParam._m0[17u].z, fma(_2792, cbModelParam._m0[17u].y, _2791 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2793, cbModelParam._m0[18u].z, fma(_2792, cbModelParam._m0[18u].y, _2791 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2793, cbModelParam._m0[19u].z, fma(_2792, cbModelParam._m0[19u].y, _2791 * cbModelParam._m0[19u].x))), _1950);
            frontier_phi_25_50_ladder = _2915.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2915.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2915.x * cbModelParam._m0[1u].z;
        }
        _2039 = frontier_phi_25_50_ladder_2;
        _2041 = frontier_phi_25_50_ladder_1;
        _2043 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2023 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1017, _1018, _1019), _1950);
        _2039 = _2023.x * cbModelParam._m0[1u].z;
        _2041 = _2023.y * cbModelParam._m0[1u].z;
        _2043 = _2023.z * cbModelParam._m0[1u].z;
    }
    float _2056 = (((_1044 * _994) + _1045) * _1009) * ((cbModelParam._m0[1u].w * (_2039 - _1941)) + _1941);
    float _2058 = (((_1044 * _996) + _1045) * _1009) * ((cbModelParam._m0[1u].w * (_2041 - _1943)) + _1943);
    float _2060 = (((_1044 * _997) + _1045) * _1009) * ((cbModelParam._m0[1u].w * (_2043 - _1945)) + _1945);
    float _2063 = fma(_2060, cbSceneParam._m0[89u].z, fma(_2058, cbSceneParam._m0[89u].y, _2056 * cbSceneParam._m0[89u].x));
    float _2066 = fma(_2060, cbSceneParam._m0[90u].z, fma(_2058, cbSceneParam._m0[90u].y, _2056 * cbSceneParam._m0[90u].x));
    float _2069 = fma(_2060, cbSceneParam._m0[91u].z, fma(_2058, cbSceneParam._m0[91u].y, _2056 * cbSceneParam._m0[91u].x));
    float _2103 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2107 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2111 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2115 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2116 = _2103 / _2115;
    float _2117 = _2107 / _2115;
    float _2118 = _2111 / _2115;
    float _2265;
    float _2266;
    float _2267;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2145 = ((uint(_2118 > cbSceneParam._m0[59u].y) + uint(_2118 > cbSceneParam._m0[59u].x)) + uint(_2118 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2146 = _2145 + 43u;
        uint _2154 = _2145 + 44u;
        uint _2162 = _2145 + 45u;
        uint _2170 = _2145 + 46u;
        float _2181 = fma(_2115, cbSceneParam._m0[_2146].w, fma(_2111, cbSceneParam._m0[_2146].z, fma(_2107, cbSceneParam._m0[_2146].y, _2103 * cbSceneParam._m0[_2146].x)));
        float _2185 = fma(_2115, cbSceneParam._m0[_2154].w, fma(_2111, cbSceneParam._m0[_2154].z, fma(_2107, cbSceneParam._m0[_2154].y, _2103 * cbSceneParam._m0[_2154].x)));
        float _2193 = fma(_2115, cbSceneParam._m0[_2170].w, fma(_2111, cbSceneParam._m0[_2170].z, fma(_2107, cbSceneParam._m0[_2170].y, _2103 * cbSceneParam._m0[_2170].x)));
        float _2198 = cbSceneParam._m0[33u].z * _2193;
        float _2200 = cbSceneParam._m0[33u].w * _2193;
        float _2203 = fma(_2115, cbSceneParam._m0[_2162].w, fma(_2111, cbSceneParam._m0[_2162].z, fma(_2107, cbSceneParam._m0[_2162].y, _2103 * cbSceneParam._m0[_2162].x))) / _2193;
        float _2251 = (cbSceneParam._m0[33u].x - sqrt(((_2117 * _2117) + (_2116 * _2116)) + (_2118 * _2118))) * cbSceneParam._m0[33u].y;
        float _4622 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2258 = (isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2198 + _2181) / _2193, (_2200 + _2185) / _2193), _2203), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2200 + _2181) / _2193, (_2185 - _2198) / _2193), _2203), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2181 - _2198) / _2193, (_2185 - _2200) / _2193), _2203), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2181 - _2200) / _2193, (_2198 + _2185) / _2193), _2203), 0.0)).x), vec4(0.25)));
        _2265 = 1.0 - (_2258 * cbSceneParam._m0[34u].x);
        _2266 = 1.0 - (_2258 * cbSceneParam._m0[34u].y);
        _2267 = 1.0 - (_2258 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2265 = 1.0;
        _2266 = 1.0;
        _2267 = 1.0;
    }
    float _2331;
    float _2333;
    float _2335;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2319 = fma(_2115, cbSceneParam._m0[63u].w, fma(_2111, cbSceneParam._m0[63u].z, fma(_2107, cbSceneParam._m0[63u].y, _2103 * cbSceneParam._m0[63u].x)));
        float _2320 = fma(_2115, cbSceneParam._m0[60u].w, fma(_2111, cbSceneParam._m0[60u].z, fma(_2107, cbSceneParam._m0[60u].y, _2103 * cbSceneParam._m0[60u].x))) / _2319;
        float _2321 = fma(_2115, cbSceneParam._m0[61u].w, fma(_2111, cbSceneParam._m0[61u].z, fma(_2107, cbSceneParam._m0[61u].y, _2103 * cbSceneParam._m0[61u].x))) / _2319;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2320 >= cbSceneParam._m0[64u].x) && (_2321 >= cbSceneParam._m0[64u].y)) && (_2320 <= cbSceneParam._m0[64u].z)) && (_2321 <= cbSceneParam._m0[64u].w))
        {
            float _2459 = fma(_2115, cbSceneParam._m0[62u].w, fma(_2111, cbSceneParam._m0[62u].z, fma(_2107, cbSceneParam._m0[62u].y, _2103 * cbSceneParam._m0[62u].x))) / _2319;
            float _2463 = isnan(cbSceneParam._m0[41u].w) ? _2459 : (isnan(_2459) ? cbSceneParam._m0[41u].w : max(_2459, cbSceneParam._m0[41u].w));
            float _2506 = (cbSceneParam._m0[33u].x - sqrt(((_2117 * _2117) + (_2116 * _2116)) + (_2118 * _2118))) * cbSceneParam._m0[33u].y;
            float _4638 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
            float _2513 = (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2320, cbSceneParam._m0[33u].w + _2321), _2463), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2320, _2321 - cbSceneParam._m0[33u].z), _2463), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2320 - cbSceneParam._m0[33u].z, _2321 - cbSceneParam._m0[33u].w), _2463), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2320 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2321), _2463), 0.0)).x), vec4(0.25)));
            float _2517 = 1.0 - (_2513 * cbSceneParam._m0[34u].x);
            float _2518 = 1.0 - (_2513 * cbSceneParam._m0[34u].y);
            float _2519 = 1.0 - (_2513 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2519) ? _2267 : (isnan(_2267) ? _2519 : min(_2267, _2519));
            frontier_phi_37_36_ladder_1 = isnan(_2518) ? _2266 : (isnan(_2266) ? _2518 : min(_2266, _2518));
            frontier_phi_37_36_ladder_2 = isnan(_2517) ? _2265 : (isnan(_2265) ? _2517 : min(_2265, _2517));
        }
        else
        {
            frontier_phi_37_36_ladder = _2267;
            frontier_phi_37_36_ladder_1 = _2266;
            frontier_phi_37_36_ladder_2 = _2265;
        }
        _2331 = frontier_phi_37_36_ladder_2;
        _2333 = frontier_phi_37_36_ladder_1;
        _2335 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2331 = _2265;
        _2333 = _2266;
        _2335 = _2267;
    }
    uvec4 _2340 = floatBitsToUint(cbInstanceData._m0[_969 + 5u]);
    uint _2342 = _2340.x * 14u;
    uint _2343 = _2342 + 13u;
    float _2350 = _1009 + (-1.0);
    float _2355 = (cbLight._m0[_2343].x * _2350) + 1.0;
    float _2356 = (cbLight._m0[_2343].y * _2350) + 1.0;
    float _2357 = (cbLight._m0[_2343].z * _2350) + 1.0;
    float _2358 = (cbLight._m0[_2343].w * _2350) + 1.0;
    uint _2359 = _2342 + 5u;
    float _2365 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
    uint _2369 = _2342 + 4u;
    float _2378 = isnan(1.0) ? _2355 : (isnan(_2355) ? 1.0 : min(_2355, 1.0));
    uint _2382 = _2342 | 1u;
    float _2393 = dot(vec3(cbLight._m0[_2342].xyz), vec3(_831, _832, _833));
    float _2396 = dot(vec3(cbLight._m0[_2382].xyz), vec3(_831, _832, _833));
    float _4674 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _4685 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _2401 = (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0))) * 0.3183098733425140380859375;
    float _2403 = (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0))) * 0.3183098733425140380859375;
    float _2410 = ((cbLight._m0[_2359].x * _2365) * _2403) + (((cbLight._m0[_2369].x * _2331) * _2378) * _2401);
    float _2411 = ((_2365 * cbLight._m0[_2359].y) * _2403) + (((cbLight._m0[_2369].y * _2333) * _2378) * _2401);
    float _2412 = ((_2365 * cbLight._m0[_2359].z) * _2403) + (((cbLight._m0[_2369].z * _2335) * _2378) * _2401);
    uvec4 _2416 = floatBitsToUint(cbLight._m0[_2342 + 12u]);
    bool _2418 = _2416.x == 0u;
    float _2520;
    float _2522;
    float _2524;
    if (_2418)
    {
        _2520 = _2410;
        _2522 = _2411;
        _2524 = _2412;
    }
    else
    {
        uint _2528 = _2342 + 6u;
        float _2544 = (dot(vec3(cbLight._m0[_2342 + 2u].xyz), vec3(_831, _832, _833)) * 0.5) + 0.5;
        float _2545 = _2544 * _2544;
        float _4696 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
        float _2546 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
        float _2547 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
        _2520 = (((cbLight._m0[_2528].x * 0.3183098733425140380859375) * _2546) * _2547) + _2410;
        _2522 = (((cbLight._m0[_2528].y * 0.3183098733425140380859375) * _2546) * _2547) + _2411;
        _2524 = (((cbLight._m0[_2528].z * 0.3183098733425140380859375) * _2546) * _2547) + _2412;
    }
    bool _2527 = _2416.y == 0u;
    float _2582;
    float _2584;
    float _2586;
    if (_2527)
    {
        _2582 = _2520;
        _2584 = _2522;
        _2586 = _2524;
    }
    else
    {
        uint _2755 = _2342 + 7u;
        float _2771 = (dot(vec3(cbLight._m0[_2342 + 3u].xyz), vec3(_831, _832, _833)) * 0.5) + 0.5;
        float _2772 = _2771 * _2771;
        float _4712 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2773 = isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0));
        float _2774 = isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0));
        _2582 = (((cbLight._m0[_2755].x * 0.3183098733425140380859375) * _2773) * _2774) + _2520;
        _2584 = (((cbLight._m0[_2755].y * 0.3183098733425140380859375) * _2773) * _2774) + _2522;
        _2586 = (((cbLight._m0[_2755].z * 0.3183098733425140380859375) * _2773) * _2774) + _2524;
    }
    uint _2589 = _2342 + 8u;
    float _2602 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2342].w)) * _834) * 0.949999988079071044921875);
    float _2603 = _2602 * _2602;
    float _2604 = cbLight._m0[_2342].x + _911;
    float _2605 = cbLight._m0[_2342].y + _912;
    float _2606 = cbLight._m0[_2342].z + _913;
    float _2610 = inversesqrt(dot(vec3(_2604, _2605, _2606), vec3(_2604, _2605, _2606)));
    float _2611 = _2610 * _2604;
    float _2612 = _2610 * _2605;
    float _2613 = _2610 * _2606;
    float _2614 = dot(vec3(_831, _832, _833), vec3(cbLight._m0[_2342].xyz));
    float _4728 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
    float _2617 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
    float _4739 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _2618 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
    float _2619 = dot(vec3(_831, _832, _833), vec3(_2611, _2612, _2613));
    float _4750 = isnan(0.0) ? _2619 : (isnan(_2619) ? 0.0 : max(_2619, 0.0));
    float _2622 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
    float _2623 = dot(vec3(cbLight._m0[_2342].xyz), vec3(_2611, _2612, _2613));
    float _4761 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2627 = _2603 * _2603;
    float _2631 = ((_2622 * _2622) * (_2627 + (-1.0))) + 1.0;
    float _2639 = exp2(log2(1.0 - (isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0)))) * 5.0);
    float _2640 = 0.959999978542327880859375 - _991;
    float _2642 = 0.959999978542327880859375 - _992;
    float _2643 = 0.959999978542327880859375 - _993;
    float _2650 = 1.0 - _2603;
    float _2661 = (0.5 / (((_2618 * ((_2617 * _2650) + _2603)) + 9.9999999392252902907785028219223e-09) + (((_2618 * _2650) + _2603) * _2617))) * _2617;
    float _4772 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
    float _2663 = (isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0))) * (_2627 / ((_2631 * _2631) * 3.141590118408203125));
    uint _2677 = _2342 + 9u;
    float _2688 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2382].w)) * _834) * 0.949999988079071044921875);
    float _2689 = _2688 * _2688;
    float _2690 = cbLight._m0[_2382].x + _911;
    float _2691 = cbLight._m0[_2382].y + _912;
    float _2692 = cbLight._m0[_2382].z + _913;
    float _2696 = inversesqrt(dot(vec3(_2690, _2691, _2692), vec3(_2690, _2691, _2692)));
    float _2697 = _2696 * _2690;
    float _2698 = _2696 * _2691;
    float _2699 = _2696 * _2692;
    float _2700 = dot(vec3(_831, _832, _833), vec3(cbLight._m0[_2382].xyz));
    float _4783 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
    float _2703 = isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0));
    float _2704 = dot(vec3(_831, _832, _833), vec3(_2697, _2698, _2699));
    float _4794 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
    float _2707 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
    float _2708 = dot(vec3(cbLight._m0[_2382].xyz), vec3(_2697, _2698, _2699));
    float _4805 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
    float _2712 = _2689 * _2689;
    float _2716 = ((_2707 * _2707) * (_2712 + (-1.0))) + 1.0;
    float _2723 = exp2(log2(1.0 - (isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0)))) * 5.0);
    float _2730 = 1.0 - _2689;
    float _2740 = (0.5 / (((_2618 * ((_2703 * _2730) + _2689)) + 9.9999999392252902907785028219223e-09) + (((_2618 * _2730) + _2689) * _2703))) * _2703;
    float _4816 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2742 = (isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0))) * (_2712 / ((_2716 * _2716) * 3.141590118408203125));
    float _2752 = (((((_2723 * _2640) + _994) * cbLight._m0[_2677].x) * _2742) * _2365) + ((((cbLight._m0[_2589].x * _2331) * ((_2639 * _2640) + _994)) * _2663) * _2378);
    float _2753 = (((((_2723 * _2642) + _996) * cbLight._m0[_2677].y) * _2742) * _2365) + ((((cbLight._m0[_2589].y * _2333) * ((_2639 * _2642) + _996)) * _2663) * _2378);
    float _2754 = (((((_2723 * _2643) + _997) * cbLight._m0[_2677].z) * _2742) * _2365) + ((((cbLight._m0[_2589].z * _2335) * ((_2639 * _2643) + _997)) * _2663) * _2378);
    float _2810;
    float _2812;
    float _2814;
    if (_2418)
    {
        _2810 = _2752;
        _2812 = _2753;
        _2814 = _2754;
    }
    else
    {
        uint _2816 = _2342 + 2u;
        uint _2820 = _2342 + 10u;
        float _2834 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2816].w)) * _834) * 0.949999988079071044921875);
        float _2835 = _2834 * _2834;
        float _2836 = cbLight._m0[_2816].x + _911;
        float _2837 = cbLight._m0[_2816].y + _912;
        float _2838 = cbLight._m0[_2816].z + _913;
        float _2842 = inversesqrt(dot(vec3(_2836, _2837, _2838), vec3(_2836, _2837, _2838)));
        float _2843 = _2842 * _2836;
        float _2844 = _2842 * _2837;
        float _2845 = _2842 * _2838;
        float _2846 = dot(vec3(_831, _832, _833), vec3(cbLight._m0[_2816].xyz));
        float _4827 = isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0));
        float _2849 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
        float _2850 = dot(vec3(_831, _832, _833), vec3(_2843, _2844, _2845));
        float _4838 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
        float _2853 = isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0));
        float _2854 = dot(vec3(cbLight._m0[_2816].xyz), vec3(_2843, _2844, _2845));
        float _4849 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2858 = _2835 * _2835;
        float _2862 = ((_2853 * _2853) * (_2858 + (-1.0))) + 1.0;
        float _2869 = exp2(log2(1.0 - (isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0)))) * 5.0);
        float _2876 = 1.0 - _2835;
        float _2886 = (0.5 / (((_2618 * ((_2849 * _2876) + _2835)) + 9.9999999392252902907785028219223e-09) + (((_2618 * _2876) + _2835) * _2849))) * _2849;
        float _4860 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        float _2888 = (isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0))) * (_2858 / ((_2862 * _2862) * 3.141590118408203125));
        float _2889 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
        _2810 = (((((_2869 * _2640) + _994) * cbLight._m0[_2820].x) * _2888) * _2889) + _2752;
        _2812 = (((((_2869 * _2642) + _996) * cbLight._m0[_2820].y) * _2888) * _2889) + _2753;
        _2814 = (((((_2869 * _2643) + _997) * cbLight._m0[_2820].z) * _2888) * _2889) + _2754;
    }
    float _2920;
    float _2922;
    float _2924;
    if (_2527)
    {
        _2920 = _2810;
        _2922 = _2812;
        _2924 = _2814;
    }
    else
    {
        uint _2931 = _2342 + 3u;
        uint _2935 = _2342 + 11u;
        float _2949 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2931].w)) * _834) * 0.949999988079071044921875);
        float _2950 = _2949 * _2949;
        float _2951 = cbLight._m0[_2931].x + _911;
        float _2952 = cbLight._m0[_2931].y + _912;
        float _2953 = cbLight._m0[_2931].z + _913;
        float _2957 = inversesqrt(dot(vec3(_2951, _2952, _2953), vec3(_2951, _2952, _2953)));
        float _2958 = _2957 * _2951;
        float _2959 = _2957 * _2952;
        float _2960 = _2957 * _2953;
        float _2961 = dot(vec3(_831, _832, _833), vec3(cbLight._m0[_2931].xyz));
        float _4876 = isnan(0.0) ? _2961 : (isnan(_2961) ? 0.0 : max(_2961, 0.0));
        float _2964 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
        float _2965 = dot(vec3(_831, _832, _833), vec3(_2958, _2959, _2960));
        float _4887 = isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : max(_2965, 0.0));
        float _2968 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
        float _2969 = dot(vec3(cbLight._m0[_2931].xyz), vec3(_2958, _2959, _2960));
        float _4898 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
        float _2973 = _2950 * _2950;
        float _2977 = ((_2968 * _2968) * (_2973 + (-1.0))) + 1.0;
        float _2984 = exp2(log2(1.0 - (isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0)))) * 5.0);
        float _2991 = 1.0 - _2950;
        float _3001 = (0.5 / (((_2618 * ((_2964 * _2991) + _2950)) + 9.9999999392252902907785028219223e-09) + (((_2618 * _2991) + _2950) * _2964))) * _2964;
        float _4909 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
        float _3003 = (isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0))) * (_2973 / ((_2977 * _2977) * 3.141590118408203125));
        float _3004 = isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0));
        _2920 = (((((_2984 * _2640) + _994) * cbLight._m0[_2935].x) * _3003) * _3004) + _2810;
        _2922 = (((((_2984 * _2642) + _996) * cbLight._m0[_2935].y) * _3003) * _3004) + _2812;
        _2924 = (((((_2984 * _2643) + _997) * cbLight._m0[_2935].z) * _3003) * _3004) + _2814;
    }
    float _3070;
    float _3072;
    float _3074;
    float _3076;
    float _3078;
    float _3080;
    if (_2340.y == 0u)
    {
        uvec4 _3025 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3026 = _3025.x;
        uint _3037 = uint((float(_3025.y) * floor(float(uint(cbSceneParam._m0[85u].y * _932) / _3026))) + floor(float(uint(cbSceneParam._m0[85u].x * _931) / _3026)));
        float _3047 = (log2(_2118 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3048 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
        uint _3051 = uint(isnan(14.0) ? _3048 : (isnan(_3048) ? 14.0 : min(_3048, 14.0)));
        uvec4 _3056 = texelFetch(g_lightClusterGridBuffer, int(((_3051 << 2u) + (_3037 << 6u)) >> 2u));
        uint _3057 = _3056.x;
        uint _3058 = _3025.z;
        float _3137;
        float _3139;
        float _3141;
        float _3143;
        float _3145;
        float _3147;
        if (((((1u << ((_3058 >> 4u) & 15u)) + 4294967295u) & _3057) == 0u) || ((_3058 & 240u) == 0u))
        {
            _3137 = 0.0;
            _3139 = 0.0;
            _3141 = 0.0;
            _3143 = 0.0;
            _3145 = 0.0;
            _3147 = 0.0;
        }
        else
        {
            float _3138;
            float _3140;
            float _3142;
            float _3144;
            float _3146;
            float _3148;
            float _3290 = 0.0;
            float _3291 = 0.0;
            float _3292 = 0.0;
            float _3293 = 0.0;
            float _3294 = 0.0;
            float _3295 = 0.0;
            uint _3296 = 0u;
            uint _3305;
            bool _3306;
            for (;;)
            {
                _3305 = texelFetch(g_lightClassification, int((((_3051 << 5u) + (_3037 << 9u)) + (_3296 << 2u)) >> 2u)).x;
                _3306 = _3305 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3306)
                {
                    frontier_phi_71_pred = _3295;
                    frontier_phi_71_pred_1 = _3294;
                    frontier_phi_71_pred_2 = _3293;
                    frontier_phi_71_pred_3 = _3292;
                    frontier_phi_71_pred_4 = _3291;
                    frontier_phi_71_pred_5 = _3290;
                }
                else
                {
                    float _3435;
                    float _3436;
                    float _3437;
                    float _3438;
                    float _3439;
                    float _3440;
                    uint _3441;
                    _3435 = _3290;
                    _3436 = _3291;
                    _3437 = _3292;
                    _3438 = _3293;
                    _3439 = _3294;
                    _3440 = _3295;
                    _3441 = _3305;
                    float _3362;
                    float _3363;
                    float _3364;
                    float _3365;
                    float _3366;
                    float _3367;
                    for (;;)
                    {
                        uint _3445 = uint(findLSB(_3441)) + (_3296 << 5u);
                        uint _3442 = (_3441 + 4294967295u) & _3441;
                        uint _3447 = _3445 * 48u;
                        vec4 _3461 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3447)).x, texelFetch(g_PointLightRenderingBuffer, int(_3447 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3447 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3447 + 3u)).x));
                        uint _3467 = (_3445 * 48u) + 4u;
                        vec4 _3480 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3467)).x, texelFetch(g_PointLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3467 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3467 + 3u)).x));
                        uint _3486 = (_3445 * 48u) + 8u;
                        vec3 _3497 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3486)).x, texelFetch(g_PointLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3486 + 2u)).x));
                        float _3501 = _3461.x - _2116;
                        float _3502 = _3461.y - _2117;
                        float _3503 = _3461.z - _2118;
                        float _3504 = dot(vec3(_3501, _3502, _3503), vec3(_3501, _3502, _3503));
                        float _3507 = inversesqrt(_3504);
                        float _3508 = _3507 * _3501;
                        float _3509 = _3507 * _3502;
                        float _3510 = _3507 * _3503;
                        float _3511 = dot(vec3(_950, _953, _956), vec3(_3508, _3509, _3510));
                        float _3516 = 1.0 - (_3504 * _3461.w);
                        float _4935 = isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : max(_3516, 0.0));
                        float _3517 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
                        float _3518 = sqrt(_3504) * _3480.w;
                        float _3521 = 1.39999997615814208984375 / (_3518 + 1.39999997615814208984375);
                        float _3522 = _3521 * _3521;
                        float _3525 = ((1.0 - _3522) * _3511) + _3522;
                        float _3528 = _3518 * _3518;
                        float _3532 = ((isnan(0.0) ? _3525 : (isnan(_3525) ? 0.0 : max(_3525, 0.0))) * _3517) / ((_3528 * 0.699999988079071044921875) + 1.0);
                        float _3536 = (-0.0) - _2116;
                        float _3537 = (-0.0) - _2117;
                        float _3538 = (-0.0) - _2118;
                        float _3542 = inversesqrt(dot(vec3(_3536, _3537, _3538), vec3(_3536, _3537, _3538)));
                        float _3543 = _3542 * _3536;
                        float _3544 = _3542 * _3537;
                        float _3545 = _3542 * _3538;
                        float _3552 = exp2(log2(1.0 / ((_3528 * 3.5) + 5.0)) * 0.25);
                        float _3553 = 1.0 - _1025;
                        float _3560 = sqrt(1.0 - ((1.0 - (_3553 * _3553)) * (1.0 - (_3552 * _3552))));
                        float _3561 = _3560 * _3560;
                        float _3562 = _3561 * _3561;
                        float _3563 = _3543 + _3508;
                        float _3564 = _3544 + _3509;
                        float _3565 = _3545 + _3510;
                        float _3569 = inversesqrt(dot(vec3(_3563, _3564, _3565), vec3(_3563, _3564, _3565)));
                        float _3573 = dot(vec3(_950, _953, _956), vec3(_3543, _3544, _3545));
                        float _4951 = isnan(0.0) ? _3573 : (isnan(_3573) ? 0.0 : max(_3573, 0.0));
                        float _3576 = isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0));
                        float _3577 = dot(vec3(_950, _953, _956), vec3(_3569 * _3563, _3569 * _3564, _3569 * _3565));
                        float _4962 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                        float _3580 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
                        float _3584 = ((_3580 * _3580) * (_3562 + (-1.0))) + 1.0;
                        float _3585 = _3521 * _3561;
                        float _3586 = _3585 * _3585;
                        float _3589 = ((1.0 - _3586) * _3511) + _3586;
                        float _4973 = isnan(0.0) ? _3589 : (isnan(_3589) ? 0.0 : max(_3589, 0.0));
                        float _3590 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
                        float _3591 = 1.0 - _3561;
                        float _3601 = (0.5 / (((_3590 * ((_3576 * _3591) + _3561)) + 9.9999999392252902907785028219223e-09) + (((_3590 * _3591) + _3561) * _3576))) * _3590;
                        float _4984 = isnan(0.0) ? _3601 : (isnan(_3601) ? 0.0 : max(_3601, 0.0));
                        float _3612 = (((_3562 * 3.1415927410125732421875) * (isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0)))) / ((_3584 * _3584) * ((_3528 * 2.1991131305694580078125) + 3.141590118408203125))) * _3517;
                        _3365 = (_3532 * _3480.x) + _3438;
                        _3366 = (_3532 * _3480.y) + _3439;
                        _3367 = (_3532 * _3480.z) + _3440;
                        _3362 = (_3612 * _3497.x) + _3435;
                        _3363 = (_3612 * _3497.y) + _3436;
                        _3364 = (_3612 * _3497.z) + _3437;
                        if (_3442 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3435 = _3362;
                            _3436 = _3363;
                            _3437 = _3364;
                            _3438 = _3365;
                            _3439 = _3366;
                            _3440 = _3367;
                            _3441 = _3442;
                        }
                    }
                    frontier_phi_71_pred = _3367;
                    frontier_phi_71_pred_1 = _3366;
                    frontier_phi_71_pred_2 = _3365;
                    frontier_phi_71_pred_3 = _3364;
                    frontier_phi_71_pred_4 = _3363;
                    frontier_phi_71_pred_5 = _3362;
                }
                _3148 = frontier_phi_71_pred;
                _3146 = frontier_phi_71_pred_1;
                _3144 = frontier_phi_71_pred_2;
                _3142 = frontier_phi_71_pred_3;
                _3140 = frontier_phi_71_pred_4;
                _3138 = frontier_phi_71_pred_5;
                uint _3297 = _3296 + 1u;
                if (_3297 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3290 = _3138;
                    _3291 = _3140;
                    _3292 = _3142;
                    _3293 = _3144;
                    _3294 = _3146;
                    _3295 = _3148;
                    _3296 = _3297;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3137 = _3138;
            _3139 = _3140;
            _3141 = _3142;
            _3143 = _3144;
            _3145 = _3146;
            _3147 = _3148;
        }
        uvec4 _3151 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3152 = _3151.z;
        uint _3154 = (_3152 >> 8u) & 15u;
        float _3258;
        float _3260;
        float _3262;
        float _3264;
        float _3266;
        float _3268;
        if (((4294967295u << _3154) & _3057) == 0u)
        {
            _3258 = _3137;
            _3260 = _3139;
            _3262 = _3141;
            _3264 = _3143;
            _3266 = _3145;
            _3268 = _3147;
        }
        else
        {
            float _3283 = inversesqrt(dot(vec3(_2116, _2117, _2118), vec3(_2116, _2117, _2118)));
            float _3284 = _3283 * _2116;
            float _3285 = _3283 * _2117;
            float _3286 = _3283 * _2118;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3154 < ((_3152 >> 12u) & 15u))
            {
                float _3259;
                float _3261;
                float _3263;
                float _3265;
                float _3267;
                float _3269;
                float _3418 = _3137;
                float _3419 = _3139;
                float _3420 = _3141;
                float _3421 = _3143;
                float _3422 = _3145;
                float _3423 = _3147;
                uint _3424 = _3154;
                uint _3433;
                bool _3434;
                for (;;)
                {
                    _3433 = texelFetch(g_lightClassification, int((((_3051 << 5u) + (_3037 << 9u)) + (_3424 << 2u)) >> 2u)).x;
                    _3434 = _3433 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3434)
                    {
                        frontier_phi_82_pred = _3423;
                        frontier_phi_82_pred_1 = _3422;
                        frontier_phi_82_pred_2 = _3421;
                        frontier_phi_82_pred_3 = _3420;
                        frontier_phi_82_pred_4 = _3419;
                        frontier_phi_82_pred_5 = _3418;
                    }
                    else
                    {
                        float _3626;
                        float _3627;
                        float _3628;
                        float _3629;
                        float _3630;
                        float _3631;
                        float _3920;
                        float _3921;
                        float _3922;
                        float _3923;
                        float _3924;
                        float _3925;
                        float _3639 = _3418;
                        float _3640 = _3419;
                        float _3641 = _3420;
                        float _3642 = _3421;
                        float _3643 = _3422;
                        float _3644 = _3423;
                        uint _3645 = _3433;
                        uint _3646;
                        vec4 _3671;
                        float _3672;
                        vec4 _3687;
                        vec3 _3699;
                        vec4 _3714;
                        vec4 _3729;
                        float _3776;
                        bool _3777;
                        for (;;)
                        {
                            uint _3656 = ((_3424 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3645));
                            _3646 = (_3645 + 4294967295u) & _3645;
                            uint _3658 = _3656 * 40u;
                            _3671 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3658)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 3u)).x));
                            _3672 = _3671.w;
                            uint _3674 = (_3656 * 40u) + 4u;
                            _3687 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 3u)).x));
                            uint _3689 = (_3656 * 40u) + 8u;
                            _3699 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 2u)).x));
                            uint _3701 = (_3656 * 40u) + 16u;
                            _3714 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3701)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 3u)).x));
                            uint _3716 = (_3656 * 40u) + 20u;
                            _3729 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 3u)).x));
                            uint _3732 = (_3656 * 40u) + 24u;
                            vec4 _3745 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3732)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 3u)).x));
                            uint _3751 = (_3656 * 40u) + 28u;
                            vec4 _3764 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3751)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 3u)).x));
                            _3776 = fma(_2118, _3764.z, fma(_2117, _3764.y, _3764.x * _2116)) + _3764.w;
                            _3777 = !((fma(_2118, _3745.z, fma(_2117, _3745.y, _3745.x * _2116)) + _3745.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3777)
                            {
                                float _3804 = _3671.x - _2116;
                                float _3805 = _3671.y - _2117;
                                float _3806 = _3671.z - _2118;
                                float _3807 = dot(vec3(_3804, _3805, _3806), vec3(_3804, _3805, _3806));
                                float _3810 = inversesqrt(_3807);
                                float _3811 = _3810 * _3804;
                                float _3812 = _3810 * _3805;
                                float _3813 = _3810 * _3806;
                                float _3817 = 1.0 - (_3807 / (_3672 * _3672));
                                float _4995 = isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0));
                                float _3818 = isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0));
                                float _3822 = sqrt(_3807) * _3687.w;
                                float _3824 = 1.39999997615814208984375 / (_3822 + 1.39999997615814208984375);
                                float _3825 = _3824 * _3824;
                                float _3828 = ((1.0 - _3825) * dot(vec3(_3811, _3812, _3813), vec3(_950, _953, _956))) + _3825;
                                float _3831 = _3822 * _3822;
                                float _3835 = (fma(_2118, _3714.z, fma(_2117, _3714.y, _3714.x * _2116)) + _3714.w) / _3776;
                                float _3836 = (fma(_2118, _3729.z, fma(_2117, _3729.y, _3729.x * _2116)) + _3729.w) / _3776;
                                float _3840 = 1.0 - dot(vec2(_3835, _3836), vec2(_3835, _3836));
                                float _5011 = isnan(0.0) ? _3840 : (isnan(_3840) ? 0.0 : max(_3840, 0.0));
                                float _3841 = isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0));
                                float _3842 = _3841 * (((isnan(0.0) ? _3828 : (isnan(_3828) ? 0.0 : max(_3828, 0.0))) * _3818) / ((_3831 * 0.699999988079071044921875) + 1.0));
                                float _3854 = exp2(log2(1.0 / ((_3831 * 3.5) + 5.0)) * 0.25);
                                float _3855 = 1.0 - _1025;
                                float _3862 = sqrt(1.0 - ((1.0 - (_3855 * _3855)) * (1.0 - (_3854 * _3854))));
                                float _3863 = _3862 * _3862;
                                float _3864 = _3863 * _3863;
                                float _3865 = _3811 - _3284;
                                float _3866 = _3812 - _3285;
                                float _3867 = _3813 - _3286;
                                float _3871 = inversesqrt(dot(vec3(_3865, _3866, _3867), vec3(_3865, _3866, _3867)));
                                float _3875 = dot(vec3(_950, _953, _956), vec3((-0.0) - _3284, (-0.0) - _3285, (-0.0) - _3286));
                                float _5022 = isnan(0.0) ? _3875 : (isnan(_3875) ? 0.0 : max(_3875, 0.0));
                                float _3878 = isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0));
                                float _3879 = dot(vec3(_950, _953, _956), vec3(_3871 * _3865, _3871 * _3866, _3871 * _3867));
                                float _5033 = isnan(0.0) ? _3879 : (isnan(_3879) ? 0.0 : max(_3879, 0.0));
                                float _3882 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
                                float _3886 = ((_3882 * _3882) * (_3864 + (-1.0))) + 1.0;
                                float _3887 = _3824 * _3863;
                                float _3888 = _3887 * _3887;
                                float _3894 = ((1.0 - _3888) * dot(vec3(_950, _953, _956), vec3(_3811, _3812, _3813))) + _3888;
                                float _5044 = isnan(0.0) ? _3894 : (isnan(_3894) ? 0.0 : max(_3894, 0.0));
                                float _3895 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
                                float _3896 = 1.0 - _3863;
                                float _3906 = (0.5 / (((_3895 * ((_3878 * _3896) + _3863)) + 9.9999999392252902907785028219223e-09) + (((_3895 * _3896) + _3863) * _3878))) * _3895;
                                float _5055 = isnan(0.0) ? _3906 : (isnan(_3906) ? 0.0 : max(_3906, 0.0));
                                float _3916 = (_3841 * _3818) * (((_3864 * 3.1415927410125732421875) * (isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0)))) / ((_3886 * _3886) * ((_3831 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3842 * _3687.z;
                                frontier_phi_88_pred_1 = _3842 * _3687.y;
                                frontier_phi_88_pred_2 = _3842 * _3687.x;
                                frontier_phi_88_pred_3 = _3916 * _3699.z;
                                frontier_phi_88_pred_4 = _3916 * _3699.y;
                                frontier_phi_88_pred_5 = _3916 * _3699.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3925 = frontier_phi_88_pred;
                            _3924 = frontier_phi_88_pred_1;
                            _3923 = frontier_phi_88_pred_2;
                            _3922 = frontier_phi_88_pred_3;
                            _3921 = frontier_phi_88_pred_4;
                            _3920 = frontier_phi_88_pred_5;
                            _3629 = _3923 + _3642;
                            _3630 = _3924 + _3643;
                            _3631 = _3925 + _3644;
                            _3626 = _3920 + _3639;
                            _3627 = _3921 + _3640;
                            _3628 = _3922 + _3641;
                            if (_3646 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3639 = _3626;
                                _3640 = _3627;
                                _3641 = _3628;
                                _3642 = _3629;
                                _3643 = _3630;
                                _3644 = _3631;
                                _3645 = _3646;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3631;
                        frontier_phi_82_pred_1 = _3630;
                        frontier_phi_82_pred_2 = _3629;
                        frontier_phi_82_pred_3 = _3628;
                        frontier_phi_82_pred_4 = _3627;
                        frontier_phi_82_pred_5 = _3626;
                    }
                    _3269 = frontier_phi_82_pred;
                    _3267 = frontier_phi_82_pred_1;
                    _3265 = frontier_phi_82_pred_2;
                    _3263 = frontier_phi_82_pred_3;
                    _3261 = frontier_phi_82_pred_4;
                    _3259 = frontier_phi_82_pred_5;
                    uint _3425 = _3424 + 1u;
                    if (_3425 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3418 = _3259;
                        _3419 = _3261;
                        _3420 = _3263;
                        _3421 = _3265;
                        _3422 = _3267;
                        _3423 = _3269;
                        _3424 = _3425;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3265;
                frontier_phi_63_64_ladder_1 = _3269;
                frontier_phi_63_64_ladder_2 = _3267;
                frontier_phi_63_64_ladder_3 = _3263;
                frontier_phi_63_64_ladder_4 = _3261;
                frontier_phi_63_64_ladder_5 = _3259;
            }
            else
            {
                frontier_phi_63_64_ladder = _3143;
                frontier_phi_63_64_ladder_1 = _3147;
                frontier_phi_63_64_ladder_2 = _3145;
                frontier_phi_63_64_ladder_3 = _3141;
                frontier_phi_63_64_ladder_4 = _3139;
                frontier_phi_63_64_ladder_5 = _3137;
            }
            _3258 = frontier_phi_63_64_ladder_5;
            _3260 = frontier_phi_63_64_ladder_4;
            _3262 = frontier_phi_63_64_ladder_3;
            _3264 = frontier_phi_63_64_ladder;
            _3266 = frontier_phi_63_64_ladder_2;
            _3268 = frontier_phi_63_64_ladder_1;
        }
        float _3273 = isnan(1.0) ? _1009 : (isnan(_1009) ? 1.0 : min(_1009, 1.0));
        _3070 = (_3273 * _3264) + _2582;
        _3072 = (_3273 * _3266) + _2584;
        _3074 = (_3273 * _3268) + _2586;
        _3076 = ((_3258 * _994) * _3273) + _2920;
        _3078 = ((_3260 * _996) * _3273) + _2922;
        _3080 = ((_3262 * _997) * _3273) + _2924;
    }
    else
    {
        _3070 = _2582;
        _3072 = _2584;
        _3074 = _2586;
        _3076 = _2920;
        _3078 = _2922;
        _3080 = _2924;
    }
    float _5071 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _5082 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _5093 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _3097 = ((isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0))) * (_3070 + ((isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0))) * _1009))) + ((_3076 + ((isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    float _3098 = ((isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0))) * (_3072 + ((isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))) * _1009))) + ((_3078 + ((isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    float _3099 = ((isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0))) * (_3074 + ((isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0))) * _1009))) + ((_3080 + ((isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0))) * _1850)) * cbPerFrame._m0[3u].x);
    uint _3100 = _969 + 6u;
    float _3108 = _931 / cbSceneParam._m0[86u].x;
    float _3109 = _932 / cbSceneParam._m0[86u].y;
    vec4 _3123 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3108, _3109, (log2((isnan(cbSceneParam._m0[77u].w) ? _854 : (isnan(_854) ? cbSceneParam._m0[77u].w : min(_854, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3125 = _3123.x;
    float _3126 = _3123.y;
    float _3127 = _3123.z;
    float _3128 = _3123.w;
    float _3200;
    float _3202;
    float _3204;
    float _3206;
    if (_854 > cbSceneParam._m0[78u].w)
    {
        float _3162 = isnan(_854) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _854 : min(cbSceneParam._m0[80u].w, _854));
        float _3163 = _3162 / _854;
        float _3174 = _3163 * _904;
        float _3175 = _905 * _3163;
        float _3176 = (-0.0) - _3175;
        float _3178 = _3163 * _906;
        float _3180 = (cbSceneParam._m0[77u].w * _3176) / _3162;
        float _3181 = _3180 + cbSceneParam._m0[79u].w;
        float _3182 = cbSceneParam._m0[79u].w - _3175;
        float _3188 = sqrt(((_3174 * _3174) + (_3175 * _3175)) + (_3178 * _3178));
        float _3191 = (1.0 - (cbSceneParam._m0[77u].w / _3162)) * _3188;
        float _3196 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3198 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3375;
        if (abs((_3176 - _3180) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3375 = ((((_3181 > 0.0) ? exp2(_3196 * _3181) : (2.0 - exp2(_3198 * _3181))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3191;
        }
        else
        {
            float _3319 = 1.0 / cbSceneParam._m0[80u].x;
            float _3320 = isnan(_3182) ? _3181 : (isnan(_3181) ? _3182 : max(_3181, _3182));
            float _3321 = isnan(_3182) ? _3181 : (isnan(_3181) ? _3182 : min(_3181, _3182));
            float _3330 = isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : min(_3320, 0.0));
            float _3331 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : min(_3321, 0.0));
            _3375 = ((abs(_3188 / _3176) * cbSceneParam._m0[80u].y) * ((((_3330 - _3331) * 2.0) - ((exp2(_3196 * (isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0)))) - exp2(_3196 * (isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0))))) * _3319)) - ((exp2(_3198 * _3330) - exp2(_3198 * _3331)) * _3319))) + (_3191 * cbSceneParam._m0[80u].z);
        }
        vec4 _3377 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3108, _3109, 1.0), 0.0);
        float _3386 = exp2((_3375 * (-1.44269502162933349609375)) * (1.0 - _3377.w));
        float _3387 = log2(_3386);
        float _3403 = log2(_3128);
        _3200 = (exp2(_3403 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].x)) * _3377.x) / cbSceneParam._m0[78u].x)) + _3125;
        _3202 = (exp2(_3403 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].y)) * _3377.y) / cbSceneParam._m0[78u].y)) + _3126;
        _3204 = (exp2(_3403 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3387 * cbSceneParam._m0[78u].z)) * _3377.z) / cbSceneParam._m0[78u].z)) + _3127;
        _3206 = _3386 * _3128;
    }
    else
    {
        _3200 = _3125;
        _3202 = _3126;
        _3204 = _3127;
        _3206 = _3128;
    }
    bool _3413;
    vec4 _3216;
    vec4 _3238;
    float _3240;
    float _3244;
    float _3245;
    float _3246;
    float _3247;
    bool _3257;
    for (;;)
    {
        _3216 = cbMatDynParam._m0[0u];
        float _3218 = roundEven(_3216.y);
        bool _3219 = _3218 == 3.0;
        float _3220 = log2(_3206);
        float _3227 = exp2(_3220 * cbSceneParam._m0[78u].x) * _3097;
        float _3228 = exp2(_3220 * cbSceneParam._m0[78u].y) * _3098;
        float _3229 = exp2(_3220 * cbSceneParam._m0[78u].z) * _3099;
        float _3236 = _920 + (-0.5);
        _3238 = cbMtdParam._m0[1u];
        _3240 = _3238.y * _3236;
        float _3243 = (_3218 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3244 = _3243 * (_3219 ? _3227 : (_3227 + (cbSceneParam._m0[72u].w * _3200)));
        _3245 = _3243 * (_3219 ? _3228 : (_3228 + (cbSceneParam._m0[72u].w * _3202)));
        _3246 = _3243 * (_3219 ? _3229 : (_3229 + (cbSceneParam._m0[72u].w * _3204)));
        _3247 = _3236 * 0.999000012874603271484375;
        _3257 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3257)
        {
            if ((cbInstanceData._m0[_969 + 7u].x + _3247) < 0.5)
            {
                _3413 = true;
                break;
            }
        }
        uint _3354 = _970 + uint(_3216.w);
        if ((cbInstanceData._m0[_3354].w < 1.0) && ((cbInstanceData._m0[_3354].w + _3247) < 0.5))
        {
            _3413 = true;
            break;
        }
        if ((_3240 + 1.0) < _3238.x)
        {
            _3413 = true;
            break;
        }
        _3413 = false;
        break;
    }
    float _3617;
    if (_3413)
    {
        discard_state = true;
        _3617 = 0.0;
    }
    else
    {
        _3617 = cbInstanceData._m0[_3100].w;
    }
    SV_Target.x = _3244;
    SV_Target.y = _3245;
    SV_Target.z = _3246;
    SV_Target.w = _3617;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3100].w;
    discard_exit();
}


