#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 5) in float TEXCOORD_8;
layout(location = 5, component = 1) in float TEXCOORD_9;
layout(location = 5, component = 2) in float TEXCOORD_10;
layout(location = 5, component = 3) in float TEXCOORD_16;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _157 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _158 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _159 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _165 = inversesqrt(dot(vec3(_157, _158, _159), vec3(_157, _158, _159)));
    float _172 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _179 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _202 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _208 = _202.x * cbMtdParam._m0[10u].x;
    float _209 = _202.y * cbMtdParam._m0[10u].y;
    float _210 = _202.z * cbMtdParam._m0[10u].z;
    vec4 _228 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _278 = cbMtdParam._m0[20u].z * texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w)).x;
    float _288 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _278)) + 1.0;
    float _788 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _289 = isnan(1.0) ? _788 : (isnan(_788) ? 1.0 : min(_788, 1.0));
    float _296 = (_289 * ((_228.x * cbMtdParam._m0[11u].x) - _208)) + _208;
    float _297 = (_289 * ((_228.y * cbMtdParam._m0[11u].y) - _209)) + _209;
    float _298 = (_289 * ((_228.z * cbMtdParam._m0[11u].z) - _210)) + _210;
    vec4 _316 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.x) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.y) + cbTextureTilingScale._m0[20u].w));
    float _347 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _278)) + 1.0;
    float _799 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _348 = isnan(1.0) ? _799 : (isnan(_799) ? 1.0 : min(_799, 1.0));
    float _355 = (_348 * ((_316.x * cbMtdParam._m0[12u].x) - _296)) + _296;
    float _356 = (_348 * ((_316.y * cbMtdParam._m0[12u].y) - _297)) + _297;
    float _357 = (_348 * ((_316.z * cbMtdParam._m0[12u].z) - _298)) + _298;
    vec4 _375 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _400 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _278)) + 1.0;
    float _810 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _810 : (isnan(_810) ? 1.0 : min(_810, 1.0));
    float _408 = (_401 * ((_375.x * cbMtdParam._m0[13u].x) - _355)) + _355;
    float _409 = (_401 * ((_375.y * cbMtdParam._m0[13u].y) - _356)) + _356;
    float _410 = (_401 * ((_375.z * cbMtdParam._m0[13u].z) - _357)) + _357;
    vec4 _423 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _425 = _423.x;
    float _443 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _425) * _289) + _425;
    float _461 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _443) * _348) + _443;
    float _478 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _461) * _401) + _461;
    vec4 _490 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _492 = _490.x;
    float _493 = _490.y;
    float _499 = cbMtdParam._m0[18u].y * _490.z;
    vec4 _511 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _520 = (((cbMtdParam._m0[18u].x * _511.z) - _499) * _289) + _499;
    vec4 _533 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _544 = (((cbMtdParam._m0[17u].w * _533.z) - _520) * _348) + _520;
    vec4 _557 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _566 = (((cbMtdParam._m0[17u].z * _557.z) - _544) * _401) + _544;
    float _571 = ((_511.x - _492) * _289) + _492;
    float _572 = ((_511.y - _493) * _289) + _493;
    float _577 = ((_533.x - _571) * _348) + _571;
    float _578 = ((_533.y - _572) * _348) + _572;
    float _587 = ((((_557.x - _577) * _401) + _577) * 2.0) + (-1.0);
    float _589 = ((((_557.y - _578) * _401) + _578) * 2.0) + (-1.0);
    float _590 = dot(vec2(_587, _589), vec2(_587, _589));
    float _821 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _595 = sqrt(1.0 - (isnan(1.0) ? _821 : (isnan(_821) ? 1.0 : min(_821, 1.0))));
    float _598 = fma(_595, _172 * NORMAL.x, fma(_589, _179 * TANGENT.x, (_165 * _157) * _587));
    float _601 = fma(_595, _172 * NORMAL.y, fma(_589, _179 * TANGENT.y, (_165 * _158) * _587));
    float _604 = fma(_595, _172 * NORMAL.z, fma(_589, _179 * TANGENT.z, (_165 * _159) * _587));
    float _608 = inversesqrt(dot(vec3(_598, _601, _604), vec3(_598, _601, _604)));
    float _832 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _843 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _610 = isnan(1.0) ? _843 : (isnan(_843) ? 1.0 : min(_843, 1.0));
    float _854 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _611 = isnan(1.0) ? _854 : (isnan(_854) ? 1.0 : min(_854, 1.0));
    float _865 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _612 = isnan(1.0) ? _865 : (isnan(_865) ? 1.0 : min(_865, 1.0));
    float _876 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    uint _615 = uint(roundEven(NORMAL.w));
    vec4 _620 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _622 = _620.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _682 = (cbMatDynParam._m0[5u].x * TEXCOORD_16) + cbMatDynParam._m0[5u].y;
        float _887 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
        float _683 = isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0));
        float _687 = (cbMatDynParam._m0[5u].z * TEXCOORD_16) + cbMatDynParam._m0[5u].w;
        float _898 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0))) - _683)) + _683) < ((_622 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _715;
    uint _641;
    vec4 _645;
    float _652;
    float _653;
    float _654;
    float _658;
    vec4 _662;
    float _664;
    float _665;
    bool _676;
    for (;;)
    {
        _641 = _615 * 13u;
        _645 = cbInstanceData._m0[(_641 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _649 = (cbMtdParam._m0[0u].x * _610) * _645.x;
        float _650 = (cbMtdParam._m0[0u].y * _611) * _645.y;
        float _651 = (cbMtdParam._m0[0u].z * _612) * _645.z;
        float _909 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
        _652 = isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0));
        float _920 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
        _653 = isnan(1.0) ? _920 : (isnan(_920) ? 1.0 : min(_920, 1.0));
        float _931 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        _654 = isnan(1.0) ? _931 : (isnan(_931) ? 1.0 : min(_931, 1.0));
        _658 = cbInstanceData._m0[_641 + 6u].w;
        float _659 = _622 + (-0.5);
        _662 = cbMtdParam._m0[1u];
        _664 = _662.y * _659;
        _665 = _659 * 0.999000012874603271484375;
        _676 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_676)
        {
            if ((cbInstanceData._m0[_641 + 7u].x + _665) < 0.5)
            {
                _715 = true;
                break;
            }
        }
        if ((_645.w < 1.0) && ((_645.w + _665) < 0.5))
        {
            _715 = true;
            break;
        }
        if ((_664 + 1.0) < _662.x)
        {
            _715 = true;
            break;
        }
        _715 = false;
        break;
    }
    if (_715)
    {
        discard_state = true;
    }
    bool _741 = cbMtdParam._m0[1u].z != 0.0;
    float _742 = _741 ? _658 : 0.0;
    SV_Target.x = ((_598 * 0.5) * _608) + 0.500488758087158203125;
    SV_Target.y = ((_601 * 0.5) * _608) + 0.500488758087158203125;
    SV_Target.z = ((_604 * 0.5) * _608) + 0.500488758087158203125;
    SV_Target.w = _742;
    SV_Target_1.x = isnan(1.0) ? _876 : (isnan(_876) ? 1.0 : min(_876, 1.0));
    SV_Target_1.y = isnan(1.0) ? _832 : (isnan(_832) ? 1.0 : min(_832, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _741 ? _658 : TEXCOORD_5.w;
    SV_Target_2.x = _652;
    SV_Target_2.y = _653;
    SV_Target_2.z = _654;
    SV_Target_2.w = _741 ? _658 : (float(floatBitsToUint(cbInstanceData._m0[_641 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _742;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _742;
    discard_exit();
}


