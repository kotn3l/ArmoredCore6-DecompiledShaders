#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_20;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 20) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail2_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1405;
float _3787;
float _3788;
float _3789;
float _3790;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _266 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _272 = _266.x * cbMtdParam._m0[10u].x;
    float _273 = _266.y * cbMtdParam._m0[10u].y;
    float _274 = _266.z * cbMtdParam._m0[10u].z;
    vec4 _292 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _342 = cbMtdParam._m0[20u].z * texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w)).x;
    float _352 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x) * 2.0) - _342)) + 1.0;
    float _3799 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _353 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
    float _360 = (_353 * ((_292.x * cbMtdParam._m0[11u].x) - _272)) + _272;
    float _361 = (_353 * ((_292.y * cbMtdParam._m0[11u].y) - _273)) + _273;
    float _362 = (_353 * ((_292.z * cbMtdParam._m0[11u].z) - _274)) + _274;
    vec4 _380 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.x) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.y) + cbTextureTilingScale._m0[20u].w));
    float _411 = ((cbMtdParam._m0[19u].w * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[21u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[22u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).y) * 2.0) - _342)) + 1.0;
    float _3810 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _412 = isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0));
    float _419 = (_412 * ((_380.x * cbMtdParam._m0[12u].x) - _360)) + _360;
    float _420 = (_412 * ((_380.y * cbMtdParam._m0[12u].y) - _361)) + _361;
    float _421 = (_412 * ((_380.z * cbMtdParam._m0[12u].z) - _362)) + _362;
    vec4 _439 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _464 = ((cbMtdParam._m0[20u].y * (-1.39999997615814208984375)) * (((1.0 - texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbMtdParam._m0[20u].w * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[21u].x * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) * 2.0) - _342)) + 1.0;
    float _3821 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _465 = isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0));
    vec4 _493 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _501 = ((((_465 * ((_439.x * cbMtdParam._m0[13u].x) - _419)) + _419) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _493.x;
    float _504 = ((((_465 * ((_439.y * cbMtdParam._m0[13u].y) - _420)) + _420) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _493.y;
    float _507 = ((((_465 * ((_439.z * cbMtdParam._m0[13u].z) - _421)) + _421) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _493.z;
    vec4 _527 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _556 = (TEXCOORD_5.x - ((cbMtdParam._m0[16u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD.z) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD.w) + cbTextureTilingScale._m0[21u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[16u].z + 1.0);
    float _3832 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _557 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
    float _564 = (_557 * ((_527.x * cbMtdParam._m0[14u].x) - _501)) + _501;
    float _565 = (_557 * ((_527.y * cbMtdParam._m0[14u].y) - _504)) + _504;
    float _566 = (_557 * ((_527.z * cbMtdParam._m0[14u].z) - _507)) + _507;
    vec4 _579 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _581 = _579.x;
    float _599 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _581) * _353) + _581;
    float _616 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _599) * _412) + _599;
    float _633 = ((texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _616) * _465) + _616;
    float _635 = _633 - (_633 * TEXCOORD_5.x);
    vec4 _651 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _673 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _675 = _673.x;
    float _676 = _673.y;
    float _679 = cbMtdParam._m0[18u].y * _673.z;
    vec4 _691 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _700 = (((cbMtdParam._m0[18u].x * _691.z) - _679) * _353) + _679;
    vec4 _713 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _724 = (((cbMtdParam._m0[17u].w * _713.z) - _700) * _412) + _700;
    vec4 _737 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _746 = (((cbMtdParam._m0[17u].z * _737.z) - _724) * _465) + _724;
    float _751 = ((cbMtdParam._m0[17u].x * TEXCOORD_5.x) * ((_651.z * cbMtdParam._m0[18u].z) - _746)) + _746;
    vec4 _764 = texture(sampler2D(C_3Mask_Detail2_M1_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.x) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.y) + cbTextureTilingScale._m0[19u].w));
    float _776 = ((_691.x - _675) * _353) + _675;
    float _777 = ((_691.y - _676) * _353) + _676;
    float _782 = ((_713.x - _776) * _412) + _776;
    float _783 = ((_713.y - _777) * _412) + _777;
    float _792 = ((((_737.x - _782) * _465) + _782) * 2.0) + (-1.0);
    float _793 = ((((_737.y - _783) * _465) + _783) * 2.0) + (-1.0);
    float _794 = dot(vec2(_792, _793), vec2(_792, _793));
    float _3843 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _799 = sqrt(1.0 - (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))));
    float _809 = ((((_764.x * 2.0) + (-1.0)) * cbMtdParam._m0[17u].y) + _792) + ((((_651.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[16u].y);
    float _810 = ((((_764.y * 2.0) + (-1.0)) * cbMtdParam._m0[17u].y) + _793) + ((((_651.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[16u].y);
    float _813 = fma(_799, _236 * NORMAL.x, fma(_810, _243 * TANGENT.x, (_229 * _221) * _809));
    float _816 = fma(_799, _236 * NORMAL.y, fma(_810, _243 * TANGENT.y, (_229 * _222) * _809));
    float _819 = fma(_799, _236 * NORMAL.z, fma(_810, _243 * TANGENT.z, (_229 * _223) * _809));
    float _823 = inversesqrt(dot(vec3(_813, _816, _819), vec3(_813, _816, _819)));
    float _824 = _823 * _813;
    float _825 = _823 * _816;
    float _826 = _823 * _819;
    float _3854 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _827 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _3865 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _3876 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _3887 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _3898 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _831 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
    float _847 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _887 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _897 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _887);
    float _898 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _887);
    float _899 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _887);
    float _903 = inversesqrt(dot(vec3(_897, _898, _899), vec3(_897, _898, _899)));
    float _904 = _897 * _903;
    float _905 = _898 * _903;
    float _906 = _899 * _903;
    vec4 _911 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _913 = _911.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1085 = sqrt(((_897 * _897) + (_898 * _898)) + (_899 * _899));
        float _1091 = (cbMatDynParam._m0[5u].x * _1085) + cbMatDynParam._m0[5u].y;
        float _3909 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1092 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
        float _1096 = (cbMatDynParam._m0[5u].z * _1085) + cbMatDynParam._m0[5u].w;
        float _3920 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))) - _1092)) + _1092) < ((_913 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _924 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _925 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _943 = fma(_826, cbSceneParam._m0[5u].z, fma(_825, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _824));
    float _946 = fma(_826, cbSceneParam._m0[6u].z, fma(_825, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _824));
    float _949 = fma(_826, cbSceneParam._m0[7u].z, fma(_825, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _824));
    uint _962 = uint(roundEven(NORMAL.w)) * 13u;
    uint _963 = _962 + 9u;
    uint _964 = _963 + uint(cbMatDynParam._m0[0u].w);
    float _970 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0)))) * cbInstanceData._m0[_964].x;
    float _971 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0)))) * cbInstanceData._m0[_964].y;
    float _972 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0)))) * cbInstanceData._m0[_964].z;
    float _3931 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _973 = isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0));
    float _3942 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _974 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _3953 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _975 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _976 = 1.0 - _831;
    float _977 = _973 * _976;
    float _978 = _974 * _976;
    float _979 = _975 * _976;
    float _984 = (_973 + (-0.039999999105930328369140625)) * _831;
    float _985 = (_974 + (-0.039999999105930328369140625)) * _831;
    float _986 = (_975 + (-0.039999999105930328369140625)) * _831;
    float _987 = _984 + 0.039999999105930328369140625;
    float _989 = _985 + 0.039999999105930328369140625;
    float _990 = _986 + 0.039999999105930328369140625;
    vec4 _999 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _924, cbSceneParam._m0[86u].y * _925));
    float _1002 = _999.x * TEXCOORD_5.w;
    float _1003 = dot(vec3(_824, _825, _826), vec3(_904, _905, _906));
    float _1006 = _1003 * 2.0;
    float _1010 = (_1006 * _824) - _904;
    float _1011 = (_1006 * _825) - _905;
    float _1012 = (_1006 * _826) - _906;
    float _1016 = abs(dot(vec3(_904, _905, _906), vec3(_824, _825, _826)));
    float _3964 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _1018 = sqrt(_827);
    float _1031 = exp2((_1018 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1018 * 3.0));
    float _1037 = (1.0 - _1031) * ((_1018 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1038 = _1031 * _1018;
    float _1066 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1070 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1074 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1404;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1129 = fma(_1074, cbModelParam._m0[26u].z, fma(_1070, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1066));
        float _1133 = fma(_1074, cbModelParam._m0[27u].z, fma(_1070, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1066));
        float _1137 = fma(_1074, cbModelParam._m0[28u].z, fma(_1070, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1066));
        float _1162 = _1066 + _824;
        float _1163 = _1070 + _825;
        float _1164 = _1074 + _826;
        float _1174 = fma(_1164, cbModelParam._m0[26u].z, fma(_1163, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1162)) - _1129;
        float _1175 = fma(_1164, cbModelParam._m0[27u].z, fma(_1163, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1162)) - _1133;
        float _1176 = fma(_1164, cbModelParam._m0[28u].z, fma(_1163, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1162)) - _1137;
        float _1180 = inversesqrt(dot(vec3(_1174, _1175, _1176), vec3(_1174, _1175, _1176)));
        float _1193 = ((_1180 * _1174) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1129 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1194 = ((_1180 * _1175) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1133 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1195 = ((_1180 * _1176) / cbModelParam._m0[34u].z) + ((((((_1137 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1198 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1193, _1194, _1195), 0.0);
        vec4 _1205 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1193, _1194, _1195), 0.0);
        vec4 _1212 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1193, _1194, _1195), 0.0);
        vec4 _1219 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1193, _1194, _1195), 0.0);
        float _1232 = exp2((_1198.w + (-0.5)) * 20.0) * 2.0;
        float _1233 = _1232 * (_1198.x + (-0.5));
        float _1234 = _1232 * (_1198.y + (-0.5));
        float _1235 = _1232 * (_1198.z + (-0.5));
        float _1242 = exp2((_1205.w + (-0.5)) * 20.0) * 2.0;
        float _1243 = _1242 * (_1205.x + (-0.5));
        float _1244 = _1242 * (_1205.y + (-0.5));
        float _1245 = _1242 * (_1205.z + (-0.5));
        float _1252 = exp2((_1212.w + (-0.5)) * 20.0) * 2.0;
        float _1253 = _1252 * (_1212.x + (-0.5));
        float _1254 = _1252 * (_1212.y + (-0.5));
        float _1255 = _1252 * (_1212.z + (-0.5));
        float _1262 = exp2((_1219.w + (-0.5)) * 20.0) * 2.0;
        float _1263 = _1262 * (_1219.x + (-0.5));
        float _1264 = _1262 * (_1219.y + (-0.5));
        float _1265 = _1262 * (_1219.z + (-0.5));
        float _1266 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1267 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1268 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1269 = _1233 * 0.5;
        float _1270 = _1243 * 0.5;
        float _1271 = _1253 * 0.5;
        float _1272 = dot(vec3(_1269, _1270, _1271), vec3(_1269, _1270, _1271));
        float _1277 = (_1272 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1272);
        float _1286 = (dot(vec3(_824, _825, _826), vec3(_1277 * _1269, _1277 * _1270, _1277 * _1271)) + 1.0) * 0.5;
        float _3990 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1296 = sqrt(((_1270 * _1270) + (_1269 * _1269)) + (_1271 * _1271)) / (_1266 + 9.9999997473787516355514526367188e-06);
        float _4001 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1297 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
        float _1298 = _1297 * 2.0;
        float _1302 = (1.0 - _1297) / (_1297 + 1.0);
        float _4012 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1303 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
        float _1312 = ((((1.0 - _1303) * (_1298 + 2.0)) * exp2(log2(isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0))) * (_1298 + 1.0))) + _1303) * _1266;
        float _1313 = _1234 * 0.5;
        float _1314 = _1244 * 0.5;
        float _1315 = _1254 * 0.5;
        float _1316 = dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315));
        float _1321 = (_1316 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1316);
        float _1329 = (dot(vec3(_824, _825, _826), vec3(_1321 * _1313, _1321 * _1314, _1321 * _1315)) + 1.0) * 0.5;
        float _4023 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1338 = sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315)) / (_1267 + 9.9999997473787516355514526367188e-06);
        float _4034 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1339 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
        float _1340 = _1339 * 2.0;
        float _1344 = (1.0 - _1339) / (_1339 + 1.0);
        float _4045 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1345 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
        float _1354 = ((((1.0 - _1345) * (_1340 + 2.0)) * exp2(log2(isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0))) * (_1340 + 1.0))) + _1345) * _1267;
        float _1355 = _1235 * 0.5;
        float _1356 = _1245 * 0.5;
        float _1357 = _1255 * 0.5;
        float _1358 = dot(vec3(_1355, _1356, _1357), vec3(_1355, _1356, _1357));
        float _1363 = (_1358 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1358);
        float _1371 = (dot(vec3(_824, _825, _826), vec3(_1363 * _1355, _1363 * _1356, _1363 * _1357)) + 1.0) * 0.5;
        float _4056 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1380 = sqrt(((_1356 * _1356) + (_1355 * _1355)) + (_1357 * _1357)) / (_1268 + 9.9999997473787516355514526367188e-06);
        float _4067 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1381 = isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0));
        float _1382 = _1381 * 2.0;
        float _1386 = (1.0 - _1381) / (_1381 + 1.0);
        float _4078 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1387 = isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0));
        float _1396 = ((((1.0 - _1387) * (_1382 + 2.0)) * exp2(log2(isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0))) * (_1382 + 1.0))) + _1387) * _1268;
        _1404 = _1235;
        _1406 = _1234;
        _1407 = _1233;
        _1408 = _1245;
        _1409 = _1244;
        _1410 = _1243;
        _1411 = _1255;
        _1412 = _1254;
        _1413 = _1253;
        _1414 = _1268;
        _1415 = _1267;
        _1416 = _1266;
        _1417 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0)));
        _1418 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0)));
        _1419 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0)));
    }
    else
    {
        _1404 = _1405;
        _1406 = _1405;
        _1407 = _1405;
        _1408 = _1405;
        _1409 = _1405;
        _1410 = _1405;
        _1411 = _1405;
        _1412 = _1405;
        _1413 = _1405;
        _1414 = _1405;
        _1415 = _1405;
        _1416 = _1405;
        _1417 = 0.0;
        _1418 = 0.0;
        _1419 = 0.0;
    }
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1448 = fma(_1074, cbModelParam._m0[30u].z, fma(_1070, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1066));
        float _1452 = fma(_1074, cbModelParam._m0[31u].z, fma(_1070, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1066));
        float _1456 = fma(_1074, cbModelParam._m0[32u].z, fma(_1070, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1066));
        float _1479 = _1066 + _824;
        float _1480 = _1070 + _825;
        float _1481 = _1074 + _826;
        float _1491 = fma(_1481, cbModelParam._m0[30u].z, fma(_1480, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1479)) - _1448;
        float _1492 = fma(_1481, cbModelParam._m0[31u].z, fma(_1480, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1479)) - _1452;
        float _1493 = fma(_1481, cbModelParam._m0[32u].z, fma(_1480, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1479)) - _1456;
        float _1497 = inversesqrt(dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493)));
        float _1510 = ((_1497 * _1491) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1448 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1511 = ((_1497 * _1492) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1452 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1512 = ((_1497 * _1493) / cbModelParam._m0[35u].z) + ((((((_1456 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1514 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1510, _1511, _1512), 0.0);
        vec4 _1521 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1510, _1511, _1512), 0.0);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1510, _1511, _1512), 0.0);
        vec4 _1535 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1510, _1511, _1512), 0.0);
        float _1547 = exp2((_1514.w + (-0.5)) * 20.0) * 2.0;
        float _1548 = _1547 * (_1514.x + (-0.5));
        float _1549 = _1547 * (_1514.y + (-0.5));
        float _1550 = _1547 * (_1514.z + (-0.5));
        float _1557 = exp2((_1521.w + (-0.5)) * 20.0) * 2.0;
        float _1558 = _1557 * (_1521.x + (-0.5));
        float _1559 = _1557 * (_1521.y + (-0.5));
        float _1560 = _1557 * (_1521.z + (-0.5));
        float _1567 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1568 = _1567 * (_1528.x + (-0.5));
        float _1569 = _1567 * (_1528.y + (-0.5));
        float _1570 = _1567 * (_1528.z + (-0.5));
        float _1577 = exp2((_1535.w + (-0.5)) * 20.0) * 2.0;
        float _1578 = _1577 * (_1535.x + (-0.5));
        float _1579 = _1577 * (_1535.y + (-0.5));
        float _1580 = _1577 * (_1535.z + (-0.5));
        float _1581 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1582 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
        float _1583 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1584 = _1548 * 0.5;
        float _1585 = _1558 * 0.5;
        float _1586 = _1568 * 0.5;
        float _1587 = dot(vec3(_1584, _1585, _1586), vec3(_1584, _1585, _1586));
        float _1592 = (_1587 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1587);
        float _1600 = (dot(vec3(_824, _825, _826), vec3(_1592 * _1584, _1592 * _1585, _1592 * _1586)) + 1.0) * 0.5;
        float _4119 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1609 = sqrt(((_1585 * _1585) + (_1584 * _1584)) + (_1586 * _1586)) / (_1581 + 9.9999997473787516355514526367188e-06);
        float _4130 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1610 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
        float _1611 = _1610 * 2.0;
        float _1615 = (1.0 - _1610) / (_1610 + 1.0);
        float _4141 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
        float _1616 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
        float _1625 = ((((1.0 - _1616) * (_1611 + 2.0)) * exp2(log2(isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0))) * (_1611 + 1.0))) + _1616) * _1581;
        float _1626 = _1549 * 0.5;
        float _1627 = _1559 * 0.5;
        float _1628 = _1569 * 0.5;
        float _1629 = dot(vec3(_1626, _1627, _1628), vec3(_1626, _1627, _1628));
        float _1634 = (_1629 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1629);
        float _1642 = (dot(vec3(_824, _825, _826), vec3(_1634 * _1626, _1634 * _1627, _1634 * _1628)) + 1.0) * 0.5;
        float _4152 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1651 = sqrt(((_1627 * _1627) + (_1626 * _1626)) + (_1628 * _1628)) / (_1582 + 9.9999997473787516355514526367188e-06);
        float _4163 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
        float _1652 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1653 = _1652 * 2.0;
        float _1657 = (1.0 - _1652) / (_1652 + 1.0);
        float _4174 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1658 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
        float _1667 = ((((1.0 - _1658) * (_1653 + 2.0)) * exp2(log2(isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0))) * (_1653 + 1.0))) + _1658) * _1582;
        float _1668 = _1550 * 0.5;
        float _1669 = _1560 * 0.5;
        float _1670 = _1570 * 0.5;
        float _1671 = dot(vec3(_1668, _1669, _1670), vec3(_1668, _1669, _1670));
        float _1676 = (_1671 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1671);
        float _1684 = (dot(vec3(_824, _825, _826), vec3(_1676 * _1668, _1676 * _1669, _1676 * _1670)) + 1.0) * 0.5;
        float _4185 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1693 = sqrt(((_1669 * _1669) + (_1668 * _1668)) + (_1670 * _1670)) / (_1583 + 9.9999997473787516355514526367188e-06);
        float _4196 = isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0));
        float _1694 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _1695 = _1694 * 2.0;
        float _1699 = (1.0 - _1694) / (_1694 + 1.0);
        float _4207 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1700 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
        float _1709 = ((((1.0 - _1700) * (_1695 + 2.0)) * exp2(log2(isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0))) * (_1695 + 1.0))) + _1700) * _1583;
        _1717 = _1550;
        _1718 = _1549;
        _1719 = _1548;
        _1720 = _1560;
        _1721 = _1559;
        _1722 = _1558;
        _1723 = _1570;
        _1724 = _1569;
        _1725 = _1568;
        _1726 = _1583;
        _1727 = _1582;
        _1728 = _1581;
        _1729 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)));
        _1730 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)));
        _1731 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)));
    }
    else
    {
        _1717 = _1405;
        _1718 = _1405;
        _1719 = _1405;
        _1720 = _1405;
        _1721 = _1405;
        _1722 = _1405;
        _1723 = _1405;
        _1724 = _1405;
        _1725 = _1405;
        _1726 = _1405;
        _1727 = _1405;
        _1728 = _1405;
        _1729 = 0.0;
        _1730 = 0.0;
        _1731 = 0.0;
    }
    float _1741 = (cbModelParam._m0[1u].x * (_1729 - _1417)) + _1417;
    float _1742 = (cbModelParam._m0[1u].x * (_1730 - _1418)) + _1418;
    float _1743 = (cbModelParam._m0[1u].x * (_1731 - _1419)) + _1419;
    float _1764 = fma(_1743, cbSceneParam._m0[89u].z, fma(_1742, cbSceneParam._m0[89u].y, _1741 * cbSceneParam._m0[89u].x));
    float _1767 = fma(_1743, cbSceneParam._m0[90u].z, fma(_1742, cbSceneParam._m0[90u].y, _1741 * cbSceneParam._m0[90u].x));
    float _1770 = fma(_1743, cbSceneParam._m0[91u].z, fma(_1742, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1741));
    float _1785 = _1010 * 0.5;
    float _1786 = _1011 * 0.5;
    float _1787 = _1012 * 0.5;
    float _1788 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1719, _1722, _1725, _1728));
    float _1791 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1718, _1721, _1724, _1727));
    float _1794 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1717, _1720, _1723, _1726));
    float _1828;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1801 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1404, _1408, _1411, _1414));
        float _1805 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1406, _1409, _1412, _1415));
        float _1809 = dot(vec4(_1785, _1786, _1787, 1.0), vec4(_1407, _1410, _1413, _1416));
        float _1816 = dot(vec4(cbModelParam._m0[39u]), vec4(_1785, _1786, _1787, 1.0));
        _1828 = dot(vec3(isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0)), isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0)), isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1816) ? 0.0 : (isnan(0.0) ? _1816 : max(0.0, _1816))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1828 = 1.0;
    }
    float _1839;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1830 = dot(vec4(cbModelParam._m0[40u]), vec4(_1785, _1786, _1787, 1.0));
        _1839 = dot(vec3(isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0)), isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0)), isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1830) ? 0.0 : (isnan(0.0) ? _1830 : max(0.0, _1830))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1839 = 1.0;
    }
    float _1843 = (_1839 * cbModelParam._m0[1u].x) + (_1828 * (1.0 - cbModelParam._m0[1u].x));
    float _1853 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _827);
    float _1854 = isnan(_1853) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1853 : min(cbModelParam._m0[25u].z, _1853));
    float _1935;
    float _1937;
    float _1939;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1902 = fma(_1074, cbModelParam._m0[13u].z, fma(_1070, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1066)) + cbModelParam._m0[13u].w;
        float _1906 = fma(_1074, cbModelParam._m0[14u].z, fma(_1070, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1066)) + cbModelParam._m0[14u].w;
        float _1910 = fma(_1074, cbModelParam._m0[15u].z, fma(_1070, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1066)) + cbModelParam._m0[15u].w;
        float _1913 = fma(_1012, cbModelParam._m0[13u].z, fma(_1011, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1010));
        float _1916 = fma(_1012, cbModelParam._m0[14u].z, fma(_1011, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1010));
        float _1919 = fma(_1012, cbModelParam._m0[15u].z, fma(_1011, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1010));
        float _1947;
        if (_1913 > 0.0)
        {
            _1947 = abs((1.0 - _1902) / _1913);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1913 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1902 + 1.0) / _1913);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1947 = frontier_phi_17_15_ladder;
        }
        float _2149;
        if (_1916 > 0.0)
        {
            _2149 = abs((1.0 - _1906) / _1916);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1916 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1906 + 1.0) / _1916);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2149 = frontier_phi_26_22_ladder;
        }
        float _2403;
        if (_1919 > 0.0)
        {
            _2403 = abs((1.0 - _1910) / _1919);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1919 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1910 + 1.0) / _1919);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2403 = frontier_phi_38_33_ladder;
        }
        float _2405 = isnan(_2149) ? _1947 : (isnan(_1947) ? _2149 : min(_1947, _2149));
        float _2406 = isnan(_2403) ? _2405 : (isnan(_2405) ? _2403 : min(_2405, _2403));
        float _2410 = (_2406 * _1913) + _1902;
        float _2411 = (_2406 * _1916) + _1906;
        float _2412 = (_2406 * _1919) + _1910;
        float _2413 = _2406 * 9.9999997473787516355514526367188e-05;
        float _2415 = (-1.0) - _2413;
        float _2417 = _2413 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2412 > _2417) || ((_2412 < _2415) || ((_2411 > _2417) || ((_2411 < _2415) || ((_2410 < _2415) || (_2410 > _2417))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2540 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2412, cbModelParam._m0[9u].z, fma(_2411, cbModelParam._m0[9u].y, _2410 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2412, cbModelParam._m0[10u].z, fma(_2411, cbModelParam._m0[10u].y, _2410 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2412, cbModelParam._m0[11u].z, fma(_2411, cbModelParam._m0[11u].y, _2410 * cbModelParam._m0[11u].x))), _1854);
            frontier_phi_16_38_ladder = _2540.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2540.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2540.x * cbModelParam._m0[1u].y;
        }
        _1935 = frontier_phi_16_38_ladder_2;
        _1937 = frontier_phi_16_38_ladder_1;
        _1939 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1923 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1010, _1011, _1012), _1854);
        _1935 = _1923.x * cbModelParam._m0[1u].y;
        _1937 = _1923.y * cbModelParam._m0[1u].y;
        _1939 = _1923.z * cbModelParam._m0[1u].y;
    }
    float _1943 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _827);
    float _1944 = isnan(_1943) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1943 : min(cbModelParam._m0[25u].w, _1943));
    float _2033;
    float _2035;
    float _2037;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1997 = fma(_1074, cbModelParam._m0[21u].z, fma(_1070, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1066)) + cbModelParam._m0[21u].w;
        float _2001 = fma(_1074, cbModelParam._m0[22u].z, fma(_1070, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1066)) + cbModelParam._m0[22u].w;
        float _2005 = fma(_1074, cbModelParam._m0[23u].z, fma(_1070, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1066)) + cbModelParam._m0[23u].w;
        float _2008 = fma(_1012, cbModelParam._m0[21u].z, fma(_1011, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1010));
        float _2011 = fma(_1012, cbModelParam._m0[22u].z, fma(_1011, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1010));
        float _2014 = fma(_1012, cbModelParam._m0[23u].z, fma(_1011, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1010));
        float _2154;
        if (_2008 > 0.0)
        {
            _2154 = abs((1.0 - _1997) / _2008);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2008 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1997 + 1.0) / _2008);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2154 = frontier_phi_28_24_ladder;
        }
        float _2430;
        if (_2011 > 0.0)
        {
            _2430 = abs((1.0 - _2001) / _2011);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2011 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2001 + 1.0) / _2011);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2430 = frontier_phi_40_35_ladder;
        }
        float _2643;
        if (_2014 > 0.0)
        {
            _2643 = abs((1.0 - _2005) / _2014);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2014 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2005 + 1.0) / _2014);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2643 = frontier_phi_49_46_ladder;
        }
        float _2645 = isnan(_2430) ? _2154 : (isnan(_2154) ? _2430 : min(_2154, _2430));
        float _2646 = isnan(_2643) ? _2645 : (isnan(_2645) ? _2643 : min(_2645, _2643));
        float _2650 = (_2646 * _2008) + _1997;
        float _2651 = (_2646 * _2011) + _2001;
        float _2652 = (_2646 * _2014) + _2005;
        float _2653 = _2646 * 9.9999997473787516355514526367188e-05;
        float _2654 = (-1.0) - _2653;
        float _2656 = _2653 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2652 > _2656) || ((_2652 < _2654) || ((_2651 > _2656) || ((_2651 < _2654) || ((_2650 < _2654) || (_2650 > _2656))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2851 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2652, cbModelParam._m0[17u].z, fma(_2651, cbModelParam._m0[17u].y, _2650 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2652, cbModelParam._m0[18u].z, fma(_2651, cbModelParam._m0[18u].y, _2650 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2652, cbModelParam._m0[19u].z, fma(_2651, cbModelParam._m0[19u].y, _2650 * cbModelParam._m0[19u].x))), _1944);
            frontier_phi_25_49_ladder = _2851.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2851.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2851.x * cbModelParam._m0[1u].z;
        }
        _2033 = frontier_phi_25_49_ladder_2;
        _2035 = frontier_phi_25_49_ladder_1;
        _2037 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2017 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1010, _1011, _1012), _1944);
        _2033 = _2017.x * cbModelParam._m0[1u].z;
        _2035 = _2017.y * cbModelParam._m0[1u].z;
        _2037 = _2017.z * cbModelParam._m0[1u].z;
    }
    float _2050 = (((_1037 * _987) + _1038) * _1002) * ((cbModelParam._m0[1u].w * (_2033 - _1935)) + _1935);
    float _2052 = (((_1037 * _989) + _1038) * _1002) * ((cbModelParam._m0[1u].w * (_2035 - _1937)) + _1937);
    float _2054 = (((_1037 * _990) + _1038) * _1002) * ((cbModelParam._m0[1u].w * (_2037 - _1939)) + _1939);
    float _2057 = fma(_2054, cbSceneParam._m0[89u].z, fma(_2052, cbSceneParam._m0[89u].y, _2050 * cbSceneParam._m0[89u].x));
    float _2060 = fma(_2054, cbSceneParam._m0[90u].z, fma(_2052, cbSceneParam._m0[90u].y, _2050 * cbSceneParam._m0[90u].x));
    float _2063 = fma(_2054, cbSceneParam._m0[91u].z, fma(_2052, cbSceneParam._m0[91u].y, _2050 * cbSceneParam._m0[91u].x));
    uvec4 _2073 = floatBitsToUint(cbInstanceData._m0[_962 + 5u]);
    uint _2075 = _2073.x * 14u;
    uint _2076 = _2075 + 13u;
    float _2083 = _1002 + (-1.0);
    float _2088 = (cbLight._m0[_2076].x * _2083) + 1.0;
    float _2089 = (cbLight._m0[_2076].y * _2083) + 1.0;
    float _2090 = (cbLight._m0[_2076].z * _2083) + 1.0;
    float _2091 = (cbLight._m0[_2076].w * _2083) + 1.0;
    uint _2092 = _2075 + 5u;
    float _2098 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
    uint _2102 = _2075 + 4u;
    float _2108 = isnan(1.0) ? _2088 : (isnan(_2088) ? 1.0 : min(_2088, 1.0));
    uint _2112 = _2075 | 1u;
    float _2123 = dot(vec3(cbLight._m0[_2075].xyz), vec3(_824, _825, _826));
    float _2126 = dot(vec3(cbLight._m0[_2112].xyz), vec3(_824, _825, _826));
    float _4343 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
    float _4354 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
    float _2131 = (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0))) * 0.3183098733425140380859375;
    float _2133 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * 0.3183098733425140380859375;
    float _2140 = ((cbLight._m0[_2092].x * _2098) * _2133) + ((cbLight._m0[_2102].x * _2108) * _2131);
    float _2141 = ((_2098 * cbLight._m0[_2092].y) * _2133) + ((_2108 * cbLight._m0[_2102].y) * _2131);
    float _2142 = ((_2098 * cbLight._m0[_2092].z) * _2133) + ((_2108 * cbLight._m0[_2102].z) * _2131);
    uvec4 _2146 = floatBitsToUint(cbLight._m0[_2075 + 12u]);
    bool _2148 = _2146.x == 0u;
    float _2159;
    float _2161;
    float _2163;
    if (_2148)
    {
        _2159 = _2140;
        _2161 = _2141;
        _2163 = _2142;
    }
    else
    {
        uint _2167 = _2075 + 6u;
        float _2183 = (dot(vec3(cbLight._m0[_2075 + 2u].xyz), vec3(_824, _825, _826)) * 0.5) + 0.5;
        float _2184 = _2183 * _2183;
        float _4365 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
        float _2185 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _2186 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2159 = (((cbLight._m0[_2167].x * 0.3183098733425140380859375) * _2185) * _2186) + _2140;
        _2161 = (((cbLight._m0[_2167].y * 0.3183098733425140380859375) * _2185) * _2186) + _2141;
        _2163 = (((cbLight._m0[_2167].z * 0.3183098733425140380859375) * _2185) * _2186) + _2142;
    }
    bool _2166 = _2146.y == 0u;
    float _2204;
    float _2206;
    float _2208;
    if (_2166)
    {
        _2204 = _2159;
        _2206 = _2161;
        _2208 = _2163;
    }
    else
    {
        uint _2374 = _2075 + 7u;
        float _2390 = (dot(vec3(cbLight._m0[_2075 + 3u].xyz), vec3(_824, _825, _826)) * 0.5) + 0.5;
        float _2391 = _2390 * _2390;
        float _4381 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
        float _2392 = isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0));
        float _2393 = isnan(1.0) ? _2091 : (isnan(_2091) ? 1.0 : min(_2091, 1.0));
        _2204 = (((cbLight._m0[_2374].x * 0.3183098733425140380859375) * _2392) * _2393) + _2159;
        _2206 = (((cbLight._m0[_2374].y * 0.3183098733425140380859375) * _2392) * _2393) + _2161;
        _2208 = (((cbLight._m0[_2374].z * 0.3183098733425140380859375) * _2392) * _2393) + _2163;
    }
    uint _2211 = _2075 + 8u;
    float _2224 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2075].w)) * _827) * 0.949999988079071044921875);
    float _2225 = _2224 * _2224;
    float _2226 = cbLight._m0[_2075].x + _904;
    float _2227 = cbLight._m0[_2075].y + _905;
    float _2228 = cbLight._m0[_2075].z + _906;
    float _2232 = inversesqrt(dot(vec3(_2226, _2227, _2228), vec3(_2226, _2227, _2228)));
    float _2233 = _2232 * _2226;
    float _2234 = _2232 * _2227;
    float _2235 = _2232 * _2228;
    float _2236 = dot(vec3(_824, _825, _826), vec3(cbLight._m0[_2075].xyz));
    float _4397 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
    float _2239 = isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0));
    float _4408 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _2240 = isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0));
    float _2241 = dot(vec3(_824, _825, _826), vec3(_2233, _2234, _2235));
    float _4419 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
    float _2244 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
    float _2245 = dot(vec3(cbLight._m0[_2075].xyz), vec3(_2233, _2234, _2235));
    float _4430 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2249 = _2225 * _2225;
    float _2253 = ((_2244 * _2244) * (_2249 + (-1.0))) + 1.0;
    float _2261 = exp2(log2(1.0 - (isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0)))) * 5.0);
    float _2262 = 0.959999978542327880859375 - _984;
    float _2264 = 0.959999978542327880859375 - _985;
    float _2265 = 0.959999978542327880859375 - _986;
    float _2272 = 1.0 - _2225;
    float _2283 = (0.5 / (((_2240 * ((_2239 * _2272) + _2225)) + 9.9999999392252902907785028219223e-09) + (((_2240 * _2272) + _2225) * _2239))) * _2239;
    float _4441 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2285 = (isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * (_2249 / ((_2253 * _2253) * 3.141590118408203125));
    uint _2296 = _2075 + 9u;
    float _2307 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2112].w)) * _827) * 0.949999988079071044921875);
    float _2308 = _2307 * _2307;
    float _2309 = cbLight._m0[_2112].x + _904;
    float _2310 = cbLight._m0[_2112].y + _905;
    float _2311 = cbLight._m0[_2112].z + _906;
    float _2315 = inversesqrt(dot(vec3(_2309, _2310, _2311), vec3(_2309, _2310, _2311)));
    float _2316 = _2315 * _2309;
    float _2317 = _2315 * _2310;
    float _2318 = _2315 * _2311;
    float _2319 = dot(vec3(_824, _825, _826), vec3(cbLight._m0[_2112].xyz));
    float _4452 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2322 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
    float _2323 = dot(vec3(_824, _825, _826), vec3(_2316, _2317, _2318));
    float _4463 = isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0));
    float _2326 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
    float _2327 = dot(vec3(cbLight._m0[_2112].xyz), vec3(_2316, _2317, _2318));
    float _4474 = isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0));
    float _2331 = _2308 * _2308;
    float _2335 = ((_2326 * _2326) * (_2331 + (-1.0))) + 1.0;
    float _2342 = exp2(log2(1.0 - (isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0)))) * 5.0);
    float _2349 = 1.0 - _2308;
    float _2359 = (0.5 / (((_2240 * ((_2322 * _2349) + _2308)) + 9.9999999392252902907785028219223e-09) + (((_2240 * _2349) + _2308) * _2322))) * _2322;
    float _4485 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
    float _2361 = (isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0))) * (_2331 / ((_2335 * _2335) * 3.141590118408203125));
    float _2371 = (((((_2342 * _2262) + _987) * cbLight._m0[_2296].x) * _2361) * _2098) + (((((_2261 * _2262) + _987) * cbLight._m0[_2211].x) * _2285) * _2108);
    float _2372 = (((((_2342 * _2264) + _989) * cbLight._m0[_2296].y) * _2361) * _2098) + (((((_2261 * _2264) + _989) * cbLight._m0[_2211].y) * _2285) * _2108);
    float _2373 = (((((_2342 * _2265) + _990) * cbLight._m0[_2296].z) * _2361) * _2098) + (((((_2261 * _2265) + _990) * cbLight._m0[_2211].z) * _2285) * _2108);
    float _2435;
    float _2437;
    float _2439;
    if (_2148)
    {
        _2435 = _2371;
        _2437 = _2372;
        _2439 = _2373;
    }
    else
    {
        uint _2441 = _2075 + 2u;
        uint _2445 = _2075 + 10u;
        float _2459 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2441].w)) * _827) * 0.949999988079071044921875);
        float _2460 = _2459 * _2459;
        float _2461 = cbLight._m0[_2441].x + _904;
        float _2462 = cbLight._m0[_2441].y + _905;
        float _2463 = cbLight._m0[_2441].z + _906;
        float _2467 = inversesqrt(dot(vec3(_2461, _2462, _2463), vec3(_2461, _2462, _2463)));
        float _2468 = _2467 * _2461;
        float _2469 = _2467 * _2462;
        float _2470 = _2467 * _2463;
        float _2471 = dot(vec3(_824, _825, _826), vec3(cbLight._m0[_2441].xyz));
        float _4496 = isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : max(_2471, 0.0));
        float _2474 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
        float _2475 = dot(vec3(_824, _825, _826), vec3(_2468, _2469, _2470));
        float _4507 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
        float _2478 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
        float _2479 = dot(vec3(cbLight._m0[_2441].xyz), vec3(_2468, _2469, _2470));
        float _4518 = isnan(0.0) ? _2479 : (isnan(_2479) ? 0.0 : max(_2479, 0.0));
        float _2483 = _2460 * _2460;
        float _2487 = ((_2478 * _2478) * (_2483 + (-1.0))) + 1.0;
        float _2494 = exp2(log2(1.0 - (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0)))) * 5.0);
        float _2501 = 1.0 - _2460;
        float _2511 = (0.5 / (((_2240 * ((_2474 * _2501) + _2460)) + 9.9999999392252902907785028219223e-09) + (((_2240 * _2501) + _2460) * _2474))) * _2474;
        float _4529 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
        float _2513 = (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * (_2483 / ((_2487 * _2487) * 3.141590118408203125));
        float _2514 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2435 = (((((_2494 * _2262) + _987) * cbLight._m0[_2445].x) * _2513) * _2514) + _2371;
        _2437 = (((((_2494 * _2264) + _989) * cbLight._m0[_2445].y) * _2513) * _2514) + _2372;
        _2439 = (((((_2494 * _2265) + _990) * cbLight._m0[_2445].z) * _2513) * _2514) + _2373;
    }
    float _2549;
    float _2551;
    float _2553;
    if (_2166)
    {
        _2549 = _2435;
        _2551 = _2437;
        _2553 = _2439;
    }
    else
    {
        uint _2560 = _2075 + 3u;
        uint _2564 = _2075 + 11u;
        float _2578 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2560].w)) * _827) * 0.949999988079071044921875);
        float _2579 = _2578 * _2578;
        float _2580 = cbLight._m0[_2560].x + _904;
        float _2581 = cbLight._m0[_2560].y + _905;
        float _2582 = cbLight._m0[_2560].z + _906;
        float _2586 = inversesqrt(dot(vec3(_2580, _2581, _2582), vec3(_2580, _2581, _2582)));
        float _2587 = _2586 * _2580;
        float _2588 = _2586 * _2581;
        float _2589 = _2586 * _2582;
        float _2590 = dot(vec3(_824, _825, _826), vec3(cbLight._m0[_2560].xyz));
        float _4545 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
        float _2593 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _2594 = dot(vec3(_824, _825, _826), vec3(_2587, _2588, _2589));
        float _4556 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
        float _2597 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _2598 = dot(vec3(cbLight._m0[_2560].xyz), vec3(_2587, _2588, _2589));
        float _4567 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
        float _2602 = _2579 * _2579;
        float _2606 = ((_2597 * _2597) * (_2602 + (-1.0))) + 1.0;
        float _2613 = exp2(log2(1.0 - (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0)))) * 5.0);
        float _2620 = 1.0 - _2579;
        float _2630 = (0.5 / (((_2240 * ((_2593 * _2620) + _2579)) + 9.9999999392252902907785028219223e-09) + (((_2240 * _2620) + _2579) * _2593))) * _2593;
        float _4578 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2632 = (isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))) * (_2602 / ((_2606 * _2606) * 3.141590118408203125));
        float _2633 = isnan(1.0) ? _2091 : (isnan(_2091) ? 1.0 : min(_2091, 1.0));
        _2549 = (((((_2613 * _2262) + _987) * cbLight._m0[_2564].x) * _2632) * _2633) + _2435;
        _2551 = (((((_2613 * _2264) + _989) * cbLight._m0[_2564].y) * _2632) * _2633) + _2437;
        _2553 = (((((_2613 * _2265) + _990) * cbLight._m0[_2564].z) * _2632) * _2633) + _2439;
    }
    float _2768;
    float _2770;
    float _2772;
    float _2774;
    float _2776;
    float _2778;
    if (_2073.y == 0u)
    {
        float _2708 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2709 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2708;
        float _2710 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2708;
        float _2711 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2708;
        uvec4 _2723 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2724 = _2723.x;
        uint _2735 = uint((float(_2723.y) * floor(float(uint(cbSceneParam._m0[85u].y * _925) / _2724))) + floor(float(uint(cbSceneParam._m0[85u].x * _924) / _2724)));
        float _2745 = (log2(_2711 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2746 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
        uint _2749 = uint(isnan(14.0) ? _2746 : (isnan(_2746) ? 14.0 : min(_2746, 14.0)));
        uvec4 _2754 = texelFetch(g_lightClusterGridBuffer, int(((_2749 << 2u) + (_2735 << 6u)) >> 2u));
        uint _2755 = _2754.x;
        uint _2756 = _2723.z;
        float _2856;
        float _2858;
        float _2860;
        float _2862;
        float _2864;
        float _2866;
        if (((((1u << ((_2756 >> 4u) & 15u)) + 4294967295u) & _2755) == 0u) || ((_2756 & 240u) == 0u))
        {
            _2856 = 0.0;
            _2858 = 0.0;
            _2860 = 0.0;
            _2862 = 0.0;
            _2864 = 0.0;
            _2866 = 0.0;
        }
        else
        {
            float _2857;
            float _2859;
            float _2861;
            float _2863;
            float _2865;
            float _2867;
            float _3009 = 0.0;
            float _3010 = 0.0;
            float _3011 = 0.0;
            float _3012 = 0.0;
            float _3013 = 0.0;
            float _3014 = 0.0;
            uint _3015 = 0u;
            uint _3024;
            bool _3025;
            for (;;)
            {
                _3024 = texelFetch(g_lightClassification, int((((_2749 << 5u) + (_2735 << 9u)) + (_3015 << 2u)) >> 2u)).x;
                _3025 = _3024 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3025)
                {
                    frontier_phi_66_pred = _3009;
                    frontier_phi_66_pred_1 = _3014;
                    frontier_phi_66_pred_2 = _3013;
                    frontier_phi_66_pred_3 = _3012;
                    frontier_phi_66_pred_4 = _3011;
                    frontier_phi_66_pred_5 = _3010;
                }
                else
                {
                    float _3154;
                    float _3155;
                    float _3156;
                    float _3157;
                    float _3158;
                    float _3159;
                    uint _3160;
                    _3154 = _3009;
                    _3155 = _3010;
                    _3156 = _3011;
                    _3157 = _3012;
                    _3158 = _3013;
                    _3159 = _3014;
                    _3160 = _3024;
                    float _3081;
                    float _3082;
                    float _3083;
                    float _3084;
                    float _3085;
                    float _3086;
                    for (;;)
                    {
                        uint _3164 = uint(findLSB(_3160)) + (_3015 << 5u);
                        uint _3161 = (_3160 + 4294967295u) & _3160;
                        uint _3166 = _3164 * 48u;
                        vec4 _3180 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3166)).x, texelFetch(g_PointLightRenderingBuffer, int(_3166 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3166 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3166 + 3u)).x));
                        uint _3186 = (_3164 * 48u) + 4u;
                        vec4 _3199 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3186)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 3u)).x));
                        uint _3205 = (_3164 * 48u) + 8u;
                        vec3 _3216 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3205)).x, texelFetch(g_PointLightRenderingBuffer, int(_3205 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3205 + 2u)).x));
                        float _3220 = _3180.x - _2709;
                        float _3221 = _3180.y - _2710;
                        float _3222 = _3180.z - _2711;
                        float _3223 = dot(vec3(_3220, _3221, _3222), vec3(_3220, _3221, _3222));
                        float _3226 = inversesqrt(_3223);
                        float _3227 = _3226 * _3220;
                        float _3228 = _3226 * _3221;
                        float _3229 = _3226 * _3222;
                        float _3230 = dot(vec3(_943, _946, _949), vec3(_3227, _3228, _3229));
                        float _3235 = 1.0 - (_3223 * _3180.w);
                        float _4604 = isnan(0.0) ? _3235 : (isnan(_3235) ? 0.0 : max(_3235, 0.0));
                        float _3236 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
                        float _3237 = sqrt(_3223) * _3199.w;
                        float _3240 = 1.39999997615814208984375 / (_3237 + 1.39999997615814208984375);
                        float _3241 = _3240 * _3240;
                        float _3244 = ((1.0 - _3241) * _3230) + _3241;
                        float _3247 = _3237 * _3237;
                        float _3251 = ((isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : max(_3244, 0.0))) * _3236) / ((_3247 * 0.699999988079071044921875) + 1.0);
                        float _3255 = (-0.0) - _2709;
                        float _3256 = (-0.0) - _2710;
                        float _3257 = (-0.0) - _2711;
                        float _3261 = inversesqrt(dot(vec3(_3255, _3256, _3257), vec3(_3255, _3256, _3257)));
                        float _3262 = _3261 * _3255;
                        float _3263 = _3261 * _3256;
                        float _3264 = _3261 * _3257;
                        float _3272 = exp2(log2(1.0 / ((_3247 * 3.5) + 5.0)) * 0.25);
                        float _3273 = 1.0 - _1018;
                        float _3280 = sqrt(1.0 - ((1.0 - (_3273 * _3273)) * (1.0 - (_3272 * _3272))));
                        float _3281 = _3280 * _3280;
                        float _3282 = _3281 * _3281;
                        float _3283 = _3262 + _3227;
                        float _3284 = _3263 + _3228;
                        float _3285 = _3264 + _3229;
                        float _3289 = inversesqrt(dot(vec3(_3283, _3284, _3285), vec3(_3283, _3284, _3285)));
                        float _3293 = dot(vec3(_943, _946, _949), vec3(_3262, _3263, _3264));
                        float _4620 = isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : max(_3293, 0.0));
                        float _3296 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
                        float _3297 = dot(vec3(_943, _946, _949), vec3(_3289 * _3283, _3289 * _3284, _3289 * _3285));
                        float _4631 = isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : max(_3297, 0.0));
                        float _3300 = isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0));
                        float _3304 = ((_3300 * _3300) * (_3282 + (-1.0))) + 1.0;
                        float _3305 = _3240 * _3281;
                        float _3306 = _3305 * _3305;
                        float _3309 = ((1.0 - _3306) * _3230) + _3306;
                        float _4642 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                        float _3310 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
                        float _3311 = 1.0 - _3281;
                        float _3321 = (0.5 / (((_3310 * ((_3296 * _3311) + _3281)) + 9.9999999392252902907785028219223e-09) + (((_3310 * _3311) + _3281) * _3296))) * _3310;
                        float _4653 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0));
                        float _3332 = (((_3282 * 3.1415927410125732421875) * (isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0)))) / ((_3304 * _3304) * ((_3247 * 2.1991131305694580078125) + 3.141590118408203125))) * _3236;
                        _3084 = (_3251 * _3199.x) + _3157;
                        _3085 = (_3251 * _3199.y) + _3158;
                        _3086 = (_3251 * _3199.z) + _3159;
                        _3081 = (_3332 * _3216.x) + _3154;
                        _3082 = (_3332 * _3216.y) + _3155;
                        _3083 = (_3332 * _3216.z) + _3156;
                        if (_3161 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3154 = _3081;
                            _3155 = _3082;
                            _3156 = _3083;
                            _3157 = _3084;
                            _3158 = _3085;
                            _3159 = _3086;
                            _3160 = _3161;
                        }
                    }
                    frontier_phi_66_pred = _3081;
                    frontier_phi_66_pred_1 = _3086;
                    frontier_phi_66_pred_2 = _3085;
                    frontier_phi_66_pred_3 = _3084;
                    frontier_phi_66_pred_4 = _3083;
                    frontier_phi_66_pred_5 = _3082;
                }
                _2857 = frontier_phi_66_pred;
                _2867 = frontier_phi_66_pred_1;
                _2865 = frontier_phi_66_pred_2;
                _2863 = frontier_phi_66_pred_3;
                _2861 = frontier_phi_66_pred_4;
                _2859 = frontier_phi_66_pred_5;
                uint _3016 = _3015 + 1u;
                if (_3016 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3009 = _2857;
                    _3010 = _2859;
                    _3011 = _2861;
                    _3012 = _2863;
                    _3013 = _2865;
                    _3014 = _2867;
                    _3015 = _3016;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2856 = _2857;
            _2858 = _2859;
            _2860 = _2861;
            _2862 = _2863;
            _2864 = _2865;
            _2866 = _2867;
        }
        uvec4 _2870 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2871 = _2870.z;
        uint _2873 = (_2871 >> 8u) & 15u;
        float _2977;
        float _2979;
        float _2981;
        float _2983;
        float _2985;
        float _2987;
        if (((4294967295u << _2873) & _2755) == 0u)
        {
            _2977 = _2856;
            _2979 = _2858;
            _2981 = _2860;
            _2983 = _2862;
            _2985 = _2864;
            _2987 = _2866;
        }
        else
        {
            float _3002 = inversesqrt(dot(vec3(_2709, _2710, _2711), vec3(_2709, _2710, _2711)));
            float _3003 = _3002 * _2709;
            float _3004 = _3002 * _2710;
            float _3005 = _3002 * _2711;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2873 < ((_2871 >> 12u) & 15u))
            {
                float _2978;
                float _2980;
                float _2982;
                float _2984;
                float _2986;
                float _2988;
                float _3137 = _2856;
                float _3138 = _2858;
                float _3139 = _2860;
                float _3140 = _2862;
                float _3141 = _2864;
                float _3142 = _2866;
                uint _3143 = _2873;
                uint _3152;
                bool _3153;
                for (;;)
                {
                    _3152 = texelFetch(g_lightClassification, int((((_2749 << 5u) + (_2735 << 9u)) + (_3143 << 2u)) >> 2u)).x;
                    _3153 = _3152 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3153)
                    {
                        frontier_phi_77_pred = _3142;
                        frontier_phi_77_pred_1 = _3141;
                        frontier_phi_77_pred_2 = _3140;
                        frontier_phi_77_pred_3 = _3139;
                        frontier_phi_77_pred_4 = _3138;
                        frontier_phi_77_pred_5 = _3137;
                    }
                    else
                    {
                        float _3346;
                        float _3347;
                        float _3348;
                        float _3349;
                        float _3350;
                        float _3351;
                        float _3640;
                        float _3641;
                        float _3642;
                        float _3643;
                        float _3644;
                        float _3645;
                        float _3359 = _3137;
                        float _3360 = _3138;
                        float _3361 = _3139;
                        float _3362 = _3140;
                        float _3363 = _3141;
                        float _3364 = _3142;
                        uint _3365 = _3152;
                        uint _3366;
                        vec4 _3391;
                        float _3392;
                        vec4 _3407;
                        vec3 _3419;
                        vec4 _3434;
                        vec4 _3449;
                        float _3496;
                        bool _3497;
                        for (;;)
                        {
                            uint _3376 = ((_3143 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3365));
                            _3366 = (_3365 + 4294967295u) & _3365;
                            uint _3378 = _3376 * 40u;
                            _3391 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3378)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3378 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3378 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3378 + 3u)).x));
                            _3392 = _3391.w;
                            uint _3394 = (_3376 * 40u) + 4u;
                            _3407 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3394)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3394 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3394 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3394 + 3u)).x));
                            uint _3409 = (_3376 * 40u) + 8u;
                            _3419 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3409)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 2u)).x));
                            uint _3421 = (_3376 * 40u) + 16u;
                            _3434 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3421)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 3u)).x));
                            uint _3436 = (_3376 * 40u) + 20u;
                            _3449 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3436)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 3u)).x));
                            uint _3452 = (_3376 * 40u) + 24u;
                            vec4 _3465 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3452)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 3u)).x));
                            uint _3471 = (_3376 * 40u) + 28u;
                            vec4 _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            _3496 = fma(_2711, _3484.z, fma(_2710, _3484.y, _3484.x * _2709)) + _3484.w;
                            _3497 = !((fma(_2711, _3465.z, fma(_2710, _3465.y, _3465.x * _2709)) + _3465.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3497)
                            {
                                float _3524 = _3391.x - _2709;
                                float _3525 = _3391.y - _2710;
                                float _3526 = _3391.z - _2711;
                                float _3527 = dot(vec3(_3524, _3525, _3526), vec3(_3524, _3525, _3526));
                                float _3530 = inversesqrt(_3527);
                                float _3531 = _3530 * _3524;
                                float _3532 = _3530 * _3525;
                                float _3533 = _3530 * _3526;
                                float _3537 = 1.0 - (_3527 / (_3392 * _3392));
                                float _4664 = isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0));
                                float _3538 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
                                float _3542 = sqrt(_3527) * _3407.w;
                                float _3544 = 1.39999997615814208984375 / (_3542 + 1.39999997615814208984375);
                                float _3545 = _3544 * _3544;
                                float _3548 = ((1.0 - _3545) * dot(vec3(_3531, _3532, _3533), vec3(_943, _946, _949))) + _3545;
                                float _3551 = _3542 * _3542;
                                float _3555 = (fma(_2711, _3434.z, fma(_2710, _3434.y, _3434.x * _2709)) + _3434.w) / _3496;
                                float _3556 = (fma(_2711, _3449.z, fma(_2710, _3449.y, _3449.x * _2709)) + _3449.w) / _3496;
                                float _3560 = 1.0 - dot(vec2(_3555, _3556), vec2(_3555, _3556));
                                float _4680 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0));
                                float _3561 = isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0));
                                float _3562 = _3561 * (((isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0))) * _3538) / ((_3551 * 0.699999988079071044921875) + 1.0));
                                float _3574 = exp2(log2(1.0 / ((_3551 * 3.5) + 5.0)) * 0.25);
                                float _3575 = 1.0 - _1018;
                                float _3582 = sqrt(1.0 - ((1.0 - (_3575 * _3575)) * (1.0 - (_3574 * _3574))));
                                float _3583 = _3582 * _3582;
                                float _3584 = _3583 * _3583;
                                float _3585 = _3531 - _3003;
                                float _3586 = _3532 - _3004;
                                float _3587 = _3533 - _3005;
                                float _3591 = inversesqrt(dot(vec3(_3585, _3586, _3587), vec3(_3585, _3586, _3587)));
                                float _3595 = dot(vec3(_943, _946, _949), vec3((-0.0) - _3003, (-0.0) - _3004, (-0.0) - _3005));
                                float _4691 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                                float _3598 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
                                float _3599 = dot(vec3(_943, _946, _949), vec3(_3591 * _3585, _3591 * _3586, _3591 * _3587));
                                float _4702 = isnan(0.0) ? _3599 : (isnan(_3599) ? 0.0 : max(_3599, 0.0));
                                float _3602 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
                                float _3606 = ((_3602 * _3602) * (_3584 + (-1.0))) + 1.0;
                                float _3607 = _3544 * _3583;
                                float _3608 = _3607 * _3607;
                                float _3614 = ((1.0 - _3608) * dot(vec3(_943, _946, _949), vec3(_3531, _3532, _3533))) + _3608;
                                float _4713 = isnan(0.0) ? _3614 : (isnan(_3614) ? 0.0 : max(_3614, 0.0));
                                float _3615 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
                                float _3616 = 1.0 - _3583;
                                float _3626 = (0.5 / (((_3615 * ((_3598 * _3616) + _3583)) + 9.9999999392252902907785028219223e-09) + (((_3615 * _3616) + _3583) * _3598))) * _3615;
                                float _4724 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                                float _3636 = (_3561 * _3538) * (((_3584 * 3.1415927410125732421875) * (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0)))) / ((_3606 * _3606) * ((_3551 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3562 * _3407.y;
                                frontier_phi_83_pred_1 = _3562 * _3407.x;
                                frontier_phi_83_pred_2 = _3636 * _3419.z;
                                frontier_phi_83_pred_3 = _3636 * _3419.y;
                                frontier_phi_83_pred_4 = _3636 * _3419.x;
                                frontier_phi_83_pred_5 = _3562 * _3407.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3644 = frontier_phi_83_pred;
                            _3643 = frontier_phi_83_pred_1;
                            _3642 = frontier_phi_83_pred_2;
                            _3641 = frontier_phi_83_pred_3;
                            _3640 = frontier_phi_83_pred_4;
                            _3645 = frontier_phi_83_pred_5;
                            _3349 = _3643 + _3362;
                            _3350 = _3644 + _3363;
                            _3351 = _3645 + _3364;
                            _3346 = _3640 + _3359;
                            _3347 = _3641 + _3360;
                            _3348 = _3642 + _3361;
                            if (_3366 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3359 = _3346;
                                _3360 = _3347;
                                _3361 = _3348;
                                _3362 = _3349;
                                _3363 = _3350;
                                _3364 = _3351;
                                _3365 = _3366;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3351;
                        frontier_phi_77_pred_1 = _3350;
                        frontier_phi_77_pred_2 = _3349;
                        frontier_phi_77_pred_3 = _3348;
                        frontier_phi_77_pred_4 = _3347;
                        frontier_phi_77_pred_5 = _3346;
                    }
                    _2988 = frontier_phi_77_pred;
                    _2986 = frontier_phi_77_pred_1;
                    _2984 = frontier_phi_77_pred_2;
                    _2982 = frontier_phi_77_pred_3;
                    _2980 = frontier_phi_77_pred_4;
                    _2978 = frontier_phi_77_pred_5;
                    uint _3144 = _3143 + 1u;
                    if (_3144 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3137 = _2978;
                        _3138 = _2980;
                        _3139 = _2982;
                        _3140 = _2984;
                        _3141 = _2986;
                        _3142 = _2988;
                        _3143 = _3144;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2982;
                frontier_phi_58_59_ladder_1 = _2988;
                frontier_phi_58_59_ladder_2 = _2986;
                frontier_phi_58_59_ladder_3 = _2984;
                frontier_phi_58_59_ladder_4 = _2980;
                frontier_phi_58_59_ladder_5 = _2978;
            }
            else
            {
                frontier_phi_58_59_ladder = _2860;
                frontier_phi_58_59_ladder_1 = _2866;
                frontier_phi_58_59_ladder_2 = _2864;
                frontier_phi_58_59_ladder_3 = _2862;
                frontier_phi_58_59_ladder_4 = _2858;
                frontier_phi_58_59_ladder_5 = _2856;
            }
            _2977 = frontier_phi_58_59_ladder_5;
            _2979 = frontier_phi_58_59_ladder_4;
            _2981 = frontier_phi_58_59_ladder;
            _2983 = frontier_phi_58_59_ladder_3;
            _2985 = frontier_phi_58_59_ladder_2;
            _2987 = frontier_phi_58_59_ladder_1;
        }
        float _2992 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
        _2768 = (_2992 * _2983) + _2204;
        _2770 = (_2992 * _2985) + _2206;
        _2772 = (_2992 * _2987) + _2208;
        _2774 = ((_2977 * _987) * _2992) + _2549;
        _2776 = ((_2979 * _989) * _2992) + _2551;
        _2778 = ((_2981 * _990) * _2992) + _2553;
    }
    else
    {
        _2768 = _2204;
        _2770 = _2206;
        _2772 = _2208;
        _2774 = _2549;
        _2776 = _2551;
        _2778 = _2553;
    }
    float _4740 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _4751 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _4762 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _2795 = ((isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * (_2768 + ((isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0))) * _1002))) + ((_2774 + ((isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0))) * _1843)) * cbPerFrame._m0[3u].x);
    float _2796 = ((isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0))) * (_2770 + ((isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0))) * _1002))) + ((_2776 + ((isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0))) * _1843)) * cbPerFrame._m0[3u].x);
    float _2797 = ((isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0))) * (_2772 + ((isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0))) * _1002))) + ((_2778 + ((isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0))) * _1843)) * cbPerFrame._m0[3u].x);
    uint _2798 = _962 + 6u;
    float _2806 = _924 / cbSceneParam._m0[86u].x;
    float _2807 = _925 / cbSceneParam._m0[86u].y;
    vec4 _2821 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2806, _2807, (log2((isnan(cbSceneParam._m0[77u].w) ? _847 : (isnan(_847) ? cbSceneParam._m0[77u].w : min(_847, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2823 = _2821.x;
    float _2824 = _2821.y;
    float _2825 = _2821.z;
    float _2826 = _2821.w;
    float _2919;
    float _2921;
    float _2923;
    float _2925;
    if (_847 > cbSceneParam._m0[78u].w)
    {
        float _2881 = isnan(_847) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _847 : min(cbSceneParam._m0[80u].w, _847));
        float _2882 = _2881 / _847;
        float _2893 = _2882 * _897;
        float _2894 = _898 * _2882;
        float _2895 = (-0.0) - _2894;
        float _2897 = _2882 * _899;
        float _2899 = (cbSceneParam._m0[77u].w * _2895) / _2881;
        float _2900 = _2899 + cbSceneParam._m0[79u].w;
        float _2901 = cbSceneParam._m0[79u].w - _2894;
        float _2907 = sqrt(((_2893 * _2893) + (_2894 * _2894)) + (_2897 * _2897));
        float _2910 = (1.0 - (cbSceneParam._m0[77u].w / _2881)) * _2907;
        float _2915 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2917 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3094;
        if (abs((_2895 - _2899) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3094 = ((((_2900 > 0.0) ? exp2(_2915 * _2900) : (2.0 - exp2(_2917 * _2900))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2910;
        }
        else
        {
            float _3038 = 1.0 / cbSceneParam._m0[80u].x;
            float _3039 = isnan(_2901) ? _2900 : (isnan(_2900) ? _2901 : max(_2900, _2901));
            float _3040 = isnan(_2901) ? _2900 : (isnan(_2900) ? _2901 : min(_2900, _2901));
            float _3049 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : min(_3039, 0.0));
            float _3050 = isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : min(_3040, 0.0));
            _3094 = ((abs(_2907 / _2895) * cbSceneParam._m0[80u].y) * ((((_3049 - _3050) * 2.0) - ((exp2(_2915 * (isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0)))) - exp2(_2915 * (isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : max(_3040, 0.0))))) * _3038)) - ((exp2(_2917 * _3049) - exp2(_2917 * _3050)) * _3038))) + (_2910 * cbSceneParam._m0[80u].z);
        }
        vec4 _3096 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2806, _2807, 1.0), 0.0);
        float _3105 = exp2((_3094 * (-1.44269502162933349609375)) * (1.0 - _3096.w));
        float _3106 = log2(_3105);
        float _3122 = log2(_2826);
        _2919 = (exp2(_3122 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3106 * cbSceneParam._m0[78u].x)) * _3096.x) / cbSceneParam._m0[78u].x)) + _2823;
        _2921 = (exp2(_3122 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3106 * cbSceneParam._m0[78u].y)) * _3096.y) / cbSceneParam._m0[78u].y)) + _2824;
        _2923 = (exp2(_3122 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3106 * cbSceneParam._m0[78u].z)) * _3096.z) / cbSceneParam._m0[78u].z)) + _2825;
        _2925 = _3105 * _2826;
    }
    else
    {
        _2919 = _2823;
        _2921 = _2824;
        _2923 = _2825;
        _2925 = _2826;
    }
    bool _3132;
    vec4 _2935;
    vec4 _2957;
    float _2959;
    float _2963;
    float _2964;
    float _2965;
    float _2966;
    bool _2976;
    for (;;)
    {
        _2935 = cbMatDynParam._m0[0u];
        float _2937 = roundEven(_2935.y);
        bool _2938 = _2937 == 3.0;
        float _2939 = log2(_2925);
        float _2946 = exp2(_2939 * cbSceneParam._m0[78u].x) * _2795;
        float _2947 = exp2(_2939 * cbSceneParam._m0[78u].y) * _2796;
        float _2948 = exp2(_2939 * cbSceneParam._m0[78u].z) * _2797;
        float _2955 = _913 + (-0.5);
        _2957 = cbMtdParam._m0[1u];
        _2959 = _2957.y * _2955;
        float _2962 = (_2937 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2963 = _2962 * (_2938 ? _2946 : (_2946 + (cbSceneParam._m0[72u].w * _2919)));
        _2964 = _2962 * (_2938 ? _2947 : (_2947 + (cbSceneParam._m0[72u].w * _2921)));
        _2965 = _2962 * (_2938 ? _2948 : (_2948 + (cbSceneParam._m0[72u].w * _2923)));
        _2966 = _2955 * 0.999000012874603271484375;
        _2976 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2976)
        {
            if ((cbInstanceData._m0[_962 + 7u].x + _2966) < 0.5)
            {
                _3132 = true;
                break;
            }
        }
        uint _3073 = _963 + uint(_2935.w);
        if ((cbInstanceData._m0[_3073].w < 1.0) && ((cbInstanceData._m0[_3073].w + _2966) < 0.5))
        {
            _3132 = true;
            break;
        }
        if ((_2959 + 1.0) < _2957.x)
        {
            _3132 = true;
            break;
        }
        _3132 = false;
        break;
    }
    float _3337;
    if (_3132)
    {
        discard_state = true;
        _3337 = 0.0;
    }
    else
    {
        _3337 = cbInstanceData._m0[_2798].w;
    }
    SV_Target.x = _2963;
    SV_Target.y = _2964;
    SV_Target.z = _2965;
    SV_Target.w = _3337;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2798].w;
    discard_exit();
}


