#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _121 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _122 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _123 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _128 = inversesqrt(dot(vec3(_121, _122, _123), vec3(_121, _122, _123)));
    float _135 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _165 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _171 = _165.x * cbMtdParam._m0[9u].x;
    float _172 = _165.y * cbMtdParam._m0[9u].y;
    float _173 = _165.z * cbMtdParam._m0[9u].z;
    vec4 _185 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _187 = _185.x;
    vec4 _199 = texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _203 = _199.z;
    float _207 = (_199.x * 2.0) + (-1.0);
    float _209 = (_199.y * 2.0) + (-1.0);
    float _210 = dot(vec2(_207, _209), vec2(_207, _209));
    float _341 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    float _216 = sqrt(1.0 - (isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0))));
    float _235 = cbMtdParam._m0[10u].x * texture(sampler2D(M_AMSN_M0_M1_Edge_Translucency_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w)).x;
    float _238 = fma(_216, _135 * NORMAL.x, fma(_209, _142 * TANGENT.x, (_128 * _121) * _207));
    float _241 = fma(_216, _135 * NORMAL.y, fma(_209, _142 * TANGENT.y, (_128 * _122) * _207));
    float _244 = fma(_216, _135 * NORMAL.z, fma(_209, _142 * TANGENT.z, (_128 * _123) * _207));
    float _248 = inversesqrt(dot(vec3(_238, _241, _244), vec3(_238, _241, _244)));
    float _352 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _368 = isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0));
    float _379 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _390 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _401 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    uint _269 = uint(roundEven(NORMAL.w)) * 13u;
    uint _272 = (_269 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _278 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _368 : (isnan(_368) ? 1.0 : min(_368, 1.0)))) * cbInstanceData._m0[_272].x;
    float _279 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _379 : (isnan(_379) ? 1.0 : min(_379, 1.0)))) * cbInstanceData._m0[_272].y;
    float _280 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _390 : (isnan(_390) ? 1.0 : min(_390, 1.0)))) * cbInstanceData._m0[_272].z;
    float _412 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _423 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _434 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    uint _284 = _269 + 6u;
    bool _315 = cbMtdParam._m0[1u].z != 0.0;
    float _316 = _315 ? cbInstanceData._m0[_284].w : 0.0;
    SV_Target.x = ((_238 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.y = ((_241 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.z = ((_244 * 0.5) * _248) + 0.500488758087158203125;
    SV_Target.w = _316;
    SV_Target_1.x = isnan(1.0) ? _401 : (isnan(_401) ? 1.0 : min(_401, 1.0));
    SV_Target_1.y = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    SV_Target_1.z = (isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0))) * 0.100000001490116119384765625;
    SV_Target_1.w = _315 ? cbInstanceData._m0[_284].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _412 : (isnan(_412) ? 1.0 : min(_412, 1.0));
    SV_Target_2.y = isnan(1.0) ? _423 : (isnan(_423) ? 1.0 : min(_423, 1.0));
    SV_Target_2.z = isnan(1.0) ? _434 : (isnan(_434) ? 1.0 : min(_434, 1.0));
    SV_Target_2.w = _315 ? cbInstanceData._m0[_284].w : (float(floatBitsToUint(cbInstanceData._m0[_269 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _316;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _316;
}


