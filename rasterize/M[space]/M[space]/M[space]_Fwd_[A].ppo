#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_space_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_space_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_space_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _668;
float _669;
float _670;
float _671;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _138 = exp2(log2(abs(_119 * NORMAL.x)) * 3.0);
    float _139 = exp2(log2(abs(_119 * NORMAL.y)) * 3.0);
    float _140 = exp2(log2(abs(_119 * NORMAL.z)) * 3.0);
    float _144 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _145 = _144 * _138;
    float _146 = _144 * _139;
    float _147 = _144 * _140;
    float _171 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _175 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _179 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _182 = _175 * 0.00999999977648258209228515625;
    float _192 = (cbTextureTilingScale._m0[2u].x * (_171 * 0.00999999977648258209228515625)) + cbTextureTilingScale._m0[2u].z;
    float _193 = (cbTextureTilingScale._m0[2u].y * (_179 * 0.00999999977648258209228515625)) + cbTextureTilingScale._m0[2u].w;
    vec4 _196 = texture(sampler2D(M_space_snp_0_Texture2D_3, SS_DiffuseMap), vec2(_192, _193));
    vec4 _207 = texture(sampler2D(M_space_snp_0_Texture2D_3, SS_DiffuseMap), vec2(_192, (cbTextureTilingScale._m0[2u].y * _182) + cbTextureTilingScale._m0[2u].w));
    vec4 _217 = texture(sampler2D(M_space_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _182) + cbTextureTilingScale._m0[2u].z, _193));
    float _252 = texture(sampler2D(M_space_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w)).x * cbMtdParam._m0[11u].y;
    vec4 _268 = texture(sampler2D(M_space_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _283 = inversesqrt(dot(vec3(_171, _175, _179), vec3(_171, _175, _179)));
    float _296 = inversesqrt(dot(vec3(cbMtdParam._m0[11u].zw, cbMtdParam._m0[12u].x), vec3(cbMtdParam._m0[11u].zw, cbMtdParam._m0[12u].x)));
    float _300 = dot(vec4(_283 * _171, _283 * _175, _283 * _179, 0.0), vec4(_296 * cbMtdParam._m0[11u].z, _296 * cbMtdParam._m0[11u].w, _296 * cbMtdParam._m0[12u].x, 0.0));
    float _680 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _313 = (-0.0) - (((1.0 - exp2(log2(isnan(1.0) ? _680 : (isnan(_680) ? 1.0 : min(_680, 1.0))) * cbMtdParam._m0[10u].z)) - cbMtdParam._m0[10u].w) * cbMtdParam._m0[11u].x);
    float _691 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _315 = isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0));
    float _342 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _352 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _360 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _362 = _360.w;
    uint _374 = uint(roundEven(NORMAL.w)) * 13u;
    uint _375 = _374 + 9u;
    uint _376 = _375 + uint(cbMatDynParam._m0[0u].w);
    float _382 = cbInstanceData._m0[_376].x * ((cbMtdParam._m0[9u].x * _315) + (((_252 + ((((_207.x * _147) + (_196.x * _146)) + (_217.x * _145)) * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[10u].x) * _268.x));
    float _383 = cbInstanceData._m0[_376].y * ((cbMtdParam._m0[9u].y * _315) + (((_252 + ((((_207.y * _147) + (_196.y * _146)) + (_217.y * _145)) * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[10u].x) * _268.y));
    float _384 = cbInstanceData._m0[_376].z * ((cbMtdParam._m0[9u].z * _315) + (((_252 + ((((_207.z * _147) + (_196.z * _146)) + (_217.z * _145)) * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[10u].x) * _268.z));
    float _385 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _386 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _387 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    uint _388 = _374 + 6u;
    float _398 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _399 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _414 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_398, _399, (log2((isnan(cbSceneParam._m0[77u].w) ? _342 : (isnan(_342) ? cbSceneParam._m0[77u].w : min(_342, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _416 = _414.x;
    float _417 = _414.y;
    float _418 = _414.z;
    float _419 = _414.w;
    float _479;
    float _481;
    float _483;
    float _485;
    if (_342 > cbSceneParam._m0[78u].w)
    {
        float _441 = isnan(_342) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _342 : min(cbSceneParam._m0[80u].w, _342));
        float _442 = _441 / _342;
        float _453 = _442 * (cbSceneParam._m0[71u].x - (_171 / _352));
        float _454 = (cbSceneParam._m0[71u].y - (_175 / _352)) * _442;
        float _455 = (-0.0) - _454;
        float _456 = _442 * (cbSceneParam._m0[71u].z - (_179 / _352));
        float _458 = (cbSceneParam._m0[77u].w * _455) / _441;
        float _459 = _458 + cbSceneParam._m0[79u].w;
        float _460 = cbSceneParam._m0[79u].w - _454;
        float _466 = sqrt(((_453 * _453) + (_454 * _454)) + (_456 * _456));
        float _469 = (1.0 - (cbSceneParam._m0[77u].w / _441)) * _466;
        float _475 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _477 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _597;
        if (abs((_455 - _458) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _597 = ((((_459 > 0.0) ? exp2(_475 * _459) : (2.0 - exp2(_477 * _459))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _469;
        }
        else
        {
            float _552 = 1.0 / cbSceneParam._m0[80u].x;
            float _553 = isnan(_460) ? _459 : (isnan(_459) ? _460 : max(_459, _460));
            float _554 = isnan(_460) ? _459 : (isnan(_459) ? _460 : min(_459, _460));
            float _563 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : min(_553, 0.0));
            float _564 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : min(_554, 0.0));
            _597 = ((abs(_466 / _455) * cbSceneParam._m0[80u].y) * ((((_563 - _564) * 2.0) - ((exp2(_475 * (isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0)))) - exp2(_475 * (isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0))))) * _552)) - ((exp2(_477 * _563) - exp2(_477 * _564)) * _552))) + (_469 * cbSceneParam._m0[80u].z);
        }
        vec4 _599 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_398, _399, 1.0), 0.0);
        float _608 = exp2((_597 * (-1.44269502162933349609375)) * (1.0 - _599.w));
        float _609 = log2(_608);
        float _625 = log2(_419);
        _479 = (exp2(_625 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_609 * cbSceneParam._m0[78u].x)) * _599.x) / cbSceneParam._m0[78u].x)) + _416;
        _481 = (exp2(_625 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_609 * cbSceneParam._m0[78u].y)) * _599.y) / cbSceneParam._m0[78u].y)) + _417;
        _483 = (exp2(_625 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_609 * cbSceneParam._m0[78u].z)) * _599.z) / cbSceneParam._m0[78u].z)) + _418;
        _485 = _608 * _419;
    }
    else
    {
        _479 = _416;
        _481 = _417;
        _483 = _418;
        _485 = _419;
    }
    bool _635;
    vec4 _495;
    vec4 _518;
    float _520;
    float _525;
    float _526;
    float _527;
    float _528;
    bool _539;
    for (;;)
    {
        _495 = cbMatDynParam._m0[0u];
        float _497 = roundEven(_495.y);
        bool _498 = _497 == 3.0;
        float _499 = log2(_485);
        float _506 = exp2(_499 * cbSceneParam._m0[78u].x) * _385;
        float _507 = exp2(_499 * cbSceneParam._m0[78u].y) * _386;
        float _508 = exp2(_499 * cbSceneParam._m0[78u].z) * _387;
        float _515 = _362 + (-0.5);
        _518 = cbMtdParam._m0[1u];
        _520 = _518.y * _515;
        float _524 = (_497 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _525 = _524 * (_498 ? _506 : (_506 + (cbSceneParam._m0[72u].w * _479)));
        _526 = _524 * (_498 ? _507 : (_507 + (cbSceneParam._m0[72u].w * _481)));
        _527 = _524 * (_498 ? _508 : (_508 + (cbSceneParam._m0[72u].w * _483)));
        _528 = _515 * 0.999000012874603271484375;
        _539 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_539)
        {
            if ((cbInstanceData._m0[_374 + 7u].x + _528) < 0.5)
            {
                _635 = true;
                break;
            }
        }
        uint _589 = _375 + uint(_495.w);
        if ((cbInstanceData._m0[_589].w < 1.0) && ((cbInstanceData._m0[_589].w + _528) < 0.5))
        {
            _635 = true;
            break;
        }
        if ((_520 + 1.0) < _518.x)
        {
            _635 = true;
            break;
        }
        _635 = false;
        break;
    }
    float _643;
    if (_635)
    {
        discard_state = true;
        _643 = 0.0;
    }
    else
    {
        _643 = cbInstanceData._m0[_388].w;
    }
    SV_Target.x = _525;
    SV_Target.y = _526;
    SV_Target.z = _527;
    SV_Target.w = _643;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_388].w;
    discard_exit();
}


