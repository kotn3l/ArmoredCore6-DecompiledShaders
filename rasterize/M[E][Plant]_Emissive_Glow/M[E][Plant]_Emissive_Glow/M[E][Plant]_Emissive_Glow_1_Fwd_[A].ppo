#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Plant_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _680;
float _681;
float _682;
float _683;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _148 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _158 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _148);
    float _159 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _148);
    float _160 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _148);
    float _172 = cbMtdParam._m0[10u].x - cbMtdParam._m0[10u].z;
    float _176 = gl_FragCoord.x * 0.125;
    float _178 = gl_FragCoord.y * 0.125;
    vec4 _181 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_176, _178));
    float _191 = float(((sqrt(((_158 * _158) + (_159 * _159)) + (_160 * _160)) - cbMtdParam._m0[10u].z) / (isnan(0.001000000047497451305389404296875) ? _172 : (isnan(_172) ? 0.001000000047497451305389404296875 : max(_172, 0.001000000047497451305389404296875)))) >= ((_181.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    vec4 _211 = texture(sampler2D(M_E_Plant_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _217 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _211.x;
    float _219 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _211.y;
    float _221 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _211.z;
    float _232 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _697 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _233 = isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0));
    float _238 = (POSITION_1.w - cbMtdParam._m0[11u].x) * (1.0 / cbMtdParam._m0[11u].y);
    float _708 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _239 = isnan(1.0) ? _708 : (isnan(_708) ? 1.0 : min(_708, 1.0));
    float _243 = _217 - (_239 * _217);
    float _244 = _219 - (_239 * _219);
    float _245 = _221 - (_239 * _221);
    float _270 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _310 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _319 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _310);
    float _320 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _310);
    float _321 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _310);
    vec4 _322 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_176, _178));
    float _324 = _322.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _411 = sqrt(((_319 * _319) + (_320 * _320)) + (_321 * _321));
        float _418 = (cbMatDynParam._m0[5u].x * _411) + cbMatDynParam._m0[5u].y;
        float _719 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
        float _419 = isnan(1.0) ? _719 : (isnan(_719) ? 1.0 : min(_719, 1.0));
        float _423 = (cbMatDynParam._m0[5u].z * _411) + cbMatDynParam._m0[5u].w;
        float _730 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _730 : (isnan(_730) ? 1.0 : min(_730, 1.0))) - _419)) + _419) < ((_324 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _342 = uint(roundEven(NORMAL.w)) * 13u;
    uint _344 = _342 + 9u;
    uint _345 = _344 + uint(cbMatDynParam._m0[0u].w);
    float _351 = cbInstanceData._m0[_345].x * ((((_217 * cbMtdParam._m0[10u].y) - _243) * _233) + _243);
    float _352 = cbInstanceData._m0[_345].y * ((((_219 * cbMtdParam._m0[10u].y) - _244) * _233) + _244);
    float _353 = cbInstanceData._m0[_345].z * ((((_221 * cbMtdParam._m0[10u].y) - _245) * _233) + _245);
    float _354 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _355 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _356 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _362 = cbMtdParam._m0[2u].x * _351;
    float _363 = cbMtdParam._m0[2u].y * _352;
    float _364 = cbMtdParam._m0[2u].z * _353;
    float _756 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _366 = isnan(1.0) ? _756 : (isnan(_756) ? 1.0 : min(_756, 1.0));
    uint _367 = _342 + 6u;
    float _376 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _377 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _392 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_376, _377, (log2((isnan(cbSceneParam._m0[77u].w) ? _270 : (isnan(_270) ? cbSceneParam._m0[77u].w : min(_270, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _394 = _392.x;
    float _395 = _392.y;
    float _396 = _392.z;
    float _397 = _392.w;
    float _477;
    float _479;
    float _481;
    float _483;
    if (_270 > cbSceneParam._m0[78u].w)
    {
        float _438 = isnan(_270) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _270 : min(cbSceneParam._m0[80u].w, _270));
        float _439 = _438 / _270;
        float _450 = _439 * _319;
        float _451 = _320 * _439;
        float _452 = (-0.0) - _451;
        float _454 = _439 * _321;
        float _456 = (cbSceneParam._m0[77u].w * _452) / _438;
        float _457 = _456 + cbSceneParam._m0[79u].w;
        float _458 = cbSceneParam._m0[79u].w - _451;
        float _464 = sqrt(((_450 * _450) + (_451 * _451)) + (_454 * _454));
        float _467 = (1.0 - (cbSceneParam._m0[77u].w / _438)) * _464;
        float _473 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _475 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _608;
        if (abs((_452 - _456) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _608 = ((((_457 > 0.0) ? exp2(_473 * _457) : (2.0 - exp2(_475 * _457))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _467;
        }
        else
        {
            float _563 = 1.0 / cbSceneParam._m0[80u].x;
            float _564 = isnan(_458) ? _457 : (isnan(_457) ? _458 : max(_457, _458));
            float _565 = isnan(_458) ? _457 : (isnan(_457) ? _458 : min(_457, _458));
            float _574 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : min(_564, 0.0));
            float _575 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : min(_565, 0.0));
            _608 = ((abs(_464 / _452) * cbSceneParam._m0[80u].y) * ((((_574 - _575) * 2.0) - ((exp2(_473 * (isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0)))) - exp2(_473 * (isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0))))) * _563)) - ((exp2(_475 * _574) - exp2(_475 * _575)) * _563))) + (_467 * cbSceneParam._m0[80u].z);
        }
        vec4 _610 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_376, _377, 1.0), 0.0);
        float _619 = exp2((_608 * (-1.44269502162933349609375)) * (1.0 - _610.w));
        float _620 = log2(_619);
        float _636 = log2(_397);
        _477 = (exp2(_636 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_620 * cbSceneParam._m0[78u].x)) * _610.x) / cbSceneParam._m0[78u].x)) + _394;
        _479 = (exp2(_636 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_620 * cbSceneParam._m0[78u].y)) * _610.y) / cbSceneParam._m0[78u].y)) + _395;
        _481 = (exp2(_636 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_620 * cbSceneParam._m0[78u].z)) * _610.z) / cbSceneParam._m0[78u].z)) + _396;
        _483 = _619 * _397;
    }
    else
    {
        _477 = _394;
        _479 = _395;
        _481 = _396;
        _483 = _397;
    }
    bool _646;
    vec4 _493;
    vec4 _517;
    float _519;
    float _524;
    float _525;
    float _526;
    float _529;
    float _532;
    float _535;
    float _536;
    bool _547;
    for (;;)
    {
        _493 = cbMatDynParam._m0[0u];
        float _495 = roundEven(_493.y);
        bool _496 = _495 == 3.0;
        float _498 = log2(_483);
        float _502 = exp2(_498 * cbSceneParam._m0[78u].x);
        float _503 = exp2(_498 * cbSceneParam._m0[78u].y);
        float _504 = exp2(_498 * cbSceneParam._m0[78u].z);
        float _505 = _502 * _354;
        float _506 = _503 * _355;
        float _507 = _504 * _356;
        float _514 = _324 + (-0.5);
        _517 = cbMtdParam._m0[1u];
        _519 = _517.y * _514;
        float _523 = (_495 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _524 = _523 * (_496 ? _505 : (_505 + (cbSceneParam._m0[72u].w * _477)));
        _525 = _523 * (_496 ? _506 : (_506 + (cbSceneParam._m0[72u].w * _479)));
        _526 = _523 * (_496 ? _507 : (_507 + (cbSceneParam._m0[72u].w * _481)));
        _529 = ((_362 * _366) * _502) * _523;
        _532 = ((_363 * _366) * _503) * _523;
        _535 = ((_364 * _366) * _504) * _523;
        _536 = _514 * 0.999000012874603271484375;
        _547 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_547)
        {
            if ((cbInstanceData._m0[_342 + 7u].x + _536) < 0.5)
            {
                _646 = true;
                break;
            }
        }
        uint _600 = _344 + uint(_493.w);
        if ((cbInstanceData._m0[_600].w < 1.0) && ((cbInstanceData._m0[_600].w + _536) < 0.5))
        {
            _646 = true;
            break;
        }
        if ((_519 + _191) < _517.x)
        {
            _646 = true;
            break;
        }
        _646 = false;
        break;
    }
    float _651;
    if (_646)
    {
        discard_state = true;
        _651 = 0.0;
    }
    else
    {
        _651 = cbInstanceData._m0[_367].w;
    }
    SV_Target.x = _524;
    SV_Target.y = _525;
    SV_Target.z = _526;
    SV_Target.w = _651;
    SV_Target_1.x = _529;
    SV_Target_1.y = _532;
    SV_Target_1.z = _535;
    SV_Target_1.w = cbInstanceData._m0[_367].w;
    discard_exit();
}


