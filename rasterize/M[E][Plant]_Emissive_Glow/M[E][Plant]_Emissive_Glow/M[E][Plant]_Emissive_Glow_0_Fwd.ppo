#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Plant_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _117 = texture(sampler2D(M_E_Plant_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _124 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _117.x;
    float _126 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _117.y;
    float _128 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _117.z;
    float _141 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _498 = isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0));
    float _143 = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
    float _148 = (POSITION_1.w - cbMtdParam._m0[11u].x) * (1.0 / cbMtdParam._m0[11u].y);
    float _509 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _149 = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
    float _153 = _124 - (_149 * _124);
    float _154 = _126 - (_149 * _126);
    float _155 = _128 - (_149 * _128);
    float _180 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _197 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _212 = uint(roundEven(NORMAL.w)) * 13u;
    uint _215 = (_212 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _221 = cbInstanceData._m0[_215].x * ((((_124 * cbMtdParam._m0[10u].y) - _153) * _143) + _153);
    float _222 = cbInstanceData._m0[_215].y * ((((_126 * cbMtdParam._m0[10u].y) - _154) * _143) + _154);
    float _223 = cbInstanceData._m0[_215].z * ((((_128 * cbMtdParam._m0[10u].y) - _155) * _143) + _155);
    float _535 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _236 = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
    uint _237 = _212 + 6u;
    float _247 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _248 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _263 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, (log2((isnan(cbSceneParam._m0[77u].w) ? _180 : (isnan(_180) ? cbSceneParam._m0[77u].w : min(_180, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _265 = _263.x;
    float _266 = _263.y;
    float _267 = _263.z;
    float _268 = _263.w;
    float _353;
    float _355;
    float _357;
    float _359;
    if (_180 > cbSceneParam._m0[78u].w)
    {
        float _314 = isnan(_180) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _180 : min(cbSceneParam._m0[80u].w, _180));
        float _315 = _314 / _180;
        float _326 = _315 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _197));
        float _327 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _197)) * _315;
        float _328 = (-0.0) - _327;
        float _330 = _315 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _197));
        float _332 = (cbSceneParam._m0[77u].w * _328) / _314;
        float _333 = _332 + cbSceneParam._m0[79u].w;
        float _334 = cbSceneParam._m0[79u].w - _327;
        float _340 = sqrt(((_326 * _326) + (_327 * _327)) + (_330 * _330));
        float _343 = (1.0 - (cbSceneParam._m0[77u].w / _314)) * _340;
        float _349 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _351 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _453;
        if (abs((_328 - _332) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _453 = ((((_333 > 0.0) ? exp2(_349 * _333) : (2.0 - exp2(_351 * _333))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _343;
        }
        else
        {
            float _426 = 1.0 / cbSceneParam._m0[80u].x;
            float _427 = isnan(_334) ? _333 : (isnan(_333) ? _334 : max(_333, _334));
            float _428 = isnan(_334) ? _333 : (isnan(_333) ? _334 : min(_333, _334));
            float _437 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : min(_427, 0.0));
            float _438 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : min(_428, 0.0));
            _453 = ((abs(_340 / _328) * cbSceneParam._m0[80u].y) * ((((_437 - _438) * 2.0) - ((exp2(_349 * (isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0)))) - exp2(_349 * (isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0))))) * _426)) - ((exp2(_351 * _437) - exp2(_351 * _438)) * _426))) + (_343 * cbSceneParam._m0[80u].z);
        }
        vec4 _455 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, 1.0), 0.0);
        float _464 = exp2((_453 * (-1.44269502162933349609375)) * (1.0 - _455.w));
        float _465 = log2(_464);
        float _481 = log2(_268);
        _353 = (exp2(_481 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_465 * cbSceneParam._m0[78u].x)) * _455.x) / cbSceneParam._m0[78u].x)) + _265;
        _355 = (exp2(_481 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_465 * cbSceneParam._m0[78u].y)) * _455.y) / cbSceneParam._m0[78u].y)) + _266;
        _357 = (exp2(_481 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_465 * cbSceneParam._m0[78u].z)) * _455.z) / cbSceneParam._m0[78u].z)) + _267;
        _359 = _464 * _268;
    }
    else
    {
        _353 = _265;
        _355 = _266;
        _357 = _267;
        _359 = _268;
    }
    float _371 = roundEven(cbMatDynParam._m0[0u].y);
    bool _372 = _371 == 3.0;
    float _374 = log2(_359);
    float _378 = exp2(_374 * cbSceneParam._m0[78u].x);
    float _379 = exp2(_374 * cbSceneParam._m0[78u].y);
    float _380 = exp2(_374 * cbSceneParam._m0[78u].z);
    float _381 = _378 * (isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0)));
    float _382 = _379 * (isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0)));
    float _383 = _380 * (isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0)));
    float _393 = (_371 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _393 * (_372 ? _381 : (_381 + (cbSceneParam._m0[72u].w * _353)));
    SV_Target.y = _393 * (_372 ? _382 : (_382 + (cbSceneParam._m0[72u].w * _355)));
    SV_Target.z = _393 * (_372 ? _383 : (_383 + (cbSceneParam._m0[72u].w * _357)));
    SV_Target.w = cbInstanceData._m0[_237].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _221) * _236) * _378) * _393;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _222) * _236) * _379) * _393;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _223) * _236) * _380) * _393;
    SV_Target_1.w = cbInstanceData._m0[_237].w;
}


