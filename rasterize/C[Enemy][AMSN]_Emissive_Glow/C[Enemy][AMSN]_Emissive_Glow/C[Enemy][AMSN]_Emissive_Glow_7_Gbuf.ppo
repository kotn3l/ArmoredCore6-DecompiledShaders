#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _175 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _181 = _175.x * cbMtdParam._m0[9u].x;
    float _182 = _175.y * cbMtdParam._m0[9u].y;
    float _183 = _175.z * cbMtdParam._m0[9u].z;
    vec4 _195 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _199 = _195.z;
    float _203 = (_195.x * 2.0) + (-1.0);
    float _205 = (_195.y * 2.0) + (-1.0);
    float _206 = dot(vec2(_203, _205), vec2(_203, _205));
    float _395 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _212 = sqrt(1.0 - (isnan(1.0) ? _395 : (isnan(_395) ? 1.0 : min(_395, 1.0))));
    vec4 _249 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _260 = abs((fract(cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _406 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _261 = isnan(1.0) ? _406 : (isnan(_406) ? 1.0 : min(_406, 1.0));
    float _269 = (((_261 * _261) * (3.0 - (_261 * 2.0))) * cbMtdParam._m0[11u].w) - cbMtdParam._m0[11u].z;
    float _272 = fma(_212, _146 * NORMAL.x, fma(_205, _153 * TANGENT.x, (_139 * _132) * _203));
    float _275 = fma(_212, _146 * NORMAL.y, fma(_205, _153 * TANGENT.y, (_139 * _133) * _203));
    float _278 = fma(_212, _146 * NORMAL.z, fma(_205, _153 * TANGENT.z, (_139 * _134) * _203));
    float _282 = inversesqrt(dot(vec3(_272, _275, _278), vec3(_272, _275, _278)));
    float _417 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    float _428 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _439 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _450 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    uint _301 = uint(roundEven(NORMAL.w)) * 13u;
    uint _303 = (_301 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _309 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _428 : (isnan(_428) ? 1.0 : min(_428, 1.0)))) * cbInstanceData._m0[_303].x;
    float _310 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _439 : (isnan(_439) ? 1.0 : min(_439, 1.0)))) * cbInstanceData._m0[_303].y;
    float _311 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0)))) * cbInstanceData._m0[_303].z;
    float _461 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _472 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
    float _483 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    uint _318 = _301 + 6u;
    float _367;
    float _368;
    float _369;
    float _370;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _367 = cbInstanceData._m0[_318].w;
        _368 = cbInstanceData._m0[_318].w;
        _369 = cbInstanceData._m0[_318].w;
        _370 = cbInstanceData._m0[_318].w;
    }
    else
    {
        _367 = cbMtdParam._m0[2u].w;
        _368 = 0.0;
        _369 = float(floatBitsToUint(cbInstanceData._m0[_301 + 5u]).x) * 0.0039215688593685626983642578125;
        _370 = TEXCOORD.z;
    }
    SV_Target.x = ((_272 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.y = ((_275 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.z = ((_278 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.w = _368;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _417 : (isnan(_417) ? 1.0 : min(_417, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _370;
    SV_Target_2.x = isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0));
    SV_Target_2.y = isnan(1.0) ? _472 : (isnan(_472) ? 1.0 : min(_472, 1.0));
    SV_Target_2.z = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
    SV_Target_2.w = _369;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _368;
    SV_Target_4.x = ((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _249.x) * _269) * cbInstanceData._m0[_303].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _249.y) * _269) * cbInstanceData._m0[_303].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _249.z) * _269) * cbInstanceData._m0[_303].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _367;
}


