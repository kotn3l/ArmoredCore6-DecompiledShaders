#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _146 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _147 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _148 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _153 = inversesqrt(dot(vec3(_146, _147, _148), vec3(_146, _147, _148)));
    float _160 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _189 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _195 = _189.x * cbMtdParam._m0[9u].x;
    float _196 = _189.y * cbMtdParam._m0[9u].y;
    float _197 = _189.z * cbMtdParam._m0[9u].z;
    vec4 _209 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _213 = _209.z;
    float _217 = (_209.x * 2.0) + (-1.0);
    float _219 = (_209.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_217, _219), vec2(_217, _219));
    float _503 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _503 : (isnan(_503) ? 1.0 : min(_503, 1.0))));
    vec4 _263 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _274 = abs((fract(cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _514 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _275 = isnan(1.0) ? _514 : (isnan(_514) ? 1.0 : min(_514, 1.0));
    float _283 = (((_275 * _275) * (3.0 - (_275 * 2.0))) * cbMtdParam._m0[11u].w) - cbMtdParam._m0[11u].z;
    float _286 = fma(_226, _160 * NORMAL.x, fma(_219, _167 * TANGENT.x, (_153 * _146) * _217));
    float _289 = fma(_226, _160 * NORMAL.y, fma(_219, _167 * TANGENT.y, (_153 * _147) * _217));
    float _292 = fma(_226, _160 * NORMAL.z, fma(_219, _167 * TANGENT.z, (_153 * _148) * _217));
    float _296 = inversesqrt(dot(vec3(_286, _289, _292), vec3(_286, _289, _292)));
    float _525 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _536 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _298 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
    float _547 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _299 = isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0));
    float _558 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _300 = isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0));
    uint _302 = uint(roundEven(NORMAL.w));
    vec4 _307 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _309 = _307.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _374 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _569 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
        float _375 = isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0));
        float _379 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _580 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0))) - _375)) + _375) < ((_309 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _408;
    uint _329;
    vec4 _333;
    float _334;
    float _335;
    float _336;
    float _340;
    float _341;
    float _342;
    float _345;
    float _349;
    vec4 _353;
    float _355;
    float _356;
    bool _367;
    for (;;)
    {
        _329 = _302 * 13u;
        _333 = cbInstanceData._m0[(_329 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _334 = _333.x;
        _335 = _333.y;
        _336 = _333.z;
        float _337 = (cbMtdParam._m0[0u].x * _298) * _334;
        float _338 = (cbMtdParam._m0[0u].y * _299) * _335;
        float _339 = (cbMtdParam._m0[0u].z * _300) * _336;
        float _591 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
        _340 = isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0));
        float _602 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
        _341 = isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0));
        float _613 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
        _342 = isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0));
        _345 = cbMtdParam._m0[2u].w;
        _349 = cbInstanceData._m0[_329 + 6u].w;
        float _350 = _309 + (-0.5);
        _353 = cbMtdParam._m0[1u];
        _355 = _353.y * _350;
        _356 = _350 * 0.999000012874603271484375;
        _367 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_367)
        {
            if ((cbInstanceData._m0[_329 + 7u].x + _356) < 0.5)
            {
                _408 = true;
                break;
            }
        }
        if ((_333.w < 1.0) && ((_333.w + _356) < 0.5))
        {
            _408 = true;
            break;
        }
        if ((_355 + 1.0) < _353.x)
        {
            _408 = true;
            break;
        }
        _408 = false;
        break;
    }
    if (_408)
    {
        discard_state = true;
    }
    float _454;
    float _455;
    float _456;
    float _457;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _454 = _349;
        _455 = _349;
        _456 = _349;
        _457 = _349;
    }
    else
    {
        _454 = _345;
        _455 = 0.0;
        _456 = float(floatBitsToUint(cbInstanceData._m0[_329 + 5u]).x) * 0.0039215688593685626983642578125;
        _457 = TEXCOORD.z;
    }
    SV_Target.x = ((_286 * 0.5) * _296) + 0.500488758087158203125;
    SV_Target.y = ((_289 * 0.5) * _296) + 0.500488758087158203125;
    SV_Target.z = ((_292 * 0.5) * _296) + 0.500488758087158203125;
    SV_Target.w = _455;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _457;
    SV_Target_2.x = _340;
    SV_Target_2.y = _341;
    SV_Target_2.z = _342;
    SV_Target_2.w = _456;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _455;
    SV_Target_4.x = ((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _263.x) * _283) * _334) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _263.y) * _283) * _335) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _263.z) * _283) * _336) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _454;
    discard_exit();
}


