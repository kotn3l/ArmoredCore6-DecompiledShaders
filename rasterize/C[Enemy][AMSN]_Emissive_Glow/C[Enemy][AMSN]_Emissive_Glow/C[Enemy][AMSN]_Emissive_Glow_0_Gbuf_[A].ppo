#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _147 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _154 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _161 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _184 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _190 = _184.x * cbMtdParam._m0[9u].x;
    float _191 = _184.y * cbMtdParam._m0[9u].y;
    float _192 = _184.z * cbMtdParam._m0[9u].z;
    vec4 _204 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _206 = _204.x;
    vec4 _218 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _222 = _218.z;
    float _226 = (_218.x * 2.0) + (-1.0);
    float _228 = (_218.y * 2.0) + (-1.0);
    float _229 = dot(vec2(_226, _228), vec2(_226, _228));
    float _480 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _235 = sqrt(1.0 - (isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0))));
    vec4 _257 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _264 = fma(_235, _154 * NORMAL.x, fma(_228, _161 * TANGENT.x, (_147 * _140) * _226));
    float _267 = fma(_235, _154 * NORMAL.y, fma(_228, _161 * TANGENT.y, (_147 * _141) * _226));
    float _270 = fma(_235, _154 * NORMAL.z, fma(_228, _161 * TANGENT.z, (_147 * _142) * _226));
    float _274 = inversesqrt(dot(vec3(_264, _267, _270), vec3(_264, _267, _270)));
    float _491 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _502 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _276 = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
    float _513 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _277 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    float _524 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _278 = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
    float _535 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    uint _281 = uint(roundEven(NORMAL.w));
    vec4 _286 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _288 = _286.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _354 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _546 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
        float _355 = isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0));
        float _359 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _557 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _557 : (isnan(_557) ? 1.0 : min(_557, 1.0))) - _355)) + _355) < ((_288 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _388;
    uint _308;
    vec4 _313;
    float _314;
    float _315;
    float _316;
    float _320;
    float _321;
    float _322;
    float _325;
    float _329;
    vec4 _333;
    float _335;
    float _336;
    bool _347;
    for (;;)
    {
        _308 = _281 * 13u;
        _313 = cbInstanceData._m0[(_308 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _314 = _313.x;
        _315 = _313.y;
        _316 = _313.z;
        float _317 = (cbMtdParam._m0[0u].x * _276) * _314;
        float _318 = (cbMtdParam._m0[0u].y * _277) * _315;
        float _319 = (cbMtdParam._m0[0u].z * _278) * _316;
        float _568 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
        _320 = isnan(1.0) ? _568 : (isnan(_568) ? 1.0 : min(_568, 1.0));
        float _579 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
        _321 = isnan(1.0) ? _579 : (isnan(_579) ? 1.0 : min(_579, 1.0));
        float _590 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
        _322 = isnan(1.0) ? _590 : (isnan(_590) ? 1.0 : min(_590, 1.0));
        _325 = cbMtdParam._m0[2u].w;
        _329 = cbInstanceData._m0[_308 + 6u].w;
        float _330 = _288 + (-0.5);
        _333 = cbMtdParam._m0[1u];
        _335 = _333.y * _330;
        _336 = _330 * 0.999000012874603271484375;
        _347 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_347)
        {
            if ((cbInstanceData._m0[_308 + 7u].x + _336) < 0.5)
            {
                _388 = true;
                break;
            }
        }
        if ((_313.w < 1.0) && ((_313.w + _336) < 0.5))
        {
            _388 = true;
            break;
        }
        if ((_335 + 1.0) < _333.x)
        {
            _388 = true;
            break;
        }
        _388 = false;
        break;
    }
    if (_388)
    {
        discard_state = true;
    }
    float _431;
    float _432;
    float _433;
    float _434;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _431 = _329;
        _432 = _329;
        _433 = _329;
        _434 = _329;
    }
    else
    {
        _431 = _325;
        _432 = 0.0;
        _433 = float(floatBitsToUint(cbInstanceData._m0[_308 + 5u]).x) * 0.0039215688593685626983642578125;
        _434 = TEXCOORD.z;
    }
    SV_Target.x = ((_264 * 0.5) * _274) + 0.500488758087158203125;
    SV_Target.y = ((_267 * 0.5) * _274) + 0.500488758087158203125;
    SV_Target.z = ((_270 * 0.5) * _274) + 0.500488758087158203125;
    SV_Target.w = _432;
    SV_Target_1.x = isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0));
    SV_Target_1.y = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _434;
    SV_Target_2.x = _320;
    SV_Target_2.y = _321;
    SV_Target_2.z = _322;
    SV_Target_2.w = _433;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _432;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _257.x) * _314) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _257.y) * _315) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _257.z) * _316) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _431;
    discard_exit();
}


