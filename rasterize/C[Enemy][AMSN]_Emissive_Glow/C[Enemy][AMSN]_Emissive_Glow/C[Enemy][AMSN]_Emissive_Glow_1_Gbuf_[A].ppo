#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _137 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _138 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _143 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _150 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _157 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _180 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _186 = _180.x * cbMtdParam._m0[9u].x;
    float _187 = _180.y * cbMtdParam._m0[9u].y;
    float _188 = _180.z * cbMtdParam._m0[9u].z;
    vec4 _200 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _204 = _200.z;
    float _208 = (_200.x * 2.0) + (-1.0);
    float _210 = (_200.y * 2.0) + (-1.0);
    float _211 = dot(vec2(_208, _210), vec2(_208, _210));
    float _461 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _217 = sqrt(1.0 - (isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0))));
    vec4 _239 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _246 = fma(_217, _150 * NORMAL.x, fma(_210, _157 * TANGENT.x, (_143 * _136) * _208));
    float _249 = fma(_217, _150 * NORMAL.y, fma(_210, _157 * TANGENT.y, (_143 * _137) * _208));
    float _252 = fma(_217, _150 * NORMAL.z, fma(_210, _157 * TANGENT.z, (_143 * _138) * _208));
    float _256 = inversesqrt(dot(vec3(_246, _249, _252), vec3(_246, _249, _252)));
    float _472 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _483 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _258 = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
    float _494 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _259 = isnan(1.0) ? _494 : (isnan(_494) ? 1.0 : min(_494, 1.0));
    float _505 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _260 = isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0));
    uint _262 = uint(roundEven(NORMAL.w));
    vec4 _267 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _269 = _267.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _335 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _516 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
        float _336 = isnan(1.0) ? _516 : (isnan(_516) ? 1.0 : min(_516, 1.0));
        float _340 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _527 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _527 : (isnan(_527) ? 1.0 : min(_527, 1.0))) - _336)) + _336) < ((_269 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _369;
    uint _289;
    vec4 _294;
    float _295;
    float _296;
    float _297;
    float _301;
    float _302;
    float _303;
    float _306;
    float _310;
    vec4 _314;
    float _316;
    float _317;
    bool _328;
    for (;;)
    {
        _289 = _262 * 13u;
        _294 = cbInstanceData._m0[(_289 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _295 = _294.x;
        _296 = _294.y;
        _297 = _294.z;
        float _298 = (cbMtdParam._m0[0u].x * _258) * _295;
        float _299 = (cbMtdParam._m0[0u].y * _259) * _296;
        float _300 = (cbMtdParam._m0[0u].z * _260) * _297;
        float _538 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
        _301 = isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0));
        float _549 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        _302 = isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0));
        float _560 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        _303 = isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0));
        _306 = cbMtdParam._m0[2u].w;
        _310 = cbInstanceData._m0[_289 + 6u].w;
        float _311 = _269 + (-0.5);
        _314 = cbMtdParam._m0[1u];
        _316 = _314.y * _311;
        _317 = _311 * 0.999000012874603271484375;
        _328 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_328)
        {
            if ((cbInstanceData._m0[_289 + 7u].x + _317) < 0.5)
            {
                _369 = true;
                break;
            }
        }
        if ((_294.w < 1.0) && ((_294.w + _317) < 0.5))
        {
            _369 = true;
            break;
        }
        if ((_316 + 1.0) < _314.x)
        {
            _369 = true;
            break;
        }
        _369 = false;
        break;
    }
    if (_369)
    {
        discard_state = true;
    }
    float _412;
    float _413;
    float _414;
    float _415;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _412 = _310;
        _413 = _310;
        _414 = _310;
        _415 = _310;
    }
    else
    {
        _412 = _306;
        _413 = 0.0;
        _414 = float(floatBitsToUint(cbInstanceData._m0[_289 + 5u]).x) * 0.0039215688593685626983642578125;
        _415 = TEXCOORD.z;
    }
    SV_Target.x = ((_246 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.y = ((_249 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.z = ((_252 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.w = _413;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _472 : (isnan(_472) ? 1.0 : min(_472, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _415;
    SV_Target_2.x = _301;
    SV_Target_2.y = _302;
    SV_Target_2.z = _303;
    SV_Target_2.w = _414;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _413;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _239.x) * _295) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _239.y) * _296) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _239.z) * _297) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _412;
    discard_exit();
}


