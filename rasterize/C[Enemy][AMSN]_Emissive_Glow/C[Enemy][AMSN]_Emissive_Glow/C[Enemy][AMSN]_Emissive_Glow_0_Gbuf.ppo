#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _170 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _176 = _170.x * cbMtdParam._m0[9u].x;
    float _177 = _170.y * cbMtdParam._m0[9u].y;
    float _178 = _170.z * cbMtdParam._m0[9u].z;
    vec4 _190 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _192 = _190.x;
    vec4 _204 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _208 = _204.z;
    float _212 = (_204.x * 2.0) + (-1.0);
    float _214 = (_204.y * 2.0) + (-1.0);
    float _215 = dot(vec2(_212, _214), vec2(_212, _214));
    float _372 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _221 = sqrt(1.0 - (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0))));
    vec4 _243 = texture(sampler2D(C_Enemy_AMSN_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _250 = fma(_221, _140 * NORMAL.x, fma(_214, _147 * TANGENT.x, (_133 * _126) * _212));
    float _253 = fma(_221, _140 * NORMAL.y, fma(_214, _147 * TANGENT.y, (_133 * _127) * _212));
    float _256 = fma(_221, _140 * NORMAL.z, fma(_214, _147 * TANGENT.z, (_133 * _128) * _212));
    float _260 = inversesqrt(dot(vec3(_250, _253, _256), vec3(_250, _253, _256)));
    float _383 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _394 = isnan(0.0) ? _176 : (isnan(_176) ? 0.0 : max(_176, 0.0));
    float _405 = isnan(0.0) ? _177 : (isnan(_177) ? 0.0 : max(_177, 0.0));
    float _416 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _427 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    uint _280 = uint(roundEven(NORMAL.w)) * 13u;
    uint _283 = (_280 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _289 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0)))) * cbInstanceData._m0[_283].x;
    float _290 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0)))) * cbInstanceData._m0[_283].y;
    float _291 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _416 : (isnan(_416) ? 1.0 : min(_416, 1.0)))) * cbInstanceData._m0[_283].z;
    float _438 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _449 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _460 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    uint _298 = _280 + 6u;
    float _344;
    float _345;
    float _346;
    float _347;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _344 = cbInstanceData._m0[_298].w;
        _345 = cbInstanceData._m0[_298].w;
        _346 = cbInstanceData._m0[_298].w;
        _347 = cbInstanceData._m0[_298].w;
    }
    else
    {
        _344 = cbMtdParam._m0[2u].w;
        _345 = 0.0;
        _346 = float(floatBitsToUint(cbInstanceData._m0[_280 + 5u]).x) * 0.0039215688593685626983642578125;
        _347 = TEXCOORD.z;
    }
    SV_Target.x = ((_250 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.y = ((_253 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.z = ((_256 * 0.5) * _260) + 0.500488758087158203125;
    SV_Target.w = _345;
    SV_Target_1.x = isnan(1.0) ? _427 : (isnan(_427) ? 1.0 : min(_427, 1.0));
    SV_Target_1.y = isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _347;
    SV_Target_2.x = isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0));
    SV_Target_2.y = isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0));
    SV_Target_2.z = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    SV_Target_2.w = _346;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _345;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _243.x) * cbInstanceData._m0[_283].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _243.y) * cbInstanceData._m0[_283].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _243.z) * cbInstanceData._m0[_283].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _344;
}


