#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in float TEXCOORD[];
layout(location = 3, component = 1) in float TEXCOORD_1[];
layout(location = 4) in vec4 TEXCOORD_5[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out float TEXCOORD_8;

void main()
{
    precise float _103 = gl_TessCoord.z * POSITION[0u].x;
    precise float _104 = gl_TessCoord.z * POSITION[0u].y;
    precise float _105 = gl_TessCoord.z * POSITION[0u].z;
    precise float _112 = gl_TessCoord.x * POSITION[1u].x;
    precise float _113 = gl_TessCoord.x * POSITION[1u].y;
    precise float _114 = gl_TessCoord.x * POSITION[1u].z;
    precise float _115 = _103 + _112;
    precise float _116 = _104 + _113;
    precise float _117 = _105 + _114;
    precise float _124 = gl_TessCoord.y * POSITION[2u].x;
    precise float _125 = gl_TessCoord.y * POSITION[2u].y;
    precise float _126 = gl_TessCoord.y * POSITION[2u].z;
    precise float _127 = _115 + _124;
    precise float _128 = _116 + _125;
    precise float _129 = _117 + _126;
    precise float _220 = gl_TessCoord.z * TEXCOORD[0u];
    precise float _223 = gl_TessCoord.x * TEXCOORD[1u];
    precise float _224 = _220 + _223;
    precise float _227 = gl_TessCoord.y * TEXCOORD[2u];
    precise float _228 = _224 + _227;
    precise float _231 = gl_TessCoord.z * TEXCOORD_1[0u];
    precise float _234 = gl_TessCoord.x * TEXCOORD_1[1u];
    precise float _235 = _231 + _234;
    precise float _238 = gl_TessCoord.y * TEXCOORD_1[2u];
    precise float _239 = _235 + _238;
    precise float _248 = gl_TessCoord.z * TEXCOORD_5[0u].x;
    precise float _249 = gl_TessCoord.z * TEXCOORD_5[0u].y;
    precise float _250 = gl_TessCoord.z * TEXCOORD_5[0u].z;
    precise float _251 = gl_TessCoord.z * TEXCOORD_5[0u].w;
    precise float _260 = gl_TessCoord.x * TEXCOORD_5[1u].x;
    precise float _261 = gl_TessCoord.x * TEXCOORD_5[1u].y;
    precise float _262 = gl_TessCoord.x * TEXCOORD_5[1u].z;
    precise float _263 = gl_TessCoord.x * TEXCOORD_5[1u].w;
    precise float _264 = _248 + _260;
    precise float _265 = _249 + _261;
    precise float _266 = _250 + _262;
    precise float _267 = _251 + _263;
    precise float _276 = gl_TessCoord.y * TEXCOORD_5[2u].x;
    precise float _277 = gl_TessCoord.y * TEXCOORD_5[2u].y;
    precise float _278 = gl_TessCoord.y * TEXCOORD_5[2u].z;
    precise float _279 = gl_TessCoord.y * TEXCOORD_5[2u].w;
    precise float _280 = _264 + _276;
    precise float _281 = _265 + _277;
    precise float _282 = _266 + _278;
    precise float _283 = _267 + _279;
    precise float _297 = cbMtdParam._m0[40u].w - cbMtdParam._m0[39u].y;
    precise float _298 = cbMtdParam._m0[41u].y - cbMtdParam._m0[39u].w;
    precise float _299 = _281 * _297;
    precise float _300 = _281 * _298;
    precise float _301 = cbMtdParam._m0[39u].y + _299;
    precise float _302 = cbMtdParam._m0[39u].w + _300;
    precise float _312 = cbPerFrame._m0[22u].x * cbMtdParam._m0[19u].z;
    precise float _313 = cbMtdParam._m0[35u].z * _312;
    precise float _314 = cbMtdParam._m0[35u].w * _312;
    precise float _317 = _228 * cbMtdParam._m0[35u].x;
    precise float _318 = _239 * cbMtdParam._m0[35u].y;
    precise float _319 = _317 + _313;
    precise float _320 = _314 + _318;
    precise float _327 = _319 * cbTextureTilingScale._m0[2u].x;
    precise float _328 = cbTextureTilingScale._m0[2u].y * _320;
    precise float _329 = cbTextureTilingScale._m0[2u].z + _327;
    precise float _330 = cbTextureTilingScale._m0[2u].w + _328;
    vec4 _334 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(_329, _330), 0.0);
    float _337 = _334.z;
    precise float _338 = _301 * _337;
    precise float _339 = _302 * _337;
    precise float _348 = cbMtdParam._m0[41u].z * cbMtdParam._m0[25u].z;
    precise float _349 = cbMtdParam._m0[42u].x * cbMtdParam._m0[25u].z;
    precise float _350 = _348 - cbMtdParam._m0[41u].z;
    precise float _351 = _349 - cbMtdParam._m0[42u].x;
    precise float _352 = _281 * _350;
    precise float _353 = _281 * _351;
    precise float _354 = cbMtdParam._m0[41u].z + _352;
    precise float _355 = cbMtdParam._m0[42u].x + _353;
    precise float _361 = _312 * cbMtdParam._m0[31u].x;
    precise float _362 = _312 * cbMtdParam._m0[31u].y;
    precise float _368 = _228 * cbMtdParam._m0[38u].x;
    precise float _369 = _239 * cbMtdParam._m0[38u].y;
    precise float _370 = _361 + _368;
    precise float _371 = _362 + _369;
    precise float _378 = _370 * cbTextureTilingScale._m0[0u].x;
    precise float _379 = cbTextureTilingScale._m0[0u].y * _371;
    precise float _380 = cbTextureTilingScale._m0[0u].z + _378;
    precise float _381 = cbTextureTilingScale._m0[0u].w + _379;
    precise float _388 = _312 * cbMtdParam._m0[31u].z;
    precise float _389 = _312 * cbMtdParam._m0[31u].w;
    precise float _390 = _368 + _388;
    precise float _391 = _369 + _389;
    precise float _392 = _390 * cbTextureTilingScale._m0[0u].x;
    precise float _393 = cbTextureTilingScale._m0[0u].y * _391;
    precise float _394 = cbTextureTilingScale._m0[0u].z + _392;
    precise float _395 = cbTextureTilingScale._m0[0u].w + _393;
    precise float _399 = textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(_380, _381), 0.0).w * textureLod(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(_394, _395), 0.0).w;
    precise float _400 = _354 * _399;
    precise float _401 = _355 * _399;
    precise float _402 = _338 + _400;
    precise float _403 = _339 + _401;
    precise float _418 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _459 = _127 + _402;
    precise float _460 = _129 + _403;
    precise float _466 = _459 - cbvModelParam._m0[8u].x;
    precise float _467 = _460 - cbvModelParam._m0[8u].y;
    precise float _483 = dot(vec2(_466, _467), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _484 = dot(vec2(_466, _467), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _487 = cbMtdParam._m0[41u].x - cbMtdParam._m0[39u].z;
    precise float _488 = _281 * _487;
    precise float _489 = cbMtdParam._m0[39u].z + _488;
    precise float _490 = _489 * _337;
    precise float _492 = cbMtdParam._m0[41u].w * cbMtdParam._m0[25u].z;
    precise float _493 = _492 - cbMtdParam._m0[41u].w;
    precise float _494 = _281 * _493;
    precise float _495 = cbMtdParam._m0[41u].w + _494;
    precise float _496 = _495 * _399;
    precise float _497 = _490 + _496;
    precise float _498 = _128 + _497;
    vec4 _500 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_483, _484), 0.0);
    float _502 = _500.x;
    precise float _503 = _502 * 0.0;
    precise float _504 = _459 + _503;
    precise float _505 = _498 + _502;
    precise float _506 = _460 + _503;
    float _544;
    float _545;
    float _546;
    if (((((dot(vec4(_504, _505, _506, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_504, _505, _506, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_504, _505, _506, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_504, _505, _506, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[73u])) > _418) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[74u])) > _418)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[75u])) > _418)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[76u])) > _418))))
    {
        precise float _527 = _504 - _127;
        precise float _528 = _505 - _128;
        precise float _529 = _506 - _129;
        float _534 = inversesqrt(dot(vec3(_527, _528, _529), vec3(_527, _528, _529)));
        precise float _535 = _527 * _534;
        precise float _536 = _528 * _534;
        precise float _537 = _529 * _534;
        precise float _538 = _535 * cbMtdParam._m0[4u].y;
        precise float _539 = _536 * cbMtdParam._m0[4u].y;
        precise float _540 = _537 * cbMtdParam._m0[4u].y;
        precise float _541 = _127 + _538;
        precise float _542 = _128 + _539;
        precise float _543 = _129 + _540;
        _544 = _541;
        _545 = _542;
        _546 = _543;
    }
    else
    {
        _544 = _504;
        _545 = _505;
        _546 = _506;
    }
    precise float _552 = _544 - cbSceneParam._m0[3u].x;
    precise float _553 = _545 - cbSceneParam._m0[3u].y;
    precise float _554 = _546 - cbSceneParam._m0[3u].z;
    precise float _582 = _552 * cbSceneParam._m0[24u].x;
    precise float _583 = _553 * cbSceneParam._m0[24u].y;
    precise float _584 = _583 + _582;
    precise float _585 = _554 * cbSceneParam._m0[24u].z;
    precise float _586 = _585 + _584;
    precise float _587 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _588 = _587 + _586;
    precise float _589 = _552 * cbSceneParam._m0[25u].x;
    precise float _590 = _553 * cbSceneParam._m0[25u].y;
    precise float _591 = _590 + _589;
    precise float _592 = _554 * cbSceneParam._m0[25u].z;
    precise float _593 = _592 + _591;
    precise float _594 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _595 = _594 + _593;
    precise float _596 = _552 * cbSceneParam._m0[26u].x;
    precise float _597 = _553 * cbSceneParam._m0[26u].y;
    precise float _598 = _597 + _596;
    precise float _599 = _554 * cbSceneParam._m0[26u].z;
    precise float _600 = _599 + _598;
    precise float _601 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _602 = _601 + _600;
    precise float _603 = _552 * cbSceneParam._m0[27u].x;
    precise float _604 = _553 * cbSceneParam._m0[27u].y;
    precise float _605 = _604 + _603;
    precise float _606 = _554 * cbSceneParam._m0[27u].z;
    precise float _607 = _606 + _605;
    precise float _608 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _609 = _608 + _607;
    gl_Position.x = _588;
    gl_Position.y = _595;
    gl_Position.z = _602;
    gl_Position.w = _609;
    POSITION_1.x = _588;
    POSITION_1.y = _595;
    POSITION_1.z = _602;
    POSITION_1.w = _609;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_2.x = _228;
    TEXCOORD_2.y = _239;
    TEXCOORD_2.z = _483;
    TEXCOORD_2.w = _484;
    TEXCOORD_3.x = _280;
    TEXCOORD_3.y = _281;
    TEXCOORD_3.z = _282;
    TEXCOORD_3.w = _283;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = dot(vec4(_588, _595, _602, _609), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_588, _595, _602, _609), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


