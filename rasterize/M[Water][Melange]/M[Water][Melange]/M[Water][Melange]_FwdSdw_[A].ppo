#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 52) uniform texture2D g_ScreenSpaceShadowTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Water_Melange_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Water_Melange_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1952;
float _4640;
float _4641;
float _4642;
float _4643;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _236 = _235 * _227;
    float _237 = _235 * _228;
    float _238 = _235 * _229;
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = _242 * NORMAL.x;
    float _244 = _242 * NORMAL.y;
    float _245 = _242 * NORMAL.z;
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _250 = _249 * TANGENT.x;
    float _251 = _249 * TANGENT.y;
    float _252 = _249 * TANGENT.z;
    float _257;
    float _258;
    float _259;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _257 = (-0.0) - _243;
        _258 = (-0.0) - _244;
        _259 = (-0.0) - _245;
    }
    else
    {
        _257 = _243;
        _258 = _244;
        _259 = _245;
    }
    float _303 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _313 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _303);
    float _314 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _303);
    float _315 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _303);
    float _331 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _333 = (sqrt(((_313 * _313) + (_314 * _314)) + (_315 * _315)) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0)));
    float _337 = _333 / cbMtdParam._m0[22u].z;
    float _338 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
    float _339 = isnan(8.0) ? _338 : (isnan(_338) ? 8.0 : min(_338, 8.0));
    float _346 = cbMtdParam._m0[10u].x * _339;
    float _347 = cbMtdParam._m0[10u].y * _339;
    float _348 = cbMtdParam._m0[10u].z * _339;
    float _349 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _350 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _351 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _362 = cbMtdParam._m0[21u].y + _333;
    float _366 = _362 * cbMtdParam._m0[23u].z;
    float _4697 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    vec4 _384 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _387 = _384.x;
    float _410 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _387)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _387))) - POSITION_1.w) / cbMtdParam._m0[20u].x;
    float _4708 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _411 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
    float _416 = 1.0 - (isnan(cbMtdParam._m0[25u].y) ? _411 : (isnan(_411) ? cbMtdParam._m0[25u].y : max(_411, cbMtdParam._m0[25u].y)));
    float _418 = (cbMtdParam._m0[25u].x + TEXCOORD_3.x) - (_416 * cbMtdParam._m0[20u].z);
    float _429 = cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x;
    float _434 = cbMtdParam._m0[35u].x * TEXCOORD.x;
    float _435 = cbMtdParam._m0[35u].y * TEXCOORD.y;
    vec4 _449 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(((_434 + (_429 * cbMtdParam._m0[35u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_435 + (_429 * cbMtdParam._m0[35u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _451 = _449.x;
    float _452 = _449.y;
    float _4724 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _455 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _456 = _449.z - _455;
    float _4735 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _457 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _469 = (_457 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _471 = (_457 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _484 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_469 + (cbMtdParam._m0[30u].z * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_471 + (cbMtdParam._m0[30u].w * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _488 = _484.z;
    vec4 _499 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_469 + (cbMtdParam._m0[30u].x * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_471 + (cbMtdParam._m0[30u].y * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _503 = _499.z;
    float _506 = (_416 - _449.w) + (isnan(_503) ? _488 : (isnan(_488) ? _503 : max(_488, _503)));
    float _4751 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _508 = (_418 * (isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0)))) * (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0)));
    float _521 = (_508 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[14u].x * _457);
    float _522 = (_508 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[14u].y * _457);
    float _523 = (_508 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[14u].z * _457);
    vec4 _569 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].x * _429))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].y * _429))) + cbTextureTilingScale._m0[1u].w));
    float _574 = _569.z * 0.099999986588954925537109375;
    float _4762 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _576 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
    float _580 = cbMtdParam._m0[23u].x * _333;
    float _4773 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
    float _595 = (_521 + (isnan(0.07999999821186065673828125) ? _349 : (isnan(_349) ? 0.07999999821186065673828125 : min(_349, 0.07999999821186065673828125)))) + (_581 * (((1.0 - _521) - _576) + _574));
    float _597 = (_522 + (isnan(0.07999999821186065673828125) ? _350 : (isnan(_350) ? 0.07999999821186065673828125 : min(_350, 0.07999999821186065673828125)))) + (_581 * (((1.0 - _522) - _576) + _574));
    float _599 = (_523 + (isnan(0.07999999821186065673828125) ? _351 : (isnan(_351) ? 0.07999999821186065673828125 : min(_351, 0.07999999821186065673828125)))) + (_581 * (((1.0 - _523) + _574) - _576));
    float _4784 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    float _600 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _4795 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _601 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _4806 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _602 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
    float _608 = _333 / cbMtdParam._m0[24u].z;
    float _4817 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _611 = (1.0 - (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0)))) * cbMtdParam._m0[24u].y;
    float _618 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _455) + cbMtdParam._m0[19u].x;
    float _625 = (POSITION_1.w - cbMtdParam._m0[28u].z) * (1.0 / cbMtdParam._m0[28u].y);
    float _4828 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _626 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
    float _639 = (cbMtdParam._m0[33u].z * _429) + _434;
    float _640 = (cbMtdParam._m0[33u].w * _429) + _435;
    vec4 _668 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[32u].z * _429) + _434)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[32u].w * _429) + _435)) + cbTextureTilingScale._m0[3u].w));
    float _675 = (_668.x * 2.0) + (-1.0);
    float _677 = (_668.y * 2.0) + (-1.0);
    float _681 = 1.0 - dot(vec2(_675, _677), vec2(_675, _677));
    float _4839 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _683 = sqrt(isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0)));
    float _686 = fma(_683, _257, fma(_677, _250, _675 * _236));
    float _689 = fma(_683, _258, fma(_677, _251, _675 * _237));
    float _692 = fma(_683, _259, fma(_677, _252, _675 * _238));
    float _696 = inversesqrt(dot(vec3(_686, _689, _692), vec3(_686, _689, _692)));
    float _697 = cbPerFrame._m0[22u].x * 2.0;
    float _698 = _697 * cbMtdParam._m0[26u].w;
    float _702 = ((_686 * 0.5) * _696) + (-0.25);
    float _706 = ((_689 * 0.5) * _696) + (-0.25);
    float _707 = _706 * cbMtdParam._m0[27u].x;
    float _709 = (-0.0) - (cbMtdParam._m0[27u].x * _702);
    float _710 = fract(_698);
    float _712 = fract(_698 + 0.5);
    float _723 = abs((_710 * 2.0) + (-1.0));
    vec4 _740 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_710 * _709) + _639) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_707 * _710) + _640) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _742 = _740.x;
    float _743 = _740.y;
    float _744 = _740.z;
    vec4 _745 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_712 * _709) + _639) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_707 * _712) + _640) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _756 = ((_745.x - _742) * _723) + _742;
    float _757 = ((_745.y - _743) * _723) + _743;
    float _758 = ((_745.z - _744) * _723) + _744;
    float _772 = (cbMtdParam._m0[32u].x * _429) + _434;
    float _773 = (cbMtdParam._m0[32u].y * _429) + _435;
    float _776 = _697 * cbMtdParam._m0[26u].x;
    float _777 = _706 * cbMtdParam._m0[25u].w;
    float _779 = (-0.0) - (cbMtdParam._m0[25u].w * _702);
    float _780 = fract(_776);
    float _782 = fract(_776 + 0.5);
    float _793 = abs((_780 * 2.0) + (-1.0));
    vec4 _810 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_780 * _779) + _772) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_777 * _780) + _773) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _812 = _810.x;
    float _813 = _810.y;
    float _814 = _810.z;
    vec4 _815 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_782 * _779) + _772) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_777 * _782) + _773) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _855 = (cbMtdParam._m0[33u].x * _429) + _434;
    float _856 = (cbMtdParam._m0[33u].y * _429) + _435;
    float _859 = _697 * cbMtdParam._m0[26u].z;
    float _860 = _706 * cbMtdParam._m0[26u].y;
    float _862 = (-0.0) - (cbMtdParam._m0[26u].y * _702);
    float _863 = fract(_859);
    float _865 = fract(_859 + 0.5);
    float _876 = abs((_863 * 2.0) + (-1.0));
    vec4 _893 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_863 * _862) + _855) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_860 * _863) + _856) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _895 = _893.x;
    float _896 = _893.y;
    float _897 = _893.z;
    vec4 _898 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_865 * _862) + _855) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_860 * _865) + _856) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _918 = (((((_898.x - _895) * _876) + _895) * cbMtdParam._m0[16u].x) + (_756 * cbMtdParam._m0[17u].x)) + (((((cbMtdParam._m0[15u].x - cbMtdParam._m0[18u].x) * _756) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].x) * (((_815.x - _812) * _793) + _812));
    float _922 = (((((_898.y - _896) * _876) + _896) * cbMtdParam._m0[16u].y) + (_757 * cbMtdParam._m0[17u].y)) + (((((cbMtdParam._m0[15u].y - cbMtdParam._m0[18u].y) * _757) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].y) * (((_815.y - _813) * _793) + _813));
    float _926 = (((((_898.z - _897) * _876) + _897) * cbMtdParam._m0[16u].z) + (_758 * cbMtdParam._m0[17u].z)) + ((((cbMtdParam._m0[28u].w * _758) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_815.z - _814) * _793) + _814));
    float _930 = _918 - (_918 * _626);
    float _931 = _922 - (_922 * _626);
    float _932 = _926 - (_926 * _626);
    float _937 = (POSITION_1.w - cbMtdParam._m0[28u].x) * (1.0 / cbMtdParam._m0[27u].w);
    float _4850 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _938 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
    float _951 = (cbMtdParam._m0[34u].z * _429) + _434;
    float _952 = (cbMtdParam._m0[34u].w * _429) + _435;
    vec4 _964 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_951 * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (_952 * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _966 = _964.x;
    float _967 = _964.y;
    float _968 = _964.z;
    vec4 _989 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _951) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _952) + cbTextureTilingScale._m0[9u].w));
    float _4861 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _1031 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
    float _1041 = _333 / cbMtdParam._m0[22u].w;
    float _4872 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _1042 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
    float _1043 = _457 * 0.23999999463558197021484375;
    float _1045 = _457 * (-0.20000000298023223876953125);
    float _1056 = cbMtdParam._m0[37u].x * TEXCOORD.x;
    float _1057 = cbMtdParam._m0[37u].y * TEXCOORD.y;
    vec4 _1072 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].z * _429) + _1043) + _1056) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].w * _429) + _1045) + _1057) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1088 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1056 + _1043) + (cbMtdParam._m0[37u].z * _429)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1057 + _1045) + (cbMtdParam._m0[37u].w * _429)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1106 = (((_499.x + (-0.5)) * 0.5) + _484.x) + (((_1072.x + (-1.0)) + _1088.x) * cbMtdParam._m0[24u].w);
    float _1107 = (((_499.y + (-0.5)) * 0.5) + _484.y) + (((_1072.y + (-1.0)) + _1088.y) * cbMtdParam._m0[24u].w);
    float _1112 = ((_569.x - _1106) * _1042) + _1106;
    float _1113 = ((_569.y - _1107) * _1042) + _1107;
    float _1115 = _333 / cbMtdParam._m0[22u].y;
    float _4883 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _1116 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
    float _1132 = ((((_1031 * (0.5 - _451)) + _451) + (((_1112 + (-0.5)) + ((0.5 - _1112) * _1116)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1133 = ((((_1031 * (0.5 - _452)) + _452) + (((_1113 + (-0.5)) + ((0.5 - _1113) * _1116)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1134 = dot(vec2(_1132, _1133), vec2(_1132, _1133));
    float _4894 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
    float _1139 = sqrt(1.0 - (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0))));
    float _1143 = cbMtdParam._m0[23u].w * _362;
    float _4905 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
    float _1152 = cbMtdParam._m0[21u].w * _362;
    float _4916 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    float _1154 = (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0))) * cbMtdParam._m0[27u].y;
    float _4927 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    float _1155 = isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0));
    float _1170 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1171 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1181 = ((_1170 / cbSceneParam._m0[86u].x) * 2.0) + (-1.0);
    float _1182 = 1.0 - ((_1171 / cbSceneParam._m0[86u].y) * 2.0);
    vec4 _1183 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1170, _1171), 0.0);
    float _1185 = _1183.x;
    float _1225 = fma(_1185, cbSceneParam._m0[15u].z, fma(_1182, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * _1181)) + cbSceneParam._m0[15u].w;
    float _1226 = (fma(_1185, cbSceneParam._m0[12u].z, fma(_1182, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * _1181)) + cbSceneParam._m0[12u].w) / _1225;
    float _1227 = (fma(_1185, cbSceneParam._m0[13u].z, fma(_1182, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * _1181)) + cbSceneParam._m0[13u].w) / _1225;
    float _1228 = (fma(_1185, cbSceneParam._m0[14u].z, fma(_1182, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * _1181)) + cbSceneParam._m0[14u].w) / _1225;
    vec4 _1275 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((fma(_1228, cbSceneParam._m0[20u].z, fma(_1227, cbSceneParam._m0[20u].y, cbSceneParam._m0[20u].x * _1226)) + cbSceneParam._m0[20u].w) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].x * _429))) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((fma(_1228, cbSceneParam._m0[22u].z, fma(_1227, cbSceneParam._m0[22u].y, cbSceneParam._m0[22u].x * _1226)) + cbSceneParam._m0[22u].w) - cbSceneParam._m0[92u].z) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].y * _429))) + cbTextureTilingScale._m0[7u].w));
    float _1280 = _1275.x * cbMtdParam._m0[42u].y;
    float _1281 = _1275.y * cbMtdParam._m0[42u].z;
    float _1282 = _1275.z * cbMtdParam._m0[42u].w;
    float _1299 = ((cbMtdParam._m0[24u].x - cbMtdParam._m0[22u].x) * (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0)))) + cbMtdParam._m0[22u].x;
    float _1304 = _1132 - (_1299 * _1132);
    float _1305 = _1133 - (_1299 * _1133);
    float _1306 = (_1299 * (1.0 - _1139)) + _1139;
    float _1325 = fma(_1139, _257, fma(_1133, _250, _1132 * _236));
    float _1328 = fma(_1139, _258, fma(_1133, _251, _1132 * _237));
    float _1331 = fma(_1139, _259, fma(_1133, _252, _1132 * _238));
    float _1335 = inversesqrt(dot(vec3(_1325, _1328, _1331), vec3(_1325, _1328, _1331)));
    float _1336 = _1335 * _1325;
    float _1337 = _1335 * _1328;
    float _1338 = _1335 * _1331;
    float _1341 = fma(_1306, _257, fma(_1305, _250, _1304 * _236));
    float _1344 = fma(_1306, _258, fma(_1305, _251, _1304 * _237));
    float _1347 = fma(_1306, _259, fma(_1305, _252, _1304 * _238));
    float _1351 = inversesqrt(dot(vec3(_1341, _1344, _1347), vec3(_1341, _1344, _1347)));
    float _1352 = _1351 * _1341;
    float _1353 = _1351 * _1344;
    float _1354 = _1351 * _1347;
    float _4938 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _4949 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _1356 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
    float _4960 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _4971 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _4982 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _1373 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1413 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1422 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1413);
    float _1423 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1413);
    float _1424 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1413);
    float _1428 = inversesqrt(dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424)));
    float _1429 = _1422 * _1428;
    float _1430 = _1423 * _1428;
    float _1431 = _1424 * _1428;
    vec4 _1436 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1438 = _1436.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1637 = sqrt(((_1422 * _1422) + (_1423 * _1423)) + (_1424 * _1424));
        float _1643 = (cbMatDynParam._m0[5u].x * _1637) + cbMatDynParam._m0[5u].y;
        float _4993 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1644 = isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0));
        float _1648 = (cbMatDynParam._m0[5u].z * _1637) + cbMatDynParam._m0[5u].w;
        float _5004 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0))) - _1644)) + _1644) < ((_1438 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1448 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1449 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1451 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1460 = (_1451.x * 2.0) + (-1.0);
    float _1461 = (_1451.y * 2.0) + (-1.0);
    float _1462 = (_1451.z * 2.0) + (-1.0);
    float _1466 = inversesqrt(dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462)));
    float _1477 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1451.w;
    float _1484 = (((_1460 * _1466) - _1336) * _1477) + _1336;
    float _1485 = (((_1461 * _1466) - _1337) * _1477) + _1337;
    float _1486 = (((_1462 * _1466) - _1338) * _1477) + _1338;
    float _1504 = fma(_1486, cbSceneParam._m0[5u].z, fma(_1485, cbSceneParam._m0[5u].y, _1484 * cbSceneParam._m0[5u].x));
    float _1507 = fma(_1486, cbSceneParam._m0[6u].z, fma(_1485, cbSceneParam._m0[6u].y, _1484 * cbSceneParam._m0[6u].x));
    float _1510 = fma(_1486, cbSceneParam._m0[7u].z, fma(_1485, cbSceneParam._m0[7u].y, _1484 * cbSceneParam._m0[7u].x));
    uint _1523 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1524 = _1523 + 9u;
    uint _1525 = _1524 + uint(cbMatDynParam._m0[0u].w);
    float _1531 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0)))) * cbInstanceData._m0[_1525].x;
    float _1532 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0)))) * cbInstanceData._m0[_1525].y;
    float _1533 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0)))) * cbInstanceData._m0[_1525].z;
    float _5015 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
    float _1534 = isnan(1.0) ? _5015 : (isnan(_5015) ? 1.0 : min(_5015, 1.0));
    float _5026 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
    float _1535 = isnan(1.0) ? _5026 : (isnan(_5026) ? 1.0 : min(_5026, 1.0));
    float _5037 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
    float _1536 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
    vec4 _1544 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1448, cbSceneParam._m0[86u].y * _1449));
    float _1547 = _1544.x * TEXCOORD_3.w;
    float _1551 = abs(dot(vec3(_1429, _1430, _1431), vec3(_1484, _1485, _1486)));
    float _5048 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    float _1564 = dot(vec3(_1352, _1353, _1354), vec3(_1429, _1430, _1431)) * 2.0;
    float _1568 = (_1564 * _1352) - _1429;
    float _1569 = (_1564 * _1353) - _1430;
    float _1570 = (_1564 * _1354) - _1431;
    float _1574 = abs(dot(vec3(_1429, _1430, _1431), vec3(_1352, _1353, _1354)));
    float _5059 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
    float _1576 = sqrt(_1356);
    float _1588 = exp2((_1576 * 5.0) * log2(1.0 - ((isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1576 * 3.0));
    float _1619 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1623 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1627 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1951;
    float _1953;
    float _1954;
    float _1955;
    float _1956;
    float _1957;
    float _1958;
    float _1959;
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1680 = fma(_1627, cbModelParam._m0[26u].z, fma(_1623, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1619));
        float _1684 = fma(_1627, cbModelParam._m0[27u].z, fma(_1623, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1619));
        float _1688 = fma(_1627, cbModelParam._m0[28u].z, fma(_1623, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1619));
        float _1710 = _1619 + _1352;
        float _1711 = _1623 + _1353;
        float _1712 = _1627 + _1354;
        float _1722 = fma(_1712, cbModelParam._m0[26u].z, fma(_1711, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1710)) - _1680;
        float _1723 = fma(_1712, cbModelParam._m0[27u].z, fma(_1711, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1710)) - _1684;
        float _1724 = fma(_1712, cbModelParam._m0[28u].z, fma(_1711, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1710)) - _1688;
        float _1728 = inversesqrt(dot(vec3(_1722, _1723, _1724), vec3(_1722, _1723, _1724)));
        float _1740 = ((_1728 * _1722) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1680 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1741 = ((_1728 * _1723) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1684 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1742 = ((_1728 * _1724) / cbModelParam._m0[34u].z) + ((((((_1688 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1745 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1740, _1741, _1742), 0.0);
        vec4 _1752 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1740, _1741, _1742), 0.0);
        vec4 _1759 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1740, _1741, _1742), 0.0);
        vec4 _1766 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1740, _1741, _1742), 0.0);
        float _1779 = exp2((_1745.w + (-0.5)) * 20.0) * 2.0;
        float _1780 = _1779 * (_1745.x + (-0.5));
        float _1781 = _1779 * (_1745.y + (-0.5));
        float _1782 = _1779 * (_1745.z + (-0.5));
        float _1789 = exp2((_1752.w + (-0.5)) * 20.0) * 2.0;
        float _1790 = _1789 * (_1752.x + (-0.5));
        float _1791 = _1789 * (_1752.y + (-0.5));
        float _1792 = _1789 * (_1752.z + (-0.5));
        float _1799 = exp2((_1759.w + (-0.5)) * 20.0) * 2.0;
        float _1800 = _1799 * (_1759.x + (-0.5));
        float _1801 = _1799 * (_1759.y + (-0.5));
        float _1802 = _1799 * (_1759.z + (-0.5));
        float _1809 = exp2((_1766.w + (-0.5)) * 20.0) * 2.0;
        float _1810 = _1809 * (_1766.x + (-0.5));
        float _1811 = _1809 * (_1766.y + (-0.5));
        float _1812 = _1809 * (_1766.z + (-0.5));
        float _1813 = isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0));
        float _1814 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
        float _1815 = isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0));
        float _1816 = _1780 * 0.5;
        float _1817 = _1790 * 0.5;
        float _1818 = _1800 * 0.5;
        float _1819 = dot(vec3(_1816, _1817, _1818), vec3(_1816, _1817, _1818));
        float _1824 = (_1819 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1819);
        float _1833 = (dot(vec3(_1352, _1353, _1354), vec3(_1824 * _1816, _1824 * _1817, _1824 * _1818)) + 1.0) * 0.5;
        float _5085 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
        float _1843 = sqrt(((_1817 * _1817) + (_1816 * _1816)) + (_1818 * _1818)) / (_1813 + 9.9999997473787516355514526367188e-06);
        float _5096 = isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0));
        float _1844 = isnan(1.0) ? _5096 : (isnan(_5096) ? 1.0 : min(_5096, 1.0));
        float _1845 = _1844 * 2.0;
        float _1849 = (1.0 - _1844) / (_1844 + 1.0);
        float _5107 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1850 = isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0));
        float _1859 = ((((1.0 - _1850) * (_1845 + 2.0)) * exp2(log2(isnan(1.0) ? _5085 : (isnan(_5085) ? 1.0 : min(_5085, 1.0))) * (_1845 + 1.0))) + _1850) * _1813;
        float _1860 = _1781 * 0.5;
        float _1861 = _1791 * 0.5;
        float _1862 = _1801 * 0.5;
        float _1863 = dot(vec3(_1860, _1861, _1862), vec3(_1860, _1861, _1862));
        float _1868 = (_1863 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1863);
        float _1876 = (dot(vec3(_1352, _1353, _1354), vec3(_1868 * _1860, _1868 * _1861, _1868 * _1862)) + 1.0) * 0.5;
        float _5118 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
        float _1885 = sqrt(((_1861 * _1861) + (_1860 * _1860)) + (_1862 * _1862)) / (_1814 + 9.9999997473787516355514526367188e-06);
        float _5129 = isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0));
        float _1886 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
        float _1887 = _1886 * 2.0;
        float _1891 = (1.0 - _1886) / (_1886 + 1.0);
        float _5140 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1892 = isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0));
        float _1901 = ((((1.0 - _1892) * (_1887 + 2.0)) * exp2(log2(isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0))) * (_1887 + 1.0))) + _1892) * _1814;
        float _1902 = _1782 * 0.5;
        float _1903 = _1792 * 0.5;
        float _1904 = _1802 * 0.5;
        float _1905 = dot(vec3(_1902, _1903, _1904), vec3(_1902, _1903, _1904));
        float _1910 = (_1905 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1905);
        float _1918 = (dot(vec3(_1352, _1353, _1354), vec3(_1910 * _1902, _1910 * _1903, _1910 * _1904)) + 1.0) * 0.5;
        float _5151 = isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0));
        float _1927 = sqrt(((_1903 * _1903) + (_1902 * _1902)) + (_1904 * _1904)) / (_1815 + 9.9999997473787516355514526367188e-06);
        float _5162 = isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0));
        float _1928 = isnan(1.0) ? _5162 : (isnan(_5162) ? 1.0 : min(_5162, 1.0));
        float _1929 = _1928 * 2.0;
        float _1933 = (1.0 - _1928) / (_1928 + 1.0);
        float _5173 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1934 = isnan(1.0) ? _5173 : (isnan(_5173) ? 1.0 : min(_5173, 1.0));
        float _1943 = ((((1.0 - _1934) * (_1929 + 2.0)) * exp2(log2(isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0))) * (_1929 + 1.0))) + _1934) * _1815;
        _1951 = _1782;
        _1953 = _1781;
        _1954 = _1780;
        _1955 = _1792;
        _1956 = _1791;
        _1957 = _1790;
        _1958 = _1802;
        _1959 = _1801;
        _1960 = _1800;
        _1961 = _1815;
        _1962 = _1814;
        _1963 = _1813;
        _1964 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)));
        _1965 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0)));
        _1966 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0)));
    }
    else
    {
        _1951 = _1952;
        _1953 = _1952;
        _1954 = _1952;
        _1955 = _1952;
        _1956 = _1952;
        _1957 = _1952;
        _1958 = _1952;
        _1959 = _1952;
        _1960 = _1952;
        _1961 = _1952;
        _1962 = _1952;
        _1963 = _1952;
        _1964 = 0.0;
        _1965 = 0.0;
        _1966 = 0.0;
    }
    float _2260;
    float _2261;
    float _2262;
    float _2263;
    float _2264;
    float _2265;
    float _2266;
    float _2267;
    float _2268;
    float _2269;
    float _2270;
    float _2271;
    float _2272;
    float _2273;
    float _2274;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1993 = fma(_1627, cbModelParam._m0[30u].z, fma(_1623, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1619));
        float _1997 = fma(_1627, cbModelParam._m0[31u].z, fma(_1623, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1619));
        float _2001 = fma(_1627, cbModelParam._m0[32u].z, fma(_1623, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1619));
        float _2023 = _1619 + _1352;
        float _2024 = _1623 + _1353;
        float _2025 = _1627 + _1354;
        float _2035 = fma(_2025, cbModelParam._m0[30u].z, fma(_2024, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _2023)) - _1993;
        float _2036 = fma(_2025, cbModelParam._m0[31u].z, fma(_2024, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _2023)) - _1997;
        float _2037 = fma(_2025, cbModelParam._m0[32u].z, fma(_2024, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _2023)) - _2001;
        float _2041 = inversesqrt(dot(vec3(_2035, _2036, _2037), vec3(_2035, _2036, _2037)));
        float _2053 = ((_2041 * _2035) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1993 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2054 = ((_2041 * _2036) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1997 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2055 = ((_2041 * _2037) / cbModelParam._m0[35u].z) + ((((((_2001 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2057 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2053, _2054, _2055), 0.0);
        vec4 _2064 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2053, _2054, _2055), 0.0);
        vec4 _2071 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2053, _2054, _2055), 0.0);
        vec4 _2078 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2053, _2054, _2055), 0.0);
        float _2090 = exp2((_2057.w + (-0.5)) * 20.0) * 2.0;
        float _2091 = _2090 * (_2057.x + (-0.5));
        float _2092 = _2090 * (_2057.y + (-0.5));
        float _2093 = _2090 * (_2057.z + (-0.5));
        float _2100 = exp2((_2064.w + (-0.5)) * 20.0) * 2.0;
        float _2101 = _2100 * (_2064.x + (-0.5));
        float _2102 = _2100 * (_2064.y + (-0.5));
        float _2103 = _2100 * (_2064.z + (-0.5));
        float _2110 = exp2((_2071.w + (-0.5)) * 20.0) * 2.0;
        float _2111 = _2110 * (_2071.x + (-0.5));
        float _2112 = _2110 * (_2071.y + (-0.5));
        float _2113 = _2110 * (_2071.z + (-0.5));
        float _2120 = exp2((_2078.w + (-0.5)) * 20.0) * 2.0;
        float _2121 = _2120 * (_2078.x + (-0.5));
        float _2122 = _2120 * (_2078.y + (-0.5));
        float _2123 = _2120 * (_2078.z + (-0.5));
        float _2124 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
        float _2125 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
        float _2126 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
        float _2127 = _2091 * 0.5;
        float _2128 = _2101 * 0.5;
        float _2129 = _2111 * 0.5;
        float _2130 = dot(vec3(_2127, _2128, _2129), vec3(_2127, _2128, _2129));
        float _2135 = (_2130 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2130);
        float _2143 = (dot(vec3(_1352, _1353, _1354), vec3(_2135 * _2127, _2135 * _2128, _2135 * _2129)) + 1.0) * 0.5;
        float _5214 = isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0));
        float _2152 = sqrt(((_2128 * _2128) + (_2127 * _2127)) + (_2129 * _2129)) / (_2124 + 9.9999997473787516355514526367188e-06);
        float _5225 = isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0));
        float _2153 = isnan(1.0) ? _5225 : (isnan(_5225) ? 1.0 : min(_5225, 1.0));
        float _2154 = _2153 * 2.0;
        float _2158 = (1.0 - _2153) / (_2153 + 1.0);
        float _5236 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
        float _2159 = isnan(1.0) ? _5236 : (isnan(_5236) ? 1.0 : min(_5236, 1.0));
        float _2168 = ((((1.0 - _2159) * (_2154 + 2.0)) * exp2(log2(isnan(1.0) ? _5214 : (isnan(_5214) ? 1.0 : min(_5214, 1.0))) * (_2154 + 1.0))) + _2159) * _2124;
        float _2169 = _2092 * 0.5;
        float _2170 = _2102 * 0.5;
        float _2171 = _2112 * 0.5;
        float _2172 = dot(vec3(_2169, _2170, _2171), vec3(_2169, _2170, _2171));
        float _2177 = (_2172 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2172);
        float _2185 = (dot(vec3(_1352, _1353, _1354), vec3(_2177 * _2169, _2177 * _2170, _2177 * _2171)) + 1.0) * 0.5;
        float _5247 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
        float _2194 = sqrt(((_2170 * _2170) + (_2169 * _2169)) + (_2171 * _2171)) / (_2125 + 9.9999997473787516355514526367188e-06);
        float _5258 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
        float _2195 = isnan(1.0) ? _5258 : (isnan(_5258) ? 1.0 : min(_5258, 1.0));
        float _2196 = _2195 * 2.0;
        float _2200 = (1.0 - _2195) / (_2195 + 1.0);
        float _5269 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
        float _2201 = isnan(1.0) ? _5269 : (isnan(_5269) ? 1.0 : min(_5269, 1.0));
        float _2210 = ((((1.0 - _2201) * (_2196 + 2.0)) * exp2(log2(isnan(1.0) ? _5247 : (isnan(_5247) ? 1.0 : min(_5247, 1.0))) * (_2196 + 1.0))) + _2201) * _2125;
        float _2211 = _2093 * 0.5;
        float _2212 = _2103 * 0.5;
        float _2213 = _2113 * 0.5;
        float _2214 = dot(vec3(_2211, _2212, _2213), vec3(_2211, _2212, _2213));
        float _2219 = (_2214 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2214);
        float _2227 = (dot(vec3(_1352, _1353, _1354), vec3(_2219 * _2211, _2219 * _2212, _2219 * _2213)) + 1.0) * 0.5;
        float _5280 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
        float _2236 = sqrt(((_2212 * _2212) + (_2211 * _2211)) + (_2213 * _2213)) / (_2126 + 9.9999997473787516355514526367188e-06);
        float _5291 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
        float _2237 = isnan(1.0) ? _5291 : (isnan(_5291) ? 1.0 : min(_5291, 1.0));
        float _2238 = _2237 * 2.0;
        float _2242 = (1.0 - _2237) / (_2237 + 1.0);
        float _5302 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
        float _2243 = isnan(1.0) ? _5302 : (isnan(_5302) ? 1.0 : min(_5302, 1.0));
        float _2252 = ((((1.0 - _2243) * (_2238 + 2.0)) * exp2(log2(isnan(1.0) ? _5280 : (isnan(_5280) ? 1.0 : min(_5280, 1.0))) * (_2238 + 1.0))) + _2243) * _2126;
        _2260 = _2093;
        _2261 = _2092;
        _2262 = _2091;
        _2263 = _2103;
        _2264 = _2102;
        _2265 = _2101;
        _2266 = _2113;
        _2267 = _2112;
        _2268 = _2111;
        _2269 = _2126;
        _2270 = _2125;
        _2271 = _2124;
        _2272 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0)));
        _2273 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0)));
        _2274 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0)));
    }
    else
    {
        _2260 = _1952;
        _2261 = _1952;
        _2262 = _1952;
        _2263 = _1952;
        _2264 = _1952;
        _2265 = _1952;
        _2266 = _1952;
        _2267 = _1952;
        _2268 = _1952;
        _2269 = _1952;
        _2270 = _1952;
        _2271 = _1952;
        _2272 = 0.0;
        _2273 = 0.0;
        _2274 = 0.0;
    }
    float _2284 = (cbModelParam._m0[1u].x * (_2272 - _1964)) + _1964;
    float _2285 = (cbModelParam._m0[1u].x * (_2273 - _1965)) + _1965;
    float _2286 = (cbModelParam._m0[1u].x * (_2274 - _1966)) + _1966;
    float _2307 = fma(_2286, cbSceneParam._m0[89u].z, fma(_2285, cbSceneParam._m0[89u].y, _2284 * cbSceneParam._m0[89u].x));
    float _2310 = fma(_2286, cbSceneParam._m0[90u].z, fma(_2285, cbSceneParam._m0[90u].y, _2284 * cbSceneParam._m0[90u].x));
    float _2313 = fma(_2286, cbSceneParam._m0[91u].z, fma(_2285, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2284));
    float _2326 = _1568 * 0.5;
    float _2327 = _1569 * 0.5;
    float _2328 = _1570 * 0.5;
    float _2329 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_2262, _2265, _2268, _2271));
    float _2332 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_2261, _2264, _2267, _2270));
    float _2335 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_2260, _2263, _2266, _2269));
    float _2369;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2342 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_1951, _1955, _1958, _1961));
        float _2346 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_1953, _1956, _1959, _1962));
        float _2350 = dot(vec4(_2326, _2327, _2328, 1.0), vec4(_1954, _1957, _1960, _1963));
        float _2357 = dot(vec4(cbModelParam._m0[39u]), vec4(_2326, _2327, _2328, 1.0));
        _2369 = dot(vec3(isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0)), isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0)), isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2357) ? 0.0 : (isnan(0.0) ? _2357 : max(0.0, _2357))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2369 = 1.0;
    }
    float _2380;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2371 = dot(vec4(cbModelParam._m0[40u]), vec4(_2326, _2327, _2328, 1.0));
        _2380 = dot(vec3(isnan(0.0) ? _2329 : (isnan(_2329) ? 0.0 : max(_2329, 0.0)), isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0)), isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2371) ? 0.0 : (isnan(0.0) ? _2371 : max(0.0, _2371))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2380 = 1.0;
    }
    float _2384 = (_2380 * cbModelParam._m0[1u].x) + (_2369 * (1.0 - cbModelParam._m0[1u].x));
    float _2394 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1356);
    float _2395 = isnan(_2394) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2394 : min(cbModelParam._m0[25u].z, _2394));
    float _2475;
    float _2477;
    float _2479;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2442 = fma(_1627, cbModelParam._m0[13u].z, fma(_1623, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1619)) + cbModelParam._m0[13u].w;
        float _2446 = fma(_1627, cbModelParam._m0[14u].z, fma(_1623, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1619)) + cbModelParam._m0[14u].w;
        float _2450 = fma(_1627, cbModelParam._m0[15u].z, fma(_1623, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1619)) + cbModelParam._m0[15u].w;
        float _2453 = fma(_1570, cbModelParam._m0[13u].z, fma(_1569, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1568));
        float _2456 = fma(_1570, cbModelParam._m0[14u].z, fma(_1569, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1568));
        float _2459 = fma(_1570, cbModelParam._m0[15u].z, fma(_1569, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1568));
        float _2487;
        if (_2453 > 0.0)
        {
            _2487 = abs((1.0 - _2442) / _2453);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2453 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2442 + 1.0) / _2453);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2487 = frontier_phi_19_17_ladder;
        }
        float _2695;
        if (_2456 > 0.0)
        {
            _2695 = abs((1.0 - _2446) / _2456);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2456 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2446 + 1.0) / _2456);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2695 = frontier_phi_28_24_ladder;
        }
        float _3140;
        if (_2459 > 0.0)
        {
            _3140 = abs((1.0 - _2450) / _2459);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2459 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2450 + 1.0) / _2459);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _3140 = frontier_phi_40_35_ladder;
        }
        float _3142 = isnan(_2695) ? _2487 : (isnan(_2487) ? _2695 : min(_2487, _2695));
        float _3143 = isnan(_3140) ? _3142 : (isnan(_3142) ? _3140 : min(_3142, _3140));
        float _3147 = (_3143 * _2453) + _2442;
        float _3148 = (_3143 * _2456) + _2446;
        float _3149 = (_3143 * _2459) + _2450;
        float _3150 = _3143 * 9.9999997473787516355514526367188e-05;
        float _3152 = (-1.0) - _3150;
        float _3154 = _3150 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_3149 > _3154) || ((_3149 < _3152) || ((_3148 > _3154) || ((_3148 < _3152) || ((_3147 < _3152) || (_3147 > _3154))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3460 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_3149, cbModelParam._m0[9u].z, fma(_3148, cbModelParam._m0[9u].y, _3147 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_3149, cbModelParam._m0[10u].z, fma(_3148, cbModelParam._m0[10u].y, _3147 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_3149, cbModelParam._m0[11u].z, fma(_3148, cbModelParam._m0[11u].y, _3147 * cbModelParam._m0[11u].x))), _2395);
            frontier_phi_18_40_ladder = _3460.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _3460.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _3460.x * cbModelParam._m0[1u].y;
        }
        _2475 = frontier_phi_18_40_ladder_2;
        _2477 = frontier_phi_18_40_ladder_1;
        _2479 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2463 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1568, _1569, _1570), _2395);
        _2475 = _2463.x * cbModelParam._m0[1u].y;
        _2477 = _2463.y * cbModelParam._m0[1u].y;
        _2479 = _2463.z * cbModelParam._m0[1u].y;
    }
    float _2483 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1356);
    float _2484 = isnan(_2483) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2483 : min(cbModelParam._m0[25u].w, _2483));
    float _2573;
    float _2575;
    float _2577;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2537 = fma(_1627, cbModelParam._m0[21u].z, fma(_1623, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1619)) + cbModelParam._m0[21u].w;
        float _2541 = fma(_1627, cbModelParam._m0[22u].z, fma(_1623, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1619)) + cbModelParam._m0[22u].w;
        float _2545 = fma(_1627, cbModelParam._m0[23u].z, fma(_1623, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1619)) + cbModelParam._m0[23u].w;
        float _2548 = fma(_1570, cbModelParam._m0[21u].z, fma(_1569, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1568));
        float _2551 = fma(_1570, cbModelParam._m0[22u].z, fma(_1569, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1568));
        float _2554 = fma(_1570, cbModelParam._m0[23u].z, fma(_1569, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1568));
        float _2700;
        if (_2548 > 0.0)
        {
            _2700 = abs((1.0 - _2537) / _2548);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2548 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2537 + 1.0) / _2548);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2700 = frontier_phi_30_26_ladder;
        }
        float _3167;
        if (_2551 > 0.0)
        {
            _3167 = abs((1.0 - _2541) / _2551);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2551 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2541 + 1.0) / _2551);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _3167 = frontier_phi_42_37_ladder;
        }
        float _3651;
        if (_2554 > 0.0)
        {
            _3651 = abs((1.0 - _2545) / _2554);
        }
        else
        {
            float frontier_phi_54_49_ladder;
            if (_2554 < 0.0)
            {
                frontier_phi_54_49_ladder = abs((_2545 + 1.0) / _2554);
            }
            else
            {
                frontier_phi_54_49_ladder = 5000.0;
            }
            _3651 = frontier_phi_54_49_ladder;
        }
        float _3653 = isnan(_3167) ? _2700 : (isnan(_2700) ? _3167 : min(_2700, _3167));
        float _3654 = isnan(_3651) ? _3653 : (isnan(_3653) ? _3651 : min(_3653, _3651));
        float _3658 = (_3654 * _2548) + _2537;
        float _3659 = (_3654 * _2551) + _2541;
        float _3660 = (_3654 * _2554) + _2545;
        float _3661 = _3654 * 9.9999997473787516355514526367188e-05;
        float _3662 = (-1.0) - _3661;
        float _3664 = _3661 + 1.0;
        float frontier_phi_27_54_ladder;
        float frontier_phi_27_54_ladder_1;
        float frontier_phi_27_54_ladder_2;
        if ((_3660 > _3664) || ((_3660 < _3662) || ((_3659 > _3664) || ((_3659 < _3662) || ((_3658 < _3662) || (_3658 > _3664))))))
        {
            frontier_phi_27_54_ladder = 0.0;
            frontier_phi_27_54_ladder_1 = 0.0;
            frontier_phi_27_54_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3871 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3660, cbModelParam._m0[17u].z, fma(_3659, cbModelParam._m0[17u].y, _3658 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3660, cbModelParam._m0[18u].z, fma(_3659, cbModelParam._m0[18u].y, _3658 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3660, cbModelParam._m0[19u].z, fma(_3659, cbModelParam._m0[19u].y, _3658 * cbModelParam._m0[19u].x))), _2484);
            frontier_phi_27_54_ladder = _3871.z * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_1 = _3871.y * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_2 = _3871.x * cbModelParam._m0[1u].z;
        }
        _2573 = frontier_phi_27_54_ladder_2;
        _2575 = frontier_phi_27_54_ladder_1;
        _2577 = frontier_phi_27_54_ladder;
    }
    else
    {
        vec4 _2557 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1568, _1569, _1570), _2484);
        _2573 = _2557.x * cbModelParam._m0[1u].z;
        _2575 = _2557.y * cbModelParam._m0[1u].z;
        _2577 = _2557.z * cbModelParam._m0[1u].z;
    }
    float _2589 = ((((1.0 - _1588) * ((_1576 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1588 * _1576)) * _1547;
    float _2590 = _2589 * ((cbModelParam._m0[1u].w * (_2573 - _2475)) + _2475);
    float _2591 = _2589 * ((cbModelParam._m0[1u].w * (_2575 - _2477)) + _2477);
    float _2592 = _2589 * ((cbModelParam._m0[1u].w * (_2577 - _2479)) + _2479);
    float _2595 = fma(_2592, cbSceneParam._m0[89u].z, fma(_2591, cbSceneParam._m0[89u].y, _2590 * cbSceneParam._m0[89u].x));
    float _2598 = fma(_2592, cbSceneParam._m0[90u].z, fma(_2591, cbSceneParam._m0[90u].y, _2590 * cbSceneParam._m0[90u].x));
    float _2601 = fma(_2592, cbSceneParam._m0[91u].z, fma(_2591, cbSceneParam._m0[91u].y, _2590 * cbSceneParam._m0[91u].x));
    float _2620 = (cbSceneParam._m0[88u].y * (1.0 - _1356)) + cbSceneParam._m0[88u].z;
    float _5428 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    vec4 _2624 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1448, _1449), (isnan(1.0) ? _5428 : (isnan(_5428) ? 1.0 : min(_5428, 1.0))) * 5.0);
    float _2640 = 1.0 - _2624.w;
    float _2674 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2678 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2682 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2686 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2687 = _2674 / _2686;
    float _2688 = _2678 / _2686;
    float _2689 = _2682 / _2686;
    float _2834;
    float _2835;
    float _2836;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2716 = ((uint(_2689 > cbSceneParam._m0[59u].y) + uint(_2689 > cbSceneParam._m0[59u].x)) + uint(_2689 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2717 = _2716 + 43u;
        uint _2724 = _2716 + 44u;
        uint _2732 = _2716 + 45u;
        uint _2740 = _2716 + 46u;
        float _2751 = fma(_2686, cbSceneParam._m0[_2717].w, fma(_2682, cbSceneParam._m0[_2717].z, fma(_2678, cbSceneParam._m0[_2717].y, _2674 * cbSceneParam._m0[_2717].x)));
        float _2755 = fma(_2686, cbSceneParam._m0[_2724].w, fma(_2682, cbSceneParam._m0[_2724].z, fma(_2678, cbSceneParam._m0[_2724].y, _2674 * cbSceneParam._m0[_2724].x)));
        float _2763 = fma(_2686, cbSceneParam._m0[_2740].w, fma(_2682, cbSceneParam._m0[_2740].z, fma(_2678, cbSceneParam._m0[_2740].y, _2674 * cbSceneParam._m0[_2740].x)));
        float _2767 = cbSceneParam._m0[33u].z * _2763;
        float _2769 = cbSceneParam._m0[33u].w * _2763;
        float _2772 = fma(_2686, cbSceneParam._m0[_2732].w, fma(_2682, cbSceneParam._m0[_2732].z, fma(_2678, cbSceneParam._m0[_2732].y, _2674 * cbSceneParam._m0[_2732].x))) / _2763;
        float _2820 = (cbSceneParam._m0[33u].x - sqrt(((_2688 * _2688) + (_2687 * _2687)) + (_2689 * _2689))) * cbSceneParam._m0[33u].y;
        float _5439 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        float _2827 = (isnan(1.0) ? _5439 : (isnan(_5439) ? 1.0 : min(_5439, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2767 + _2751) / _2763, (_2769 + _2755) / _2763), _2772), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2769 + _2751) / _2763, (_2755 - _2767) / _2763), _2772), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2751 - _2767) / _2763, (_2755 - _2769) / _2763), _2772), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2751 - _2769) / _2763, (_2767 + _2755) / _2763), _2772), 0.0)).x), vec4(0.25)));
        _2834 = 1.0 - (_2827 * cbSceneParam._m0[34u].x);
        _2835 = 1.0 - (_2827 * cbSceneParam._m0[34u].y);
        _2836 = 1.0 - (_2827 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2834 = 1.0;
        _2835 = 1.0;
        _2836 = 1.0;
    }
    float _2900;
    float _2902;
    float _2904;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2888 = fma(_2686, cbSceneParam._m0[63u].w, fma(_2682, cbSceneParam._m0[63u].z, fma(_2678, cbSceneParam._m0[63u].y, _2674 * cbSceneParam._m0[63u].x)));
        float _2889 = fma(_2686, cbSceneParam._m0[60u].w, fma(_2682, cbSceneParam._m0[60u].z, fma(_2678, cbSceneParam._m0[60u].y, _2674 * cbSceneParam._m0[60u].x))) / _2888;
        float _2890 = fma(_2686, cbSceneParam._m0[61u].w, fma(_2682, cbSceneParam._m0[61u].z, fma(_2678, cbSceneParam._m0[61u].y, _2674 * cbSceneParam._m0[61u].x))) / _2888;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2889 >= cbSceneParam._m0[64u].x) && (_2890 >= cbSceneParam._m0[64u].y)) && (_2889 <= cbSceneParam._m0[64u].z)) && (_2890 <= cbSceneParam._m0[64u].w))
        {
            float _3180 = fma(_2686, cbSceneParam._m0[62u].w, fma(_2682, cbSceneParam._m0[62u].z, fma(_2678, cbSceneParam._m0[62u].y, _2674 * cbSceneParam._m0[62u].x))) / _2888;
            float _3184 = isnan(cbSceneParam._m0[41u].w) ? _3180 : (isnan(_3180) ? cbSceneParam._m0[41u].w : max(_3180, cbSceneParam._m0[41u].w));
            float _3227 = (cbSceneParam._m0[33u].x - sqrt(((_2688 * _2688) + (_2687 * _2687)) + (_2689 * _2689))) * cbSceneParam._m0[33u].y;
            float _5455 = isnan(0.0) ? _3227 : (isnan(_3227) ? 0.0 : max(_3227, 0.0));
            float _3234 = (isnan(1.0) ? _5455 : (isnan(_5455) ? 1.0 : min(_5455, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2889, cbSceneParam._m0[33u].w + _2890), _3184), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2889, _2890 - cbSceneParam._m0[33u].z), _3184), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2889 - cbSceneParam._m0[33u].z, _2890 - cbSceneParam._m0[33u].w), _3184), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2889 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2890), _3184), 0.0)).x), vec4(0.25)));
            float _3238 = 1.0 - (_3234 * cbSceneParam._m0[34u].x);
            float _3239 = 1.0 - (_3234 * cbSceneParam._m0[34u].y);
            float _3240 = 1.0 - (_3234 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_3240) ? _2836 : (isnan(_2836) ? _3240 : min(_2836, _3240));
            frontier_phi_39_38_ladder_1 = isnan(_3239) ? _2835 : (isnan(_2835) ? _3239 : min(_2835, _3239));
            frontier_phi_39_38_ladder_2 = isnan(_3238) ? _2834 : (isnan(_2834) ? _3238 : min(_2834, _3238));
        }
        else
        {
            frontier_phi_39_38_ladder = _2836;
            frontier_phi_39_38_ladder_1 = _2835;
            frontier_phi_39_38_ladder_2 = _2834;
        }
        _2900 = frontier_phi_39_38_ladder_2;
        _2902 = frontier_phi_39_38_ladder_1;
        _2904 = frontier_phi_39_38_ladder;
    }
    else
    {
        _2900 = _2834;
        _2902 = _2835;
        _2904 = _2836;
    }
    uint _2906 = _1523 + 5u;
    uvec4 _2909 = floatBitsToUint(cbInstanceData._m0[_2906]);
    uint _2911 = _2909.x * 14u;
    uint _2912 = _2911 + 13u;
    float _2917 = _1547 + (-1.0);
    float _2920 = (cbLight._m0[_2912].x * _2917) + 1.0;
    float _2921 = (cbLight._m0[_2912].y * _2917) + 1.0;
    uint _2922 = _2911 + 5u;
    float _2928 = isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0));
    uint _2932 = _2911 + 4u;
    float _2941 = isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0));
    uint _2945 = _2911 | 1u;
    float _2956 = dot(vec3(cbLight._m0[_2911].xyz), vec3(_1484, _1485, _1486));
    float _2959 = dot(vec3(cbLight._m0[_2945].xyz), vec3(_1484, _1485, _1486));
    float _5491 = isnan(0.0) ? _2956 : (isnan(_2956) ? 0.0 : max(_2956, 0.0));
    float _5502 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0));
    float _2964 = (isnan(1.0) ? _5491 : (isnan(_5491) ? 1.0 : min(_5491, 1.0))) * 0.3183098733425140380859375;
    float _2966 = (isnan(1.0) ? _5502 : (isnan(_5502) ? 1.0 : min(_5502, 1.0))) * 0.3183098733425140380859375;
    float _2973 = ((cbLight._m0[_2922].x * _2928) * _2966) + (((cbLight._m0[_2932].x * _2900) * _2941) * _2964);
    float _2974 = ((_2928 * cbLight._m0[_2922].y) * _2966) + (((cbLight._m0[_2932].y * _2902) * _2941) * _2964);
    float _2975 = ((_2928 * cbLight._m0[_2922].z) * _2966) + (((cbLight._m0[_2932].z * _2904) * _2941) * _2964);
    uint _2977 = _2911 + 8u;
    float _2990 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2911].w)) * _1356) * 0.949999988079071044921875);
    float _2991 = _2990 * _2990;
    float _2992 = cbLight._m0[_2911].x + _1429;
    float _2993 = cbLight._m0[_2911].y + _1430;
    float _2994 = cbLight._m0[_2911].z + _1431;
    float _2998 = inversesqrt(dot(vec3(_2992, _2993, _2994), vec3(_2992, _2993, _2994)));
    float _2999 = _2998 * _2992;
    float _3000 = _2998 * _2993;
    float _3001 = _2998 * _2994;
    float _3002 = dot(vec3(_1484, _1485, _1486), vec3(cbLight._m0[_2911].xyz));
    float _5513 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0));
    float _3005 = isnan(1.0) ? _5513 : (isnan(_5513) ? 1.0 : min(_5513, 1.0));
    float _3006 = dot(vec3(_1484, _1485, _1486), vec3(_1429, _1430, _1431));
    float _5524 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
    float _3009 = isnan(1.0) ? _5524 : (isnan(_5524) ? 1.0 : min(_5524, 1.0));
    float _3010 = dot(vec3(_1484, _1485, _1486), vec3(_2999, _3000, _3001));
    float _5535 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
    float _3013 = isnan(1.0) ? _5535 : (isnan(_5535) ? 1.0 : min(_5535, 1.0));
    float _3014 = dot(vec3(cbLight._m0[_2911].xyz), vec3(_2999, _3000, _3001));
    float _5546 = isnan(0.0) ? _3014 : (isnan(_3014) ? 0.0 : max(_3014, 0.0));
    float _3018 = _2991 * _2991;
    float _3022 = ((_3013 * _3013) * (_3018 + (-1.0))) + 1.0;
    float _3033 = (exp2(log2(1.0 - (isnan(1.0) ? _5546 : (isnan(_5546) ? 1.0 : min(_5546, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _3034 = 1.0 - _2991;
    float _3045 = (0.5 / (((_3009 * ((_3005 * _3034) + _2991)) + 9.9999999392252902907785028219223e-09) + (((_3009 * _3034) + _2991) * _3005))) * _3005;
    float _5557 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
    float _3047 = (isnan(1.0) ? _5557 : (isnan(_5557) ? 1.0 : min(_5557, 1.0))) * (_3018 / ((_3022 * _3022) * 3.141590118408203125));
    uint _3061 = _2911 + 9u;
    float _3072 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2945].w)) * _1356) * 0.949999988079071044921875);
    float _3073 = _3072 * _3072;
    float _3074 = cbLight._m0[_2945].x + _1429;
    float _3075 = cbLight._m0[_2945].y + _1430;
    float _3076 = cbLight._m0[_2945].z + _1431;
    float _3080 = inversesqrt(dot(vec3(_3074, _3075, _3076), vec3(_3074, _3075, _3076)));
    float _3081 = _3080 * _3074;
    float _3082 = _3080 * _3075;
    float _3083 = _3080 * _3076;
    float _3084 = dot(vec3(_1484, _1485, _1486), vec3(cbLight._m0[_2945].xyz));
    float _5568 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
    float _3087 = isnan(1.0) ? _5568 : (isnan(_5568) ? 1.0 : min(_5568, 1.0));
    float _3088 = dot(vec3(_1484, _1485, _1486), vec3(_3081, _3082, _3083));
    float _5579 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
    float _3091 = isnan(1.0) ? _5579 : (isnan(_5579) ? 1.0 : min(_5579, 1.0));
    float _3092 = dot(vec3(cbLight._m0[_2945].xyz), vec3(_3081, _3082, _3083));
    float _5590 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0));
    float _3096 = _3073 * _3073;
    float _3100 = ((_3091 * _3091) * (_3096 + (-1.0))) + 1.0;
    float _3109 = (exp2(log2(1.0 - (isnan(1.0) ? _5590 : (isnan(_5590) ? 1.0 : min(_5590, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _3110 = 1.0 - _3073;
    float _3120 = (0.5 / (((_3009 * ((_3087 * _3110) + _3073)) + 9.9999999392252902907785028219223e-09) + (((_3009 * _3110) + _3073) * _3087))) * _3087;
    float _5601 = isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : max(_3120, 0.0));
    float _3122 = (isnan(1.0) ? _5601 : (isnan(_5601) ? 1.0 : min(_5601, 1.0))) * (_3096 / ((_3100 * _3100) * 3.141590118408203125));
    float _3132 = (((_3109 * cbLight._m0[_3061].x) * _3122) * _2928) + ((((cbLight._m0[_2977].x * _2900) * _3033) * _3047) * _2941);
    float _3133 = (((_3109 * cbLight._m0[_3061].y) * _3122) * _2928) + ((((cbLight._m0[_2977].y * _2902) * _3033) * _3047) * _2941);
    float _3134 = (((_3109 * cbLight._m0[_3061].z) * _3122) * _2928) + ((((cbLight._m0[_2977].z * _2904) * _3033) * _3047) * _2941);
    float _3296;
    float _3298;
    float _3300;
    float _3302;
    float _3304;
    float _3306;
    if (_2909.y == 0u)
    {
        uvec4 _3252 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3253 = _3252.x;
        uint _3264 = uint((float(_3252.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1449) / _3253))) + floor(float(uint(cbSceneParam._m0[85u].x * _1448) / _3253)));
        float _3274 = (log2(_2689 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3275 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
        uint _3278 = uint(isnan(14.0) ? _3275 : (isnan(_3275) ? 14.0 : min(_3275, 14.0)));
        uvec4 _3283 = texelFetch(g_lightClusterGridBuffer, int(((_3278 << 2u) + (_3264 << 6u)) >> 2u));
        uint _3284 = _3283.x;
        uint _3285 = _3252.z;
        float _3469;
        float _3471;
        float _3473;
        float _3475;
        float _3477;
        float _3479;
        if (((((1u << ((_3285 >> 4u) & 15u)) + 4294967295u) & _3284) == 0u) || ((_3285 & 240u) == 0u))
        {
            _3469 = 0.0;
            _3471 = 0.0;
            _3473 = 0.0;
            _3475 = 0.0;
            _3477 = 0.0;
            _3479 = 0.0;
        }
        else
        {
            float _3470;
            float _3472;
            float _3474;
            float _3476;
            float _3478;
            float _3480;
            float _3709 = 0.0;
            float _3710 = 0.0;
            float _3711 = 0.0;
            float _3712 = 0.0;
            float _3713 = 0.0;
            float _3714 = 0.0;
            uint _3715 = 0u;
            uint _3724;
            bool _3725;
            for (;;)
            {
                _3724 = texelFetch(g_lightClassification, int((((_3278 << 5u) + (_3264 << 9u)) + (_3715 << 2u)) >> 2u)).x;
                _3725 = _3724 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3725)
                {
                    frontier_phi_63_pred = _3714;
                    frontier_phi_63_pred_1 = _3713;
                    frontier_phi_63_pred_2 = _3712;
                    frontier_phi_63_pred_3 = _3711;
                    frontier_phi_63_pred_4 = _3710;
                    frontier_phi_63_pred_5 = _3709;
                }
                else
                {
                    float _3961;
                    float _3962;
                    float _3963;
                    float _3964;
                    float _3965;
                    float _3966;
                    uint _3967;
                    _3961 = _3709;
                    _3962 = _3710;
                    _3963 = _3711;
                    _3964 = _3712;
                    _3965 = _3713;
                    _3966 = _3714;
                    _3967 = _3724;
                    float _3876;
                    float _3877;
                    float _3878;
                    float _3879;
                    float _3880;
                    float _3881;
                    for (;;)
                    {
                        uint _3971 = uint(findLSB(_3967)) + (_3715 << 5u);
                        uint _3968 = (_3967 + 4294967295u) & _3967;
                        uint _3973 = _3971 * 48u;
                        vec4 _3987 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3973)).x, texelFetch(g_PointLightRenderingBuffer, int(_3973 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3973 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3973 + 3u)).x));
                        uint _3993 = (_3971 * 48u) + 4u;
                        vec4 _4006 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3993)).x, texelFetch(g_PointLightRenderingBuffer, int(_3993 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3993 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3993 + 3u)).x));
                        uint _4012 = (_3971 * 48u) + 8u;
                        vec3 _4023 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_4012)).x, texelFetch(g_PointLightRenderingBuffer, int(_4012 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_4012 + 2u)).x));
                        float _4027 = _3987.x - _2687;
                        float _4028 = _3987.y - _2688;
                        float _4029 = _3987.z - _2689;
                        float _4030 = dot(vec3(_4027, _4028, _4029), vec3(_4027, _4028, _4029));
                        float _4033 = inversesqrt(_4030);
                        float _4034 = _4033 * _4027;
                        float _4035 = _4033 * _4028;
                        float _4036 = _4033 * _4029;
                        float _4037 = dot(vec3(_1504, _1507, _1510), vec3(_4034, _4035, _4036));
                        float _4042 = 1.0 - (_4030 * _3987.w);
                        float _5622 = isnan(0.0) ? _4042 : (isnan(_4042) ? 0.0 : max(_4042, 0.0));
                        float _4043 = isnan(1.0) ? _5622 : (isnan(_5622) ? 1.0 : min(_5622, 1.0));
                        float _4044 = sqrt(_4030) * _4006.w;
                        float _4047 = 1.39999997615814208984375 / (_4044 + 1.39999997615814208984375);
                        float _4048 = _4047 * _4047;
                        float _4051 = ((1.0 - _4048) * _4037) + _4048;
                        float _4054 = _4044 * _4044;
                        float _4058 = ((isnan(0.0) ? _4051 : (isnan(_4051) ? 0.0 : max(_4051, 0.0))) * _4043) / ((_4054 * 0.699999988079071044921875) + 1.0);
                        float _4062 = (-0.0) - _2687;
                        float _4063 = (-0.0) - _2688;
                        float _4064 = (-0.0) - _2689;
                        float _4068 = inversesqrt(dot(vec3(_4062, _4063, _4064), vec3(_4062, _4063, _4064)));
                        float _4069 = _4068 * _4062;
                        float _4070 = _4068 * _4063;
                        float _4071 = _4068 * _4064;
                        float _4078 = exp2(log2(1.0 / ((_4054 * 3.5) + 5.0)) * 0.25);
                        float _4079 = 1.0 - _1576;
                        float _4086 = sqrt(1.0 - ((1.0 - (_4079 * _4079)) * (1.0 - (_4078 * _4078))));
                        float _4087 = _4086 * _4086;
                        float _4088 = _4087 * _4087;
                        float _4089 = _4069 + _4034;
                        float _4090 = _4070 + _4035;
                        float _4091 = _4071 + _4036;
                        float _4095 = inversesqrt(dot(vec3(_4089, _4090, _4091), vec3(_4089, _4090, _4091)));
                        float _4099 = dot(vec3(_1504, _1507, _1510), vec3(_4069, _4070, _4071));
                        float _5638 = isnan(0.0) ? _4099 : (isnan(_4099) ? 0.0 : max(_4099, 0.0));
                        float _4102 = isnan(1.0) ? _5638 : (isnan(_5638) ? 1.0 : min(_5638, 1.0));
                        float _4103 = dot(vec3(_1504, _1507, _1510), vec3(_4095 * _4089, _4095 * _4090, _4095 * _4091));
                        float _5649 = isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0));
                        float _4106 = isnan(1.0) ? _5649 : (isnan(_5649) ? 1.0 : min(_5649, 1.0));
                        float _4110 = ((_4106 * _4106) * (_4088 + (-1.0))) + 1.0;
                        float _4111 = _4047 * _4087;
                        float _4112 = _4111 * _4111;
                        float _4115 = ((1.0 - _4112) * _4037) + _4112;
                        float _5660 = isnan(0.0) ? _4115 : (isnan(_4115) ? 0.0 : max(_4115, 0.0));
                        float _4116 = isnan(1.0) ? _5660 : (isnan(_5660) ? 1.0 : min(_5660, 1.0));
                        float _4117 = 1.0 - _4087;
                        float _4127 = (0.5 / (((_4116 * ((_4102 * _4117) + _4087)) + 9.9999999392252902907785028219223e-09) + (((_4116 * _4117) + _4087) * _4102))) * _4116;
                        float _5671 = isnan(0.0) ? _4127 : (isnan(_4127) ? 0.0 : max(_4127, 0.0));
                        float _4138 = (((_4088 * 3.1415927410125732421875) * (isnan(1.0) ? _5671 : (isnan(_5671) ? 1.0 : min(_5671, 1.0)))) / ((_4110 * _4110) * ((_4054 * 2.1991131305694580078125) + 3.141590118408203125))) * _4043;
                        _3879 = (_4058 * _4006.x) + _3964;
                        _3880 = (_4058 * _4006.y) + _3965;
                        _3881 = (_4058 * _4006.z) + _3966;
                        _3876 = (_4138 * _4023.x) + _3961;
                        _3877 = (_4138 * _4023.y) + _3962;
                        _3878 = (_4138 * _4023.z) + _3963;
                        if (_3968 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3961 = _3876;
                            _3962 = _3877;
                            _3963 = _3878;
                            _3964 = _3879;
                            _3965 = _3880;
                            _3966 = _3881;
                            _3967 = _3968;
                        }
                    }
                    frontier_phi_63_pred = _3881;
                    frontier_phi_63_pred_1 = _3880;
                    frontier_phi_63_pred_2 = _3879;
                    frontier_phi_63_pred_3 = _3878;
                    frontier_phi_63_pred_4 = _3877;
                    frontier_phi_63_pred_5 = _3876;
                }
                _3480 = frontier_phi_63_pred;
                _3478 = frontier_phi_63_pred_1;
                _3476 = frontier_phi_63_pred_2;
                _3474 = frontier_phi_63_pred_3;
                _3472 = frontier_phi_63_pred_4;
                _3470 = frontier_phi_63_pred_5;
                uint _3716 = _3715 + 1u;
                if (_3716 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3709 = _3470;
                    _3710 = _3472;
                    _3711 = _3474;
                    _3712 = _3476;
                    _3713 = _3478;
                    _3714 = _3480;
                    _3715 = _3716;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3469 = _3470;
            _3471 = _3472;
            _3473 = _3474;
            _3475 = _3476;
            _3477 = _3478;
            _3479 = _3480;
        }
        uvec4 _3483 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3484 = _3483.z;
        uint _3486 = (_3484 >> 8u) & 15u;
        float _3677;
        float _3679;
        float _3681;
        float _3683;
        float _3685;
        float _3687;
        if (((4294967295u << _3486) & _3284) == 0u)
        {
            _3677 = _3469;
            _3679 = _3471;
            _3681 = _3473;
            _3683 = _3475;
            _3685 = _3477;
            _3687 = _3479;
        }
        else
        {
            float _3702 = inversesqrt(dot(vec3(_2687, _2688, _2689), vec3(_2687, _2688, _2689)));
            float _3703 = _3702 * _2687;
            float _3704 = _3702 * _2688;
            float _3705 = _3702 * _2689;
            float frontier_phi_56_57_ladder;
            float frontier_phi_56_57_ladder_1;
            float frontier_phi_56_57_ladder_2;
            float frontier_phi_56_57_ladder_3;
            float frontier_phi_56_57_ladder_4;
            float frontier_phi_56_57_ladder_5;
            if (_3486 < ((_3484 >> 12u) & 15u))
            {
                float _3678;
                float _3680;
                float _3682;
                float _3684;
                float _3686;
                float _3688;
                float _3944 = _3469;
                float _3945 = _3471;
                float _3946 = _3473;
                float _3947 = _3475;
                float _3948 = _3477;
                float _3949 = _3479;
                uint _3950 = _3486;
                uint _3959;
                bool _3960;
                for (;;)
                {
                    _3959 = texelFetch(g_lightClassification, int((((_3278 << 5u) + (_3264 << 9u)) + (_3950 << 2u)) >> 2u)).x;
                    _3960 = _3959 == 0u;
                    float frontier_phi_75_pred;
                    float frontier_phi_75_pred_1;
                    float frontier_phi_75_pred_2;
                    float frontier_phi_75_pred_3;
                    float frontier_phi_75_pred_4;
                    float frontier_phi_75_pred_5;
                    if (_3960)
                    {
                        frontier_phi_75_pred = _3948;
                        frontier_phi_75_pred_1 = _3947;
                        frontier_phi_75_pred_2 = _3946;
                        frontier_phi_75_pred_3 = _3945;
                        frontier_phi_75_pred_4 = _3944;
                        frontier_phi_75_pred_5 = _3949;
                    }
                    else
                    {
                        float _4186;
                        float _4187;
                        float _4188;
                        float _4189;
                        float _4190;
                        float _4191;
                        float _4488;
                        float _4489;
                        float _4490;
                        float _4491;
                        float _4492;
                        float _4493;
                        float _4208 = _3944;
                        float _4209 = _3945;
                        float _4210 = _3946;
                        float _4211 = _3947;
                        float _4212 = _3948;
                        float _4213 = _3949;
                        uint _4214 = _3959;
                        uint _4215;
                        vec4 _4240;
                        float _4241;
                        vec4 _4256;
                        vec3 _4268;
                        vec4 _4283;
                        vec4 _4298;
                        float _4344;
                        bool _4345;
                        for (;;)
                        {
                            uint _4225 = ((_3950 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_4214));
                            _4215 = (_4214 + 4294967295u) & _4214;
                            uint _4227 = _4225 * 40u;
                            _4240 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4227)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4227 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4227 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4227 + 3u)).x));
                            _4241 = _4240.w;
                            uint _4243 = (_4225 * 40u) + 4u;
                            _4256 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4243)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4243 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4243 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4243 + 3u)).x));
                            uint _4258 = (_4225 * 40u) + 8u;
                            _4268 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_4258)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4258 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4258 + 2u)).x));
                            uint _4270 = (_4225 * 40u) + 16u;
                            _4283 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4270)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4270 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4270 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4270 + 3u)).x));
                            uint _4285 = (_4225 * 40u) + 20u;
                            _4298 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4285)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4285 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4285 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4285 + 3u)).x));
                            uint _4300 = (_4225 * 40u) + 24u;
                            vec4 _4313 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4300)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4300 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4300 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4300 + 3u)).x));
                            uint _4319 = (_4225 * 40u) + 28u;
                            vec4 _4332 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4319)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4319 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4319 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4319 + 3u)).x));
                            _4344 = fma(_2689, _4332.z, fma(_2688, _4332.y, _4332.x * _2687)) + _4332.w;
                            _4345 = !((fma(_2689, _4313.z, fma(_2688, _4313.y, _4313.x * _2687)) + _4313.w) <= 0.0);
                            float frontier_phi_84_pred;
                            float frontier_phi_84_pred_1;
                            float frontier_phi_84_pred_2;
                            float frontier_phi_84_pred_3;
                            float frontier_phi_84_pred_4;
                            float frontier_phi_84_pred_5;
                            if (_4345)
                            {
                                float _4372 = _4240.x - _2687;
                                float _4373 = _4240.y - _2688;
                                float _4374 = _4240.z - _2689;
                                float _4375 = dot(vec3(_4372, _4373, _4374), vec3(_4372, _4373, _4374));
                                float _4378 = inversesqrt(_4375);
                                float _4379 = _4378 * _4372;
                                float _4380 = _4378 * _4373;
                                float _4381 = _4378 * _4374;
                                float _4385 = 1.0 - (_4375 / (_4241 * _4241));
                                float _5682 = isnan(0.0) ? _4385 : (isnan(_4385) ? 0.0 : max(_4385, 0.0));
                                float _4386 = isnan(1.0) ? _5682 : (isnan(_5682) ? 1.0 : min(_5682, 1.0));
                                float _4390 = sqrt(_4375) * _4256.w;
                                float _4392 = 1.39999997615814208984375 / (_4390 + 1.39999997615814208984375);
                                float _4393 = _4392 * _4392;
                                float _4396 = ((1.0 - _4393) * dot(vec3(_4379, _4380, _4381), vec3(_1504, _1507, _1510))) + _4393;
                                float _4399 = _4390 * _4390;
                                float _4403 = (fma(_2689, _4283.z, fma(_2688, _4283.y, _4283.x * _2687)) + _4283.w) / _4344;
                                float _4404 = (fma(_2689, _4298.z, fma(_2688, _4298.y, _4298.x * _2687)) + _4298.w) / _4344;
                                float _4408 = 1.0 - dot(vec2(_4403, _4404), vec2(_4403, _4404));
                                float _5698 = isnan(0.0) ? _4408 : (isnan(_4408) ? 0.0 : max(_4408, 0.0));
                                float _4409 = isnan(1.0) ? _5698 : (isnan(_5698) ? 1.0 : min(_5698, 1.0));
                                float _4410 = _4409 * (((isnan(0.0) ? _4396 : (isnan(_4396) ? 0.0 : max(_4396, 0.0))) * _4386) / ((_4399 * 0.699999988079071044921875) + 1.0));
                                float _4422 = exp2(log2(1.0 / ((_4399 * 3.5) + 5.0)) * 0.25);
                                float _4423 = 1.0 - _1576;
                                float _4430 = sqrt(1.0 - ((1.0 - (_4423 * _4423)) * (1.0 - (_4422 * _4422))));
                                float _4431 = _4430 * _4430;
                                float _4432 = _4431 * _4431;
                                float _4433 = _4379 - _3703;
                                float _4434 = _4380 - _3704;
                                float _4435 = _4381 - _3705;
                                float _4439 = inversesqrt(dot(vec3(_4433, _4434, _4435), vec3(_4433, _4434, _4435)));
                                float _4443 = dot(vec3(_1504, _1507, _1510), vec3((-0.0) - _3703, (-0.0) - _3704, (-0.0) - _3705));
                                float _5709 = isnan(0.0) ? _4443 : (isnan(_4443) ? 0.0 : max(_4443, 0.0));
                                float _4446 = isnan(1.0) ? _5709 : (isnan(_5709) ? 1.0 : min(_5709, 1.0));
                                float _4447 = dot(vec3(_1504, _1507, _1510), vec3(_4439 * _4433, _4439 * _4434, _4439 * _4435));
                                float _5720 = isnan(0.0) ? _4447 : (isnan(_4447) ? 0.0 : max(_4447, 0.0));
                                float _4450 = isnan(1.0) ? _5720 : (isnan(_5720) ? 1.0 : min(_5720, 1.0));
                                float _4454 = ((_4450 * _4450) * (_4432 + (-1.0))) + 1.0;
                                float _4455 = _4392 * _4431;
                                float _4456 = _4455 * _4455;
                                float _4462 = ((1.0 - _4456) * dot(vec3(_1504, _1507, _1510), vec3(_4379, _4380, _4381))) + _4456;
                                float _5731 = isnan(0.0) ? _4462 : (isnan(_4462) ? 0.0 : max(_4462, 0.0));
                                float _4463 = isnan(1.0) ? _5731 : (isnan(_5731) ? 1.0 : min(_5731, 1.0));
                                float _4464 = 1.0 - _4431;
                                float _4474 = (0.5 / (((_4463 * ((_4446 * _4464) + _4431)) + 9.9999999392252902907785028219223e-09) + (((_4463 * _4464) + _4431) * _4446))) * _4463;
                                float _5742 = isnan(0.0) ? _4474 : (isnan(_4474) ? 0.0 : max(_4474, 0.0));
                                float _4484 = (_4409 * _4386) * (((_4432 * 3.1415927410125732421875) * (isnan(1.0) ? _5742 : (isnan(_5742) ? 1.0 : min(_5742, 1.0)))) / ((_4454 * _4454) * ((_4399 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_84_pred = _4410 * _4256.z;
                                frontier_phi_84_pred_1 = _4410 * _4256.y;
                                frontier_phi_84_pred_2 = _4410 * _4256.x;
                                frontier_phi_84_pred_3 = _4484 * _4268.z;
                                frontier_phi_84_pred_4 = _4484 * _4268.y;
                                frontier_phi_84_pred_5 = _4484 * _4268.x;
                            }
                            else
                            {
                                frontier_phi_84_pred = 0.0;
                                frontier_phi_84_pred_1 = 0.0;
                                frontier_phi_84_pred_2 = 0.0;
                                frontier_phi_84_pred_3 = 0.0;
                                frontier_phi_84_pred_4 = 0.0;
                                frontier_phi_84_pred_5 = 0.0;
                            }
                            _4493 = frontier_phi_84_pred;
                            _4492 = frontier_phi_84_pred_1;
                            _4491 = frontier_phi_84_pred_2;
                            _4490 = frontier_phi_84_pred_3;
                            _4489 = frontier_phi_84_pred_4;
                            _4488 = frontier_phi_84_pred_5;
                            _4189 = _4491 + _4211;
                            _4190 = _4492 + _4212;
                            _4191 = _4493 + _4213;
                            _4186 = _4488 + _4208;
                            _4187 = _4489 + _4209;
                            _4188 = _4490 + _4210;
                            if (_4215 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _4208 = _4186;
                                _4209 = _4187;
                                _4210 = _4188;
                                _4211 = _4189;
                                _4212 = _4190;
                                _4213 = _4191;
                                _4214 = _4215;
                                continue;
                            }
                        }
                        frontier_phi_75_pred = _4190;
                        frontier_phi_75_pred_1 = _4189;
                        frontier_phi_75_pred_2 = _4188;
                        frontier_phi_75_pred_3 = _4187;
                        frontier_phi_75_pred_4 = _4186;
                        frontier_phi_75_pred_5 = _4191;
                    }
                    _3686 = frontier_phi_75_pred;
                    _3684 = frontier_phi_75_pred_1;
                    _3682 = frontier_phi_75_pred_2;
                    _3680 = frontier_phi_75_pred_3;
                    _3678 = frontier_phi_75_pred_4;
                    _3688 = frontier_phi_75_pred_5;
                    uint _3951 = _3950 + 1u;
                    if (_3951 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3944 = _3678;
                        _3945 = _3680;
                        _3946 = _3682;
                        _3947 = _3684;
                        _3948 = _3686;
                        _3949 = _3688;
                        _3950 = _3951;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_56_57_ladder = _3688;
                frontier_phi_56_57_ladder_1 = _3686;
                frontier_phi_56_57_ladder_2 = _3684;
                frontier_phi_56_57_ladder_3 = _3682;
                frontier_phi_56_57_ladder_4 = _3680;
                frontier_phi_56_57_ladder_5 = _3678;
            }
            else
            {
                frontier_phi_56_57_ladder = _3479;
                frontier_phi_56_57_ladder_1 = _3477;
                frontier_phi_56_57_ladder_2 = _3475;
                frontier_phi_56_57_ladder_3 = _3473;
                frontier_phi_56_57_ladder_4 = _3471;
                frontier_phi_56_57_ladder_5 = _3469;
            }
            _3677 = frontier_phi_56_57_ladder_5;
            _3679 = frontier_phi_56_57_ladder_4;
            _3681 = frontier_phi_56_57_ladder_3;
            _3683 = frontier_phi_56_57_ladder_2;
            _3685 = frontier_phi_56_57_ladder_1;
            _3687 = frontier_phi_56_57_ladder;
        }
        float _3692 = isnan(1.0) ? _1547 : (isnan(_1547) ? 1.0 : min(_1547, 1.0));
        _3296 = (_3692 * _3683) + _2973;
        _3298 = (_3692 * _3685) + _2974;
        _3300 = (_3692 * _3687) + _2975;
        _3302 = ((_3677 * 0.039999999105930328369140625) * _3692) + _3132;
        _3304 = ((_3679 * 0.039999999105930328369140625) * _3692) + _3133;
        _3306 = ((_3681 * 0.039999999105930328369140625) * _3692) + _3134;
    }
    else
    {
        _3296 = _2973;
        _3298 = _2974;
        _3300 = _2975;
        _3302 = _3132;
        _3304 = _3133;
        _3306 = _3134;
    }
    uint _3312 = _1524 + uint(cbMatDynParam._m0[0u].w);
    float _3333 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3334 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3335 = cbSceneParam._m0[86u].x * ((_1448 / cbSceneParam._m0[86u].x) + (((10.0 / (_1373 + 10.0)) * cbMtdParam._m0[19u].y) * dot(vec3(_1484, _1485, _1486), vec3(_236, _237, _238))));
    float _3336 = isnan(_3333) ? _3335 : (isnan(_3335) ? _3333 : min(_3335, _3333));
    float _3337 = isnan(_3334) ? _1449 : (isnan(_1449) ? _3334 : min(_1449, _3334));
    vec4 _3339 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3336, _3337), 0.0);
    float _3341 = _3339.x;
    bool _3361 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3341)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3341))) > _1373;
    float _3362 = _3361 ? _3336 : _1448;
    float _3363 = _3361 ? _3337 : _1449;
    vec4 _3365 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3362, _3363));
    vec4 _3371 = texture(sampler2D(g_ScreenSpaceShadowTexture, SS_WrapLinear), vec2(_3362, _3363));
    float _3373 = _3371.w;
    vec4 _3386 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3362, _3363));
    float _3388 = _3386.x;
    bool _3393 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3402 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3408 = (_3393 ? (_3402 / (cbSceneParam._m0[2u].x - _3388)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3388))) - _1373;
    float _3410 = cbMtdParam._m0[40u].x + cbMtdParam._m0[38u].z;
    float _3411 = cbMtdParam._m0[40u].y + cbMtdParam._m0[38u].w;
    float _3412 = cbMtdParam._m0[40u].z + cbMtdParam._m0[39u].x;
    bool _3418 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3422 = (isnan(_3408) ? 0.0 : (isnan(0.0) ? _3408 : max(0.0, _3408))) * (-1.44269502162933349609375);
    float _5773 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
    float _5784 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
    float _5795 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
    float _3572;
    float _3573;
    float _3574;
    if ((1.0 - _1155) > 0.00999999977648258209228515625)
    {
        vec4 _3491 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3362, _3363), 0.0);
        float _3493 = _3491.x;
        float _3499 = (_3393 ? (_3402 / (cbSceneParam._m0[2u].x - _3493)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3493))) - _1373;
        uint _3505 = floatBitsToUint(cbInstanceData._m0[_2906]).x * 14u;
        uint _3511 = _3505 + 4u;
        float _3520 = dot(vec3(cbLight._m0[_3505].xyz), vec3(_257, _258, _259));
        float _3528 = dot(vec3((-0.0) - _1429, (-0.0) - _1430, (-0.0) - _1431), vec3((-0.0) - _257, (-0.0) - _258, (-0.0) - _259));
        float _3533 = ((isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3520 : (isnan(_3520) ? 0.001000000047497451305389404296875 : max(_3520, 0.001000000047497451305389404296875)))) + 1.0;
        float _3535 = (-0.0) - ((isnan(_3499) ? 0.0 : (isnan(0.0) ? _3499 : max(0.0, _3499))) * _3533);
        _3572 = _3418 ? 0.0 : ((((cbMtdParam._m0[38u].z * 0.079577468335628509521484375) * cbLight._m0[_3511].x) / ((_3533 * _3410) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3410 * 1.44269502162933349609375) * _3535)));
        _3573 = _3418 ? 0.0 : ((((cbMtdParam._m0[38u].w * 0.079577468335628509521484375) * cbLight._m0[_3511].y) / ((_3533 * _3411) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3411 * 1.44269502162933349609375) * _3535)));
        _3574 = _3418 ? 0.0 : ((((cbMtdParam._m0[39u].x * 0.079577468335628509521484375) * cbLight._m0[_3511].z) / ((_3533 * _3412) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3412 * 1.44269502162933349609375) * _3535)));
    }
    else
    {
        _3572 = 0.0;
        _3573 = 0.0;
        _3574 = 0.0;
    }
    float _3591 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _3592 = (_3572 + ((exp2(_3422 * (_3418 ? 0.0 : _3410)) * (((_3373 * (((cbMtdParam._m0[29u].y - _1280) * _626) + _1280)) * cbSceneParam._m0[72u].z) + _3365.x)) * cbSceneParam._m0[72u].w)) * _3591;
    float _3593 = (_3573 + ((exp2(_3422 * (_3418 ? 0.0 : _3411)) * (((_3373 * (((cbMtdParam._m0[29u].y - _1281) * _626) + _1281)) * cbSceneParam._m0[72u].z) + _3365.y)) * cbSceneParam._m0[72u].w)) * _3591;
    float _3594 = (_3574 + ((exp2(_3422 * (_3418 ? 0.0 : _3412)) * (((_3373 * (((cbMtdParam._m0[29u].y - _1282) * _626) + _1282)) * cbSceneParam._m0[72u].z) + _3365.z)) * cbSceneParam._m0[72u].w)) * _3591;
    float _3603 = (((cbInstanceData._m0[_3312].x * (((((_966 * cbMtdParam._m0[11u].x) - _930) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _966) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].x) * _989.x)) * _938) + _930)) + (((((_2589 * _2624.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0))) * _2384) * _2640)) + _3302) * cbPerFrame._m0[3u].x)) + _3592) + ((((isnan(1.0) ? _5773 : (isnan(_5773) ? 1.0 : min(_5773, 1.0))) * (_3296 + ((isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0))) * _1547))) - _3592) * _1155);
    float _3606 = (((cbInstanceData._m0[_3312].y * (((((_967 * cbMtdParam._m0[11u].y) - _931) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _967) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].y) * _989.y)) * _938) + _931)) + (((((_2589 * _2624.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0))) * _2384) * _2640)) + _3304) * cbPerFrame._m0[3u].x)) + _3593) + ((((isnan(1.0) ? _5784 : (isnan(_5784) ? 1.0 : min(_5784, 1.0))) * (_3298 + ((isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0))) * _1547))) - _3593) * _1155);
    float _3609 = (((cbInstanceData._m0[_3312].z * (((((_968 * cbMtdParam._m0[11u].z) - _932) + ((((cbMtdParam._m0[29u].x * _968) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _989.z)) * _938) + _932)) + (((((_2589 * _2624.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0))) * _2384) * _2640)) + _3306) * cbPerFrame._m0[3u].x)) + _3594) + ((((isnan(1.0) ? _5795 : (isnan(_5795) ? 1.0 : min(_5795, 1.0))) * (_3300 + ((isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0))) * _1547))) - _3594) * _1155);
    float _3610 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
    float _3611 = isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0));
    float _3612 = isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0));
    float _3617 = cbInstanceData._m0[_1523 + 6u].w * (isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0)));
    float _3622 = _1448 / cbSceneParam._m0[86u].x;
    float _3623 = _1449 / cbSceneParam._m0[86u].y;
    vec4 _3637 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3622, _3623, (log2((isnan(cbSceneParam._m0[77u].w) ? _1373 : (isnan(_1373) ? cbSceneParam._m0[77u].w : min(_1373, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3639 = _3637.x;
    float _3640 = _3637.y;
    float _3641 = _3637.z;
    float _3642 = _3637.w;
    float _3765;
    float _3767;
    float _3769;
    float _3771;
    if (_1373 > cbSceneParam._m0[78u].w)
    {
        float _3730 = isnan(_1373) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1373 : min(cbSceneParam._m0[80u].w, _1373));
        float _3731 = _3730 / _1373;
        float _3742 = _3731 * _1422;
        float _3743 = _1423 * _3731;
        float _3744 = (-0.0) - _3743;
        float _3745 = _3731 * _1424;
        float _3747 = (cbSceneParam._m0[77u].w * _3744) / _3730;
        float _3748 = _3747 + cbSceneParam._m0[79u].w;
        float _3749 = cbSceneParam._m0[79u].w - _3743;
        float _3755 = sqrt(((_3742 * _3742) + (_3743 * _3743)) + (_3745 * _3745));
        float _3758 = (1.0 - (cbSceneParam._m0[77u].w / _3730)) * _3755;
        float _3763 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3764 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _4143;
        if (abs((_3744 - _3747) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _4143 = ((((_3748 > 0.0) ? exp2(_3763 * _3748) : (2.0 - exp2(_3764 * _3748))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3758;
        }
        else
        {
            float _3901 = 1.0 / cbSceneParam._m0[80u].x;
            float _3902 = isnan(_3749) ? _3748 : (isnan(_3748) ? _3749 : max(_3748, _3749));
            float _3903 = isnan(_3749) ? _3748 : (isnan(_3748) ? _3749 : min(_3748, _3749));
            float _3912 = isnan(0.0) ? _3902 : (isnan(_3902) ? 0.0 : min(_3902, 0.0));
            float _3913 = isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : min(_3903, 0.0));
            _4143 = ((abs(_3755 / _3744) * cbSceneParam._m0[80u].y) * ((((_3912 - _3913) * 2.0) - ((exp2(_3763 * (isnan(0.0) ? _3902 : (isnan(_3902) ? 0.0 : max(_3902, 0.0)))) - exp2(_3763 * (isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : max(_3903, 0.0))))) * _3901)) - ((exp2(_3764 * _3912) - exp2(_3764 * _3913)) * _3901))) + (_3758 * cbSceneParam._m0[80u].z);
        }
        vec4 _4145 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3622, _3623, 1.0), 0.0);
        float _4154 = exp2((_4143 * (-1.44269502162933349609375)) * (1.0 - _4145.w));
        float _4155 = log2(_4154);
        float _4171 = log2(_3642);
        _3765 = (exp2(_4171 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_4155 * cbSceneParam._m0[78u].x)) * _4145.x) / cbSceneParam._m0[78u].x)) + _3639;
        _3767 = (exp2(_4171 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_4155 * cbSceneParam._m0[78u].y)) * _4145.y) / cbSceneParam._m0[78u].y)) + _3640;
        _3769 = (exp2(_4171 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_4155 * cbSceneParam._m0[78u].z)) * _4145.z) / cbSceneParam._m0[78u].z)) + _3641;
        _3771 = _4154 * _3642;
    }
    else
    {
        _3765 = _3639;
        _3767 = _3640;
        _3769 = _3641;
        _3771 = _3642;
    }
    bool _4181;
    float _3826;
    vec4 _3829;
    float _3831;
    vec4 _3833;
    float _3841;
    float _3842;
    float _3843;
    float _3844;
    bool _3854;
    for (;;)
    {
        bool _3783 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _3784 = log2(_3771);
        float _3791 = exp2(_3784 * cbSceneParam._m0[78u].x) * _3610;
        float _3792 = exp2(_3784 * cbSceneParam._m0[78u].y) * _3611;
        float _3793 = exp2(_3784 * cbSceneParam._m0[78u].z) * _3612;
        vec4 _3801 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1448, _1449));
        float _3803 = _3801.x;
        float _3824 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3803)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3803))) - _1373) * cbMtdParam._m0[23u].y;
        float _5876 = isnan(0.0) ? _3824 : (isnan(_3824) ? 0.0 : max(_3824, 0.0));
        _3826 = _3617 * (isnan(1.0) ? _5876 : (isnan(_5876) ? 1.0 : min(_5876, 1.0)));
        float _3827 = _1438 + (-0.5);
        _3829 = cbMtdParam._m0[1u];
        _3831 = _3829.y * _3827;
        _3833 = cbMatDynParam._m0[0u];
        float _3840 = (roundEven(_3833.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3841 = _3840 * (_3783 ? _3791 : (_3791 + (cbSceneParam._m0[72u].w * _3765)));
        _3842 = _3840 * (_3783 ? _3792 : (_3792 + (cbSceneParam._m0[72u].w * _3767)));
        _3843 = _3840 * (_3783 ? _3793 : (_3793 + (cbSceneParam._m0[72u].w * _3769)));
        _3844 = _3827 * 0.999000012874603271484375;
        _3854 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3854)
        {
            if ((cbInstanceData._m0[_1523 + 7u].x + _3844) < 0.5)
            {
                _4181 = true;
                break;
            }
        }
        uint _3936 = _1524 + uint(_3833.w);
        if ((cbInstanceData._m0[_3936].w < 1.0) && ((cbInstanceData._m0[_3936].w + _3844) < 0.5))
        {
            _4181 = true;
            break;
        }
        if ((_3831 + 1.0) < _3829.x)
        {
            _4181 = true;
            break;
        }
        _4181 = false;
        break;
    }
    float _4199;
    if (_4181)
    {
        discard_state = true;
        _4199 = 0.0;
    }
    else
    {
        _4199 = _3826;
    }
    SV_Target.x = _3841;
    SV_Target.y = _3842;
    SV_Target.z = _3843;
    SV_Target.w = _4199;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3826;
    discard_exit();
}


