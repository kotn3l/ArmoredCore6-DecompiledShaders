#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Water_Melange_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Water_Melange_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1896;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240 = _239 * TANGENT.x;
    float _241 = _239 * TANGENT.y;
    float _242 = _239 * TANGENT.z;
    float _247;
    float _248;
    float _249;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _247 = (-0.0) - _233;
        _248 = (-0.0) - _234;
        _249 = (-0.0) - _235;
    }
    else
    {
        _247 = _233;
        _248 = _234;
        _249 = _235;
    }
    float _293 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _303 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _293);
    float _304 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _293);
    float _305 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _293);
    float _321 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _323 = (sqrt(((_303 * _303) + (_304 * _304)) + (_305 * _305)) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0)));
    float _327 = _323 / cbMtdParam._m0[22u].z;
    float _328 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _329 = isnan(8.0) ? _328 : (isnan(_328) ? 8.0 : min(_328, 8.0));
    float _336 = cbMtdParam._m0[10u].x * _329;
    float _337 = cbMtdParam._m0[10u].y * _329;
    float _338 = cbMtdParam._m0[10u].z * _329;
    float _339 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _340 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
    float _341 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _352 = cbMtdParam._m0[21u].y + _323;
    float _356 = _352 * cbMtdParam._m0[23u].z;
    float _4287 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    vec4 _374 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _377 = _374.x;
    float _400 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _377)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _377))) - POSITION_1.w) / cbMtdParam._m0[20u].x;
    float _4298 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    float _406 = 1.0 - (isnan(cbMtdParam._m0[25u].y) ? _401 : (isnan(_401) ? cbMtdParam._m0[25u].y : max(_401, cbMtdParam._m0[25u].y)));
    float _408 = (cbMtdParam._m0[25u].x + TEXCOORD_3.x) - (_406 * cbMtdParam._m0[20u].z);
    float _419 = cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x;
    float _424 = cbMtdParam._m0[35u].x * TEXCOORD.x;
    float _425 = cbMtdParam._m0[35u].y * TEXCOORD.y;
    vec4 _439 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(((_424 + (_419 * cbMtdParam._m0[35u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_425 + (_419 * cbMtdParam._m0[35u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _441 = _439.x;
    float _442 = _439.y;
    float _4314 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _445 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
    float _446 = _439.z - _445;
    float _4325 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
    float _459 = (_447 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _461 = (_447 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _474 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_459 + (cbMtdParam._m0[30u].z * _419)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_461 + (cbMtdParam._m0[30u].w * _419)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _478 = _474.z;
    vec4 _489 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_459 + (cbMtdParam._m0[30u].x * _419)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_461 + (cbMtdParam._m0[30u].y * _419)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _493 = _489.z;
    float _496 = (_406 - _439.w) + (isnan(_493) ? _478 : (isnan(_478) ? _493 : max(_478, _493)));
    float _4341 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _498 = (_408 * (isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0)))) * (isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0)));
    float _511 = (_498 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[14u].x * _447);
    float _512 = (_498 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[14u].y * _447);
    float _513 = (_498 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[14u].z * _447);
    vec4 _559 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].x * _419))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].y * _419))) + cbTextureTilingScale._m0[1u].w));
    float _564 = _559.z * 0.099999986588954925537109375;
    float _4352 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _566 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
    float _570 = cbMtdParam._m0[23u].x * _323;
    float _4363 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _571 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
    float _585 = (_511 + (isnan(0.07999999821186065673828125) ? _339 : (isnan(_339) ? 0.07999999821186065673828125 : min(_339, 0.07999999821186065673828125)))) + (_571 * (((1.0 - _511) - _566) + _564));
    float _587 = (_512 + (isnan(0.07999999821186065673828125) ? _340 : (isnan(_340) ? 0.07999999821186065673828125 : min(_340, 0.07999999821186065673828125)))) + (_571 * (((1.0 - _512) - _566) + _564));
    float _589 = (_513 + (isnan(0.07999999821186065673828125) ? _341 : (isnan(_341) ? 0.07999999821186065673828125 : min(_341, 0.07999999821186065673828125)))) + (_571 * (((1.0 - _513) + _564) - _566));
    float _4374 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _590 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
    float _4385 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _591 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
    float _4396 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _592 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
    float _598 = _323 / cbMtdParam._m0[24u].z;
    float _4407 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _601 = (1.0 - (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0)))) * cbMtdParam._m0[24u].y;
    float _608 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _445) + cbMtdParam._m0[19u].x;
    float _615 = (POSITION_1.w - cbMtdParam._m0[28u].z) * (1.0 / cbMtdParam._m0[28u].y);
    float _4418 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _616 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
    float _629 = (cbMtdParam._m0[33u].z * _419) + _424;
    float _630 = (cbMtdParam._m0[33u].w * _419) + _425;
    vec4 _658 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[32u].z * _419) + _424)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[32u].w * _419) + _425)) + cbTextureTilingScale._m0[3u].w));
    float _665 = (_658.x * 2.0) + (-1.0);
    float _667 = (_658.y * 2.0) + (-1.0);
    float _671 = 1.0 - dot(vec2(_665, _667), vec2(_665, _667));
    float _4429 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _673 = sqrt(isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0)));
    float _676 = fma(_673, _247, fma(_667, _240, _665 * _226));
    float _679 = fma(_673, _248, fma(_667, _241, _665 * _227));
    float _682 = fma(_673, _249, fma(_667, _242, _665 * _228));
    float _686 = inversesqrt(dot(vec3(_676, _679, _682), vec3(_676, _679, _682)));
    float _687 = cbPerFrame._m0[22u].x * 2.0;
    float _688 = _687 * cbMtdParam._m0[26u].w;
    float _692 = ((_676 * 0.5) * _686) + (-0.25);
    float _696 = ((_679 * 0.5) * _686) + (-0.25);
    float _697 = _696 * cbMtdParam._m0[27u].x;
    float _699 = (-0.0) - (cbMtdParam._m0[27u].x * _692);
    float _700 = fract(_688);
    float _702 = fract(_688 + 0.5);
    float _713 = abs((_700 * 2.0) + (-1.0));
    vec4 _730 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_700 * _699) + _629) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_697 * _700) + _630) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _732 = _730.x;
    float _733 = _730.y;
    float _734 = _730.z;
    vec4 _735 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_702 * _699) + _629) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_697 * _702) + _630) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _746 = ((_735.x - _732) * _713) + _732;
    float _747 = ((_735.y - _733) * _713) + _733;
    float _748 = ((_735.z - _734) * _713) + _734;
    float _762 = (cbMtdParam._m0[32u].x * _419) + _424;
    float _763 = (cbMtdParam._m0[32u].y * _419) + _425;
    float _766 = _687 * cbMtdParam._m0[26u].x;
    float _767 = _696 * cbMtdParam._m0[25u].w;
    float _769 = (-0.0) - (cbMtdParam._m0[25u].w * _692);
    float _770 = fract(_766);
    float _772 = fract(_766 + 0.5);
    float _783 = abs((_770 * 2.0) + (-1.0));
    vec4 _800 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_770 * _769) + _762) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_767 * _770) + _763) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _802 = _800.x;
    float _803 = _800.y;
    float _804 = _800.z;
    vec4 _805 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_772 * _769) + _762) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_767 * _772) + _763) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _845 = (cbMtdParam._m0[33u].x * _419) + _424;
    float _846 = (cbMtdParam._m0[33u].y * _419) + _425;
    float _849 = _687 * cbMtdParam._m0[26u].z;
    float _850 = _696 * cbMtdParam._m0[26u].y;
    float _852 = (-0.0) - (cbMtdParam._m0[26u].y * _692);
    float _853 = fract(_849);
    float _855 = fract(_849 + 0.5);
    float _866 = abs((_853 * 2.0) + (-1.0));
    vec4 _883 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_853 * _852) + _845) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_850 * _853) + _846) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _885 = _883.x;
    float _886 = _883.y;
    float _887 = _883.z;
    vec4 _888 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_855 * _852) + _845) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_850 * _855) + _846) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _908 = (((((_888.x - _885) * _866) + _885) * cbMtdParam._m0[16u].x) + (_746 * cbMtdParam._m0[17u].x)) + (((((cbMtdParam._m0[15u].x - cbMtdParam._m0[18u].x) * _746) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].x) * (((_805.x - _802) * _783) + _802));
    float _912 = (((((_888.y - _886) * _866) + _886) * cbMtdParam._m0[16u].y) + (_747 * cbMtdParam._m0[17u].y)) + (((((cbMtdParam._m0[15u].y - cbMtdParam._m0[18u].y) * _747) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].y) * (((_805.y - _803) * _783) + _803));
    float _916 = (((((_888.z - _887) * _866) + _887) * cbMtdParam._m0[16u].z) + (_748 * cbMtdParam._m0[17u].z)) + ((((cbMtdParam._m0[28u].w * _748) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_805.z - _804) * _783) + _804));
    float _920 = _908 - (_908 * _616);
    float _921 = _912 - (_912 * _616);
    float _922 = _916 - (_916 * _616);
    float _927 = (POSITION_1.w - cbMtdParam._m0[28u].x) * (1.0 / cbMtdParam._m0[27u].w);
    float _4440 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _928 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
    float _941 = (cbMtdParam._m0[34u].z * _419) + _424;
    float _942 = (cbMtdParam._m0[34u].w * _419) + _425;
    vec4 _954 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_941 * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (_942 * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _956 = _954.x;
    float _957 = _954.y;
    float _958 = _954.z;
    vec4 _979 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _941) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _942) + cbTextureTilingScale._m0[9u].w));
    float _4451 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _1021 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
    float _1031 = _323 / cbMtdParam._m0[22u].w;
    float _4462 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    float _1032 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
    float _1033 = _447 * 0.23999999463558197021484375;
    float _1035 = _447 * (-0.20000000298023223876953125);
    float _1046 = cbMtdParam._m0[37u].x * TEXCOORD.x;
    float _1047 = cbMtdParam._m0[37u].y * TEXCOORD.y;
    vec4 _1062 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].z * _419) + _1033) + _1046) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].w * _419) + _1035) + _1047) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1078 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1046 + _1033) + (cbMtdParam._m0[37u].z * _419)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1047 + _1035) + (cbMtdParam._m0[37u].w * _419)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1096 = (((_489.x + (-0.5)) * 0.5) + _474.x) + (((_1062.x + (-1.0)) + _1078.x) * cbMtdParam._m0[24u].w);
    float _1097 = (((_489.y + (-0.5)) * 0.5) + _474.y) + (((_1062.y + (-1.0)) + _1078.y) * cbMtdParam._m0[24u].w);
    float _1102 = ((_559.x - _1096) * _1032) + _1096;
    float _1103 = ((_559.y - _1097) * _1032) + _1097;
    float _1105 = _323 / cbMtdParam._m0[22u].y;
    float _4473 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1106 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
    float _1122 = ((((_1021 * (0.5 - _441)) + _441) + (((_1102 + (-0.5)) + ((0.5 - _1102) * _1106)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1123 = ((((_1021 * (0.5 - _442)) + _442) + (((_1103 + (-0.5)) + ((0.5 - _1103) * _1106)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1124 = dot(vec2(_1122, _1123), vec2(_1122, _1123));
    float _4484 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1129 = sqrt(1.0 - (isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0))));
    float _1133 = cbMtdParam._m0[23u].w * _352;
    float _4495 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
    float _1142 = cbMtdParam._m0[21u].w * _352;
    float _4506 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _1144 = (isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0))) * cbMtdParam._m0[27u].y;
    float _4517 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    float _1145 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
    float _1160 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1161 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1171 = ((_1160 / cbSceneParam._m0[86u].x) * 2.0) + (-1.0);
    float _1172 = 1.0 - ((_1161 / cbSceneParam._m0[86u].y) * 2.0);
    vec4 _1173 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1160, _1161), 0.0);
    float _1175 = _1173.x;
    float _1215 = fma(_1175, cbSceneParam._m0[15u].z, fma(_1172, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * _1171)) + cbSceneParam._m0[15u].w;
    float _1216 = (fma(_1175, cbSceneParam._m0[12u].z, fma(_1172, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * _1171)) + cbSceneParam._m0[12u].w) / _1215;
    float _1217 = (fma(_1175, cbSceneParam._m0[13u].z, fma(_1172, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * _1171)) + cbSceneParam._m0[13u].w) / _1215;
    float _1218 = (fma(_1175, cbSceneParam._m0[14u].z, fma(_1172, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * _1171)) + cbSceneParam._m0[14u].w) / _1215;
    vec4 _1265 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((fma(_1218, cbSceneParam._m0[20u].z, fma(_1217, cbSceneParam._m0[20u].y, cbSceneParam._m0[20u].x * _1216)) + cbSceneParam._m0[20u].w) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].x * _419))) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((fma(_1218, cbSceneParam._m0[22u].z, fma(_1217, cbSceneParam._m0[22u].y, cbSceneParam._m0[22u].x * _1216)) + cbSceneParam._m0[22u].w) - cbSceneParam._m0[92u].z) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].y * _419))) + cbTextureTilingScale._m0[7u].w));
    float _1270 = _1265.x * cbMtdParam._m0[42u].y;
    float _1271 = _1265.y * cbMtdParam._m0[42u].z;
    float _1272 = _1265.z * cbMtdParam._m0[42u].w;
    float _1289 = ((cbMtdParam._m0[24u].x - cbMtdParam._m0[22u].x) * (isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0)))) + cbMtdParam._m0[22u].x;
    float _1294 = _1122 - (_1289 * _1122);
    float _1295 = _1123 - (_1289 * _1123);
    float _1296 = (_1289 * (1.0 - _1129)) + _1129;
    float _1315 = fma(_1129, _247, fma(_1123, _240, _1122 * _226));
    float _1318 = fma(_1129, _248, fma(_1123, _241, _1122 * _227));
    float _1321 = fma(_1129, _249, fma(_1123, _242, _1122 * _228));
    float _1325 = inversesqrt(dot(vec3(_1315, _1318, _1321), vec3(_1315, _1318, _1321)));
    float _1326 = _1325 * _1315;
    float _1327 = _1325 * _1318;
    float _1328 = _1325 * _1321;
    float _1331 = fma(_1296, _247, fma(_1295, _240, _1294 * _226));
    float _1334 = fma(_1296, _248, fma(_1295, _241, _1294 * _227));
    float _1337 = fma(_1296, _249, fma(_1295, _242, _1294 * _228));
    float _1341 = inversesqrt(dot(vec3(_1331, _1334, _1337), vec3(_1331, _1334, _1337)));
    float _1342 = _1341 * _1331;
    float _1343 = _1341 * _1334;
    float _1344 = _1341 * _1337;
    float _4528 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _4539 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _1346 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
    float _4550 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _4561 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _4572 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _1363 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1403 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1412 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1403);
    float _1413 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1403);
    float _1414 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1403);
    float _1418 = inversesqrt(dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414)));
    float _1419 = _1412 * _1418;
    float _1420 = _1413 * _1418;
    float _1421 = _1414 * _1418;
    vec4 _1423 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1432 = (_1423.x * 2.0) + (-1.0);
    float _1433 = (_1423.y * 2.0) + (-1.0);
    float _1434 = (_1423.z * 2.0) + (-1.0);
    float _1438 = inversesqrt(dot(vec3(_1432, _1433, _1434), vec3(_1432, _1433, _1434)));
    float _1449 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1423.w;
    float _1456 = (((_1432 * _1438) - _1326) * _1449) + _1326;
    float _1457 = (((_1433 * _1438) - _1327) * _1449) + _1327;
    float _1458 = (((_1434 * _1438) - _1328) * _1449) + _1328;
    float _1476 = fma(_1458, cbSceneParam._m0[5u].z, fma(_1457, cbSceneParam._m0[5u].y, _1456 * cbSceneParam._m0[5u].x));
    float _1479 = fma(_1458, cbSceneParam._m0[6u].z, fma(_1457, cbSceneParam._m0[6u].y, _1456 * cbSceneParam._m0[6u].x));
    float _1482 = fma(_1458, cbSceneParam._m0[7u].z, fma(_1457, cbSceneParam._m0[7u].y, _1456 * cbSceneParam._m0[7u].x));
    uint _1495 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1496 = _1495 + 9u;
    uint _1497 = _1496 + uint(cbMatDynParam._m0[0u].w);
    float _1503 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0)))) * cbInstanceData._m0[_1497].x;
    float _1504 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0)))) * cbInstanceData._m0[_1497].y;
    float _1505 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0)))) * cbInstanceData._m0[_1497].z;
    float _4583 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
    float _1506 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
    float _4594 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    float _1507 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
    float _4605 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
    float _1508 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
    vec4 _1516 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1160, cbSceneParam._m0[86u].y * _1161));
    float _1519 = _1516.x * TEXCOORD_3.w;
    float _1523 = abs(dot(vec3(_1419, _1420, _1421), vec3(_1456, _1457, _1458)));
    float _4616 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    float _1536 = dot(vec3(_1342, _1343, _1344), vec3(_1419, _1420, _1421)) * 2.0;
    float _1540 = (_1536 * _1342) - _1419;
    float _1541 = (_1536 * _1343) - _1420;
    float _1542 = (_1536 * _1344) - _1421;
    float _1546 = abs(dot(vec3(_1419, _1420, _1421), vec3(_1342, _1343, _1344)));
    float _4627 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
    float _1548 = sqrt(_1346);
    float _1560 = exp2((_1548 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1548 * 3.0));
    float _1591 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1595 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1599 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1895;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    float _1901;
    float _1902;
    float _1903;
    float _1904;
    float _1905;
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1624 = fma(_1599, cbModelParam._m0[26u].z, fma(_1595, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1591));
        float _1628 = fma(_1599, cbModelParam._m0[27u].z, fma(_1595, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1591));
        float _1632 = fma(_1599, cbModelParam._m0[28u].z, fma(_1595, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1591));
        float _1654 = _1591 + _1342;
        float _1655 = _1595 + _1343;
        float _1656 = _1599 + _1344;
        float _1666 = fma(_1656, cbModelParam._m0[26u].z, fma(_1655, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1654)) - _1624;
        float _1667 = fma(_1656, cbModelParam._m0[27u].z, fma(_1655, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1654)) - _1628;
        float _1668 = fma(_1656, cbModelParam._m0[28u].z, fma(_1655, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1654)) - _1632;
        float _1672 = inversesqrt(dot(vec3(_1666, _1667, _1668), vec3(_1666, _1667, _1668)));
        float _1684 = ((_1672 * _1666) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1624 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1685 = ((_1672 * _1667) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1628 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1686 = ((_1672 * _1668) / cbModelParam._m0[34u].z) + ((((((_1632 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1689 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1684, _1685, _1686), 0.0);
        vec4 _1696 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1684, _1685, _1686), 0.0);
        vec4 _1703 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1684, _1685, _1686), 0.0);
        vec4 _1710 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1684, _1685, _1686), 0.0);
        float _1723 = exp2((_1689.w + (-0.5)) * 20.0) * 2.0;
        float _1724 = _1723 * (_1689.x + (-0.5));
        float _1725 = _1723 * (_1689.y + (-0.5));
        float _1726 = _1723 * (_1689.z + (-0.5));
        float _1733 = exp2((_1696.w + (-0.5)) * 20.0) * 2.0;
        float _1734 = _1733 * (_1696.x + (-0.5));
        float _1735 = _1733 * (_1696.y + (-0.5));
        float _1736 = _1733 * (_1696.z + (-0.5));
        float _1743 = exp2((_1703.w + (-0.5)) * 20.0) * 2.0;
        float _1744 = _1743 * (_1703.x + (-0.5));
        float _1745 = _1743 * (_1703.y + (-0.5));
        float _1746 = _1743 * (_1703.z + (-0.5));
        float _1753 = exp2((_1710.w + (-0.5)) * 20.0) * 2.0;
        float _1754 = _1753 * (_1710.x + (-0.5));
        float _1755 = _1753 * (_1710.y + (-0.5));
        float _1756 = _1753 * (_1710.z + (-0.5));
        float _1757 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1758 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
        float _1759 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1760 = _1724 * 0.5;
        float _1761 = _1734 * 0.5;
        float _1762 = _1744 * 0.5;
        float _1763 = dot(vec3(_1760, _1761, _1762), vec3(_1760, _1761, _1762));
        float _1768 = (_1763 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1763);
        float _1777 = (dot(vec3(_1342, _1343, _1344), vec3(_1768 * _1760, _1768 * _1761, _1768 * _1762)) + 1.0) * 0.5;
        float _4653 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1787 = sqrt(((_1761 * _1761) + (_1760 * _1760)) + (_1762 * _1762)) / (_1757 + 9.9999997473787516355514526367188e-06);
        float _4664 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1788 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
        float _1789 = _1788 * 2.0;
        float _1793 = (1.0 - _1788) / (_1788 + 1.0);
        float _4675 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
        float _1794 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
        float _1803 = ((((1.0 - _1794) * (_1789 + 2.0)) * exp2(log2(isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0))) * (_1789 + 1.0))) + _1794) * _1757;
        float _1804 = _1725 * 0.5;
        float _1805 = _1735 * 0.5;
        float _1806 = _1745 * 0.5;
        float _1807 = dot(vec3(_1804, _1805, _1806), vec3(_1804, _1805, _1806));
        float _1812 = (_1807 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1807);
        float _1820 = (dot(vec3(_1342, _1343, _1344), vec3(_1812 * _1804, _1812 * _1805, _1812 * _1806)) + 1.0) * 0.5;
        float _4686 = isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0));
        float _1829 = sqrt(((_1805 * _1805) + (_1804 * _1804)) + (_1806 * _1806)) / (_1758 + 9.9999997473787516355514526367188e-06);
        float _4697 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1830 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
        float _1831 = _1830 * 2.0;
        float _1835 = (1.0 - _1830) / (_1830 + 1.0);
        float _4708 = isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0));
        float _1836 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
        float _1845 = ((((1.0 - _1836) * (_1831 + 2.0)) * exp2(log2(isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0))) * (_1831 + 1.0))) + _1836) * _1758;
        float _1846 = _1726 * 0.5;
        float _1847 = _1736 * 0.5;
        float _1848 = _1746 * 0.5;
        float _1849 = dot(vec3(_1846, _1847, _1848), vec3(_1846, _1847, _1848));
        float _1854 = (_1849 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1849);
        float _1862 = (dot(vec3(_1342, _1343, _1344), vec3(_1854 * _1846, _1854 * _1847, _1854 * _1848)) + 1.0) * 0.5;
        float _4719 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
        float _1871 = sqrt(((_1847 * _1847) + (_1846 * _1846)) + (_1848 * _1848)) / (_1759 + 9.9999997473787516355514526367188e-06);
        float _4730 = isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0));
        float _1872 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
        float _1873 = _1872 * 2.0;
        float _1877 = (1.0 - _1872) / (_1872 + 1.0);
        float _4741 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
        float _1878 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _1887 = ((((1.0 - _1878) * (_1873 + 2.0)) * exp2(log2(isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * (_1873 + 1.0))) + _1878) * _1759;
        _1895 = _1726;
        _1897 = _1725;
        _1898 = _1724;
        _1899 = _1736;
        _1900 = _1735;
        _1901 = _1734;
        _1902 = _1746;
        _1903 = _1745;
        _1904 = _1744;
        _1905 = _1759;
        _1906 = _1758;
        _1907 = _1757;
        _1908 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0)));
        _1909 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)));
        _1910 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0)));
    }
    else
    {
        _1895 = _1896;
        _1897 = _1896;
        _1898 = _1896;
        _1899 = _1896;
        _1900 = _1896;
        _1901 = _1896;
        _1902 = _1896;
        _1903 = _1896;
        _1904 = _1896;
        _1905 = _1896;
        _1906 = _1896;
        _1907 = _1896;
        _1908 = 0.0;
        _1909 = 0.0;
        _1910 = 0.0;
    }
    float _2201;
    float _2202;
    float _2203;
    float _2204;
    float _2205;
    float _2206;
    float _2207;
    float _2208;
    float _2209;
    float _2210;
    float _2211;
    float _2212;
    float _2213;
    float _2214;
    float _2215;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1934 = fma(_1599, cbModelParam._m0[30u].z, fma(_1595, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1591));
        float _1938 = fma(_1599, cbModelParam._m0[31u].z, fma(_1595, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1591));
        float _1942 = fma(_1599, cbModelParam._m0[32u].z, fma(_1595, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1591));
        float _1964 = _1591 + _1342;
        float _1965 = _1595 + _1343;
        float _1966 = _1599 + _1344;
        float _1976 = fma(_1966, cbModelParam._m0[30u].z, fma(_1965, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1964)) - _1934;
        float _1977 = fma(_1966, cbModelParam._m0[31u].z, fma(_1965, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1964)) - _1938;
        float _1978 = fma(_1966, cbModelParam._m0[32u].z, fma(_1965, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1964)) - _1942;
        float _1982 = inversesqrt(dot(vec3(_1976, _1977, _1978), vec3(_1976, _1977, _1978)));
        float _1994 = ((_1982 * _1976) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1934 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1995 = ((_1982 * _1977) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1938 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1996 = ((_1982 * _1978) / cbModelParam._m0[35u].z) + ((((((_1942 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1998 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1994, _1995, _1996), 0.0);
        vec4 _2005 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1994, _1995, _1996), 0.0);
        vec4 _2012 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1994, _1995, _1996), 0.0);
        vec4 _2019 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1994, _1995, _1996), 0.0);
        float _2031 = exp2((_1998.w + (-0.5)) * 20.0) * 2.0;
        float _2032 = _2031 * (_1998.x + (-0.5));
        float _2033 = _2031 * (_1998.y + (-0.5));
        float _2034 = _2031 * (_1998.z + (-0.5));
        float _2041 = exp2((_2005.w + (-0.5)) * 20.0) * 2.0;
        float _2042 = _2041 * (_2005.x + (-0.5));
        float _2043 = _2041 * (_2005.y + (-0.5));
        float _2044 = _2041 * (_2005.z + (-0.5));
        float _2051 = exp2((_2012.w + (-0.5)) * 20.0) * 2.0;
        float _2052 = _2051 * (_2012.x + (-0.5));
        float _2053 = _2051 * (_2012.y + (-0.5));
        float _2054 = _2051 * (_2012.z + (-0.5));
        float _2061 = exp2((_2019.w + (-0.5)) * 20.0) * 2.0;
        float _2062 = _2061 * (_2019.x + (-0.5));
        float _2063 = _2061 * (_2019.y + (-0.5));
        float _2064 = _2061 * (_2019.z + (-0.5));
        float _2065 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
        float _2066 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
        float _2067 = isnan(0.0) ? _2064 : (isnan(_2064) ? 0.0 : max(_2064, 0.0));
        float _2068 = _2032 * 0.5;
        float _2069 = _2042 * 0.5;
        float _2070 = _2052 * 0.5;
        float _2071 = dot(vec3(_2068, _2069, _2070), vec3(_2068, _2069, _2070));
        float _2076 = (_2071 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2071);
        float _2084 = (dot(vec3(_1342, _1343, _1344), vec3(_2076 * _2068, _2076 * _2069, _2076 * _2070)) + 1.0) * 0.5;
        float _4782 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2093 = sqrt(((_2069 * _2069) + (_2068 * _2068)) + (_2070 * _2070)) / (_2065 + 9.9999997473787516355514526367188e-06);
        float _4793 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
        float _2094 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
        float _2095 = _2094 * 2.0;
        float _2099 = (1.0 - _2094) / (_2094 + 1.0);
        float _4804 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
        float _2100 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
        float _2109 = ((((1.0 - _2100) * (_2095 + 2.0)) * exp2(log2(isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * (_2095 + 1.0))) + _2100) * _2065;
        float _2110 = _2033 * 0.5;
        float _2111 = _2043 * 0.5;
        float _2112 = _2053 * 0.5;
        float _2113 = dot(vec3(_2110, _2111, _2112), vec3(_2110, _2111, _2112));
        float _2118 = (_2113 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2113);
        float _2126 = (dot(vec3(_1342, _1343, _1344), vec3(_2118 * _2110, _2118 * _2111, _2118 * _2112)) + 1.0) * 0.5;
        float _4815 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
        float _2135 = sqrt(((_2111 * _2111) + (_2110 * _2110)) + (_2112 * _2112)) / (_2066 + 9.9999997473787516355514526367188e-06);
        float _4826 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
        float _2136 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
        float _2137 = _2136 * 2.0;
        float _2141 = (1.0 - _2136) / (_2136 + 1.0);
        float _4837 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
        float _2142 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
        float _2151 = ((((1.0 - _2142) * (_2137 + 2.0)) * exp2(log2(isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0))) * (_2137 + 1.0))) + _2142) * _2066;
        float _2152 = _2034 * 0.5;
        float _2153 = _2044 * 0.5;
        float _2154 = _2054 * 0.5;
        float _2155 = dot(vec3(_2152, _2153, _2154), vec3(_2152, _2153, _2154));
        float _2160 = (_2155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2155);
        float _2168 = (dot(vec3(_1342, _1343, _1344), vec3(_2160 * _2152, _2160 * _2153, _2160 * _2154)) + 1.0) * 0.5;
        float _4848 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
        float _2177 = sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154)) / (_2067 + 9.9999997473787516355514526367188e-06);
        float _4859 = isnan(0.0) ? _2177 : (isnan(_2177) ? 0.0 : max(_2177, 0.0));
        float _2178 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
        float _2179 = _2178 * 2.0;
        float _2183 = (1.0 - _2178) / (_2178 + 1.0);
        float _4870 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
        float _2184 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
        float _2193 = ((((1.0 - _2184) * (_2179 + 2.0)) * exp2(log2(isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0))) * (_2179 + 1.0))) + _2184) * _2067;
        _2201 = _2034;
        _2202 = _2033;
        _2203 = _2032;
        _2204 = _2044;
        _2205 = _2043;
        _2206 = _2042;
        _2207 = _2054;
        _2208 = _2053;
        _2209 = _2052;
        _2210 = _2067;
        _2211 = _2066;
        _2212 = _2065;
        _2213 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0)));
        _2214 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2151 : (isnan(_2151) ? 0.0 : max(_2151, 0.0)));
        _2215 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0)));
    }
    else
    {
        _2201 = _1896;
        _2202 = _1896;
        _2203 = _1896;
        _2204 = _1896;
        _2205 = _1896;
        _2206 = _1896;
        _2207 = _1896;
        _2208 = _1896;
        _2209 = _1896;
        _2210 = _1896;
        _2211 = _1896;
        _2212 = _1896;
        _2213 = 0.0;
        _2214 = 0.0;
        _2215 = 0.0;
    }
    float _2225 = (cbModelParam._m0[1u].x * (_2213 - _1908)) + _1908;
    float _2226 = (cbModelParam._m0[1u].x * (_2214 - _1909)) + _1909;
    float _2227 = (cbModelParam._m0[1u].x * (_2215 - _1910)) + _1910;
    float _2248 = fma(_2227, cbSceneParam._m0[89u].z, fma(_2226, cbSceneParam._m0[89u].y, _2225 * cbSceneParam._m0[89u].x));
    float _2251 = fma(_2227, cbSceneParam._m0[90u].z, fma(_2226, cbSceneParam._m0[90u].y, _2225 * cbSceneParam._m0[90u].x));
    float _2254 = fma(_2227, cbSceneParam._m0[91u].z, fma(_2226, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2225));
    float _2267 = _1540 * 0.5;
    float _2268 = _1541 * 0.5;
    float _2269 = _1542 * 0.5;
    float _2270 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_2203, _2206, _2209, _2212));
    float _2273 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_2202, _2205, _2208, _2211));
    float _2276 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_2201, _2204, _2207, _2210));
    float _2310;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2283 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_1895, _1899, _1902, _1905));
        float _2287 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_1897, _1900, _1903, _1906));
        float _2291 = dot(vec4(_2267, _2268, _2269, 1.0), vec4(_1898, _1901, _1904, _1907));
        float _2298 = dot(vec4(cbModelParam._m0[39u]), vec4(_2267, _2268, _2269, 1.0));
        _2310 = dot(vec3(isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0)), isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0)), isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2298) ? 0.0 : (isnan(0.0) ? _2298 : max(0.0, _2298))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2310 = 1.0;
    }
    float _2321;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2312 = dot(vec4(cbModelParam._m0[40u]), vec4(_2267, _2268, _2269, 1.0));
        _2321 = dot(vec3(isnan(0.0) ? _2270 : (isnan(_2270) ? 0.0 : max(_2270, 0.0)), isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0)), isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2312) ? 0.0 : (isnan(0.0) ? _2312 : max(0.0, _2312))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2321 = 1.0;
    }
    float _2325 = (_2321 * cbModelParam._m0[1u].x) + (_2310 * (1.0 - cbModelParam._m0[1u].x));
    float _2335 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1346);
    float _2336 = isnan(_2335) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2335 : min(cbModelParam._m0[25u].z, _2335));
    float _2416;
    float _2418;
    float _2420;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2383 = fma(_1599, cbModelParam._m0[13u].z, fma(_1595, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1591)) + cbModelParam._m0[13u].w;
        float _2387 = fma(_1599, cbModelParam._m0[14u].z, fma(_1595, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1591)) + cbModelParam._m0[14u].w;
        float _2391 = fma(_1599, cbModelParam._m0[15u].z, fma(_1595, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1591)) + cbModelParam._m0[15u].w;
        float _2394 = fma(_1542, cbModelParam._m0[13u].z, fma(_1541, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1540));
        float _2397 = fma(_1542, cbModelParam._m0[14u].z, fma(_1541, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1540));
        float _2400 = fma(_1542, cbModelParam._m0[15u].z, fma(_1541, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1540));
        float _2428;
        if (_2394 > 0.0)
        {
            _2428 = abs((1.0 - _2383) / _2394);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2394 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2383 + 1.0) / _2394);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2428 = frontier_phi_16_14_ladder;
        }
        float _2816;
        if (_2397 > 0.0)
        {
            _2816 = abs((1.0 - _2387) / _2397);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2397 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2387 + 1.0) / _2397);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2816 = frontier_phi_25_21_ladder;
        }
        float _3255;
        if (_2400 > 0.0)
        {
            _3255 = abs((1.0 - _2391) / _2400);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_2400 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_2391 + 1.0) / _2400);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _3255 = frontier_phi_39_32_ladder;
        }
        float _3257 = isnan(_2816) ? _2428 : (isnan(_2428) ? _2816 : min(_2428, _2816));
        float _3258 = isnan(_3255) ? _3257 : (isnan(_3257) ? _3255 : min(_3257, _3255));
        float _3262 = (_3258 * _2394) + _2383;
        float _3263 = (_3258 * _2397) + _2387;
        float _3264 = (_3258 * _2400) + _2391;
        float _3265 = _3258 * 9.9999997473787516355514526367188e-05;
        float _3267 = (-1.0) - _3265;
        float _3269 = _3265 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_3264 > _3269) || ((_3264 < _3267) || ((_3263 > _3269) || ((_3263 < _3267) || ((_3262 < _3267) || (_3262 > _3269))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3473 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_3264, cbModelParam._m0[9u].z, fma(_3263, cbModelParam._m0[9u].y, _3262 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_3264, cbModelParam._m0[10u].z, fma(_3263, cbModelParam._m0[10u].y, _3262 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_3264, cbModelParam._m0[11u].z, fma(_3263, cbModelParam._m0[11u].y, _3262 * cbModelParam._m0[11u].x))), _2336);
            frontier_phi_15_39_ladder = _3473.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _3473.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _3473.x * cbModelParam._m0[1u].y;
        }
        _2416 = frontier_phi_15_39_ladder_2;
        _2418 = frontier_phi_15_39_ladder_1;
        _2420 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _2404 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1540, _1541, _1542), _2336);
        _2416 = _2404.x * cbModelParam._m0[1u].y;
        _2418 = _2404.y * cbModelParam._m0[1u].y;
        _2420 = _2404.z * cbModelParam._m0[1u].y;
    }
    float _2424 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1346);
    float _2425 = isnan(_2424) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2424 : min(cbModelParam._m0[25u].w, _2424));
    float _2514;
    float _2516;
    float _2518;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2478 = fma(_1599, cbModelParam._m0[21u].z, fma(_1595, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1591)) + cbModelParam._m0[21u].w;
        float _2482 = fma(_1599, cbModelParam._m0[22u].z, fma(_1595, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1591)) + cbModelParam._m0[22u].w;
        float _2486 = fma(_1599, cbModelParam._m0[23u].z, fma(_1595, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1591)) + cbModelParam._m0[23u].w;
        float _2489 = fma(_1542, cbModelParam._m0[21u].z, fma(_1541, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1540));
        float _2492 = fma(_1542, cbModelParam._m0[22u].z, fma(_1541, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1540));
        float _2495 = fma(_1542, cbModelParam._m0[23u].z, fma(_1541, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1540));
        float _2821;
        if (_2489 > 0.0)
        {
            _2821 = abs((1.0 - _2478) / _2489);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2489 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2478 + 1.0) / _2489);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2821 = frontier_phi_27_23_ladder;
        }
        float _3282;
        if (_2492 > 0.0)
        {
            _3282 = abs((1.0 - _2482) / _2492);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_2492 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_2482 + 1.0) / _2492);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _3282 = frontier_phi_41_34_ladder;
        }
        float _3534;
        if (_2495 > 0.0)
        {
            _3534 = abs((1.0 - _2486) / _2495);
        }
        else
        {
            float frontier_phi_56_50_ladder;
            if (_2495 < 0.0)
            {
                frontier_phi_56_50_ladder = abs((_2486 + 1.0) / _2495);
            }
            else
            {
                frontier_phi_56_50_ladder = 5000.0;
            }
            _3534 = frontier_phi_56_50_ladder;
        }
        float _3536 = isnan(_3282) ? _2821 : (isnan(_2821) ? _3282 : min(_2821, _3282));
        float _3537 = isnan(_3534) ? _3536 : (isnan(_3536) ? _3534 : min(_3536, _3534));
        float _3541 = (_3537 * _2489) + _2478;
        float _3542 = (_3537 * _2492) + _2482;
        float _3543 = (_3537 * _2495) + _2486;
        float _3544 = _3537 * 9.9999997473787516355514526367188e-05;
        float _3545 = (-1.0) - _3544;
        float _3547 = _3544 + 1.0;
        float frontier_phi_24_56_ladder;
        float frontier_phi_24_56_ladder_1;
        float frontier_phi_24_56_ladder_2;
        if ((_3543 > _3547) || ((_3543 < _3545) || ((_3542 > _3547) || ((_3542 < _3545) || ((_3541 < _3545) || (_3541 > _3547))))))
        {
            frontier_phi_24_56_ladder = 0.0;
            frontier_phi_24_56_ladder_1 = 0.0;
            frontier_phi_24_56_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3814 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3543, cbModelParam._m0[17u].z, fma(_3542, cbModelParam._m0[17u].y, _3541 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3543, cbModelParam._m0[18u].z, fma(_3542, cbModelParam._m0[18u].y, _3541 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3543, cbModelParam._m0[19u].z, fma(_3542, cbModelParam._m0[19u].y, _3541 * cbModelParam._m0[19u].x))), _2425);
            frontier_phi_24_56_ladder = _3814.y * cbModelParam._m0[1u].z;
            frontier_phi_24_56_ladder_1 = _3814.z * cbModelParam._m0[1u].z;
            frontier_phi_24_56_ladder_2 = _3814.x * cbModelParam._m0[1u].z;
        }
        _2514 = frontier_phi_24_56_ladder_2;
        _2516 = frontier_phi_24_56_ladder;
        _2518 = frontier_phi_24_56_ladder_1;
    }
    else
    {
        vec4 _2498 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1540, _1541, _1542), _2425);
        _2514 = _2498.x * cbModelParam._m0[1u].z;
        _2516 = _2498.y * cbModelParam._m0[1u].z;
        _2518 = _2498.z * cbModelParam._m0[1u].z;
    }
    float _2530 = ((((1.0 - _1560) * ((_1548 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1560 * _1548)) * _1519;
    float _2531 = _2530 * ((cbModelParam._m0[1u].w * (_2514 - _2416)) + _2416);
    float _2532 = _2530 * ((cbModelParam._m0[1u].w * (_2516 - _2418)) + _2418);
    float _2533 = _2530 * ((cbModelParam._m0[1u].w * (_2518 - _2420)) + _2420);
    float _2536 = fma(_2533, cbSceneParam._m0[89u].z, fma(_2532, cbSceneParam._m0[89u].y, _2531 * cbSceneParam._m0[89u].x));
    float _2539 = fma(_2533, cbSceneParam._m0[90u].z, fma(_2532, cbSceneParam._m0[90u].y, _2531 * cbSceneParam._m0[90u].x));
    float _2542 = fma(_2533, cbSceneParam._m0[91u].z, fma(_2532, cbSceneParam._m0[91u].y, _2531 * cbSceneParam._m0[91u].x));
    float _2561 = (cbSceneParam._m0[88u].y * (1.0 - _1346)) + cbSceneParam._m0[88u].z;
    float _4996 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
    vec4 _2565 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1160, _1161), (isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0))) * 5.0);
    float _2581 = 1.0 - _2565.w;
    uint _2588 = _1495 + 5u;
    uvec4 _2591 = floatBitsToUint(cbInstanceData._m0[_2588]);
    uint _2593 = _2591.x * 14u;
    uint _2594 = _2593 + 13u;
    float _2599 = _1519 + (-1.0);
    float _2602 = (cbLight._m0[_2594].x * _2599) + 1.0;
    float _2603 = (cbLight._m0[_2594].y * _2599) + 1.0;
    uint _2604 = _2593 + 5u;
    float _2610 = isnan(1.0) ? _2603 : (isnan(_2603) ? 1.0 : min(_2603, 1.0));
    uint _2614 = _2593 + 4u;
    float _2620 = isnan(1.0) ? _2602 : (isnan(_2602) ? 1.0 : min(_2602, 1.0));
    uint _2624 = _2593 | 1u;
    float _2635 = dot(vec3(cbLight._m0[_2593].xyz), vec3(_1456, _1457, _1458));
    float _2638 = dot(vec3(cbLight._m0[_2624].xyz), vec3(_1456, _1457, _1458));
    float _5017 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _5028 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2643 = (isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0))) * 0.3183098733425140380859375;
    float _2645 = (isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0))) * 0.3183098733425140380859375;
    float _2652 = ((cbLight._m0[_2604].x * _2610) * _2645) + ((cbLight._m0[_2614].x * _2620) * _2643);
    float _2653 = ((_2610 * cbLight._m0[_2604].y) * _2645) + ((_2620 * cbLight._m0[_2614].y) * _2643);
    float _2654 = ((_2610 * cbLight._m0[_2604].z) * _2645) + ((_2620 * cbLight._m0[_2614].z) * _2643);
    uint _2656 = _2593 + 8u;
    float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2593].w)) * _1346) * 0.949999988079071044921875);
    float _2670 = _2669 * _2669;
    float _2671 = cbLight._m0[_2593].x + _1419;
    float _2672 = cbLight._m0[_2593].y + _1420;
    float _2673 = cbLight._m0[_2593].z + _1421;
    float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
    float _2678 = _2677 * _2671;
    float _2679 = _2677 * _2672;
    float _2680 = _2677 * _2673;
    float _2681 = dot(vec3(_1456, _1457, _1458), vec3(cbLight._m0[_2593].xyz));
    float _5039 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
    float _2684 = isnan(1.0) ? _5039 : (isnan(_5039) ? 1.0 : min(_5039, 1.0));
    float _2685 = dot(vec3(_1456, _1457, _1458), vec3(_1419, _1420, _1421));
    float _5050 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2688 = isnan(1.0) ? _5050 : (isnan(_5050) ? 1.0 : min(_5050, 1.0));
    float _2689 = dot(vec3(_1456, _1457, _1458), vec3(_2678, _2679, _2680));
    float _5061 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2692 = isnan(1.0) ? _5061 : (isnan(_5061) ? 1.0 : min(_5061, 1.0));
    float _2693 = dot(vec3(cbLight._m0[_2593].xyz), vec3(_2678, _2679, _2680));
    float _5072 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
    float _2697 = _2670 * _2670;
    float _2701 = ((_2692 * _2692) * (_2697 + (-1.0))) + 1.0;
    float _2712 = (exp2(log2(1.0 - (isnan(1.0) ? _5072 : (isnan(_5072) ? 1.0 : min(_5072, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2713 = 1.0 - _2670;
    float _2724 = (0.5 / (((_2688 * ((_2684 * _2713) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2688 * _2713) + _2670) * _2684))) * _2684;
    float _5083 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
    float _2726 = (isnan(1.0) ? _5083 : (isnan(_5083) ? 1.0 : min(_5083, 1.0))) * (_2697 / ((_2701 * _2701) * 3.141590118408203125));
    uint _2737 = _2593 + 9u;
    float _2748 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2624].w)) * _1346) * 0.949999988079071044921875);
    float _2749 = _2748 * _2748;
    float _2750 = cbLight._m0[_2624].x + _1419;
    float _2751 = cbLight._m0[_2624].y + _1420;
    float _2752 = cbLight._m0[_2624].z + _1421;
    float _2756 = inversesqrt(dot(vec3(_2750, _2751, _2752), vec3(_2750, _2751, _2752)));
    float _2757 = _2756 * _2750;
    float _2758 = _2756 * _2751;
    float _2759 = _2756 * _2752;
    float _2760 = dot(vec3(_1456, _1457, _1458), vec3(cbLight._m0[_2624].xyz));
    float _5094 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
    float _2763 = isnan(1.0) ? _5094 : (isnan(_5094) ? 1.0 : min(_5094, 1.0));
    float _2764 = dot(vec3(_1456, _1457, _1458), vec3(_2757, _2758, _2759));
    float _5105 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
    float _2767 = isnan(1.0) ? _5105 : (isnan(_5105) ? 1.0 : min(_5105, 1.0));
    float _2768 = dot(vec3(cbLight._m0[_2624].xyz), vec3(_2757, _2758, _2759));
    float _5116 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
    float _2772 = _2749 * _2749;
    float _2776 = ((_2767 * _2767) * (_2772 + (-1.0))) + 1.0;
    float _2785 = (exp2(log2(1.0 - (isnan(1.0) ? _5116 : (isnan(_5116) ? 1.0 : min(_5116, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2786 = 1.0 - _2749;
    float _2796 = (0.5 / (((_2688 * ((_2763 * _2786) + _2749)) + 9.9999999392252902907785028219223e-09) + (((_2688 * _2786) + _2749) * _2763))) * _2763;
    float _5127 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
    float _2798 = (isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_2772 / ((_2776 * _2776) * 3.141590118408203125));
    float _2808 = (((_2785 * cbLight._m0[_2737].x) * _2798) * _2610) + (((_2712 * cbLight._m0[_2656].x) * _2726) * _2620);
    float _2809 = (((_2785 * cbLight._m0[_2737].y) * _2798) * _2610) + (((_2712 * cbLight._m0[_2656].y) * _2726) * _2620);
    float _2810 = (((_2785 * cbLight._m0[_2737].z) * _2798) * _2610) + (((_2712 * cbLight._m0[_2656].z) * _2726) * _2620);
    float _2924;
    float _2926;
    float _2928;
    float _2930;
    float _2932;
    float _2934;
    if (_2591.y == 0u)
    {
        float _2865 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2866 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2865;
        float _2867 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2865;
        float _2868 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2865;
        uvec4 _2880 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2881 = _2880.x;
        uint _2892 = uint((float(_2880.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1161) / _2881))) + floor(float(uint(cbSceneParam._m0[85u].x * _1160) / _2881)));
        float _2902 = (log2(_2868 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2903 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        uint _2906 = uint(isnan(14.0) ? _2903 : (isnan(_2903) ? 14.0 : min(_2903, 14.0)));
        uvec4 _2911 = texelFetch(g_lightClusterGridBuffer, int(((_2906 << 2u) + (_2892 << 6u)) >> 2u));
        uint _2912 = _2911.x;
        uint _2913 = _2880.z;
        float _3073;
        float _3075;
        float _3077;
        float _3079;
        float _3081;
        float _3083;
        if (((((1u << ((_2913 >> 4u) & 15u)) + 4294967295u) & _2912) == 0u) || ((_2913 & 240u) == 0u))
        {
            _3073 = 0.0;
            _3075 = 0.0;
            _3077 = 0.0;
            _3079 = 0.0;
            _3081 = 0.0;
            _3083 = 0.0;
        }
        else
        {
            float _3074;
            float _3076;
            float _3078;
            float _3080;
            float _3082;
            float _3084;
            float _3319 = 0.0;
            float _3320 = 0.0;
            float _3321 = 0.0;
            float _3322 = 0.0;
            float _3323 = 0.0;
            float _3324 = 0.0;
            uint _3325 = 0u;
            uint _3334;
            bool _3335;
            for (;;)
            {
                _3334 = texelFetch(g_lightClassification, int((((_2906 << 5u) + (_2892 << 9u)) + (_3325 << 2u)) >> 2u)).x;
                _3335 = _3334 == 0u;
                float frontier_phi_52_pred;
                float frontier_phi_52_pred_1;
                float frontier_phi_52_pred_2;
                float frontier_phi_52_pred_3;
                float frontier_phi_52_pred_4;
                float frontier_phi_52_pred_5;
                if (_3335)
                {
                    frontier_phi_52_pred = _3321;
                    frontier_phi_52_pred_1 = _3324;
                    frontier_phi_52_pred_2 = _3323;
                    frontier_phi_52_pred_3 = _3322;
                    frontier_phi_52_pred_4 = _3320;
                    frontier_phi_52_pred_5 = _3319;
                }
                else
                {
                    float _3577;
                    float _3578;
                    float _3579;
                    float _3580;
                    float _3581;
                    float _3582;
                    uint _3583;
                    _3577 = _3319;
                    _3578 = _3320;
                    _3579 = _3321;
                    _3580 = _3322;
                    _3581 = _3323;
                    _3582 = _3324;
                    _3583 = _3334;
                    float _3482;
                    float _3483;
                    float _3484;
                    float _3485;
                    float _3486;
                    float _3487;
                    for (;;)
                    {
                        uint _3587 = uint(findLSB(_3583)) + (_3325 << 5u);
                        uint _3584 = (_3583 + 4294967295u) & _3583;
                        uint _3589 = _3587 * 48u;
                        vec4 _3603 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3589)).x, texelFetch(g_PointLightRenderingBuffer, int(_3589 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3589 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3589 + 3u)).x));
                        uint _3609 = (_3587 * 48u) + 4u;
                        vec4 _3622 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3609)).x, texelFetch(g_PointLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3609 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3609 + 3u)).x));
                        uint _3628 = (_3587 * 48u) + 8u;
                        vec3 _3639 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3628)).x, texelFetch(g_PointLightRenderingBuffer, int(_3628 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3628 + 2u)).x));
                        float _3643 = _3603.x - _2866;
                        float _3644 = _3603.y - _2867;
                        float _3645 = _3603.z - _2868;
                        float _3646 = dot(vec3(_3643, _3644, _3645), vec3(_3643, _3644, _3645));
                        float _3649 = inversesqrt(_3646);
                        float _3650 = _3649 * _3643;
                        float _3651 = _3649 * _3644;
                        float _3652 = _3649 * _3645;
                        float _3653 = dot(vec3(_1476, _1479, _1482), vec3(_3650, _3651, _3652));
                        float _3658 = 1.0 - (_3646 * _3603.w);
                        float _5148 = isnan(0.0) ? _3658 : (isnan(_3658) ? 0.0 : max(_3658, 0.0));
                        float _3659 = isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0));
                        float _3660 = sqrt(_3646) * _3622.w;
                        float _3663 = 1.39999997615814208984375 / (_3660 + 1.39999997615814208984375);
                        float _3664 = _3663 * _3663;
                        float _3667 = ((1.0 - _3664) * _3653) + _3664;
                        float _3670 = _3660 * _3660;
                        float _3674 = ((isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0))) * _3659) / ((_3670 * 0.699999988079071044921875) + 1.0);
                        float _3678 = (-0.0) - _2866;
                        float _3679 = (-0.0) - _2867;
                        float _3680 = (-0.0) - _2868;
                        float _3684 = inversesqrt(dot(vec3(_3678, _3679, _3680), vec3(_3678, _3679, _3680)));
                        float _3685 = _3684 * _3678;
                        float _3686 = _3684 * _3679;
                        float _3687 = _3684 * _3680;
                        float _3695 = exp2(log2(1.0 / ((_3670 * 3.5) + 5.0)) * 0.25);
                        float _3696 = 1.0 - _1548;
                        float _3703 = sqrt(1.0 - ((1.0 - (_3696 * _3696)) * (1.0 - (_3695 * _3695))));
                        float _3704 = _3703 * _3703;
                        float _3705 = _3704 * _3704;
                        float _3706 = _3685 + _3650;
                        float _3707 = _3686 + _3651;
                        float _3708 = _3687 + _3652;
                        float _3712 = inversesqrt(dot(vec3(_3706, _3707, _3708), vec3(_3706, _3707, _3708)));
                        float _3716 = dot(vec3(_1476, _1479, _1482), vec3(_3685, _3686, _3687));
                        float _5164 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                        float _3719 = isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0));
                        float _3720 = dot(vec3(_1476, _1479, _1482), vec3(_3712 * _3706, _3712 * _3707, _3712 * _3708));
                        float _5175 = isnan(0.0) ? _3720 : (isnan(_3720) ? 0.0 : max(_3720, 0.0));
                        float _3723 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
                        float _3727 = ((_3723 * _3723) * (_3705 + (-1.0))) + 1.0;
                        float _3728 = _3663 * _3704;
                        float _3729 = _3728 * _3728;
                        float _3732 = ((1.0 - _3729) * _3653) + _3729;
                        float _5186 = isnan(0.0) ? _3732 : (isnan(_3732) ? 0.0 : max(_3732, 0.0));
                        float _3733 = isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0));
                        float _3734 = 1.0 - _3704;
                        float _3744 = (0.5 / (((_3733 * ((_3719 * _3734) + _3704)) + 9.9999999392252902907785028219223e-09) + (((_3733 * _3734) + _3704) * _3719))) * _3733;
                        float _5197 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                        float _3755 = (((_3705 * 3.1415927410125732421875) * (isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0)))) / ((_3727 * _3727) * ((_3670 * 2.1991131305694580078125) + 3.141590118408203125))) * _3659;
                        _3485 = (_3674 * _3622.x) + _3580;
                        _3486 = (_3674 * _3622.y) + _3581;
                        _3487 = (_3674 * _3622.z) + _3582;
                        _3482 = (_3755 * _3639.x) + _3577;
                        _3483 = (_3755 * _3639.y) + _3578;
                        _3484 = (_3755 * _3639.z) + _3579;
                        if (_3584 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3577 = _3482;
                            _3578 = _3483;
                            _3579 = _3484;
                            _3580 = _3485;
                            _3581 = _3486;
                            _3582 = _3487;
                            _3583 = _3584;
                        }
                    }
                    frontier_phi_52_pred = _3484;
                    frontier_phi_52_pred_1 = _3487;
                    frontier_phi_52_pred_2 = _3486;
                    frontier_phi_52_pred_3 = _3485;
                    frontier_phi_52_pred_4 = _3483;
                    frontier_phi_52_pred_5 = _3482;
                }
                _3078 = frontier_phi_52_pred;
                _3084 = frontier_phi_52_pred_1;
                _3082 = frontier_phi_52_pred_2;
                _3080 = frontier_phi_52_pred_3;
                _3076 = frontier_phi_52_pred_4;
                _3074 = frontier_phi_52_pred_5;
                uint _3326 = _3325 + 1u;
                if (_3326 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3319 = _3074;
                    _3320 = _3076;
                    _3321 = _3078;
                    _3322 = _3080;
                    _3323 = _3082;
                    _3324 = _3084;
                    _3325 = _3326;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3073 = _3074;
            _3075 = _3076;
            _3077 = _3078;
            _3079 = _3080;
            _3081 = _3082;
            _3083 = _3084;
        }
        uvec4 _3087 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3088 = _3087.z;
        uint _3090 = (_3088 >> 8u) & 15u;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        float _3295;
        float _3297;
        if (((4294967295u << _3090) & _2912) == 0u)
        {
            _3287 = _3073;
            _3289 = _3075;
            _3291 = _3077;
            _3293 = _3079;
            _3295 = _3081;
            _3297 = _3083;
        }
        else
        {
            float _3312 = inversesqrt(dot(vec3(_2866, _2867, _2868), vec3(_2866, _2867, _2868)));
            float _3313 = _3312 * _2866;
            float _3314 = _3312 * _2867;
            float _3315 = _3312 * _2868;
            float frontier_phi_43_44_ladder;
            float frontier_phi_43_44_ladder_1;
            float frontier_phi_43_44_ladder_2;
            float frontier_phi_43_44_ladder_3;
            float frontier_phi_43_44_ladder_4;
            float frontier_phi_43_44_ladder_5;
            if (_3090 < ((_3088 >> 12u) & 15u))
            {
                float _3288;
                float _3290;
                float _3292;
                float _3294;
                float _3296;
                float _3298;
                float _3560 = _3073;
                float _3561 = _3075;
                float _3562 = _3077;
                float _3563 = _3079;
                float _3564 = _3081;
                float _3565 = _3083;
                uint _3566 = _3090;
                uint _3575;
                bool _3576;
                for (;;)
                {
                    _3575 = texelFetch(g_lightClassification, int((((_2906 << 5u) + (_2892 << 9u)) + (_3566 << 2u)) >> 2u)).x;
                    _3576 = _3575 == 0u;
                    float frontier_phi_63_pred;
                    float frontier_phi_63_pred_1;
                    float frontier_phi_63_pred_2;
                    float frontier_phi_63_pred_3;
                    float frontier_phi_63_pred_4;
                    float frontier_phi_63_pred_5;
                    if (_3576)
                    {
                        frontier_phi_63_pred = _3565;
                        frontier_phi_63_pred_1 = _3564;
                        frontier_phi_63_pred_2 = _3563;
                        frontier_phi_63_pred_3 = _3562;
                        frontier_phi_63_pred_4 = _3561;
                        frontier_phi_63_pred_5 = _3560;
                    }
                    else
                    {
                        float _3819;
                        float _3820;
                        float _3821;
                        float _3822;
                        float _3823;
                        float _3824;
                        float _4112;
                        float _4113;
                        float _4114;
                        float _4115;
                        float _4116;
                        float _4117;
                        float _3832 = _3560;
                        float _3833 = _3561;
                        float _3834 = _3562;
                        float _3835 = _3563;
                        float _3836 = _3564;
                        float _3837 = _3565;
                        uint _3838 = _3575;
                        uint _3839;
                        vec4 _3864;
                        float _3865;
                        vec4 _3880;
                        vec3 _3892;
                        vec4 _3907;
                        vec4 _3922;
                        float _3968;
                        bool _3969;
                        for (;;)
                        {
                            uint _3849 = ((_3566 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3838));
                            _3839 = (_3838 + 4294967295u) & _3838;
                            uint _3851 = _3849 * 40u;
                            _3864 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3851)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 3u)).x));
                            _3865 = _3864.w;
                            uint _3867 = (_3849 * 40u) + 4u;
                            _3880 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3867)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 3u)).x));
                            uint _3882 = (_3849 * 40u) + 8u;
                            _3892 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3882)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 2u)).x));
                            uint _3894 = (_3849 * 40u) + 16u;
                            _3907 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3894)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 3u)).x));
                            uint _3909 = (_3849 * 40u) + 20u;
                            _3922 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3909)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 3u)).x));
                            uint _3924 = (_3849 * 40u) + 24u;
                            vec4 _3937 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3924)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 3u)).x));
                            uint _3943 = (_3849 * 40u) + 28u;
                            vec4 _3956 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3943)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 3u)).x));
                            _3968 = fma(_2868, _3956.z, fma(_2867, _3956.y, _3956.x * _2866)) + _3956.w;
                            _3969 = !((fma(_2868, _3937.z, fma(_2867, _3937.y, _3937.x * _2866)) + _3937.w) <= 0.0);
                            float frontier_phi_69_pred;
                            float frontier_phi_69_pred_1;
                            float frontier_phi_69_pred_2;
                            float frontier_phi_69_pred_3;
                            float frontier_phi_69_pred_4;
                            float frontier_phi_69_pred_5;
                            if (_3969)
                            {
                                float _3996 = _3864.x - _2866;
                                float _3997 = _3864.y - _2867;
                                float _3998 = _3864.z - _2868;
                                float _3999 = dot(vec3(_3996, _3997, _3998), vec3(_3996, _3997, _3998));
                                float _4002 = inversesqrt(_3999);
                                float _4003 = _4002 * _3996;
                                float _4004 = _4002 * _3997;
                                float _4005 = _4002 * _3998;
                                float _4009 = 1.0 - (_3999 / (_3865 * _3865));
                                float _5208 = isnan(0.0) ? _4009 : (isnan(_4009) ? 0.0 : max(_4009, 0.0));
                                float _4010 = isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0));
                                float _4014 = sqrt(_3999) * _3880.w;
                                float _4016 = 1.39999997615814208984375 / (_4014 + 1.39999997615814208984375);
                                float _4017 = _4016 * _4016;
                                float _4020 = ((1.0 - _4017) * dot(vec3(_4003, _4004, _4005), vec3(_1476, _1479, _1482))) + _4017;
                                float _4023 = _4014 * _4014;
                                float _4027 = (fma(_2868, _3907.z, fma(_2867, _3907.y, _3907.x * _2866)) + _3907.w) / _3968;
                                float _4028 = (fma(_2868, _3922.z, fma(_2867, _3922.y, _3922.x * _2866)) + _3922.w) / _3968;
                                float _4032 = 1.0 - dot(vec2(_4027, _4028), vec2(_4027, _4028));
                                float _5224 = isnan(0.0) ? _4032 : (isnan(_4032) ? 0.0 : max(_4032, 0.0));
                                float _4033 = isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0));
                                float _4034 = _4033 * (((isnan(0.0) ? _4020 : (isnan(_4020) ? 0.0 : max(_4020, 0.0))) * _4010) / ((_4023 * 0.699999988079071044921875) + 1.0));
                                float _4046 = exp2(log2(1.0 / ((_4023 * 3.5) + 5.0)) * 0.25);
                                float _4047 = 1.0 - _1548;
                                float _4054 = sqrt(1.0 - ((1.0 - (_4047 * _4047)) * (1.0 - (_4046 * _4046))));
                                float _4055 = _4054 * _4054;
                                float _4056 = _4055 * _4055;
                                float _4057 = _4003 - _3313;
                                float _4058 = _4004 - _3314;
                                float _4059 = _4005 - _3315;
                                float _4063 = inversesqrt(dot(vec3(_4057, _4058, _4059), vec3(_4057, _4058, _4059)));
                                float _4067 = dot(vec3(_1476, _1479, _1482), vec3((-0.0) - _3313, (-0.0) - _3314, (-0.0) - _3315));
                                float _5235 = isnan(0.0) ? _4067 : (isnan(_4067) ? 0.0 : max(_4067, 0.0));
                                float _4070 = isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0));
                                float _4071 = dot(vec3(_1476, _1479, _1482), vec3(_4063 * _4057, _4063 * _4058, _4063 * _4059));
                                float _5246 = isnan(0.0) ? _4071 : (isnan(_4071) ? 0.0 : max(_4071, 0.0));
                                float _4074 = isnan(1.0) ? _5246 : (isnan(_5246) ? 1.0 : min(_5246, 1.0));
                                float _4078 = ((_4074 * _4074) * (_4056 + (-1.0))) + 1.0;
                                float _4079 = _4016 * _4055;
                                float _4080 = _4079 * _4079;
                                float _4086 = ((1.0 - _4080) * dot(vec3(_1476, _1479, _1482), vec3(_4003, _4004, _4005))) + _4080;
                                float _5257 = isnan(0.0) ? _4086 : (isnan(_4086) ? 0.0 : max(_4086, 0.0));
                                float _4087 = isnan(1.0) ? _5257 : (isnan(_5257) ? 1.0 : min(_5257, 1.0));
                                float _4088 = 1.0 - _4055;
                                float _4098 = (0.5 / (((_4087 * ((_4070 * _4088) + _4055)) + 9.9999999392252902907785028219223e-09) + (((_4087 * _4088) + _4055) * _4070))) * _4087;
                                float _5268 = isnan(0.0) ? _4098 : (isnan(_4098) ? 0.0 : max(_4098, 0.0));
                                float _4108 = (_4033 * _4010) * (((_4056 * 3.1415927410125732421875) * (isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0)))) / ((_4078 * _4078) * ((_4023 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_69_pred = _4108 * _3892.z;
                                frontier_phi_69_pred_1 = _4034 * _3880.z;
                                frontier_phi_69_pred_2 = _4034 * _3880.y;
                                frontier_phi_69_pred_3 = _4034 * _3880.x;
                                frontier_phi_69_pred_4 = _4108 * _3892.y;
                                frontier_phi_69_pred_5 = _4108 * _3892.x;
                            }
                            else
                            {
                                frontier_phi_69_pred = 0.0;
                                frontier_phi_69_pred_1 = 0.0;
                                frontier_phi_69_pred_2 = 0.0;
                                frontier_phi_69_pred_3 = 0.0;
                                frontier_phi_69_pred_4 = 0.0;
                                frontier_phi_69_pred_5 = 0.0;
                            }
                            _4114 = frontier_phi_69_pred;
                            _4117 = frontier_phi_69_pred_1;
                            _4116 = frontier_phi_69_pred_2;
                            _4115 = frontier_phi_69_pred_3;
                            _4113 = frontier_phi_69_pred_4;
                            _4112 = frontier_phi_69_pred_5;
                            _3822 = _4115 + _3835;
                            _3823 = _4116 + _3836;
                            _3824 = _4117 + _3837;
                            _3819 = _4112 + _3832;
                            _3820 = _4113 + _3833;
                            _3821 = _4114 + _3834;
                            if (_3839 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3832 = _3819;
                                _3833 = _3820;
                                _3834 = _3821;
                                _3835 = _3822;
                                _3836 = _3823;
                                _3837 = _3824;
                                _3838 = _3839;
                                continue;
                            }
                        }
                        frontier_phi_63_pred = _3824;
                        frontier_phi_63_pred_1 = _3823;
                        frontier_phi_63_pred_2 = _3822;
                        frontier_phi_63_pred_3 = _3821;
                        frontier_phi_63_pred_4 = _3820;
                        frontier_phi_63_pred_5 = _3819;
                    }
                    _3298 = frontier_phi_63_pred;
                    _3296 = frontier_phi_63_pred_1;
                    _3294 = frontier_phi_63_pred_2;
                    _3292 = frontier_phi_63_pred_3;
                    _3290 = frontier_phi_63_pred_4;
                    _3288 = frontier_phi_63_pred_5;
                    uint _3567 = _3566 + 1u;
                    if (_3567 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3560 = _3288;
                        _3561 = _3290;
                        _3562 = _3292;
                        _3563 = _3294;
                        _3564 = _3296;
                        _3565 = _3298;
                        _3566 = _3567;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_43_44_ladder = _3298;
                frontier_phi_43_44_ladder_1 = _3288;
                frontier_phi_43_44_ladder_2 = _3296;
                frontier_phi_43_44_ladder_3 = _3294;
                frontier_phi_43_44_ladder_4 = _3292;
                frontier_phi_43_44_ladder_5 = _3290;
            }
            else
            {
                frontier_phi_43_44_ladder = _3083;
                frontier_phi_43_44_ladder_1 = _3073;
                frontier_phi_43_44_ladder_2 = _3081;
                frontier_phi_43_44_ladder_3 = _3079;
                frontier_phi_43_44_ladder_4 = _3077;
                frontier_phi_43_44_ladder_5 = _3075;
            }
            _3287 = frontier_phi_43_44_ladder_1;
            _3289 = frontier_phi_43_44_ladder_5;
            _3291 = frontier_phi_43_44_ladder_4;
            _3293 = frontier_phi_43_44_ladder_3;
            _3295 = frontier_phi_43_44_ladder_2;
            _3297 = frontier_phi_43_44_ladder;
        }
        float _3302 = isnan(1.0) ? _1519 : (isnan(_1519) ? 1.0 : min(_1519, 1.0));
        _2924 = (_3302 * _3293) + _2652;
        _2926 = (_3302 * _3295) + _2653;
        _2928 = (_3302 * _3297) + _2654;
        _2930 = ((_3287 * 0.039999999105930328369140625) * _3302) + _2808;
        _2932 = ((_3289 * 0.039999999105930328369140625) * _3302) + _2809;
        _2934 = ((_3291 * 0.039999999105930328369140625) * _3302) + _2810;
    }
    else
    {
        _2924 = _2652;
        _2926 = _2653;
        _2928 = _2654;
        _2930 = _2808;
        _2932 = _2809;
        _2934 = _2810;
    }
    uint _2940 = _1496 + uint(cbMatDynParam._m0[0u].w);
    float _2961 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2962 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2963 = cbSceneParam._m0[86u].x * ((_1160 / cbSceneParam._m0[86u].x) + (((10.0 / (_1363 + 10.0)) * cbMtdParam._m0[19u].y) * dot(vec3(_1456, _1457, _1458), vec3(_226, _227, _228))));
    float _2964 = isnan(_2961) ? _2963 : (isnan(_2963) ? _2961 : min(_2963, _2961));
    float _2965 = isnan(_2962) ? _1161 : (isnan(_1161) ? _2962 : min(_1161, _2962));
    vec4 _2967 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2964, _2965), 0.0);
    float _2969 = _2967.x;
    bool _2989 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2969)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2969))) > _1363;
    float _2990 = _2989 ? _2964 : _1160;
    float _2991 = _2989 ? _2965 : _1161;
    vec4 _2993 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2990, _2991));
    vec4 _3007 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2990, _2991));
    float _3009 = _3007.x;
    bool _3014 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3023 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3029 = (_3014 ? (_3023 / (cbSceneParam._m0[2u].x - _3009)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3009))) - _1363;
    float _3031 = cbMtdParam._m0[40u].x + cbMtdParam._m0[38u].z;
    float _3032 = cbMtdParam._m0[40u].y + cbMtdParam._m0[38u].w;
    float _3033 = cbMtdParam._m0[40u].z + cbMtdParam._m0[39u].x;
    bool _3039 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3043 = (isnan(_3029) ? 0.0 : (isnan(0.0) ? _3029 : max(0.0, _3029))) * (-1.44269502162933349609375);
    float _5299 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
    float _5310 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
    float _5321 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    float _3176;
    float _3177;
    float _3178;
    if ((1.0 - _1145) > 0.00999999977648258209228515625)
    {
        vec4 _3095 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2990, _2991), 0.0);
        float _3097 = _3095.x;
        float _3103 = (_3014 ? (_3023 / (cbSceneParam._m0[2u].x - _3097)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3097))) - _1363;
        uint _3109 = floatBitsToUint(cbInstanceData._m0[_2588]).x * 14u;
        uint _3115 = _3109 + 4u;
        float _3124 = dot(vec3(cbLight._m0[_3109].xyz), vec3(_247, _248, _249));
        float _3132 = dot(vec3((-0.0) - _1419, (-0.0) - _1420, (-0.0) - _1421), vec3((-0.0) - _247, (-0.0) - _248, (-0.0) - _249));
        float _3137 = ((isnan(0.0) ? _3132 : (isnan(_3132) ? 0.0 : max(_3132, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3124 : (isnan(_3124) ? 0.001000000047497451305389404296875 : max(_3124, 0.001000000047497451305389404296875)))) + 1.0;
        float _3139 = (-0.0) - ((isnan(_3103) ? 0.0 : (isnan(0.0) ? _3103 : max(0.0, _3103))) * _3137);
        _3176 = _3039 ? 0.0 : ((((cbMtdParam._m0[38u].z * 0.079577468335628509521484375) * cbLight._m0[_3115].x) / ((_3137 * _3031) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3031 * 1.44269502162933349609375) * _3139)));
        _3177 = _3039 ? 0.0 : ((((cbMtdParam._m0[38u].w * 0.079577468335628509521484375) * cbLight._m0[_3115].y) / ((_3137 * _3032) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3032 * 1.44269502162933349609375) * _3139)));
        _3178 = _3039 ? 0.0 : ((((cbMtdParam._m0[39u].x * 0.079577468335628509521484375) * cbLight._m0[_3115].z) / ((_3137 * _3033) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3033 * 1.44269502162933349609375) * _3139)));
    }
    else
    {
        _3176 = 0.0;
        _3177 = 0.0;
        _3178 = 0.0;
    }
    float _3195 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _3196 = (_3176 + ((exp2(_3043 * (_3039 ? 0.0 : _3031)) * ((cbSceneParam._m0[72u].z * (((cbMtdParam._m0[29u].y - _1270) * _616) + _1270)) + _2993.x)) * cbSceneParam._m0[72u].w)) * _3195;
    float _3197 = (_3177 + ((exp2(_3043 * (_3039 ? 0.0 : _3032)) * ((cbSceneParam._m0[72u].z * (((cbMtdParam._m0[29u].y - _1271) * _616) + _1271)) + _2993.y)) * cbSceneParam._m0[72u].w)) * _3195;
    float _3198 = (_3178 + ((exp2(_3043 * (_3039 ? 0.0 : _3033)) * ((cbSceneParam._m0[72u].z * (((cbMtdParam._m0[29u].y - _1272) * _616) + _1272)) + _2993.z)) * cbSceneParam._m0[72u].w)) * _3195;
    float _3207 = (((cbInstanceData._m0[_2940].x * (((((_956 * cbMtdParam._m0[11u].x) - _920) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _956) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].x) * _979.x)) * _928) + _920)) + (((((_2530 * _2565.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0))) * _2325) * _2581)) + _2930) * cbPerFrame._m0[3u].x)) + _3196) + ((((isnan(1.0) ? _5299 : (isnan(_5299) ? 1.0 : min(_5299, 1.0))) * (_2924 + ((isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0))) * _1519))) - _3196) * _1145);
    float _3210 = (((cbInstanceData._m0[_2940].y * (((((_957 * cbMtdParam._m0[11u].y) - _921) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _957) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].y) * _979.y)) * _928) + _921)) + (((((_2530 * _2565.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0))) * _2325) * _2581)) + _2932) * cbPerFrame._m0[3u].x)) + _3197) + ((((isnan(1.0) ? _5310 : (isnan(_5310) ? 1.0 : min(_5310, 1.0))) * (_2926 + ((isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0))) * _1519))) - _3197) * _1145);
    float _3213 = (((cbInstanceData._m0[_2940].z * (((((_958 * cbMtdParam._m0[11u].z) - _922) + ((((cbMtdParam._m0[29u].x * _958) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _979.z)) * _928) + _922)) + (((((_2530 * _2565.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0))) * _2325) * _2581)) + _2934) * cbPerFrame._m0[3u].x)) + _3198) + ((((isnan(1.0) ? _5321 : (isnan(_5321) ? 1.0 : min(_5321, 1.0))) * (_2928 + ((isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0))) * _1519))) - _3198) * _1145);
    float _3226 = _1160 / cbSceneParam._m0[86u].x;
    float _3227 = _1161 / cbSceneParam._m0[86u].y;
    vec4 _3241 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3226, _3227, (log2((isnan(cbSceneParam._m0[77u].w) ? _1363 : (isnan(_1363) ? cbSceneParam._m0[77u].w : min(_1363, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3243 = _3241.x;
    float _3244 = _3241.y;
    float _3245 = _3241.z;
    float _3246 = _3241.w;
    float _3375;
    float _3377;
    float _3379;
    float _3381;
    if (_1363 > cbSceneParam._m0[78u].w)
    {
        float _3340 = isnan(_1363) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1363 : min(cbSceneParam._m0[80u].w, _1363));
        float _3341 = _3340 / _1363;
        float _3352 = _3341 * _1412;
        float _3353 = _1413 * _3341;
        float _3354 = (-0.0) - _3353;
        float _3355 = _3341 * _1414;
        float _3357 = (cbSceneParam._m0[77u].w * _3354) / _3340;
        float _3358 = _3357 + cbSceneParam._m0[79u].w;
        float _3359 = cbSceneParam._m0[79u].w - _3353;
        float _3365 = sqrt(((_3352 * _3352) + (_3353 * _3353)) + (_3355 * _3355));
        float _3368 = (1.0 - (cbSceneParam._m0[77u].w / _3340)) * _3365;
        float _3373 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3374 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3760;
        if (abs((_3354 - _3357) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3760 = ((((_3358 > 0.0) ? exp2(_3373 * _3358) : (2.0 - exp2(_3374 * _3358))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3368;
        }
        else
        {
            float _3507 = 1.0 / cbSceneParam._m0[80u].x;
            float _3508 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : max(_3358, _3359));
            float _3509 = isnan(_3359) ? _3358 : (isnan(_3358) ? _3359 : min(_3358, _3359));
            float _3518 = isnan(0.0) ? _3508 : (isnan(_3508) ? 0.0 : min(_3508, 0.0));
            float _3519 = isnan(0.0) ? _3509 : (isnan(_3509) ? 0.0 : min(_3509, 0.0));
            _3760 = ((abs(_3365 / _3354) * cbSceneParam._m0[80u].y) * ((((_3518 - _3519) * 2.0) - ((exp2(_3373 * (isnan(0.0) ? _3508 : (isnan(_3508) ? 0.0 : max(_3508, 0.0)))) - exp2(_3373 * (isnan(0.0) ? _3509 : (isnan(_3509) ? 0.0 : max(_3509, 0.0))))) * _3507)) - ((exp2(_3374 * _3518) - exp2(_3374 * _3519)) * _3507))) + (_3368 * cbSceneParam._m0[80u].z);
        }
        vec4 _3762 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3226, _3227, 1.0), 0.0);
        float _3771 = exp2((_3760 * (-1.44269502162933349609375)) * (1.0 - _3762.w));
        float _3772 = log2(_3771);
        float _3788 = log2(_3246);
        _3375 = (exp2(_3788 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3772 * cbSceneParam._m0[78u].x)) * _3762.x) / cbSceneParam._m0[78u].x)) + _3243;
        _3377 = (exp2(_3788 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3772 * cbSceneParam._m0[78u].y)) * _3762.y) / cbSceneParam._m0[78u].y)) + _3244;
        _3379 = (exp2(_3788 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3772 * cbSceneParam._m0[78u].z)) * _3762.z) / cbSceneParam._m0[78u].z)) + _3245;
        _3381 = _3771 * _3246;
    }
    else
    {
        _3375 = _3243;
        _3377 = _3244;
        _3379 = _3245;
        _3381 = _3246;
    }
    bool _3393 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3394 = log2(_3381);
    float _3401 = exp2(_3394 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0)));
    float _3402 = exp2(_3394 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : max(_3210, 0.0)));
    float _3403 = exp2(_3394 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : max(_3213, 0.0)));
    vec4 _3411 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1160, _1161));
    float _3413 = _3411.x;
    float _3434 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3413)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3413))) - _1363) * cbMtdParam._m0[23u].y;
    float _5402 = isnan(0.0) ? _3434 : (isnan(_3434) ? 0.0 : max(_3434, 0.0));
    float _3436 = (cbInstanceData._m0[_1495 + 6u].w * (isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0)))) * (isnan(1.0) ? _5402 : (isnan(_5402) ? 1.0 : min(_5402, 1.0)));
    float _3445 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3445 * (_3393 ? _3401 : (_3401 + (cbSceneParam._m0[72u].w * _3375)));
    SV_Target.y = _3445 * (_3393 ? _3402 : (_3402 + (cbSceneParam._m0[72u].w * _3377)));
    SV_Target.z = _3445 * (_3393 ? _3403 : (_3403 + (cbSceneParam._m0[72u].w * _3379)));
    SV_Target.w = _3436;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3436;
}


