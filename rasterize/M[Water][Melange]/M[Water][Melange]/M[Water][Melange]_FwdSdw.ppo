#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 52) uniform texture2D g_ScreenSpaceShadowTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Water_Melange_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Water_Melange_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1902;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _232 = _231 * _223;
    float _233 = _231 * _224;
    float _234 = _231 * _225;
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = _238 * NORMAL.x;
    float _240 = _238 * NORMAL.y;
    float _241 = _238 * NORMAL.z;
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _246 = _245 * TANGENT.x;
    float _247 = _245 * TANGENT.y;
    float _248 = _245 * TANGENT.z;
    float _253;
    float _254;
    float _255;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _253 = (-0.0) - _239;
        _254 = (-0.0) - _240;
        _255 = (-0.0) - _241;
    }
    else
    {
        _253 = _239;
        _254 = _240;
        _255 = _241;
    }
    float _299 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _309 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _299);
    float _310 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _299);
    float _311 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _299);
    float _327 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _329 = (sqrt(((_309 * _309) + (_310 * _310)) + (_311 * _311)) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0)));
    float _333 = _329 / cbMtdParam._m0[22u].z;
    float _334 = isnan(0.0) ? _333 : (isnan(_333) ? 0.0 : max(_333, 0.0));
    float _335 = isnan(8.0) ? _334 : (isnan(_334) ? 8.0 : min(_334, 8.0));
    float _342 = cbMtdParam._m0[10u].x * _335;
    float _343 = cbMtdParam._m0[10u].y * _335;
    float _344 = cbMtdParam._m0[10u].z * _335;
    float _345 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _346 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _347 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _358 = cbMtdParam._m0[21u].y + _329;
    float _362 = _358 * cbMtdParam._m0[23u].z;
    float _4581 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    vec4 _380 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _383 = _380.x;
    float _406 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _383)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _383))) - POSITION_1.w) / cbMtdParam._m0[20u].x;
    float _4592 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _407 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
    float _412 = 1.0 - (isnan(cbMtdParam._m0[25u].y) ? _407 : (isnan(_407) ? cbMtdParam._m0[25u].y : max(_407, cbMtdParam._m0[25u].y)));
    float _414 = (cbMtdParam._m0[25u].x + TEXCOORD_3.x) - (_412 * cbMtdParam._m0[20u].z);
    float _425 = cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x;
    float _430 = cbMtdParam._m0[35u].x * TEXCOORD.x;
    float _431 = cbMtdParam._m0[35u].y * TEXCOORD.y;
    vec4 _445 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(((_430 + (_425 * cbMtdParam._m0[35u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_431 + (_425 * cbMtdParam._m0[35u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _447 = _445.x;
    float _448 = _445.y;
    float _4608 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _451 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
    float _452 = _445.z - _451;
    float _4619 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _453 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _465 = (_453 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _467 = (_453 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _480 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_465 + (cbMtdParam._m0[30u].z * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_467 + (cbMtdParam._m0[30u].w * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _484 = _480.z;
    vec4 _495 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_465 + (cbMtdParam._m0[30u].x * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_467 + (cbMtdParam._m0[30u].y * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _499 = _495.z;
    float _502 = (_412 - _445.w) + (isnan(_499) ? _484 : (isnan(_484) ? _499 : max(_484, _499)));
    float _4635 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _504 = (_414 * (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0)))) * (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0)));
    float _517 = (_504 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[14u].x * _453);
    float _518 = (_504 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[14u].y * _453);
    float _519 = (_504 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[14u].z * _453);
    vec4 _565 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].x * _425))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].y * _425))) + cbTextureTilingScale._m0[1u].w));
    float _570 = _565.z * 0.099999986588954925537109375;
    float _4646 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _572 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
    float _576 = cbMtdParam._m0[23u].x * _329;
    float _4657 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _577 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
    float _591 = (_517 + (isnan(0.07999999821186065673828125) ? _345 : (isnan(_345) ? 0.07999999821186065673828125 : min(_345, 0.07999999821186065673828125)))) + (_577 * (((1.0 - _517) - _572) + _570));
    float _593 = (_518 + (isnan(0.07999999821186065673828125) ? _346 : (isnan(_346) ? 0.07999999821186065673828125 : min(_346, 0.07999999821186065673828125)))) + (_577 * (((1.0 - _518) - _572) + _570));
    float _595 = (_519 + (isnan(0.07999999821186065673828125) ? _347 : (isnan(_347) ? 0.07999999821186065673828125 : min(_347, 0.07999999821186065673828125)))) + (_577 * (((1.0 - _519) + _570) - _572));
    float _4668 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _596 = isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0));
    float _4679 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _597 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
    float _4690 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    float _598 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
    float _604 = _329 / cbMtdParam._m0[24u].z;
    float _4701 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _607 = (1.0 - (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0)))) * cbMtdParam._m0[24u].y;
    float _614 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _451) + cbMtdParam._m0[19u].x;
    float _621 = (POSITION_1.w - cbMtdParam._m0[28u].z) * (1.0 / cbMtdParam._m0[28u].y);
    float _4712 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _622 = isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0));
    float _635 = (cbMtdParam._m0[33u].z * _425) + _430;
    float _636 = (cbMtdParam._m0[33u].w * _425) + _431;
    vec4 _664 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[32u].z * _425) + _430)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[32u].w * _425) + _431)) + cbTextureTilingScale._m0[3u].w));
    float _671 = (_664.x * 2.0) + (-1.0);
    float _673 = (_664.y * 2.0) + (-1.0);
    float _677 = 1.0 - dot(vec2(_671, _673), vec2(_671, _673));
    float _4723 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _679 = sqrt(isnan(1.0) ? _4723 : (isnan(_4723) ? 1.0 : min(_4723, 1.0)));
    float _682 = fma(_679, _253, fma(_673, _246, _671 * _232));
    float _685 = fma(_679, _254, fma(_673, _247, _671 * _233));
    float _688 = fma(_679, _255, fma(_673, _248, _671 * _234));
    float _692 = inversesqrt(dot(vec3(_682, _685, _688), vec3(_682, _685, _688)));
    float _693 = cbPerFrame._m0[22u].x * 2.0;
    float _694 = _693 * cbMtdParam._m0[26u].w;
    float _698 = ((_682 * 0.5) * _692) + (-0.25);
    float _702 = ((_685 * 0.5) * _692) + (-0.25);
    float _703 = _702 * cbMtdParam._m0[27u].x;
    float _705 = (-0.0) - (cbMtdParam._m0[27u].x * _698);
    float _706 = fract(_694);
    float _708 = fract(_694 + 0.5);
    float _719 = abs((_706 * 2.0) + (-1.0));
    vec4 _736 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_706 * _705) + _635) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_703 * _706) + _636) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _738 = _736.x;
    float _739 = _736.y;
    float _740 = _736.z;
    vec4 _741 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_708 * _705) + _635) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_703 * _708) + _636) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _752 = ((_741.x - _738) * _719) + _738;
    float _753 = ((_741.y - _739) * _719) + _739;
    float _754 = ((_741.z - _740) * _719) + _740;
    float _768 = (cbMtdParam._m0[32u].x * _425) + _430;
    float _769 = (cbMtdParam._m0[32u].y * _425) + _431;
    float _772 = _693 * cbMtdParam._m0[26u].x;
    float _773 = _702 * cbMtdParam._m0[25u].w;
    float _775 = (-0.0) - (cbMtdParam._m0[25u].w * _698);
    float _776 = fract(_772);
    float _778 = fract(_772 + 0.5);
    float _789 = abs((_776 * 2.0) + (-1.0));
    vec4 _806 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_776 * _775) + _768) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_773 * _776) + _769) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _808 = _806.x;
    float _809 = _806.y;
    float _810 = _806.z;
    vec4 _811 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_778 * _775) + _768) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_773 * _778) + _769) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _851 = (cbMtdParam._m0[33u].x * _425) + _430;
    float _852 = (cbMtdParam._m0[33u].y * _425) + _431;
    float _855 = _693 * cbMtdParam._m0[26u].z;
    float _856 = _702 * cbMtdParam._m0[26u].y;
    float _858 = (-0.0) - (cbMtdParam._m0[26u].y * _698);
    float _859 = fract(_855);
    float _861 = fract(_855 + 0.5);
    float _872 = abs((_859 * 2.0) + (-1.0));
    vec4 _889 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_859 * _858) + _851) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_856 * _859) + _852) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _891 = _889.x;
    float _892 = _889.y;
    float _893 = _889.z;
    vec4 _894 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_861 * _858) + _851) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_856 * _861) + _852) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _914 = (((((_894.x - _891) * _872) + _891) * cbMtdParam._m0[16u].x) + (_752 * cbMtdParam._m0[17u].x)) + (((((cbMtdParam._m0[15u].x - cbMtdParam._m0[18u].x) * _752) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].x) * (((_811.x - _808) * _789) + _808));
    float _918 = (((((_894.y - _892) * _872) + _892) * cbMtdParam._m0[16u].y) + (_753 * cbMtdParam._m0[17u].y)) + (((((cbMtdParam._m0[15u].y - cbMtdParam._m0[18u].y) * _753) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].y) * (((_811.y - _809) * _789) + _809));
    float _922 = (((((_894.z - _893) * _872) + _893) * cbMtdParam._m0[16u].z) + (_754 * cbMtdParam._m0[17u].z)) + ((((cbMtdParam._m0[28u].w * _754) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_811.z - _810) * _789) + _810));
    float _926 = _914 - (_914 * _622);
    float _927 = _918 - (_918 * _622);
    float _928 = _922 - (_922 * _622);
    float _933 = (POSITION_1.w - cbMtdParam._m0[28u].x) * (1.0 / cbMtdParam._m0[27u].w);
    float _4734 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _934 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
    float _947 = (cbMtdParam._m0[34u].z * _425) + _430;
    float _948 = (cbMtdParam._m0[34u].w * _425) + _431;
    vec4 _960 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_947 * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (_948 * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _962 = _960.x;
    float _963 = _960.y;
    float _964 = _960.z;
    vec4 _985 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _947) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _948) + cbTextureTilingScale._m0[9u].w));
    float _4745 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _1027 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
    float _1037 = _329 / cbMtdParam._m0[22u].w;
    float _4756 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1038 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
    float _1039 = _453 * 0.23999999463558197021484375;
    float _1041 = _453 * (-0.20000000298023223876953125);
    float _1052 = cbMtdParam._m0[37u].x * TEXCOORD.x;
    float _1053 = cbMtdParam._m0[37u].y * TEXCOORD.y;
    vec4 _1068 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].z * _425) + _1039) + _1052) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].w * _425) + _1041) + _1053) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1084 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1052 + _1039) + (cbMtdParam._m0[37u].z * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1053 + _1041) + (cbMtdParam._m0[37u].w * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1102 = (((_495.x + (-0.5)) * 0.5) + _480.x) + (((_1068.x + (-1.0)) + _1084.x) * cbMtdParam._m0[24u].w);
    float _1103 = (((_495.y + (-0.5)) * 0.5) + _480.y) + (((_1068.y + (-1.0)) + _1084.y) * cbMtdParam._m0[24u].w);
    float _1108 = ((_565.x - _1102) * _1038) + _1102;
    float _1109 = ((_565.y - _1103) * _1038) + _1103;
    float _1111 = _329 / cbMtdParam._m0[22u].y;
    float _4767 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _1112 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
    float _1128 = ((((_1027 * (0.5 - _447)) + _447) + (((_1108 + (-0.5)) + ((0.5 - _1108) * _1112)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1129 = ((((_1027 * (0.5 - _448)) + _448) + (((_1109 + (-0.5)) + ((0.5 - _1109) * _1112)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1130 = dot(vec2(_1128, _1129), vec2(_1128, _1129));
    float _4778 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _1135 = sqrt(1.0 - (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))));
    float _1139 = cbMtdParam._m0[23u].w * _358;
    float _4789 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
    float _1148 = cbMtdParam._m0[21u].w * _358;
    float _4800 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
    float _1150 = (isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0))) * cbMtdParam._m0[27u].y;
    float _4811 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _1151 = isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0));
    float _1166 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1167 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1177 = ((_1166 / cbSceneParam._m0[86u].x) * 2.0) + (-1.0);
    float _1178 = 1.0 - ((_1167 / cbSceneParam._m0[86u].y) * 2.0);
    vec4 _1179 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1166, _1167), 0.0);
    float _1181 = _1179.x;
    float _1221 = fma(_1181, cbSceneParam._m0[15u].z, fma(_1178, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * _1177)) + cbSceneParam._m0[15u].w;
    float _1222 = (fma(_1181, cbSceneParam._m0[12u].z, fma(_1178, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * _1177)) + cbSceneParam._m0[12u].w) / _1221;
    float _1223 = (fma(_1181, cbSceneParam._m0[13u].z, fma(_1178, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * _1177)) + cbSceneParam._m0[13u].w) / _1221;
    float _1224 = (fma(_1181, cbSceneParam._m0[14u].z, fma(_1178, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * _1177)) + cbSceneParam._m0[14u].w) / _1221;
    vec4 _1271 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((fma(_1224, cbSceneParam._m0[20u].z, fma(_1223, cbSceneParam._m0[20u].y, cbSceneParam._m0[20u].x * _1222)) + cbSceneParam._m0[20u].w) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].x * _425))) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((fma(_1224, cbSceneParam._m0[22u].z, fma(_1223, cbSceneParam._m0[22u].y, cbSceneParam._m0[22u].x * _1222)) + cbSceneParam._m0[22u].w) - cbSceneParam._m0[92u].z) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].y * _425))) + cbTextureTilingScale._m0[7u].w));
    float _1276 = _1271.x * cbMtdParam._m0[42u].y;
    float _1277 = _1271.y * cbMtdParam._m0[42u].z;
    float _1278 = _1271.z * cbMtdParam._m0[42u].w;
    float _1295 = ((cbMtdParam._m0[24u].x - cbMtdParam._m0[22u].x) * (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0)))) + cbMtdParam._m0[22u].x;
    float _1300 = _1128 - (_1295 * _1128);
    float _1301 = _1129 - (_1295 * _1129);
    float _1302 = (_1295 * (1.0 - _1135)) + _1135;
    float _1321 = fma(_1135, _253, fma(_1129, _246, _1128 * _232));
    float _1324 = fma(_1135, _254, fma(_1129, _247, _1128 * _233));
    float _1327 = fma(_1135, _255, fma(_1129, _248, _1128 * _234));
    float _1331 = inversesqrt(dot(vec3(_1321, _1324, _1327), vec3(_1321, _1324, _1327)));
    float _1332 = _1331 * _1321;
    float _1333 = _1331 * _1324;
    float _1334 = _1331 * _1327;
    float _1337 = fma(_1302, _253, fma(_1301, _246, _1300 * _232));
    float _1340 = fma(_1302, _254, fma(_1301, _247, _1300 * _233));
    float _1343 = fma(_1302, _255, fma(_1301, _248, _1300 * _234));
    float _1347 = inversesqrt(dot(vec3(_1337, _1340, _1343), vec3(_1337, _1340, _1343)));
    float _1348 = _1347 * _1337;
    float _1349 = _1347 * _1340;
    float _1350 = _1347 * _1343;
    float _4822 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _4833 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _1352 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
    float _4844 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _4855 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _4866 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _1369 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1409 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1418 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1409);
    float _1419 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1409);
    float _1420 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1409);
    float _1424 = inversesqrt(dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420)));
    float _1425 = _1418 * _1424;
    float _1426 = _1419 * _1424;
    float _1427 = _1420 * _1424;
    vec4 _1429 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1438 = (_1429.x * 2.0) + (-1.0);
    float _1439 = (_1429.y * 2.0) + (-1.0);
    float _1440 = (_1429.z * 2.0) + (-1.0);
    float _1444 = inversesqrt(dot(vec3(_1438, _1439, _1440), vec3(_1438, _1439, _1440)));
    float _1455 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1429.w;
    float _1462 = (((_1438 * _1444) - _1332) * _1455) + _1332;
    float _1463 = (((_1439 * _1444) - _1333) * _1455) + _1333;
    float _1464 = (((_1440 * _1444) - _1334) * _1455) + _1334;
    float _1482 = fma(_1464, cbSceneParam._m0[5u].z, fma(_1463, cbSceneParam._m0[5u].y, _1462 * cbSceneParam._m0[5u].x));
    float _1485 = fma(_1464, cbSceneParam._m0[6u].z, fma(_1463, cbSceneParam._m0[6u].y, _1462 * cbSceneParam._m0[6u].x));
    float _1488 = fma(_1464, cbSceneParam._m0[7u].z, fma(_1463, cbSceneParam._m0[7u].y, _1462 * cbSceneParam._m0[7u].x));
    uint _1501 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1502 = _1501 + 9u;
    uint _1503 = _1502 + uint(cbMatDynParam._m0[0u].w);
    float _1509 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0)))) * cbInstanceData._m0[_1503].x;
    float _1510 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0)))) * cbInstanceData._m0[_1503].y;
    float _1511 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0)))) * cbInstanceData._m0[_1503].z;
    float _4877 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
    float _1512 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
    float _4888 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
    float _1513 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
    float _4899 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
    float _1514 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
    vec4 _1522 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1166, cbSceneParam._m0[86u].y * _1167));
    float _1525 = _1522.x * TEXCOORD_3.w;
    float _1529 = abs(dot(vec3(_1425, _1426, _1427), vec3(_1462, _1463, _1464)));
    float _4910 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
    float _1542 = dot(vec3(_1348, _1349, _1350), vec3(_1425, _1426, _1427)) * 2.0;
    float _1546 = (_1542 * _1348) - _1425;
    float _1547 = (_1542 * _1349) - _1426;
    float _1548 = (_1542 * _1350) - _1427;
    float _1552 = abs(dot(vec3(_1425, _1426, _1427), vec3(_1348, _1349, _1350)));
    float _4921 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
    float _1554 = sqrt(_1352);
    float _1566 = exp2((_1554 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1554 * 3.0));
    float _1597 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1601 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1605 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1901;
    float _1903;
    float _1904;
    float _1905;
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1630 = fma(_1605, cbModelParam._m0[26u].z, fma(_1601, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1597));
        float _1634 = fma(_1605, cbModelParam._m0[27u].z, fma(_1601, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1597));
        float _1638 = fma(_1605, cbModelParam._m0[28u].z, fma(_1601, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1597));
        float _1660 = _1597 + _1348;
        float _1661 = _1601 + _1349;
        float _1662 = _1605 + _1350;
        float _1672 = fma(_1662, cbModelParam._m0[26u].z, fma(_1661, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1660)) - _1630;
        float _1673 = fma(_1662, cbModelParam._m0[27u].z, fma(_1661, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1660)) - _1634;
        float _1674 = fma(_1662, cbModelParam._m0[28u].z, fma(_1661, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1660)) - _1638;
        float _1678 = inversesqrt(dot(vec3(_1672, _1673, _1674), vec3(_1672, _1673, _1674)));
        float _1690 = ((_1678 * _1672) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1630 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1691 = ((_1678 * _1673) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1634 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1692 = ((_1678 * _1674) / cbModelParam._m0[34u].z) + ((((((_1638 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1695 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1702 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1709 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1716 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        float _1729 = exp2((_1695.w + (-0.5)) * 20.0) * 2.0;
        float _1730 = _1729 * (_1695.x + (-0.5));
        float _1731 = _1729 * (_1695.y + (-0.5));
        float _1732 = _1729 * (_1695.z + (-0.5));
        float _1739 = exp2((_1702.w + (-0.5)) * 20.0) * 2.0;
        float _1740 = _1739 * (_1702.x + (-0.5));
        float _1741 = _1739 * (_1702.y + (-0.5));
        float _1742 = _1739 * (_1702.z + (-0.5));
        float _1749 = exp2((_1709.w + (-0.5)) * 20.0) * 2.0;
        float _1750 = _1749 * (_1709.x + (-0.5));
        float _1751 = _1749 * (_1709.y + (-0.5));
        float _1752 = _1749 * (_1709.z + (-0.5));
        float _1759 = exp2((_1716.w + (-0.5)) * 20.0) * 2.0;
        float _1760 = _1759 * (_1716.x + (-0.5));
        float _1761 = _1759 * (_1716.y + (-0.5));
        float _1762 = _1759 * (_1716.z + (-0.5));
        float _1763 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1764 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
        float _1765 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1766 = _1730 * 0.5;
        float _1767 = _1740 * 0.5;
        float _1768 = _1750 * 0.5;
        float _1769 = dot(vec3(_1766, _1767, _1768), vec3(_1766, _1767, _1768));
        float _1774 = (_1769 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1769);
        float _1783 = (dot(vec3(_1348, _1349, _1350), vec3(_1774 * _1766, _1774 * _1767, _1774 * _1768)) + 1.0) * 0.5;
        float _4947 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1793 = sqrt(((_1767 * _1767) + (_1766 * _1766)) + (_1768 * _1768)) / (_1763 + 9.9999997473787516355514526367188e-06);
        float _4958 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
        float _1794 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
        float _1795 = _1794 * 2.0;
        float _1799 = (1.0 - _1794) / (_1794 + 1.0);
        float _4969 = isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0));
        float _1800 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _1809 = ((((1.0 - _1800) * (_1795 + 2.0)) * exp2(log2(isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0))) * (_1795 + 1.0))) + _1800) * _1763;
        float _1810 = _1731 * 0.5;
        float _1811 = _1741 * 0.5;
        float _1812 = _1751 * 0.5;
        float _1813 = dot(vec3(_1810, _1811, _1812), vec3(_1810, _1811, _1812));
        float _1818 = (_1813 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1813);
        float _1826 = (dot(vec3(_1348, _1349, _1350), vec3(_1818 * _1810, _1818 * _1811, _1818 * _1812)) + 1.0) * 0.5;
        float _4980 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
        float _1835 = sqrt(((_1811 * _1811) + (_1810 * _1810)) + (_1812 * _1812)) / (_1764 + 9.9999997473787516355514526367188e-06);
        float _4991 = isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0));
        float _1836 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
        float _1837 = _1836 * 2.0;
        float _1841 = (1.0 - _1836) / (_1836 + 1.0);
        float _5002 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
        float _1842 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
        float _1851 = ((((1.0 - _1842) * (_1837 + 2.0)) * exp2(log2(isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0))) * (_1837 + 1.0))) + _1842) * _1764;
        float _1852 = _1732 * 0.5;
        float _1853 = _1742 * 0.5;
        float _1854 = _1752 * 0.5;
        float _1855 = dot(vec3(_1852, _1853, _1854), vec3(_1852, _1853, _1854));
        float _1860 = (_1855 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1855);
        float _1868 = (dot(vec3(_1348, _1349, _1350), vec3(_1860 * _1852, _1860 * _1853, _1860 * _1854)) + 1.0) * 0.5;
        float _5013 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1877 = sqrt(((_1853 * _1853) + (_1852 * _1852)) + (_1854 * _1854)) / (_1765 + 9.9999997473787516355514526367188e-06);
        float _5024 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
        float _1878 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
        float _1879 = _1878 * 2.0;
        float _1883 = (1.0 - _1878) / (_1878 + 1.0);
        float _5035 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0));
        float _1884 = isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0));
        float _1893 = ((((1.0 - _1884) * (_1879 + 2.0)) * exp2(log2(isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0))) * (_1879 + 1.0))) + _1884) * _1765;
        _1901 = _1732;
        _1903 = _1731;
        _1904 = _1730;
        _1905 = _1742;
        _1906 = _1741;
        _1907 = _1740;
        _1908 = _1752;
        _1909 = _1751;
        _1910 = _1750;
        _1911 = _1765;
        _1912 = _1764;
        _1913 = _1763;
        _1914 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0)));
        _1915 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0)));
        _1916 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0)));
    }
    else
    {
        _1901 = _1902;
        _1903 = _1902;
        _1904 = _1902;
        _1905 = _1902;
        _1906 = _1902;
        _1907 = _1902;
        _1908 = _1902;
        _1909 = _1902;
        _1910 = _1902;
        _1911 = _1902;
        _1912 = _1902;
        _1913 = _1902;
        _1914 = 0.0;
        _1915 = 0.0;
        _1916 = 0.0;
    }
    float _2207;
    float _2208;
    float _2209;
    float _2210;
    float _2211;
    float _2212;
    float _2213;
    float _2214;
    float _2215;
    float _2216;
    float _2217;
    float _2218;
    float _2219;
    float _2220;
    float _2221;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1940 = fma(_1605, cbModelParam._m0[30u].z, fma(_1601, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1597));
        float _1944 = fma(_1605, cbModelParam._m0[31u].z, fma(_1601, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1597));
        float _1948 = fma(_1605, cbModelParam._m0[32u].z, fma(_1601, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1597));
        float _1970 = _1597 + _1348;
        float _1971 = _1601 + _1349;
        float _1972 = _1605 + _1350;
        float _1982 = fma(_1972, cbModelParam._m0[30u].z, fma(_1971, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1970)) - _1940;
        float _1983 = fma(_1972, cbModelParam._m0[31u].z, fma(_1971, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1970)) - _1944;
        float _1984 = fma(_1972, cbModelParam._m0[32u].z, fma(_1971, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1970)) - _1948;
        float _1988 = inversesqrt(dot(vec3(_1982, _1983, _1984), vec3(_1982, _1983, _1984)));
        float _2000 = ((_1988 * _1982) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1940 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2001 = ((_1988 * _1983) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1944 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2002 = ((_1988 * _1984) / cbModelParam._m0[35u].z) + ((((((_1948 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2004 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2000, _2001, _2002), 0.0);
        vec4 _2011 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2000, _2001, _2002), 0.0);
        vec4 _2018 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2000, _2001, _2002), 0.0);
        vec4 _2025 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2000, _2001, _2002), 0.0);
        float _2037 = exp2((_2004.w + (-0.5)) * 20.0) * 2.0;
        float _2038 = _2037 * (_2004.x + (-0.5));
        float _2039 = _2037 * (_2004.y + (-0.5));
        float _2040 = _2037 * (_2004.z + (-0.5));
        float _2047 = exp2((_2011.w + (-0.5)) * 20.0) * 2.0;
        float _2048 = _2047 * (_2011.x + (-0.5));
        float _2049 = _2047 * (_2011.y + (-0.5));
        float _2050 = _2047 * (_2011.z + (-0.5));
        float _2057 = exp2((_2018.w + (-0.5)) * 20.0) * 2.0;
        float _2058 = _2057 * (_2018.x + (-0.5));
        float _2059 = _2057 * (_2018.y + (-0.5));
        float _2060 = _2057 * (_2018.z + (-0.5));
        float _2067 = exp2((_2025.w + (-0.5)) * 20.0) * 2.0;
        float _2068 = _2067 * (_2025.x + (-0.5));
        float _2069 = _2067 * (_2025.y + (-0.5));
        float _2070 = _2067 * (_2025.z + (-0.5));
        float _2071 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
        float _2072 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2073 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
        float _2074 = _2038 * 0.5;
        float _2075 = _2048 * 0.5;
        float _2076 = _2058 * 0.5;
        float _2077 = dot(vec3(_2074, _2075, _2076), vec3(_2074, _2075, _2076));
        float _2082 = (_2077 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2077);
        float _2090 = (dot(vec3(_1348, _1349, _1350), vec3(_2082 * _2074, _2082 * _2075, _2082 * _2076)) + 1.0) * 0.5;
        float _5076 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2099 = sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076)) / (_2071 + 9.9999997473787516355514526367188e-06);
        float _5087 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
        float _2100 = isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0));
        float _2101 = _2100 * 2.0;
        float _2105 = (1.0 - _2100) / (_2100 + 1.0);
        float _5098 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
        float _2106 = isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0));
        float _2115 = ((((1.0 - _2106) * (_2101 + 2.0)) * exp2(log2(isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0))) * (_2101 + 1.0))) + _2106) * _2071;
        float _2116 = _2039 * 0.5;
        float _2117 = _2049 * 0.5;
        float _2118 = _2059 * 0.5;
        float _2119 = dot(vec3(_2116, _2117, _2118), vec3(_2116, _2117, _2118));
        float _2124 = (_2119 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2119);
        float _2132 = (dot(vec3(_1348, _1349, _1350), vec3(_2124 * _2116, _2124 * _2117, _2124 * _2118)) + 1.0) * 0.5;
        float _5109 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
        float _2141 = sqrt(((_2117 * _2117) + (_2116 * _2116)) + (_2118 * _2118)) / (_2072 + 9.9999997473787516355514526367188e-06);
        float _5120 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
        float _2142 = isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0));
        float _2143 = _2142 * 2.0;
        float _2147 = (1.0 - _2142) / (_2142 + 1.0);
        float _5131 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
        float _2148 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
        float _2157 = ((((1.0 - _2148) * (_2143 + 2.0)) * exp2(log2(isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0))) * (_2143 + 1.0))) + _2148) * _2072;
        float _2158 = _2040 * 0.5;
        float _2159 = _2050 * 0.5;
        float _2160 = _2060 * 0.5;
        float _2161 = dot(vec3(_2158, _2159, _2160), vec3(_2158, _2159, _2160));
        float _2166 = (_2161 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2161);
        float _2174 = (dot(vec3(_1348, _1349, _1350), vec3(_2166 * _2158, _2166 * _2159, _2166 * _2160)) + 1.0) * 0.5;
        float _5142 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
        float _2183 = sqrt(((_2159 * _2159) + (_2158 * _2158)) + (_2160 * _2160)) / (_2073 + 9.9999997473787516355514526367188e-06);
        float _5153 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
        float _2184 = isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0));
        float _2185 = _2184 * 2.0;
        float _2189 = (1.0 - _2184) / (_2184 + 1.0);
        float _5164 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
        float _2190 = isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0));
        float _2199 = ((((1.0 - _2190) * (_2185 + 2.0)) * exp2(log2(isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0))) * (_2185 + 1.0))) + _2190) * _2073;
        _2207 = _2040;
        _2208 = _2039;
        _2209 = _2038;
        _2210 = _2050;
        _2211 = _2049;
        _2212 = _2048;
        _2213 = _2060;
        _2214 = _2059;
        _2215 = _2058;
        _2216 = _2073;
        _2217 = _2072;
        _2218 = _2071;
        _2219 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0)));
        _2220 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0)));
        _2221 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0)));
    }
    else
    {
        _2207 = _1902;
        _2208 = _1902;
        _2209 = _1902;
        _2210 = _1902;
        _2211 = _1902;
        _2212 = _1902;
        _2213 = _1902;
        _2214 = _1902;
        _2215 = _1902;
        _2216 = _1902;
        _2217 = _1902;
        _2218 = _1902;
        _2219 = 0.0;
        _2220 = 0.0;
        _2221 = 0.0;
    }
    float _2231 = (cbModelParam._m0[1u].x * (_2219 - _1914)) + _1914;
    float _2232 = (cbModelParam._m0[1u].x * (_2220 - _1915)) + _1915;
    float _2233 = (cbModelParam._m0[1u].x * (_2221 - _1916)) + _1916;
    float _2254 = fma(_2233, cbSceneParam._m0[89u].z, fma(_2232, cbSceneParam._m0[89u].y, _2231 * cbSceneParam._m0[89u].x));
    float _2257 = fma(_2233, cbSceneParam._m0[90u].z, fma(_2232, cbSceneParam._m0[90u].y, _2231 * cbSceneParam._m0[90u].x));
    float _2260 = fma(_2233, cbSceneParam._m0[91u].z, fma(_2232, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2231));
    float _2273 = _1546 * 0.5;
    float _2274 = _1547 * 0.5;
    float _2275 = _1548 * 0.5;
    float _2276 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_2209, _2212, _2215, _2218));
    float _2279 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_2208, _2211, _2214, _2217));
    float _2282 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_2207, _2210, _2213, _2216));
    float _2316;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2289 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_1901, _1905, _1908, _1911));
        float _2293 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_1903, _1906, _1909, _1912));
        float _2297 = dot(vec4(_2273, _2274, _2275, 1.0), vec4(_1904, _1907, _1910, _1913));
        float _2304 = dot(vec4(cbModelParam._m0[39u]), vec4(_2273, _2274, _2275, 1.0));
        _2316 = dot(vec3(isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0)), isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0)), isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2304) ? 0.0 : (isnan(0.0) ? _2304 : max(0.0, _2304))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2316 = 1.0;
    }
    float _2327;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2318 = dot(vec4(cbModelParam._m0[40u]), vec4(_2273, _2274, _2275, 1.0));
        _2327 = dot(vec3(isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0)), isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0)), isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2318) ? 0.0 : (isnan(0.0) ? _2318 : max(0.0, _2318))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2327 = 1.0;
    }
    float _2331 = (_2327 * cbModelParam._m0[1u].x) + (_2316 * (1.0 - cbModelParam._m0[1u].x));
    float _2341 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1352);
    float _2342 = isnan(_2341) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2341 : min(cbModelParam._m0[25u].z, _2341));
    float _2422;
    float _2424;
    float _2426;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2389 = fma(_1605, cbModelParam._m0[13u].z, fma(_1601, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1597)) + cbModelParam._m0[13u].w;
        float _2393 = fma(_1605, cbModelParam._m0[14u].z, fma(_1601, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1597)) + cbModelParam._m0[14u].w;
        float _2397 = fma(_1605, cbModelParam._m0[15u].z, fma(_1601, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1597)) + cbModelParam._m0[15u].w;
        float _2400 = fma(_1548, cbModelParam._m0[13u].z, fma(_1547, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1546));
        float _2403 = fma(_1548, cbModelParam._m0[14u].z, fma(_1547, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1546));
        float _2406 = fma(_1548, cbModelParam._m0[15u].z, fma(_1547, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1546));
        float _2434;
        if (_2400 > 0.0)
        {
            _2434 = abs((1.0 - _2389) / _2400);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2400 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2389 + 1.0) / _2400);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2434 = frontier_phi_16_14_ladder;
        }
        float _2642;
        if (_2403 > 0.0)
        {
            _2642 = abs((1.0 - _2393) / _2403);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2403 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2393 + 1.0) / _2403);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2642 = frontier_phi_25_21_ladder;
        }
        float _3087;
        if (_2406 > 0.0)
        {
            _3087 = abs((1.0 - _2397) / _2406);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2406 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2397 + 1.0) / _2406);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _3087 = frontier_phi_37_32_ladder;
        }
        float _3089 = isnan(_2642) ? _2434 : (isnan(_2434) ? _2642 : min(_2434, _2642));
        float _3090 = isnan(_3087) ? _3089 : (isnan(_3089) ? _3087 : min(_3089, _3087));
        float _3094 = (_3090 * _2400) + _2389;
        float _3095 = (_3090 * _2403) + _2393;
        float _3096 = (_3090 * _2406) + _2397;
        float _3097 = _3090 * 9.9999997473787516355514526367188e-05;
        float _3099 = (-1.0) - _3097;
        float _3101 = _3097 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_3096 > _3101) || ((_3096 < _3099) || ((_3095 > _3101) || ((_3095 < _3099) || ((_3094 < _3099) || (_3094 > _3101))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3407 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_3096, cbModelParam._m0[9u].z, fma(_3095, cbModelParam._m0[9u].y, _3094 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_3096, cbModelParam._m0[10u].z, fma(_3095, cbModelParam._m0[10u].y, _3094 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_3096, cbModelParam._m0[11u].z, fma(_3095, cbModelParam._m0[11u].y, _3094 * cbModelParam._m0[11u].x))), _2342);
            frontier_phi_15_37_ladder = _3407.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _3407.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _3407.x * cbModelParam._m0[1u].y;
        }
        _2422 = frontier_phi_15_37_ladder_2;
        _2424 = frontier_phi_15_37_ladder_1;
        _2426 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2410 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1546, _1547, _1548), _2342);
        _2422 = _2410.x * cbModelParam._m0[1u].y;
        _2424 = _2410.y * cbModelParam._m0[1u].y;
        _2426 = _2410.z * cbModelParam._m0[1u].y;
    }
    float _2430 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1352);
    float _2431 = isnan(_2430) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2430 : min(cbModelParam._m0[25u].w, _2430));
    float _2520;
    float _2522;
    float _2524;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2484 = fma(_1605, cbModelParam._m0[21u].z, fma(_1601, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1597)) + cbModelParam._m0[21u].w;
        float _2488 = fma(_1605, cbModelParam._m0[22u].z, fma(_1601, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1597)) + cbModelParam._m0[22u].w;
        float _2492 = fma(_1605, cbModelParam._m0[23u].z, fma(_1601, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1597)) + cbModelParam._m0[23u].w;
        float _2495 = fma(_1548, cbModelParam._m0[21u].z, fma(_1547, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1546));
        float _2498 = fma(_1548, cbModelParam._m0[22u].z, fma(_1547, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1546));
        float _2501 = fma(_1548, cbModelParam._m0[23u].z, fma(_1547, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1546));
        float _2647;
        if (_2495 > 0.0)
        {
            _2647 = abs((1.0 - _2484) / _2495);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2495 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2484 + 1.0) / _2495);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2647 = frontier_phi_27_23_ladder;
        }
        float _3114;
        if (_2498 > 0.0)
        {
            _3114 = abs((1.0 - _2488) / _2498);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2498 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2488 + 1.0) / _2498);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _3114 = frontier_phi_39_34_ladder;
        }
        float _3598;
        if (_2501 > 0.0)
        {
            _3598 = abs((1.0 - _2492) / _2501);
        }
        else
        {
            float frontier_phi_51_46_ladder;
            if (_2501 < 0.0)
            {
                frontier_phi_51_46_ladder = abs((_2492 + 1.0) / _2501);
            }
            else
            {
                frontier_phi_51_46_ladder = 5000.0;
            }
            _3598 = frontier_phi_51_46_ladder;
        }
        float _3600 = isnan(_3114) ? _2647 : (isnan(_2647) ? _3114 : min(_2647, _3114));
        float _3601 = isnan(_3598) ? _3600 : (isnan(_3600) ? _3598 : min(_3600, _3598));
        float _3605 = (_3601 * _2495) + _2484;
        float _3606 = (_3601 * _2498) + _2488;
        float _3607 = (_3601 * _2501) + _2492;
        float _3608 = _3601 * 9.9999997473787516355514526367188e-05;
        float _3609 = (-1.0) - _3608;
        float _3611 = _3608 + 1.0;
        float frontier_phi_24_51_ladder;
        float frontier_phi_24_51_ladder_1;
        float frontier_phi_24_51_ladder_2;
        if ((_3607 > _3611) || ((_3607 < _3609) || ((_3606 > _3611) || ((_3606 < _3609) || ((_3605 < _3609) || (_3605 > _3611))))))
        {
            frontier_phi_24_51_ladder = 0.0;
            frontier_phi_24_51_ladder_1 = 0.0;
            frontier_phi_24_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3810 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3607, cbModelParam._m0[17u].z, fma(_3606, cbModelParam._m0[17u].y, _3605 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3607, cbModelParam._m0[18u].z, fma(_3606, cbModelParam._m0[18u].y, _3605 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3607, cbModelParam._m0[19u].z, fma(_3606, cbModelParam._m0[19u].y, _3605 * cbModelParam._m0[19u].x))), _2431);
            frontier_phi_24_51_ladder = _3810.z * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_1 = _3810.y * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_2 = _3810.x * cbModelParam._m0[1u].z;
        }
        _2520 = frontier_phi_24_51_ladder_2;
        _2522 = frontier_phi_24_51_ladder_1;
        _2524 = frontier_phi_24_51_ladder;
    }
    else
    {
        vec4 _2504 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1546, _1547, _1548), _2431);
        _2520 = _2504.x * cbModelParam._m0[1u].z;
        _2522 = _2504.y * cbModelParam._m0[1u].z;
        _2524 = _2504.z * cbModelParam._m0[1u].z;
    }
    float _2536 = ((((1.0 - _1566) * ((_1554 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1566 * _1554)) * _1525;
    float _2537 = _2536 * ((cbModelParam._m0[1u].w * (_2520 - _2422)) + _2422);
    float _2538 = _2536 * ((cbModelParam._m0[1u].w * (_2522 - _2424)) + _2424);
    float _2539 = _2536 * ((cbModelParam._m0[1u].w * (_2524 - _2426)) + _2426);
    float _2542 = fma(_2539, cbSceneParam._m0[89u].z, fma(_2538, cbSceneParam._m0[89u].y, _2537 * cbSceneParam._m0[89u].x));
    float _2545 = fma(_2539, cbSceneParam._m0[90u].z, fma(_2538, cbSceneParam._m0[90u].y, _2537 * cbSceneParam._m0[90u].x));
    float _2548 = fma(_2539, cbSceneParam._m0[91u].z, fma(_2538, cbSceneParam._m0[91u].y, _2537 * cbSceneParam._m0[91u].x));
    float _2567 = (cbSceneParam._m0[88u].y * (1.0 - _1352)) + cbSceneParam._m0[88u].z;
    float _5290 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
    vec4 _2571 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1166, _1167), (isnan(1.0) ? _5290 : (isnan(_5290) ? 1.0 : min(_5290, 1.0))) * 5.0);
    float _2587 = 1.0 - _2571.w;
    float _2621 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2625 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2629 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2633 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2634 = _2621 / _2633;
    float _2635 = _2625 / _2633;
    float _2636 = _2629 / _2633;
    float _2781;
    float _2782;
    float _2783;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2663 = ((uint(_2636 > cbSceneParam._m0[59u].y) + uint(_2636 > cbSceneParam._m0[59u].x)) + uint(_2636 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2664 = _2663 + 43u;
        uint _2671 = _2663 + 44u;
        uint _2679 = _2663 + 45u;
        uint _2687 = _2663 + 46u;
        float _2698 = fma(_2633, cbSceneParam._m0[_2664].w, fma(_2629, cbSceneParam._m0[_2664].z, fma(_2625, cbSceneParam._m0[_2664].y, _2621 * cbSceneParam._m0[_2664].x)));
        float _2702 = fma(_2633, cbSceneParam._m0[_2671].w, fma(_2629, cbSceneParam._m0[_2671].z, fma(_2625, cbSceneParam._m0[_2671].y, _2621 * cbSceneParam._m0[_2671].x)));
        float _2710 = fma(_2633, cbSceneParam._m0[_2687].w, fma(_2629, cbSceneParam._m0[_2687].z, fma(_2625, cbSceneParam._m0[_2687].y, _2621 * cbSceneParam._m0[_2687].x)));
        float _2714 = cbSceneParam._m0[33u].z * _2710;
        float _2716 = cbSceneParam._m0[33u].w * _2710;
        float _2719 = fma(_2633, cbSceneParam._m0[_2679].w, fma(_2629, cbSceneParam._m0[_2679].z, fma(_2625, cbSceneParam._m0[_2679].y, _2621 * cbSceneParam._m0[_2679].x))) / _2710;
        float _2767 = (cbSceneParam._m0[33u].x - sqrt(((_2635 * _2635) + (_2634 * _2634)) + (_2636 * _2636))) * cbSceneParam._m0[33u].y;
        float _5301 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
        float _2774 = (isnan(1.0) ? _5301 : (isnan(_5301) ? 1.0 : min(_5301, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2714 + _2698) / _2710, (_2716 + _2702) / _2710), _2719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2716 + _2698) / _2710, (_2702 - _2714) / _2710), _2719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2698 - _2714) / _2710, (_2702 - _2716) / _2710), _2719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2698 - _2716) / _2710, (_2714 + _2702) / _2710), _2719), 0.0)).x), vec4(0.25)));
        _2781 = 1.0 - (_2774 * cbSceneParam._m0[34u].x);
        _2782 = 1.0 - (_2774 * cbSceneParam._m0[34u].y);
        _2783 = 1.0 - (_2774 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2781 = 1.0;
        _2782 = 1.0;
        _2783 = 1.0;
    }
    float _2847;
    float _2849;
    float _2851;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2835 = fma(_2633, cbSceneParam._m0[63u].w, fma(_2629, cbSceneParam._m0[63u].z, fma(_2625, cbSceneParam._m0[63u].y, _2621 * cbSceneParam._m0[63u].x)));
        float _2836 = fma(_2633, cbSceneParam._m0[60u].w, fma(_2629, cbSceneParam._m0[60u].z, fma(_2625, cbSceneParam._m0[60u].y, _2621 * cbSceneParam._m0[60u].x))) / _2835;
        float _2837 = fma(_2633, cbSceneParam._m0[61u].w, fma(_2629, cbSceneParam._m0[61u].z, fma(_2625, cbSceneParam._m0[61u].y, _2621 * cbSceneParam._m0[61u].x))) / _2835;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2836 >= cbSceneParam._m0[64u].x) && (_2837 >= cbSceneParam._m0[64u].y)) && (_2836 <= cbSceneParam._m0[64u].z)) && (_2837 <= cbSceneParam._m0[64u].w))
        {
            float _3127 = fma(_2633, cbSceneParam._m0[62u].w, fma(_2629, cbSceneParam._m0[62u].z, fma(_2625, cbSceneParam._m0[62u].y, _2621 * cbSceneParam._m0[62u].x))) / _2835;
            float _3131 = isnan(cbSceneParam._m0[41u].w) ? _3127 : (isnan(_3127) ? cbSceneParam._m0[41u].w : max(_3127, cbSceneParam._m0[41u].w));
            float _3174 = (cbSceneParam._m0[33u].x - sqrt(((_2635 * _2635) + (_2634 * _2634)) + (_2636 * _2636))) * cbSceneParam._m0[33u].y;
            float _5317 = isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0));
            float _3181 = (isnan(1.0) ? _5317 : (isnan(_5317) ? 1.0 : min(_5317, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2836, cbSceneParam._m0[33u].w + _2837), _3131), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2836, _2837 - cbSceneParam._m0[33u].z), _3131), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2836 - cbSceneParam._m0[33u].z, _2837 - cbSceneParam._m0[33u].w), _3131), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2836 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2837), _3131), 0.0)).x), vec4(0.25)));
            float _3185 = 1.0 - (_3181 * cbSceneParam._m0[34u].x);
            float _3186 = 1.0 - (_3181 * cbSceneParam._m0[34u].y);
            float _3187 = 1.0 - (_3181 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_3187) ? _2783 : (isnan(_2783) ? _3187 : min(_2783, _3187));
            frontier_phi_36_35_ladder_1 = isnan(_3186) ? _2782 : (isnan(_2782) ? _3186 : min(_2782, _3186));
            frontier_phi_36_35_ladder_2 = isnan(_3185) ? _2781 : (isnan(_2781) ? _3185 : min(_2781, _3185));
        }
        else
        {
            frontier_phi_36_35_ladder = _2783;
            frontier_phi_36_35_ladder_1 = _2782;
            frontier_phi_36_35_ladder_2 = _2781;
        }
        _2847 = frontier_phi_36_35_ladder_2;
        _2849 = frontier_phi_36_35_ladder_1;
        _2851 = frontier_phi_36_35_ladder;
    }
    else
    {
        _2847 = _2781;
        _2849 = _2782;
        _2851 = _2783;
    }
    uint _2853 = _1501 + 5u;
    uvec4 _2856 = floatBitsToUint(cbInstanceData._m0[_2853]);
    uint _2858 = _2856.x * 14u;
    uint _2859 = _2858 + 13u;
    float _2864 = _1525 + (-1.0);
    float _2867 = (cbLight._m0[_2859].x * _2864) + 1.0;
    float _2868 = (cbLight._m0[_2859].y * _2864) + 1.0;
    uint _2869 = _2858 + 5u;
    float _2875 = isnan(1.0) ? _2868 : (isnan(_2868) ? 1.0 : min(_2868, 1.0));
    uint _2879 = _2858 + 4u;
    float _2888 = isnan(1.0) ? _2867 : (isnan(_2867) ? 1.0 : min(_2867, 1.0));
    uint _2892 = _2858 | 1u;
    float _2903 = dot(vec3(cbLight._m0[_2858].xyz), vec3(_1462, _1463, _1464));
    float _2906 = dot(vec3(cbLight._m0[_2892].xyz), vec3(_1462, _1463, _1464));
    float _5353 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
    float _5364 = isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0));
    float _2911 = (isnan(1.0) ? _5353 : (isnan(_5353) ? 1.0 : min(_5353, 1.0))) * 0.3183098733425140380859375;
    float _2913 = (isnan(1.0) ? _5364 : (isnan(_5364) ? 1.0 : min(_5364, 1.0))) * 0.3183098733425140380859375;
    float _2920 = ((cbLight._m0[_2869].x * _2875) * _2913) + (((cbLight._m0[_2879].x * _2847) * _2888) * _2911);
    float _2921 = ((_2875 * cbLight._m0[_2869].y) * _2913) + (((cbLight._m0[_2879].y * _2849) * _2888) * _2911);
    float _2922 = ((_2875 * cbLight._m0[_2869].z) * _2913) + (((cbLight._m0[_2879].z * _2851) * _2888) * _2911);
    uint _2924 = _2858 + 8u;
    float _2937 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2858].w)) * _1352) * 0.949999988079071044921875);
    float _2938 = _2937 * _2937;
    float _2939 = cbLight._m0[_2858].x + _1425;
    float _2940 = cbLight._m0[_2858].y + _1426;
    float _2941 = cbLight._m0[_2858].z + _1427;
    float _2945 = inversesqrt(dot(vec3(_2939, _2940, _2941), vec3(_2939, _2940, _2941)));
    float _2946 = _2945 * _2939;
    float _2947 = _2945 * _2940;
    float _2948 = _2945 * _2941;
    float _2949 = dot(vec3(_1462, _1463, _1464), vec3(cbLight._m0[_2858].xyz));
    float _5375 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
    float _2952 = isnan(1.0) ? _5375 : (isnan(_5375) ? 1.0 : min(_5375, 1.0));
    float _2953 = dot(vec3(_1462, _1463, _1464), vec3(_1425, _1426, _1427));
    float _5386 = isnan(0.0) ? _2953 : (isnan(_2953) ? 0.0 : max(_2953, 0.0));
    float _2956 = isnan(1.0) ? _5386 : (isnan(_5386) ? 1.0 : min(_5386, 1.0));
    float _2957 = dot(vec3(_1462, _1463, _1464), vec3(_2946, _2947, _2948));
    float _5397 = isnan(0.0) ? _2957 : (isnan(_2957) ? 0.0 : max(_2957, 0.0));
    float _2960 = isnan(1.0) ? _5397 : (isnan(_5397) ? 1.0 : min(_5397, 1.0));
    float _2961 = dot(vec3(cbLight._m0[_2858].xyz), vec3(_2946, _2947, _2948));
    float _5408 = isnan(0.0) ? _2961 : (isnan(_2961) ? 0.0 : max(_2961, 0.0));
    float _2965 = _2938 * _2938;
    float _2969 = ((_2960 * _2960) * (_2965 + (-1.0))) + 1.0;
    float _2980 = (exp2(log2(1.0 - (isnan(1.0) ? _5408 : (isnan(_5408) ? 1.0 : min(_5408, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2981 = 1.0 - _2938;
    float _2992 = (0.5 / (((_2956 * ((_2952 * _2981) + _2938)) + 9.9999999392252902907785028219223e-09) + (((_2956 * _2981) + _2938) * _2952))) * _2952;
    float _5419 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
    float _2994 = (isnan(1.0) ? _5419 : (isnan(_5419) ? 1.0 : min(_5419, 1.0))) * (_2965 / ((_2969 * _2969) * 3.141590118408203125));
    uint _3008 = _2858 + 9u;
    float _3019 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2892].w)) * _1352) * 0.949999988079071044921875);
    float _3020 = _3019 * _3019;
    float _3021 = cbLight._m0[_2892].x + _1425;
    float _3022 = cbLight._m0[_2892].y + _1426;
    float _3023 = cbLight._m0[_2892].z + _1427;
    float _3027 = inversesqrt(dot(vec3(_3021, _3022, _3023), vec3(_3021, _3022, _3023)));
    float _3028 = _3027 * _3021;
    float _3029 = _3027 * _3022;
    float _3030 = _3027 * _3023;
    float _3031 = dot(vec3(_1462, _1463, _1464), vec3(cbLight._m0[_2892].xyz));
    float _5430 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
    float _3034 = isnan(1.0) ? _5430 : (isnan(_5430) ? 1.0 : min(_5430, 1.0));
    float _3035 = dot(vec3(_1462, _1463, _1464), vec3(_3028, _3029, _3030));
    float _5441 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
    float _3038 = isnan(1.0) ? _5441 : (isnan(_5441) ? 1.0 : min(_5441, 1.0));
    float _3039 = dot(vec3(cbLight._m0[_2892].xyz), vec3(_3028, _3029, _3030));
    float _5452 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0));
    float _3043 = _3020 * _3020;
    float _3047 = ((_3038 * _3038) * (_3043 + (-1.0))) + 1.0;
    float _3056 = (exp2(log2(1.0 - (isnan(1.0) ? _5452 : (isnan(_5452) ? 1.0 : min(_5452, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _3057 = 1.0 - _3020;
    float _3067 = (0.5 / (((_2956 * ((_3034 * _3057) + _3020)) + 9.9999999392252902907785028219223e-09) + (((_2956 * _3057) + _3020) * _3034))) * _3034;
    float _5463 = isnan(0.0) ? _3067 : (isnan(_3067) ? 0.0 : max(_3067, 0.0));
    float _3069 = (isnan(1.0) ? _5463 : (isnan(_5463) ? 1.0 : min(_5463, 1.0))) * (_3043 / ((_3047 * _3047) * 3.141590118408203125));
    float _3079 = (((_3056 * cbLight._m0[_3008].x) * _3069) * _2875) + ((((cbLight._m0[_2924].x * _2847) * _2980) * _2994) * _2888);
    float _3080 = (((_3056 * cbLight._m0[_3008].y) * _3069) * _2875) + ((((cbLight._m0[_2924].y * _2849) * _2980) * _2994) * _2888);
    float _3081 = (((_3056 * cbLight._m0[_3008].z) * _3069) * _2875) + ((((cbLight._m0[_2924].z * _2851) * _2980) * _2994) * _2888);
    float _3243;
    float _3245;
    float _3247;
    float _3249;
    float _3251;
    float _3253;
    if (_2856.y == 0u)
    {
        uvec4 _3199 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3200 = _3199.x;
        uint _3211 = uint((float(_3199.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1167) / _3200))) + floor(float(uint(cbSceneParam._m0[85u].x * _1166) / _3200)));
        float _3221 = (log2(_2636 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3222 = isnan(0.0) ? _3221 : (isnan(_3221) ? 0.0 : max(_3221, 0.0));
        uint _3225 = uint(isnan(14.0) ? _3222 : (isnan(_3222) ? 14.0 : min(_3222, 14.0)));
        uvec4 _3230 = texelFetch(g_lightClusterGridBuffer, int(((_3225 << 2u) + (_3211 << 6u)) >> 2u));
        uint _3231 = _3230.x;
        uint _3232 = _3199.z;
        float _3416;
        float _3418;
        float _3420;
        float _3422;
        float _3424;
        float _3426;
        if (((((1u << ((_3232 >> 4u) & 15u)) + 4294967295u) & _3231) == 0u) || ((_3232 & 240u) == 0u))
        {
            _3416 = 0.0;
            _3418 = 0.0;
            _3420 = 0.0;
            _3422 = 0.0;
            _3424 = 0.0;
            _3426 = 0.0;
        }
        else
        {
            float _3417;
            float _3419;
            float _3421;
            float _3423;
            float _3425;
            float _3427;
            float _3656 = 0.0;
            float _3657 = 0.0;
            float _3658 = 0.0;
            float _3659 = 0.0;
            float _3660 = 0.0;
            float _3661 = 0.0;
            uint _3662 = 0u;
            uint _3671;
            bool _3672;
            for (;;)
            {
                _3671 = texelFetch(g_lightClassification, int((((_3225 << 5u) + (_3211 << 9u)) + (_3662 << 2u)) >> 2u)).x;
                _3672 = _3671 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_3672)
                {
                    frontier_phi_60_pred = _3659;
                    frontier_phi_60_pred_1 = _3658;
                    frontier_phi_60_pred_2 = _3657;
                    frontier_phi_60_pred_3 = _3656;
                    frontier_phi_60_pred_4 = _3660;
                    frontier_phi_60_pred_5 = _3661;
                }
                else
                {
                    float _3884;
                    float _3885;
                    float _3886;
                    float _3887;
                    float _3888;
                    float _3889;
                    uint _3890;
                    _3884 = _3656;
                    _3885 = _3657;
                    _3886 = _3658;
                    _3887 = _3659;
                    _3888 = _3660;
                    _3889 = _3661;
                    _3890 = _3671;
                    float _3815;
                    float _3816;
                    float _3817;
                    float _3818;
                    float _3819;
                    float _3820;
                    for (;;)
                    {
                        uint _3894 = uint(findLSB(_3890)) + (_3662 << 5u);
                        uint _3891 = (_3890 + 4294967295u) & _3890;
                        uint _3896 = _3894 * 48u;
                        vec4 _3910 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3896)).x, texelFetch(g_PointLightRenderingBuffer, int(_3896 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3896 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3896 + 3u)).x));
                        uint _3916 = (_3894 * 48u) + 4u;
                        vec4 _3929 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3916)).x, texelFetch(g_PointLightRenderingBuffer, int(_3916 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3916 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3916 + 3u)).x));
                        uint _3935 = (_3894 * 48u) + 8u;
                        vec3 _3946 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3935)).x, texelFetch(g_PointLightRenderingBuffer, int(_3935 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3935 + 2u)).x));
                        float _3950 = _3910.x - _2634;
                        float _3951 = _3910.y - _2635;
                        float _3952 = _3910.z - _2636;
                        float _3953 = dot(vec3(_3950, _3951, _3952), vec3(_3950, _3951, _3952));
                        float _3956 = inversesqrt(_3953);
                        float _3957 = _3956 * _3950;
                        float _3958 = _3956 * _3951;
                        float _3959 = _3956 * _3952;
                        float _3960 = dot(vec3(_1482, _1485, _1488), vec3(_3957, _3958, _3959));
                        float _3965 = 1.0 - (_3953 * _3910.w);
                        float _5484 = isnan(0.0) ? _3965 : (isnan(_3965) ? 0.0 : max(_3965, 0.0));
                        float _3966 = isnan(1.0) ? _5484 : (isnan(_5484) ? 1.0 : min(_5484, 1.0));
                        float _3967 = sqrt(_3953) * _3929.w;
                        float _3970 = 1.39999997615814208984375 / (_3967 + 1.39999997615814208984375);
                        float _3971 = _3970 * _3970;
                        float _3974 = ((1.0 - _3971) * _3960) + _3971;
                        float _3977 = _3967 * _3967;
                        float _3981 = ((isnan(0.0) ? _3974 : (isnan(_3974) ? 0.0 : max(_3974, 0.0))) * _3966) / ((_3977 * 0.699999988079071044921875) + 1.0);
                        float _3985 = (-0.0) - _2634;
                        float _3986 = (-0.0) - _2635;
                        float _3987 = (-0.0) - _2636;
                        float _3991 = inversesqrt(dot(vec3(_3985, _3986, _3987), vec3(_3985, _3986, _3987)));
                        float _3992 = _3991 * _3985;
                        float _3993 = _3991 * _3986;
                        float _3994 = _3991 * _3987;
                        float _4001 = exp2(log2(1.0 / ((_3977 * 3.5) + 5.0)) * 0.25);
                        float _4002 = 1.0 - _1554;
                        float _4009 = sqrt(1.0 - ((1.0 - (_4002 * _4002)) * (1.0 - (_4001 * _4001))));
                        float _4010 = _4009 * _4009;
                        float _4011 = _4010 * _4010;
                        float _4012 = _3992 + _3957;
                        float _4013 = _3993 + _3958;
                        float _4014 = _3994 + _3959;
                        float _4018 = inversesqrt(dot(vec3(_4012, _4013, _4014), vec3(_4012, _4013, _4014)));
                        float _4022 = dot(vec3(_1482, _1485, _1488), vec3(_3992, _3993, _3994));
                        float _5500 = isnan(0.0) ? _4022 : (isnan(_4022) ? 0.0 : max(_4022, 0.0));
                        float _4025 = isnan(1.0) ? _5500 : (isnan(_5500) ? 1.0 : min(_5500, 1.0));
                        float _4026 = dot(vec3(_1482, _1485, _1488), vec3(_4018 * _4012, _4018 * _4013, _4018 * _4014));
                        float _5511 = isnan(0.0) ? _4026 : (isnan(_4026) ? 0.0 : max(_4026, 0.0));
                        float _4029 = isnan(1.0) ? _5511 : (isnan(_5511) ? 1.0 : min(_5511, 1.0));
                        float _4033 = ((_4029 * _4029) * (_4011 + (-1.0))) + 1.0;
                        float _4034 = _3970 * _4010;
                        float _4035 = _4034 * _4034;
                        float _4038 = ((1.0 - _4035) * _3960) + _4035;
                        float _5522 = isnan(0.0) ? _4038 : (isnan(_4038) ? 0.0 : max(_4038, 0.0));
                        float _4039 = isnan(1.0) ? _5522 : (isnan(_5522) ? 1.0 : min(_5522, 1.0));
                        float _4040 = 1.0 - _4010;
                        float _4050 = (0.5 / (((_4039 * ((_4025 * _4040) + _4010)) + 9.9999999392252902907785028219223e-09) + (((_4039 * _4040) + _4010) * _4025))) * _4039;
                        float _5533 = isnan(0.0) ? _4050 : (isnan(_4050) ? 0.0 : max(_4050, 0.0));
                        float _4061 = (((_4011 * 3.1415927410125732421875) * (isnan(1.0) ? _5533 : (isnan(_5533) ? 1.0 : min(_5533, 1.0)))) / ((_4033 * _4033) * ((_3977 * 2.1991131305694580078125) + 3.141590118408203125))) * _3966;
                        _3818 = (_3981 * _3929.x) + _3887;
                        _3819 = (_3981 * _3929.y) + _3888;
                        _3820 = (_3981 * _3929.z) + _3889;
                        _3815 = (_4061 * _3946.x) + _3884;
                        _3816 = (_4061 * _3946.y) + _3885;
                        _3817 = (_4061 * _3946.z) + _3886;
                        if (_3891 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3884 = _3815;
                            _3885 = _3816;
                            _3886 = _3817;
                            _3887 = _3818;
                            _3888 = _3819;
                            _3889 = _3820;
                            _3890 = _3891;
                        }
                    }
                    frontier_phi_60_pred = _3818;
                    frontier_phi_60_pred_1 = _3817;
                    frontier_phi_60_pred_2 = _3816;
                    frontier_phi_60_pred_3 = _3815;
                    frontier_phi_60_pred_4 = _3819;
                    frontier_phi_60_pred_5 = _3820;
                }
                _3423 = frontier_phi_60_pred;
                _3421 = frontier_phi_60_pred_1;
                _3419 = frontier_phi_60_pred_2;
                _3417 = frontier_phi_60_pred_3;
                _3425 = frontier_phi_60_pred_4;
                _3427 = frontier_phi_60_pred_5;
                uint _3663 = _3662 + 1u;
                if (_3663 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3656 = _3417;
                    _3657 = _3419;
                    _3658 = _3421;
                    _3659 = _3423;
                    _3660 = _3425;
                    _3661 = _3427;
                    _3662 = _3663;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3416 = _3417;
            _3418 = _3419;
            _3420 = _3421;
            _3422 = _3423;
            _3424 = _3425;
            _3426 = _3427;
        }
        uvec4 _3430 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3431 = _3430.z;
        uint _3433 = (_3431 >> 8u) & 15u;
        float _3624;
        float _3626;
        float _3628;
        float _3630;
        float _3632;
        float _3634;
        if (((4294967295u << _3433) & _3231) == 0u)
        {
            _3624 = _3416;
            _3626 = _3418;
            _3628 = _3420;
            _3630 = _3422;
            _3632 = _3424;
            _3634 = _3426;
        }
        else
        {
            float _3649 = inversesqrt(dot(vec3(_2634, _2635, _2636), vec3(_2634, _2635, _2636)));
            float _3650 = _3649 * _2634;
            float _3651 = _3649 * _2635;
            float _3652 = _3649 * _2636;
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_3433 < ((_3431 >> 12u) & 15u))
            {
                float _3625;
                float _3627;
                float _3629;
                float _3631;
                float _3633;
                float _3635;
                float _3867 = _3416;
                float _3868 = _3418;
                float _3869 = _3420;
                float _3870 = _3422;
                float _3871 = _3424;
                float _3872 = _3426;
                uint _3873 = _3433;
                uint _3882;
                bool _3883;
                for (;;)
                {
                    _3882 = texelFetch(g_lightClassification, int((((_3225 << 5u) + (_3211 << 9u)) + (_3873 << 2u)) >> 2u)).x;
                    _3883 = _3882 == 0u;
                    float frontier_phi_68_pred;
                    float frontier_phi_68_pred_1;
                    float frontier_phi_68_pred_2;
                    float frontier_phi_68_pred_3;
                    float frontier_phi_68_pred_4;
                    float frontier_phi_68_pred_5;
                    if (_3883)
                    {
                        frontier_phi_68_pred = _3870;
                        frontier_phi_68_pred_1 = _3869;
                        frontier_phi_68_pred_2 = _3868;
                        frontier_phi_68_pred_3 = _3867;
                        frontier_phi_68_pred_4 = _3872;
                        frontier_phi_68_pred_5 = _3871;
                    }
                    else
                    {
                        float _4104;
                        float _4105;
                        float _4106;
                        float _4107;
                        float _4108;
                        float _4109;
                        float _4397;
                        float _4398;
                        float _4399;
                        float _4400;
                        float _4401;
                        float _4402;
                        float _4117 = _3867;
                        float _4118 = _3868;
                        float _4119 = _3869;
                        float _4120 = _3870;
                        float _4121 = _3871;
                        float _4122 = _3872;
                        uint _4123 = _3882;
                        uint _4124;
                        vec4 _4149;
                        float _4150;
                        vec4 _4165;
                        vec3 _4177;
                        vec4 _4192;
                        vec4 _4207;
                        float _4253;
                        bool _4254;
                        for (;;)
                        {
                            uint _4134 = ((_3873 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_4123));
                            _4124 = (_4123 + 4294967295u) & _4123;
                            uint _4136 = _4134 * 40u;
                            _4149 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4136)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4136 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4136 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4136 + 3u)).x));
                            _4150 = _4149.w;
                            uint _4152 = (_4134 * 40u) + 4u;
                            _4165 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4152)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4152 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4152 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4152 + 3u)).x));
                            uint _4167 = (_4134 * 40u) + 8u;
                            _4177 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_4167)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4167 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4167 + 2u)).x));
                            uint _4179 = (_4134 * 40u) + 16u;
                            _4192 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4179)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4179 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4179 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4179 + 3u)).x));
                            uint _4194 = (_4134 * 40u) + 20u;
                            _4207 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4194)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4194 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4194 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4194 + 3u)).x));
                            uint _4209 = (_4134 * 40u) + 24u;
                            vec4 _4222 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4209)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4209 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4209 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4209 + 3u)).x));
                            uint _4228 = (_4134 * 40u) + 28u;
                            vec4 _4241 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4228)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4228 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4228 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4228 + 3u)).x));
                            _4253 = fma(_2636, _4241.z, fma(_2635, _4241.y, _4241.x * _2634)) + _4241.w;
                            _4254 = !((fma(_2636, _4222.z, fma(_2635, _4222.y, _4222.x * _2634)) + _4222.w) <= 0.0);
                            float frontier_phi_74_pred;
                            float frontier_phi_74_pred_1;
                            float frontier_phi_74_pred_2;
                            float frontier_phi_74_pred_3;
                            float frontier_phi_74_pred_4;
                            float frontier_phi_74_pred_5;
                            if (_4254)
                            {
                                float _4281 = _4149.x - _2634;
                                float _4282 = _4149.y - _2635;
                                float _4283 = _4149.z - _2636;
                                float _4284 = dot(vec3(_4281, _4282, _4283), vec3(_4281, _4282, _4283));
                                float _4287 = inversesqrt(_4284);
                                float _4288 = _4287 * _4281;
                                float _4289 = _4287 * _4282;
                                float _4290 = _4287 * _4283;
                                float _4294 = 1.0 - (_4284 / (_4150 * _4150));
                                float _5544 = isnan(0.0) ? _4294 : (isnan(_4294) ? 0.0 : max(_4294, 0.0));
                                float _4295 = isnan(1.0) ? _5544 : (isnan(_5544) ? 1.0 : min(_5544, 1.0));
                                float _4299 = sqrt(_4284) * _4165.w;
                                float _4301 = 1.39999997615814208984375 / (_4299 + 1.39999997615814208984375);
                                float _4302 = _4301 * _4301;
                                float _4305 = ((1.0 - _4302) * dot(vec3(_4288, _4289, _4290), vec3(_1482, _1485, _1488))) + _4302;
                                float _4308 = _4299 * _4299;
                                float _4312 = (fma(_2636, _4192.z, fma(_2635, _4192.y, _4192.x * _2634)) + _4192.w) / _4253;
                                float _4313 = (fma(_2636, _4207.z, fma(_2635, _4207.y, _4207.x * _2634)) + _4207.w) / _4253;
                                float _4317 = 1.0 - dot(vec2(_4312, _4313), vec2(_4312, _4313));
                                float _5560 = isnan(0.0) ? _4317 : (isnan(_4317) ? 0.0 : max(_4317, 0.0));
                                float _4318 = isnan(1.0) ? _5560 : (isnan(_5560) ? 1.0 : min(_5560, 1.0));
                                float _4319 = _4318 * (((isnan(0.0) ? _4305 : (isnan(_4305) ? 0.0 : max(_4305, 0.0))) * _4295) / ((_4308 * 0.699999988079071044921875) + 1.0));
                                float _4331 = exp2(log2(1.0 / ((_4308 * 3.5) + 5.0)) * 0.25);
                                float _4332 = 1.0 - _1554;
                                float _4339 = sqrt(1.0 - ((1.0 - (_4332 * _4332)) * (1.0 - (_4331 * _4331))));
                                float _4340 = _4339 * _4339;
                                float _4341 = _4340 * _4340;
                                float _4342 = _4288 - _3650;
                                float _4343 = _4289 - _3651;
                                float _4344 = _4290 - _3652;
                                float _4348 = inversesqrt(dot(vec3(_4342, _4343, _4344), vec3(_4342, _4343, _4344)));
                                float _4352 = dot(vec3(_1482, _1485, _1488), vec3((-0.0) - _3650, (-0.0) - _3651, (-0.0) - _3652));
                                float _5571 = isnan(0.0) ? _4352 : (isnan(_4352) ? 0.0 : max(_4352, 0.0));
                                float _4355 = isnan(1.0) ? _5571 : (isnan(_5571) ? 1.0 : min(_5571, 1.0));
                                float _4356 = dot(vec3(_1482, _1485, _1488), vec3(_4348 * _4342, _4348 * _4343, _4348 * _4344));
                                float _5582 = isnan(0.0) ? _4356 : (isnan(_4356) ? 0.0 : max(_4356, 0.0));
                                float _4359 = isnan(1.0) ? _5582 : (isnan(_5582) ? 1.0 : min(_5582, 1.0));
                                float _4363 = ((_4359 * _4359) * (_4341 + (-1.0))) + 1.0;
                                float _4364 = _4301 * _4340;
                                float _4365 = _4364 * _4364;
                                float _4371 = ((1.0 - _4365) * dot(vec3(_1482, _1485, _1488), vec3(_4288, _4289, _4290))) + _4365;
                                float _5593 = isnan(0.0) ? _4371 : (isnan(_4371) ? 0.0 : max(_4371, 0.0));
                                float _4372 = isnan(1.0) ? _5593 : (isnan(_5593) ? 1.0 : min(_5593, 1.0));
                                float _4373 = 1.0 - _4340;
                                float _4383 = (0.5 / (((_4372 * ((_4355 * _4373) + _4340)) + 9.9999999392252902907785028219223e-09) + (((_4372 * _4373) + _4340) * _4355))) * _4372;
                                float _5604 = isnan(0.0) ? _4383 : (isnan(_4383) ? 0.0 : max(_4383, 0.0));
                                float _4393 = (_4318 * _4295) * (((_4341 * 3.1415927410125732421875) * (isnan(1.0) ? _5604 : (isnan(_5604) ? 1.0 : min(_5604, 1.0)))) / ((_4363 * _4363) * ((_4308 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_74_pred = _4319 * _4165.x;
                                frontier_phi_74_pred_1 = _4393 * _4177.z;
                                frontier_phi_74_pred_2 = _4393 * _4177.y;
                                frontier_phi_74_pred_3 = _4393 * _4177.x;
                                frontier_phi_74_pred_4 = _4319 * _4165.y;
                                frontier_phi_74_pred_5 = _4319 * _4165.z;
                            }
                            else
                            {
                                frontier_phi_74_pred = 0.0;
                                frontier_phi_74_pred_1 = 0.0;
                                frontier_phi_74_pred_2 = 0.0;
                                frontier_phi_74_pred_3 = 0.0;
                                frontier_phi_74_pred_4 = 0.0;
                                frontier_phi_74_pred_5 = 0.0;
                            }
                            _4400 = frontier_phi_74_pred;
                            _4399 = frontier_phi_74_pred_1;
                            _4398 = frontier_phi_74_pred_2;
                            _4397 = frontier_phi_74_pred_3;
                            _4401 = frontier_phi_74_pred_4;
                            _4402 = frontier_phi_74_pred_5;
                            _4107 = _4400 + _4120;
                            _4108 = _4401 + _4121;
                            _4109 = _4402 + _4122;
                            _4104 = _4397 + _4117;
                            _4105 = _4398 + _4118;
                            _4106 = _4399 + _4119;
                            if (_4124 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _4117 = _4104;
                                _4118 = _4105;
                                _4119 = _4106;
                                _4120 = _4107;
                                _4121 = _4108;
                                _4122 = _4109;
                                _4123 = _4124;
                                continue;
                            }
                        }
                        frontier_phi_68_pred = _4107;
                        frontier_phi_68_pred_1 = _4106;
                        frontier_phi_68_pred_2 = _4105;
                        frontier_phi_68_pred_3 = _4104;
                        frontier_phi_68_pred_4 = _4109;
                        frontier_phi_68_pred_5 = _4108;
                    }
                    _3631 = frontier_phi_68_pred;
                    _3629 = frontier_phi_68_pred_1;
                    _3627 = frontier_phi_68_pred_2;
                    _3625 = frontier_phi_68_pred_3;
                    _3635 = frontier_phi_68_pred_4;
                    _3633 = frontier_phi_68_pred_5;
                    uint _3874 = _3873 + 1u;
                    if (_3874 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3867 = _3625;
                        _3868 = _3627;
                        _3869 = _3629;
                        _3870 = _3631;
                        _3871 = _3633;
                        _3872 = _3635;
                        _3873 = _3874;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _3635;
                frontier_phi_53_54_ladder_1 = _3633;
                frontier_phi_53_54_ladder_2 = _3631;
                frontier_phi_53_54_ladder_3 = _3629;
                frontier_phi_53_54_ladder_4 = _3625;
                frontier_phi_53_54_ladder_5 = _3627;
            }
            else
            {
                frontier_phi_53_54_ladder = _3426;
                frontier_phi_53_54_ladder_1 = _3424;
                frontier_phi_53_54_ladder_2 = _3422;
                frontier_phi_53_54_ladder_3 = _3420;
                frontier_phi_53_54_ladder_4 = _3416;
                frontier_phi_53_54_ladder_5 = _3418;
            }
            _3624 = frontier_phi_53_54_ladder_4;
            _3626 = frontier_phi_53_54_ladder_5;
            _3628 = frontier_phi_53_54_ladder_3;
            _3630 = frontier_phi_53_54_ladder_2;
            _3632 = frontier_phi_53_54_ladder_1;
            _3634 = frontier_phi_53_54_ladder;
        }
        float _3639 = isnan(1.0) ? _1525 : (isnan(_1525) ? 1.0 : min(_1525, 1.0));
        _3243 = (_3639 * _3630) + _2920;
        _3245 = (_3639 * _3632) + _2921;
        _3247 = (_3639 * _3634) + _2922;
        _3249 = ((_3624 * 0.039999999105930328369140625) * _3639) + _3079;
        _3251 = ((_3626 * 0.039999999105930328369140625) * _3639) + _3080;
        _3253 = ((_3628 * 0.039999999105930328369140625) * _3639) + _3081;
    }
    else
    {
        _3243 = _2920;
        _3245 = _2921;
        _3247 = _2922;
        _3249 = _3079;
        _3251 = _3080;
        _3253 = _3081;
    }
    uint _3259 = _1502 + uint(cbMatDynParam._m0[0u].w);
    float _3280 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3281 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3282 = cbSceneParam._m0[86u].x * ((_1166 / cbSceneParam._m0[86u].x) + (((10.0 / (_1369 + 10.0)) * cbMtdParam._m0[19u].y) * dot(vec3(_1462, _1463, _1464), vec3(_232, _233, _234))));
    float _3283 = isnan(_3280) ? _3282 : (isnan(_3282) ? _3280 : min(_3282, _3280));
    float _3284 = isnan(_3281) ? _1167 : (isnan(_1167) ? _3281 : min(_1167, _3281));
    vec4 _3286 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3283, _3284), 0.0);
    float _3288 = _3286.x;
    bool _3308 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3288)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3288))) > _1369;
    float _3309 = _3308 ? _3283 : _1166;
    float _3310 = _3308 ? _3284 : _1167;
    vec4 _3312 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3309, _3310));
    vec4 _3318 = texture(sampler2D(g_ScreenSpaceShadowTexture, SS_WrapLinear), vec2(_3309, _3310));
    float _3320 = _3318.w;
    vec4 _3333 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3309, _3310));
    float _3335 = _3333.x;
    bool _3340 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3349 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3355 = (_3340 ? (_3349 / (cbSceneParam._m0[2u].x - _3335)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3335))) - _1369;
    float _3357 = cbMtdParam._m0[40u].x + cbMtdParam._m0[38u].z;
    float _3358 = cbMtdParam._m0[40u].y + cbMtdParam._m0[38u].w;
    float _3359 = cbMtdParam._m0[40u].z + cbMtdParam._m0[39u].x;
    bool _3365 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3369 = (isnan(_3355) ? 0.0 : (isnan(0.0) ? _3355 : max(0.0, _3355))) * (-1.44269502162933349609375);
    float _5635 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
    float _5646 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _5657 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
    float _3519;
    float _3520;
    float _3521;
    if ((1.0 - _1151) > 0.00999999977648258209228515625)
    {
        vec4 _3438 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3309, _3310), 0.0);
        float _3440 = _3438.x;
        float _3446 = (_3340 ? (_3349 / (cbSceneParam._m0[2u].x - _3440)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3440))) - _1369;
        uint _3452 = floatBitsToUint(cbInstanceData._m0[_2853]).x * 14u;
        uint _3458 = _3452 + 4u;
        float _3467 = dot(vec3(cbLight._m0[_3452].xyz), vec3(_253, _254, _255));
        float _3475 = dot(vec3((-0.0) - _1425, (-0.0) - _1426, (-0.0) - _1427), vec3((-0.0) - _253, (-0.0) - _254, (-0.0) - _255));
        float _3480 = ((isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3467 : (isnan(_3467) ? 0.001000000047497451305389404296875 : max(_3467, 0.001000000047497451305389404296875)))) + 1.0;
        float _3482 = (-0.0) - ((isnan(_3446) ? 0.0 : (isnan(0.0) ? _3446 : max(0.0, _3446))) * _3480);
        _3519 = _3365 ? 0.0 : ((((cbMtdParam._m0[38u].z * 0.079577468335628509521484375) * cbLight._m0[_3458].x) / ((_3480 * _3357) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3357 * 1.44269502162933349609375) * _3482)));
        _3520 = _3365 ? 0.0 : ((((cbMtdParam._m0[38u].w * 0.079577468335628509521484375) * cbLight._m0[_3458].y) / ((_3480 * _3358) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3358 * 1.44269502162933349609375) * _3482)));
        _3521 = _3365 ? 0.0 : ((((cbMtdParam._m0[39u].x * 0.079577468335628509521484375) * cbLight._m0[_3458].z) / ((_3480 * _3359) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3359 * 1.44269502162933349609375) * _3482)));
    }
    else
    {
        _3519 = 0.0;
        _3520 = 0.0;
        _3521 = 0.0;
    }
    float _3538 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _3539 = (_3519 + ((exp2(_3369 * (_3365 ? 0.0 : _3357)) * (((_3320 * (((cbMtdParam._m0[29u].y - _1276) * _622) + _1276)) * cbSceneParam._m0[72u].z) + _3312.x)) * cbSceneParam._m0[72u].w)) * _3538;
    float _3540 = (_3520 + ((exp2(_3369 * (_3365 ? 0.0 : _3358)) * (((_3320 * (((cbMtdParam._m0[29u].y - _1277) * _622) + _1277)) * cbSceneParam._m0[72u].z) + _3312.y)) * cbSceneParam._m0[72u].w)) * _3538;
    float _3541 = (_3521 + ((exp2(_3369 * (_3365 ? 0.0 : _3359)) * (((_3320 * (((cbMtdParam._m0[29u].y - _1278) * _622) + _1278)) * cbSceneParam._m0[72u].z) + _3312.z)) * cbSceneParam._m0[72u].w)) * _3538;
    float _3550 = (((cbInstanceData._m0[_3259].x * (((((_962 * cbMtdParam._m0[11u].x) - _926) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _962) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].x) * _985.x)) * _934) + _926)) + (((((_2536 * _2571.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0))) * _2331) * _2587)) + _3249) * cbPerFrame._m0[3u].x)) + _3539) + ((((isnan(1.0) ? _5635 : (isnan(_5635) ? 1.0 : min(_5635, 1.0))) * (_3243 + ((isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0))) * _1525))) - _3539) * _1151);
    float _3553 = (((cbInstanceData._m0[_3259].y * (((((_963 * cbMtdParam._m0[11u].y) - _927) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _963) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].y) * _985.y)) * _934) + _927)) + (((((_2536 * _2571.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0))) * _2331) * _2587)) + _3251) * cbPerFrame._m0[3u].x)) + _3540) + ((((isnan(1.0) ? _5646 : (isnan(_5646) ? 1.0 : min(_5646, 1.0))) * (_3245 + ((isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0))) * _1525))) - _3540) * _1151);
    float _3556 = (((cbInstanceData._m0[_3259].z * (((((_964 * cbMtdParam._m0[11u].z) - _928) + ((((cbMtdParam._m0[29u].x * _964) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _985.z)) * _934) + _928)) + (((((_2536 * _2571.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0))) * _2331) * _2587)) + _3253) * cbPerFrame._m0[3u].x)) + _3541) + ((((isnan(1.0) ? _5657 : (isnan(_5657) ? 1.0 : min(_5657, 1.0))) * (_3247 + ((isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0))) * _1525))) - _3541) * _1151);
    float _3569 = _1166 / cbSceneParam._m0[86u].x;
    float _3570 = _1167 / cbSceneParam._m0[86u].y;
    vec4 _3584 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3569, _3570, (log2((isnan(cbSceneParam._m0[77u].w) ? _1369 : (isnan(_1369) ? cbSceneParam._m0[77u].w : min(_1369, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3586 = _3584.x;
    float _3587 = _3584.y;
    float _3588 = _3584.z;
    float _3589 = _3584.w;
    float _3712;
    float _3714;
    float _3716;
    float _3718;
    if (_1369 > cbSceneParam._m0[78u].w)
    {
        float _3677 = isnan(_1369) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1369 : min(cbSceneParam._m0[80u].w, _1369));
        float _3678 = _3677 / _1369;
        float _3689 = _3678 * _1418;
        float _3690 = _1419 * _3678;
        float _3691 = (-0.0) - _3690;
        float _3692 = _3678 * _1420;
        float _3694 = (cbSceneParam._m0[77u].w * _3691) / _3677;
        float _3695 = _3694 + cbSceneParam._m0[79u].w;
        float _3696 = cbSceneParam._m0[79u].w - _3690;
        float _3702 = sqrt(((_3689 * _3689) + (_3690 * _3690)) + (_3692 * _3692));
        float _3705 = (1.0 - (cbSceneParam._m0[77u].w / _3677)) * _3702;
        float _3710 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3711 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _4066;
        if (abs((_3691 - _3694) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _4066 = ((((_3695 > 0.0) ? exp2(_3710 * _3695) : (2.0 - exp2(_3711 * _3695))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3705;
        }
        else
        {
            float _3840 = 1.0 / cbSceneParam._m0[80u].x;
            float _3841 = isnan(_3696) ? _3695 : (isnan(_3695) ? _3696 : max(_3695, _3696));
            float _3842 = isnan(_3696) ? _3695 : (isnan(_3695) ? _3696 : min(_3695, _3696));
            float _3851 = isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : min(_3841, 0.0));
            float _3852 = isnan(0.0) ? _3842 : (isnan(_3842) ? 0.0 : min(_3842, 0.0));
            _4066 = ((abs(_3702 / _3691) * cbSceneParam._m0[80u].y) * ((((_3851 - _3852) * 2.0) - ((exp2(_3710 * (isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : max(_3841, 0.0)))) - exp2(_3710 * (isnan(0.0) ? _3842 : (isnan(_3842) ? 0.0 : max(_3842, 0.0))))) * _3840)) - ((exp2(_3711 * _3851) - exp2(_3711 * _3852)) * _3840))) + (_3705 * cbSceneParam._m0[80u].z);
        }
        vec4 _4068 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3569, _3570, 1.0), 0.0);
        float _4077 = exp2((_4066 * (-1.44269502162933349609375)) * (1.0 - _4068.w));
        float _4078 = log2(_4077);
        float _4094 = log2(_3589);
        _3712 = (exp2(_4094 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_4078 * cbSceneParam._m0[78u].x)) * _4068.x) / cbSceneParam._m0[78u].x)) + _3586;
        _3714 = (exp2(_4094 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_4078 * cbSceneParam._m0[78u].y)) * _4068.y) / cbSceneParam._m0[78u].y)) + _3587;
        _3716 = (exp2(_4094 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_4078 * cbSceneParam._m0[78u].z)) * _4068.z) / cbSceneParam._m0[78u].z)) + _3588;
        _3718 = _4077 * _3589;
    }
    else
    {
        _3712 = _3586;
        _3714 = _3587;
        _3716 = _3588;
        _3718 = _3589;
    }
    bool _3730 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3731 = log2(_3718);
    float _3738 = exp2(_3731 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0)));
    float _3739 = exp2(_3731 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0)));
    float _3740 = exp2(_3731 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0)));
    vec4 _3748 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1166, _1167));
    float _3750 = _3748.x;
    float _3771 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3750)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3750))) - _1369) * cbMtdParam._m0[23u].y;
    float _5738 = isnan(0.0) ? _3771 : (isnan(_3771) ? 0.0 : max(_3771, 0.0));
    float _3773 = (cbInstanceData._m0[_1501 + 6u].w * (isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0)))) * (isnan(1.0) ? _5738 : (isnan(_5738) ? 1.0 : min(_5738, 1.0)));
    float _3782 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3782 * (_3730 ? _3738 : (_3738 + (cbSceneParam._m0[72u].w * _3712)));
    SV_Target.y = _3782 * (_3730 ? _3739 : (_3739 + (cbSceneParam._m0[72u].w * _3714)));
    SV_Target.z = _3782 * (_3730 ? _3740 : (_3740 + (cbSceneParam._m0[72u].w * _3716)));
    SV_Target.w = _3773;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3773;
}


