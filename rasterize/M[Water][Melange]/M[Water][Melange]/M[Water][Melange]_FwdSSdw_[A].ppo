#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[43];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 52) uniform texture2D g_ScreenSpaceShadowTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Melange_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_Melange_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_Melange_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_Melange_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Water_Melange_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Water_Melange_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Water_Melange_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D M_Water_Melange_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1950;
float _4387;
float _4388;
float _4389;
float _4390;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _234 = _233 * _225;
    float _235 = _233 * _226;
    float _236 = _233 * _227;
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = _240 * NORMAL.x;
    float _242 = _240 * NORMAL.y;
    float _243 = _240 * NORMAL.z;
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = _247 * TANGENT.x;
    float _249 = _247 * TANGENT.y;
    float _250 = _247 * TANGENT.z;
    float _255;
    float _256;
    float _257;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _255 = (-0.0) - _241;
        _256 = (-0.0) - _242;
        _257 = (-0.0) - _243;
    }
    else
    {
        _255 = _241;
        _256 = _242;
        _257 = _243;
    }
    float _301 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _311 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _301);
    float _312 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _301);
    float _313 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _301);
    float _329 = cbMtdParam._m0[21u].x - cbMtdParam._m0[20u].w;
    float _331 = (sqrt(((_311 * _311) + (_312 * _312)) + (_313 * _313)) - cbMtdParam._m0[20u].w) / (isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0)));
    float _335 = _331 / cbMtdParam._m0[22u].z;
    float _336 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
    float _337 = isnan(8.0) ? _336 : (isnan(_336) ? 8.0 : min(_336, 8.0));
    float _344 = cbMtdParam._m0[10u].x * _337;
    float _345 = cbMtdParam._m0[10u].y * _337;
    float _346 = cbMtdParam._m0[10u].z * _337;
    float _347 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _348 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _349 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _360 = cbMtdParam._m0[21u].y + _331;
    float _364 = _360 * cbMtdParam._m0[23u].z;
    float _4444 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    vec4 _382 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _385 = _382.x;
    float _408 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _385)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _385))) - POSITION_1.w) / cbMtdParam._m0[20u].x;
    float _4455 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _409 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
    float _414 = 1.0 - (isnan(cbMtdParam._m0[25u].y) ? _409 : (isnan(_409) ? cbMtdParam._m0[25u].y : max(_409, cbMtdParam._m0[25u].y)));
    float _416 = (cbMtdParam._m0[25u].x + TEXCOORD_3.x) - (_414 * cbMtdParam._m0[20u].z);
    float _427 = cbMtdParam._m0[19u].z * cbPerFrame._m0[22u].x;
    float _432 = cbMtdParam._m0[35u].x * TEXCOORD.x;
    float _433 = cbMtdParam._m0[35u].y * TEXCOORD.y;
    vec4 _447 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_2, SS_BumpMap), vec2(((_432 + (_427 * cbMtdParam._m0[35u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_433 + (_427 * cbMtdParam._m0[35u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _449 = _447.x;
    float _450 = _447.y;
    float _4471 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _453 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _454 = _447.z - _453;
    float _4482 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _455 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _467 = (_455 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _469 = (_455 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _482 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_467 + (cbMtdParam._m0[30u].z * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_469 + (cbMtdParam._m0[30u].w * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _486 = _482.z;
    vec4 _497 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((_467 + (cbMtdParam._m0[30u].x * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_469 + (cbMtdParam._m0[30u].y * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _501 = _497.z;
    float _504 = (_414 - _447.w) + (isnan(_501) ? _486 : (isnan(_486) ? _501 : max(_486, _501)));
    float _4498 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
    float _506 = (_416 * (isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0)))) * (isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0)));
    float _519 = (_506 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[14u].x * _455);
    float _520 = (_506 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[14u].y * _455);
    float _521 = (_506 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[14u].z * _455);
    vec4 _567 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].x * _427))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / cbMtdParam._m0[21u].z) + (cbMtdParam._m0[36u].y * _427))) + cbTextureTilingScale._m0[1u].w));
    float _572 = _567.z * 0.099999986588954925537109375;
    float _4509 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _574 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
    float _578 = cbMtdParam._m0[23u].x * _331;
    float _4520 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _579 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
    float _593 = (_519 + (isnan(0.07999999821186065673828125) ? _347 : (isnan(_347) ? 0.07999999821186065673828125 : min(_347, 0.07999999821186065673828125)))) + (_579 * (((1.0 - _519) - _574) + _572));
    float _595 = (_520 + (isnan(0.07999999821186065673828125) ? _348 : (isnan(_348) ? 0.07999999821186065673828125 : min(_348, 0.07999999821186065673828125)))) + (_579 * (((1.0 - _520) - _574) + _572));
    float _597 = (_521 + (isnan(0.07999999821186065673828125) ? _349 : (isnan(_349) ? 0.07999999821186065673828125 : min(_349, 0.07999999821186065673828125)))) + (_579 * (((1.0 - _521) + _572) - _574));
    float _4531 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _598 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
    float _4542 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    float _599 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
    float _4553 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _600 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
    float _606 = _331 / cbMtdParam._m0[24u].z;
    float _4564 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _609 = (1.0 - (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0)))) * cbMtdParam._m0[24u].y;
    float _616 = ((cbMtdParam._m0[20u].y - cbMtdParam._m0[19u].x) * _453) + cbMtdParam._m0[19u].x;
    float _623 = (POSITION_1.w - cbMtdParam._m0[28u].z) * (1.0 / cbMtdParam._m0[28u].y);
    float _4575 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _624 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
    float _637 = (cbMtdParam._m0[33u].z * _427) + _432;
    float _638 = (cbMtdParam._m0[33u].w * _427) + _433;
    vec4 _666 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[32u].z * _427) + _432)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[32u].w * _427) + _433)) + cbTextureTilingScale._m0[3u].w));
    float _673 = (_666.x * 2.0) + (-1.0);
    float _675 = (_666.y * 2.0) + (-1.0);
    float _679 = 1.0 - dot(vec2(_673, _675), vec2(_673, _675));
    float _4586 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _681 = sqrt(isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0)));
    float _684 = fma(_681, _255, fma(_675, _248, _673 * _234));
    float _687 = fma(_681, _256, fma(_675, _249, _673 * _235));
    float _690 = fma(_681, _257, fma(_675, _250, _673 * _236));
    float _694 = inversesqrt(dot(vec3(_684, _687, _690), vec3(_684, _687, _690)));
    float _695 = cbPerFrame._m0[22u].x * 2.0;
    float _696 = _695 * cbMtdParam._m0[26u].w;
    float _700 = ((_684 * 0.5) * _694) + (-0.25);
    float _704 = ((_687 * 0.5) * _694) + (-0.25);
    float _705 = _704 * cbMtdParam._m0[27u].x;
    float _707 = (-0.0) - (cbMtdParam._m0[27u].x * _700);
    float _708 = fract(_696);
    float _710 = fract(_696 + 0.5);
    float _721 = abs((_708 * 2.0) + (-1.0));
    vec4 _738 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_708 * _707) + _637) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_705 * _708) + _638) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _740 = _738.x;
    float _741 = _738.y;
    float _742 = _738.z;
    vec4 _743 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_710 * _707) + _637) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_705 * _710) + _638) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _754 = ((_743.x - _740) * _721) + _740;
    float _755 = ((_743.y - _741) * _721) + _741;
    float _756 = ((_743.z - _742) * _721) + _742;
    float _770 = (cbMtdParam._m0[32u].x * _427) + _432;
    float _771 = (cbMtdParam._m0[32u].y * _427) + _433;
    float _774 = _695 * cbMtdParam._m0[26u].x;
    float _775 = _704 * cbMtdParam._m0[25u].w;
    float _777 = (-0.0) - (cbMtdParam._m0[25u].w * _700);
    float _778 = fract(_774);
    float _780 = fract(_774 + 0.5);
    float _791 = abs((_778 * 2.0) + (-1.0));
    vec4 _808 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_778 * _777) + _770) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_775 * _778) + _771) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _810 = _808.x;
    float _811 = _808.y;
    float _812 = _808.z;
    vec4 _813 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_780 * _777) + _770) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_775 * _780) + _771) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _853 = (cbMtdParam._m0[33u].x * _427) + _432;
    float _854 = (cbMtdParam._m0[33u].y * _427) + _433;
    float _857 = _695 * cbMtdParam._m0[26u].z;
    float _858 = _704 * cbMtdParam._m0[26u].y;
    float _860 = (-0.0) - (cbMtdParam._m0[26u].y * _700);
    float _861 = fract(_857);
    float _863 = fract(_857 + 0.5);
    float _874 = abs((_861 * 2.0) + (-1.0));
    vec4 _891 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_861 * _860) + _853) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_858 * _861) + _854) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _893 = _891.x;
    float _894 = _891.y;
    float _895 = _891.z;
    vec4 _896 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_863 * _860) + _853) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_858 * _863) + _854) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _916 = (((((_896.x - _893) * _874) + _893) * cbMtdParam._m0[16u].x) + (_754 * cbMtdParam._m0[17u].x)) + (((((cbMtdParam._m0[15u].x - cbMtdParam._m0[18u].x) * _754) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].x) * (((_813.x - _810) * _791) + _810));
    float _920 = (((((_896.y - _894) * _874) + _894) * cbMtdParam._m0[16u].y) + (_755 * cbMtdParam._m0[17u].y)) + (((((cbMtdParam._m0[15u].y - cbMtdParam._m0[18u].y) * _755) * cbMtdParam._m0[28u].w) + cbMtdParam._m0[18u].y) * (((_813.y - _811) * _791) + _811));
    float _924 = (((((_896.z - _895) * _874) + _895) * cbMtdParam._m0[16u].z) + (_756 * cbMtdParam._m0[17u].z)) + ((((cbMtdParam._m0[28u].w * _756) * (cbMtdParam._m0[15u].z - cbMtdParam._m0[18u].z)) + cbMtdParam._m0[18u].z) * (((_813.z - _812) * _791) + _812));
    float _928 = _916 - (_916 * _624);
    float _929 = _920 - (_920 * _624);
    float _930 = _924 - (_924 * _624);
    float _935 = (POSITION_1.w - cbMtdParam._m0[28u].x) * (1.0 / cbMtdParam._m0[27u].w);
    float _4597 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _936 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
    float _949 = (cbMtdParam._m0[34u].z * _427) + _432;
    float _950 = (cbMtdParam._m0[34u].w * _427) + _433;
    vec4 _962 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_949 * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (_950 * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _964 = _962.x;
    float _965 = _962.y;
    float _966 = _962.z;
    vec4 _987 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * _949) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _950) + cbTextureTilingScale._m0[9u].w));
    float _4608 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _1029 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
    float _1039 = _331 / cbMtdParam._m0[22u].w;
    float _4619 = isnan(0.0) ? _1039 : (isnan(_1039) ? 0.0 : max(_1039, 0.0));
    float _1040 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _1041 = _455 * 0.23999999463558197021484375;
    float _1043 = _455 * (-0.20000000298023223876953125);
    float _1054 = cbMtdParam._m0[37u].x * TEXCOORD.x;
    float _1055 = cbMtdParam._m0[37u].y * TEXCOORD.y;
    vec4 _1070 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[36u].z * _427) + _1041) + _1054) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[36u].w * _427) + _1043) + _1055) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1086 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1054 + _1041) + (cbMtdParam._m0[37u].z * _427)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1055 + _1043) + (cbMtdParam._m0[37u].w * _427)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1104 = (((_497.x + (-0.5)) * 0.5) + _482.x) + (((_1070.x + (-1.0)) + _1086.x) * cbMtdParam._m0[24u].w);
    float _1105 = (((_497.y + (-0.5)) * 0.5) + _482.y) + (((_1070.y + (-1.0)) + _1086.y) * cbMtdParam._m0[24u].w);
    float _1110 = ((_567.x - _1104) * _1040) + _1104;
    float _1111 = ((_567.y - _1105) * _1040) + _1105;
    float _1113 = _331 / cbMtdParam._m0[22u].y;
    float _4630 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _1114 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
    float _1130 = ((((_1029 * (0.5 - _449)) + _449) + (((_1110 + (-0.5)) + ((0.5 - _1110) * _1114)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1131 = ((((_1029 * (0.5 - _450)) + _450) + (((_1111 + (-0.5)) + ((0.5 - _1111) * _1114)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1132 = dot(vec2(_1130, _1131), vec2(_1130, _1131));
    float _4641 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1137 = sqrt(1.0 - (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0))));
    float _1141 = cbMtdParam._m0[23u].w * _360;
    float _4652 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
    float _1150 = cbMtdParam._m0[21u].w * _360;
    float _4663 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _1152 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * cbMtdParam._m0[27u].y;
    float _4674 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    float _1153 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
    float _1168 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1169 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1179 = ((_1168 / cbSceneParam._m0[86u].x) * 2.0) + (-1.0);
    float _1180 = 1.0 - ((_1169 / cbSceneParam._m0[86u].y) * 2.0);
    vec4 _1181 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1168, _1169), 0.0);
    float _1183 = _1181.x;
    float _1223 = fma(_1183, cbSceneParam._m0[15u].z, fma(_1180, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * _1179)) + cbSceneParam._m0[15u].w;
    float _1224 = (fma(_1183, cbSceneParam._m0[12u].z, fma(_1180, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * _1179)) + cbSceneParam._m0[12u].w) / _1223;
    float _1225 = (fma(_1183, cbSceneParam._m0[13u].z, fma(_1180, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * _1179)) + cbSceneParam._m0[13u].w) / _1223;
    float _1226 = (fma(_1183, cbSceneParam._m0[14u].z, fma(_1180, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * _1179)) + cbSceneParam._m0[14u].w) / _1223;
    vec4 _1273 = texture(sampler2D(M_Water_Melange_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * ((((fma(_1226, cbSceneParam._m0[20u].z, fma(_1225, cbSceneParam._m0[20u].y, cbSceneParam._m0[20u].x * _1224)) + cbSceneParam._m0[20u].w) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].x * _427))) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * ((((fma(_1226, cbSceneParam._m0[22u].z, fma(_1225, cbSceneParam._m0[22u].y, cbSceneParam._m0[22u].x * _1224)) + cbSceneParam._m0[22u].w) - cbSceneParam._m0[92u].z) / cbMtdParam._m0[27u].z) + (cbMtdParam._m0[34u].y * _427))) + cbTextureTilingScale._m0[7u].w));
    float _1278 = _1273.x * cbMtdParam._m0[42u].y;
    float _1279 = _1273.y * cbMtdParam._m0[42u].z;
    float _1280 = _1273.z * cbMtdParam._m0[42u].w;
    float _1297 = ((cbMtdParam._m0[24u].x - cbMtdParam._m0[22u].x) * (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) + cbMtdParam._m0[22u].x;
    float _1302 = _1130 - (_1297 * _1130);
    float _1303 = _1131 - (_1297 * _1131);
    float _1304 = (_1297 * (1.0 - _1137)) + _1137;
    float _1323 = fma(_1137, _255, fma(_1131, _248, _1130 * _234));
    float _1326 = fma(_1137, _256, fma(_1131, _249, _1130 * _235));
    float _1329 = fma(_1137, _257, fma(_1131, _250, _1130 * _236));
    float _1333 = inversesqrt(dot(vec3(_1323, _1326, _1329), vec3(_1323, _1326, _1329)));
    float _1334 = _1333 * _1323;
    float _1335 = _1333 * _1326;
    float _1336 = _1333 * _1329;
    float _1339 = fma(_1304, _255, fma(_1303, _248, _1302 * _234));
    float _1342 = fma(_1304, _256, fma(_1303, _249, _1302 * _235));
    float _1345 = fma(_1304, _257, fma(_1303, _250, _1302 * _236));
    float _1349 = inversesqrt(dot(vec3(_1339, _1342, _1345), vec3(_1339, _1342, _1345)));
    float _1350 = _1349 * _1339;
    float _1351 = _1349 * _1342;
    float _1352 = _1349 * _1345;
    float _4685 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _4696 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _1354 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
    float _4707 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _4718 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _4729 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _1371 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1411 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1420 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1411);
    float _1421 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1411);
    float _1422 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1411);
    float _1426 = inversesqrt(dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422)));
    float _1427 = _1420 * _1426;
    float _1428 = _1421 * _1426;
    float _1429 = _1422 * _1426;
    vec4 _1434 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1436 = _1434.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1635 = sqrt(((_1420 * _1420) + (_1421 * _1421)) + (_1422 * _1422));
        float _1641 = (cbMatDynParam._m0[5u].x * _1635) + cbMatDynParam._m0[5u].y;
        float _4740 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
        float _1646 = (cbMatDynParam._m0[5u].z * _1635) + cbMatDynParam._m0[5u].w;
        float _4751 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0))) - _1642)) + _1642) < ((_1436 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1446 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1447 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1449 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1458 = (_1449.x * 2.0) + (-1.0);
    float _1459 = (_1449.y * 2.0) + (-1.0);
    float _1460 = (_1449.z * 2.0) + (-1.0);
    float _1464 = inversesqrt(dot(vec3(_1458, _1459, _1460), vec3(_1458, _1459, _1460)));
    float _1475 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1449.w;
    float _1482 = (((_1458 * _1464) - _1334) * _1475) + _1334;
    float _1483 = (((_1459 * _1464) - _1335) * _1475) + _1335;
    float _1484 = (((_1460 * _1464) - _1336) * _1475) + _1336;
    float _1502 = fma(_1484, cbSceneParam._m0[5u].z, fma(_1483, cbSceneParam._m0[5u].y, _1482 * cbSceneParam._m0[5u].x));
    float _1505 = fma(_1484, cbSceneParam._m0[6u].z, fma(_1483, cbSceneParam._m0[6u].y, _1482 * cbSceneParam._m0[6u].x));
    float _1508 = fma(_1484, cbSceneParam._m0[7u].z, fma(_1483, cbSceneParam._m0[7u].y, _1482 * cbSceneParam._m0[7u].x));
    uint _1521 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1522 = _1521 + 9u;
    uint _1523 = _1522 + uint(cbMatDynParam._m0[0u].w);
    float _1529 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0)))) * cbInstanceData._m0[_1523].x;
    float _1530 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0)))) * cbInstanceData._m0[_1523].y;
    float _1531 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0)))) * cbInstanceData._m0[_1523].z;
    float _4762 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
    float _1532 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
    float _4773 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    float _1533 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
    float _4784 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
    float _1534 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    vec4 _1542 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1446, cbSceneParam._m0[86u].y * _1447));
    float _1545 = _1542.x * TEXCOORD_3.w;
    float _1549 = abs(dot(vec3(_1427, _1428, _1429), vec3(_1482, _1483, _1484)));
    float _4795 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    float _1562 = dot(vec3(_1350, _1351, _1352), vec3(_1427, _1428, _1429)) * 2.0;
    float _1566 = (_1562 * _1350) - _1427;
    float _1567 = (_1562 * _1351) - _1428;
    float _1568 = (_1562 * _1352) - _1429;
    float _1572 = abs(dot(vec3(_1427, _1428, _1429), vec3(_1350, _1351, _1352)));
    float _4806 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
    float _1574 = sqrt(_1354);
    float _1586 = exp2((_1574 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1574 * 3.0));
    float _1617 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1621 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1625 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1949;
    float _1951;
    float _1952;
    float _1953;
    float _1954;
    float _1955;
    float _1956;
    float _1957;
    float _1958;
    float _1959;
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1678 = fma(_1625, cbModelParam._m0[26u].z, fma(_1621, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1617));
        float _1682 = fma(_1625, cbModelParam._m0[27u].z, fma(_1621, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1617));
        float _1686 = fma(_1625, cbModelParam._m0[28u].z, fma(_1621, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1617));
        float _1708 = _1617 + _1350;
        float _1709 = _1621 + _1351;
        float _1710 = _1625 + _1352;
        float _1720 = fma(_1710, cbModelParam._m0[26u].z, fma(_1709, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1708)) - _1678;
        float _1721 = fma(_1710, cbModelParam._m0[27u].z, fma(_1709, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1708)) - _1682;
        float _1722 = fma(_1710, cbModelParam._m0[28u].z, fma(_1709, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1708)) - _1686;
        float _1726 = inversesqrt(dot(vec3(_1720, _1721, _1722), vec3(_1720, _1721, _1722)));
        float _1738 = ((_1726 * _1720) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1678 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1739 = ((_1726 * _1721) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1682 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1740 = ((_1726 * _1722) / cbModelParam._m0[34u].z) + ((((((_1686 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1743 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1738, _1739, _1740), 0.0);
        vec4 _1750 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1738, _1739, _1740), 0.0);
        vec4 _1757 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1738, _1739, _1740), 0.0);
        vec4 _1764 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1738, _1739, _1740), 0.0);
        float _1777 = exp2((_1743.w + (-0.5)) * 20.0) * 2.0;
        float _1778 = _1777 * (_1743.x + (-0.5));
        float _1779 = _1777 * (_1743.y + (-0.5));
        float _1780 = _1777 * (_1743.z + (-0.5));
        float _1787 = exp2((_1750.w + (-0.5)) * 20.0) * 2.0;
        float _1788 = _1787 * (_1750.x + (-0.5));
        float _1789 = _1787 * (_1750.y + (-0.5));
        float _1790 = _1787 * (_1750.z + (-0.5));
        float _1797 = exp2((_1757.w + (-0.5)) * 20.0) * 2.0;
        float _1798 = _1797 * (_1757.x + (-0.5));
        float _1799 = _1797 * (_1757.y + (-0.5));
        float _1800 = _1797 * (_1757.z + (-0.5));
        float _1807 = exp2((_1764.w + (-0.5)) * 20.0) * 2.0;
        float _1808 = _1807 * (_1764.x + (-0.5));
        float _1809 = _1807 * (_1764.y + (-0.5));
        float _1810 = _1807 * (_1764.z + (-0.5));
        float _1811 = isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0));
        float _1812 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
        float _1813 = isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0));
        float _1814 = _1778 * 0.5;
        float _1815 = _1788 * 0.5;
        float _1816 = _1798 * 0.5;
        float _1817 = dot(vec3(_1814, _1815, _1816), vec3(_1814, _1815, _1816));
        float _1822 = (_1817 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1817);
        float _1831 = (dot(vec3(_1350, _1351, _1352), vec3(_1822 * _1814, _1822 * _1815, _1822 * _1816)) + 1.0) * 0.5;
        float _4832 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1841 = sqrt(((_1815 * _1815) + (_1814 * _1814)) + (_1816 * _1816)) / (_1811 + 9.9999997473787516355514526367188e-06);
        float _4843 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
        float _1842 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
        float _1843 = _1842 * 2.0;
        float _1847 = (1.0 - _1842) / (_1842 + 1.0);
        float _4854 = isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0));
        float _1848 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
        float _1857 = ((((1.0 - _1848) * (_1843 + 2.0)) * exp2(log2(isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * (_1843 + 1.0))) + _1848) * _1811;
        float _1858 = _1779 * 0.5;
        float _1859 = _1789 * 0.5;
        float _1860 = _1799 * 0.5;
        float _1861 = dot(vec3(_1858, _1859, _1860), vec3(_1858, _1859, _1860));
        float _1866 = (_1861 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1861);
        float _1874 = (dot(vec3(_1350, _1351, _1352), vec3(_1866 * _1858, _1866 * _1859, _1866 * _1860)) + 1.0) * 0.5;
        float _4865 = isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0));
        float _1883 = sqrt(((_1859 * _1859) + (_1858 * _1858)) + (_1860 * _1860)) / (_1812 + 9.9999997473787516355514526367188e-06);
        float _4876 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0));
        float _1884 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
        float _1885 = _1884 * 2.0;
        float _1889 = (1.0 - _1884) / (_1884 + 1.0);
        float _4887 = isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0));
        float _1890 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
        float _1899 = ((((1.0 - _1890) * (_1885 + 2.0)) * exp2(log2(isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_1885 + 1.0))) + _1890) * _1812;
        float _1900 = _1780 * 0.5;
        float _1901 = _1790 * 0.5;
        float _1902 = _1800 * 0.5;
        float _1903 = dot(vec3(_1900, _1901, _1902), vec3(_1900, _1901, _1902));
        float _1908 = (_1903 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1903);
        float _1916 = (dot(vec3(_1350, _1351, _1352), vec3(_1908 * _1900, _1908 * _1901, _1908 * _1902)) + 1.0) * 0.5;
        float _4898 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
        float _1925 = sqrt(((_1901 * _1901) + (_1900 * _1900)) + (_1902 * _1902)) / (_1813 + 9.9999997473787516355514526367188e-06);
        float _4909 = isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0));
        float _1926 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
        float _1927 = _1926 * 2.0;
        float _1931 = (1.0 - _1926) / (_1926 + 1.0);
        float _4920 = isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0));
        float _1932 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
        float _1941 = ((((1.0 - _1932) * (_1927 + 2.0)) * exp2(log2(isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0))) * (_1927 + 1.0))) + _1932) * _1813;
        _1949 = _1780;
        _1951 = _1779;
        _1952 = _1778;
        _1953 = _1790;
        _1954 = _1789;
        _1955 = _1788;
        _1956 = _1800;
        _1957 = _1799;
        _1958 = _1798;
        _1959 = _1813;
        _1960 = _1812;
        _1961 = _1811;
        _1962 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0)));
        _1963 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0)));
        _1964 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0)));
    }
    else
    {
        _1949 = _1950;
        _1951 = _1950;
        _1952 = _1950;
        _1953 = _1950;
        _1954 = _1950;
        _1955 = _1950;
        _1956 = _1950;
        _1957 = _1950;
        _1958 = _1950;
        _1959 = _1950;
        _1960 = _1950;
        _1961 = _1950;
        _1962 = 0.0;
        _1963 = 0.0;
        _1964 = 0.0;
    }
    float _2258;
    float _2259;
    float _2260;
    float _2261;
    float _2262;
    float _2263;
    float _2264;
    float _2265;
    float _2266;
    float _2267;
    float _2268;
    float _2269;
    float _2270;
    float _2271;
    float _2272;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1991 = fma(_1625, cbModelParam._m0[30u].z, fma(_1621, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1617));
        float _1995 = fma(_1625, cbModelParam._m0[31u].z, fma(_1621, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1617));
        float _1999 = fma(_1625, cbModelParam._m0[32u].z, fma(_1621, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1617));
        float _2021 = _1617 + _1350;
        float _2022 = _1621 + _1351;
        float _2023 = _1625 + _1352;
        float _2033 = fma(_2023, cbModelParam._m0[30u].z, fma(_2022, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _2021)) - _1991;
        float _2034 = fma(_2023, cbModelParam._m0[31u].z, fma(_2022, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _2021)) - _1995;
        float _2035 = fma(_2023, cbModelParam._m0[32u].z, fma(_2022, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _2021)) - _1999;
        float _2039 = inversesqrt(dot(vec3(_2033, _2034, _2035), vec3(_2033, _2034, _2035)));
        float _2051 = ((_2039 * _2033) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1991 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2052 = ((_2039 * _2034) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1995 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2053 = ((_2039 * _2035) / cbModelParam._m0[35u].z) + ((((((_1999 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2055 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2051, _2052, _2053), 0.0);
        vec4 _2062 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2051, _2052, _2053), 0.0);
        vec4 _2069 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2051, _2052, _2053), 0.0);
        vec4 _2076 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2051, _2052, _2053), 0.0);
        float _2088 = exp2((_2055.w + (-0.5)) * 20.0) * 2.0;
        float _2089 = _2088 * (_2055.x + (-0.5));
        float _2090 = _2088 * (_2055.y + (-0.5));
        float _2091 = _2088 * (_2055.z + (-0.5));
        float _2098 = exp2((_2062.w + (-0.5)) * 20.0) * 2.0;
        float _2099 = _2098 * (_2062.x + (-0.5));
        float _2100 = _2098 * (_2062.y + (-0.5));
        float _2101 = _2098 * (_2062.z + (-0.5));
        float _2108 = exp2((_2069.w + (-0.5)) * 20.0) * 2.0;
        float _2109 = _2108 * (_2069.x + (-0.5));
        float _2110 = _2108 * (_2069.y + (-0.5));
        float _2111 = _2108 * (_2069.z + (-0.5));
        float _2118 = exp2((_2076.w + (-0.5)) * 20.0) * 2.0;
        float _2119 = _2118 * (_2076.x + (-0.5));
        float _2120 = _2118 * (_2076.y + (-0.5));
        float _2121 = _2118 * (_2076.z + (-0.5));
        float _2122 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
        float _2123 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
        float _2124 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
        float _2125 = _2089 * 0.5;
        float _2126 = _2099 * 0.5;
        float _2127 = _2109 * 0.5;
        float _2128 = dot(vec3(_2125, _2126, _2127), vec3(_2125, _2126, _2127));
        float _2133 = (_2128 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2128);
        float _2141 = (dot(vec3(_1350, _1351, _1352), vec3(_2133 * _2125, _2133 * _2126, _2133 * _2127)) + 1.0) * 0.5;
        float _4961 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
        float _2150 = sqrt(((_2126 * _2126) + (_2125 * _2125)) + (_2127 * _2127)) / (_2122 + 9.9999997473787516355514526367188e-06);
        float _4972 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
        float _2151 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
        float _2152 = _2151 * 2.0;
        float _2156 = (1.0 - _2151) / (_2151 + 1.0);
        float _4983 = isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0));
        float _2157 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
        float _2166 = ((((1.0 - _2157) * (_2152 + 2.0)) * exp2(log2(isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0))) * (_2152 + 1.0))) + _2157) * _2122;
        float _2167 = _2090 * 0.5;
        float _2168 = _2100 * 0.5;
        float _2169 = _2110 * 0.5;
        float _2170 = dot(vec3(_2167, _2168, _2169), vec3(_2167, _2168, _2169));
        float _2175 = (_2170 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2170);
        float _2183 = (dot(vec3(_1350, _1351, _1352), vec3(_2175 * _2167, _2175 * _2168, _2175 * _2169)) + 1.0) * 0.5;
        float _4994 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
        float _2192 = sqrt(((_2168 * _2168) + (_2167 * _2167)) + (_2169 * _2169)) / (_2123 + 9.9999997473787516355514526367188e-06);
        float _5005 = isnan(0.0) ? _2192 : (isnan(_2192) ? 0.0 : max(_2192, 0.0));
        float _2193 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
        float _2194 = _2193 * 2.0;
        float _2198 = (1.0 - _2193) / (_2193 + 1.0);
        float _5016 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
        float _2199 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
        float _2208 = ((((1.0 - _2199) * (_2194 + 2.0)) * exp2(log2(isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0))) * (_2194 + 1.0))) + _2199) * _2123;
        float _2209 = _2091 * 0.5;
        float _2210 = _2101 * 0.5;
        float _2211 = _2111 * 0.5;
        float _2212 = dot(vec3(_2209, _2210, _2211), vec3(_2209, _2210, _2211));
        float _2217 = (_2212 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2212);
        float _2225 = (dot(vec3(_1350, _1351, _1352), vec3(_2217 * _2209, _2217 * _2210, _2217 * _2211)) + 1.0) * 0.5;
        float _5027 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
        float _2234 = sqrt(((_2210 * _2210) + (_2209 * _2209)) + (_2211 * _2211)) / (_2124 + 9.9999997473787516355514526367188e-06);
        float _5038 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
        float _2235 = isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0));
        float _2236 = _2235 * 2.0;
        float _2240 = (1.0 - _2235) / (_2235 + 1.0);
        float _5049 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
        float _2241 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
        float _2250 = ((((1.0 - _2241) * (_2236 + 2.0)) * exp2(log2(isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0))) * (_2236 + 1.0))) + _2241) * _2124;
        _2258 = _2091;
        _2259 = _2090;
        _2260 = _2089;
        _2261 = _2101;
        _2262 = _2100;
        _2263 = _2099;
        _2264 = _2111;
        _2265 = _2110;
        _2266 = _2109;
        _2267 = _2124;
        _2268 = _2123;
        _2269 = _2122;
        _2270 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0)));
        _2271 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0)));
        _2272 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0)));
    }
    else
    {
        _2258 = _1950;
        _2259 = _1950;
        _2260 = _1950;
        _2261 = _1950;
        _2262 = _1950;
        _2263 = _1950;
        _2264 = _1950;
        _2265 = _1950;
        _2266 = _1950;
        _2267 = _1950;
        _2268 = _1950;
        _2269 = _1950;
        _2270 = 0.0;
        _2271 = 0.0;
        _2272 = 0.0;
    }
    float _2282 = (cbModelParam._m0[1u].x * (_2270 - _1962)) + _1962;
    float _2283 = (cbModelParam._m0[1u].x * (_2271 - _1963)) + _1963;
    float _2284 = (cbModelParam._m0[1u].x * (_2272 - _1964)) + _1964;
    float _2305 = fma(_2284, cbSceneParam._m0[89u].z, fma(_2283, cbSceneParam._m0[89u].y, _2282 * cbSceneParam._m0[89u].x));
    float _2308 = fma(_2284, cbSceneParam._m0[90u].z, fma(_2283, cbSceneParam._m0[90u].y, _2282 * cbSceneParam._m0[90u].x));
    float _2311 = fma(_2284, cbSceneParam._m0[91u].z, fma(_2283, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2282));
    float _2324 = _1566 * 0.5;
    float _2325 = _1567 * 0.5;
    float _2326 = _1568 * 0.5;
    float _2327 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_2260, _2263, _2266, _2269));
    float _2330 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_2259, _2262, _2265, _2268));
    float _2333 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_2258, _2261, _2264, _2267));
    float _2367;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2340 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_1949, _1953, _1956, _1959));
        float _2344 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_1951, _1954, _1957, _1960));
        float _2348 = dot(vec4(_2324, _2325, _2326, 1.0), vec4(_1952, _1955, _1958, _1961));
        float _2355 = dot(vec4(cbModelParam._m0[39u]), vec4(_2324, _2325, _2326, 1.0));
        _2367 = dot(vec3(isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0)), isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0)), isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2355) ? 0.0 : (isnan(0.0) ? _2355 : max(0.0, _2355))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2367 = 1.0;
    }
    float _2378;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2369 = dot(vec4(cbModelParam._m0[40u]), vec4(_2324, _2325, _2326, 1.0));
        _2378 = dot(vec3(isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0)), isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0)), isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2369) ? 0.0 : (isnan(0.0) ? _2369 : max(0.0, _2369))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2378 = 1.0;
    }
    float _2382 = (_2378 * cbModelParam._m0[1u].x) + (_2367 * (1.0 - cbModelParam._m0[1u].x));
    float _2392 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1354);
    float _2393 = isnan(_2392) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2392 : min(cbModelParam._m0[25u].z, _2392));
    float _2473;
    float _2475;
    float _2477;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2440 = fma(_1625, cbModelParam._m0[13u].z, fma(_1621, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1617)) + cbModelParam._m0[13u].w;
        float _2444 = fma(_1625, cbModelParam._m0[14u].z, fma(_1621, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1617)) + cbModelParam._m0[14u].w;
        float _2448 = fma(_1625, cbModelParam._m0[15u].z, fma(_1621, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1617)) + cbModelParam._m0[15u].w;
        float _2451 = fma(_1568, cbModelParam._m0[13u].z, fma(_1567, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1566));
        float _2454 = fma(_1568, cbModelParam._m0[14u].z, fma(_1567, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1566));
        float _2457 = fma(_1568, cbModelParam._m0[15u].z, fma(_1567, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1566));
        float _2485;
        if (_2451 > 0.0)
        {
            _2485 = abs((1.0 - _2440) / _2451);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2451 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2440 + 1.0) / _2451);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2485 = frontier_phi_19_17_ladder;
        }
        float _2897;
        if (_2454 > 0.0)
        {
            _2897 = abs((1.0 - _2444) / _2454);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2454 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2444 + 1.0) / _2454);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2897 = frontier_phi_28_24_ladder;
        }
        float _3349;
        if (_2457 > 0.0)
        {
            _3349 = abs((1.0 - _2448) / _2457);
        }
        else
        {
            float frontier_phi_42_35_ladder;
            if (_2457 < 0.0)
            {
                frontier_phi_42_35_ladder = abs((_2448 + 1.0) / _2457);
            }
            else
            {
                frontier_phi_42_35_ladder = 5000.0;
            }
            _3349 = frontier_phi_42_35_ladder;
        }
        float _3351 = isnan(_2897) ? _2485 : (isnan(_2485) ? _2897 : min(_2485, _2897));
        float _3352 = isnan(_3349) ? _3351 : (isnan(_3351) ? _3349 : min(_3351, _3349));
        float _3356 = (_3352 * _2451) + _2440;
        float _3357 = (_3352 * _2454) + _2444;
        float _3358 = (_3352 * _2457) + _2448;
        float _3359 = _3352 * 9.9999997473787516355514526367188e-05;
        float _3361 = (-1.0) - _3359;
        float _3363 = _3359 + 1.0;
        float frontier_phi_18_42_ladder;
        float frontier_phi_18_42_ladder_1;
        float frontier_phi_18_42_ladder_2;
        if ((_3358 > _3363) || ((_3358 < _3361) || ((_3357 > _3363) || ((_3357 < _3361) || ((_3356 < _3361) || (_3356 > _3363))))))
        {
            frontier_phi_18_42_ladder = 0.0;
            frontier_phi_18_42_ladder_1 = 0.0;
            frontier_phi_18_42_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3575 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_3358, cbModelParam._m0[9u].z, fma(_3357, cbModelParam._m0[9u].y, _3356 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_3358, cbModelParam._m0[10u].z, fma(_3357, cbModelParam._m0[10u].y, _3356 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_3358, cbModelParam._m0[11u].z, fma(_3357, cbModelParam._m0[11u].y, _3356 * cbModelParam._m0[11u].x))), _2393);
            frontier_phi_18_42_ladder = _3575.z * cbModelParam._m0[1u].y;
            frontier_phi_18_42_ladder_1 = _3575.y * cbModelParam._m0[1u].y;
            frontier_phi_18_42_ladder_2 = _3575.x * cbModelParam._m0[1u].y;
        }
        _2473 = frontier_phi_18_42_ladder_2;
        _2475 = frontier_phi_18_42_ladder_1;
        _2477 = frontier_phi_18_42_ladder;
    }
    else
    {
        vec4 _2461 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1566, _1567, _1568), _2393);
        _2473 = _2461.x * cbModelParam._m0[1u].y;
        _2475 = _2461.y * cbModelParam._m0[1u].y;
        _2477 = _2461.z * cbModelParam._m0[1u].y;
    }
    float _2481 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1354);
    float _2482 = isnan(_2481) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2481 : min(cbModelParam._m0[25u].w, _2481));
    float _2571;
    float _2573;
    float _2575;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2535 = fma(_1625, cbModelParam._m0[21u].z, fma(_1621, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1617)) + cbModelParam._m0[21u].w;
        float _2539 = fma(_1625, cbModelParam._m0[22u].z, fma(_1621, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1617)) + cbModelParam._m0[22u].w;
        float _2543 = fma(_1625, cbModelParam._m0[23u].z, fma(_1621, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1617)) + cbModelParam._m0[23u].w;
        float _2546 = fma(_1568, cbModelParam._m0[21u].z, fma(_1567, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1566));
        float _2549 = fma(_1568, cbModelParam._m0[22u].z, fma(_1567, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1566));
        float _2552 = fma(_1568, cbModelParam._m0[23u].z, fma(_1567, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1566));
        float _2902;
        if (_2546 > 0.0)
        {
            _2902 = abs((1.0 - _2535) / _2546);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2546 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2535 + 1.0) / _2546);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2902 = frontier_phi_30_26_ladder;
        }
        float _3376;
        if (_2549 > 0.0)
        {
            _3376 = abs((1.0 - _2539) / _2549);
        }
        else
        {
            float frontier_phi_44_37_ladder;
            if (_2549 < 0.0)
            {
                frontier_phi_44_37_ladder = abs((_2539 + 1.0) / _2549);
            }
            else
            {
                frontier_phi_44_37_ladder = 5000.0;
            }
            _3376 = frontier_phi_44_37_ladder;
        }
        float _3652;
        if (_2552 > 0.0)
        {
            _3652 = abs((1.0 - _2543) / _2552);
        }
        else
        {
            float frontier_phi_61_53_ladder;
            if (_2552 < 0.0)
            {
                frontier_phi_61_53_ladder = abs((_2543 + 1.0) / _2552);
            }
            else
            {
                frontier_phi_61_53_ladder = 5000.0;
            }
            _3652 = frontier_phi_61_53_ladder;
        }
        float _3654 = isnan(_3376) ? _2902 : (isnan(_2902) ? _3376 : min(_2902, _3376));
        float _3655 = isnan(_3652) ? _3654 : (isnan(_3654) ? _3652 : min(_3654, _3652));
        float _3659 = (_3655 * _2546) + _2535;
        float _3660 = (_3655 * _2549) + _2539;
        float _3661 = (_3655 * _2552) + _2543;
        float _3662 = _3655 * 9.9999997473787516355514526367188e-05;
        float _3663 = (-1.0) - _3662;
        float _3665 = _3662 + 1.0;
        float frontier_phi_27_61_ladder;
        float frontier_phi_27_61_ladder_1;
        float frontier_phi_27_61_ladder_2;
        if ((_3661 > _3665) || ((_3661 < _3663) || ((_3660 > _3665) || ((_3660 < _3663) || ((_3659 < _3663) || (_3659 > _3665))))))
        {
            frontier_phi_27_61_ladder = 0.0;
            frontier_phi_27_61_ladder_1 = 0.0;
            frontier_phi_27_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3937 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3661, cbModelParam._m0[17u].z, fma(_3660, cbModelParam._m0[17u].y, _3659 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3661, cbModelParam._m0[18u].z, fma(_3660, cbModelParam._m0[18u].y, _3659 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3661, cbModelParam._m0[19u].z, fma(_3660, cbModelParam._m0[19u].y, _3659 * cbModelParam._m0[19u].x))), _2482);
            frontier_phi_27_61_ladder = _3937.y * cbModelParam._m0[1u].z;
            frontier_phi_27_61_ladder_1 = _3937.z * cbModelParam._m0[1u].z;
            frontier_phi_27_61_ladder_2 = _3937.x * cbModelParam._m0[1u].z;
        }
        _2571 = frontier_phi_27_61_ladder_2;
        _2573 = frontier_phi_27_61_ladder;
        _2575 = frontier_phi_27_61_ladder_1;
    }
    else
    {
        vec4 _2555 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1566, _1567, _1568), _2482);
        _2571 = _2555.x * cbModelParam._m0[1u].z;
        _2573 = _2555.y * cbModelParam._m0[1u].z;
        _2575 = _2555.z * cbModelParam._m0[1u].z;
    }
    float _2587 = ((((1.0 - _1586) * ((_1574 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1586 * _1574)) * _1545;
    float _2588 = _2587 * ((cbModelParam._m0[1u].w * (_2571 - _2473)) + _2473);
    float _2589 = _2587 * ((cbModelParam._m0[1u].w * (_2573 - _2475)) + _2475);
    float _2590 = _2587 * ((cbModelParam._m0[1u].w * (_2575 - _2477)) + _2477);
    float _2593 = fma(_2590, cbSceneParam._m0[89u].z, fma(_2589, cbSceneParam._m0[89u].y, _2588 * cbSceneParam._m0[89u].x));
    float _2596 = fma(_2590, cbSceneParam._m0[90u].z, fma(_2589, cbSceneParam._m0[90u].y, _2588 * cbSceneParam._m0[90u].x));
    float _2599 = fma(_2590, cbSceneParam._m0[91u].z, fma(_2589, cbSceneParam._m0[91u].y, _2588 * cbSceneParam._m0[91u].x));
    float _2618 = (cbSceneParam._m0[88u].y * (1.0 - _1354)) + cbSceneParam._m0[88u].z;
    float _5175 = isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0));
    vec4 _2622 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1446, _1447), (isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0))) * 5.0);
    float _2638 = 1.0 - _2622.w;
    vec4 _2646 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1446, _1447));
    float _2648 = _2646.w;
    float _2660 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2648);
    float _2661 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2648);
    float _2662 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2648);
    uint _2663 = _1521 + 5u;
    uvec4 _2666 = floatBitsToUint(cbInstanceData._m0[_2663]);
    uint _2668 = _2666.x * 14u;
    uint _2669 = _2668 + 13u;
    float _2674 = _1545 + (-1.0);
    float _2677 = (cbLight._m0[_2669].x * _2674) + 1.0;
    float _2678 = (cbLight._m0[_2669].y * _2674) + 1.0;
    uint _2679 = _2668 + 5u;
    float _2685 = isnan(1.0) ? _2678 : (isnan(_2678) ? 1.0 : min(_2678, 1.0));
    uint _2689 = _2668 + 4u;
    float _2698 = isnan(1.0) ? _2677 : (isnan(_2677) ? 1.0 : min(_2677, 1.0));
    uint _2702 = _2668 | 1u;
    float _2713 = dot(vec3(cbLight._m0[_2668].xyz), vec3(_1482, _1483, _1484));
    float _2716 = dot(vec3(cbLight._m0[_2702].xyz), vec3(_1482, _1483, _1484));
    float _5196 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
    float _5207 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
    float _2721 = (isnan(1.0) ? _5196 : (isnan(_5196) ? 1.0 : min(_5196, 1.0))) * 0.3183098733425140380859375;
    float _2723 = (isnan(1.0) ? _5207 : (isnan(_5207) ? 1.0 : min(_5207, 1.0))) * 0.3183098733425140380859375;
    float _2730 = ((cbLight._m0[_2679].x * _2685) * _2723) + (((cbLight._m0[_2689].x * _2660) * _2698) * _2721);
    float _2731 = ((_2685 * cbLight._m0[_2679].y) * _2723) + (((cbLight._m0[_2689].y * _2661) * _2698) * _2721);
    float _2732 = ((_2685 * cbLight._m0[_2679].z) * _2723) + (((cbLight._m0[_2689].z * _2662) * _2698) * _2721);
    uint _2734 = _2668 + 8u;
    float _2747 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2668].w)) * _1354) * 0.949999988079071044921875);
    float _2748 = _2747 * _2747;
    float _2749 = cbLight._m0[_2668].x + _1427;
    float _2750 = cbLight._m0[_2668].y + _1428;
    float _2751 = cbLight._m0[_2668].z + _1429;
    float _2755 = inversesqrt(dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751)));
    float _2756 = _2755 * _2749;
    float _2757 = _2755 * _2750;
    float _2758 = _2755 * _2751;
    float _2759 = dot(vec3(_1482, _1483, _1484), vec3(cbLight._m0[_2668].xyz));
    float _5218 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2762 = isnan(1.0) ? _5218 : (isnan(_5218) ? 1.0 : min(_5218, 1.0));
    float _2763 = dot(vec3(_1482, _1483, _1484), vec3(_1427, _1428, _1429));
    float _5229 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
    float _2766 = isnan(1.0) ? _5229 : (isnan(_5229) ? 1.0 : min(_5229, 1.0));
    float _2767 = dot(vec3(_1482, _1483, _1484), vec3(_2756, _2757, _2758));
    float _5240 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
    float _2770 = isnan(1.0) ? _5240 : (isnan(_5240) ? 1.0 : min(_5240, 1.0));
    float _2771 = dot(vec3(cbLight._m0[_2668].xyz), vec3(_2756, _2757, _2758));
    float _5251 = isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : max(_2771, 0.0));
    float _2775 = _2748 * _2748;
    float _2779 = ((_2770 * _2770) * (_2775 + (-1.0))) + 1.0;
    float _2790 = (exp2(log2(1.0 - (isnan(1.0) ? _5251 : (isnan(_5251) ? 1.0 : min(_5251, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2791 = 1.0 - _2748;
    float _2802 = (0.5 / (((_2766 * ((_2762 * _2791) + _2748)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _2791) + _2748) * _2762))) * _2762;
    float _5262 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
    float _2804 = (isnan(1.0) ? _5262 : (isnan(_5262) ? 1.0 : min(_5262, 1.0))) * (_2775 / ((_2779 * _2779) * 3.141590118408203125));
    uint _2818 = _2668 + 9u;
    float _2829 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2702].w)) * _1354) * 0.949999988079071044921875);
    float _2830 = _2829 * _2829;
    float _2831 = cbLight._m0[_2702].x + _1427;
    float _2832 = cbLight._m0[_2702].y + _1428;
    float _2833 = cbLight._m0[_2702].z + _1429;
    float _2837 = inversesqrt(dot(vec3(_2831, _2832, _2833), vec3(_2831, _2832, _2833)));
    float _2838 = _2837 * _2831;
    float _2839 = _2837 * _2832;
    float _2840 = _2837 * _2833;
    float _2841 = dot(vec3(_1482, _1483, _1484), vec3(cbLight._m0[_2702].xyz));
    float _5273 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
    float _2844 = isnan(1.0) ? _5273 : (isnan(_5273) ? 1.0 : min(_5273, 1.0));
    float _2845 = dot(vec3(_1482, _1483, _1484), vec3(_2838, _2839, _2840));
    float _5284 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
    float _2848 = isnan(1.0) ? _5284 : (isnan(_5284) ? 1.0 : min(_5284, 1.0));
    float _2849 = dot(vec3(cbLight._m0[_2702].xyz), vec3(_2838, _2839, _2840));
    float _5295 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2853 = _2830 * _2830;
    float _2857 = ((_2848 * _2848) * (_2853 + (-1.0))) + 1.0;
    float _2866 = (exp2(log2(1.0 - (isnan(1.0) ? _5295 : (isnan(_5295) ? 1.0 : min(_5295, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2867 = 1.0 - _2830;
    float _2877 = (0.5 / (((_2766 * ((_2844 * _2867) + _2830)) + 9.9999999392252902907785028219223e-09) + (((_2766 * _2867) + _2830) * _2844))) * _2844;
    float _5306 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
    float _2879 = (isnan(1.0) ? _5306 : (isnan(_5306) ? 1.0 : min(_5306, 1.0))) * (_2853 / ((_2857 * _2857) * 3.141590118408203125));
    float _2889 = (((_2866 * cbLight._m0[_2818].x) * _2879) * _2685) + ((((cbLight._m0[_2734].x * _2660) * _2790) * _2804) * _2698);
    float _2890 = (((_2866 * cbLight._m0[_2818].y) * _2879) * _2685) + ((((cbLight._m0[_2734].y * _2661) * _2790) * _2804) * _2698);
    float _2891 = (((_2866 * cbLight._m0[_2818].z) * _2879) * _2685) + ((((cbLight._m0[_2734].z * _2662) * _2790) * _2804) * _2698);
    float _3005;
    float _3007;
    float _3009;
    float _3011;
    float _3013;
    float _3015;
    if (_2666.y == 0u)
    {
        float _2946 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2947 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2946;
        float _2948 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2946;
        float _2949 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2946;
        uvec4 _2961 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2962 = _2961.x;
        uint _2973 = uint((float(_2961.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1447) / _2962))) + floor(float(uint(cbSceneParam._m0[85u].x * _1446) / _2962)));
        float _2983 = (log2(_2949 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2984 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
        uint _2987 = uint(isnan(14.0) ? _2984 : (isnan(_2984) ? 14.0 : min(_2984, 14.0)));
        uvec4 _2992 = texelFetch(g_lightClusterGridBuffer, int(((_2987 << 2u) + (_2973 << 6u)) >> 2u));
        uint _2993 = _2992.x;
        uint _2994 = _2961.z;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        if (((((1u << ((_2994 >> 4u) & 15u)) + 4294967295u) & _2993) == 0u) || ((_2994 & 240u) == 0u))
        {
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
            _3175 = 0.0;
            _3177 = 0.0;
        }
        else
        {
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3176;
            float _3178;
            float _3413 = 0.0;
            float _3414 = 0.0;
            float _3415 = 0.0;
            float _3416 = 0.0;
            float _3417 = 0.0;
            float _3418 = 0.0;
            uint _3419 = 0u;
            uint _3428;
            bool _3429;
            for (;;)
            {
                _3428 = texelFetch(g_lightClassification, int((((_2987 << 5u) + (_2973 << 9u)) + (_3419 << 2u)) >> 2u)).x;
                _3429 = _3428 == 0u;
                float frontier_phi_55_pred;
                float frontier_phi_55_pred_1;
                float frontier_phi_55_pred_2;
                float frontier_phi_55_pred_3;
                float frontier_phi_55_pred_4;
                float frontier_phi_55_pred_5;
                if (_3429)
                {
                    frontier_phi_55_pred = _3417;
                    frontier_phi_55_pred_1 = _3418;
                    frontier_phi_55_pred_2 = _3416;
                    frontier_phi_55_pred_3 = _3415;
                    frontier_phi_55_pred_4 = _3414;
                    frontier_phi_55_pred_5 = _3413;
                }
                else
                {
                    float _3695;
                    float _3696;
                    float _3697;
                    float _3698;
                    float _3699;
                    float _3700;
                    uint _3701;
                    _3695 = _3413;
                    _3696 = _3414;
                    _3697 = _3415;
                    _3698 = _3416;
                    _3699 = _3417;
                    _3700 = _3418;
                    _3701 = _3428;
                    float _3584;
                    float _3585;
                    float _3586;
                    float _3587;
                    float _3588;
                    float _3589;
                    for (;;)
                    {
                        uint _3705 = uint(findLSB(_3701)) + (_3419 << 5u);
                        uint _3702 = (_3701 + 4294967295u) & _3701;
                        uint _3707 = _3705 * 48u;
                        vec4 _3721 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3707)).x, texelFetch(g_PointLightRenderingBuffer, int(_3707 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3707 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3707 + 3u)).x));
                        uint _3727 = (_3705 * 48u) + 4u;
                        vec4 _3740 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3727)).x, texelFetch(g_PointLightRenderingBuffer, int(_3727 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3727 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3727 + 3u)).x));
                        uint _3746 = (_3705 * 48u) + 8u;
                        vec3 _3757 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3746)).x, texelFetch(g_PointLightRenderingBuffer, int(_3746 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3746 + 2u)).x));
                        float _3761 = _3721.x - _2947;
                        float _3762 = _3721.y - _2948;
                        float _3763 = _3721.z - _2949;
                        float _3764 = dot(vec3(_3761, _3762, _3763), vec3(_3761, _3762, _3763));
                        float _3767 = inversesqrt(_3764);
                        float _3768 = _3767 * _3761;
                        float _3769 = _3767 * _3762;
                        float _3770 = _3767 * _3763;
                        float _3771 = dot(vec3(_1502, _1505, _1508), vec3(_3768, _3769, _3770));
                        float _3776 = 1.0 - (_3764 * _3721.w);
                        float _5327 = isnan(0.0) ? _3776 : (isnan(_3776) ? 0.0 : max(_3776, 0.0));
                        float _3777 = isnan(1.0) ? _5327 : (isnan(_5327) ? 1.0 : min(_5327, 1.0));
                        float _3778 = sqrt(_3764) * _3740.w;
                        float _3781 = 1.39999997615814208984375 / (_3778 + 1.39999997615814208984375);
                        float _3782 = _3781 * _3781;
                        float _3785 = ((1.0 - _3782) * _3771) + _3782;
                        float _3788 = _3778 * _3778;
                        float _3792 = ((isnan(0.0) ? _3785 : (isnan(_3785) ? 0.0 : max(_3785, 0.0))) * _3777) / ((_3788 * 0.699999988079071044921875) + 1.0);
                        float _3796 = (-0.0) - _2947;
                        float _3797 = (-0.0) - _2948;
                        float _3798 = (-0.0) - _2949;
                        float _3802 = inversesqrt(dot(vec3(_3796, _3797, _3798), vec3(_3796, _3797, _3798)));
                        float _3803 = _3802 * _3796;
                        float _3804 = _3802 * _3797;
                        float _3805 = _3802 * _3798;
                        float _3813 = exp2(log2(1.0 / ((_3788 * 3.5) + 5.0)) * 0.25);
                        float _3814 = 1.0 - _1574;
                        float _3821 = sqrt(1.0 - ((1.0 - (_3814 * _3814)) * (1.0 - (_3813 * _3813))));
                        float _3822 = _3821 * _3821;
                        float _3823 = _3822 * _3822;
                        float _3824 = _3803 + _3768;
                        float _3825 = _3804 + _3769;
                        float _3826 = _3805 + _3770;
                        float _3830 = inversesqrt(dot(vec3(_3824, _3825, _3826), vec3(_3824, _3825, _3826)));
                        float _3834 = dot(vec3(_1502, _1505, _1508), vec3(_3803, _3804, _3805));
                        float _5343 = isnan(0.0) ? _3834 : (isnan(_3834) ? 0.0 : max(_3834, 0.0));
                        float _3837 = isnan(1.0) ? _5343 : (isnan(_5343) ? 1.0 : min(_5343, 1.0));
                        float _3838 = dot(vec3(_1502, _1505, _1508), vec3(_3830 * _3824, _3830 * _3825, _3830 * _3826));
                        float _5354 = isnan(0.0) ? _3838 : (isnan(_3838) ? 0.0 : max(_3838, 0.0));
                        float _3841 = isnan(1.0) ? _5354 : (isnan(_5354) ? 1.0 : min(_5354, 1.0));
                        float _3845 = ((_3841 * _3841) * (_3823 + (-1.0))) + 1.0;
                        float _3846 = _3781 * _3822;
                        float _3847 = _3846 * _3846;
                        float _3850 = ((1.0 - _3847) * _3771) + _3847;
                        float _5365 = isnan(0.0) ? _3850 : (isnan(_3850) ? 0.0 : max(_3850, 0.0));
                        float _3851 = isnan(1.0) ? _5365 : (isnan(_5365) ? 1.0 : min(_5365, 1.0));
                        float _3852 = 1.0 - _3822;
                        float _3862 = (0.5 / (((_3851 * ((_3837 * _3852) + _3822)) + 9.9999999392252902907785028219223e-09) + (((_3851 * _3852) + _3822) * _3837))) * _3851;
                        float _5376 = isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0));
                        float _3873 = (((_3823 * 3.1415927410125732421875) * (isnan(1.0) ? _5376 : (isnan(_5376) ? 1.0 : min(_5376, 1.0)))) / ((_3845 * _3845) * ((_3788 * 2.1991131305694580078125) + 3.141590118408203125))) * _3777;
                        _3587 = (_3792 * _3740.x) + _3698;
                        _3588 = (_3792 * _3740.y) + _3699;
                        _3589 = (_3792 * _3740.z) + _3700;
                        _3584 = (_3873 * _3757.x) + _3695;
                        _3585 = (_3873 * _3757.y) + _3696;
                        _3586 = (_3873 * _3757.z) + _3697;
                        if (_3702 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3695 = _3584;
                            _3696 = _3585;
                            _3697 = _3586;
                            _3698 = _3587;
                            _3699 = _3588;
                            _3700 = _3589;
                            _3701 = _3702;
                        }
                    }
                    frontier_phi_55_pred = _3588;
                    frontier_phi_55_pred_1 = _3589;
                    frontier_phi_55_pred_2 = _3587;
                    frontier_phi_55_pred_3 = _3586;
                    frontier_phi_55_pred_4 = _3585;
                    frontier_phi_55_pred_5 = _3584;
                }
                _3176 = frontier_phi_55_pred;
                _3178 = frontier_phi_55_pred_1;
                _3174 = frontier_phi_55_pred_2;
                _3172 = frontier_phi_55_pred_3;
                _3170 = frontier_phi_55_pred_4;
                _3168 = frontier_phi_55_pred_5;
                uint _3420 = _3419 + 1u;
                if (_3420 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3413 = _3168;
                    _3414 = _3170;
                    _3415 = _3172;
                    _3416 = _3174;
                    _3417 = _3176;
                    _3418 = _3178;
                    _3419 = _3420;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
            _3175 = _3176;
            _3177 = _3178;
        }
        uvec4 _3181 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3182 = _3181.z;
        uint _3184 = (_3182 >> 8u) & 15u;
        float _3381;
        float _3383;
        float _3385;
        float _3387;
        float _3389;
        float _3391;
        if (((4294967295u << _3184) & _2993) == 0u)
        {
            _3381 = _3167;
            _3383 = _3169;
            _3385 = _3171;
            _3387 = _3173;
            _3389 = _3175;
            _3391 = _3177;
        }
        else
        {
            float _3406 = inversesqrt(dot(vec3(_2947, _2948, _2949), vec3(_2947, _2948, _2949)));
            float _3407 = _3406 * _2947;
            float _3408 = _3406 * _2948;
            float _3409 = _3406 * _2949;
            float frontier_phi_46_47_ladder;
            float frontier_phi_46_47_ladder_1;
            float frontier_phi_46_47_ladder_2;
            float frontier_phi_46_47_ladder_3;
            float frontier_phi_46_47_ladder_4;
            float frontier_phi_46_47_ladder_5;
            if (_3184 < ((_3182 >> 12u) & 15u))
            {
                float _3382;
                float _3384;
                float _3386;
                float _3388;
                float _3390;
                float _3392;
                float _3678 = _3167;
                float _3679 = _3169;
                float _3680 = _3171;
                float _3681 = _3173;
                float _3682 = _3175;
                float _3683 = _3177;
                uint _3684 = _3184;
                uint _3693;
                bool _3694;
                for (;;)
                {
                    _3693 = texelFetch(g_lightClassification, int((((_2987 << 5u) + (_2973 << 9u)) + (_3684 << 2u)) >> 2u)).x;
                    _3694 = _3693 == 0u;
                    float frontier_phi_70_pred;
                    float frontier_phi_70_pred_1;
                    float frontier_phi_70_pred_2;
                    float frontier_phi_70_pred_3;
                    float frontier_phi_70_pred_4;
                    float frontier_phi_70_pred_5;
                    if (_3694)
                    {
                        frontier_phi_70_pred = _3678;
                        frontier_phi_70_pred_1 = _3683;
                        frontier_phi_70_pred_2 = _3682;
                        frontier_phi_70_pred_3 = _3681;
                        frontier_phi_70_pred_4 = _3680;
                        frontier_phi_70_pred_5 = _3679;
                    }
                    else
                    {
                        float _3942;
                        float _3943;
                        float _3944;
                        float _3945;
                        float _3946;
                        float _3947;
                        float _4244;
                        float _4245;
                        float _4246;
                        float _4247;
                        float _4248;
                        float _4249;
                        float _3964 = _3678;
                        float _3965 = _3679;
                        float _3966 = _3680;
                        float _3967 = _3681;
                        float _3968 = _3682;
                        float _3969 = _3683;
                        uint _3970 = _3693;
                        uint _3971;
                        vec4 _3996;
                        float _3997;
                        vec4 _4012;
                        vec3 _4024;
                        vec4 _4039;
                        vec4 _4054;
                        float _4100;
                        bool _4101;
                        for (;;)
                        {
                            uint _3981 = ((_3684 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3970));
                            _3971 = (_3970 + 4294967295u) & _3970;
                            uint _3983 = _3981 * 40u;
                            _3996 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3983)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3983 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3983 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3983 + 3u)).x));
                            _3997 = _3996.w;
                            uint _3999 = (_3981 * 40u) + 4u;
                            _4012 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3999)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 3u)).x));
                            uint _4014 = (_3981 * 40u) + 8u;
                            _4024 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_4014)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 2u)).x));
                            uint _4026 = (_3981 * 40u) + 16u;
                            _4039 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4026)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 3u)).x));
                            uint _4041 = (_3981 * 40u) + 20u;
                            _4054 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4041)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4041 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4041 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4041 + 3u)).x));
                            uint _4056 = (_3981 * 40u) + 24u;
                            vec4 _4069 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4056)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4056 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4056 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4056 + 3u)).x));
                            uint _4075 = (_3981 * 40u) + 28u;
                            vec4 _4088 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4075)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4075 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4075 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4075 + 3u)).x));
                            _4100 = fma(_2949, _4088.z, fma(_2948, _4088.y, _4088.x * _2947)) + _4088.w;
                            _4101 = !((fma(_2949, _4069.z, fma(_2948, _4069.y, _4069.x * _2947)) + _4069.w) <= 0.0);
                            float frontier_phi_79_pred;
                            float frontier_phi_79_pred_1;
                            float frontier_phi_79_pred_2;
                            float frontier_phi_79_pred_3;
                            float frontier_phi_79_pred_4;
                            float frontier_phi_79_pred_5;
                            if (_4101)
                            {
                                float _4128 = _3996.x - _2947;
                                float _4129 = _3996.y - _2948;
                                float _4130 = _3996.z - _2949;
                                float _4131 = dot(vec3(_4128, _4129, _4130), vec3(_4128, _4129, _4130));
                                float _4134 = inversesqrt(_4131);
                                float _4135 = _4134 * _4128;
                                float _4136 = _4134 * _4129;
                                float _4137 = _4134 * _4130;
                                float _4141 = 1.0 - (_4131 / (_3997 * _3997));
                                float _5387 = isnan(0.0) ? _4141 : (isnan(_4141) ? 0.0 : max(_4141, 0.0));
                                float _4142 = isnan(1.0) ? _5387 : (isnan(_5387) ? 1.0 : min(_5387, 1.0));
                                float _4146 = sqrt(_4131) * _4012.w;
                                float _4148 = 1.39999997615814208984375 / (_4146 + 1.39999997615814208984375);
                                float _4149 = _4148 * _4148;
                                float _4152 = ((1.0 - _4149) * dot(vec3(_4135, _4136, _4137), vec3(_1502, _1505, _1508))) + _4149;
                                float _4155 = _4146 * _4146;
                                float _4159 = (fma(_2949, _4039.z, fma(_2948, _4039.y, _4039.x * _2947)) + _4039.w) / _4100;
                                float _4160 = (fma(_2949, _4054.z, fma(_2948, _4054.y, _4054.x * _2947)) + _4054.w) / _4100;
                                float _4164 = 1.0 - dot(vec2(_4159, _4160), vec2(_4159, _4160));
                                float _5403 = isnan(0.0) ? _4164 : (isnan(_4164) ? 0.0 : max(_4164, 0.0));
                                float _4165 = isnan(1.0) ? _5403 : (isnan(_5403) ? 1.0 : min(_5403, 1.0));
                                float _4166 = _4165 * (((isnan(0.0) ? _4152 : (isnan(_4152) ? 0.0 : max(_4152, 0.0))) * _4142) / ((_4155 * 0.699999988079071044921875) + 1.0));
                                float _4178 = exp2(log2(1.0 / ((_4155 * 3.5) + 5.0)) * 0.25);
                                float _4179 = 1.0 - _1574;
                                float _4186 = sqrt(1.0 - ((1.0 - (_4179 * _4179)) * (1.0 - (_4178 * _4178))));
                                float _4187 = _4186 * _4186;
                                float _4188 = _4187 * _4187;
                                float _4189 = _4135 - _3407;
                                float _4190 = _4136 - _3408;
                                float _4191 = _4137 - _3409;
                                float _4195 = inversesqrt(dot(vec3(_4189, _4190, _4191), vec3(_4189, _4190, _4191)));
                                float _4199 = dot(vec3(_1502, _1505, _1508), vec3((-0.0) - _3407, (-0.0) - _3408, (-0.0) - _3409));
                                float _5414 = isnan(0.0) ? _4199 : (isnan(_4199) ? 0.0 : max(_4199, 0.0));
                                float _4202 = isnan(1.0) ? _5414 : (isnan(_5414) ? 1.0 : min(_5414, 1.0));
                                float _4203 = dot(vec3(_1502, _1505, _1508), vec3(_4195 * _4189, _4195 * _4190, _4195 * _4191));
                                float _5425 = isnan(0.0) ? _4203 : (isnan(_4203) ? 0.0 : max(_4203, 0.0));
                                float _4206 = isnan(1.0) ? _5425 : (isnan(_5425) ? 1.0 : min(_5425, 1.0));
                                float _4210 = ((_4206 * _4206) * (_4188 + (-1.0))) + 1.0;
                                float _4211 = _4148 * _4187;
                                float _4212 = _4211 * _4211;
                                float _4218 = ((1.0 - _4212) * dot(vec3(_1502, _1505, _1508), vec3(_4135, _4136, _4137))) + _4212;
                                float _5436 = isnan(0.0) ? _4218 : (isnan(_4218) ? 0.0 : max(_4218, 0.0));
                                float _4219 = isnan(1.0) ? _5436 : (isnan(_5436) ? 1.0 : min(_5436, 1.0));
                                float _4220 = 1.0 - _4187;
                                float _4230 = (0.5 / (((_4219 * ((_4202 * _4220) + _4187)) + 9.9999999392252902907785028219223e-09) + (((_4219 * _4220) + _4187) * _4202))) * _4219;
                                float _5447 = isnan(0.0) ? _4230 : (isnan(_4230) ? 0.0 : max(_4230, 0.0));
                                float _4240 = (_4165 * _4142) * (((_4188 * 3.1415927410125732421875) * (isnan(1.0) ? _5447 : (isnan(_5447) ? 1.0 : min(_5447, 1.0)))) / ((_4210 * _4210) * ((_4155 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_79_pred = _4240 * _4024.z;
                                frontier_phi_79_pred_1 = _4166 * _4012.z;
                                frontier_phi_79_pred_2 = _4166 * _4012.y;
                                frontier_phi_79_pred_3 = _4166 * _4012.x;
                                frontier_phi_79_pred_4 = _4240 * _4024.y;
                                frontier_phi_79_pred_5 = _4240 * _4024.x;
                            }
                            else
                            {
                                frontier_phi_79_pred = 0.0;
                                frontier_phi_79_pred_1 = 0.0;
                                frontier_phi_79_pred_2 = 0.0;
                                frontier_phi_79_pred_3 = 0.0;
                                frontier_phi_79_pred_4 = 0.0;
                                frontier_phi_79_pred_5 = 0.0;
                            }
                            _4246 = frontier_phi_79_pred;
                            _4249 = frontier_phi_79_pred_1;
                            _4248 = frontier_phi_79_pred_2;
                            _4247 = frontier_phi_79_pred_3;
                            _4245 = frontier_phi_79_pred_4;
                            _4244 = frontier_phi_79_pred_5;
                            _3945 = _4247 + _3967;
                            _3946 = _4248 + _3968;
                            _3947 = _4249 + _3969;
                            _3942 = _4244 + _3964;
                            _3943 = _4245 + _3965;
                            _3944 = _4246 + _3966;
                            if (_3971 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3964 = _3942;
                                _3965 = _3943;
                                _3966 = _3944;
                                _3967 = _3945;
                                _3968 = _3946;
                                _3969 = _3947;
                                _3970 = _3971;
                                continue;
                            }
                        }
                        frontier_phi_70_pred = _3942;
                        frontier_phi_70_pred_1 = _3947;
                        frontier_phi_70_pred_2 = _3946;
                        frontier_phi_70_pred_3 = _3945;
                        frontier_phi_70_pred_4 = _3944;
                        frontier_phi_70_pred_5 = _3943;
                    }
                    _3382 = frontier_phi_70_pred;
                    _3392 = frontier_phi_70_pred_1;
                    _3390 = frontier_phi_70_pred_2;
                    _3388 = frontier_phi_70_pred_3;
                    _3386 = frontier_phi_70_pred_4;
                    _3384 = frontier_phi_70_pred_5;
                    uint _3685 = _3684 + 1u;
                    if (_3685 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3678 = _3382;
                        _3679 = _3384;
                        _3680 = _3386;
                        _3681 = _3388;
                        _3682 = _3390;
                        _3683 = _3392;
                        _3684 = _3685;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_46_47_ladder = _3386;
                frontier_phi_46_47_ladder_1 = _3388;
                frontier_phi_46_47_ladder_2 = _3390;
                frontier_phi_46_47_ladder_3 = _3392;
                frontier_phi_46_47_ladder_4 = _3384;
                frontier_phi_46_47_ladder_5 = _3382;
            }
            else
            {
                frontier_phi_46_47_ladder = _3171;
                frontier_phi_46_47_ladder_1 = _3173;
                frontier_phi_46_47_ladder_2 = _3175;
                frontier_phi_46_47_ladder_3 = _3177;
                frontier_phi_46_47_ladder_4 = _3169;
                frontier_phi_46_47_ladder_5 = _3167;
            }
            _3381 = frontier_phi_46_47_ladder_5;
            _3383 = frontier_phi_46_47_ladder_4;
            _3385 = frontier_phi_46_47_ladder;
            _3387 = frontier_phi_46_47_ladder_1;
            _3389 = frontier_phi_46_47_ladder_2;
            _3391 = frontier_phi_46_47_ladder_3;
        }
        float _3396 = isnan(1.0) ? _1545 : (isnan(_1545) ? 1.0 : min(_1545, 1.0));
        _3005 = (_3396 * _3387) + _2730;
        _3007 = (_3396 * _3389) + _2731;
        _3009 = (_3396 * _3391) + _2732;
        _3011 = ((_3381 * 0.039999999105930328369140625) * _3396) + _2889;
        _3013 = ((_3383 * 0.039999999105930328369140625) * _3396) + _2890;
        _3015 = ((_3385 * 0.039999999105930328369140625) * _3396) + _2891;
    }
    else
    {
        _3005 = _2730;
        _3007 = _2731;
        _3009 = _2732;
        _3011 = _2889;
        _3013 = _2890;
        _3015 = _2891;
    }
    uint _3021 = _1522 + uint(cbMatDynParam._m0[0u].w);
    float _3048 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3049 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3050 = cbSceneParam._m0[86u].x * ((_1446 / cbSceneParam._m0[86u].x) + (((10.0 / (_1371 + 10.0)) * cbMtdParam._m0[19u].y) * dot(vec3(_1482, _1483, _1484), vec3(_234, _235, _236))));
    float _3051 = isnan(_3048) ? _3050 : (isnan(_3050) ? _3048 : min(_3050, _3048));
    float _3052 = isnan(_3049) ? _1447 : (isnan(_1447) ? _3049 : min(_1447, _3049));
    vec4 _3054 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3051, _3052), 0.0);
    float _3056 = _3054.x;
    bool _3076 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3056)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3056))) > _1371;
    float _3077 = _3076 ? _3051 : _1446;
    float _3078 = _3076 ? _3052 : _1447;
    vec4 _3080 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3077, _3078));
    vec4 _3086 = texture(sampler2D(g_ScreenSpaceShadowTexture, SS_WrapLinear), vec2(_3077, _3078));
    float _3088 = _3086.w;
    vec4 _3101 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3077, _3078));
    float _3103 = _3101.x;
    bool _3108 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3117 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3123 = (_3108 ? (_3117 / (cbSceneParam._m0[2u].x - _3103)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3103))) - _1371;
    float _3125 = cbMtdParam._m0[40u].x + cbMtdParam._m0[38u].z;
    float _3126 = cbMtdParam._m0[40u].y + cbMtdParam._m0[38u].w;
    float _3127 = cbMtdParam._m0[40u].z + cbMtdParam._m0[39u].x;
    bool _3133 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3137 = (isnan(_3123) ? 0.0 : (isnan(0.0) ? _3123 : max(0.0, _3123))) * (-1.44269502162933349609375);
    float _5478 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
    float _5489 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
    float _5500 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
    float _3270;
    float _3271;
    float _3272;
    if ((1.0 - _1153) > 0.00999999977648258209228515625)
    {
        vec4 _3189 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3077, _3078), 0.0);
        float _3191 = _3189.x;
        float _3197 = (_3108 ? (_3117 / (cbSceneParam._m0[2u].x - _3191)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3191))) - _1371;
        uint _3203 = floatBitsToUint(cbInstanceData._m0[_2663]).x * 14u;
        uint _3209 = _3203 + 4u;
        float _3218 = dot(vec3(cbLight._m0[_3203].xyz), vec3(_255, _256, _257));
        float _3226 = dot(vec3((-0.0) - _1427, (-0.0) - _1428, (-0.0) - _1429), vec3((-0.0) - _255, (-0.0) - _256, (-0.0) - _257));
        float _3231 = ((isnan(0.0) ? _3226 : (isnan(_3226) ? 0.0 : max(_3226, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3218 : (isnan(_3218) ? 0.001000000047497451305389404296875 : max(_3218, 0.001000000047497451305389404296875)))) + 1.0;
        float _3233 = (-0.0) - ((isnan(_3197) ? 0.0 : (isnan(0.0) ? _3197 : max(0.0, _3197))) * _3231);
        _3270 = _3133 ? 0.0 : ((((cbMtdParam._m0[38u].z * 0.079577468335628509521484375) * cbLight._m0[_3209].x) / ((_3231 * _3125) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3125 * 1.44269502162933349609375) * _3233)));
        _3271 = _3133 ? 0.0 : ((((cbMtdParam._m0[38u].w * 0.079577468335628509521484375) * cbLight._m0[_3209].y) / ((_3231 * _3126) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3126 * 1.44269502162933349609375) * _3233)));
        _3272 = _3133 ? 0.0 : ((((cbMtdParam._m0[39u].x * 0.079577468335628509521484375) * cbLight._m0[_3209].z) / ((_3231 * _3127) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3127 * 1.44269502162933349609375) * _3233)));
    }
    else
    {
        _3270 = 0.0;
        _3271 = 0.0;
        _3272 = 0.0;
    }
    float _3289 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _3290 = (_3270 + ((exp2(_3137 * (_3133 ? 0.0 : _3125)) * (((_3088 * (((cbMtdParam._m0[29u].y - _1278) * _624) + _1278)) * cbSceneParam._m0[72u].z) + _3080.x)) * cbSceneParam._m0[72u].w)) * _3289;
    float _3291 = (_3271 + ((exp2(_3137 * (_3133 ? 0.0 : _3126)) * (((_3088 * (((cbMtdParam._m0[29u].y - _1279) * _624) + _1279)) * cbSceneParam._m0[72u].z) + _3080.y)) * cbSceneParam._m0[72u].w)) * _3289;
    float _3292 = (_3272 + ((exp2(_3137 * (_3133 ? 0.0 : _3127)) * (((_3088 * (((cbMtdParam._m0[29u].y - _1280) * _624) + _1280)) * cbSceneParam._m0[72u].z) + _3080.z)) * cbSceneParam._m0[72u].w)) * _3289;
    float _3301 = (((cbInstanceData._m0[_3021].x * (((((_964 * cbMtdParam._m0[11u].x) - _928) + (((((cbMtdParam._m0[13u].x - cbMtdParam._m0[12u].x) * _964) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].x) * _987.x)) * _936) + _928)) + (((((_2587 * _2622.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0))) * _2382) * _2638)) + _3011) * cbPerFrame._m0[3u].x)) + _3290) + ((((isnan(1.0) ? _5478 : (isnan(_5478) ? 1.0 : min(_5478, 1.0))) * (_3005 + ((isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0))) * _1545))) - _3290) * _1153);
    float _3304 = (((cbInstanceData._m0[_3021].y * (((((_965 * cbMtdParam._m0[11u].y) - _929) + (((((cbMtdParam._m0[13u].y - cbMtdParam._m0[12u].y) * _965) * cbMtdParam._m0[29u].x) + cbMtdParam._m0[12u].y) * _987.y)) * _936) + _929)) + (((((_2587 * _2622.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0))) * _2382) * _2638)) + _3013) * cbPerFrame._m0[3u].x)) + _3291) + ((((isnan(1.0) ? _5489 : (isnan(_5489) ? 1.0 : min(_5489, 1.0))) * (_3007 + ((isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0))) * _1545))) - _3291) * _1153);
    float _3307 = (((cbInstanceData._m0[_3021].z * (((((_966 * cbMtdParam._m0[11u].z) - _930) + ((((cbMtdParam._m0[29u].x * _966) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[12u].z)) + cbMtdParam._m0[12u].z) * _987.z)) * _936) + _930)) + (((((_2587 * _2622.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0))) * _2382) * _2638)) + _3015) * cbPerFrame._m0[3u].x)) + _3292) + ((((isnan(1.0) ? _5500 : (isnan(_5500) ? 1.0 : min(_5500, 1.0))) * (_3009 + ((isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0))) * _1545))) - _3292) * _1153);
    float _3308 = isnan(0.0) ? _3301 : (isnan(_3301) ? 0.0 : max(_3301, 0.0));
    float _3309 = isnan(0.0) ? _3304 : (isnan(_3304) ? 0.0 : max(_3304, 0.0));
    float _3310 = isnan(0.0) ? _3307 : (isnan(_3307) ? 0.0 : max(_3307, 0.0));
    float _3315 = cbInstanceData._m0[_1521 + 6u].w * (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0)));
    float _3320 = _1446 / cbSceneParam._m0[86u].x;
    float _3321 = _1447 / cbSceneParam._m0[86u].y;
    vec4 _3335 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3320, _3321, (log2((isnan(cbSceneParam._m0[77u].w) ? _1371 : (isnan(_1371) ? cbSceneParam._m0[77u].w : min(_1371, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3337 = _3335.x;
    float _3338 = _3335.y;
    float _3339 = _3335.z;
    float _3340 = _3335.w;
    float _3469;
    float _3471;
    float _3473;
    float _3475;
    if (_1371 > cbSceneParam._m0[78u].w)
    {
        float _3434 = isnan(_1371) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1371 : min(cbSceneParam._m0[80u].w, _1371));
        float _3435 = _3434 / _1371;
        float _3446 = _3435 * _1420;
        float _3447 = _1421 * _3435;
        float _3448 = (-0.0) - _3447;
        float _3449 = _3435 * _1422;
        float _3451 = (cbSceneParam._m0[77u].w * _3448) / _3434;
        float _3452 = _3451 + cbSceneParam._m0[79u].w;
        float _3453 = cbSceneParam._m0[79u].w - _3447;
        float _3459 = sqrt(((_3446 * _3446) + (_3447 * _3447)) + (_3449 * _3449));
        float _3462 = (1.0 - (cbSceneParam._m0[77u].w / _3434)) * _3459;
        float _3467 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3468 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3878;
        if (abs((_3448 - _3451) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3878 = ((((_3452 > 0.0) ? exp2(_3467 * _3452) : (2.0 - exp2(_3468 * _3452))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3462;
        }
        else
        {
            float _3609 = 1.0 / cbSceneParam._m0[80u].x;
            float _3610 = isnan(_3453) ? _3452 : (isnan(_3452) ? _3453 : max(_3452, _3453));
            float _3611 = isnan(_3453) ? _3452 : (isnan(_3452) ? _3453 : min(_3452, _3453));
            float _3620 = isnan(0.0) ? _3610 : (isnan(_3610) ? 0.0 : min(_3610, 0.0));
            float _3621 = isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : min(_3611, 0.0));
            _3878 = ((abs(_3459 / _3448) * cbSceneParam._m0[80u].y) * ((((_3620 - _3621) * 2.0) - ((exp2(_3467 * (isnan(0.0) ? _3610 : (isnan(_3610) ? 0.0 : max(_3610, 0.0)))) - exp2(_3467 * (isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0))))) * _3609)) - ((exp2(_3468 * _3620) - exp2(_3468 * _3621)) * _3609))) + (_3462 * cbSceneParam._m0[80u].z);
        }
        vec4 _3880 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3320, _3321, 1.0), 0.0);
        float _3889 = exp2((_3878 * (-1.44269502162933349609375)) * (1.0 - _3880.w));
        float _3890 = log2(_3889);
        float _3906 = log2(_3340);
        _3469 = (exp2(_3906 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3890 * cbSceneParam._m0[78u].x)) * _3880.x) / cbSceneParam._m0[78u].x)) + _3337;
        _3471 = (exp2(_3906 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3890 * cbSceneParam._m0[78u].y)) * _3880.y) / cbSceneParam._m0[78u].y)) + _3338;
        _3473 = (exp2(_3906 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3890 * cbSceneParam._m0[78u].z)) * _3880.z) / cbSceneParam._m0[78u].z)) + _3339;
        _3475 = _3889 * _3340;
    }
    else
    {
        _3469 = _3337;
        _3471 = _3338;
        _3473 = _3339;
        _3475 = _3340;
    }
    bool _3916;
    float _3530;
    vec4 _3533;
    float _3535;
    vec4 _3537;
    float _3545;
    float _3546;
    float _3547;
    float _3548;
    bool _3558;
    for (;;)
    {
        bool _3487 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _3488 = log2(_3475);
        float _3495 = exp2(_3488 * cbSceneParam._m0[78u].x) * _3308;
        float _3496 = exp2(_3488 * cbSceneParam._m0[78u].y) * _3309;
        float _3497 = exp2(_3488 * cbSceneParam._m0[78u].z) * _3310;
        vec4 _3505 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1446, _1447));
        float _3507 = _3505.x;
        float _3528 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3507)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3507))) - _1371) * cbMtdParam._m0[23u].y;
        float _5581 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
        _3530 = _3315 * (isnan(1.0) ? _5581 : (isnan(_5581) ? 1.0 : min(_5581, 1.0)));
        float _3531 = _1436 + (-0.5);
        _3533 = cbMtdParam._m0[1u];
        _3535 = _3533.y * _3531;
        _3537 = cbMatDynParam._m0[0u];
        float _3544 = (roundEven(_3537.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3545 = _3544 * (_3487 ? _3495 : (_3495 + (cbSceneParam._m0[72u].w * _3469)));
        _3546 = _3544 * (_3487 ? _3496 : (_3496 + (cbSceneParam._m0[72u].w * _3471)));
        _3547 = _3544 * (_3487 ? _3497 : (_3497 + (cbSceneParam._m0[72u].w * _3473)));
        _3548 = _3531 * 0.999000012874603271484375;
        _3558 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3558)
        {
            if ((cbInstanceData._m0[_1521 + 7u].x + _3548) < 0.5)
            {
                _3916 = true;
                break;
            }
        }
        uint _3644 = _1522 + uint(_3537.w);
        if ((cbInstanceData._m0[_3644].w < 1.0) && ((cbInstanceData._m0[_3644].w + _3548) < 0.5))
        {
            _3916 = true;
            break;
        }
        if ((_3535 + 1.0) < _3533.x)
        {
            _3916 = true;
            break;
        }
        _3916 = false;
        break;
    }
    float _3955;
    if (_3916)
    {
        discard_state = true;
        _3955 = 0.0;
    }
    else
    {
        _3955 = _3530;
    }
    SV_Target.x = _3545;
    SV_Target.y = _3546;
    SV_Target.z = _3547;
    SV_Target.w = _3955;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3530;
    discard_exit();
}


