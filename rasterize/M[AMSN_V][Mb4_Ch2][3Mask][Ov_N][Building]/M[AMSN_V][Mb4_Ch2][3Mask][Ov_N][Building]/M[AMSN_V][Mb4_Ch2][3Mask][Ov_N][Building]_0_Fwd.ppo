#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in float TEXCOORD_5;
layout(location = 6, component = 1) in float TEXCOORD_6;
layout(location = 7) in vec4 TEXCOORD_7;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1796;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _236 = _235 * _227;
    float _237 = _235 * _228;
    float _238 = _235 * _229;
    float _248 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _249 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _250 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _254 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _255 = _254 * _248;
    float _256 = _254 * _249;
    float _257 = _254 * _250;
    float _261 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = _261 * NORMAL.x;
    float _263 = _261 * NORMAL.y;
    float _264 = _261 * NORMAL.z;
    float _268 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _269 = _268 * TANGENT.x;
    float _270 = _268 * TANGENT.y;
    float _271 = _268 * TANGENT.z;
    float _275 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _276 = _275 * TANGENT_2.x;
    float _277 = _275 * TANGENT_2.y;
    float _278 = _275 * TANGENT_2.z;
    float _283;
    float _284;
    float _285;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _283 = (-0.0) - _262;
        _284 = (-0.0) - _263;
        _285 = (-0.0) - _264;
    }
    else
    {
        _283 = _262;
        _284 = _263;
        _285 = _264;
    }
    vec4 _305 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _317 = 1.0 - ((1.0 - _305.z) * 1.39999997615814208984375);
    float _4123 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _318 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    float _320 = 1.0 - ((1.0 - _305.x) * 1.39999997615814208984375);
    float _4134 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _321 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _323 = 1.0 - ((1.0 - _305.y) * 1.39999997615814208984375);
    float _4145 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _324 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _326 = (_321 + _318) + _324;
    float _333 = (_326 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _334 = (_326 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _335 = (_326 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _360 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _369 = 1.0 - ((1.0 - _360.x) * 1.39999997615814208984375);
    float _4156 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _370 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
    float _380 = (_370 * ((cbMtdParam._m0[9u].x - _333) + ((1.0 - cbMtdParam._m0[9u].x) * _326))) + _333;
    float _381 = (_370 * ((cbMtdParam._m0[9u].y - _334) + ((1.0 - cbMtdParam._m0[9u].y) * _326))) + _334;
    float _382 = (_370 * ((cbMtdParam._m0[9u].z - _335) + ((1.0 - cbMtdParam._m0[9u].z) * _326))) + _335;
    float _395 = 1.0 - ((1.0 - _360.y) * 1.39999997615814208984375);
    float _4167 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
    float _406 = (((cbMtdParam._m0[17u].x - _380) + ((1.0 - cbMtdParam._m0[17u].x) * _326)) * _396) + _380;
    float _407 = (((cbMtdParam._m0[17u].y - _381) + ((1.0 - cbMtdParam._m0[17u].y) * _326)) * _396) + _381;
    float _408 = (((cbMtdParam._m0[17u].z - _382) + ((1.0 - cbMtdParam._m0[17u].z) * _326)) * _396) + _382;
    float _422 = 1.0 - ((1.0 - _360.z) * 1.39999997615814208984375);
    float _4178 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _423 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _453 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w)).x * cbMtdParam._m0[23u].w;
    float _468 = ((cbMtdParam._m0[21u].z * (-1.39999997615814208984375)) * ((TEXCOORD_6 - _453) + (cbMtdParam._m0[22u].y * TEXCOORD_6))) + 1.0;
    float _4189 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _470 = 1.0 - (isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0)));
    float _478 = ((cbMtdParam._m0[21u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5 - _453) + (cbMtdParam._m0[22u].z * TEXCOORD_5))) + 1.0;
    float _4200 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _480 = 1.0 - (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)));
    vec4 _498 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _500 = _498.x;
    float _501 = _498.y;
    float _502 = _498.z;
    float _503 = cbMtdParam._m0[10u].x * _480;
    float _505 = cbMtdParam._m0[10u].y * _480;
    float _507 = cbMtdParam._m0[10u].z * _480;
    float _524 = ((_500 * (cbMtdParam._m0[16u].x - _503)) * _470) + (_503 * _500);
    float _525 = ((_501 * (cbMtdParam._m0[16u].y - _505)) * _470) + (_505 * _501);
    float _526 = ((_502 * (cbMtdParam._m0[16u].z - _507)) * _470) + (_507 * _502);
    float _547 = cbMtdParam._m0[22u].x * (-1.39999997615814208984375);
    float _551 = (_547 * ((TEXCOORD_7.x - _453) + (cbMtdParam._m0[21u].x * TEXCOORD_7.x))) + 1.0;
    float _552 = (_547 * ((TEXCOORD_7.y - _453) + (cbMtdParam._m0[21u].x * TEXCOORD_7.y))) + 1.0;
    float _553 = (_547 * ((TEXCOORD_7.z - _453) + (cbMtdParam._m0[21u].x * TEXCOORD_7.z))) + 1.0;
    float _4211 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _4222 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _4233 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _562 = (1.0 - cbMtdParam._m0[23u].y) + _321;
    float _565 = _562 * (1.0 - (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))));
    float _566 = _562 * (1.0 - (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0))));
    float _567 = ((_321 + 1.0) - cbMtdParam._m0[23u].y) * (1.0 - (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0))));
    float _577 = _480 + _470;
    float _578 = _577 + _565;
    float _579 = _577 + _566;
    float _580 = _577 + _567;
    float _581 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _582 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _583 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _584 = isnan(1.0) ? _581 : (isnan(_581) ? 1.0 : min(_581, 1.0));
    float _585 = isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0));
    float _586 = isnan(1.0) ? _583 : (isnan(_583) ? 1.0 : min(_583, 1.0));
    vec4 _604 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _609 = _604.w;
    float _610 = _604.x * cbMtdParam._m0[12u].x;
    float _611 = _604.y * cbMtdParam._m0[12u].y;
    float _612 = _604.z * cbMtdParam._m0[12u].z;
    vec4 _631 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _645 = (((_631.x * cbMtdParam._m0[13u].x) - _610) * _321) + _610;
    float _646 = (((_631.y * cbMtdParam._m0[13u].y) - _611) * _321) + _611;
    float _647 = (((_631.z * cbMtdParam._m0[13u].z) - _612) * _321) + _612;
    vec4 _665 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _679 = (((_665.x * cbMtdParam._m0[14u].x) - _645) * _324) + _645;
    float _680 = (((_665.y * cbMtdParam._m0[14u].y) - _646) * _324) + _646;
    float _681 = (((_665.z * cbMtdParam._m0[14u].z) - _647) * _324) + _647;
    vec4 _699 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _713 = (((_699.x * cbMtdParam._m0[15u].x) - _679) * _318) + _679;
    float _714 = (((_699.y * cbMtdParam._m0[15u].y) - _680) * _318) + _680;
    float _715 = (((_699.z * cbMtdParam._m0[15u].z) - _681) * _318) + _681;
    float _735 = ((_713 - (_713 * _584)) + (((_584 * 4.55000019073486328125) * ((_565 * ((cbMtdParam._m0[11u].x * _500) - _524)) + _524)) * _713)) * ((((cbMtdParam._m0[18u].x - _406) + ((1.0 - cbMtdParam._m0[18u].x) * _326)) * _423) + _406);
    float _736 = ((_714 - (_714 * _585)) + (((_585 * 4.55000019073486328125) * ((_566 * ((cbMtdParam._m0[11u].y * _501) - _525)) + _525)) * _714)) * ((((cbMtdParam._m0[18u].y - _407) + ((1.0 - cbMtdParam._m0[18u].y) * _326)) * _423) + _407);
    float _737 = ((_715 - (_586 * _715)) + (((_586 * 4.55000019073486328125) * ((_567 * ((cbMtdParam._m0[11u].z * _502) - _526)) + _526)) * _715)) * ((((cbMtdParam._m0[18u].z - _408) + ((1.0 - cbMtdParam._m0[18u].z) * _326)) * _423) + _408);
    float _751 = ((cbMtdParam._m0[20u].w - cbMtdParam._m0[24u].x) * _584) + cbMtdParam._m0[24u].x;
    float _754 = ((cbMtdParam._m0[20u].x - _751) * _321) + _751;
    float _757 = ((cbMtdParam._m0[20u].y - _754) * _324) + _754;
    float _760 = ((cbMtdParam._m0[20u].z - _757) * _318) + _757;
    vec4 _772 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _776 = _772.z;
    float _780 = (_772.x * 2.0) + (-1.0);
    float _782 = (_772.y * 2.0) + (-1.0);
    float _783 = dot(vec2(_780, _782), vec2(_780, _782));
    float _4274 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _788 = sqrt(1.0 - (isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0))));
    float _791 = fma(_788, _283, fma(_782, _276, _780 * _255));
    float _794 = fma(_788, _284, fma(_782, _277, _780 * _256));
    float _797 = fma(_788, _285, fma(_782, _278, _780 * _257));
    float _801 = inversesqrt(dot(vec3(_791, _794, _797), vec3(_791, _794, _797)));
    float _802 = _801 * _791;
    float _803 = _801 * _794;
    float _804 = _801 * _797;
    vec4 _817 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _823 = (_817.x * 2.0) + (-1.0);
    float _824 = (_817.y * 2.0) + (-1.0);
    float _825 = dot(vec2(_823, _824), vec2(_823, _824));
    float _4285 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _830 = sqrt(1.0 - (isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0))));
    float _833 = fma(_830, _283, fma(_824, _276, _823 * _255));
    float _836 = fma(_830, _284, fma(_824, _277, _823 * _256));
    float _839 = fma(_830, _285, fma(_824, _278, _823 * _257));
    float _843 = inversesqrt(dot(vec3(_833, _836, _839), vec3(_833, _836, _839)));
    float _844 = _843 * _833;
    float _845 = _843 * _836;
    float _846 = _843 * _839;
    float _849 = fma(_846, _238, fma(_845, _237, _844 * _236));
    float _852 = fma(_846, _271, fma(_845, _270, _844 * _269));
    float _855 = fma(_846, _285, fma(_845, _284, _844 * _283));
    float _859 = inversesqrt(dot(vec3(_849, _852, _855), vec3(_849, _852, _855)));
    vec4 _872 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _878 = (_872.x * 2.0) + (-1.0);
    float _879 = (_872.y * 2.0) + (-1.0);
    float _880 = dot(vec2(_878, _879), vec2(_878, _879));
    float _4296 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _885 = sqrt(1.0 - (isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0))));
    float _888 = fma(_885, _283, fma(_879, _276, _878 * _255));
    float _891 = fma(_885, _284, fma(_879, _277, _878 * _256));
    float _894 = fma(_885, _285, fma(_879, _278, _878 * _257));
    float _898 = inversesqrt(dot(vec3(_888, _891, _894), vec3(_888, _891, _894)));
    float _899 = _898 * _888;
    float _900 = _898 * _891;
    float _901 = _898 * _894;
    float _904 = fma(_901, _238, fma(_900, _237, _899 * _236));
    float _907 = fma(_901, _271, fma(_900, _270, _899 * _269));
    float _910 = fma(_901, _285, fma(_900, _284, _899 * _283));
    float _914 = inversesqrt(dot(vec3(_904, _907, _910), vec3(_904, _907, _910)));
    vec4 _927 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _933 = (_927.x * 2.0) + (-1.0);
    float _934 = (_927.y * 2.0) + (-1.0);
    float _935 = dot(vec2(_933, _934), vec2(_933, _934));
    float _4307 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _940 = sqrt(1.0 - (isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))));
    float _943 = fma(_940, _283, fma(_934, _276, _933 * _255));
    float _946 = fma(_940, _284, fma(_934, _277, _933 * _256));
    float _949 = fma(_940, _285, fma(_934, _278, _933 * _257));
    float _953 = inversesqrt(dot(vec3(_943, _946, _949), vec3(_943, _946, _949)));
    float _954 = _953 * _943;
    float _955 = _953 * _946;
    float _956 = _953 * _949;
    float _959 = fma(_956, _238, fma(_955, _237, _954 * _236));
    float _962 = fma(_956, _271, fma(_955, _270, _954 * _269));
    float _965 = fma(_956, _285, fma(_955, _284, _954 * _283));
    float _969 = inversesqrt(dot(vec3(_959, _962, _965), vec3(_959, _962, _965)));
    float _975 = fma(_804, _238, fma(_803, _237, _802 * _236));
    float _978 = fma(_804, _271, fma(_803, _270, _802 * _269));
    float _981 = fma(_804, _285, fma(_803, _284, _802 * _283));
    float _985 = inversesqrt(dot(vec3(_975, _978, _981), vec3(_975, _978, _981)));
    float _986 = _985 * _975;
    float _987 = _985 * _978;
    float _988 = _985 * _981;
    float _995 = (((_969 * _959) - _986) * _321) + _986;
    float _996 = (((_969 * _962) - _987) * _321) + _987;
    float _997 = (((_969 * _965) - _988) * _321) + _988;
    vec4 _1010 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _1016 = (_1010.x * 2.0) + (-1.0);
    float _1017 = (_1010.y * 2.0) + (-1.0);
    float _1018 = dot(vec2(_1016, _1017), vec2(_1016, _1017));
    float _4318 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _1023 = sqrt(1.0 - (isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0))));
    float _1026 = fma(_1023, _283, fma(_1017, _276, _1016 * _255));
    float _1029 = fma(_1023, _284, fma(_1017, _277, _1016 * _256));
    float _1032 = fma(_1023, _285, fma(_1017, _278, _1016 * _257));
    float _1036 = inversesqrt(dot(vec3(_1026, _1029, _1032), vec3(_1026, _1029, _1032)));
    float _1037 = _1036 * _1026;
    float _1038 = _1036 * _1029;
    float _1039 = _1036 * _1032;
    float _1042 = fma(_1039, _238, fma(_1038, _237, _1037 * _236));
    float _1045 = fma(_1039, _271, fma(_1038, _270, _1037 * _269));
    float _1048 = fma(_1039, _285, fma(_1038, _284, _1037 * _283));
    float _1052 = inversesqrt(dot(vec3(_1042, _1045, _1048), vec3(_1042, _1045, _1048)));
    float _1062 = (((_1052 * _1042) - _995) * _324) + _995;
    float _1063 = (((_1052 * _1045) - _996) * _324) + _996;
    float _1064 = (((_1052 * _1048) - _997) * _324) + _997;
    vec4 _1077 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1083 = (_1077.x * 2.0) + (-1.0);
    float _1084 = (_1077.y * 2.0) + (-1.0);
    float _1085 = dot(vec2(_1083, _1084), vec2(_1083, _1084));
    float _4329 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1090 = sqrt(1.0 - (isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0))));
    float _1093 = fma(_1090, _283, fma(_1084, _276, _1083 * _255));
    float _1096 = fma(_1090, _284, fma(_1084, _277, _1083 * _256));
    float _1099 = fma(_1090, _285, fma(_1084, _278, _1083 * _257));
    float _1103 = inversesqrt(dot(vec3(_1093, _1096, _1099), vec3(_1093, _1096, _1099)));
    float _1104 = _1103 * _1093;
    float _1105 = _1103 * _1096;
    float _1106 = _1103 * _1099;
    float _1109 = fma(_1106, _238, fma(_1105, _237, _1104 * _236));
    float _1112 = fma(_1106, _271, fma(_1105, _270, _1104 * _269));
    float _1115 = fma(_1106, _285, fma(_1105, _284, _1104 * _283));
    float _1119 = inversesqrt(dot(vec3(_1109, _1112, _1115), vec3(_1109, _1112, _1115)));
    float _1129 = (((_1119 * _1115) - _1064) * _318) + _1064;
    vec4 _1141 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1147 = (_1141.x * 2.0) + (-1.0);
    float _1148 = (_1141.y * 2.0) + (-1.0);
    float _1149 = dot(vec2(_1147, _1148), vec2(_1147, _1148));
    float _4340 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
    float _1154 = sqrt(1.0 - (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))));
    float _1157 = fma(_1154, _283, fma(_1148, _276, _1147 * _255));
    float _1160 = fma(_1154, _284, fma(_1148, _277, _1147 * _256));
    float _1163 = fma(_1154, _285, fma(_1148, _278, _1147 * _257));
    float _1167 = inversesqrt(dot(vec3(_1157, _1160, _1163), vec3(_1157, _1160, _1163)));
    float _1168 = _1167 * _1157;
    float _1169 = _1167 * _1160;
    float _1170 = _1167 * _1163;
    float _1173 = fma(_1170, _238, fma(_1169, _237, _1168 * _236));
    float _1176 = fma(_1170, _271, fma(_1169, _270, _1168 * _269));
    float _1179 = fma(_1170, _285, fma(_1169, _284, _1168 * _283));
    float _1183 = inversesqrt(dot(vec3(_1173, _1176, _1179), vec3(_1173, _1176, _1179)));
    vec4 _1221 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _1235 = (((((((_904 * _470) * _914) * cbMtdParam._m0[22u].w) + ((((_578 * _562) * _849) * _859) * cbMtdParam._m0[23u].x)) + _1062) + (((_1119 * _1109) - _1062) * _318)) + (((_1173 * _480) * _1183) * cbMtdParam._m0[21u].w)) + (((_1221.x * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _1240 = (((((((_907 * _470) * _914) * cbMtdParam._m0[22u].w) + ((((_579 * _562) * _852) * _859) * cbMtdParam._m0[23u].x)) + _1063) + (((_1119 * _1112) - _1063) * _318)) + (((_1176 * _480) * _1183) * cbMtdParam._m0[21u].w)) + (((_1221.y * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _1243 = fma(_1129, _283, fma(_1240, _269, _1235 * _236));
    float _1246 = fma(_1129, _284, fma(_1240, _270, _1235 * _237));
    float _1249 = fma(_1129, _285, fma(_1240, _271, _1235 * _238));
    float _1253 = inversesqrt(dot(vec3(_1243, _1246, _1249), vec3(_1243, _1246, _1249)));
    float _1254 = _1253 * _1243;
    float _1255 = _1253 * _1246;
    float _1256 = _1253 * _1249;
    float _4351 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _1257 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
    float _4362 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _1258 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
    float _4373 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _4384 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _4395 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _4406 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _1262 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
    float _1278 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1318 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1328 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1318);
    float _1329 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1318);
    float _1330 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1318);
    float _1334 = inversesqrt(dot(vec3(_1328, _1329, _1330), vec3(_1328, _1329, _1330)));
    float _1335 = _1328 * _1334;
    float _1336 = _1329 * _1334;
    float _1337 = _1330 * _1334;
    float _1343 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1344 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1362 = fma(_1256, cbSceneParam._m0[5u].z, fma(_1255, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1254));
    float _1365 = fma(_1256, cbSceneParam._m0[6u].z, fma(_1255, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1254));
    float _1368 = fma(_1256, cbSceneParam._m0[7u].z, fma(_1255, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1254));
    uint _1381 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1383 = (_1381 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1389 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0)))) * cbInstanceData._m0[_1383].x;
    float _1390 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0)))) * cbInstanceData._m0[_1383].y;
    float _1391 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0)))) * cbInstanceData._m0[_1383].z;
    float _4417 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
    float _1392 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
    float _4428 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
    float _1393 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
    float _4439 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
    float _1394 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
    float _1395 = 1.0 - _1262;
    float _1396 = _1392 * _1395;
    float _1397 = _1393 * _1395;
    float _1398 = _1394 * _1395;
    float _1403 = (_1392 + (-0.039999999105930328369140625)) * _1262;
    float _1404 = (_1393 + (-0.039999999105930328369140625)) * _1262;
    float _1405 = (_1394 + (-0.039999999105930328369140625)) * _1262;
    float _1406 = _1403 + 0.039999999105930328369140625;
    float _1408 = _1404 + 0.039999999105930328369140625;
    float _1409 = _1405 + 0.039999999105930328369140625;
    vec4 _1418 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1343, cbSceneParam._m0[86u].y * _1344));
    float _1421 = _1418.x * TEXCOORD_7.w;
    float _1422 = dot(vec3(_1254, _1255, _1256), vec3(_1335, _1336, _1337));
    float _1425 = _1422 * 2.0;
    float _1429 = (_1425 * _1254) - _1335;
    float _1430 = (_1425 * _1255) - _1336;
    float _1431 = (_1425 * _1256) - _1337;
    float _1435 = abs(dot(vec3(_1335, _1336, _1337), vec3(_1254, _1255, _1256)));
    float _4450 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
    float _1437 = sqrt(_1258);
    float _1450 = exp2((_1437 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1437 * 3.0));
    float _1456 = (1.0 - _1450) * ((_1437 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1457 = _1450 * _1437;
    float _1485 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1489 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1493 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1795;
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1520 = fma(_1493, cbModelParam._m0[26u].z, fma(_1489, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1485));
        float _1524 = fma(_1493, cbModelParam._m0[27u].z, fma(_1489, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1485));
        float _1528 = fma(_1493, cbModelParam._m0[28u].z, fma(_1489, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1485));
        float _1553 = _1485 + _1254;
        float _1554 = _1489 + _1255;
        float _1555 = _1493 + _1256;
        float _1565 = fma(_1555, cbModelParam._m0[26u].z, fma(_1554, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1553)) - _1520;
        float _1566 = fma(_1555, cbModelParam._m0[27u].z, fma(_1554, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1553)) - _1524;
        float _1567 = fma(_1555, cbModelParam._m0[28u].z, fma(_1554, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1553)) - _1528;
        float _1571 = inversesqrt(dot(vec3(_1565, _1566, _1567), vec3(_1565, _1566, _1567)));
        float _1584 = ((_1571 * _1565) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1520 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1585 = ((_1571 * _1566) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1524 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1586 = ((_1571 * _1567) / cbModelParam._m0[34u].z) + ((((((_1528 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1584, _1585, _1586), 0.0);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1584, _1585, _1586), 0.0);
        vec4 _1603 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1584, _1585, _1586), 0.0);
        vec4 _1610 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1584, _1585, _1586), 0.0);
        float _1623 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1624 = _1623 * (_1589.x + (-0.5));
        float _1625 = _1623 * (_1589.y + (-0.5));
        float _1626 = _1623 * (_1589.z + (-0.5));
        float _1633 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1634 = _1633 * (_1596.x + (-0.5));
        float _1635 = _1633 * (_1596.y + (-0.5));
        float _1636 = _1633 * (_1596.z + (-0.5));
        float _1643 = exp2((_1603.w + (-0.5)) * 20.0) * 2.0;
        float _1644 = _1643 * (_1603.x + (-0.5));
        float _1645 = _1643 * (_1603.y + (-0.5));
        float _1646 = _1643 * (_1603.z + (-0.5));
        float _1653 = exp2((_1610.w + (-0.5)) * 20.0) * 2.0;
        float _1654 = _1653 * (_1610.x + (-0.5));
        float _1655 = _1653 * (_1610.y + (-0.5));
        float _1656 = _1653 * (_1610.z + (-0.5));
        float _1657 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1658 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1659 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
        float _1660 = _1624 * 0.5;
        float _1661 = _1634 * 0.5;
        float _1662 = _1644 * 0.5;
        float _1663 = dot(vec3(_1660, _1661, _1662), vec3(_1660, _1661, _1662));
        float _1668 = (_1663 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1663);
        float _1677 = (dot(vec3(_1254, _1255, _1256), vec3(_1668 * _1660, _1668 * _1661, _1668 * _1662)) + 1.0) * 0.5;
        float _4476 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1687 = sqrt(((_1661 * _1661) + (_1660 * _1660)) + (_1662 * _1662)) / (_1657 + 9.9999997473787516355514526367188e-06);
        float _4487 = isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0));
        float _1688 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
        float _1689 = _1688 * 2.0;
        float _1693 = (1.0 - _1688) / (_1688 + 1.0);
        float _4498 = isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0));
        float _1694 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
        float _1703 = ((((1.0 - _1694) * (_1689 + 2.0)) * exp2(log2(isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0))) * (_1689 + 1.0))) + _1694) * _1657;
        float _1704 = _1625 * 0.5;
        float _1705 = _1635 * 0.5;
        float _1706 = _1645 * 0.5;
        float _1707 = dot(vec3(_1704, _1705, _1706), vec3(_1704, _1705, _1706));
        float _1712 = (_1707 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1707);
        float _1720 = (dot(vec3(_1254, _1255, _1256), vec3(_1712 * _1704, _1712 * _1705, _1712 * _1706)) + 1.0) * 0.5;
        float _4509 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1729 = sqrt(((_1705 * _1705) + (_1704 * _1704)) + (_1706 * _1706)) / (_1658 + 9.9999997473787516355514526367188e-06);
        float _4520 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1730 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _1731 = _1730 * 2.0;
        float _1735 = (1.0 - _1730) / (_1730 + 1.0);
        float _4531 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1736 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _1745 = ((((1.0 - _1736) * (_1731 + 2.0)) * exp2(log2(isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * (_1731 + 1.0))) + _1736) * _1658;
        float _1746 = _1626 * 0.5;
        float _1747 = _1636 * 0.5;
        float _1748 = _1646 * 0.5;
        float _1749 = dot(vec3(_1746, _1747, _1748), vec3(_1746, _1747, _1748));
        float _1754 = (_1749 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1749);
        float _1762 = (dot(vec3(_1254, _1255, _1256), vec3(_1754 * _1746, _1754 * _1747, _1754 * _1748)) + 1.0) * 0.5;
        float _4542 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1771 = sqrt(((_1747 * _1747) + (_1746 * _1746)) + (_1748 * _1748)) / (_1659 + 9.9999997473787516355514526367188e-06);
        float _4553 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1772 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
        float _1773 = _1772 * 2.0;
        float _1777 = (1.0 - _1772) / (_1772 + 1.0);
        float _4564 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1778 = isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0));
        float _1787 = ((((1.0 - _1778) * (_1773 + 2.0)) * exp2(log2(isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0))) * (_1773 + 1.0))) + _1778) * _1659;
        _1795 = _1626;
        _1797 = _1625;
        _1798 = _1624;
        _1799 = _1636;
        _1800 = _1635;
        _1801 = _1634;
        _1802 = _1646;
        _1803 = _1645;
        _1804 = _1644;
        _1805 = _1659;
        _1806 = _1658;
        _1807 = _1657;
        _1808 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0)));
        _1809 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0)));
        _1810 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0)));
    }
    else
    {
        _1795 = _1796;
        _1797 = _1796;
        _1798 = _1796;
        _1799 = _1796;
        _1800 = _1796;
        _1801 = _1796;
        _1802 = _1796;
        _1803 = _1796;
        _1804 = _1796;
        _1805 = _1796;
        _1806 = _1796;
        _1807 = _1796;
        _1808 = 0.0;
        _1809 = 0.0;
        _1810 = 0.0;
    }
    float _2105;
    float _2106;
    float _2107;
    float _2108;
    float _2109;
    float _2110;
    float _2111;
    float _2112;
    float _2113;
    float _2114;
    float _2115;
    float _2116;
    float _2117;
    float _2118;
    float _2119;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1836 = fma(_1493, cbModelParam._m0[30u].z, fma(_1489, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1485));
        float _1840 = fma(_1493, cbModelParam._m0[31u].z, fma(_1489, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1485));
        float _1844 = fma(_1493, cbModelParam._m0[32u].z, fma(_1489, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1485));
        float _1867 = _1485 + _1254;
        float _1868 = _1489 + _1255;
        float _1869 = _1493 + _1256;
        float _1879 = fma(_1869, cbModelParam._m0[30u].z, fma(_1868, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1867)) - _1836;
        float _1880 = fma(_1869, cbModelParam._m0[31u].z, fma(_1868, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1867)) - _1840;
        float _1881 = fma(_1869, cbModelParam._m0[32u].z, fma(_1868, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1867)) - _1844;
        float _1885 = inversesqrt(dot(vec3(_1879, _1880, _1881), vec3(_1879, _1880, _1881)));
        float _1898 = ((_1885 * _1879) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1836 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1899 = ((_1885 * _1880) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1840 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1900 = ((_1885 * _1881) / cbModelParam._m0[35u].z) + ((((((_1844 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1902 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1898, _1899, _1900), 0.0);
        vec4 _1909 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1898, _1899, _1900), 0.0);
        vec4 _1916 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1898, _1899, _1900), 0.0);
        vec4 _1923 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1898, _1899, _1900), 0.0);
        float _1935 = exp2((_1902.w + (-0.5)) * 20.0) * 2.0;
        float _1936 = _1935 * (_1902.x + (-0.5));
        float _1937 = _1935 * (_1902.y + (-0.5));
        float _1938 = _1935 * (_1902.z + (-0.5));
        float _1945 = exp2((_1909.w + (-0.5)) * 20.0) * 2.0;
        float _1946 = _1945 * (_1909.x + (-0.5));
        float _1947 = _1945 * (_1909.y + (-0.5));
        float _1948 = _1945 * (_1909.z + (-0.5));
        float _1955 = exp2((_1916.w + (-0.5)) * 20.0) * 2.0;
        float _1956 = _1955 * (_1916.x + (-0.5));
        float _1957 = _1955 * (_1916.y + (-0.5));
        float _1958 = _1955 * (_1916.z + (-0.5));
        float _1965 = exp2((_1923.w + (-0.5)) * 20.0) * 2.0;
        float _1966 = _1965 * (_1923.x + (-0.5));
        float _1967 = _1965 * (_1923.y + (-0.5));
        float _1968 = _1965 * (_1923.z + (-0.5));
        float _1969 = isnan(0.0) ? _1966 : (isnan(_1966) ? 0.0 : max(_1966, 0.0));
        float _1970 = isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0));
        float _1971 = isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0));
        float _1972 = _1936 * 0.5;
        float _1973 = _1946 * 0.5;
        float _1974 = _1956 * 0.5;
        float _1975 = dot(vec3(_1972, _1973, _1974), vec3(_1972, _1973, _1974));
        float _1980 = (_1975 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1975);
        float _1988 = (dot(vec3(_1254, _1255, _1256), vec3(_1980 * _1972, _1980 * _1973, _1980 * _1974)) + 1.0) * 0.5;
        float _4605 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        float _1997 = sqrt(((_1973 * _1973) + (_1972 * _1972)) + (_1974 * _1974)) / (_1969 + 9.9999997473787516355514526367188e-06);
        float _4616 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _1998 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _1999 = _1998 * 2.0;
        float _2003 = (1.0 - _1998) / (_1998 + 1.0);
        float _4627 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
        float _2004 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _2013 = ((((1.0 - _2004) * (_1999 + 2.0)) * exp2(log2(isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (_1999 + 1.0))) + _2004) * _1969;
        float _2014 = _1937 * 0.5;
        float _2015 = _1947 * 0.5;
        float _2016 = _1957 * 0.5;
        float _2017 = dot(vec3(_2014, _2015, _2016), vec3(_2014, _2015, _2016));
        float _2022 = (_2017 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2017);
        float _2030 = (dot(vec3(_1254, _1255, _1256), vec3(_2022 * _2014, _2022 * _2015, _2022 * _2016)) + 1.0) * 0.5;
        float _4638 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
        float _2039 = sqrt(((_2015 * _2015) + (_2014 * _2014)) + (_2016 * _2016)) / (_1970 + 9.9999997473787516355514526367188e-06);
        float _4649 = isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0));
        float _2040 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
        float _2041 = _2040 * 2.0;
        float _2045 = (1.0 - _2040) / (_2040 + 1.0);
        float _4660 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _2046 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _2055 = ((((1.0 - _2046) * (_2041 + 2.0)) * exp2(log2(isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0))) * (_2041 + 1.0))) + _2046) * _1970;
        float _2056 = _1938 * 0.5;
        float _2057 = _1948 * 0.5;
        float _2058 = _1958 * 0.5;
        float _2059 = dot(vec3(_2056, _2057, _2058), vec3(_2056, _2057, _2058));
        float _2064 = (_2059 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2059);
        float _2072 = (dot(vec3(_1254, _1255, _1256), vec3(_2064 * _2056, _2064 * _2057, _2064 * _2058)) + 1.0) * 0.5;
        float _4671 = isnan(0.0) ? _2072 : (isnan(_2072) ? 0.0 : max(_2072, 0.0));
        float _2081 = sqrt(((_2057 * _2057) + (_2056 * _2056)) + (_2058 * _2058)) / (_1971 + 9.9999997473787516355514526367188e-06);
        float _4682 = isnan(0.0) ? _2081 : (isnan(_2081) ? 0.0 : max(_2081, 0.0));
        float _2082 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _2083 = _2082 * 2.0;
        float _2087 = (1.0 - _2082) / (_2082 + 1.0);
        float _4693 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
        float _2088 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
        float _2097 = ((((1.0 - _2088) * (_2083 + 2.0)) * exp2(log2(isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0))) * (_2083 + 1.0))) + _2088) * _1971;
        _2105 = _1938;
        _2106 = _1937;
        _2107 = _1936;
        _2108 = _1948;
        _2109 = _1947;
        _2110 = _1946;
        _2111 = _1958;
        _2112 = _1957;
        _2113 = _1956;
        _2114 = _1971;
        _2115 = _1970;
        _2116 = _1969;
        _2117 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0)));
        _2118 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0)));
        _2119 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0)));
    }
    else
    {
        _2105 = _1796;
        _2106 = _1796;
        _2107 = _1796;
        _2108 = _1796;
        _2109 = _1796;
        _2110 = _1796;
        _2111 = _1796;
        _2112 = _1796;
        _2113 = _1796;
        _2114 = _1796;
        _2115 = _1796;
        _2116 = _1796;
        _2117 = 0.0;
        _2118 = 0.0;
        _2119 = 0.0;
    }
    float _2129 = (cbModelParam._m0[1u].x * (_2117 - _1808)) + _1808;
    float _2130 = (cbModelParam._m0[1u].x * (_2118 - _1809)) + _1809;
    float _2131 = (cbModelParam._m0[1u].x * (_2119 - _1810)) + _1810;
    float _2152 = fma(_2131, cbSceneParam._m0[89u].z, fma(_2130, cbSceneParam._m0[89u].y, _2129 * cbSceneParam._m0[89u].x));
    float _2155 = fma(_2131, cbSceneParam._m0[90u].z, fma(_2130, cbSceneParam._m0[90u].y, _2129 * cbSceneParam._m0[90u].x));
    float _2158 = fma(_2131, cbSceneParam._m0[91u].z, fma(_2130, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2129));
    float _2173 = _1429 * 0.5;
    float _2174 = _1430 * 0.5;
    float _2175 = _1431 * 0.5;
    float _2176 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_2107, _2110, _2113, _2116));
    float _2179 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_2106, _2109, _2112, _2115));
    float _2182 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_2105, _2108, _2111, _2114));
    float _2216;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2189 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_1795, _1799, _1802, _1805));
        float _2193 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_1797, _1800, _1803, _1806));
        float _2197 = dot(vec4(_2173, _2174, _2175, 1.0), vec4(_1798, _1801, _1804, _1807));
        float _2204 = dot(vec4(cbModelParam._m0[39u]), vec4(_2173, _2174, _2175, 1.0));
        _2216 = dot(vec3(isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0)), isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0)), isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2204) ? 0.0 : (isnan(0.0) ? _2204 : max(0.0, _2204))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2216 = 1.0;
    }
    float _2227;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2218 = dot(vec4(cbModelParam._m0[40u]), vec4(_2173, _2174, _2175, 1.0));
        _2227 = dot(vec3(isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0)), isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0)), isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2218) ? 0.0 : (isnan(0.0) ? _2218 : max(0.0, _2218))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2227 = 1.0;
    }
    float _2231 = (_2227 * cbModelParam._m0[1u].x) + (_2216 * (1.0 - cbModelParam._m0[1u].x));
    float _2241 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1258);
    float _2242 = isnan(_2241) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2241 : min(cbModelParam._m0[25u].z, _2241));
    float _2322;
    float _2324;
    float _2326;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2289 = fma(_1493, cbModelParam._m0[13u].z, fma(_1489, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1485)) + cbModelParam._m0[13u].w;
        float _2293 = fma(_1493, cbModelParam._m0[14u].z, fma(_1489, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1485)) + cbModelParam._m0[14u].w;
        float _2297 = fma(_1493, cbModelParam._m0[15u].z, fma(_1489, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1485)) + cbModelParam._m0[15u].w;
        float _2300 = fma(_1431, cbModelParam._m0[13u].z, fma(_1430, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1429));
        float _2303 = fma(_1431, cbModelParam._m0[14u].z, fma(_1430, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1429));
        float _2306 = fma(_1431, cbModelParam._m0[15u].z, fma(_1430, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1429));
        float _2334;
        if (_2300 > 0.0)
        {
            _2334 = abs((1.0 - _2289) / _2300);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2300 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2289 + 1.0) / _2300);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2334 = frontier_phi_16_14_ladder;
        }
        float _2536;
        if (_2303 > 0.0)
        {
            _2536 = abs((1.0 - _2293) / _2303);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2303 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2293 + 1.0) / _2303);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2536 = frontier_phi_25_21_ladder;
        }
        float _2790;
        if (_2306 > 0.0)
        {
            _2790 = abs((1.0 - _2297) / _2306);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2306 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2297 + 1.0) / _2306);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2790 = frontier_phi_37_32_ladder;
        }
        float _2792 = isnan(_2536) ? _2334 : (isnan(_2334) ? _2536 : min(_2334, _2536));
        float _2793 = isnan(_2790) ? _2792 : (isnan(_2792) ? _2790 : min(_2792, _2790));
        float _2797 = (_2793 * _2300) + _2289;
        float _2798 = (_2793 * _2303) + _2293;
        float _2799 = (_2793 * _2306) + _2297;
        float _2800 = _2793 * 9.9999997473787516355514526367188e-05;
        float _2802 = (-1.0) - _2800;
        float _2804 = _2800 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2799 > _2804) || ((_2799 < _2802) || ((_2798 > _2804) || ((_2798 < _2802) || ((_2797 < _2802) || (_2797 > _2804))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2927 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2799, cbModelParam._m0[9u].z, fma(_2798, cbModelParam._m0[9u].y, _2797 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2799, cbModelParam._m0[10u].z, fma(_2798, cbModelParam._m0[10u].y, _2797 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2799, cbModelParam._m0[11u].z, fma(_2798, cbModelParam._m0[11u].y, _2797 * cbModelParam._m0[11u].x))), _2242);
            frontier_phi_15_37_ladder = _2927.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2927.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2927.x * cbModelParam._m0[1u].y;
        }
        _2322 = frontier_phi_15_37_ladder_2;
        _2324 = frontier_phi_15_37_ladder_1;
        _2326 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2310 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1429, _1430, _1431), _2242);
        _2322 = _2310.x * cbModelParam._m0[1u].y;
        _2324 = _2310.y * cbModelParam._m0[1u].y;
        _2326 = _2310.z * cbModelParam._m0[1u].y;
    }
    float _2330 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1258);
    float _2331 = isnan(_2330) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2330 : min(cbModelParam._m0[25u].w, _2330));
    float _2420;
    float _2422;
    float _2424;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2384 = fma(_1493, cbModelParam._m0[21u].z, fma(_1489, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1485)) + cbModelParam._m0[21u].w;
        float _2388 = fma(_1493, cbModelParam._m0[22u].z, fma(_1489, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1485)) + cbModelParam._m0[22u].w;
        float _2392 = fma(_1493, cbModelParam._m0[23u].z, fma(_1489, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1485)) + cbModelParam._m0[23u].w;
        float _2395 = fma(_1431, cbModelParam._m0[21u].z, fma(_1430, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1429));
        float _2398 = fma(_1431, cbModelParam._m0[22u].z, fma(_1430, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1429));
        float _2401 = fma(_1431, cbModelParam._m0[23u].z, fma(_1430, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1429));
        float _2541;
        if (_2395 > 0.0)
        {
            _2541 = abs((1.0 - _2384) / _2395);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2395 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2384 + 1.0) / _2395);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2541 = frontier_phi_27_23_ladder;
        }
        float _2817;
        if (_2398 > 0.0)
        {
            _2817 = abs((1.0 - _2388) / _2398);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2398 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2388 + 1.0) / _2398);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2817 = frontier_phi_39_34_ladder;
        }
        float _3030;
        if (_2401 > 0.0)
        {
            _3030 = abs((1.0 - _2392) / _2401);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_2401 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_2392 + 1.0) / _2401);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _3030 = frontier_phi_48_45_ladder;
        }
        float _3032 = isnan(_2817) ? _2541 : (isnan(_2541) ? _2817 : min(_2541, _2817));
        float _3033 = isnan(_3030) ? _3032 : (isnan(_3032) ? _3030 : min(_3032, _3030));
        float _3037 = (_3033 * _2395) + _2384;
        float _3038 = (_3033 * _2398) + _2388;
        float _3039 = (_3033 * _2401) + _2392;
        float _3040 = _3033 * 9.9999997473787516355514526367188e-05;
        float _3041 = (-1.0) - _3040;
        float _3043 = _3040 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_3039 > _3043) || ((_3039 < _3041) || ((_3038 > _3043) || ((_3038 < _3041) || ((_3037 < _3041) || (_3037 > _3043))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3239 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3039, cbModelParam._m0[17u].z, fma(_3038, cbModelParam._m0[17u].y, _3037 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3039, cbModelParam._m0[18u].z, fma(_3038, cbModelParam._m0[18u].y, _3037 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3039, cbModelParam._m0[19u].z, fma(_3038, cbModelParam._m0[19u].y, _3037 * cbModelParam._m0[19u].x))), _2331);
            frontier_phi_24_48_ladder = _3239.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _3239.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _3239.x * cbModelParam._m0[1u].z;
        }
        _2420 = frontier_phi_24_48_ladder_2;
        _2422 = frontier_phi_24_48_ladder_1;
        _2424 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _2404 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1429, _1430, _1431), _2331);
        _2420 = _2404.x * cbModelParam._m0[1u].z;
        _2422 = _2404.y * cbModelParam._m0[1u].z;
        _2424 = _2404.z * cbModelParam._m0[1u].z;
    }
    float _2437 = (((_1456 * _1406) + _1457) * _1421) * ((cbModelParam._m0[1u].w * (_2420 - _2322)) + _2322);
    float _2439 = (((_1456 * _1408) + _1457) * _1421) * ((cbModelParam._m0[1u].w * (_2422 - _2324)) + _2324);
    float _2441 = (((_1456 * _1409) + _1457) * _1421) * ((cbModelParam._m0[1u].w * (_2424 - _2326)) + _2326);
    float _2444 = fma(_2441, cbSceneParam._m0[89u].z, fma(_2439, cbSceneParam._m0[89u].y, _2437 * cbSceneParam._m0[89u].x));
    float _2447 = fma(_2441, cbSceneParam._m0[90u].z, fma(_2439, cbSceneParam._m0[90u].y, _2437 * cbSceneParam._m0[90u].x));
    float _2450 = fma(_2441, cbSceneParam._m0[91u].z, fma(_2439, cbSceneParam._m0[91u].y, _2437 * cbSceneParam._m0[91u].x));
    uvec4 _2460 = floatBitsToUint(cbInstanceData._m0[_1381 + 5u]);
    uint _2462 = _2460.x * 14u;
    uint _2463 = _2462 + 13u;
    float _2470 = _1421 + (-1.0);
    float _2475 = (cbLight._m0[_2463].x * _2470) + 1.0;
    float _2476 = (cbLight._m0[_2463].y * _2470) + 1.0;
    float _2477 = (cbLight._m0[_2463].z * _2470) + 1.0;
    float _2478 = (cbLight._m0[_2463].w * _2470) + 1.0;
    uint _2479 = _2462 + 5u;
    float _2485 = isnan(1.0) ? _2476 : (isnan(_2476) ? 1.0 : min(_2476, 1.0));
    uint _2489 = _2462 + 4u;
    float _2495 = isnan(1.0) ? _2475 : (isnan(_2475) ? 1.0 : min(_2475, 1.0));
    uint _2499 = _2462 | 1u;
    float _2510 = dot(vec3(cbLight._m0[_2462].xyz), vec3(_1254, _1255, _1256));
    float _2513 = dot(vec3(cbLight._m0[_2499].xyz), vec3(_1254, _1255, _1256));
    float _4829 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _4840 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2518 = (isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0))) * 0.3183098733425140380859375;
    float _2520 = (isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0))) * 0.3183098733425140380859375;
    float _2527 = ((cbLight._m0[_2479].x * _2485) * _2520) + ((cbLight._m0[_2489].x * _2495) * _2518);
    float _2528 = ((_2485 * cbLight._m0[_2479].y) * _2520) + ((_2495 * cbLight._m0[_2489].y) * _2518);
    float _2529 = ((_2485 * cbLight._m0[_2479].z) * _2520) + ((_2495 * cbLight._m0[_2489].z) * _2518);
    uvec4 _2533 = floatBitsToUint(cbLight._m0[_2462 + 12u]);
    bool _2535 = _2533.x == 0u;
    float _2546;
    float _2548;
    float _2550;
    if (_2535)
    {
        _2546 = _2527;
        _2548 = _2528;
        _2550 = _2529;
    }
    else
    {
        uint _2554 = _2462 + 6u;
        float _2570 = (dot(vec3(cbLight._m0[_2462 + 2u].xyz), vec3(_1254, _1255, _1256)) * 0.5) + 0.5;
        float _2571 = _2570 * _2570;
        float _4851 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2572 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
        float _2573 = isnan(1.0) ? _2477 : (isnan(_2477) ? 1.0 : min(_2477, 1.0));
        _2546 = (((cbLight._m0[_2554].x * 0.3183098733425140380859375) * _2572) * _2573) + _2527;
        _2548 = (((cbLight._m0[_2554].y * 0.3183098733425140380859375) * _2572) * _2573) + _2528;
        _2550 = (((cbLight._m0[_2554].z * 0.3183098733425140380859375) * _2572) * _2573) + _2529;
    }
    bool _2553 = _2533.y == 0u;
    float _2591;
    float _2593;
    float _2595;
    if (_2553)
    {
        _2591 = _2546;
        _2593 = _2548;
        _2595 = _2550;
    }
    else
    {
        uint _2761 = _2462 + 7u;
        float _2777 = (dot(vec3(cbLight._m0[_2462 + 3u].xyz), vec3(_1254, _1255, _1256)) * 0.5) + 0.5;
        float _2778 = _2777 * _2777;
        float _4867 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
        float _2779 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
        float _2780 = isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0));
        _2591 = (((cbLight._m0[_2761].x * 0.3183098733425140380859375) * _2779) * _2780) + _2546;
        _2593 = (((cbLight._m0[_2761].y * 0.3183098733425140380859375) * _2779) * _2780) + _2548;
        _2595 = (((cbLight._m0[_2761].z * 0.3183098733425140380859375) * _2779) * _2780) + _2550;
    }
    uint _2598 = _2462 + 8u;
    float _2611 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2462].w)) * _1258) * 0.949999988079071044921875);
    float _2612 = _2611 * _2611;
    float _2613 = cbLight._m0[_2462].x + _1335;
    float _2614 = cbLight._m0[_2462].y + _1336;
    float _2615 = cbLight._m0[_2462].z + _1337;
    float _2619 = inversesqrt(dot(vec3(_2613, _2614, _2615), vec3(_2613, _2614, _2615)));
    float _2620 = _2619 * _2613;
    float _2621 = _2619 * _2614;
    float _2622 = _2619 * _2615;
    float _2623 = dot(vec3(_1254, _1255, _1256), vec3(cbLight._m0[_2462].xyz));
    float _4883 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2626 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
    float _4894 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _2627 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
    float _2628 = dot(vec3(_1254, _1255, _1256), vec3(_2620, _2621, _2622));
    float _4905 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
    float _2631 = isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0));
    float _2632 = dot(vec3(cbLight._m0[_2462].xyz), vec3(_2620, _2621, _2622));
    float _4916 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
    float _2636 = _2612 * _2612;
    float _2640 = ((_2631 * _2631) * (_2636 + (-1.0))) + 1.0;
    float _2648 = exp2(log2(1.0 - (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0)))) * 5.0);
    float _2649 = 0.959999978542327880859375 - _1403;
    float _2651 = 0.959999978542327880859375 - _1404;
    float _2652 = 0.959999978542327880859375 - _1405;
    float _2659 = 1.0 - _2612;
    float _2670 = (0.5 / (((_2627 * ((_2626 * _2659) + _2612)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2659) + _2612) * _2626))) * _2626;
    float _4927 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
    float _2672 = (isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0))) * (_2636 / ((_2640 * _2640) * 3.141590118408203125));
    uint _2683 = _2462 + 9u;
    float _2694 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2499].w)) * _1258) * 0.949999988079071044921875);
    float _2695 = _2694 * _2694;
    float _2696 = cbLight._m0[_2499].x + _1335;
    float _2697 = cbLight._m0[_2499].y + _1336;
    float _2698 = cbLight._m0[_2499].z + _1337;
    float _2702 = inversesqrt(dot(vec3(_2696, _2697, _2698), vec3(_2696, _2697, _2698)));
    float _2703 = _2702 * _2696;
    float _2704 = _2702 * _2697;
    float _2705 = _2702 * _2698;
    float _2706 = dot(vec3(_1254, _1255, _1256), vec3(cbLight._m0[_2499].xyz));
    float _4938 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
    float _2709 = isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0));
    float _2710 = dot(vec3(_1254, _1255, _1256), vec3(_2703, _2704, _2705));
    float _4949 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
    float _2713 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
    float _2714 = dot(vec3(cbLight._m0[_2499].xyz), vec3(_2703, _2704, _2705));
    float _4960 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
    float _2718 = _2695 * _2695;
    float _2722 = ((_2713 * _2713) * (_2718 + (-1.0))) + 1.0;
    float _2729 = exp2(log2(1.0 - (isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0)))) * 5.0);
    float _2736 = 1.0 - _2695;
    float _2746 = (0.5 / (((_2627 * ((_2709 * _2736) + _2695)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2736) + _2695) * _2709))) * _2709;
    float _4971 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
    float _2748 = (isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0))) * (_2718 / ((_2722 * _2722) * 3.141590118408203125));
    float _2758 = (((((_2729 * _2649) + _1406) * cbLight._m0[_2683].x) * _2748) * _2485) + (((((_2648 * _2649) + _1406) * cbLight._m0[_2598].x) * _2672) * _2495);
    float _2759 = (((((_2729 * _2651) + _1408) * cbLight._m0[_2683].y) * _2748) * _2485) + (((((_2648 * _2651) + _1408) * cbLight._m0[_2598].y) * _2672) * _2495);
    float _2760 = (((((_2729 * _2652) + _1409) * cbLight._m0[_2683].z) * _2748) * _2485) + (((((_2648 * _2652) + _1409) * cbLight._m0[_2598].z) * _2672) * _2495);
    float _2822;
    float _2824;
    float _2826;
    if (_2535)
    {
        _2822 = _2758;
        _2824 = _2759;
        _2826 = _2760;
    }
    else
    {
        uint _2828 = _2462 + 2u;
        uint _2832 = _2462 + 10u;
        float _2846 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2828].w)) * _1258) * 0.949999988079071044921875);
        float _2847 = _2846 * _2846;
        float _2848 = cbLight._m0[_2828].x + _1335;
        float _2849 = cbLight._m0[_2828].y + _1336;
        float _2850 = cbLight._m0[_2828].z + _1337;
        float _2854 = inversesqrt(dot(vec3(_2848, _2849, _2850), vec3(_2848, _2849, _2850)));
        float _2855 = _2854 * _2848;
        float _2856 = _2854 * _2849;
        float _2857 = _2854 * _2850;
        float _2858 = dot(vec3(_1254, _1255, _1256), vec3(cbLight._m0[_2828].xyz));
        float _4982 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
        float _2861 = isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0));
        float _2862 = dot(vec3(_1254, _1255, _1256), vec3(_2855, _2856, _2857));
        float _4993 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2865 = isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0));
        float _2866 = dot(vec3(cbLight._m0[_2828].xyz), vec3(_2855, _2856, _2857));
        float _5004 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2870 = _2847 * _2847;
        float _2874 = ((_2865 * _2865) * (_2870 + (-1.0))) + 1.0;
        float _2881 = exp2(log2(1.0 - (isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0)))) * 5.0);
        float _2888 = 1.0 - _2847;
        float _2898 = (0.5 / (((_2627 * ((_2861 * _2888) + _2847)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _2888) + _2847) * _2861))) * _2861;
        float _5015 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
        float _2900 = (isnan(1.0) ? _5015 : (isnan(_5015) ? 1.0 : min(_5015, 1.0))) * (_2870 / ((_2874 * _2874) * 3.141590118408203125));
        float _2901 = isnan(1.0) ? _2477 : (isnan(_2477) ? 1.0 : min(_2477, 1.0));
        _2822 = (((((_2881 * _2649) + _1406) * cbLight._m0[_2832].x) * _2900) * _2901) + _2758;
        _2824 = (((((_2881 * _2651) + _1408) * cbLight._m0[_2832].y) * _2900) * _2901) + _2759;
        _2826 = (((((_2881 * _2652) + _1409) * cbLight._m0[_2832].z) * _2900) * _2901) + _2760;
    }
    float _2936;
    float _2938;
    float _2940;
    if (_2553)
    {
        _2936 = _2822;
        _2938 = _2824;
        _2940 = _2826;
    }
    else
    {
        uint _2947 = _2462 + 3u;
        uint _2951 = _2462 + 11u;
        float _2965 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2947].w)) * _1258) * 0.949999988079071044921875);
        float _2966 = _2965 * _2965;
        float _2967 = cbLight._m0[_2947].x + _1335;
        float _2968 = cbLight._m0[_2947].y + _1336;
        float _2969 = cbLight._m0[_2947].z + _1337;
        float _2973 = inversesqrt(dot(vec3(_2967, _2968, _2969), vec3(_2967, _2968, _2969)));
        float _2974 = _2973 * _2967;
        float _2975 = _2973 * _2968;
        float _2976 = _2973 * _2969;
        float _2977 = dot(vec3(_1254, _1255, _1256), vec3(cbLight._m0[_2947].xyz));
        float _5031 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
        float _2980 = isnan(1.0) ? _5031 : (isnan(_5031) ? 1.0 : min(_5031, 1.0));
        float _2981 = dot(vec3(_1254, _1255, _1256), vec3(_2974, _2975, _2976));
        float _5042 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2984 = isnan(1.0) ? _5042 : (isnan(_5042) ? 1.0 : min(_5042, 1.0));
        float _2985 = dot(vec3(cbLight._m0[_2947].xyz), vec3(_2974, _2975, _2976));
        float _5053 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
        float _2989 = _2966 * _2966;
        float _2993 = ((_2984 * _2984) * (_2989 + (-1.0))) + 1.0;
        float _3000 = exp2(log2(1.0 - (isnan(1.0) ? _5053 : (isnan(_5053) ? 1.0 : min(_5053, 1.0)))) * 5.0);
        float _3007 = 1.0 - _2966;
        float _3017 = (0.5 / (((_2627 * ((_2980 * _3007) + _2966)) + 9.9999999392252902907785028219223e-09) + (((_2627 * _3007) + _2966) * _2980))) * _2980;
        float _5064 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3019 = (isnan(1.0) ? _5064 : (isnan(_5064) ? 1.0 : min(_5064, 1.0))) * (_2989 / ((_2993 * _2993) * 3.141590118408203125));
        float _3020 = isnan(1.0) ? _2478 : (isnan(_2478) ? 1.0 : min(_2478, 1.0));
        _2936 = (((((_3000 * _2649) + _1406) * cbLight._m0[_2951].x) * _3019) * _3020) + _2822;
        _2938 = (((((_3000 * _2651) + _1408) * cbLight._m0[_2951].y) * _3019) * _3020) + _2824;
        _2940 = (((((_3000 * _2652) + _1409) * cbLight._m0[_2951].z) * _3019) * _3020) + _2826;
    }
    float _3154;
    float _3156;
    float _3158;
    float _3160;
    float _3162;
    float _3164;
    if (_2460.y == 0u)
    {
        float _3095 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3096 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3095;
        float _3097 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3095;
        float _3098 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3095;
        uvec4 _3110 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3111 = _3110.x;
        uint _3122 = uint((float(_3110.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1344) / _3111))) + floor(float(uint(cbSceneParam._m0[85u].x * _1343) / _3111)));
        float _3132 = (log2(_3098 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3133 = isnan(0.0) ? _3132 : (isnan(_3132) ? 0.0 : max(_3132, 0.0));
        uint _3136 = uint(isnan(14.0) ? _3133 : (isnan(_3133) ? 14.0 : min(_3133, 14.0)));
        uvec4 _3141 = texelFetch(g_lightClusterGridBuffer, int(((_3136 << 2u) + (_3122 << 6u)) >> 2u));
        uint _3142 = _3141.x;
        uint _3143 = _3110.z;
        float _3244;
        float _3246;
        float _3248;
        float _3250;
        float _3252;
        float _3254;
        if (((((1u << ((_3143 >> 4u) & 15u)) + 4294967295u) & _3142) == 0u) || ((_3143 & 240u) == 0u))
        {
            _3244 = 0.0;
            _3246 = 0.0;
            _3248 = 0.0;
            _3250 = 0.0;
            _3252 = 0.0;
            _3254 = 0.0;
        }
        else
        {
            float _3245;
            float _3247;
            float _3249;
            float _3251;
            float _3253;
            float _3255;
            float _3388 = 0.0;
            float _3389 = 0.0;
            float _3390 = 0.0;
            float _3391 = 0.0;
            float _3392 = 0.0;
            float _3393 = 0.0;
            uint _3394 = 0u;
            uint _3403;
            bool _3404;
            for (;;)
            {
                _3403 = texelFetch(g_lightClassification, int((((_3136 << 5u) + (_3122 << 9u)) + (_3394 << 2u)) >> 2u)).x;
                _3404 = _3403 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3404)
                {
                    frontier_phi_63_pred = _3393;
                    frontier_phi_63_pred_1 = _3392;
                    frontier_phi_63_pred_2 = _3391;
                    frontier_phi_63_pred_3 = _3390;
                    frontier_phi_63_pred_4 = _3389;
                    frontier_phi_63_pred_5 = _3388;
                }
                else
                {
                    float _3512;
                    float _3513;
                    float _3514;
                    float _3515;
                    float _3516;
                    float _3517;
                    uint _3518;
                    _3512 = _3388;
                    _3513 = _3389;
                    _3514 = _3390;
                    _3515 = _3391;
                    _3516 = _3392;
                    _3517 = _3393;
                    _3518 = _3403;
                    float _3444;
                    float _3445;
                    float _3446;
                    float _3447;
                    float _3448;
                    float _3449;
                    for (;;)
                    {
                        uint _3522 = uint(findLSB(_3518)) + (_3394 << 5u);
                        uint _3519 = (_3518 + 4294967295u) & _3518;
                        uint _3524 = _3522 * 48u;
                        vec4 _3538 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3524)).x, texelFetch(g_PointLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3524 + 3u)).x));
                        uint _3544 = (_3522 * 48u) + 4u;
                        vec4 _3557 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3544)).x, texelFetch(g_PointLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3544 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3544 + 3u)).x));
                        uint _3563 = (_3522 * 48u) + 8u;
                        vec3 _3574 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3563)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3563 + 2u)).x));
                        float _3578 = _3538.x - _3096;
                        float _3579 = _3538.y - _3097;
                        float _3580 = _3538.z - _3098;
                        float _3581 = dot(vec3(_3578, _3579, _3580), vec3(_3578, _3579, _3580));
                        float _3584 = inversesqrt(_3581);
                        float _3585 = _3584 * _3578;
                        float _3586 = _3584 * _3579;
                        float _3587 = _3584 * _3580;
                        float _3588 = dot(vec3(_1362, _1365, _1368), vec3(_3585, _3586, _3587));
                        float _3593 = 1.0 - (_3581 * _3538.w);
                        float _5090 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                        float _3594 = isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0));
                        float _3595 = sqrt(_3581) * _3557.w;
                        float _3597 = 1.39999997615814208984375 / (_3595 + 1.39999997615814208984375);
                        float _3598 = _3597 * _3597;
                        float _3601 = ((1.0 - _3598) * _3588) + _3598;
                        float _3604 = _3595 * _3595;
                        float _3608 = ((isnan(0.0) ? _3601 : (isnan(_3601) ? 0.0 : max(_3601, 0.0))) * _3594) / ((_3604 * 0.699999988079071044921875) + 1.0);
                        float _3612 = (-0.0) - _3096;
                        float _3613 = (-0.0) - _3097;
                        float _3614 = (-0.0) - _3098;
                        float _3618 = inversesqrt(dot(vec3(_3612, _3613, _3614), vec3(_3612, _3613, _3614)));
                        float _3619 = _3618 * _3612;
                        float _3620 = _3618 * _3613;
                        float _3621 = _3618 * _3614;
                        float _3629 = exp2(log2(1.0 / ((_3604 * 3.5) + 5.0)) * 0.25);
                        float _3630 = 1.0 - _1437;
                        float _3637 = sqrt(1.0 - ((1.0 - (_3630 * _3630)) * (1.0 - (_3629 * _3629))));
                        float _3638 = _3637 * _3637;
                        float _3639 = _3638 * _3638;
                        float _3640 = _3619 + _3585;
                        float _3641 = _3620 + _3586;
                        float _3642 = _3621 + _3587;
                        float _3646 = inversesqrt(dot(vec3(_3640, _3641, _3642), vec3(_3640, _3641, _3642)));
                        float _3650 = dot(vec3(_1362, _1365, _1368), vec3(_3619, _3620, _3621));
                        float _5106 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                        float _3653 = isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0));
                        float _3654 = dot(vec3(_1362, _1365, _1368), vec3(_3646 * _3640, _3646 * _3641, _3646 * _3642));
                        float _5117 = isnan(0.0) ? _3654 : (isnan(_3654) ? 0.0 : max(_3654, 0.0));
                        float _3657 = isnan(1.0) ? _5117 : (isnan(_5117) ? 1.0 : min(_5117, 1.0));
                        float _3661 = ((_3657 * _3657) * (_3639 + (-1.0))) + 1.0;
                        float _3662 = _3597 * _3638;
                        float _3663 = _3662 * _3662;
                        float _3666 = ((1.0 - _3663) * _3588) + _3663;
                        float _5128 = isnan(0.0) ? _3666 : (isnan(_3666) ? 0.0 : max(_3666, 0.0));
                        float _3667 = isnan(1.0) ? _5128 : (isnan(_5128) ? 1.0 : min(_5128, 1.0));
                        float _3668 = 1.0 - _3638;
                        float _3678 = (0.5 / (((_3667 * ((_3653 * _3668) + _3638)) + 9.9999999392252902907785028219223e-09) + (((_3667 * _3668) + _3638) * _3653))) * _3667;
                        float _5139 = isnan(0.0) ? _3678 : (isnan(_3678) ? 0.0 : max(_3678, 0.0));
                        float _3689 = (((_3639 * 3.1415927410125732421875) * (isnan(1.0) ? _5139 : (isnan(_5139) ? 1.0 : min(_5139, 1.0)))) / ((_3661 * _3661) * ((_3604 * 2.1991131305694580078125) + 3.141590118408203125))) * _3594;
                        _3447 = (_3608 * _3557.x) + _3515;
                        _3448 = (_3608 * _3557.y) + _3516;
                        _3449 = (_3608 * _3557.z) + _3517;
                        _3444 = (_3689 * _3574.x) + _3512;
                        _3445 = (_3689 * _3574.y) + _3513;
                        _3446 = (_3689 * _3574.z) + _3514;
                        if (_3519 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3512 = _3444;
                            _3513 = _3445;
                            _3514 = _3446;
                            _3515 = _3447;
                            _3516 = _3448;
                            _3517 = _3449;
                            _3518 = _3519;
                        }
                    }
                    frontier_phi_63_pred = _3449;
                    frontier_phi_63_pred_1 = _3448;
                    frontier_phi_63_pred_2 = _3447;
                    frontier_phi_63_pred_3 = _3446;
                    frontier_phi_63_pred_4 = _3445;
                    frontier_phi_63_pred_5 = _3444;
                }
                _3255 = frontier_phi_63_pred;
                _3253 = frontier_phi_63_pred_1;
                _3251 = frontier_phi_63_pred_2;
                _3249 = frontier_phi_63_pred_3;
                _3247 = frontier_phi_63_pred_4;
                _3245 = frontier_phi_63_pred_5;
                uint _3395 = _3394 + 1u;
                if (_3395 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3388 = _3245;
                    _3389 = _3247;
                    _3390 = _3249;
                    _3391 = _3251;
                    _3392 = _3253;
                    _3393 = _3255;
                    _3394 = _3395;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3244 = _3245;
            _3246 = _3247;
            _3248 = _3249;
            _3250 = _3251;
            _3252 = _3253;
            _3254 = _3255;
        }
        uvec4 _3258 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3259 = _3258.z;
        uint _3261 = (_3259 >> 8u) & 15u;
        float _3356;
        float _3358;
        float _3360;
        float _3362;
        float _3364;
        float _3366;
        if (((4294967295u << _3261) & _3142) == 0u)
        {
            _3356 = _3244;
            _3358 = _3246;
            _3360 = _3248;
            _3362 = _3250;
            _3364 = _3252;
            _3366 = _3254;
        }
        else
        {
            float _3381 = inversesqrt(dot(vec3(_3096, _3097, _3098), vec3(_3096, _3097, _3098)));
            float _3382 = _3381 * _3096;
            float _3383 = _3381 * _3097;
            float _3384 = _3381 * _3098;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_3261 < ((_3259 >> 12u) & 15u))
            {
                float _3357;
                float _3359;
                float _3361;
                float _3363;
                float _3365;
                float _3367;
                float _3495 = _3244;
                float _3496 = _3246;
                float _3497 = _3248;
                float _3498 = _3250;
                float _3499 = _3252;
                float _3500 = _3254;
                uint _3501 = _3261;
                uint _3510;
                bool _3511;
                for (;;)
                {
                    _3510 = texelFetch(g_lightClassification, int((((_3136 << 5u) + (_3122 << 9u)) + (_3501 << 2u)) >> 2u)).x;
                    _3511 = _3510 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3511)
                    {
                        frontier_phi_69_pred = _3500;
                        frontier_phi_69_pred_1 = _3499;
                        frontier_phi_69_pred_2 = _3498;
                        frontier_phi_69_pred_3 = _3497;
                        frontier_phi_69_pred_4 = _3496;
                        frontier_phi_69_pred_5 = _3495;
                    }
                    else
                    {
                        float _3694;
                        float _3695;
                        float _3696;
                        float _3697;
                        float _3698;
                        float _3699;
                        float _3987;
                        float _3988;
                        float _3989;
                        float _3990;
                        float _3991;
                        float _3992;
                        float _3707 = _3495;
                        float _3708 = _3496;
                        float _3709 = _3497;
                        float _3710 = _3498;
                        float _3711 = _3499;
                        float _3712 = _3500;
                        uint _3713 = _3510;
                        uint _3714;
                        vec4 _3739;
                        float _3740;
                        vec4 _3755;
                        vec3 _3767;
                        vec4 _3782;
                        vec4 _3797;
                        float _3843;
                        bool _3844;
                        for (;;)
                        {
                            uint _3724 = ((_3501 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3713));
                            _3714 = (_3713 + 4294967295u) & _3713;
                            uint _3726 = _3724 * 40u;
                            _3739 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3726)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 3u)).x));
                            _3740 = _3739.w;
                            uint _3742 = (_3724 * 40u) + 4u;
                            _3755 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3742)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 3u)).x));
                            uint _3757 = (_3724 * 40u) + 8u;
                            _3767 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3757)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 2u)).x));
                            uint _3769 = (_3724 * 40u) + 16u;
                            _3782 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3769)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 3u)).x));
                            uint _3784 = (_3724 * 40u) + 20u;
                            _3797 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3784)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 3u)).x));
                            uint _3799 = (_3724 * 40u) + 24u;
                            vec4 _3812 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3799)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 3u)).x));
                            uint _3818 = (_3724 * 40u) + 28u;
                            vec4 _3831 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3818)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 3u)).x));
                            _3843 = fma(_3098, _3831.z, fma(_3097, _3831.y, _3831.x * _3096)) + _3831.w;
                            _3844 = !((fma(_3098, _3812.z, fma(_3097, _3812.y, _3812.x * _3096)) + _3812.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3844)
                            {
                                float _3871 = _3739.x - _3096;
                                float _3872 = _3739.y - _3097;
                                float _3873 = _3739.z - _3098;
                                float _3874 = dot(vec3(_3871, _3872, _3873), vec3(_3871, _3872, _3873));
                                float _3877 = inversesqrt(_3874);
                                float _3878 = _3877 * _3871;
                                float _3879 = _3877 * _3872;
                                float _3880 = _3877 * _3873;
                                float _3884 = 1.0 - (_3874 / (_3740 * _3740));
                                float _5150 = isnan(0.0) ? _3884 : (isnan(_3884) ? 0.0 : max(_3884, 0.0));
                                float _3885 = isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0));
                                float _3889 = sqrt(_3874) * _3755.w;
                                float _3891 = 1.39999997615814208984375 / (_3889 + 1.39999997615814208984375);
                                float _3892 = _3891 * _3891;
                                float _3895 = ((1.0 - _3892) * dot(vec3(_3878, _3879, _3880), vec3(_1362, _1365, _1368))) + _3892;
                                float _3898 = _3889 * _3889;
                                float _3902 = (fma(_3098, _3782.z, fma(_3097, _3782.y, _3782.x * _3096)) + _3782.w) / _3843;
                                float _3903 = (fma(_3098, _3797.z, fma(_3097, _3797.y, _3797.x * _3096)) + _3797.w) / _3843;
                                float _3907 = 1.0 - dot(vec2(_3902, _3903), vec2(_3902, _3903));
                                float _5166 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3908 = isnan(1.0) ? _5166 : (isnan(_5166) ? 1.0 : min(_5166, 1.0));
                                float _3909 = _3908 * (((isnan(0.0) ? _3895 : (isnan(_3895) ? 0.0 : max(_3895, 0.0))) * _3885) / ((_3898 * 0.699999988079071044921875) + 1.0));
                                float _3921 = exp2(log2(1.0 / ((_3898 * 3.5) + 5.0)) * 0.25);
                                float _3922 = 1.0 - _1437;
                                float _3929 = sqrt(1.0 - ((1.0 - (_3922 * _3922)) * (1.0 - (_3921 * _3921))));
                                float _3930 = _3929 * _3929;
                                float _3931 = _3930 * _3930;
                                float _3932 = _3878 - _3382;
                                float _3933 = _3879 - _3383;
                                float _3934 = _3880 - _3384;
                                float _3938 = inversesqrt(dot(vec3(_3932, _3933, _3934), vec3(_3932, _3933, _3934)));
                                float _3942 = dot(vec3(_1362, _1365, _1368), vec3((-0.0) - _3382, (-0.0) - _3383, (-0.0) - _3384));
                                float _5177 = isnan(0.0) ? _3942 : (isnan(_3942) ? 0.0 : max(_3942, 0.0));
                                float _3945 = isnan(1.0) ? _5177 : (isnan(_5177) ? 1.0 : min(_5177, 1.0));
                                float _3946 = dot(vec3(_1362, _1365, _1368), vec3(_3938 * _3932, _3938 * _3933, _3938 * _3934));
                                float _5188 = isnan(0.0) ? _3946 : (isnan(_3946) ? 0.0 : max(_3946, 0.0));
                                float _3949 = isnan(1.0) ? _5188 : (isnan(_5188) ? 1.0 : min(_5188, 1.0));
                                float _3953 = ((_3949 * _3949) * (_3931 + (-1.0))) + 1.0;
                                float _3954 = _3891 * _3930;
                                float _3955 = _3954 * _3954;
                                float _3961 = ((1.0 - _3955) * dot(vec3(_1362, _1365, _1368), vec3(_3878, _3879, _3880))) + _3955;
                                float _5199 = isnan(0.0) ? _3961 : (isnan(_3961) ? 0.0 : max(_3961, 0.0));
                                float _3962 = isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0));
                                float _3963 = 1.0 - _3930;
                                float _3973 = (0.5 / (((_3962 * ((_3945 * _3963) + _3930)) + 9.9999999392252902907785028219223e-09) + (((_3962 * _3963) + _3930) * _3945))) * _3962;
                                float _5210 = isnan(0.0) ? _3973 : (isnan(_3973) ? 0.0 : max(_3973, 0.0));
                                float _3983 = (_3908 * _3885) * (((_3931 * 3.1415927410125732421875) * (isnan(1.0) ? _5210 : (isnan(_5210) ? 1.0 : min(_5210, 1.0)))) / ((_3953 * _3953) * ((_3898 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3909 * _3755.z;
                                frontier_phi_75_pred_1 = _3909 * _3755.y;
                                frontier_phi_75_pred_2 = _3909 * _3755.x;
                                frontier_phi_75_pred_3 = _3983 * _3767.z;
                                frontier_phi_75_pred_4 = _3983 * _3767.y;
                                frontier_phi_75_pred_5 = _3983 * _3767.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3992 = frontier_phi_75_pred;
                            _3991 = frontier_phi_75_pred_1;
                            _3990 = frontier_phi_75_pred_2;
                            _3989 = frontier_phi_75_pred_3;
                            _3988 = frontier_phi_75_pred_4;
                            _3987 = frontier_phi_75_pred_5;
                            _3697 = _3990 + _3710;
                            _3698 = _3991 + _3711;
                            _3699 = _3992 + _3712;
                            _3694 = _3987 + _3707;
                            _3695 = _3988 + _3708;
                            _3696 = _3989 + _3709;
                            if (_3714 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3707 = _3694;
                                _3708 = _3695;
                                _3709 = _3696;
                                _3710 = _3697;
                                _3711 = _3698;
                                _3712 = _3699;
                                _3713 = _3714;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3699;
                        frontier_phi_69_pred_1 = _3698;
                        frontier_phi_69_pred_2 = _3697;
                        frontier_phi_69_pred_3 = _3696;
                        frontier_phi_69_pred_4 = _3695;
                        frontier_phi_69_pred_5 = _3694;
                    }
                    _3367 = frontier_phi_69_pred;
                    _3365 = frontier_phi_69_pred_1;
                    _3363 = frontier_phi_69_pred_2;
                    _3361 = frontier_phi_69_pred_3;
                    _3359 = frontier_phi_69_pred_4;
                    _3357 = frontier_phi_69_pred_5;
                    uint _3502 = _3501 + 1u;
                    if (_3502 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3495 = _3357;
                        _3496 = _3359;
                        _3497 = _3361;
                        _3498 = _3363;
                        _3499 = _3365;
                        _3500 = _3367;
                        _3501 = _3502;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _3367;
                frontier_phi_57_58_ladder_1 = _3365;
                frontier_phi_57_58_ladder_2 = _3363;
                frontier_phi_57_58_ladder_3 = _3361;
                frontier_phi_57_58_ladder_4 = _3359;
                frontier_phi_57_58_ladder_5 = _3357;
            }
            else
            {
                frontier_phi_57_58_ladder = _3254;
                frontier_phi_57_58_ladder_1 = _3252;
                frontier_phi_57_58_ladder_2 = _3250;
                frontier_phi_57_58_ladder_3 = _3248;
                frontier_phi_57_58_ladder_4 = _3246;
                frontier_phi_57_58_ladder_5 = _3244;
            }
            _3356 = frontier_phi_57_58_ladder_5;
            _3358 = frontier_phi_57_58_ladder_4;
            _3360 = frontier_phi_57_58_ladder_3;
            _3362 = frontier_phi_57_58_ladder_2;
            _3364 = frontier_phi_57_58_ladder_1;
            _3366 = frontier_phi_57_58_ladder;
        }
        float _3371 = isnan(1.0) ? _1421 : (isnan(_1421) ? 1.0 : min(_1421, 1.0));
        _3154 = (_3371 * _3362) + _2591;
        _3156 = (_3371 * _3364) + _2593;
        _3158 = (_3371 * _3366) + _2595;
        _3160 = ((_3356 * _1406) * _3371) + _2936;
        _3162 = ((_3358 * _1408) * _3371) + _2938;
        _3164 = ((_3360 * _1409) * _3371) + _2940;
    }
    else
    {
        _3154 = _2591;
        _3156 = _2593;
        _3158 = _2595;
        _3160 = _2936;
        _3162 = _2938;
        _3164 = _2940;
    }
    float _5226 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
    float _5237 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
    float _5248 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
    float _5259 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    float _3189 = cbInstanceData._m0[_1381 + 6u].w * (isnan(1.0) ? _5259 : (isnan(_5259) ? 1.0 : min(_5259, 1.0)));
    float _3194 = _1343 / cbSceneParam._m0[86u].x;
    float _3195 = _1344 / cbSceneParam._m0[86u].y;
    vec4 _3209 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3194, _3195, (log2((isnan(cbSceneParam._m0[77u].w) ? _1278 : (isnan(_1278) ? cbSceneParam._m0[77u].w : min(_1278, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3211 = _3209.x;
    float _3212 = _3209.y;
    float _3213 = _3209.z;
    float _3214 = _3209.w;
    float _3306;
    float _3308;
    float _3310;
    float _3312;
    if (_1278 > cbSceneParam._m0[78u].w)
    {
        float _3269 = isnan(_1278) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1278 : min(cbSceneParam._m0[80u].w, _1278));
        float _3270 = _3269 / _1278;
        float _3281 = _3270 * _1328;
        float _3282 = _1329 * _3270;
        float _3283 = (-0.0) - _3282;
        float _3284 = _3270 * _1330;
        float _3286 = (cbSceneParam._m0[77u].w * _3283) / _3269;
        float _3287 = _3286 + cbSceneParam._m0[79u].w;
        float _3288 = cbSceneParam._m0[79u].w - _3282;
        float _3294 = sqrt(((_3281 * _3281) + (_3282 * _3282)) + (_3284 * _3284));
        float _3297 = (1.0 - (cbSceneParam._m0[77u].w / _3269)) * _3294;
        float _3302 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3304 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3457;
        if (abs((_3283 - _3286) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3457 = ((((_3287 > 0.0) ? exp2(_3302 * _3287) : (2.0 - exp2(_3304 * _3287))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3297;
        }
        else
        {
            float _3417 = 1.0 / cbSceneParam._m0[80u].x;
            float _3418 = isnan(_3288) ? _3287 : (isnan(_3287) ? _3288 : max(_3287, _3288));
            float _3419 = isnan(_3288) ? _3287 : (isnan(_3287) ? _3288 : min(_3287, _3288));
            float _3428 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : min(_3418, 0.0));
            float _3429 = isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : min(_3419, 0.0));
            _3457 = ((abs(_3294 / _3283) * cbSceneParam._m0[80u].y) * ((((_3428 - _3429) * 2.0) - ((exp2(_3302 * (isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0)))) - exp2(_3302 * (isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : max(_3419, 0.0))))) * _3417)) - ((exp2(_3304 * _3428) - exp2(_3304 * _3429)) * _3417))) + (_3297 * cbSceneParam._m0[80u].z);
        }
        vec4 _3459 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3194, _3195, 1.0), 0.0);
        float _3468 = exp2((_3457 * (-1.44269502162933349609375)) * (1.0 - _3459.w));
        float _3469 = log2(_3468);
        float _3485 = log2(_3214);
        _3306 = (exp2(_3485 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3469 * cbSceneParam._m0[78u].x)) * _3459.x) / cbSceneParam._m0[78u].x)) + _3211;
        _3308 = (exp2(_3485 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3469 * cbSceneParam._m0[78u].y)) * _3459.y) / cbSceneParam._m0[78u].y)) + _3212;
        _3310 = (exp2(_3485 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3469 * cbSceneParam._m0[78u].z)) * _3459.z) / cbSceneParam._m0[78u].z)) + _3213;
        _3312 = _3468 * _3214;
    }
    else
    {
        _3306 = _3211;
        _3308 = _3212;
        _3310 = _3213;
        _3312 = _3214;
    }
    float _3324 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3325 = _3324 == 3.0;
    float _3326 = log2(_3312);
    float _3333 = exp2(_3326 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5226 : (isnan(_5226) ? 1.0 : min(_5226, 1.0))) * (_3154 + ((isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0))) * _1421))) + ((_3160 + ((isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0))) * _2231)) * cbPerFrame._m0[3u].x));
    float _3334 = exp2(_3326 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5237 : (isnan(_5237) ? 1.0 : min(_5237, 1.0))) * (_3156 + ((isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0))) * _1421))) + ((_3162 + ((isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0))) * _2231)) * cbPerFrame._m0[3u].x));
    float _3335 = exp2(_3326 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5248 : (isnan(_5248) ? 1.0 : min(_5248, 1.0))) * (_3158 + ((isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0))) * _1421))) + ((_3164 + ((isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0))) * _2231)) * cbPerFrame._m0[3u].x));
    float _3344 = (_3324 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3344 * (_3325 ? _3333 : (_3333 + (cbSceneParam._m0[72u].w * _3306)));
    SV_Target.y = _3344 * (_3325 ? _3334 : (_3334 + (cbSceneParam._m0[72u].w * _3308)));
    SV_Target.z = _3344 * (_3325 ? _3335 : (_3335 + (cbSceneParam._m0[72u].w * _3310)));
    SV_Target.w = _3189;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3189;
}


