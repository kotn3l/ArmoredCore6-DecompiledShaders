#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in float TEXCOORD_5;
layout(location = 6, component = 1) in float TEXCOORD_6;
layout(location = 7) in vec4 TEXCOORD_7;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1800;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _240 = _239 * _231;
    float _241 = _239 * _232;
    float _242 = _239 * _233;
    float _252 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _253 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _254 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _258 = inversesqrt(dot(vec3(_252, _253, _254), vec3(_252, _253, _254)));
    float _259 = _258 * _252;
    float _260 = _258 * _253;
    float _261 = _258 * _254;
    float _265 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _266 = _265 * NORMAL.x;
    float _267 = _265 * NORMAL.y;
    float _268 = _265 * NORMAL.z;
    float _272 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _273 = _272 * TANGENT.x;
    float _274 = _272 * TANGENT.y;
    float _275 = _272 * TANGENT.z;
    float _279 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _280 = _279 * TANGENT_2.x;
    float _281 = _279 * TANGENT_2.y;
    float _282 = _279 * TANGENT_2.z;
    float _287;
    float _288;
    float _289;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _287 = (-0.0) - _266;
        _288 = (-0.0) - _267;
        _289 = (-0.0) - _268;
    }
    else
    {
        _287 = _266;
        _288 = _267;
        _289 = _268;
    }
    vec4 _309 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _321 = 1.0 - ((1.0 - _309.z) * 1.39999997615814208984375);
    float _4410 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _322 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
    float _324 = 1.0 - ((1.0 - _309.x) * 1.39999997615814208984375);
    float _4421 = isnan(0.0) ? _324 : (isnan(_324) ? 0.0 : max(_324, 0.0));
    float _325 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
    float _327 = 1.0 - ((1.0 - _309.y) * 1.39999997615814208984375);
    float _4432 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _328 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
    float _330 = (_325 + _322) + _328;
    float _337 = (_330 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _338 = (_330 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _339 = (_330 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _364 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _373 = 1.0 - ((1.0 - _364.x) * 1.39999997615814208984375);
    float _4443 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _374 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
    float _384 = (_374 * ((cbMtdParam._m0[9u].x - _337) + ((1.0 - cbMtdParam._m0[9u].x) * _330))) + _337;
    float _385 = (_374 * ((cbMtdParam._m0[9u].y - _338) + ((1.0 - cbMtdParam._m0[9u].y) * _330))) + _338;
    float _386 = (_374 * ((cbMtdParam._m0[9u].z - _339) + ((1.0 - cbMtdParam._m0[9u].z) * _330))) + _339;
    float _399 = 1.0 - ((1.0 - _364.y) * 1.39999997615814208984375);
    float _4454 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _400 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
    float _410 = (((cbMtdParam._m0[17u].x - _384) + ((1.0 - cbMtdParam._m0[17u].x) * _330)) * _400) + _384;
    float _411 = (((cbMtdParam._m0[17u].y - _385) + ((1.0 - cbMtdParam._m0[17u].y) * _330)) * _400) + _385;
    float _412 = (((cbMtdParam._m0[17u].z - _386) + ((1.0 - cbMtdParam._m0[17u].z) * _330)) * _400) + _386;
    float _426 = 1.0 - ((1.0 - _364.z) * 1.39999997615814208984375);
    float _4465 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _427 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
    float _457 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w)).x * cbMtdParam._m0[23u].w;
    float _472 = ((cbMtdParam._m0[21u].z * (-1.39999997615814208984375)) * ((TEXCOORD_6 - _457) + (cbMtdParam._m0[22u].y * TEXCOORD_6))) + 1.0;
    float _4476 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _474 = 1.0 - (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)));
    float _482 = ((cbMtdParam._m0[21u].y * (-1.39999997615814208984375)) * ((TEXCOORD_5 - _457) + (cbMtdParam._m0[22u].z * TEXCOORD_5))) + 1.0;
    float _4487 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _484 = 1.0 - (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0)));
    vec4 _502 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _504 = _502.x;
    float _505 = _502.y;
    float _506 = _502.z;
    float _507 = cbMtdParam._m0[10u].x * _484;
    float _509 = cbMtdParam._m0[10u].y * _484;
    float _511 = cbMtdParam._m0[10u].z * _484;
    float _528 = ((_504 * (cbMtdParam._m0[16u].x - _507)) * _474) + (_507 * _504);
    float _529 = ((_505 * (cbMtdParam._m0[16u].y - _509)) * _474) + (_509 * _505);
    float _530 = ((_506 * (cbMtdParam._m0[16u].z - _511)) * _474) + (_511 * _506);
    float _551 = cbMtdParam._m0[22u].x * (-1.39999997615814208984375);
    float _555 = (_551 * ((TEXCOORD_7.x - _457) + (cbMtdParam._m0[21u].x * TEXCOORD_7.x))) + 1.0;
    float _556 = (_551 * ((TEXCOORD_7.y - _457) + (cbMtdParam._m0[21u].x * TEXCOORD_7.y))) + 1.0;
    float _557 = (_551 * ((TEXCOORD_7.z - _457) + (cbMtdParam._m0[21u].x * TEXCOORD_7.z))) + 1.0;
    float _4498 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _4509 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _4520 = isnan(0.0) ? _557 : (isnan(_557) ? 0.0 : max(_557, 0.0));
    float _566 = (1.0 - cbMtdParam._m0[23u].y) + _325;
    float _569 = _566 * (1.0 - (isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))));
    float _570 = _566 * (1.0 - (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))));
    float _571 = ((_325 + 1.0) - cbMtdParam._m0[23u].y) * (1.0 - (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))));
    float _581 = _484 + _474;
    float _582 = _581 + _569;
    float _583 = _581 + _570;
    float _584 = _581 + _571;
    float _585 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _586 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _587 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _588 = isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0));
    float _589 = isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0));
    float _590 = isnan(1.0) ? _587 : (isnan(_587) ? 1.0 : min(_587, 1.0));
    vec4 _608 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _613 = _608.w;
    float _614 = _608.x * cbMtdParam._m0[12u].x;
    float _615 = _608.y * cbMtdParam._m0[12u].y;
    float _616 = _608.z * cbMtdParam._m0[12u].z;
    vec4 _635 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _649 = (((_635.x * cbMtdParam._m0[13u].x) - _614) * _325) + _614;
    float _650 = (((_635.y * cbMtdParam._m0[13u].y) - _615) * _325) + _615;
    float _651 = (((_635.z * cbMtdParam._m0[13u].z) - _616) * _325) + _616;
    vec4 _669 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _683 = (((_669.x * cbMtdParam._m0[14u].x) - _649) * _328) + _649;
    float _684 = (((_669.y * cbMtdParam._m0[14u].y) - _650) * _328) + _650;
    float _685 = (((_669.z * cbMtdParam._m0[14u].z) - _651) * _328) + _651;
    vec4 _703 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _717 = (((_703.x * cbMtdParam._m0[15u].x) - _683) * _322) + _683;
    float _718 = (((_703.y * cbMtdParam._m0[15u].y) - _684) * _322) + _684;
    float _719 = (((_703.z * cbMtdParam._m0[15u].z) - _685) * _322) + _685;
    float _739 = ((_717 - (_717 * _588)) + (((_588 * 4.55000019073486328125) * ((_569 * ((cbMtdParam._m0[11u].x * _504) - _528)) + _528)) * _717)) * ((((cbMtdParam._m0[18u].x - _410) + ((1.0 - cbMtdParam._m0[18u].x) * _330)) * _427) + _410);
    float _740 = ((_718 - (_718 * _589)) + (((_589 * 4.55000019073486328125) * ((_570 * ((cbMtdParam._m0[11u].y * _505) - _529)) + _529)) * _718)) * ((((cbMtdParam._m0[18u].y - _411) + ((1.0 - cbMtdParam._m0[18u].y) * _330)) * _427) + _411);
    float _741 = ((_719 - (_590 * _719)) + (((_590 * 4.55000019073486328125) * ((_571 * ((cbMtdParam._m0[11u].z * _506) - _530)) + _530)) * _719)) * ((((cbMtdParam._m0[18u].z - _412) + ((1.0 - cbMtdParam._m0[18u].z) * _330)) * _427) + _412);
    float _755 = ((cbMtdParam._m0[20u].w - cbMtdParam._m0[24u].x) * _588) + cbMtdParam._m0[24u].x;
    float _758 = ((cbMtdParam._m0[20u].x - _755) * _325) + _755;
    float _761 = ((cbMtdParam._m0[20u].y - _758) * _328) + _758;
    float _764 = ((cbMtdParam._m0[20u].z - _761) * _322) + _761;
    vec4 _776 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _780 = _776.z;
    float _784 = (_776.x * 2.0) + (-1.0);
    float _786 = (_776.y * 2.0) + (-1.0);
    float _787 = dot(vec2(_784, _786), vec2(_784, _786));
    float _4561 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _792 = sqrt(1.0 - (isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))));
    float _795 = fma(_792, _287, fma(_786, _280, _784 * _259));
    float _798 = fma(_792, _288, fma(_786, _281, _784 * _260));
    float _801 = fma(_792, _289, fma(_786, _282, _784 * _261));
    float _805 = inversesqrt(dot(vec3(_795, _798, _801), vec3(_795, _798, _801)));
    float _806 = _805 * _795;
    float _807 = _805 * _798;
    float _808 = _805 * _801;
    vec4 _821 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _827 = (_821.x * 2.0) + (-1.0);
    float _828 = (_821.y * 2.0) + (-1.0);
    float _829 = dot(vec2(_827, _828), vec2(_827, _828));
    float _4572 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _834 = sqrt(1.0 - (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0))));
    float _837 = fma(_834, _287, fma(_828, _280, _827 * _259));
    float _840 = fma(_834, _288, fma(_828, _281, _827 * _260));
    float _843 = fma(_834, _289, fma(_828, _282, _827 * _261));
    float _847 = inversesqrt(dot(vec3(_837, _840, _843), vec3(_837, _840, _843)));
    float _848 = _847 * _837;
    float _849 = _847 * _840;
    float _850 = _847 * _843;
    float _853 = fma(_850, _242, fma(_849, _241, _848 * _240));
    float _856 = fma(_850, _275, fma(_849, _274, _848 * _273));
    float _859 = fma(_850, _289, fma(_849, _288, _848 * _287));
    float _863 = inversesqrt(dot(vec3(_853, _856, _859), vec3(_853, _856, _859)));
    vec4 _876 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _882 = (_876.x * 2.0) + (-1.0);
    float _883 = (_876.y * 2.0) + (-1.0);
    float _884 = dot(vec2(_882, _883), vec2(_882, _883));
    float _4583 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _889 = sqrt(1.0 - (isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0))));
    float _892 = fma(_889, _287, fma(_883, _280, _882 * _259));
    float _895 = fma(_889, _288, fma(_883, _281, _882 * _260));
    float _898 = fma(_889, _289, fma(_883, _282, _882 * _261));
    float _902 = inversesqrt(dot(vec3(_892, _895, _898), vec3(_892, _895, _898)));
    float _903 = _902 * _892;
    float _904 = _902 * _895;
    float _905 = _902 * _898;
    float _908 = fma(_905, _242, fma(_904, _241, _903 * _240));
    float _911 = fma(_905, _275, fma(_904, _274, _903 * _273));
    float _914 = fma(_905, _289, fma(_904, _288, _903 * _287));
    float _918 = inversesqrt(dot(vec3(_908, _911, _914), vec3(_908, _911, _914)));
    vec4 _931 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _937 = (_931.x * 2.0) + (-1.0);
    float _938 = (_931.y * 2.0) + (-1.0);
    float _939 = dot(vec2(_937, _938), vec2(_937, _938));
    float _4594 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _944 = sqrt(1.0 - (isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0))));
    float _947 = fma(_944, _287, fma(_938, _280, _937 * _259));
    float _950 = fma(_944, _288, fma(_938, _281, _937 * _260));
    float _953 = fma(_944, _289, fma(_938, _282, _937 * _261));
    float _957 = inversesqrt(dot(vec3(_947, _950, _953), vec3(_947, _950, _953)));
    float _958 = _957 * _947;
    float _959 = _957 * _950;
    float _960 = _957 * _953;
    float _963 = fma(_960, _242, fma(_959, _241, _958 * _240));
    float _966 = fma(_960, _275, fma(_959, _274, _958 * _273));
    float _969 = fma(_960, _289, fma(_959, _288, _958 * _287));
    float _973 = inversesqrt(dot(vec3(_963, _966, _969), vec3(_963, _966, _969)));
    float _979 = fma(_808, _242, fma(_807, _241, _806 * _240));
    float _982 = fma(_808, _275, fma(_807, _274, _806 * _273));
    float _985 = fma(_808, _289, fma(_807, _288, _806 * _287));
    float _989 = inversesqrt(dot(vec3(_979, _982, _985), vec3(_979, _982, _985)));
    float _990 = _989 * _979;
    float _991 = _989 * _982;
    float _992 = _989 * _985;
    float _999 = (((_973 * _963) - _990) * _325) + _990;
    float _1000 = (((_973 * _966) - _991) * _325) + _991;
    float _1001 = (((_973 * _969) - _992) * _325) + _992;
    vec4 _1014 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _1020 = (_1014.x * 2.0) + (-1.0);
    float _1021 = (_1014.y * 2.0) + (-1.0);
    float _1022 = dot(vec2(_1020, _1021), vec2(_1020, _1021));
    float _4605 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1027 = sqrt(1.0 - (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))));
    float _1030 = fma(_1027, _287, fma(_1021, _280, _1020 * _259));
    float _1033 = fma(_1027, _288, fma(_1021, _281, _1020 * _260));
    float _1036 = fma(_1027, _289, fma(_1021, _282, _1020 * _261));
    float _1040 = inversesqrt(dot(vec3(_1030, _1033, _1036), vec3(_1030, _1033, _1036)));
    float _1041 = _1040 * _1030;
    float _1042 = _1040 * _1033;
    float _1043 = _1040 * _1036;
    float _1046 = fma(_1043, _242, fma(_1042, _241, _1041 * _240));
    float _1049 = fma(_1043, _275, fma(_1042, _274, _1041 * _273));
    float _1052 = fma(_1043, _289, fma(_1042, _288, _1041 * _287));
    float _1056 = inversesqrt(dot(vec3(_1046, _1049, _1052), vec3(_1046, _1049, _1052)));
    float _1066 = (((_1056 * _1046) - _999) * _328) + _999;
    float _1067 = (((_1056 * _1049) - _1000) * _328) + _1000;
    float _1068 = (((_1056 * _1052) - _1001) * _328) + _1001;
    vec4 _1081 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1087 = (_1081.x * 2.0) + (-1.0);
    float _1088 = (_1081.y * 2.0) + (-1.0);
    float _1089 = dot(vec2(_1087, _1088), vec2(_1087, _1088));
    float _4616 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _1094 = sqrt(1.0 - (isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0))));
    float _1097 = fma(_1094, _287, fma(_1088, _280, _1087 * _259));
    float _1100 = fma(_1094, _288, fma(_1088, _281, _1087 * _260));
    float _1103 = fma(_1094, _289, fma(_1088, _282, _1087 * _261));
    float _1107 = inversesqrt(dot(vec3(_1097, _1100, _1103), vec3(_1097, _1100, _1103)));
    float _1108 = _1107 * _1097;
    float _1109 = _1107 * _1100;
    float _1110 = _1107 * _1103;
    float _1113 = fma(_1110, _242, fma(_1109, _241, _1108 * _240));
    float _1116 = fma(_1110, _275, fma(_1109, _274, _1108 * _273));
    float _1119 = fma(_1110, _289, fma(_1109, _288, _1108 * _287));
    float _1123 = inversesqrt(dot(vec3(_1113, _1116, _1119), vec3(_1113, _1116, _1119)));
    float _1133 = (((_1123 * _1119) - _1068) * _322) + _1068;
    vec4 _1145 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1151 = (_1145.x * 2.0) + (-1.0);
    float _1152 = (_1145.y * 2.0) + (-1.0);
    float _1153 = dot(vec2(_1151, _1152), vec2(_1151, _1152));
    float _4627 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    float _1158 = sqrt(1.0 - (isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))));
    float _1161 = fma(_1158, _287, fma(_1152, _280, _1151 * _259));
    float _1164 = fma(_1158, _288, fma(_1152, _281, _1151 * _260));
    float _1167 = fma(_1158, _289, fma(_1152, _282, _1151 * _261));
    float _1171 = inversesqrt(dot(vec3(_1161, _1164, _1167), vec3(_1161, _1164, _1167)));
    float _1172 = _1171 * _1161;
    float _1173 = _1171 * _1164;
    float _1174 = _1171 * _1167;
    float _1177 = fma(_1174, _242, fma(_1173, _241, _1172 * _240));
    float _1180 = fma(_1174, _275, fma(_1173, _274, _1172 * _273));
    float _1183 = fma(_1174, _289, fma(_1173, _288, _1172 * _287));
    float _1187 = inversesqrt(dot(vec3(_1177, _1180, _1183), vec3(_1177, _1180, _1183)));
    vec4 _1225 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _1239 = (((((((_908 * _474) * _918) * cbMtdParam._m0[22u].w) + ((((_582 * _566) * _853) * _863) * cbMtdParam._m0[23u].x)) + _1066) + (((_1123 * _1113) - _1066) * _322)) + (((_1177 * _484) * _1187) * cbMtdParam._m0[21u].w)) + (((_1225.x * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _1244 = (((((((_911 * _474) * _918) * cbMtdParam._m0[22u].w) + ((((_583 * _566) * _856) * _863) * cbMtdParam._m0[23u].x)) + _1067) + (((_1123 * _1116) - _1067) * _322)) + (((_1180 * _484) * _1187) * cbMtdParam._m0[21u].w)) + (((_1225.y * 2.0) + (-1.0)) * cbMtdParam._m0[23u].z);
    float _1247 = fma(_1133, _287, fma(_1244, _273, _1239 * _240));
    float _1250 = fma(_1133, _288, fma(_1244, _274, _1239 * _241));
    float _1253 = fma(_1133, _289, fma(_1244, _275, _1239 * _242));
    float _1257 = inversesqrt(dot(vec3(_1247, _1250, _1253), vec3(_1247, _1250, _1253)));
    float _1258 = _1257 * _1247;
    float _1259 = _1257 * _1250;
    float _1260 = _1257 * _1253;
    float _4638 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _1261 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
    float _4649 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _1262 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
    float _4660 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _4671 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _4682 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _4693 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _1266 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
    float _1282 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1322 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1332 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1322);
    float _1333 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1322);
    float _1334 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1322);
    float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
    float _1339 = _1332 * _1338;
    float _1340 = _1333 * _1338;
    float _1341 = _1334 * _1338;
    float _1347 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1348 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1366 = fma(_1260, cbSceneParam._m0[5u].z, fma(_1259, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1258));
    float _1369 = fma(_1260, cbSceneParam._m0[6u].z, fma(_1259, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1258));
    float _1372 = fma(_1260, cbSceneParam._m0[7u].z, fma(_1259, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1258));
    uint _1385 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1387 = (_1385 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1393 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0)))) * cbInstanceData._m0[_1387].x;
    float _1394 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0)))) * cbInstanceData._m0[_1387].y;
    float _1395 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) * cbInstanceData._m0[_1387].z;
    float _4704 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
    float _1396 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
    float _4715 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
    float _1397 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
    float _4726 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
    float _1398 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
    float _1399 = 1.0 - _1266;
    float _1400 = _1396 * _1399;
    float _1401 = _1397 * _1399;
    float _1402 = _1398 * _1399;
    float _1407 = (_1396 + (-0.039999999105930328369140625)) * _1266;
    float _1408 = (_1397 + (-0.039999999105930328369140625)) * _1266;
    float _1409 = (_1398 + (-0.039999999105930328369140625)) * _1266;
    float _1410 = _1407 + 0.039999999105930328369140625;
    float _1412 = _1408 + 0.039999999105930328369140625;
    float _1413 = _1409 + 0.039999999105930328369140625;
    vec4 _1422 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1347, cbSceneParam._m0[86u].y * _1348));
    float _1425 = _1422.x * TEXCOORD_7.w;
    float _1426 = dot(vec3(_1258, _1259, _1260), vec3(_1339, _1340, _1341));
    float _1429 = _1426 * 2.0;
    float _1433 = (_1429 * _1258) - _1339;
    float _1434 = (_1429 * _1259) - _1340;
    float _1435 = (_1429 * _1260) - _1341;
    float _1439 = abs(dot(vec3(_1339, _1340, _1341), vec3(_1258, _1259, _1260)));
    float _4737 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
    float _1441 = sqrt(_1262);
    float _1454 = exp2((_1441 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1441 * 3.0));
    float _1460 = (1.0 - _1454) * ((_1441 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1461 = _1454 * _1441;
    float _1489 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1493 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1497 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1799;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1524 = fma(_1497, cbModelParam._m0[26u].z, fma(_1493, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1489));
        float _1528 = fma(_1497, cbModelParam._m0[27u].z, fma(_1493, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1489));
        float _1532 = fma(_1497, cbModelParam._m0[28u].z, fma(_1493, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1489));
        float _1557 = _1489 + _1258;
        float _1558 = _1493 + _1259;
        float _1559 = _1497 + _1260;
        float _1569 = fma(_1559, cbModelParam._m0[26u].z, fma(_1558, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1557)) - _1524;
        float _1570 = fma(_1559, cbModelParam._m0[27u].z, fma(_1558, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1557)) - _1528;
        float _1571 = fma(_1559, cbModelParam._m0[28u].z, fma(_1558, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1557)) - _1532;
        float _1575 = inversesqrt(dot(vec3(_1569, _1570, _1571), vec3(_1569, _1570, _1571)));
        float _1588 = ((_1575 * _1569) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1524 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1589 = ((_1575 * _1570) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1528 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1590 = ((_1575 * _1571) / cbModelParam._m0[34u].z) + ((((((_1532 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1593 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1588, _1589, _1590), 0.0);
        vec4 _1600 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1588, _1589, _1590), 0.0);
        vec4 _1607 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1588, _1589, _1590), 0.0);
        vec4 _1614 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1588, _1589, _1590), 0.0);
        float _1627 = exp2((_1593.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1593.x + (-0.5));
        float _1629 = _1627 * (_1593.y + (-0.5));
        float _1630 = _1627 * (_1593.z + (-0.5));
        float _1637 = exp2((_1600.w + (-0.5)) * 20.0) * 2.0;
        float _1638 = _1637 * (_1600.x + (-0.5));
        float _1639 = _1637 * (_1600.y + (-0.5));
        float _1640 = _1637 * (_1600.z + (-0.5));
        float _1647 = exp2((_1607.w + (-0.5)) * 20.0) * 2.0;
        float _1648 = _1647 * (_1607.x + (-0.5));
        float _1649 = _1647 * (_1607.y + (-0.5));
        float _1650 = _1647 * (_1607.z + (-0.5));
        float _1657 = exp2((_1614.w + (-0.5)) * 20.0) * 2.0;
        float _1658 = _1657 * (_1614.x + (-0.5));
        float _1659 = _1657 * (_1614.y + (-0.5));
        float _1660 = _1657 * (_1614.z + (-0.5));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1664 = _1628 * 0.5;
        float _1665 = _1638 * 0.5;
        float _1666 = _1648 * 0.5;
        float _1667 = dot(vec3(_1664, _1665, _1666), vec3(_1664, _1665, _1666));
        float _1672 = (_1667 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1667);
        float _1681 = (dot(vec3(_1258, _1259, _1260), vec3(_1672 * _1664, _1672 * _1665, _1672 * _1666)) + 1.0) * 0.5;
        float _4763 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
        float _1691 = sqrt(((_1665 * _1665) + (_1664 * _1664)) + (_1666 * _1666)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4774 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1692 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
        float _1693 = _1692 * 2.0;
        float _1697 = (1.0 - _1692) / (_1692 + 1.0);
        float _4785 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
        float _1707 = ((((1.0 - _1698) * (_1693 + 2.0)) * exp2(log2(isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0))) * (_1693 + 1.0))) + _1698) * _1661;
        float _1708 = _1629 * 0.5;
        float _1709 = _1639 * 0.5;
        float _1710 = _1649 * 0.5;
        float _1711 = dot(vec3(_1708, _1709, _1710), vec3(_1708, _1709, _1710));
        float _1716 = (_1711 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1711);
        float _1724 = (dot(vec3(_1258, _1259, _1260), vec3(_1716 * _1708, _1716 * _1709, _1716 * _1710)) + 1.0) * 0.5;
        float _4796 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1733 = sqrt(((_1709 * _1709) + (_1708 * _1708)) + (_1710 * _1710)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4807 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1734 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
        float _1735 = _1734 * 2.0;
        float _1739 = (1.0 - _1734) / (_1734 + 1.0);
        float _4818 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0));
        float _1749 = ((((1.0 - _1740) * (_1735 + 2.0)) * exp2(log2(isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0))) * (_1735 + 1.0))) + _1740) * _1662;
        float _1750 = _1630 * 0.5;
        float _1751 = _1640 * 0.5;
        float _1752 = _1650 * 0.5;
        float _1753 = dot(vec3(_1750, _1751, _1752), vec3(_1750, _1751, _1752));
        float _1758 = (_1753 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1753);
        float _1766 = (dot(vec3(_1258, _1259, _1260), vec3(_1758 * _1750, _1758 * _1751, _1758 * _1752)) + 1.0) * 0.5;
        float _4829 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
        float _1775 = sqrt(((_1751 * _1751) + (_1750 * _1750)) + (_1752 * _1752)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4840 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1776 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
        float _1777 = _1776 * 2.0;
        float _1781 = (1.0 - _1776) / (_1776 + 1.0);
        float _4851 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
        float _1782 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
        float _1791 = ((((1.0 - _1782) * (_1777 + 2.0)) * exp2(log2(isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0))) * (_1777 + 1.0))) + _1782) * _1663;
        _1799 = _1630;
        _1801 = _1629;
        _1802 = _1628;
        _1803 = _1640;
        _1804 = _1639;
        _1805 = _1638;
        _1806 = _1650;
        _1807 = _1649;
        _1808 = _1648;
        _1809 = _1663;
        _1810 = _1662;
        _1811 = _1661;
        _1812 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)));
        _1813 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
        _1814 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0)));
    }
    else
    {
        _1799 = _1800;
        _1801 = _1800;
        _1802 = _1800;
        _1803 = _1800;
        _1804 = _1800;
        _1805 = _1800;
        _1806 = _1800;
        _1807 = _1800;
        _1808 = _1800;
        _1809 = _1800;
        _1810 = _1800;
        _1811 = _1800;
        _1812 = 0.0;
        _1813 = 0.0;
        _1814 = 0.0;
    }
    float _2109;
    float _2110;
    float _2111;
    float _2112;
    float _2113;
    float _2114;
    float _2115;
    float _2116;
    float _2117;
    float _2118;
    float _2119;
    float _2120;
    float _2121;
    float _2122;
    float _2123;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1840 = fma(_1497, cbModelParam._m0[30u].z, fma(_1493, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1489));
        float _1844 = fma(_1497, cbModelParam._m0[31u].z, fma(_1493, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1489));
        float _1848 = fma(_1497, cbModelParam._m0[32u].z, fma(_1493, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1489));
        float _1871 = _1489 + _1258;
        float _1872 = _1493 + _1259;
        float _1873 = _1497 + _1260;
        float _1883 = fma(_1873, cbModelParam._m0[30u].z, fma(_1872, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1871)) - _1840;
        float _1884 = fma(_1873, cbModelParam._m0[31u].z, fma(_1872, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1871)) - _1844;
        float _1885 = fma(_1873, cbModelParam._m0[32u].z, fma(_1872, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1871)) - _1848;
        float _1889 = inversesqrt(dot(vec3(_1883, _1884, _1885), vec3(_1883, _1884, _1885)));
        float _1902 = ((_1889 * _1883) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1840 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1903 = ((_1889 * _1884) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1844 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1904 = ((_1889 * _1885) / cbModelParam._m0[35u].z) + ((((((_1848 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1906 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1902, _1903, _1904), 0.0);
        vec4 _1913 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1902, _1903, _1904), 0.0);
        vec4 _1920 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1902, _1903, _1904), 0.0);
        vec4 _1927 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1902, _1903, _1904), 0.0);
        float _1939 = exp2((_1906.w + (-0.5)) * 20.0) * 2.0;
        float _1940 = _1939 * (_1906.x + (-0.5));
        float _1941 = _1939 * (_1906.y + (-0.5));
        float _1942 = _1939 * (_1906.z + (-0.5));
        float _1949 = exp2((_1913.w + (-0.5)) * 20.0) * 2.0;
        float _1950 = _1949 * (_1913.x + (-0.5));
        float _1951 = _1949 * (_1913.y + (-0.5));
        float _1952 = _1949 * (_1913.z + (-0.5));
        float _1959 = exp2((_1920.w + (-0.5)) * 20.0) * 2.0;
        float _1960 = _1959 * (_1920.x + (-0.5));
        float _1961 = _1959 * (_1920.y + (-0.5));
        float _1962 = _1959 * (_1920.z + (-0.5));
        float _1969 = exp2((_1927.w + (-0.5)) * 20.0) * 2.0;
        float _1970 = _1969 * (_1927.x + (-0.5));
        float _1971 = _1969 * (_1927.y + (-0.5));
        float _1972 = _1969 * (_1927.z + (-0.5));
        float _1973 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
        float _1974 = isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0));
        float _1975 = isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0));
        float _1976 = _1940 * 0.5;
        float _1977 = _1950 * 0.5;
        float _1978 = _1960 * 0.5;
        float _1979 = dot(vec3(_1976, _1977, _1978), vec3(_1976, _1977, _1978));
        float _1984 = (_1979 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1979);
        float _1992 = (dot(vec3(_1258, _1259, _1260), vec3(_1984 * _1976, _1984 * _1977, _1984 * _1978)) + 1.0) * 0.5;
        float _4892 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _2001 = sqrt(((_1977 * _1977) + (_1976 * _1976)) + (_1978 * _1978)) / (_1973 + 9.9999997473787516355514526367188e-06);
        float _4903 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2002 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
        float _2003 = _2002 * 2.0;
        float _2007 = (1.0 - _2002) / (_2002 + 1.0);
        float _4914 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
        float _2008 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
        float _2017 = ((((1.0 - _2008) * (_2003 + 2.0)) * exp2(log2(isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0))) * (_2003 + 1.0))) + _2008) * _1973;
        float _2018 = _1941 * 0.5;
        float _2019 = _1951 * 0.5;
        float _2020 = _1961 * 0.5;
        float _2021 = dot(vec3(_2018, _2019, _2020), vec3(_2018, _2019, _2020));
        float _2026 = (_2021 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2021);
        float _2034 = (dot(vec3(_1258, _1259, _1260), vec3(_2026 * _2018, _2026 * _2019, _2026 * _2020)) + 1.0) * 0.5;
        float _4925 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
        float _2043 = sqrt(((_2019 * _2019) + (_2018 * _2018)) + (_2020 * _2020)) / (_1974 + 9.9999997473787516355514526367188e-06);
        float _4936 = isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0));
        float _2044 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
        float _2045 = _2044 * 2.0;
        float _2049 = (1.0 - _2044) / (_2044 + 1.0);
        float _4947 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2050 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
        float _2059 = ((((1.0 - _2050) * (_2045 + 2.0)) * exp2(log2(isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0))) * (_2045 + 1.0))) + _2050) * _1974;
        float _2060 = _1942 * 0.5;
        float _2061 = _1952 * 0.5;
        float _2062 = _1962 * 0.5;
        float _2063 = dot(vec3(_2060, _2061, _2062), vec3(_2060, _2061, _2062));
        float _2068 = (_2063 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2063);
        float _2076 = (dot(vec3(_1258, _1259, _1260), vec3(_2068 * _2060, _2068 * _2061, _2068 * _2062)) + 1.0) * 0.5;
        float _4958 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
        float _2085 = sqrt(((_2061 * _2061) + (_2060 * _2060)) + (_2062 * _2062)) / (_1975 + 9.9999997473787516355514526367188e-06);
        float _4969 = isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0));
        float _2086 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _2087 = _2086 * 2.0;
        float _2091 = (1.0 - _2086) / (_2086 + 1.0);
        float _4980 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
        float _2092 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
        float _2101 = ((((1.0 - _2092) * (_2087 + 2.0)) * exp2(log2(isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2087 + 1.0))) + _2092) * _1975;
        _2109 = _1942;
        _2110 = _1941;
        _2111 = _1940;
        _2112 = _1952;
        _2113 = _1951;
        _2114 = _1950;
        _2115 = _1962;
        _2116 = _1961;
        _2117 = _1960;
        _2118 = _1975;
        _2119 = _1974;
        _2120 = _1973;
        _2121 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0)));
        _2122 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0)));
        _2123 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0)));
    }
    else
    {
        _2109 = _1800;
        _2110 = _1800;
        _2111 = _1800;
        _2112 = _1800;
        _2113 = _1800;
        _2114 = _1800;
        _2115 = _1800;
        _2116 = _1800;
        _2117 = _1800;
        _2118 = _1800;
        _2119 = _1800;
        _2120 = _1800;
        _2121 = 0.0;
        _2122 = 0.0;
        _2123 = 0.0;
    }
    float _2133 = (cbModelParam._m0[1u].x * (_2121 - _1812)) + _1812;
    float _2134 = (cbModelParam._m0[1u].x * (_2122 - _1813)) + _1813;
    float _2135 = (cbModelParam._m0[1u].x * (_2123 - _1814)) + _1814;
    float _2156 = fma(_2135, cbSceneParam._m0[89u].z, fma(_2134, cbSceneParam._m0[89u].y, _2133 * cbSceneParam._m0[89u].x));
    float _2159 = fma(_2135, cbSceneParam._m0[90u].z, fma(_2134, cbSceneParam._m0[90u].y, _2133 * cbSceneParam._m0[90u].x));
    float _2162 = fma(_2135, cbSceneParam._m0[91u].z, fma(_2134, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2133));
    float _2177 = _1433 * 0.5;
    float _2178 = _1434 * 0.5;
    float _2179 = _1435 * 0.5;
    float _2180 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_2111, _2114, _2117, _2120));
    float _2183 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_2110, _2113, _2116, _2119));
    float _2186 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_2109, _2112, _2115, _2118));
    float _2220;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2193 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_1799, _1803, _1806, _1809));
        float _2197 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_1801, _1804, _1807, _1810));
        float _2201 = dot(vec4(_2177, _2178, _2179, 1.0), vec4(_1802, _1805, _1808, _1811));
        float _2208 = dot(vec4(cbModelParam._m0[39u]), vec4(_2177, _2178, _2179, 1.0));
        _2220 = dot(vec3(isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0)), isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0)), isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2208) ? 0.0 : (isnan(0.0) ? _2208 : max(0.0, _2208))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2220 = 1.0;
    }
    float _2231;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2222 = dot(vec4(cbModelParam._m0[40u]), vec4(_2177, _2178, _2179, 1.0));
        _2231 = dot(vec3(isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0)), isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0)), isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2222) ? 0.0 : (isnan(0.0) ? _2222 : max(0.0, _2222))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2231 = 1.0;
    }
    float _2235 = (_2231 * cbModelParam._m0[1u].x) + (_2220 * (1.0 - cbModelParam._m0[1u].x));
    float _2245 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1262);
    float _2246 = isnan(_2245) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2245 : min(cbModelParam._m0[25u].z, _2245));
    float _2326;
    float _2328;
    float _2330;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2293 = fma(_1497, cbModelParam._m0[13u].z, fma(_1493, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1489)) + cbModelParam._m0[13u].w;
        float _2297 = fma(_1497, cbModelParam._m0[14u].z, fma(_1493, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1489)) + cbModelParam._m0[14u].w;
        float _2301 = fma(_1497, cbModelParam._m0[15u].z, fma(_1493, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1489)) + cbModelParam._m0[15u].w;
        float _2304 = fma(_1435, cbModelParam._m0[13u].z, fma(_1434, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1433));
        float _2307 = fma(_1435, cbModelParam._m0[14u].z, fma(_1434, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1433));
        float _2310 = fma(_1435, cbModelParam._m0[15u].z, fma(_1434, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1433));
        float _2338;
        if (_2304 > 0.0)
        {
            _2338 = abs((1.0 - _2293) / _2304);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2304 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2293 + 1.0) / _2304);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2338 = frontier_phi_16_14_ladder;
        }
        float _2509;
        if (_2307 > 0.0)
        {
            _2509 = abs((1.0 - _2297) / _2307);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2307 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2297 + 1.0) / _2307);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2509 = frontier_phi_25_21_ladder;
        }
        float _2804;
        if (_2310 > 0.0)
        {
            _2804 = abs((1.0 - _2301) / _2310);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2310 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2301 + 1.0) / _2310);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2804 = frontier_phi_37_32_ladder;
        }
        float _2806 = isnan(_2509) ? _2338 : (isnan(_2338) ? _2509 : min(_2338, _2509));
        float _2807 = isnan(_2804) ? _2806 : (isnan(_2806) ? _2804 : min(_2806, _2804));
        float _2811 = (_2807 * _2304) + _2293;
        float _2812 = (_2807 * _2307) + _2297;
        float _2813 = (_2807 * _2310) + _2301;
        float _2814 = _2807 * 9.9999997473787516355514526367188e-05;
        float _2816 = (-1.0) - _2814;
        float _2818 = _2814 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2813 > _2818) || ((_2813 < _2816) || ((_2812 > _2818) || ((_2812 < _2816) || ((_2811 < _2816) || (_2811 > _2818))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2958 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2813, cbModelParam._m0[9u].z, fma(_2812, cbModelParam._m0[9u].y, _2811 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2813, cbModelParam._m0[10u].z, fma(_2812, cbModelParam._m0[10u].y, _2811 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2813, cbModelParam._m0[11u].z, fma(_2812, cbModelParam._m0[11u].y, _2811 * cbModelParam._m0[11u].x))), _2246);
            frontier_phi_15_37_ladder = _2958.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2958.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2958.z * cbModelParam._m0[1u].y;
        }
        _2326 = frontier_phi_15_37_ladder_1;
        _2328 = frontier_phi_15_37_ladder;
        _2330 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _2314 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1433, _1434, _1435), _2246);
        _2326 = _2314.x * cbModelParam._m0[1u].y;
        _2328 = _2314.y * cbModelParam._m0[1u].y;
        _2330 = _2314.z * cbModelParam._m0[1u].y;
    }
    float _2334 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1262);
    float _2335 = isnan(_2334) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2334 : min(cbModelParam._m0[25u].w, _2334));
    float _2424;
    float _2426;
    float _2428;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2388 = fma(_1497, cbModelParam._m0[21u].z, fma(_1493, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1489)) + cbModelParam._m0[21u].w;
        float _2392 = fma(_1497, cbModelParam._m0[22u].z, fma(_1493, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1489)) + cbModelParam._m0[22u].w;
        float _2396 = fma(_1497, cbModelParam._m0[23u].z, fma(_1493, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1489)) + cbModelParam._m0[23u].w;
        float _2399 = fma(_1435, cbModelParam._m0[21u].z, fma(_1434, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1433));
        float _2402 = fma(_1435, cbModelParam._m0[22u].z, fma(_1434, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1433));
        float _2405 = fma(_1435, cbModelParam._m0[23u].z, fma(_1434, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1433));
        float _2514;
        if (_2399 > 0.0)
        {
            _2514 = abs((1.0 - _2388) / _2399);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2399 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2388 + 1.0) / _2399);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2514 = frontier_phi_27_23_ladder;
        }
        float _2831;
        if (_2402 > 0.0)
        {
            _2831 = abs((1.0 - _2392) / _2402);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2402 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2392 + 1.0) / _2402);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2831 = frontier_phi_39_34_ladder;
        }
        float _3169;
        if (_2405 > 0.0)
        {
            _3169 = abs((1.0 - _2396) / _2405);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2405 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2396 + 1.0) / _2405);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _3169 = frontier_phi_49_46_ladder;
        }
        float _3171 = isnan(_2831) ? _2514 : (isnan(_2514) ? _2831 : min(_2514, _2831));
        float _3172 = isnan(_3169) ? _3171 : (isnan(_3171) ? _3169 : min(_3171, _3169));
        float _3176 = (_3172 * _2399) + _2388;
        float _3177 = (_3172 * _2402) + _2392;
        float _3178 = (_3172 * _2405) + _2396;
        float _3179 = _3172 * 9.9999997473787516355514526367188e-05;
        float _3180 = (-1.0) - _3179;
        float _3182 = _3179 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_3178 > _3182) || ((_3178 < _3180) || ((_3177 > _3182) || ((_3177 < _3180) || ((_3176 < _3180) || (_3176 > _3182))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3300 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3178, cbModelParam._m0[17u].z, fma(_3177, cbModelParam._m0[17u].y, _3176 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3178, cbModelParam._m0[18u].z, fma(_3177, cbModelParam._m0[18u].y, _3176 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3178, cbModelParam._m0[19u].z, fma(_3177, cbModelParam._m0[19u].y, _3176 * cbModelParam._m0[19u].x))), _2335);
            frontier_phi_24_49_ladder = _3300.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _3300.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _3300.x * cbModelParam._m0[1u].z;
        }
        _2424 = frontier_phi_24_49_ladder_2;
        _2426 = frontier_phi_24_49_ladder_1;
        _2428 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _2408 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1433, _1434, _1435), _2335);
        _2424 = _2408.x * cbModelParam._m0[1u].z;
        _2426 = _2408.y * cbModelParam._m0[1u].z;
        _2428 = _2408.z * cbModelParam._m0[1u].z;
    }
    float _2441 = (((_1460 * _1410) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2424 - _2326)) + _2326);
    float _2443 = (((_1460 * _1412) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2426 - _2328)) + _2328);
    float _2445 = (((_1460 * _1413) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2428 - _2330)) + _2330);
    float _2448 = fma(_2445, cbSceneParam._m0[89u].z, fma(_2443, cbSceneParam._m0[89u].y, _2441 * cbSceneParam._m0[89u].x));
    float _2451 = fma(_2445, cbSceneParam._m0[90u].z, fma(_2443, cbSceneParam._m0[90u].y, _2441 * cbSceneParam._m0[90u].x));
    float _2454 = fma(_2445, cbSceneParam._m0[91u].z, fma(_2443, cbSceneParam._m0[91u].y, _2441 * cbSceneParam._m0[91u].x));
    float _2488 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2492 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2496 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2500 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2501 = _2488 / _2500;
    float _2502 = _2492 / _2500;
    float _2503 = _2496 / _2500;
    float _2650;
    float _2651;
    float _2652;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2530 = ((uint(_2503 > cbSceneParam._m0[59u].y) + uint(_2503 > cbSceneParam._m0[59u].x)) + uint(_2503 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2531 = _2530 + 43u;
        uint _2539 = _2530 + 44u;
        uint _2547 = _2530 + 45u;
        uint _2555 = _2530 + 46u;
        float _2566 = fma(_2500, cbSceneParam._m0[_2531].w, fma(_2496, cbSceneParam._m0[_2531].z, fma(_2492, cbSceneParam._m0[_2531].y, _2488 * cbSceneParam._m0[_2531].x)));
        float _2570 = fma(_2500, cbSceneParam._m0[_2539].w, fma(_2496, cbSceneParam._m0[_2539].z, fma(_2492, cbSceneParam._m0[_2539].y, _2488 * cbSceneParam._m0[_2539].x)));
        float _2578 = fma(_2500, cbSceneParam._m0[_2555].w, fma(_2496, cbSceneParam._m0[_2555].z, fma(_2492, cbSceneParam._m0[_2555].y, _2488 * cbSceneParam._m0[_2555].x)));
        float _2583 = cbSceneParam._m0[33u].z * _2578;
        float _2585 = cbSceneParam._m0[33u].w * _2578;
        float _2588 = fma(_2500, cbSceneParam._m0[_2547].w, fma(_2496, cbSceneParam._m0[_2547].z, fma(_2492, cbSceneParam._m0[_2547].y, _2488 * cbSceneParam._m0[_2547].x))) / _2578;
        float _2636 = (cbSceneParam._m0[33u].x - sqrt(((_2502 * _2502) + (_2501 * _2501)) + (_2503 * _2503))) * cbSceneParam._m0[33u].y;
        float _5106 = isnan(0.0) ? _2636 : (isnan(_2636) ? 0.0 : max(_2636, 0.0));
        float _2643 = (isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2583 + _2566) / _2578, (_2585 + _2570) / _2578), _2588), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2585 + _2566) / _2578, (_2570 - _2583) / _2578), _2588), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2566 - _2583) / _2578, (_2570 - _2585) / _2578), _2588), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2566 - _2585) / _2578, (_2583 + _2570) / _2578), _2588), 0.0)).x), vec4(0.25)));
        _2650 = 1.0 - (_2643 * cbSceneParam._m0[34u].x);
        _2651 = 1.0 - (_2643 * cbSceneParam._m0[34u].y);
        _2652 = 1.0 - (_2643 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2650 = 1.0;
        _2651 = 1.0;
        _2652 = 1.0;
    }
    float _2716;
    float _2718;
    float _2720;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2704 = fma(_2500, cbSceneParam._m0[63u].w, fma(_2496, cbSceneParam._m0[63u].z, fma(_2492, cbSceneParam._m0[63u].y, _2488 * cbSceneParam._m0[63u].x)));
        float _2705 = fma(_2500, cbSceneParam._m0[60u].w, fma(_2496, cbSceneParam._m0[60u].z, fma(_2492, cbSceneParam._m0[60u].y, _2488 * cbSceneParam._m0[60u].x))) / _2704;
        float _2706 = fma(_2500, cbSceneParam._m0[61u].w, fma(_2496, cbSceneParam._m0[61u].z, fma(_2492, cbSceneParam._m0[61u].y, _2488 * cbSceneParam._m0[61u].x))) / _2704;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2705 >= cbSceneParam._m0[64u].x) && (_2706 >= cbSceneParam._m0[64u].y)) && (_2705 <= cbSceneParam._m0[64u].z)) && (_2706 <= cbSceneParam._m0[64u].w))
        {
            float _2844 = fma(_2500, cbSceneParam._m0[62u].w, fma(_2496, cbSceneParam._m0[62u].z, fma(_2492, cbSceneParam._m0[62u].y, _2488 * cbSceneParam._m0[62u].x))) / _2704;
            float _2848 = isnan(cbSceneParam._m0[41u].w) ? _2844 : (isnan(_2844) ? cbSceneParam._m0[41u].w : max(_2844, cbSceneParam._m0[41u].w));
            float _2891 = (cbSceneParam._m0[33u].x - sqrt(((_2502 * _2502) + (_2501 * _2501)) + (_2503 * _2503))) * cbSceneParam._m0[33u].y;
            float _5122 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
            float _2898 = (isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2705, cbSceneParam._m0[33u].w + _2706), _2848), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2705, _2706 - cbSceneParam._m0[33u].z), _2848), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2705 - cbSceneParam._m0[33u].z, _2706 - cbSceneParam._m0[33u].w), _2848), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2705 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2706), _2848), 0.0)).x), vec4(0.25)));
            float _2902 = 1.0 - (_2898 * cbSceneParam._m0[34u].x);
            float _2903 = 1.0 - (_2898 * cbSceneParam._m0[34u].y);
            float _2904 = 1.0 - (_2898 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2903) ? _2651 : (isnan(_2651) ? _2903 : min(_2651, _2903));
            frontier_phi_36_35_ladder_1 = isnan(_2904) ? _2652 : (isnan(_2652) ? _2904 : min(_2652, _2904));
            frontier_phi_36_35_ladder_2 = isnan(_2902) ? _2650 : (isnan(_2650) ? _2902 : min(_2650, _2902));
        }
        else
        {
            frontier_phi_36_35_ladder = _2651;
            frontier_phi_36_35_ladder_1 = _2652;
            frontier_phi_36_35_ladder_2 = _2650;
        }
        _2716 = frontier_phi_36_35_ladder_2;
        _2718 = frontier_phi_36_35_ladder;
        _2720 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2716 = _2650;
        _2718 = _2651;
        _2720 = _2652;
    }
    uvec4 _2725 = floatBitsToUint(cbInstanceData._m0[_1385 + 5u]);
    uint _2727 = _2725.x * 14u;
    uint _2728 = _2727 + 13u;
    float _2735 = _1425 + (-1.0);
    float _2740 = (cbLight._m0[_2728].x * _2735) + 1.0;
    float _2741 = (cbLight._m0[_2728].y * _2735) + 1.0;
    float _2742 = (cbLight._m0[_2728].z * _2735) + 1.0;
    float _2743 = (cbLight._m0[_2728].w * _2735) + 1.0;
    uint _2744 = _2727 + 5u;
    float _2750 = isnan(1.0) ? _2741 : (isnan(_2741) ? 1.0 : min(_2741, 1.0));
    uint _2754 = _2727 + 4u;
    float _2763 = isnan(1.0) ? _2740 : (isnan(_2740) ? 1.0 : min(_2740, 1.0));
    uint _2767 = _2727 | 1u;
    float _2778 = dot(vec3(cbLight._m0[_2727].xyz), vec3(_1258, _1259, _1260));
    float _2781 = dot(vec3(cbLight._m0[_2767].xyz), vec3(_1258, _1259, _1260));
    float _5158 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
    float _5169 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
    float _2786 = (isnan(1.0) ? _5158 : (isnan(_5158) ? 1.0 : min(_5158, 1.0))) * 0.3183098733425140380859375;
    float _2788 = (isnan(1.0) ? _5169 : (isnan(_5169) ? 1.0 : min(_5169, 1.0))) * 0.3183098733425140380859375;
    float _2795 = ((cbLight._m0[_2744].x * _2750) * _2788) + (((cbLight._m0[_2754].x * _2716) * _2763) * _2786);
    float _2796 = ((_2750 * cbLight._m0[_2744].y) * _2788) + (((cbLight._m0[_2754].y * _2718) * _2763) * _2786);
    float _2797 = ((_2750 * cbLight._m0[_2744].z) * _2788) + (((cbLight._m0[_2754].z * _2720) * _2763) * _2786);
    uvec4 _2801 = floatBitsToUint(cbLight._m0[_2727 + 12u]);
    bool _2803 = _2801.x == 0u;
    float _2905;
    float _2907;
    float _2909;
    if (_2803)
    {
        _2905 = _2795;
        _2907 = _2796;
        _2909 = _2797;
    }
    else
    {
        uint _2913 = _2727 + 6u;
        float _2929 = (dot(vec3(cbLight._m0[_2727 + 2u].xyz), vec3(_1258, _1259, _1260)) * 0.5) + 0.5;
        float _2930 = _2929 * _2929;
        float _5180 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
        float _2931 = isnan(1.0) ? _5180 : (isnan(_5180) ? 1.0 : min(_5180, 1.0));
        float _2932 = isnan(1.0) ? _2742 : (isnan(_2742) ? 1.0 : min(_2742, 1.0));
        _2905 = (((cbLight._m0[_2913].x * 0.3183098733425140380859375) * _2931) * _2932) + _2795;
        _2907 = (((cbLight._m0[_2913].y * 0.3183098733425140380859375) * _2931) * _2932) + _2796;
        _2909 = (((cbLight._m0[_2913].z * 0.3183098733425140380859375) * _2931) * _2932) + _2797;
    }
    bool _2912 = _2801.y == 0u;
    float _2967;
    float _2969;
    float _2971;
    if (_2912)
    {
        _2967 = _2905;
        _2969 = _2907;
        _2971 = _2909;
    }
    else
    {
        uint _3140 = _2727 + 7u;
        float _3156 = (dot(vec3(cbLight._m0[_2727 + 3u].xyz), vec3(_1258, _1259, _1260)) * 0.5) + 0.5;
        float _3157 = _3156 * _3156;
        float _5196 = isnan(0.0) ? _3157 : (isnan(_3157) ? 0.0 : max(_3157, 0.0));
        float _3158 = isnan(1.0) ? _5196 : (isnan(_5196) ? 1.0 : min(_5196, 1.0));
        float _3159 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
        _2967 = (((cbLight._m0[_3140].x * 0.3183098733425140380859375) * _3158) * _3159) + _2905;
        _2969 = (((cbLight._m0[_3140].y * 0.3183098733425140380859375) * _3158) * _3159) + _2907;
        _2971 = (((cbLight._m0[_3140].z * 0.3183098733425140380859375) * _3158) * _3159) + _2909;
    }
    uint _2974 = _2727 + 8u;
    float _2987 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2727].w)) * _1262) * 0.949999988079071044921875);
    float _2988 = _2987 * _2987;
    float _2989 = cbLight._m0[_2727].x + _1339;
    float _2990 = cbLight._m0[_2727].y + _1340;
    float _2991 = cbLight._m0[_2727].z + _1341;
    float _2995 = inversesqrt(dot(vec3(_2989, _2990, _2991), vec3(_2989, _2990, _2991)));
    float _2996 = _2995 * _2989;
    float _2997 = _2995 * _2990;
    float _2998 = _2995 * _2991;
    float _2999 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2727].xyz));
    float _5212 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
    float _3002 = isnan(1.0) ? _5212 : (isnan(_5212) ? 1.0 : min(_5212, 1.0));
    float _5223 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    float _3003 = isnan(1.0) ? _5223 : (isnan(_5223) ? 1.0 : min(_5223, 1.0));
    float _3004 = dot(vec3(_1258, _1259, _1260), vec3(_2996, _2997, _2998));
    float _5234 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0));
    float _3007 = isnan(1.0) ? _5234 : (isnan(_5234) ? 1.0 : min(_5234, 1.0));
    float _3008 = dot(vec3(cbLight._m0[_2727].xyz), vec3(_2996, _2997, _2998));
    float _5245 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
    float _3012 = _2988 * _2988;
    float _3016 = ((_3007 * _3007) * (_3012 + (-1.0))) + 1.0;
    float _3024 = exp2(log2(1.0 - (isnan(1.0) ? _5245 : (isnan(_5245) ? 1.0 : min(_5245, 1.0)))) * 5.0);
    float _3025 = 0.959999978542327880859375 - _1407;
    float _3027 = 0.959999978542327880859375 - _1408;
    float _3028 = 0.959999978542327880859375 - _1409;
    float _3035 = 1.0 - _2988;
    float _3046 = (0.5 / (((_3003 * ((_3002 * _3035) + _2988)) + 9.9999999392252902907785028219223e-09) + (((_3003 * _3035) + _2988) * _3002))) * _3002;
    float _5256 = isnan(0.0) ? _3046 : (isnan(_3046) ? 0.0 : max(_3046, 0.0));
    float _3048 = (isnan(1.0) ? _5256 : (isnan(_5256) ? 1.0 : min(_5256, 1.0))) * (_3012 / ((_3016 * _3016) * 3.141590118408203125));
    uint _3062 = _2727 + 9u;
    float _3073 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2767].w)) * _1262) * 0.949999988079071044921875);
    float _3074 = _3073 * _3073;
    float _3075 = cbLight._m0[_2767].x + _1339;
    float _3076 = cbLight._m0[_2767].y + _1340;
    float _3077 = cbLight._m0[_2767].z + _1341;
    float _3081 = inversesqrt(dot(vec3(_3075, _3076, _3077), vec3(_3075, _3076, _3077)));
    float _3082 = _3081 * _3075;
    float _3083 = _3081 * _3076;
    float _3084 = _3081 * _3077;
    float _3085 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2767].xyz));
    float _5267 = isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : max(_3085, 0.0));
    float _3088 = isnan(1.0) ? _5267 : (isnan(_5267) ? 1.0 : min(_5267, 1.0));
    float _3089 = dot(vec3(_1258, _1259, _1260), vec3(_3082, _3083, _3084));
    float _5278 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0));
    float _3092 = isnan(1.0) ? _5278 : (isnan(_5278) ? 1.0 : min(_5278, 1.0));
    float _3093 = dot(vec3(cbLight._m0[_2767].xyz), vec3(_3082, _3083, _3084));
    float _5289 = isnan(0.0) ? _3093 : (isnan(_3093) ? 0.0 : max(_3093, 0.0));
    float _3097 = _3074 * _3074;
    float _3101 = ((_3092 * _3092) * (_3097 + (-1.0))) + 1.0;
    float _3108 = exp2(log2(1.0 - (isnan(1.0) ? _5289 : (isnan(_5289) ? 1.0 : min(_5289, 1.0)))) * 5.0);
    float _3115 = 1.0 - _3074;
    float _3125 = (0.5 / (((_3003 * ((_3088 * _3115) + _3074)) + 9.9999999392252902907785028219223e-09) + (((_3003 * _3115) + _3074) * _3088))) * _3088;
    float _5300 = isnan(0.0) ? _3125 : (isnan(_3125) ? 0.0 : max(_3125, 0.0));
    float _3127 = (isnan(1.0) ? _5300 : (isnan(_5300) ? 1.0 : min(_5300, 1.0))) * (_3097 / ((_3101 * _3101) * 3.141590118408203125));
    float _3137 = (((((_3108 * _3025) + _1410) * cbLight._m0[_3062].x) * _3127) * _2750) + ((((cbLight._m0[_2974].x * _2716) * ((_3024 * _3025) + _1410)) * _3048) * _2763);
    float _3138 = (((((_3108 * _3027) + _1412) * cbLight._m0[_3062].y) * _3127) * _2750) + ((((cbLight._m0[_2974].y * _2718) * ((_3024 * _3027) + _1412)) * _3048) * _2763);
    float _3139 = (((((_3108 * _3028) + _1413) * cbLight._m0[_3062].z) * _3127) * _2750) + ((((cbLight._m0[_2974].z * _2720) * ((_3024 * _3028) + _1413)) * _3048) * _2763);
    float _3195;
    float _3197;
    float _3199;
    if (_2803)
    {
        _3195 = _3137;
        _3197 = _3138;
        _3199 = _3139;
    }
    else
    {
        uint _3201 = _2727 + 2u;
        uint _3205 = _2727 + 10u;
        float _3219 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3201].w)) * _1262) * 0.949999988079071044921875);
        float _3220 = _3219 * _3219;
        float _3221 = cbLight._m0[_3201].x + _1339;
        float _3222 = cbLight._m0[_3201].y + _1340;
        float _3223 = cbLight._m0[_3201].z + _1341;
        float _3227 = inversesqrt(dot(vec3(_3221, _3222, _3223), vec3(_3221, _3222, _3223)));
        float _3228 = _3227 * _3221;
        float _3229 = _3227 * _3222;
        float _3230 = _3227 * _3223;
        float _3231 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_3201].xyz));
        float _5311 = isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : max(_3231, 0.0));
        float _3234 = isnan(1.0) ? _5311 : (isnan(_5311) ? 1.0 : min(_5311, 1.0));
        float _3235 = dot(vec3(_1258, _1259, _1260), vec3(_3228, _3229, _3230));
        float _5322 = isnan(0.0) ? _3235 : (isnan(_3235) ? 0.0 : max(_3235, 0.0));
        float _3238 = isnan(1.0) ? _5322 : (isnan(_5322) ? 1.0 : min(_5322, 1.0));
        float _3239 = dot(vec3(cbLight._m0[_3201].xyz), vec3(_3228, _3229, _3230));
        float _5333 = isnan(0.0) ? _3239 : (isnan(_3239) ? 0.0 : max(_3239, 0.0));
        float _3243 = _3220 * _3220;
        float _3247 = ((_3238 * _3238) * (_3243 + (-1.0))) + 1.0;
        float _3254 = exp2(log2(1.0 - (isnan(1.0) ? _5333 : (isnan(_5333) ? 1.0 : min(_5333, 1.0)))) * 5.0);
        float _3261 = 1.0 - _3220;
        float _3271 = (0.5 / (((_3003 * ((_3234 * _3261) + _3220)) + 9.9999999392252902907785028219223e-09) + (((_3003 * _3261) + _3220) * _3234))) * _3234;
        float _5344 = isnan(0.0) ? _3271 : (isnan(_3271) ? 0.0 : max(_3271, 0.0));
        float _3273 = (isnan(1.0) ? _5344 : (isnan(_5344) ? 1.0 : min(_5344, 1.0))) * (_3243 / ((_3247 * _3247) * 3.141590118408203125));
        float _3274 = isnan(1.0) ? _2742 : (isnan(_2742) ? 1.0 : min(_2742, 1.0));
        _3195 = (((((_3254 * _3025) + _1410) * cbLight._m0[_3205].x) * _3273) * _3274) + _3137;
        _3197 = (((((_3254 * _3027) + _1412) * cbLight._m0[_3205].y) * _3273) * _3274) + _3138;
        _3199 = (((((_3254 * _3028) + _1413) * cbLight._m0[_3205].z) * _3273) * _3274) + _3139;
    }
    float _3305;
    float _3307;
    float _3309;
    if (_2912)
    {
        _3305 = _3195;
        _3307 = _3197;
        _3309 = _3199;
    }
    else
    {
        uint _3316 = _2727 + 3u;
        uint _3320 = _2727 + 11u;
        float _3334 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3316].w)) * _1262) * 0.949999988079071044921875);
        float _3335 = _3334 * _3334;
        float _3336 = cbLight._m0[_3316].x + _1339;
        float _3337 = cbLight._m0[_3316].y + _1340;
        float _3338 = cbLight._m0[_3316].z + _1341;
        float _3342 = inversesqrt(dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338)));
        float _3343 = _3342 * _3336;
        float _3344 = _3342 * _3337;
        float _3345 = _3342 * _3338;
        float _3346 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_3316].xyz));
        float _5360 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
        float _3349 = isnan(1.0) ? _5360 : (isnan(_5360) ? 1.0 : min(_5360, 1.0));
        float _3350 = dot(vec3(_1258, _1259, _1260), vec3(_3343, _3344, _3345));
        float _5371 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0));
        float _3353 = isnan(1.0) ? _5371 : (isnan(_5371) ? 1.0 : min(_5371, 1.0));
        float _3354 = dot(vec3(cbLight._m0[_3316].xyz), vec3(_3343, _3344, _3345));
        float _5382 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0));
        float _3358 = _3335 * _3335;
        float _3362 = ((_3353 * _3353) * (_3358 + (-1.0))) + 1.0;
        float _3369 = exp2(log2(1.0 - (isnan(1.0) ? _5382 : (isnan(_5382) ? 1.0 : min(_5382, 1.0)))) * 5.0);
        float _3376 = 1.0 - _3335;
        float _3386 = (0.5 / (((_3003 * ((_3349 * _3376) + _3335)) + 9.9999999392252902907785028219223e-09) + (((_3003 * _3376) + _3335) * _3349))) * _3349;
        float _5393 = isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0));
        float _3388 = (isnan(1.0) ? _5393 : (isnan(_5393) ? 1.0 : min(_5393, 1.0))) * (_3358 / ((_3362 * _3362) * 3.141590118408203125));
        float _3389 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
        _3305 = (((((_3369 * _3025) + _1410) * cbLight._m0[_3320].x) * _3388) * _3389) + _3195;
        _3307 = (((((_3369 * _3027) + _1412) * cbLight._m0[_3320].y) * _3388) * _3389) + _3197;
        _3309 = (((((_3369 * _3028) + _1413) * cbLight._m0[_3320].z) * _3388) * _3389) + _3199;
    }
    float _3454;
    float _3456;
    float _3458;
    float _3460;
    float _3462;
    float _3464;
    if (_2725.y == 0u)
    {
        uvec4 _3410 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3411 = _3410.x;
        uint _3422 = uint((float(_3410.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1348) / _3411))) + floor(float(uint(cbSceneParam._m0[85u].x * _1347) / _3411)));
        float _3432 = (log2(_2503 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3433 = isnan(0.0) ? _3432 : (isnan(_3432) ? 0.0 : max(_3432, 0.0));
        uint _3436 = uint(isnan(14.0) ? _3433 : (isnan(_3433) ? 14.0 : min(_3433, 14.0)));
        uvec4 _3441 = texelFetch(g_lightClusterGridBuffer, int(((_3436 << 2u) + (_3422 << 6u)) >> 2u));
        uint _3442 = _3441.x;
        uint _3443 = _3410.z;
        float _3523;
        float _3525;
        float _3527;
        float _3529;
        float _3531;
        float _3533;
        if (((((1u << ((_3443 >> 4u) & 15u)) + 4294967295u) & _3442) == 0u) || ((_3443 & 240u) == 0u))
        {
            _3523 = 0.0;
            _3525 = 0.0;
            _3527 = 0.0;
            _3529 = 0.0;
            _3531 = 0.0;
            _3533 = 0.0;
        }
        else
        {
            float _3524;
            float _3526;
            float _3528;
            float _3530;
            float _3532;
            float _3534;
            float _3667 = 0.0;
            float _3668 = 0.0;
            float _3669 = 0.0;
            float _3670 = 0.0;
            float _3671 = 0.0;
            float _3672 = 0.0;
            uint _3673 = 0u;
            uint _3682;
            bool _3683;
            for (;;)
            {
                _3682 = texelFetch(g_lightClassification, int((((_3436 << 5u) + (_3422 << 9u)) + (_3673 << 2u)) >> 2u)).x;
                _3683 = _3682 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3683)
                {
                    frontier_phi_68_pred = _3672;
                    frontier_phi_68_pred_1 = _3671;
                    frontier_phi_68_pred_2 = _3670;
                    frontier_phi_68_pred_3 = _3668;
                    frontier_phi_68_pred_4 = _3667;
                    frontier_phi_68_pred_5 = _3669;
                }
                else
                {
                    float _3791;
                    float _3792;
                    float _3793;
                    float _3794;
                    float _3795;
                    float _3796;
                    uint _3797;
                    _3791 = _3667;
                    _3792 = _3668;
                    _3793 = _3669;
                    _3794 = _3670;
                    _3795 = _3671;
                    _3796 = _3672;
                    _3797 = _3682;
                    float _3723;
                    float _3724;
                    float _3725;
                    float _3726;
                    float _3727;
                    float _3728;
                    for (;;)
                    {
                        uint _3801 = uint(findLSB(_3797)) + (_3673 << 5u);
                        uint _3798 = (_3797 + 4294967295u) & _3797;
                        uint _3803 = _3801 * 48u;
                        vec4 _3817 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3803)).x, texelFetch(g_PointLightRenderingBuffer, int(_3803 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3803 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3803 + 3u)).x));
                        uint _3823 = (_3801 * 48u) + 4u;
                        vec4 _3836 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3823)).x, texelFetch(g_PointLightRenderingBuffer, int(_3823 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3823 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3823 + 3u)).x));
                        uint _3842 = (_3801 * 48u) + 8u;
                        vec3 _3853 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3842)).x, texelFetch(g_PointLightRenderingBuffer, int(_3842 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3842 + 2u)).x));
                        float _3857 = _3817.x - _2501;
                        float _3858 = _3817.y - _2502;
                        float _3859 = _3817.z - _2503;
                        float _3860 = dot(vec3(_3857, _3858, _3859), vec3(_3857, _3858, _3859));
                        float _3863 = inversesqrt(_3860);
                        float _3864 = _3863 * _3857;
                        float _3865 = _3863 * _3858;
                        float _3866 = _3863 * _3859;
                        float _3867 = dot(vec3(_1366, _1369, _1372), vec3(_3864, _3865, _3866));
                        float _3872 = 1.0 - (_3860 * _3817.w);
                        float _5419 = isnan(0.0) ? _3872 : (isnan(_3872) ? 0.0 : max(_3872, 0.0));
                        float _3873 = isnan(1.0) ? _5419 : (isnan(_5419) ? 1.0 : min(_5419, 1.0));
                        float _3874 = sqrt(_3860) * _3836.w;
                        float _3876 = 1.39999997615814208984375 / (_3874 + 1.39999997615814208984375);
                        float _3877 = _3876 * _3876;
                        float _3880 = ((1.0 - _3877) * _3867) + _3877;
                        float _3883 = _3874 * _3874;
                        float _3887 = ((isnan(0.0) ? _3880 : (isnan(_3880) ? 0.0 : max(_3880, 0.0))) * _3873) / ((_3883 * 0.699999988079071044921875) + 1.0);
                        float _3891 = (-0.0) - _2501;
                        float _3892 = (-0.0) - _2502;
                        float _3893 = (-0.0) - _2503;
                        float _3897 = inversesqrt(dot(vec3(_3891, _3892, _3893), vec3(_3891, _3892, _3893)));
                        float _3898 = _3897 * _3891;
                        float _3899 = _3897 * _3892;
                        float _3900 = _3897 * _3893;
                        float _3907 = exp2(log2(1.0 / ((_3883 * 3.5) + 5.0)) * 0.25);
                        float _3908 = 1.0 - _1441;
                        float _3915 = sqrt(1.0 - ((1.0 - (_3908 * _3908)) * (1.0 - (_3907 * _3907))));
                        float _3916 = _3915 * _3915;
                        float _3917 = _3916 * _3916;
                        float _3918 = _3898 + _3864;
                        float _3919 = _3899 + _3865;
                        float _3920 = _3900 + _3866;
                        float _3924 = inversesqrt(dot(vec3(_3918, _3919, _3920), vec3(_3918, _3919, _3920)));
                        float _3928 = dot(vec3(_1366, _1369, _1372), vec3(_3898, _3899, _3900));
                        float _5435 = isnan(0.0) ? _3928 : (isnan(_3928) ? 0.0 : max(_3928, 0.0));
                        float _3931 = isnan(1.0) ? _5435 : (isnan(_5435) ? 1.0 : min(_5435, 1.0));
                        float _3932 = dot(vec3(_1366, _1369, _1372), vec3(_3924 * _3918, _3924 * _3919, _3924 * _3920));
                        float _5446 = isnan(0.0) ? _3932 : (isnan(_3932) ? 0.0 : max(_3932, 0.0));
                        float _3935 = isnan(1.0) ? _5446 : (isnan(_5446) ? 1.0 : min(_5446, 1.0));
                        float _3939 = ((_3935 * _3935) * (_3917 + (-1.0))) + 1.0;
                        float _3940 = _3876 * _3916;
                        float _3941 = _3940 * _3940;
                        float _3944 = ((1.0 - _3941) * _3867) + _3941;
                        float _5457 = isnan(0.0) ? _3944 : (isnan(_3944) ? 0.0 : max(_3944, 0.0));
                        float _3945 = isnan(1.0) ? _5457 : (isnan(_5457) ? 1.0 : min(_5457, 1.0));
                        float _3946 = 1.0 - _3916;
                        float _3956 = (0.5 / (((_3945 * ((_3931 * _3946) + _3916)) + 9.9999999392252902907785028219223e-09) + (((_3945 * _3946) + _3916) * _3931))) * _3945;
                        float _5468 = isnan(0.0) ? _3956 : (isnan(_3956) ? 0.0 : max(_3956, 0.0));
                        float _3967 = (((_3917 * 3.1415927410125732421875) * (isnan(1.0) ? _5468 : (isnan(_5468) ? 1.0 : min(_5468, 1.0)))) / ((_3939 * _3939) * ((_3883 * 2.1991131305694580078125) + 3.141590118408203125))) * _3873;
                        _3726 = (_3887 * _3836.x) + _3794;
                        _3727 = (_3887 * _3836.y) + _3795;
                        _3728 = (_3887 * _3836.z) + _3796;
                        _3723 = (_3967 * _3853.x) + _3791;
                        _3724 = (_3967 * _3853.y) + _3792;
                        _3725 = (_3967 * _3853.z) + _3793;
                        if (_3798 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3791 = _3723;
                            _3792 = _3724;
                            _3793 = _3725;
                            _3794 = _3726;
                            _3795 = _3727;
                            _3796 = _3728;
                            _3797 = _3798;
                        }
                    }
                    frontier_phi_68_pred = _3728;
                    frontier_phi_68_pred_1 = _3727;
                    frontier_phi_68_pred_2 = _3726;
                    frontier_phi_68_pred_3 = _3724;
                    frontier_phi_68_pred_4 = _3723;
                    frontier_phi_68_pred_5 = _3725;
                }
                _3534 = frontier_phi_68_pred;
                _3532 = frontier_phi_68_pred_1;
                _3530 = frontier_phi_68_pred_2;
                _3526 = frontier_phi_68_pred_3;
                _3524 = frontier_phi_68_pred_4;
                _3528 = frontier_phi_68_pred_5;
                uint _3674 = _3673 + 1u;
                if (_3674 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3667 = _3524;
                    _3668 = _3526;
                    _3669 = _3528;
                    _3670 = _3530;
                    _3671 = _3532;
                    _3672 = _3534;
                    _3673 = _3674;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3523 = _3524;
            _3525 = _3526;
            _3527 = _3528;
            _3529 = _3530;
            _3531 = _3532;
            _3533 = _3534;
        }
        uvec4 _3537 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3538 = _3537.z;
        uint _3540 = (_3538 >> 8u) & 15u;
        float _3635;
        float _3637;
        float _3639;
        float _3641;
        float _3643;
        float _3645;
        if (((4294967295u << _3540) & _3442) == 0u)
        {
            _3635 = _3523;
            _3637 = _3525;
            _3639 = _3527;
            _3641 = _3529;
            _3643 = _3531;
            _3645 = _3533;
        }
        else
        {
            float _3660 = inversesqrt(dot(vec3(_2501, _2502, _2503), vec3(_2501, _2502, _2503)));
            float _3661 = _3660 * _2501;
            float _3662 = _3660 * _2502;
            float _3663 = _3660 * _2503;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3540 < ((_3538 >> 12u) & 15u))
            {
                float _3636;
                float _3638;
                float _3640;
                float _3642;
                float _3644;
                float _3646;
                float _3774 = _3523;
                float _3775 = _3525;
                float _3776 = _3527;
                float _3777 = _3529;
                float _3778 = _3531;
                float _3779 = _3533;
                uint _3780 = _3540;
                uint _3789;
                bool _3790;
                for (;;)
                {
                    _3789 = texelFetch(g_lightClassification, int((((_3436 << 5u) + (_3422 << 9u)) + (_3780 << 2u)) >> 2u)).x;
                    _3790 = _3789 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3790)
                    {
                        frontier_phi_74_pred = _3776;
                        frontier_phi_74_pred_1 = _3775;
                        frontier_phi_74_pred_2 = _3774;
                        frontier_phi_74_pred_3 = _3779;
                        frontier_phi_74_pred_4 = _3778;
                        frontier_phi_74_pred_5 = _3777;
                    }
                    else
                    {
                        float _3972;
                        float _3973;
                        float _3974;
                        float _3975;
                        float _3976;
                        float _3977;
                        float _4265;
                        float _4266;
                        float _4267;
                        float _4268;
                        float _4269;
                        float _4270;
                        float _3985 = _3774;
                        float _3986 = _3775;
                        float _3987 = _3776;
                        float _3988 = _3777;
                        float _3989 = _3778;
                        float _3990 = _3779;
                        uint _3991 = _3789;
                        uint _3992;
                        vec4 _4017;
                        float _4018;
                        vec4 _4033;
                        vec3 _4045;
                        vec4 _4060;
                        vec4 _4075;
                        float _4121;
                        bool _4122;
                        for (;;)
                        {
                            uint _4002 = ((_3780 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3991));
                            _3992 = (_3991 + 4294967295u) & _3991;
                            uint _4004 = _4002 * 40u;
                            _4017 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4004)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4004 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4004 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4004 + 3u)).x));
                            _4018 = _4017.w;
                            uint _4020 = (_4002 * 40u) + 4u;
                            _4033 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4020)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4020 + 3u)).x));
                            uint _4035 = (_4002 * 40u) + 8u;
                            _4045 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_4035)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4035 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4035 + 2u)).x));
                            uint _4047 = (_4002 * 40u) + 16u;
                            _4060 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4047)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4047 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4047 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4047 + 3u)).x));
                            uint _4062 = (_4002 * 40u) + 20u;
                            _4075 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4062)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4062 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4062 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4062 + 3u)).x));
                            uint _4077 = (_4002 * 40u) + 24u;
                            vec4 _4090 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4077)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4077 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4077 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4077 + 3u)).x));
                            uint _4096 = (_4002 * 40u) + 28u;
                            vec4 _4109 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4096)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4096 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4096 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4096 + 3u)).x));
                            _4121 = fma(_2503, _4109.z, fma(_2502, _4109.y, _4109.x * _2501)) + _4109.w;
                            _4122 = !((fma(_2503, _4090.z, fma(_2502, _4090.y, _4090.x * _2501)) + _4090.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_4122)
                            {
                                float _4149 = _4017.x - _2501;
                                float _4150 = _4017.y - _2502;
                                float _4151 = _4017.z - _2503;
                                float _4152 = dot(vec3(_4149, _4150, _4151), vec3(_4149, _4150, _4151));
                                float _4155 = inversesqrt(_4152);
                                float _4156 = _4155 * _4149;
                                float _4157 = _4155 * _4150;
                                float _4158 = _4155 * _4151;
                                float _4162 = 1.0 - (_4152 / (_4018 * _4018));
                                float _5479 = isnan(0.0) ? _4162 : (isnan(_4162) ? 0.0 : max(_4162, 0.0));
                                float _4163 = isnan(1.0) ? _5479 : (isnan(_5479) ? 1.0 : min(_5479, 1.0));
                                float _4167 = sqrt(_4152) * _4033.w;
                                float _4169 = 1.39999997615814208984375 / (_4167 + 1.39999997615814208984375);
                                float _4170 = _4169 * _4169;
                                float _4173 = ((1.0 - _4170) * dot(vec3(_4156, _4157, _4158), vec3(_1366, _1369, _1372))) + _4170;
                                float _4176 = _4167 * _4167;
                                float _4180 = (fma(_2503, _4060.z, fma(_2502, _4060.y, _4060.x * _2501)) + _4060.w) / _4121;
                                float _4181 = (fma(_2503, _4075.z, fma(_2502, _4075.y, _4075.x * _2501)) + _4075.w) / _4121;
                                float _4185 = 1.0 - dot(vec2(_4180, _4181), vec2(_4180, _4181));
                                float _5495 = isnan(0.0) ? _4185 : (isnan(_4185) ? 0.0 : max(_4185, 0.0));
                                float _4186 = isnan(1.0) ? _5495 : (isnan(_5495) ? 1.0 : min(_5495, 1.0));
                                float _4187 = _4186 * (((isnan(0.0) ? _4173 : (isnan(_4173) ? 0.0 : max(_4173, 0.0))) * _4163) / ((_4176 * 0.699999988079071044921875) + 1.0));
                                float _4199 = exp2(log2(1.0 / ((_4176 * 3.5) + 5.0)) * 0.25);
                                float _4200 = 1.0 - _1441;
                                float _4207 = sqrt(1.0 - ((1.0 - (_4200 * _4200)) * (1.0 - (_4199 * _4199))));
                                float _4208 = _4207 * _4207;
                                float _4209 = _4208 * _4208;
                                float _4210 = _4156 - _3661;
                                float _4211 = _4157 - _3662;
                                float _4212 = _4158 - _3663;
                                float _4216 = inversesqrt(dot(vec3(_4210, _4211, _4212), vec3(_4210, _4211, _4212)));
                                float _4220 = dot(vec3(_1366, _1369, _1372), vec3((-0.0) - _3661, (-0.0) - _3662, (-0.0) - _3663));
                                float _5506 = isnan(0.0) ? _4220 : (isnan(_4220) ? 0.0 : max(_4220, 0.0));
                                float _4223 = isnan(1.0) ? _5506 : (isnan(_5506) ? 1.0 : min(_5506, 1.0));
                                float _4224 = dot(vec3(_1366, _1369, _1372), vec3(_4216 * _4210, _4216 * _4211, _4216 * _4212));
                                float _5517 = isnan(0.0) ? _4224 : (isnan(_4224) ? 0.0 : max(_4224, 0.0));
                                float _4227 = isnan(1.0) ? _5517 : (isnan(_5517) ? 1.0 : min(_5517, 1.0));
                                float _4231 = ((_4227 * _4227) * (_4209 + (-1.0))) + 1.0;
                                float _4232 = _4169 * _4208;
                                float _4233 = _4232 * _4232;
                                float _4239 = ((1.0 - _4233) * dot(vec3(_1366, _1369, _1372), vec3(_4156, _4157, _4158))) + _4233;
                                float _5528 = isnan(0.0) ? _4239 : (isnan(_4239) ? 0.0 : max(_4239, 0.0));
                                float _4240 = isnan(1.0) ? _5528 : (isnan(_5528) ? 1.0 : min(_5528, 1.0));
                                float _4241 = 1.0 - _4208;
                                float _4251 = (0.5 / (((_4240 * ((_4223 * _4241) + _4208)) + 9.9999999392252902907785028219223e-09) + (((_4240 * _4241) + _4208) * _4223))) * _4240;
                                float _5539 = isnan(0.0) ? _4251 : (isnan(_4251) ? 0.0 : max(_4251, 0.0));
                                float _4261 = (_4186 * _4163) * (((_4209 * 3.1415927410125732421875) * (isnan(1.0) ? _5539 : (isnan(_5539) ? 1.0 : min(_5539, 1.0)))) / ((_4231 * _4231) * ((_4176 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _4261 * _4045.z;
                                frontier_phi_80_pred_1 = _4261 * _4045.y;
                                frontier_phi_80_pred_2 = _4261 * _4045.x;
                                frontier_phi_80_pred_3 = _4187 * _4033.z;
                                frontier_phi_80_pred_4 = _4187 * _4033.y;
                                frontier_phi_80_pred_5 = _4187 * _4033.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _4267 = frontier_phi_80_pred;
                            _4266 = frontier_phi_80_pred_1;
                            _4265 = frontier_phi_80_pred_2;
                            _4270 = frontier_phi_80_pred_3;
                            _4269 = frontier_phi_80_pred_4;
                            _4268 = frontier_phi_80_pred_5;
                            _3975 = _4268 + _3988;
                            _3976 = _4269 + _3989;
                            _3977 = _4270 + _3990;
                            _3972 = _4265 + _3985;
                            _3973 = _4266 + _3986;
                            _3974 = _4267 + _3987;
                            if (_3992 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3985 = _3972;
                                _3986 = _3973;
                                _3987 = _3974;
                                _3988 = _3975;
                                _3989 = _3976;
                                _3990 = _3977;
                                _3991 = _3992;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3974;
                        frontier_phi_74_pred_1 = _3973;
                        frontier_phi_74_pred_2 = _3972;
                        frontier_phi_74_pred_3 = _3977;
                        frontier_phi_74_pred_4 = _3976;
                        frontier_phi_74_pred_5 = _3975;
                    }
                    _3640 = frontier_phi_74_pred;
                    _3638 = frontier_phi_74_pred_1;
                    _3636 = frontier_phi_74_pred_2;
                    _3646 = frontier_phi_74_pred_3;
                    _3644 = frontier_phi_74_pred_4;
                    _3642 = frontier_phi_74_pred_5;
                    uint _3781 = _3780 + 1u;
                    if (_3781 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3774 = _3636;
                        _3775 = _3638;
                        _3776 = _3640;
                        _3777 = _3642;
                        _3778 = _3644;
                        _3779 = _3646;
                        _3780 = _3781;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3644;
                frontier_phi_62_63_ladder_1 = _3642;
                frontier_phi_62_63_ladder_2 = _3640;
                frontier_phi_62_63_ladder_3 = _3646;
                frontier_phi_62_63_ladder_4 = _3638;
                frontier_phi_62_63_ladder_5 = _3636;
            }
            else
            {
                frontier_phi_62_63_ladder = _3531;
                frontier_phi_62_63_ladder_1 = _3529;
                frontier_phi_62_63_ladder_2 = _3527;
                frontier_phi_62_63_ladder_3 = _3533;
                frontier_phi_62_63_ladder_4 = _3525;
                frontier_phi_62_63_ladder_5 = _3523;
            }
            _3635 = frontier_phi_62_63_ladder_5;
            _3637 = frontier_phi_62_63_ladder_4;
            _3639 = frontier_phi_62_63_ladder_2;
            _3641 = frontier_phi_62_63_ladder_1;
            _3643 = frontier_phi_62_63_ladder;
            _3645 = frontier_phi_62_63_ladder_3;
        }
        float _3650 = isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0));
        _3454 = (_3650 * _3641) + _2967;
        _3456 = (_3650 * _3643) + _2969;
        _3458 = (_3650 * _3645) + _2971;
        _3460 = ((_3635 * _1410) * _3650) + _3305;
        _3462 = ((_3637 * _1412) * _3650) + _3307;
        _3464 = ((_3639 * _1413) * _3650) + _3309;
    }
    else
    {
        _3454 = _2967;
        _3456 = _2969;
        _3458 = _2971;
        _3460 = _3305;
        _3462 = _3307;
        _3464 = _3309;
    }
    float _5555 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
    float _5566 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
    float _5577 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
    float _5588 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    float _3489 = cbInstanceData._m0[_1385 + 6u].w * (isnan(1.0) ? _5588 : (isnan(_5588) ? 1.0 : min(_5588, 1.0)));
    float _3494 = _1347 / cbSceneParam._m0[86u].x;
    float _3495 = _1348 / cbSceneParam._m0[86u].y;
    vec4 _3509 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3494, _3495, (log2((isnan(cbSceneParam._m0[77u].w) ? _1282 : (isnan(_1282) ? cbSceneParam._m0[77u].w : min(_1282, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3511 = _3509.x;
    float _3512 = _3509.y;
    float _3513 = _3509.z;
    float _3514 = _3509.w;
    float _3585;
    float _3587;
    float _3589;
    float _3591;
    if (_1282 > cbSceneParam._m0[78u].w)
    {
        float _3548 = isnan(_1282) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1282 : min(cbSceneParam._m0[80u].w, _1282));
        float _3549 = _3548 / _1282;
        float _3560 = _3549 * _1332;
        float _3561 = _1333 * _3549;
        float _3562 = (-0.0) - _3561;
        float _3563 = _3549 * _1334;
        float _3565 = (cbSceneParam._m0[77u].w * _3562) / _3548;
        float _3566 = _3565 + cbSceneParam._m0[79u].w;
        float _3567 = cbSceneParam._m0[79u].w - _3561;
        float _3573 = sqrt(((_3560 * _3560) + (_3561 * _3561)) + (_3563 * _3563));
        float _3576 = (1.0 - (cbSceneParam._m0[77u].w / _3548)) * _3573;
        float _3581 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3583 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3736;
        if (abs((_3562 - _3565) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3736 = ((((_3566 > 0.0) ? exp2(_3581 * _3566) : (2.0 - exp2(_3583 * _3566))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3576;
        }
        else
        {
            float _3696 = 1.0 / cbSceneParam._m0[80u].x;
            float _3697 = isnan(_3567) ? _3566 : (isnan(_3566) ? _3567 : max(_3566, _3567));
            float _3698 = isnan(_3567) ? _3566 : (isnan(_3566) ? _3567 : min(_3566, _3567));
            float _3707 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : min(_3697, 0.0));
            float _3708 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : min(_3698, 0.0));
            _3736 = ((abs(_3573 / _3562) * cbSceneParam._m0[80u].y) * ((((_3707 - _3708) * 2.0) - ((exp2(_3581 * (isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0)))) - exp2(_3581 * (isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0))))) * _3696)) - ((exp2(_3583 * _3707) - exp2(_3583 * _3708)) * _3696))) + (_3576 * cbSceneParam._m0[80u].z);
        }
        vec4 _3738 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3494, _3495, 1.0), 0.0);
        float _3747 = exp2((_3736 * (-1.44269502162933349609375)) * (1.0 - _3738.w));
        float _3748 = log2(_3747);
        float _3764 = log2(_3514);
        _3585 = (exp2(_3764 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3748 * cbSceneParam._m0[78u].x)) * _3738.x) / cbSceneParam._m0[78u].x)) + _3511;
        _3587 = (exp2(_3764 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3748 * cbSceneParam._m0[78u].y)) * _3738.y) / cbSceneParam._m0[78u].y)) + _3512;
        _3589 = (exp2(_3764 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3748 * cbSceneParam._m0[78u].z)) * _3738.z) / cbSceneParam._m0[78u].z)) + _3513;
        _3591 = _3747 * _3514;
    }
    else
    {
        _3585 = _3511;
        _3587 = _3512;
        _3589 = _3513;
        _3591 = _3514;
    }
    float _3603 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3604 = _3603 == 3.0;
    float _3605 = log2(_3591);
    float _3612 = exp2(_3605 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5555 : (isnan(_5555) ? 1.0 : min(_5555, 1.0))) * (_3454 + ((isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0))) * _1425))) + ((_3460 + ((isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0))) * _2235)) * cbPerFrame._m0[3u].x));
    float _3613 = exp2(_3605 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5566 : (isnan(_5566) ? 1.0 : min(_5566, 1.0))) * (_3456 + ((isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0))) * _1425))) + ((_3462 + ((isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0))) * _2235)) * cbPerFrame._m0[3u].x));
    float _3614 = exp2(_3605 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5577 : (isnan(_5577) ? 1.0 : min(_5577, 1.0))) * (_3458 + ((isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0))) * _1425))) + ((_3464 + ((isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0))) * _2235)) * cbPerFrame._m0[3u].x));
    float _3623 = (_3603 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3623 * (_3604 ? _3612 : (_3612 + (cbSceneParam._m0[72u].w * _3585)));
    SV_Target.y = _3623 * (_3604 ? _3613 : (_3613 + (cbSceneParam._m0[72u].w * _3587)));
    SV_Target.z = _3623 * (_3604 ? _3614 : (_3614 + (cbSceneParam._m0[72u].w * _3589)));
    SV_Target.w = _3489;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3489;
}


