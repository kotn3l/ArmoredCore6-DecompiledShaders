#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _178 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _180 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _181 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _182 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _187 = _178 * cbTexScroll._m0[0u].x;
    precise float _188 = _180 * cbTexScroll._m0[0u].y;
    precise float _191 = _187 + cbTexScroll._m0[0u].z;
    precise float _192 = _188 + cbTexScroll._m0[0u].w;
    precise float _206 = float(NORMAL.x) + (-127.0);
    precise float _208 = float(NORMAL.y) + (-127.0);
    precise float _209 = float(NORMAL.z) + (-127.0);
    precise float _210 = _206 * 0.0078740157186985015869140625;
    precise float _212 = _208 * 0.0078740157186985015869140625;
    precise float _213 = _209 * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _232 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _233 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _234 = _191 + _232;
    precise float _235 = _192 + _233;
    precise float _242 = _234 * cbTextureTilingScale._m0[3u].x;
    precise float _243 = cbTextureTilingScale._m0[3u].y * _235;
    precise float _244 = cbTextureTilingScale._m0[3u].z + _242;
    precise float _245 = cbTextureTilingScale._m0[3u].w + _243;
    vec4 _248 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_244, _245), 0.0);
    float _250 = _248.x;
    precise float _256 = _210 * cbMtdParam._m0[24u].z;
    precise float _257 = _212 * cbMtdParam._m0[24u].w;
    precise float _258 = _213 * cbMtdParam._m0[25u].x;
    precise float _259 = _250 * _256;
    precise float _260 = _250 * _257;
    precise float _261 = _250 * _258;
    precise float _262 = _256 + _259;
    precise float _263 = _257 + _260;
    precise float _264 = _258 + _261;
    precise float _265 = _256 * 0.0;
    precise float _266 = _257 * 0.0;
    precise float _267 = _258 * 0.0;
    precise float _268 = _265 + _262;
    precise float _269 = _266 + _263;
    precise float _270 = _267 + _264;
    precise float _271 = POSITION.x + _268;
    precise float _272 = POSITION.y + _269;
    precise float _273 = POSITION.z + _270;
    uint _278 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _280 = texelFetch(g_InstanceIndexBuffer, int(_278));
    uint _281 = _280.x;
    uint _283 = _281 * 13u;
    uint _291 = (floatBitsToUint(cbInstanceData._m0[_283 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _298 = _291 + 1u;
    uint _305 = _291 + 2u;
    precise float _312 = _271 * cbObjMatrix._m0[_291].x;
    precise float _313 = _272 * cbObjMatrix._m0[_291].y;
    precise float _314 = _313 + _312;
    precise float _315 = _273 * cbObjMatrix._m0[_291].z;
    precise float _316 = _315 + _314;
    precise float _317 = 1.0 * cbObjMatrix._m0[_291].w;
    precise float _319 = _317 + _316;
    precise float _320 = _271 * cbObjMatrix._m0[_298].x;
    precise float _321 = _272 * cbObjMatrix._m0[_298].y;
    precise float _322 = _321 + _320;
    precise float _323 = _273 * cbObjMatrix._m0[_298].z;
    precise float _324 = _323 + _322;
    precise float _325 = 1.0 * cbObjMatrix._m0[_298].w;
    precise float _326 = _325 + _324;
    precise float _327 = _271 * cbObjMatrix._m0[_305].x;
    precise float _328 = _272 * cbObjMatrix._m0[_305].y;
    precise float _329 = _328 + _327;
    precise float _330 = _273 * cbObjMatrix._m0[_305].z;
    precise float _331 = _330 + _329;
    precise float _332 = 1.0 * cbObjMatrix._m0[_305].w;
    precise float _333 = _332 + _331;
    precise float _354 = _319 + 0.0;
    precise float _355 = _326 + 0.0;
    precise float _356 = _333 + 0.0;
    precise float _362 = _354 - cbSceneParam._m0[3u].x;
    precise float _363 = _355 - cbSceneParam._m0[3u].y;
    precise float _364 = _356 - cbSceneParam._m0[3u].z;
    precise float _390 = _362 * cbSceneParam._m0[24u].x;
    precise float _391 = _363 * cbSceneParam._m0[24u].y;
    precise float _392 = _391 + _390;
    precise float _393 = _364 * cbSceneParam._m0[24u].z;
    precise float _394 = _393 + _392;
    precise float _395 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _396 = _395 + _394;
    precise float _397 = _362 * cbSceneParam._m0[25u].x;
    precise float _398 = _363 * cbSceneParam._m0[25u].y;
    precise float _399 = _398 + _397;
    precise float _400 = _364 * cbSceneParam._m0[25u].z;
    precise float _401 = _400 + _399;
    precise float _402 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _403 = _402 + _401;
    precise float _404 = _362 * cbSceneParam._m0[26u].x;
    precise float _405 = _363 * cbSceneParam._m0[26u].y;
    precise float _406 = _405 + _404;
    precise float _407 = _364 * cbSceneParam._m0[26u].z;
    precise float _408 = _407 + _406;
    precise float _409 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _410 = _409 + _408;
    precise float _411 = _362 * cbSceneParam._m0[27u].x;
    precise float _412 = _363 * cbSceneParam._m0[27u].y;
    precise float _413 = _412 + _411;
    precise float _414 = _364 * cbSceneParam._m0[27u].z;
    precise float _415 = _414 + _413;
    precise float _416 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _417 = _416 + _415;
    gl_Position.x = _396;
    gl_Position.y = _403;
    gl_Position.z = _410;
    gl_Position.w = _417;
    POSITION_1.x = _396;
    POSITION_1.y = _403;
    POSITION_1.z = _410;
    POSITION_1.w = _417;
    NORMAL_1.x = fma(_213, cbObjMatrix._m0[_291].z, fma(_212, cbObjMatrix._m0[_291].y, cbObjMatrix._m0[_291].x * _210));
    NORMAL_1.y = fma(_213, cbObjMatrix._m0[_298].z, fma(_212, cbObjMatrix._m0[_298].y, cbObjMatrix._m0[_298].x * _210));
    NORMAL_1.z = fma(_213, cbObjMatrix._m0[_305].z, fma(_212, cbObjMatrix._m0[_305].y, cbObjMatrix._m0[_305].x * _210));
    NORMAL_1.w = float(_281);
    TANGENT_1.x = fma(_225, cbObjMatrix._m0[_291].z, fma(_224, cbObjMatrix._m0[_291].y, cbObjMatrix._m0[_291].x * _223));
    TANGENT_1.y = fma(_225, cbObjMatrix._m0[_298].z, fma(_224, cbObjMatrix._m0[_298].y, cbObjMatrix._m0[_298].x * _223));
    TANGENT_1.z = fma(_225, cbObjMatrix._m0[_305].z, fma(_224, cbObjMatrix._m0[_305].y, cbObjMatrix._m0[_305].x * _223));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _191;
    TEXCOORD_2.y = _192;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _181) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _182) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _410;
    TEXCOORD_9.y = _417;
    gl_ClipDistance[0u] = dot(vec4(_396, _403, _410, _417), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_396, _403, _410, _417), vec4(cbInstanceData._m0[_283 + 3u]));
}


