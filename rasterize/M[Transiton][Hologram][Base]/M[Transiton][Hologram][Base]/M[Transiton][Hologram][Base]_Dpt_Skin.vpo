#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _140 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _142 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _147 = _140 * cbTexScroll._m0[0u].x;
    precise float _148 = _142 * cbTexScroll._m0[0u].y;
    precise float _151 = _147 + cbTexScroll._m0[0u].z;
    precise float _152 = _148 + cbTexScroll._m0[0u].w;
    precise float _156 = float(NORMAL.x) + (-127.0);
    precise float _158 = float(NORMAL.y) + (-127.0);
    precise float _159 = float(NORMAL.z) + (-127.0);
    precise float _160 = _156 * 0.0078740157186985015869140625;
    precise float _162 = _158 * 0.0078740157186985015869140625;
    precise float _163 = _159 * 0.0078740157186985015869140625;
    precise float _173 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _174 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _175 = _151 + _173;
    precise float _176 = _152 + _174;
    precise float _183 = _175 * cbTextureTilingScale._m0[3u].x;
    precise float _184 = cbTextureTilingScale._m0[3u].y * _176;
    precise float _185 = cbTextureTilingScale._m0[3u].z + _183;
    precise float _186 = cbTextureTilingScale._m0[3u].w + _184;
    vec4 _189 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_185, _186), 0.0);
    float _192 = _189.x;
    precise float _198 = _160 * cbMtdParam._m0[24u].z;
    precise float _199 = _162 * cbMtdParam._m0[24u].w;
    precise float _200 = _163 * cbMtdParam._m0[25u].x;
    precise float _201 = _192 * _198;
    precise float _202 = _192 * _199;
    precise float _203 = _192 * _200;
    precise float _204 = _198 + _201;
    precise float _205 = _199 + _202;
    precise float _206 = _200 + _203;
    precise float _207 = _198 * 0.0;
    precise float _208 = _199 * 0.0;
    precise float _209 = _200 * 0.0;
    precise float _210 = _207 + _204;
    precise float _211 = _208 + _205;
    precise float _212 = _209 + _206;
    precise float _213 = POSITION.x + _210;
    precise float _214 = POSITION.y + _211;
    precise float _215 = POSITION.z + _212;
    uint _220 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _224 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _229 = isnan(_224) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _224 : max(0.001000000047497451305389404296875, _224));
    precise float _231 = BLENDWEIGHT.x / _229;
    precise float _232 = BLENDWEIGHT.y / _229;
    precise float _233 = BLENDWEIGHT.z / _229;
    precise float _234 = BLENDWEIGHT.w / _229;
    uint _236 = texelFetch(g_InstanceIndexBuffer, int(_220)).x * 13u;
    uvec4 _241 = floatBitsToUint(cbInstanceData._m0[_236 + 4u]);
    uint _242 = _241.x;
    uint _244 = (_242 + uint(float(BLENDINDICES.x))) * 3u;
    uint _251 = _244 + 1u;
    uint _258 = _244 + 2u;
    precise float _265 = _231 * cbObjMatrix._m0[_244].x;
    precise float _266 = _231 * cbObjMatrix._m0[_251].x;
    precise float _267 = _231 * cbObjMatrix._m0[_258].x;
    precise float _268 = _231 * cbObjMatrix._m0[_244].y;
    precise float _269 = _231 * cbObjMatrix._m0[_251].y;
    precise float _270 = _231 * cbObjMatrix._m0[_258].y;
    precise float _271 = _231 * cbObjMatrix._m0[_244].z;
    precise float _272 = _231 * cbObjMatrix._m0[_251].z;
    precise float _273 = _231 * cbObjMatrix._m0[_258].z;
    precise float _274 = _231 * cbObjMatrix._m0[_244].w;
    precise float _275 = _231 * cbObjMatrix._m0[_251].w;
    precise float _276 = _231 * cbObjMatrix._m0[_258].w;
    uint _279 = (_242 + uint(float(BLENDINDICES.y))) * 3u;
    uint _286 = _279 + 1u;
    uint _293 = _279 + 2u;
    precise float _300 = _232 * cbObjMatrix._m0[_279].x;
    precise float _301 = _232 * cbObjMatrix._m0[_286].x;
    precise float _302 = _232 * cbObjMatrix._m0[_293].x;
    precise float _303 = _232 * cbObjMatrix._m0[_279].y;
    precise float _304 = _232 * cbObjMatrix._m0[_286].y;
    precise float _305 = _232 * cbObjMatrix._m0[_293].y;
    precise float _306 = _232 * cbObjMatrix._m0[_279].z;
    precise float _307 = _232 * cbObjMatrix._m0[_286].z;
    precise float _308 = _232 * cbObjMatrix._m0[_293].z;
    precise float _309 = _232 * cbObjMatrix._m0[_279].w;
    precise float _310 = _232 * cbObjMatrix._m0[_286].w;
    precise float _311 = _232 * cbObjMatrix._m0[_293].w;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    uint _326 = (_242 + uint(float(BLENDINDICES.z))) * 3u;
    uint _333 = _326 + 1u;
    uint _340 = _326 + 2u;
    precise float _347 = _233 * cbObjMatrix._m0[_326].x;
    precise float _348 = _233 * cbObjMatrix._m0[_333].x;
    precise float _349 = _233 * cbObjMatrix._m0[_340].x;
    precise float _350 = _233 * cbObjMatrix._m0[_326].y;
    precise float _351 = _233 * cbObjMatrix._m0[_333].y;
    precise float _352 = _233 * cbObjMatrix._m0[_340].y;
    precise float _353 = _233 * cbObjMatrix._m0[_326].z;
    precise float _354 = _233 * cbObjMatrix._m0[_333].z;
    precise float _355 = _233 * cbObjMatrix._m0[_340].z;
    precise float _356 = _233 * cbObjMatrix._m0[_326].w;
    precise float _357 = _233 * cbObjMatrix._m0[_333].w;
    precise float _358 = _233 * cbObjMatrix._m0[_340].w;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    uint _373 = (_242 + uint(float(BLENDINDICES.w))) * 3u;
    uint _380 = _373 + 1u;
    uint _387 = _373 + 2u;
    precise float _394 = _234 * cbObjMatrix._m0[_373].x;
    precise float _395 = _234 * cbObjMatrix._m0[_380].x;
    precise float _396 = _234 * cbObjMatrix._m0[_387].x;
    precise float _397 = _234 * cbObjMatrix._m0[_373].y;
    precise float _398 = _234 * cbObjMatrix._m0[_380].y;
    precise float _399 = _234 * cbObjMatrix._m0[_387].y;
    precise float _400 = _234 * cbObjMatrix._m0[_373].z;
    precise float _401 = _234 * cbObjMatrix._m0[_380].z;
    precise float _402 = _234 * cbObjMatrix._m0[_387].z;
    precise float _403 = _234 * cbObjMatrix._m0[_373].w;
    precise float _404 = _234 * cbObjMatrix._m0[_380].w;
    precise float _405 = _234 * cbObjMatrix._m0[_387].w;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _213 * _406;
    precise float _419 = _214 * _409;
    precise float _420 = _419 + _418;
    precise float _421 = _215 * _412;
    precise float _422 = _421 + _420;
    precise float _423 = 1.0 * _415;
    precise float _424 = _423 + _422;
    precise float _425 = _213 * _407;
    precise float _426 = _214 * _410;
    precise float _427 = _426 + _425;
    precise float _428 = _215 * _413;
    precise float _429 = _428 + _427;
    precise float _430 = 1.0 * _416;
    precise float _431 = _430 + _429;
    precise float _432 = _213 * _408;
    precise float _433 = _214 * _411;
    precise float _434 = _433 + _432;
    precise float _435 = _215 * _414;
    precise float _436 = _435 + _434;
    precise float _437 = 1.0 * _417;
    precise float _438 = _437 + _436;
    precise float _439 = _424 + 0.0;
    precise float _440 = _431 + 0.0;
    precise float _441 = _438 + 0.0;
    precise float _447 = _439 - cbSceneParam._m0[3u].x;
    precise float _448 = _440 - cbSceneParam._m0[3u].y;
    precise float _449 = _441 - cbSceneParam._m0[3u].z;
    precise float _475 = _447 * cbSceneParam._m0[24u].x;
    precise float _476 = _448 * cbSceneParam._m0[24u].y;
    precise float _477 = _476 + _475;
    precise float _478 = _449 * cbSceneParam._m0[24u].z;
    precise float _479 = _478 + _477;
    precise float _480 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _481 = _480 + _479;
    precise float _482 = _447 * cbSceneParam._m0[25u].x;
    precise float _483 = _448 * cbSceneParam._m0[25u].y;
    precise float _484 = _483 + _482;
    precise float _485 = _449 * cbSceneParam._m0[25u].z;
    precise float _486 = _485 + _484;
    precise float _487 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _488 = _487 + _486;
    precise float _489 = _447 * cbSceneParam._m0[26u].x;
    precise float _490 = _448 * cbSceneParam._m0[26u].y;
    precise float _491 = _490 + _489;
    precise float _492 = _449 * cbSceneParam._m0[26u].z;
    precise float _493 = _492 + _491;
    precise float _494 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _495 = _494 + _493;
    precise float _496 = _447 * cbSceneParam._m0[27u].x;
    precise float _497 = _448 * cbSceneParam._m0[27u].y;
    precise float _498 = _497 + _496;
    precise float _499 = _449 * cbSceneParam._m0[27u].z;
    precise float _500 = _499 + _498;
    precise float _501 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _502 = _501 + _500;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _481;
    gl_Position.y = _488;
    gl_Position.z = _495;
    gl_Position.w = _502;
    gl_ClipDistance[0u] = dot(vec4(_481, _488, _495, _502), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_481, _488, _495, _502), vec4(cbInstanceData._m0[_236 + 3u]));
}


