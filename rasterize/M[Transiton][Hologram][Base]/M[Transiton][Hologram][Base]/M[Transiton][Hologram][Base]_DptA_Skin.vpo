#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _194 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _196 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _197 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _198 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _203 = _194 * cbTexScroll._m0[0u].x;
    precise float _204 = _196 * cbTexScroll._m0[0u].y;
    precise float _207 = _203 + cbTexScroll._m0[0u].z;
    precise float _208 = _204 + cbTexScroll._m0[0u].w;
    precise float _222 = float(NORMAL.x) + (-127.0);
    precise float _224 = float(NORMAL.y) + (-127.0);
    precise float _225 = float(NORMAL.z) + (-127.0);
    precise float _226 = _222 * 0.0078740157186985015869140625;
    precise float _228 = _224 * 0.0078740157186985015869140625;
    precise float _229 = _225 * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _251 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _252 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _253 = _207 + _251;
    precise float _254 = _208 + _252;
    precise float _261 = _253 * cbTextureTilingScale._m0[3u].x;
    precise float _262 = cbTextureTilingScale._m0[3u].y * _254;
    precise float _263 = cbTextureTilingScale._m0[3u].z + _261;
    precise float _264 = cbTextureTilingScale._m0[3u].w + _262;
    vec4 _267 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_263, _264), 0.0);
    float _269 = _267.x;
    precise float _275 = _226 * cbMtdParam._m0[24u].z;
    precise float _276 = _228 * cbMtdParam._m0[24u].w;
    precise float _277 = _229 * cbMtdParam._m0[25u].x;
    precise float _278 = _269 * _275;
    precise float _279 = _269 * _276;
    precise float _280 = _269 * _277;
    precise float _281 = _275 + _278;
    precise float _282 = _276 + _279;
    precise float _283 = _277 + _280;
    precise float _284 = _275 * 0.0;
    precise float _285 = _276 * 0.0;
    precise float _286 = _277 * 0.0;
    precise float _287 = _284 + _281;
    precise float _288 = _285 + _282;
    precise float _289 = _286 + _283;
    precise float _290 = POSITION.x + _287;
    precise float _291 = POSITION.y + _288;
    precise float _292 = POSITION.z + _289;
    uint _297 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _299 = texelFetch(g_InstanceIndexBuffer, int(_297));
    uint _300 = _299.x;
    precise float _301 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _306 = isnan(_301) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _301 : max(0.001000000047497451305389404296875, _301));
    precise float _308 = BLENDWEIGHT.x / _306;
    precise float _309 = BLENDWEIGHT.y / _306;
    precise float _310 = BLENDWEIGHT.z / _306;
    precise float _311 = BLENDWEIGHT.w / _306;
    uint _313 = _300 * 13u;
    uvec4 _318 = floatBitsToUint(cbInstanceData._m0[_313 + 4u]);
    uint _319 = _318.x;
    uint _321 = (_319 + uint(float(BLENDINDICES.x))) * 3u;
    uint _328 = _321 + 1u;
    uint _335 = _321 + 2u;
    precise float _342 = _308 * cbObjMatrix._m0[_321].x;
    precise float _343 = _308 * cbObjMatrix._m0[_328].x;
    precise float _344 = _308 * cbObjMatrix._m0[_335].x;
    precise float _345 = _308 * cbObjMatrix._m0[_321].y;
    precise float _346 = _308 * cbObjMatrix._m0[_328].y;
    precise float _347 = _308 * cbObjMatrix._m0[_335].y;
    precise float _348 = _308 * cbObjMatrix._m0[_321].z;
    precise float _349 = _308 * cbObjMatrix._m0[_328].z;
    precise float _350 = _308 * cbObjMatrix._m0[_335].z;
    precise float _351 = _308 * cbObjMatrix._m0[_321].w;
    precise float _352 = _308 * cbObjMatrix._m0[_328].w;
    precise float _353 = _308 * cbObjMatrix._m0[_335].w;
    uint _356 = (_319 + uint(float(BLENDINDICES.y))) * 3u;
    uint _363 = _356 + 1u;
    uint _370 = _356 + 2u;
    precise float _377 = _309 * cbObjMatrix._m0[_356].x;
    precise float _378 = _309 * cbObjMatrix._m0[_363].x;
    precise float _379 = _309 * cbObjMatrix._m0[_370].x;
    precise float _380 = _309 * cbObjMatrix._m0[_356].y;
    precise float _381 = _309 * cbObjMatrix._m0[_363].y;
    precise float _382 = _309 * cbObjMatrix._m0[_370].y;
    precise float _383 = _309 * cbObjMatrix._m0[_356].z;
    precise float _384 = _309 * cbObjMatrix._m0[_363].z;
    precise float _385 = _309 * cbObjMatrix._m0[_370].z;
    precise float _386 = _309 * cbObjMatrix._m0[_356].w;
    precise float _387 = _309 * cbObjMatrix._m0[_363].w;
    precise float _388 = _309 * cbObjMatrix._m0[_370].w;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    uint _403 = (_319 + uint(float(BLENDINDICES.z))) * 3u;
    uint _410 = _403 + 1u;
    uint _417 = _403 + 2u;
    precise float _424 = _310 * cbObjMatrix._m0[_403].x;
    precise float _425 = _310 * cbObjMatrix._m0[_410].x;
    precise float _426 = _310 * cbObjMatrix._m0[_417].x;
    precise float _427 = _310 * cbObjMatrix._m0[_403].y;
    precise float _428 = _310 * cbObjMatrix._m0[_410].y;
    precise float _429 = _310 * cbObjMatrix._m0[_417].y;
    precise float _430 = _310 * cbObjMatrix._m0[_403].z;
    precise float _431 = _310 * cbObjMatrix._m0[_410].z;
    precise float _432 = _310 * cbObjMatrix._m0[_417].z;
    precise float _433 = _310 * cbObjMatrix._m0[_403].w;
    precise float _434 = _310 * cbObjMatrix._m0[_410].w;
    precise float _435 = _310 * cbObjMatrix._m0[_417].w;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    uint _450 = (_319 + uint(float(BLENDINDICES.w))) * 3u;
    uint _457 = _450 + 1u;
    uint _464 = _450 + 2u;
    precise float _471 = _311 * cbObjMatrix._m0[_450].x;
    precise float _472 = _311 * cbObjMatrix._m0[_457].x;
    precise float _473 = _311 * cbObjMatrix._m0[_464].x;
    precise float _474 = _311 * cbObjMatrix._m0[_450].y;
    precise float _475 = _311 * cbObjMatrix._m0[_457].y;
    precise float _476 = _311 * cbObjMatrix._m0[_464].y;
    precise float _477 = _311 * cbObjMatrix._m0[_450].z;
    precise float _478 = _311 * cbObjMatrix._m0[_457].z;
    precise float _479 = _311 * cbObjMatrix._m0[_464].z;
    precise float _480 = _311 * cbObjMatrix._m0[_450].w;
    precise float _481 = _311 * cbObjMatrix._m0[_457].w;
    precise float _482 = _311 * cbObjMatrix._m0[_464].w;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _290 * _483;
    precise float _496 = _291 * _486;
    precise float _497 = _496 + _495;
    precise float _498 = _292 * _489;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * _492;
    precise float _501 = _500 + _499;
    precise float _502 = _290 * _484;
    precise float _503 = _291 * _487;
    precise float _504 = _503 + _502;
    precise float _505 = _292 * _490;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * _493;
    precise float _508 = _507 + _506;
    precise float _509 = _290 * _485;
    precise float _510 = _291 * _488;
    precise float _511 = _510 + _509;
    precise float _512 = _292 * _491;
    precise float _513 = _512 + _511;
    precise float _514 = 1.0 * _494;
    precise float _515 = _514 + _513;
    precise float _535 = _501 + 0.0;
    precise float _536 = _508 + 0.0;
    precise float _537 = _515 + 0.0;
    precise float _543 = _535 - cbSceneParam._m0[3u].x;
    precise float _544 = _536 - cbSceneParam._m0[3u].y;
    precise float _545 = _537 - cbSceneParam._m0[3u].z;
    precise float _571 = _543 * cbSceneParam._m0[24u].x;
    precise float _572 = _544 * cbSceneParam._m0[24u].y;
    precise float _573 = _572 + _571;
    precise float _574 = _545 * cbSceneParam._m0[24u].z;
    precise float _575 = _574 + _573;
    precise float _576 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _577 = _576 + _575;
    precise float _578 = _543 * cbSceneParam._m0[25u].x;
    precise float _579 = _544 * cbSceneParam._m0[25u].y;
    precise float _580 = _579 + _578;
    precise float _581 = _545 * cbSceneParam._m0[25u].z;
    precise float _582 = _581 + _580;
    precise float _583 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _584 = _583 + _582;
    precise float _585 = _543 * cbSceneParam._m0[26u].x;
    precise float _586 = _544 * cbSceneParam._m0[26u].y;
    precise float _587 = _586 + _585;
    precise float _588 = _545 * cbSceneParam._m0[26u].z;
    precise float _589 = _588 + _587;
    precise float _590 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _591 = _590 + _589;
    precise float _592 = _543 * cbSceneParam._m0[27u].x;
    precise float _593 = _544 * cbSceneParam._m0[27u].y;
    precise float _594 = _593 + _592;
    precise float _595 = _545 * cbSceneParam._m0[27u].z;
    precise float _596 = _595 + _594;
    precise float _597 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _598 = _597 + _596;
    gl_Position.x = _577;
    gl_Position.y = _584;
    gl_Position.z = _591;
    gl_Position.w = _598;
    POSITION_1.x = _577;
    POSITION_1.y = _584;
    POSITION_1.z = _591;
    POSITION_1.w = _598;
    NORMAL_1.x = fma(_229, _489, fma(_228, _486, _483 * _226));
    NORMAL_1.y = fma(_229, _490, fma(_228, _487, _484 * _226));
    NORMAL_1.z = fma(_229, _491, fma(_228, _488, _485 * _226));
    NORMAL_1.w = float(_300);
    TANGENT_1.x = fma(_240, _489, fma(_239, _486, _483 * _238));
    TANGENT_1.y = fma(_240, _490, fma(_239, _487, _484 * _238));
    TANGENT_1.z = fma(_240, _491, fma(_239, _488, _485 * _238));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _207;
    TEXCOORD_2.y = _208;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _197) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _198) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _591;
    TEXCOORD_9.y = _598;
    gl_ClipDistance[0u] = dot(vec4(_577, _584, _591, _598), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_577, _584, _591, _598), vec4(cbInstanceData._m0[_313 + 3u]));
}


