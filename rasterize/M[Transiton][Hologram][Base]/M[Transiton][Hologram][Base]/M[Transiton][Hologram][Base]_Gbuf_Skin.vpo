#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _189 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _191 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _192 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _193 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _198 = _189 * cbTexScroll._m0[0u].x;
    precise float _199 = _191 * cbTexScroll._m0[0u].y;
    precise float _202 = _198 + cbTexScroll._m0[0u].z;
    precise float _203 = _199 + cbTexScroll._m0[0u].w;
    precise float _217 = float(NORMAL.x) + (-127.0);
    precise float _219 = float(NORMAL.y) + (-127.0);
    precise float _220 = float(NORMAL.z) + (-127.0);
    precise float _221 = _217 * 0.0078740157186985015869140625;
    precise float _223 = _219 * 0.0078740157186985015869140625;
    precise float _224 = _220 * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _246 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _247 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _248 = _202 + _246;
    precise float _249 = _203 + _247;
    precise float _256 = _248 * cbTextureTilingScale._m0[3u].x;
    precise float _257 = cbTextureTilingScale._m0[3u].y * _249;
    precise float _258 = cbTextureTilingScale._m0[3u].z + _256;
    precise float _259 = cbTextureTilingScale._m0[3u].w + _257;
    vec4 _262 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_258, _259), 0.0);
    float _265 = _262.x;
    precise float _271 = _221 * cbMtdParam._m0[24u].z;
    precise float _272 = _223 * cbMtdParam._m0[24u].w;
    precise float _273 = _224 * cbMtdParam._m0[25u].x;
    precise float _274 = _265 * _271;
    precise float _275 = _265 * _272;
    precise float _276 = _265 * _273;
    precise float _277 = _271 + _274;
    precise float _278 = _272 + _275;
    precise float _279 = _273 + _276;
    precise float _280 = _271 * 0.0;
    precise float _281 = _272 * 0.0;
    precise float _282 = _273 * 0.0;
    precise float _283 = _280 + _277;
    precise float _284 = _281 + _278;
    precise float _285 = _282 + _279;
    precise float _286 = POSITION.x + _283;
    precise float _287 = POSITION.y + _284;
    precise float _288 = POSITION.z + _285;
    uint _293 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _295 = texelFetch(g_InstanceIndexBuffer, int(_293));
    uint _296 = _295.x;
    precise float _297 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _302 = isnan(_297) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _297 : max(0.001000000047497451305389404296875, _297));
    precise float _304 = BLENDWEIGHT.x / _302;
    precise float _305 = BLENDWEIGHT.y / _302;
    precise float _306 = BLENDWEIGHT.z / _302;
    precise float _307 = BLENDWEIGHT.w / _302;
    uint _309 = _296 * 13u;
    uvec4 _314 = floatBitsToUint(cbInstanceData._m0[_309 + 4u]);
    uint _315 = _314.x;
    uint _317 = (_315 + uint(float(BLENDINDICES.x))) * 3u;
    uint _324 = _317 + 1u;
    uint _331 = _317 + 2u;
    precise float _338 = _304 * cbObjMatrix._m0[_317].x;
    precise float _339 = _304 * cbObjMatrix._m0[_324].x;
    precise float _340 = _304 * cbObjMatrix._m0[_331].x;
    precise float _341 = _304 * cbObjMatrix._m0[_317].y;
    precise float _342 = _304 * cbObjMatrix._m0[_324].y;
    precise float _343 = _304 * cbObjMatrix._m0[_331].y;
    precise float _344 = _304 * cbObjMatrix._m0[_317].z;
    precise float _345 = _304 * cbObjMatrix._m0[_324].z;
    precise float _346 = _304 * cbObjMatrix._m0[_331].z;
    precise float _347 = _304 * cbObjMatrix._m0[_317].w;
    precise float _348 = _304 * cbObjMatrix._m0[_324].w;
    precise float _349 = _304 * cbObjMatrix._m0[_331].w;
    uint _352 = (_315 + uint(float(BLENDINDICES.y))) * 3u;
    uint _359 = _352 + 1u;
    uint _366 = _352 + 2u;
    precise float _373 = _305 * cbObjMatrix._m0[_352].x;
    precise float _374 = _305 * cbObjMatrix._m0[_359].x;
    precise float _375 = _305 * cbObjMatrix._m0[_366].x;
    precise float _376 = _305 * cbObjMatrix._m0[_352].y;
    precise float _377 = _305 * cbObjMatrix._m0[_359].y;
    precise float _378 = _305 * cbObjMatrix._m0[_366].y;
    precise float _379 = _305 * cbObjMatrix._m0[_352].z;
    precise float _380 = _305 * cbObjMatrix._m0[_359].z;
    precise float _381 = _305 * cbObjMatrix._m0[_366].z;
    precise float _382 = _305 * cbObjMatrix._m0[_352].w;
    precise float _383 = _305 * cbObjMatrix._m0[_359].w;
    precise float _384 = _305 * cbObjMatrix._m0[_366].w;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    uint _399 = (_315 + uint(float(BLENDINDICES.z))) * 3u;
    uint _406 = _399 + 1u;
    uint _413 = _399 + 2u;
    precise float _420 = _306 * cbObjMatrix._m0[_399].x;
    precise float _421 = _306 * cbObjMatrix._m0[_406].x;
    precise float _422 = _306 * cbObjMatrix._m0[_413].x;
    precise float _423 = _306 * cbObjMatrix._m0[_399].y;
    precise float _424 = _306 * cbObjMatrix._m0[_406].y;
    precise float _425 = _306 * cbObjMatrix._m0[_413].y;
    precise float _426 = _306 * cbObjMatrix._m0[_399].z;
    precise float _427 = _306 * cbObjMatrix._m0[_406].z;
    precise float _428 = _306 * cbObjMatrix._m0[_413].z;
    precise float _429 = _306 * cbObjMatrix._m0[_399].w;
    precise float _430 = _306 * cbObjMatrix._m0[_406].w;
    precise float _431 = _306 * cbObjMatrix._m0[_413].w;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    uint _446 = (_315 + uint(float(BLENDINDICES.w))) * 3u;
    uint _453 = _446 + 1u;
    uint _460 = _446 + 2u;
    precise float _467 = _307 * cbObjMatrix._m0[_446].x;
    precise float _468 = _307 * cbObjMatrix._m0[_453].x;
    precise float _469 = _307 * cbObjMatrix._m0[_460].x;
    precise float _470 = _307 * cbObjMatrix._m0[_446].y;
    precise float _471 = _307 * cbObjMatrix._m0[_453].y;
    precise float _472 = _307 * cbObjMatrix._m0[_460].y;
    precise float _473 = _307 * cbObjMatrix._m0[_446].z;
    precise float _474 = _307 * cbObjMatrix._m0[_453].z;
    precise float _475 = _307 * cbObjMatrix._m0[_460].z;
    precise float _476 = _307 * cbObjMatrix._m0[_446].w;
    precise float _477 = _307 * cbObjMatrix._m0[_453].w;
    precise float _478 = _307 * cbObjMatrix._m0[_460].w;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _286 * _479;
    precise float _492 = _287 * _482;
    precise float _493 = _492 + _491;
    precise float _494 = _288 * _485;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _488;
    precise float _497 = _496 + _495;
    precise float _498 = _286 * _480;
    precise float _499 = _287 * _483;
    precise float _500 = _499 + _498;
    precise float _501 = _288 * _486;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _489;
    precise float _504 = _503 + _502;
    precise float _505 = _286 * _481;
    precise float _506 = _287 * _484;
    precise float _507 = _506 + _505;
    precise float _508 = _288 * _487;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _490;
    precise float _511 = _510 + _509;
    precise float _531 = _497 + 0.0;
    precise float _532 = _504 + 0.0;
    precise float _533 = _511 + 0.0;
    precise float _539 = _531 - cbSceneParam._m0[3u].x;
    precise float _540 = _532 - cbSceneParam._m0[3u].y;
    precise float _541 = _533 - cbSceneParam._m0[3u].z;
    precise float _567 = _539 * cbSceneParam._m0[24u].x;
    precise float _568 = _540 * cbSceneParam._m0[24u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _541 * cbSceneParam._m0[24u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _539 * cbSceneParam._m0[25u].x;
    precise float _575 = _540 * cbSceneParam._m0[25u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _541 * cbSceneParam._m0[25u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _539 * cbSceneParam._m0[26u].x;
    precise float _582 = _540 * cbSceneParam._m0[26u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _541 * cbSceneParam._m0[26u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _587 = _586 + _585;
    precise float _588 = _539 * cbSceneParam._m0[27u].x;
    precise float _589 = _540 * cbSceneParam._m0[27u].y;
    precise float _590 = _589 + _588;
    precise float _591 = _541 * cbSceneParam._m0[27u].z;
    precise float _592 = _591 + _590;
    precise float _593 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _594 = _593 + _592;
    gl_Position.x = _573;
    gl_Position.y = _580;
    gl_Position.z = _587;
    gl_Position.w = _594;
    POSITION_1.x = _573;
    POSITION_1.y = _580;
    POSITION_1.z = _587;
    POSITION_1.w = _594;
    NORMAL_1.x = fma(_224, _485, fma(_223, _482, _479 * _221));
    NORMAL_1.y = fma(_224, _486, fma(_223, _483, _480 * _221));
    NORMAL_1.z = fma(_224, _487, fma(_223, _484, _481 * _221));
    NORMAL_1.w = float(_296);
    TANGENT_1.x = fma(_235, _485, fma(_234, _482, _479 * _233));
    TANGENT_1.y = fma(_235, _486, fma(_234, _483, _480 * _233));
    TANGENT_1.z = fma(_235, _487, fma(_234, _484, _481 * _233));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _202;
    TEXCOORD_2.y = _203;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _192) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _193) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_573, _580, _587, _594), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_573, _580, _587, _594), vec4(cbInstanceData._m0[_309 + 3u]));
}


