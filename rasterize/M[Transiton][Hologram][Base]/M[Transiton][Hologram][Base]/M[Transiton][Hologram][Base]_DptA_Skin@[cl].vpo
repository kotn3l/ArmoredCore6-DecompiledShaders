#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    precise float _189 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _191 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _192 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _193 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _198 = _189 * cbTexScroll._m0[0u].x;
    precise float _199 = _191 * cbTexScroll._m0[0u].y;
    precise float _202 = _198 + cbTexScroll._m0[0u].z;
    precise float _203 = _199 + cbTexScroll._m0[0u].w;
    precise float _217 = float(NORMAL.x) + (-127.0);
    precise float _219 = float(NORMAL.y) + (-127.0);
    precise float _220 = float(NORMAL.z) + (-127.0);
    precise float _221 = _217 * 0.0078740157186985015869140625;
    precise float _223 = _219 * 0.0078740157186985015869140625;
    precise float _224 = _220 * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _246 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _247 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _248 = _202 + _246;
    precise float _249 = _203 + _247;
    precise float _256 = _248 * cbTextureTilingScale._m0[3u].x;
    precise float _257 = cbTextureTilingScale._m0[3u].y * _249;
    precise float _258 = cbTextureTilingScale._m0[3u].z + _256;
    precise float _259 = cbTextureTilingScale._m0[3u].w + _257;
    vec4 _262 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_258, _259), 0.0);
    float _264 = _262.x;
    precise float _270 = _221 * cbMtdParam._m0[24u].z;
    precise float _271 = _223 * cbMtdParam._m0[24u].w;
    precise float _272 = _224 * cbMtdParam._m0[25u].x;
    precise float _273 = _264 * _270;
    precise float _274 = _264 * _271;
    precise float _275 = _264 * _272;
    precise float _276 = _270 + _273;
    precise float _277 = _271 + _274;
    precise float _278 = _272 + _275;
    precise float _279 = _270 * 0.0;
    precise float _280 = _271 * 0.0;
    precise float _281 = _272 * 0.0;
    precise float _282 = _279 + _276;
    precise float _283 = _280 + _277;
    precise float _284 = _281 + _278;
    precise float _285 = POSITION.x + _282;
    precise float _286 = POSITION.y + _283;
    precise float _287 = POSITION.z + _284;
    uint _292 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _294 = texelFetch(g_InstanceIndexBuffer, int(_292));
    uint _295 = _294.x;
    precise float _296 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _301 = isnan(_296) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _296 : max(0.001000000047497451305389404296875, _296));
    precise float _303 = BLENDWEIGHT.x / _301;
    precise float _304 = BLENDWEIGHT.y / _301;
    precise float _305 = BLENDWEIGHT.z / _301;
    precise float _306 = BLENDWEIGHT.w / _301;
    uvec4 _313 = floatBitsToUint(cbInstanceData._m0[(_295 * 13u) + 4u]);
    uint _314 = _313.x;
    uint _316 = (_314 + uint(float(BLENDINDICES.x))) * 3u;
    uint _323 = _316 + 1u;
    uint _330 = _316 + 2u;
    precise float _337 = _303 * cbObjMatrix._m0[_316].x;
    precise float _338 = _303 * cbObjMatrix._m0[_323].x;
    precise float _339 = _303 * cbObjMatrix._m0[_330].x;
    precise float _340 = _303 * cbObjMatrix._m0[_316].y;
    precise float _341 = _303 * cbObjMatrix._m0[_323].y;
    precise float _342 = _303 * cbObjMatrix._m0[_330].y;
    precise float _343 = _303 * cbObjMatrix._m0[_316].z;
    precise float _344 = _303 * cbObjMatrix._m0[_323].z;
    precise float _345 = _303 * cbObjMatrix._m0[_330].z;
    precise float _346 = _303 * cbObjMatrix._m0[_316].w;
    precise float _347 = _303 * cbObjMatrix._m0[_323].w;
    precise float _348 = _303 * cbObjMatrix._m0[_330].w;
    uint _351 = (_314 + uint(float(BLENDINDICES.y))) * 3u;
    uint _358 = _351 + 1u;
    uint _365 = _351 + 2u;
    precise float _372 = _304 * cbObjMatrix._m0[_351].x;
    precise float _373 = _304 * cbObjMatrix._m0[_358].x;
    precise float _374 = _304 * cbObjMatrix._m0[_365].x;
    precise float _375 = _304 * cbObjMatrix._m0[_351].y;
    precise float _376 = _304 * cbObjMatrix._m0[_358].y;
    precise float _377 = _304 * cbObjMatrix._m0[_365].y;
    precise float _378 = _304 * cbObjMatrix._m0[_351].z;
    precise float _379 = _304 * cbObjMatrix._m0[_358].z;
    precise float _380 = _304 * cbObjMatrix._m0[_365].z;
    precise float _381 = _304 * cbObjMatrix._m0[_351].w;
    precise float _382 = _304 * cbObjMatrix._m0[_358].w;
    precise float _383 = _304 * cbObjMatrix._m0[_365].w;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    uint _398 = (_314 + uint(float(BLENDINDICES.z))) * 3u;
    uint _405 = _398 + 1u;
    uint _412 = _398 + 2u;
    precise float _419 = _305 * cbObjMatrix._m0[_398].x;
    precise float _420 = _305 * cbObjMatrix._m0[_405].x;
    precise float _421 = _305 * cbObjMatrix._m0[_412].x;
    precise float _422 = _305 * cbObjMatrix._m0[_398].y;
    precise float _423 = _305 * cbObjMatrix._m0[_405].y;
    precise float _424 = _305 * cbObjMatrix._m0[_412].y;
    precise float _425 = _305 * cbObjMatrix._m0[_398].z;
    precise float _426 = _305 * cbObjMatrix._m0[_405].z;
    precise float _427 = _305 * cbObjMatrix._m0[_412].z;
    precise float _428 = _305 * cbObjMatrix._m0[_398].w;
    precise float _429 = _305 * cbObjMatrix._m0[_405].w;
    precise float _430 = _305 * cbObjMatrix._m0[_412].w;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    uint _445 = (_314 + uint(float(BLENDINDICES.w))) * 3u;
    uint _452 = _445 + 1u;
    uint _459 = _445 + 2u;
    precise float _466 = _306 * cbObjMatrix._m0[_445].x;
    precise float _467 = _306 * cbObjMatrix._m0[_452].x;
    precise float _468 = _306 * cbObjMatrix._m0[_459].x;
    precise float _469 = _306 * cbObjMatrix._m0[_445].y;
    precise float _470 = _306 * cbObjMatrix._m0[_452].y;
    precise float _471 = _306 * cbObjMatrix._m0[_459].y;
    precise float _472 = _306 * cbObjMatrix._m0[_445].z;
    precise float _473 = _306 * cbObjMatrix._m0[_452].z;
    precise float _474 = _306 * cbObjMatrix._m0[_459].z;
    precise float _475 = _306 * cbObjMatrix._m0[_445].w;
    precise float _476 = _306 * cbObjMatrix._m0[_452].w;
    precise float _477 = _306 * cbObjMatrix._m0[_459].w;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _285 * _478;
    precise float _491 = _286 * _481;
    precise float _492 = _491 + _490;
    precise float _493 = _287 * _484;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * _487;
    precise float _496 = _495 + _494;
    precise float _497 = _285 * _479;
    precise float _498 = _286 * _482;
    precise float _499 = _498 + _497;
    precise float _500 = _287 * _485;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _488;
    precise float _503 = _502 + _501;
    precise float _504 = _285 * _480;
    precise float _505 = _286 * _483;
    precise float _506 = _505 + _504;
    precise float _507 = _287 * _486;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * _489;
    precise float _510 = _509 + _508;
    precise float _530 = _496 + 0.0;
    precise float _531 = _503 + 0.0;
    precise float _532 = _510 + 0.0;
    precise float _538 = _530 - cbSceneParam._m0[3u].x;
    precise float _539 = _531 - cbSceneParam._m0[3u].y;
    precise float _540 = _532 - cbSceneParam._m0[3u].z;
    precise float _566 = _538 * cbSceneParam._m0[24u].x;
    precise float _567 = _539 * cbSceneParam._m0[24u].y;
    precise float _568 = _567 + _566;
    precise float _569 = _540 * cbSceneParam._m0[24u].z;
    precise float _570 = _569 + _568;
    precise float _571 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _572 = _571 + _570;
    precise float _573 = _538 * cbSceneParam._m0[25u].x;
    precise float _574 = _539 * cbSceneParam._m0[25u].y;
    precise float _575 = _574 + _573;
    precise float _576 = _540 * cbSceneParam._m0[25u].z;
    precise float _577 = _576 + _575;
    precise float _578 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _579 = _578 + _577;
    precise float _580 = _538 * cbSceneParam._m0[26u].x;
    precise float _581 = _539 * cbSceneParam._m0[26u].y;
    precise float _582 = _581 + _580;
    precise float _583 = _540 * cbSceneParam._m0[26u].z;
    precise float _584 = _583 + _582;
    precise float _585 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _586 = _585 + _584;
    precise float _587 = _538 * cbSceneParam._m0[27u].x;
    precise float _588 = _539 * cbSceneParam._m0[27u].y;
    precise float _589 = _588 + _587;
    precise float _590 = _540 * cbSceneParam._m0[27u].z;
    precise float _591 = _590 + _589;
    precise float _592 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _593 = _592 + _591;
    gl_Position.x = _572;
    gl_Position.y = _579;
    gl_Position.z = _586;
    gl_Position.w = _593;
    POSITION_1.x = _572;
    POSITION_1.y = _579;
    POSITION_1.z = _586;
    POSITION_1.w = _593;
    NORMAL_1.x = fma(_224, _484, fma(_223, _481, _478 * _221));
    NORMAL_1.y = fma(_224, _485, fma(_223, _482, _479 * _221));
    NORMAL_1.z = fma(_224, _486, fma(_223, _483, _480 * _221));
    NORMAL_1.w = float(_295);
    TANGENT_1.x = fma(_235, _484, fma(_234, _481, _478 * _233));
    TANGENT_1.y = fma(_235, _485, fma(_234, _482, _479 * _233));
    TANGENT_1.z = fma(_235, _486, fma(_234, _483, _480 * _233));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _202;
    TEXCOORD_2.y = _203;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _192) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _193) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _586;
    TEXCOORD_9.y = _593;
}


