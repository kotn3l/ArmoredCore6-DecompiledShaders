#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_Base_snp_0_Texture2D_11;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    precise float _184 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _186 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _187 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _188 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _193 = _184 * cbTexScroll._m0[0u].x;
    precise float _194 = _186 * cbTexScroll._m0[0u].y;
    precise float _197 = _193 + cbTexScroll._m0[0u].z;
    precise float _198 = _194 + cbTexScroll._m0[0u].w;
    precise float _212 = float(NORMAL.x) + (-127.0);
    precise float _214 = float(NORMAL.y) + (-127.0);
    precise float _215 = float(NORMAL.z) + (-127.0);
    precise float _216 = _212 * 0.0078740157186985015869140625;
    precise float _218 = _214 * 0.0078740157186985015869140625;
    precise float _219 = _215 * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _241 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].x;
    precise float _242 = cbPerFrame._m0[22u].x * cbMtdParam._m0[24u].y;
    precise float _243 = _197 + _241;
    precise float _244 = _198 + _242;
    precise float _251 = _243 * cbTextureTilingScale._m0[3u].x;
    precise float _252 = cbTextureTilingScale._m0[3u].y * _244;
    precise float _253 = cbTextureTilingScale._m0[3u].z + _251;
    precise float _254 = cbTextureTilingScale._m0[3u].w + _252;
    vec4 _257 = textureLod(sampler2D(M_Transiton_Hologram_Base_snp_0_Texture2D_11, SS_DiffuseMap), vec2(_253, _254), 0.0);
    float _260 = _257.x;
    precise float _266 = _216 * cbMtdParam._m0[24u].z;
    precise float _267 = _218 * cbMtdParam._m0[24u].w;
    precise float _268 = _219 * cbMtdParam._m0[25u].x;
    precise float _269 = _260 * _266;
    precise float _270 = _260 * _267;
    precise float _271 = _260 * _268;
    precise float _272 = _266 + _269;
    precise float _273 = _267 + _270;
    precise float _274 = _268 + _271;
    precise float _275 = _266 * 0.0;
    precise float _276 = _267 * 0.0;
    precise float _277 = _268 * 0.0;
    precise float _278 = _275 + _272;
    precise float _279 = _276 + _273;
    precise float _280 = _277 + _274;
    precise float _281 = POSITION.x + _278;
    precise float _282 = POSITION.y + _279;
    precise float _283 = POSITION.z + _280;
    uint _288 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _290 = texelFetch(g_InstanceIndexBuffer, int(_288));
    uint _291 = _290.x;
    precise float _292 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _297 = isnan(_292) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _292 : max(0.001000000047497451305389404296875, _292));
    precise float _299 = BLENDWEIGHT.x / _297;
    precise float _300 = BLENDWEIGHT.y / _297;
    precise float _301 = BLENDWEIGHT.z / _297;
    precise float _302 = BLENDWEIGHT.w / _297;
    uvec4 _309 = floatBitsToUint(cbInstanceData._m0[(_291 * 13u) + 4u]);
    uint _310 = _309.x;
    uint _312 = (_310 + uint(float(BLENDINDICES.x))) * 3u;
    uint _319 = _312 + 1u;
    uint _326 = _312 + 2u;
    precise float _333 = _299 * cbObjMatrix._m0[_312].x;
    precise float _334 = _299 * cbObjMatrix._m0[_319].x;
    precise float _335 = _299 * cbObjMatrix._m0[_326].x;
    precise float _336 = _299 * cbObjMatrix._m0[_312].y;
    precise float _337 = _299 * cbObjMatrix._m0[_319].y;
    precise float _338 = _299 * cbObjMatrix._m0[_326].y;
    precise float _339 = _299 * cbObjMatrix._m0[_312].z;
    precise float _340 = _299 * cbObjMatrix._m0[_319].z;
    precise float _341 = _299 * cbObjMatrix._m0[_326].z;
    precise float _342 = _299 * cbObjMatrix._m0[_312].w;
    precise float _343 = _299 * cbObjMatrix._m0[_319].w;
    precise float _344 = _299 * cbObjMatrix._m0[_326].w;
    uint _347 = (_310 + uint(float(BLENDINDICES.y))) * 3u;
    uint _354 = _347 + 1u;
    uint _361 = _347 + 2u;
    precise float _368 = _300 * cbObjMatrix._m0[_347].x;
    precise float _369 = _300 * cbObjMatrix._m0[_354].x;
    precise float _370 = _300 * cbObjMatrix._m0[_361].x;
    precise float _371 = _300 * cbObjMatrix._m0[_347].y;
    precise float _372 = _300 * cbObjMatrix._m0[_354].y;
    precise float _373 = _300 * cbObjMatrix._m0[_361].y;
    precise float _374 = _300 * cbObjMatrix._m0[_347].z;
    precise float _375 = _300 * cbObjMatrix._m0[_354].z;
    precise float _376 = _300 * cbObjMatrix._m0[_361].z;
    precise float _377 = _300 * cbObjMatrix._m0[_347].w;
    precise float _378 = _300 * cbObjMatrix._m0[_354].w;
    precise float _379 = _300 * cbObjMatrix._m0[_361].w;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    uint _394 = (_310 + uint(float(BLENDINDICES.z))) * 3u;
    uint _401 = _394 + 1u;
    uint _408 = _394 + 2u;
    precise float _415 = _301 * cbObjMatrix._m0[_394].x;
    precise float _416 = _301 * cbObjMatrix._m0[_401].x;
    precise float _417 = _301 * cbObjMatrix._m0[_408].x;
    precise float _418 = _301 * cbObjMatrix._m0[_394].y;
    precise float _419 = _301 * cbObjMatrix._m0[_401].y;
    precise float _420 = _301 * cbObjMatrix._m0[_408].y;
    precise float _421 = _301 * cbObjMatrix._m0[_394].z;
    precise float _422 = _301 * cbObjMatrix._m0[_401].z;
    precise float _423 = _301 * cbObjMatrix._m0[_408].z;
    precise float _424 = _301 * cbObjMatrix._m0[_394].w;
    precise float _425 = _301 * cbObjMatrix._m0[_401].w;
    precise float _426 = _301 * cbObjMatrix._m0[_408].w;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    uint _441 = (_310 + uint(float(BLENDINDICES.w))) * 3u;
    uint _448 = _441 + 1u;
    uint _455 = _441 + 2u;
    precise float _462 = _302 * cbObjMatrix._m0[_441].x;
    precise float _463 = _302 * cbObjMatrix._m0[_448].x;
    precise float _464 = _302 * cbObjMatrix._m0[_455].x;
    precise float _465 = _302 * cbObjMatrix._m0[_441].y;
    precise float _466 = _302 * cbObjMatrix._m0[_448].y;
    precise float _467 = _302 * cbObjMatrix._m0[_455].y;
    precise float _468 = _302 * cbObjMatrix._m0[_441].z;
    precise float _469 = _302 * cbObjMatrix._m0[_448].z;
    precise float _470 = _302 * cbObjMatrix._m0[_455].z;
    precise float _471 = _302 * cbObjMatrix._m0[_441].w;
    precise float _472 = _302 * cbObjMatrix._m0[_448].w;
    precise float _473 = _302 * cbObjMatrix._m0[_455].w;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _281 * _474;
    precise float _487 = _282 * _477;
    precise float _488 = _487 + _486;
    precise float _489 = _283 * _480;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * _483;
    precise float _492 = _491 + _490;
    precise float _493 = _281 * _475;
    precise float _494 = _282 * _478;
    precise float _495 = _494 + _493;
    precise float _496 = _283 * _481;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * _484;
    precise float _499 = _498 + _497;
    precise float _500 = _281 * _476;
    precise float _501 = _282 * _479;
    precise float _502 = _501 + _500;
    precise float _503 = _283 * _482;
    precise float _504 = _503 + _502;
    precise float _505 = 1.0 * _485;
    precise float _506 = _505 + _504;
    precise float _526 = _492 + 0.0;
    precise float _527 = _499 + 0.0;
    precise float _528 = _506 + 0.0;
    precise float _534 = _526 - cbSceneParam._m0[3u].x;
    precise float _535 = _527 - cbSceneParam._m0[3u].y;
    precise float _536 = _528 - cbSceneParam._m0[3u].z;
    precise float _562 = _534 * cbSceneParam._m0[24u].x;
    precise float _563 = _535 * cbSceneParam._m0[24u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _536 * cbSceneParam._m0[24u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _568 = _567 + _566;
    precise float _569 = _534 * cbSceneParam._m0[25u].x;
    precise float _570 = _535 * cbSceneParam._m0[25u].y;
    precise float _571 = _570 + _569;
    precise float _572 = _536 * cbSceneParam._m0[25u].z;
    precise float _573 = _572 + _571;
    precise float _574 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _575 = _574 + _573;
    precise float _576 = _534 * cbSceneParam._m0[26u].x;
    precise float _577 = _535 * cbSceneParam._m0[26u].y;
    precise float _578 = _577 + _576;
    precise float _579 = _536 * cbSceneParam._m0[26u].z;
    precise float _580 = _579 + _578;
    precise float _581 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _582 = _581 + _580;
    precise float _583 = _534 * cbSceneParam._m0[27u].x;
    precise float _584 = _535 * cbSceneParam._m0[27u].y;
    precise float _585 = _584 + _583;
    precise float _586 = _536 * cbSceneParam._m0[27u].z;
    precise float _587 = _586 + _585;
    precise float _588 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _589 = _588 + _587;
    gl_Position.x = _568;
    gl_Position.y = _575;
    gl_Position.z = _582;
    gl_Position.w = _589;
    POSITION_1.x = _568;
    POSITION_1.y = _575;
    POSITION_1.z = _582;
    POSITION_1.w = _589;
    NORMAL_1.x = fma(_219, _480, fma(_218, _477, _474 * _216));
    NORMAL_1.y = fma(_219, _481, fma(_218, _478, _475 * _216));
    NORMAL_1.z = fma(_219, _482, fma(_218, _479, _476 * _216));
    NORMAL_1.w = float(_291);
    TANGENT_1.x = fma(_230, _480, fma(_229, _477, _474 * _228));
    TANGENT_1.y = fma(_230, _481, fma(_229, _478, _475 * _228));
    TANGENT_1.z = fma(_230, _482, fma(_229, _479, _476 * _228));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _197;
    TEXCOORD_2.y = _198;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _187) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _188) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
}


