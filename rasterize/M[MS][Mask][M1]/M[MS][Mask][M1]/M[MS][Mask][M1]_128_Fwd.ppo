#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1695;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _248 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _249 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _250 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _256 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _257 = _256 * _248;
    float _258 = _256 * _249;
    float _259 = _256 * _250;
    float _263 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _264 = _263 * NORMAL.x;
    float _265 = _263 * NORMAL.y;
    float _266 = _263 * NORMAL.z;
    float _270 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = _270 * TANGENT.x;
    float _272 = _270 * TANGENT.y;
    float _273 = _270 * TANGENT.z;
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _284 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _285 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4018 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4029 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _4040 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _300 = _295 + 1u;
    uint _304 = _295 + 2u;
    float _313 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _314 = _313 * TEXCOORD.z;
    float _315 = _313 * TEXCOORD.w;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _314) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _315) + cbTextureTilingScale._m0[13u].w));
    vec4 _352 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _357 = _352.x * cbMtdParam._m0[11u].x;
    float _358 = _352.y * cbMtdParam._m0[11u].y;
    float _359 = _352.z * cbMtdParam._m0[11u].z;
    vec4 _378 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _314) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _315) + cbTextureTilingScale._m0[5u].w));
    vec4 _397 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _432 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _434 = _432.x;
    float _446 = dot(vec4(_434, _432.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _463 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _397.x) * 2.0) - ((((_434 - _446) * cbMtdParam._m0[23u].w) + _446) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4051 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _464 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
    float _471 = (_464 * ((_378.x * cbMtdParam._m0[12u].x) - _357)) + _357;
    float _472 = (_464 * ((_378.y * cbMtdParam._m0[12u].y) - _358)) + _358;
    float _473 = (_464 * ((_378.z * cbMtdParam._m0[12u].z) - _359)) + _359;
    vec4 _490 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _314) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _315) + cbTextureTilingScale._m0[3u].w));
    vec4 _510 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _512 = _510.x;
    float _522 = dot(vec4(_512, _510.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _536 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _397.y) * 2.0) - ((((_512 - _522) * cbMtdParam._m0[23u].w) + _522) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4062 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
    float _544 = (_537 * ((_490.x * cbMtdParam._m0[13u].x) - _471)) + _471;
    float _545 = (_537 * ((_490.y * cbMtdParam._m0[13u].y) - _472)) + _472;
    float _546 = (_537 * ((_490.z * cbMtdParam._m0[13u].z) - _473)) + _473;
    vec4 _565 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _314) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _315) + cbTextureTilingScale._m0[24u].w));
    vec4 _582 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _584 = _582.x;
    float _594 = dot(vec4(_584, _582.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _606 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _397.z) * 2.0) - ((((_584 - _594) * cbMtdParam._m0[23u].w) + _594) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4073 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    float _614 = (_607 * ((_565.x * cbMtdParam._m0[14u].x) - _544)) + _544;
    float _615 = (_607 * ((_565.y * cbMtdParam._m0[14u].y) - _545)) + _545;
    float _616 = (_607 * ((_565.z * cbMtdParam._m0[14u].z) - _546)) + _546;
    float _620 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _328.x) * _614;
    float _623 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _328.y) * _615;
    float _626 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _328.z) * _616;
    float _633 = ((_614 - _620) * (isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0)))) + _620;
    float _634 = ((_615 - _623) * (isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0)))) + _623;
    float _635 = ((_616 - _626) * (isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0)))) + _626;
    vec4 _652 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _314) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _315) + cbTextureTilingScale._m0[20u].w));
    vec4 _677 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _314) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _315) + cbTextureTilingScale._m0[4u].w));
    vec4 _694 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _696 = _694.x;
    float _697 = _694.y;
    float _698 = _694.z;
    float _705 = ((_677.x - _696) * _464) + _696;
    float _706 = ((_677.y - _697) * _464) + _697;
    float _707 = ((_677.z - _698) * _464) + _698;
    vec4 _719 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _314) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _315) + cbTextureTilingScale._m0[2u].w));
    float _730 = ((_719.x - _705) * _537) + _705;
    float _731 = ((_719.y - _706) * _537) + _706;
    float _732 = ((_719.z - _707) * _537) + _707;
    vec4 _744 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _314) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _315) + cbTextureTilingScale._m0[23u].w));
    float _757 = ((_744.z - _732) * _607) + _732;
    float _760 = ((((_744.x - _730) * _607) + _730) * 2.0) + (-1.0);
    float _761 = ((((_744.y - _731) * _607) + _731) * 2.0) + (-1.0);
    float _762 = dot(vec2(_760, _761), vec2(_760, _761));
    float _4084 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _767 = sqrt(1.0 - (isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))));
    vec4 _785 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _797 = (_760 + ((((_652.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_785.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _798 = (_761 + ((((_652.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_785.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _801 = fma(_767, _264, fma(_798, _271, _797 * _257));
    float _804 = fma(_767, _265, fma(_798, _272, _797 * _258));
    float _807 = fma(_767, _266, fma(_798, _273, _797 * _259));
    float _811 = inversesqrt(dot(vec3(_801, _804, _807), vec3(_801, _804, _807)));
    vec4 _838 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _314) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _315) + cbTextureTilingScale._m0[11u].w));
    float _840 = _838.x;
    float _841 = 1.0 - _840;
    float _849 = (cbMtdParam._m0[19u].x + dot(vec4(_811 * _801, _811 * _804, _811 * _807, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_840 - _841) * cbMtdParam._m0[24u].z) + _841) * cbMtdParam._m0[21u].z);
    float _4095 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _850 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _852 = (-0.0) - cbMtdParam._m0[24u].x;
    float _854 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _855 = isnan(1.0) ? _854 : (isnan(_854) ? 1.0 : min(_854, 1.0));
    float _862 = _850 - ((_850 * TEXCOORD_8.x) * _855);
    float _863 = _850 - ((_850 * TEXCOORD_8.y) * _855);
    float _864 = _850 - ((_850 * TEXCOORD_8.z) * _855);
    float _871 = (_862 * (cbMtdParam._m0[17u].x - _633)) + _633;
    float _872 = (_863 * (cbMtdParam._m0[17u].y - _634)) + _634;
    float _873 = (_864 * (cbMtdParam._m0[17u].z - _635)) + _635;
    float _888 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _889 = _888 * TEXCOORD.z;
    float _890 = _888 * TEXCOORD.w;
    vec4 _902 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _889) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _890) + cbTextureTilingScale._m0[19u].w));
    float _904 = _902.x;
    float _905 = 1.0 - _904;
    float _931 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_904 - _905) * cbMtdParam._m0[24u].w) + _905) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4116 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    float _932 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
    float _940 = ((((cbMtdParam._m0[10u].x - _871) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _932) + _871;
    float _941 = ((((cbMtdParam._m0[10u].y - _872) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _932) + _872;
    float _942 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _873)) * _932) + _873;
    vec4 _968 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _970 = _968.x;
    float _988 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _314) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _315) + cbTextureTilingScale._m0[9u].w)).x - _970) * _464) + _970;
    float _1005 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _314) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _315) + cbTextureTilingScale._m0[21u].w)).x - _988) * _537) + _988;
    float _1022 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _314) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _315) + cbTextureTilingScale._m0[10u].w)).x - _1005) * _607) + _1005;
    float _1028 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _1022) * cbMtdParam._m0[19u].z) + _1022;
    float _1030 = _1028 - (_1028 * _862);
    float _1032 = _1030 - (_1030 * _932);
    float _1037 = (((_652.z - _757) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _757;
    float _1041 = ((_785.z - _1037) * cbMtdParam._m0[19u].w) + _1037;
    vec4 _1057 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _314) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _315) + cbTextureTilingScale._m0[15u].w));
    float _1064 = (_1057.x * 2.0) + (-1.0);
    float _1065 = (_1057.y * 2.0) + (-1.0);
    float _1066 = dot(vec2(_1064, _1065), vec2(_1064, _1065));
    float _4127 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _1074 = ((_1057.z - _1041) * _862) + _1041;
    float _1077 = ((cbMtdParam._m0[23u].x - _1074) * _932) + _1074;
    vec4 _1100 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _889) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _890) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1106 = (_1100.x * 2.0) + (-1.0);
    float _1107 = (_1100.y * 2.0) + (-1.0);
    float _1108 = dot(vec2(_1106, _1107), vec2(_1106, _1107));
    float _4138 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    float _1123 = ((sqrt(1.0 - (isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0)))) - _767) * _864) + _767;
    float _1126 = (((_1064 - _797) * _862) + _797) + (cbMtdParam._m0[21u].x * _797);
    float _1127 = (((_1065 - _798) * _863) + _798) + (cbMtdParam._m0[21u].x * _798);
    float _1138 = (((_1106 - _1126) + (_1126 * cbMtdParam._m0[22u].z)) * _932) + _1126;
    float _1139 = (((_1107 - _1127) + (_1127 * cbMtdParam._m0[22u].z)) * _932) + _1127;
    float _1140 = (_932 * (sqrt(1.0 - (isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0)))) - _1123)) + _1123;
    float _1142 = cbMtdParam._m0[22u].x + _785.w;
    float _1145 = fma(_1140, _264, fma(_1139, _271, _1138 * _257));
    float _1148 = fma(_1140, _265, fma(_1139, _272, _1138 * _258));
    float _1151 = fma(_1140, _266, fma(_1139, _273, _1138 * _259));
    float _1155 = inversesqrt(dot(vec3(_1145, _1148, _1151), vec3(_1145, _1148, _1151)));
    float _1156 = _1155 * _1145;
    float _1157 = _1155 * _1148;
    float _1158 = _1155 * _1151;
    float _4149 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1159 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
    float _4160 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _4171 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _4182 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    float _4193 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _4204 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _1164 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
    float _1178 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1218 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1228 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1218);
    float _1229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1218);
    float _1230 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1218);
    float _1234 = inversesqrt(dot(vec3(_1228, _1229, _1230), vec3(_1228, _1229, _1230)));
    float _1235 = _1228 * _1234;
    float _1236 = _1229 * _1234;
    float _1237 = _1230 * _1234;
    float _1243 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1244 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1262 = fma(_1158, cbSceneParam._m0[5u].z, fma(_1157, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1156));
    float _1265 = fma(_1158, cbSceneParam._m0[6u].z, fma(_1157, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1156));
    float _1268 = fma(_1158, cbSceneParam._m0[7u].z, fma(_1157, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1156));
    uint _1282 = (_295 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1288 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0)))) * cbInstanceData._m0[_1282].x;
    float _1289 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0)))) * cbInstanceData._m0[_1282].y;
    float _1290 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0)))) * cbInstanceData._m0[_1282].z;
    float _4215 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
    float _1291 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _4226 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
    float _1292 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _4237 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
    float _1293 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _1294 = 1.0 - _1164;
    float _1295 = _1291 * _1294;
    float _1296 = _1292 * _1294;
    float _1297 = _1293 * _1294;
    float _1302 = (_1291 + (-0.039999999105930328369140625)) * _1164;
    float _1303 = (_1292 + (-0.039999999105930328369140625)) * _1164;
    float _1304 = (_1293 + (-0.039999999105930328369140625)) * _1164;
    float _1305 = _1302 + 0.039999999105930328369140625;
    float _1307 = _1303 + 0.039999999105930328369140625;
    float _1308 = _1304 + 0.039999999105930328369140625;
    vec4 _1317 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1243, cbSceneParam._m0[86u].y * _1244));
    float _1321 = ((isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0))) * TEXCOORD_5.w) * _1317.x;
    float _1322 = dot(vec3(_1156, _1157, _1158), vec3(_1235, _1236, _1237));
    float _1325 = _1322 * 2.0;
    float _1329 = (_1325 * _1156) - _1235;
    float _1330 = (_1325 * _1157) - _1236;
    float _1331 = (_1325 * _1158) - _1237;
    float _1335 = abs(dot(vec3(_1235, _1236, _1237), vec3(_1156, _1157, _1158)));
    float _4248 = isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0));
    float _1337 = sqrt(_1159);
    float _1350 = exp2((_1337 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1337 * 3.0));
    float _1356 = (1.0 - _1350) * ((_1337 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1357 = _1350 * _1337;
    float _1385 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1389 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1393 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1694;
    float _1696;
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1419 = fma(_1393, cbModelParam._m0[26u].z, fma(_1389, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1385));
        float _1423 = fma(_1393, cbModelParam._m0[27u].z, fma(_1389, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1385));
        float _1427 = fma(_1393, cbModelParam._m0[28u].z, fma(_1389, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1385));
        float _1452 = _1385 + _1156;
        float _1453 = _1389 + _1157;
        float _1454 = _1393 + _1158;
        float _1464 = fma(_1454, cbModelParam._m0[26u].z, fma(_1453, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1452)) - _1419;
        float _1465 = fma(_1454, cbModelParam._m0[27u].z, fma(_1453, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1452)) - _1423;
        float _1466 = fma(_1454, cbModelParam._m0[28u].z, fma(_1453, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1452)) - _1427;
        float _1470 = inversesqrt(dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466)));
        float _1483 = ((_1470 * _1464) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1419 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1484 = ((_1470 * _1465) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1423 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1485 = ((_1470 * _1466) / cbModelParam._m0[34u].z) + ((((((_1427 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1488 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1483, _1484, _1485), 0.0);
        vec4 _1495 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1483, _1484, _1485), 0.0);
        vec4 _1502 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1483, _1484, _1485), 0.0);
        vec4 _1509 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1483, _1484, _1485), 0.0);
        float _1522 = exp2((_1488.w + (-0.5)) * 20.0) * 2.0;
        float _1523 = _1522 * (_1488.x + (-0.5));
        float _1524 = _1522 * (_1488.y + (-0.5));
        float _1525 = _1522 * (_1488.z + (-0.5));
        float _1532 = exp2((_1495.w + (-0.5)) * 20.0) * 2.0;
        float _1533 = _1532 * (_1495.x + (-0.5));
        float _1534 = _1532 * (_1495.y + (-0.5));
        float _1535 = _1532 * (_1495.z + (-0.5));
        float _1542 = exp2((_1502.w + (-0.5)) * 20.0) * 2.0;
        float _1543 = _1542 * (_1502.x + (-0.5));
        float _1544 = _1542 * (_1502.y + (-0.5));
        float _1545 = _1542 * (_1502.z + (-0.5));
        float _1552 = exp2((_1509.w + (-0.5)) * 20.0) * 2.0;
        float _1553 = _1552 * (_1509.x + (-0.5));
        float _1554 = _1552 * (_1509.y + (-0.5));
        float _1555 = _1552 * (_1509.z + (-0.5));
        float _1556 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1557 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1558 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1559 = _1523 * 0.5;
        float _1560 = _1533 * 0.5;
        float _1561 = _1543 * 0.5;
        float _1562 = dot(vec3(_1559, _1560, _1561), vec3(_1559, _1560, _1561));
        float _1567 = (_1562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1562);
        float _1576 = (dot(vec3(_1156, _1157, _1158), vec3(_1567 * _1559, _1567 * _1560, _1567 * _1561)) + 1.0) * 0.5;
        float _4274 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1586 = sqrt(((_1560 * _1560) + (_1559 * _1559)) + (_1561 * _1561)) / (_1556 + 9.9999997473787516355514526367188e-06);
        float _4285 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1587 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
        float _1588 = _1587 * 2.0;
        float _1592 = (1.0 - _1587) / (_1587 + 1.0);
        float _4296 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1593 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
        float _1602 = ((((1.0 - _1593) * (_1588 + 2.0)) * exp2(log2(isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0))) * (_1588 + 1.0))) + _1593) * _1556;
        float _1603 = _1524 * 0.5;
        float _1604 = _1534 * 0.5;
        float _1605 = _1544 * 0.5;
        float _1606 = dot(vec3(_1603, _1604, _1605), vec3(_1603, _1604, _1605));
        float _1611 = (_1606 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1606);
        float _1619 = (dot(vec3(_1156, _1157, _1158), vec3(_1611 * _1603, _1611 * _1604, _1611 * _1605)) + 1.0) * 0.5;
        float _4307 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1628 = sqrt(((_1604 * _1604) + (_1603 * _1603)) + (_1605 * _1605)) / (_1557 + 9.9999997473787516355514526367188e-06);
        float _4318 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1629 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
        float _1630 = _1629 * 2.0;
        float _1634 = (1.0 - _1629) / (_1629 + 1.0);
        float _4329 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1635 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _1644 = ((((1.0 - _1635) * (_1630 + 2.0)) * exp2(log2(isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))) * (_1630 + 1.0))) + _1635) * _1557;
        float _1645 = _1525 * 0.5;
        float _1646 = _1535 * 0.5;
        float _1647 = _1545 * 0.5;
        float _1648 = dot(vec3(_1645, _1646, _1647), vec3(_1645, _1646, _1647));
        float _1653 = (_1648 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1648);
        float _1661 = (dot(vec3(_1156, _1157, _1158), vec3(_1653 * _1645, _1653 * _1646, _1653 * _1647)) + 1.0) * 0.5;
        float _4340 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1670 = sqrt(((_1646 * _1646) + (_1645 * _1645)) + (_1647 * _1647)) / (_1558 + 9.9999997473787516355514526367188e-06);
        float _4351 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _1672 = _1671 * 2.0;
        float _1676 = (1.0 - _1671) / (_1671 + 1.0);
        float _4362 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
        float _1677 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _1686 = ((((1.0 - _1677) * (_1672 + 2.0)) * exp2(log2(isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * (_1672 + 1.0))) + _1677) * _1558;
        _1694 = _1525;
        _1696 = _1524;
        _1697 = _1523;
        _1698 = _1535;
        _1699 = _1534;
        _1700 = _1533;
        _1701 = _1545;
        _1702 = _1544;
        _1703 = _1543;
        _1704 = _1558;
        _1705 = _1557;
        _1706 = _1556;
        _1707 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)));
        _1708 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0)));
        _1709 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)));
    }
    else
    {
        _1694 = _1695;
        _1696 = _1695;
        _1697 = _1695;
        _1698 = _1695;
        _1699 = _1695;
        _1700 = _1695;
        _1701 = _1695;
        _1702 = _1695;
        _1703 = _1695;
        _1704 = _1695;
        _1705 = _1695;
        _1706 = _1695;
        _1707 = 0.0;
        _1708 = 0.0;
        _1709 = 0.0;
    }
    float _2001;
    float _2002;
    float _2003;
    float _2004;
    float _2005;
    float _2006;
    float _2007;
    float _2008;
    float _2009;
    float _2010;
    float _2011;
    float _2012;
    float _2013;
    float _2014;
    float _2015;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1732 = fma(_1393, cbModelParam._m0[30u].z, fma(_1389, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1385));
        float _1736 = fma(_1393, cbModelParam._m0[31u].z, fma(_1389, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1385));
        float _1740 = fma(_1393, cbModelParam._m0[32u].z, fma(_1389, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1385));
        float _1763 = _1385 + _1156;
        float _1764 = _1389 + _1157;
        float _1765 = _1393 + _1158;
        float _1775 = fma(_1765, cbModelParam._m0[30u].z, fma(_1764, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1763)) - _1732;
        float _1776 = fma(_1765, cbModelParam._m0[31u].z, fma(_1764, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1763)) - _1736;
        float _1777 = fma(_1765, cbModelParam._m0[32u].z, fma(_1764, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1763)) - _1740;
        float _1781 = inversesqrt(dot(vec3(_1775, _1776, _1777), vec3(_1775, _1776, _1777)));
        float _1794 = ((_1781 * _1775) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1732 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1795 = ((_1781 * _1776) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1736 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1796 = ((_1781 * _1777) / cbModelParam._m0[35u].z) + ((((((_1740 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1798 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1794, _1795, _1796), 0.0);
        vec4 _1805 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1794, _1795, _1796), 0.0);
        vec4 _1812 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1794, _1795, _1796), 0.0);
        vec4 _1819 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1794, _1795, _1796), 0.0);
        float _1831 = exp2((_1798.w + (-0.5)) * 20.0) * 2.0;
        float _1832 = _1831 * (_1798.x + (-0.5));
        float _1833 = _1831 * (_1798.y + (-0.5));
        float _1834 = _1831 * (_1798.z + (-0.5));
        float _1841 = exp2((_1805.w + (-0.5)) * 20.0) * 2.0;
        float _1842 = _1841 * (_1805.x + (-0.5));
        float _1843 = _1841 * (_1805.y + (-0.5));
        float _1844 = _1841 * (_1805.z + (-0.5));
        float _1851 = exp2((_1812.w + (-0.5)) * 20.0) * 2.0;
        float _1852 = _1851 * (_1812.x + (-0.5));
        float _1853 = _1851 * (_1812.y + (-0.5));
        float _1854 = _1851 * (_1812.z + (-0.5));
        float _1861 = exp2((_1819.w + (-0.5)) * 20.0) * 2.0;
        float _1862 = _1861 * (_1819.x + (-0.5));
        float _1863 = _1861 * (_1819.y + (-0.5));
        float _1864 = _1861 * (_1819.z + (-0.5));
        float _1865 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
        float _1866 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        float _1867 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1868 = _1832 * 0.5;
        float _1869 = _1842 * 0.5;
        float _1870 = _1852 * 0.5;
        float _1871 = dot(vec3(_1868, _1869, _1870), vec3(_1868, _1869, _1870));
        float _1876 = (_1871 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1871);
        float _1884 = (dot(vec3(_1156, _1157, _1158), vec3(_1876 * _1868, _1876 * _1869, _1876 * _1870)) + 1.0) * 0.5;
        float _4403 = isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0));
        float _1893 = sqrt(((_1869 * _1869) + (_1868 * _1868)) + (_1870 * _1870)) / (_1865 + 9.9999997473787516355514526367188e-06);
        float _4414 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
        float _1894 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
        float _1895 = _1894 * 2.0;
        float _1899 = (1.0 - _1894) / (_1894 + 1.0);
        float _4425 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
        float _1900 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
        float _1909 = ((((1.0 - _1900) * (_1895 + 2.0)) * exp2(log2(isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0))) * (_1895 + 1.0))) + _1900) * _1865;
        float _1910 = _1833 * 0.5;
        float _1911 = _1843 * 0.5;
        float _1912 = _1853 * 0.5;
        float _1913 = dot(vec3(_1910, _1911, _1912), vec3(_1910, _1911, _1912));
        float _1918 = (_1913 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1913);
        float _1926 = (dot(vec3(_1156, _1157, _1158), vec3(_1918 * _1910, _1918 * _1911, _1918 * _1912)) + 1.0) * 0.5;
        float _4436 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
        float _1935 = sqrt(((_1911 * _1911) + (_1910 * _1910)) + (_1912 * _1912)) / (_1866 + 9.9999997473787516355514526367188e-06);
        float _4447 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _1936 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
        float _1937 = _1936 * 2.0;
        float _1941 = (1.0 - _1936) / (_1936 + 1.0);
        float _4458 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
        float _1942 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
        float _1951 = ((((1.0 - _1942) * (_1937 + 2.0)) * exp2(log2(isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0))) * (_1937 + 1.0))) + _1942) * _1866;
        float _1952 = _1834 * 0.5;
        float _1953 = _1844 * 0.5;
        float _1954 = _1854 * 0.5;
        float _1955 = dot(vec3(_1952, _1953, _1954), vec3(_1952, _1953, _1954));
        float _1960 = (_1955 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1955);
        float _1968 = (dot(vec3(_1156, _1157, _1158), vec3(_1960 * _1952, _1960 * _1953, _1960 * _1954)) + 1.0) * 0.5;
        float _4469 = isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0));
        float _1977 = sqrt(((_1953 * _1953) + (_1952 * _1952)) + (_1954 * _1954)) / (_1867 + 9.9999997473787516355514526367188e-06);
        float _4480 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
        float _1978 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
        float _1979 = _1978 * 2.0;
        float _1983 = (1.0 - _1978) / (_1978 + 1.0);
        float _4491 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
        float _1984 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _1993 = ((((1.0 - _1984) * (_1979 + 2.0)) * exp2(log2(isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * (_1979 + 1.0))) + _1984) * _1867;
        _2001 = _1834;
        _2002 = _1833;
        _2003 = _1832;
        _2004 = _1844;
        _2005 = _1843;
        _2006 = _1842;
        _2007 = _1854;
        _2008 = _1853;
        _2009 = _1852;
        _2010 = _1867;
        _2011 = _1866;
        _2012 = _1865;
        _2013 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0)));
        _2014 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1951 : (isnan(_1951) ? 0.0 : max(_1951, 0.0)));
        _2015 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0)));
    }
    else
    {
        _2001 = _1695;
        _2002 = _1695;
        _2003 = _1695;
        _2004 = _1695;
        _2005 = _1695;
        _2006 = _1695;
        _2007 = _1695;
        _2008 = _1695;
        _2009 = _1695;
        _2010 = _1695;
        _2011 = _1695;
        _2012 = _1695;
        _2013 = 0.0;
        _2014 = 0.0;
        _2015 = 0.0;
    }
    float _2025 = (cbModelParam._m0[1u].x * (_2013 - _1707)) + _1707;
    float _2026 = (cbModelParam._m0[1u].x * (_2014 - _1708)) + _1708;
    float _2027 = (cbModelParam._m0[1u].x * (_2015 - _1709)) + _1709;
    float _2048 = fma(_2027, cbSceneParam._m0[89u].z, fma(_2026, cbSceneParam._m0[89u].y, _2025 * cbSceneParam._m0[89u].x));
    float _2051 = fma(_2027, cbSceneParam._m0[90u].z, fma(_2026, cbSceneParam._m0[90u].y, _2025 * cbSceneParam._m0[90u].x));
    float _2054 = fma(_2027, cbSceneParam._m0[91u].z, fma(_2026, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2025));
    float _2069 = _1329 * 0.5;
    float _2070 = _1330 * 0.5;
    float _2071 = _1331 * 0.5;
    float _2072 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_2003, _2006, _2009, _2012));
    float _2075 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_2002, _2005, _2008, _2011));
    float _2078 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_2001, _2004, _2007, _2010));
    float _2112;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2085 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_1694, _1698, _1701, _1704));
        float _2089 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_1696, _1699, _1702, _1705));
        float _2093 = dot(vec4(_2069, _2070, _2071, 1.0), vec4(_1697, _1700, _1703, _1706));
        float _2100 = dot(vec4(cbModelParam._m0[39u]), vec4(_2069, _2070, _2071, 1.0));
        _2112 = dot(vec3(isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0)), isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0)), isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2100) ? 0.0 : (isnan(0.0) ? _2100 : max(0.0, _2100))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2112 = 1.0;
    }
    float _2123;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2114 = dot(vec4(cbModelParam._m0[40u]), vec4(_2069, _2070, _2071, 1.0));
        _2123 = dot(vec3(isnan(0.0) ? _2072 : (isnan(_2072) ? 0.0 : max(_2072, 0.0)), isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0)), isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2114) ? 0.0 : (isnan(0.0) ? _2114 : max(0.0, _2114))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2123 = 1.0;
    }
    float _2127 = (_2123 * cbModelParam._m0[1u].x) + (_2112 * (1.0 - cbModelParam._m0[1u].x));
    float _2137 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1159);
    float _2138 = isnan(_2137) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2137 : min(cbModelParam._m0[25u].z, _2137));
    float _2218;
    float _2220;
    float _2222;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2185 = fma(_1393, cbModelParam._m0[13u].z, fma(_1389, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1385)) + cbModelParam._m0[13u].w;
        float _2189 = fma(_1393, cbModelParam._m0[14u].z, fma(_1389, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1385)) + cbModelParam._m0[14u].w;
        float _2193 = fma(_1393, cbModelParam._m0[15u].z, fma(_1389, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1385)) + cbModelParam._m0[15u].w;
        float _2196 = fma(_1331, cbModelParam._m0[13u].z, fma(_1330, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1329));
        float _2199 = fma(_1331, cbModelParam._m0[14u].z, fma(_1330, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1329));
        float _2202 = fma(_1331, cbModelParam._m0[15u].z, fma(_1330, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1329));
        float _2230;
        if (_2196 > 0.0)
        {
            _2230 = abs((1.0 - _2185) / _2196);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2196 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2185 + 1.0) / _2196);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2230 = frontier_phi_14_12_ladder;
        }
        float _2433;
        if (_2199 > 0.0)
        {
            _2433 = abs((1.0 - _2189) / _2199);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2199 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2189 + 1.0) / _2199);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2433 = frontier_phi_23_19_ladder;
        }
        float _2687;
        if (_2202 > 0.0)
        {
            _2687 = abs((1.0 - _2193) / _2202);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2202 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2193 + 1.0) / _2202);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2687 = frontier_phi_35_30_ladder;
        }
        float _2689 = isnan(_2433) ? _2230 : (isnan(_2230) ? _2433 : min(_2230, _2433));
        float _2690 = isnan(_2687) ? _2689 : (isnan(_2689) ? _2687 : min(_2689, _2687));
        float _2694 = (_2690 * _2196) + _2185;
        float _2695 = (_2690 * _2199) + _2189;
        float _2696 = (_2690 * _2202) + _2193;
        float _2697 = _2690 * 9.9999997473787516355514526367188e-05;
        float _2699 = (-1.0) - _2697;
        float _2701 = _2697 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2696 > _2701) || ((_2696 < _2699) || ((_2695 > _2701) || ((_2695 < _2699) || ((_2694 < _2699) || (_2694 > _2701))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2824 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2696, cbModelParam._m0[9u].z, fma(_2695, cbModelParam._m0[9u].y, _2694 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2696, cbModelParam._m0[10u].z, fma(_2695, cbModelParam._m0[10u].y, _2694 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2696, cbModelParam._m0[11u].z, fma(_2695, cbModelParam._m0[11u].y, _2694 * cbModelParam._m0[11u].x))), _2138);
            frontier_phi_13_35_ladder = _2824.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2824.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2824.x * cbModelParam._m0[1u].y;
        }
        _2218 = frontier_phi_13_35_ladder_2;
        _2220 = frontier_phi_13_35_ladder_1;
        _2222 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2206 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1329, _1330, _1331), _2138);
        _2218 = _2206.x * cbModelParam._m0[1u].y;
        _2220 = _2206.y * cbModelParam._m0[1u].y;
        _2222 = _2206.z * cbModelParam._m0[1u].y;
    }
    float _2226 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1159);
    float _2227 = isnan(_2226) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2226 : min(cbModelParam._m0[25u].w, _2226));
    float _2317;
    float _2319;
    float _2321;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2281 = fma(_1393, cbModelParam._m0[21u].z, fma(_1389, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1385)) + cbModelParam._m0[21u].w;
        float _2285 = fma(_1393, cbModelParam._m0[22u].z, fma(_1389, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1385)) + cbModelParam._m0[22u].w;
        float _2289 = fma(_1393, cbModelParam._m0[23u].z, fma(_1389, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1385)) + cbModelParam._m0[23u].w;
        float _2292 = fma(_1331, cbModelParam._m0[21u].z, fma(_1330, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1329));
        float _2295 = fma(_1331, cbModelParam._m0[22u].z, fma(_1330, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1329));
        float _2298 = fma(_1331, cbModelParam._m0[23u].z, fma(_1330, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1329));
        float _2438;
        if (_2292 > 0.0)
        {
            _2438 = abs((1.0 - _2281) / _2292);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2292 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2281 + 1.0) / _2292);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2438 = frontier_phi_25_21_ladder;
        }
        float _2714;
        if (_2295 > 0.0)
        {
            _2714 = abs((1.0 - _2285) / _2295);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2295 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2285 + 1.0) / _2295);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2714 = frontier_phi_37_32_ladder;
        }
        float _2927;
        if (_2298 > 0.0)
        {
            _2927 = abs((1.0 - _2289) / _2298);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2298 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2289 + 1.0) / _2298);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2927 = frontier_phi_46_43_ladder;
        }
        float _2929 = isnan(_2714) ? _2438 : (isnan(_2438) ? _2714 : min(_2438, _2714));
        float _2930 = isnan(_2927) ? _2929 : (isnan(_2929) ? _2927 : min(_2929, _2927));
        float _2934 = (_2930 * _2292) + _2281;
        float _2935 = (_2930 * _2295) + _2285;
        float _2936 = (_2930 * _2298) + _2289;
        float _2937 = _2930 * 9.9999997473787516355514526367188e-05;
        float _2938 = (-1.0) - _2937;
        float _2940 = _2937 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2936 > _2940) || ((_2936 < _2938) || ((_2935 > _2940) || ((_2935 < _2938) || ((_2934 < _2938) || (_2934 > _2940))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3135 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2936, cbModelParam._m0[17u].z, fma(_2935, cbModelParam._m0[17u].y, _2934 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2936, cbModelParam._m0[18u].z, fma(_2935, cbModelParam._m0[18u].y, _2934 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2936, cbModelParam._m0[19u].z, fma(_2935, cbModelParam._m0[19u].y, _2934 * cbModelParam._m0[19u].x))), _2227);
            frontier_phi_22_46_ladder = _3135.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3135.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3135.x * cbModelParam._m0[1u].z;
        }
        _2317 = frontier_phi_22_46_ladder_2;
        _2319 = frontier_phi_22_46_ladder_1;
        _2321 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2301 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1329, _1330, _1331), _2227);
        _2317 = _2301.x * cbModelParam._m0[1u].z;
        _2319 = _2301.y * cbModelParam._m0[1u].z;
        _2321 = _2301.z * cbModelParam._m0[1u].z;
    }
    float _2334 = (((_1356 * _1305) + _1357) * _1321) * ((cbModelParam._m0[1u].w * (_2317 - _2218)) + _2218);
    float _2336 = (((_1356 * _1307) + _1357) * _1321) * ((cbModelParam._m0[1u].w * (_2319 - _2220)) + _2220);
    float _2338 = (((_1356 * _1308) + _1357) * _1321) * ((cbModelParam._m0[1u].w * (_2321 - _2222)) + _2222);
    float _2341 = fma(_2338, cbSceneParam._m0[89u].z, fma(_2336, cbSceneParam._m0[89u].y, _2334 * cbSceneParam._m0[89u].x));
    float _2344 = fma(_2338, cbSceneParam._m0[90u].z, fma(_2336, cbSceneParam._m0[90u].y, _2334 * cbSceneParam._m0[90u].x));
    float _2347 = fma(_2338, cbSceneParam._m0[91u].z, fma(_2336, cbSceneParam._m0[91u].y, _2334 * cbSceneParam._m0[91u].x));
    uvec4 _2357 = floatBitsToUint(cbInstanceData._m0[_295 + 5u]);
    uint _2359 = _2357.x * 14u;
    uint _2360 = _2359 + 13u;
    float _2367 = _1321 + (-1.0);
    float _2372 = (cbLight._m0[_2360].x * _2367) + 1.0;
    float _2373 = (cbLight._m0[_2360].y * _2367) + 1.0;
    float _2374 = (cbLight._m0[_2360].z * _2367) + 1.0;
    float _2375 = (cbLight._m0[_2360].w * _2367) + 1.0;
    uint _2376 = _2359 + 5u;
    float _2382 = isnan(1.0) ? _2373 : (isnan(_2373) ? 1.0 : min(_2373, 1.0));
    uint _2386 = _2359 + 4u;
    float _2392 = isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0));
    uint _2396 = _2359 | 1u;
    float _2407 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_1156, _1157, _1158));
    float _2410 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_1156, _1157, _1158));
    float _4627 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _4638 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
    float _2415 = (isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * 0.3183098733425140380859375;
    float _2417 = (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0))) * 0.3183098733425140380859375;
    float _2424 = ((cbLight._m0[_2376].x * _2382) * _2417) + ((cbLight._m0[_2386].x * _2392) * _2415);
    float _2425 = ((_2382 * cbLight._m0[_2376].y) * _2417) + ((_2392 * cbLight._m0[_2386].y) * _2415);
    float _2426 = ((_2382 * cbLight._m0[_2376].z) * _2417) + ((_2392 * cbLight._m0[_2386].z) * _2415);
    uvec4 _2430 = floatBitsToUint(cbLight._m0[_2359 + 12u]);
    bool _2432 = _2430.x == 0u;
    float _2443;
    float _2445;
    float _2447;
    if (_2432)
    {
        _2443 = _2424;
        _2445 = _2425;
        _2447 = _2426;
    }
    else
    {
        uint _2451 = _2359 + 6u;
        float _2467 = (dot(vec3(cbLight._m0[_2359 + 2u].xyz), vec3(_1156, _1157, _1158)) * 0.5) + 0.5;
        float _2468 = _2467 * _2467;
        float _4649 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
        float _2469 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
        float _2470 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2443 = (((cbLight._m0[_2451].x * 0.3183098733425140380859375) * _2469) * _2470) + _2424;
        _2445 = (((cbLight._m0[_2451].y * 0.3183098733425140380859375) * _2469) * _2470) + _2425;
        _2447 = (((cbLight._m0[_2451].z * 0.3183098733425140380859375) * _2469) * _2470) + _2426;
    }
    bool _2450 = _2430.y == 0u;
    float _2488;
    float _2490;
    float _2492;
    if (_2450)
    {
        _2488 = _2443;
        _2490 = _2445;
        _2492 = _2447;
    }
    else
    {
        uint _2658 = _2359 + 7u;
        float _2674 = (dot(vec3(cbLight._m0[_2359 + 3u].xyz), vec3(_1156, _1157, _1158)) * 0.5) + 0.5;
        float _2675 = _2674 * _2674;
        float _4665 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
        float _2676 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
        float _2677 = isnan(1.0) ? _2375 : (isnan(_2375) ? 1.0 : min(_2375, 1.0));
        _2488 = (((cbLight._m0[_2658].x * 0.3183098733425140380859375) * _2676) * _2677) + _2443;
        _2490 = (((cbLight._m0[_2658].y * 0.3183098733425140380859375) * _2676) * _2677) + _2445;
        _2492 = (((cbLight._m0[_2658].z * 0.3183098733425140380859375) * _2676) * _2677) + _2447;
    }
    uint _2495 = _2359 + 8u;
    float _2508 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2359].w)) * _1159) * 0.949999988079071044921875);
    float _2509 = _2508 * _2508;
    float _2510 = cbLight._m0[_2359].x + _1235;
    float _2511 = cbLight._m0[_2359].y + _1236;
    float _2512 = cbLight._m0[_2359].z + _1237;
    float _2516 = inversesqrt(dot(vec3(_2510, _2511, _2512), vec3(_2510, _2511, _2512)));
    float _2517 = _2516 * _2510;
    float _2518 = _2516 * _2511;
    float _2519 = _2516 * _2512;
    float _2520 = dot(vec3(_1156, _1157, _1158), vec3(cbLight._m0[_2359].xyz));
    float _4681 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
    float _2523 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
    float _4692 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
    float _2524 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
    float _2525 = dot(vec3(_1156, _1157, _1158), vec3(_2517, _2518, _2519));
    float _4703 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
    float _2528 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
    float _2529 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_2517, _2518, _2519));
    float _4714 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2533 = _2509 * _2509;
    float _2537 = ((_2528 * _2528) * (_2533 + (-1.0))) + 1.0;
    float _2545 = exp2(log2(1.0 - (isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0)))) * 5.0);
    float _2546 = 0.959999978542327880859375 - _1302;
    float _2548 = 0.959999978542327880859375 - _1303;
    float _2549 = 0.959999978542327880859375 - _1304;
    float _2556 = 1.0 - _2509;
    float _2567 = (0.5 / (((_2524 * ((_2523 * _2556) + _2509)) + 9.9999999392252902907785028219223e-09) + (((_2524 * _2556) + _2509) * _2523))) * _2523;
    float _4725 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
    float _2569 = (isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2533 / ((_2537 * _2537) * 3.141590118408203125));
    uint _2580 = _2359 + 9u;
    float _2591 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2396].w)) * _1159) * 0.949999988079071044921875);
    float _2592 = _2591 * _2591;
    float _2593 = cbLight._m0[_2396].x + _1235;
    float _2594 = cbLight._m0[_2396].y + _1236;
    float _2595 = cbLight._m0[_2396].z + _1237;
    float _2599 = inversesqrt(dot(vec3(_2593, _2594, _2595), vec3(_2593, _2594, _2595)));
    float _2600 = _2599 * _2593;
    float _2601 = _2599 * _2594;
    float _2602 = _2599 * _2595;
    float _2603 = dot(vec3(_1156, _1157, _1158), vec3(cbLight._m0[_2396].xyz));
    float _4736 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
    float _2606 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
    float _2607 = dot(vec3(_1156, _1157, _1158), vec3(_2600, _2601, _2602));
    float _4747 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2610 = isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0));
    float _2611 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_2600, _2601, _2602));
    float _4758 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
    float _2615 = _2592 * _2592;
    float _2619 = ((_2610 * _2610) * (_2615 + (-1.0))) + 1.0;
    float _2626 = exp2(log2(1.0 - (isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0)))) * 5.0);
    float _2633 = 1.0 - _2592;
    float _2643 = (0.5 / (((_2524 * ((_2606 * _2633) + _2592)) + 9.9999999392252902907785028219223e-09) + (((_2524 * _2633) + _2592) * _2606))) * _2606;
    float _4769 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
    float _2645 = (isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0))) * (_2615 / ((_2619 * _2619) * 3.141590118408203125));
    float _2655 = (((((_2626 * _2546) + _1305) * cbLight._m0[_2580].x) * _2645) * _2382) + (((((_2545 * _2546) + _1305) * cbLight._m0[_2495].x) * _2569) * _2392);
    float _2656 = (((((_2626 * _2548) + _1307) * cbLight._m0[_2580].y) * _2645) * _2382) + (((((_2545 * _2548) + _1307) * cbLight._m0[_2495].y) * _2569) * _2392);
    float _2657 = (((((_2626 * _2549) + _1308) * cbLight._m0[_2580].z) * _2645) * _2382) + (((((_2545 * _2549) + _1308) * cbLight._m0[_2495].z) * _2569) * _2392);
    float _2719;
    float _2721;
    float _2723;
    if (_2432)
    {
        _2719 = _2655;
        _2721 = _2656;
        _2723 = _2657;
    }
    else
    {
        uint _2725 = _2359 + 2u;
        uint _2729 = _2359 + 10u;
        float _2743 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2725].w)) * _1159) * 0.949999988079071044921875);
        float _2744 = _2743 * _2743;
        float _2745 = cbLight._m0[_2725].x + _1235;
        float _2746 = cbLight._m0[_2725].y + _1236;
        float _2747 = cbLight._m0[_2725].z + _1237;
        float _2751 = inversesqrt(dot(vec3(_2745, _2746, _2747), vec3(_2745, _2746, _2747)));
        float _2752 = _2751 * _2745;
        float _2753 = _2751 * _2746;
        float _2754 = _2751 * _2747;
        float _2755 = dot(vec3(_1156, _1157, _1158), vec3(cbLight._m0[_2725].xyz));
        float _4780 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
        float _2758 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
        float _2759 = dot(vec3(_1156, _1157, _1158), vec3(_2752, _2753, _2754));
        float _4791 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
        float _2762 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
        float _2763 = dot(vec3(cbLight._m0[_2725].xyz), vec3(_2752, _2753, _2754));
        float _4802 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
        float _2767 = _2744 * _2744;
        float _2771 = ((_2762 * _2762) * (_2767 + (-1.0))) + 1.0;
        float _2778 = exp2(log2(1.0 - (isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0)))) * 5.0);
        float _2785 = 1.0 - _2744;
        float _2795 = (0.5 / (((_2524 * ((_2758 * _2785) + _2744)) + 9.9999999392252902907785028219223e-09) + (((_2524 * _2785) + _2744) * _2758))) * _2758;
        float _4813 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2797 = (isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0))) * (_2767 / ((_2771 * _2771) * 3.141590118408203125));
        float _2798 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2719 = (((((_2778 * _2546) + _1305) * cbLight._m0[_2729].x) * _2797) * _2798) + _2655;
        _2721 = (((((_2778 * _2548) + _1307) * cbLight._m0[_2729].y) * _2797) * _2798) + _2656;
        _2723 = (((((_2778 * _2549) + _1308) * cbLight._m0[_2729].z) * _2797) * _2798) + _2657;
    }
    float _2833;
    float _2835;
    float _2837;
    if (_2450)
    {
        _2833 = _2719;
        _2835 = _2721;
        _2837 = _2723;
    }
    else
    {
        uint _2844 = _2359 + 3u;
        uint _2848 = _2359 + 11u;
        float _2862 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2844].w)) * _1159) * 0.949999988079071044921875);
        float _2863 = _2862 * _2862;
        float _2864 = cbLight._m0[_2844].x + _1235;
        float _2865 = cbLight._m0[_2844].y + _1236;
        float _2866 = cbLight._m0[_2844].z + _1237;
        float _2870 = inversesqrt(dot(vec3(_2864, _2865, _2866), vec3(_2864, _2865, _2866)));
        float _2871 = _2870 * _2864;
        float _2872 = _2870 * _2865;
        float _2873 = _2870 * _2866;
        float _2874 = dot(vec3(_1156, _1157, _1158), vec3(cbLight._m0[_2844].xyz));
        float _4829 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
        float _2877 = isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0));
        float _2878 = dot(vec3(_1156, _1157, _1158), vec3(_2871, _2872, _2873));
        float _4840 = isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0));
        float _2881 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
        float _2882 = dot(vec3(cbLight._m0[_2844].xyz), vec3(_2871, _2872, _2873));
        float _4851 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        float _2886 = _2863 * _2863;
        float _2890 = ((_2881 * _2881) * (_2886 + (-1.0))) + 1.0;
        float _2897 = exp2(log2(1.0 - (isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0)))) * 5.0);
        float _2904 = 1.0 - _2863;
        float _2914 = (0.5 / (((_2524 * ((_2877 * _2904) + _2863)) + 9.9999999392252902907785028219223e-09) + (((_2524 * _2904) + _2863) * _2877))) * _2877;
        float _4862 = isnan(0.0) ? _2914 : (isnan(_2914) ? 0.0 : max(_2914, 0.0));
        float _2916 = (isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0))) * (_2886 / ((_2890 * _2890) * 3.141590118408203125));
        float _2917 = isnan(1.0) ? _2375 : (isnan(_2375) ? 1.0 : min(_2375, 1.0));
        _2833 = (((((_2897 * _2546) + _1305) * cbLight._m0[_2848].x) * _2916) * _2917) + _2719;
        _2835 = (((((_2897 * _2548) + _1307) * cbLight._m0[_2848].y) * _2916) * _2917) + _2721;
        _2837 = (((((_2897 * _2549) + _1308) * cbLight._m0[_2848].z) * _2916) * _2917) + _2723;
    }
    float _3052;
    float _3054;
    float _3056;
    float _3058;
    float _3060;
    float _3062;
    if (_2357.y == 0u)
    {
        float _2992 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2993 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2992;
        float _2994 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2992;
        float _2995 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2992;
        uvec4 _3007 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3008 = _3007.x;
        uint _3019 = uint((float(_3007.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1244) / _3008))) + floor(float(uint(cbSceneParam._m0[85u].x * _1243) / _3008)));
        float _3029 = (log2(_2995 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3030 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
        uint _3033 = uint(isnan(14.0) ? _3030 : (isnan(_3030) ? 14.0 : min(_3030, 14.0)));
        uvec4 _3038 = texelFetch(g_lightClusterGridBuffer, int(((_3033 << 2u) + (_3019 << 6u)) >> 2u));
        uint _3039 = _3038.x;
        uint _3040 = _3007.z;
        float _3140;
        float _3142;
        float _3144;
        float _3146;
        float _3148;
        float _3150;
        if (((((1u << ((_3040 >> 4u) & 15u)) + 4294967295u) & _3039) == 0u) || ((_3040 & 240u) == 0u))
        {
            _3140 = 0.0;
            _3142 = 0.0;
            _3144 = 0.0;
            _3146 = 0.0;
            _3148 = 0.0;
            _3150 = 0.0;
        }
        else
        {
            float _3141;
            float _3143;
            float _3145;
            float _3147;
            float _3149;
            float _3151;
            float _3284 = 0.0;
            float _3285 = 0.0;
            float _3286 = 0.0;
            float _3287 = 0.0;
            float _3288 = 0.0;
            float _3289 = 0.0;
            uint _3290 = 0u;
            uint _3299;
            bool _3300;
            for (;;)
            {
                _3299 = texelFetch(g_lightClassification, int((((_3033 << 5u) + (_3019 << 9u)) + (_3290 << 2u)) >> 2u)).x;
                _3300 = _3299 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3300)
                {
                    frontier_phi_61_pred = _3284;
                    frontier_phi_61_pred_1 = _3289;
                    frontier_phi_61_pred_2 = _3288;
                    frontier_phi_61_pred_3 = _3287;
                    frontier_phi_61_pred_4 = _3286;
                    frontier_phi_61_pred_5 = _3285;
                }
                else
                {
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    float _3413;
                    uint _3414;
                    _3408 = _3284;
                    _3409 = _3285;
                    _3410 = _3286;
                    _3411 = _3287;
                    _3412 = _3288;
                    _3413 = _3289;
                    _3414 = _3299;
                    float _3340;
                    float _3341;
                    float _3342;
                    float _3343;
                    float _3344;
                    float _3345;
                    for (;;)
                    {
                        uint _3418 = uint(findLSB(_3414)) + (_3290 << 5u);
                        uint _3415 = (_3414 + 4294967295u) & _3414;
                        uint _3420 = _3418 * 48u;
                        vec4 _3434 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3420)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 3u)).x));
                        uint _3440 = (_3418 * 48u) + 4u;
                        vec4 _3453 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3440)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 3u)).x));
                        uint _3459 = (_3418 * 48u) + 8u;
                        vec3 _3470 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3459)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 2u)).x));
                        float _3474 = _3434.x - _2993;
                        float _3475 = _3434.y - _2994;
                        float _3476 = _3434.z - _2995;
                        float _3477 = dot(vec3(_3474, _3475, _3476), vec3(_3474, _3475, _3476));
                        float _3480 = inversesqrt(_3477);
                        float _3481 = _3480 * _3474;
                        float _3482 = _3480 * _3475;
                        float _3483 = _3480 * _3476;
                        float _3484 = dot(vec3(_1262, _1265, _1268), vec3(_3481, _3482, _3483));
                        float _3489 = 1.0 - (_3477 * _3434.w);
                        float _4888 = isnan(0.0) ? _3489 : (isnan(_3489) ? 0.0 : max(_3489, 0.0));
                        float _3490 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
                        float _3491 = sqrt(_3477) * _3453.w;
                        float _3494 = 1.39999997615814208984375 / (_3491 + 1.39999997615814208984375);
                        float _3495 = _3494 * _3494;
                        float _3498 = ((1.0 - _3495) * _3484) + _3495;
                        float _3501 = _3491 * _3491;
                        float _3505 = ((isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0))) * _3490) / ((_3501 * 0.699999988079071044921875) + 1.0);
                        float _3509 = (-0.0) - _2993;
                        float _3510 = (-0.0) - _2994;
                        float _3511 = (-0.0) - _2995;
                        float _3515 = inversesqrt(dot(vec3(_3509, _3510, _3511), vec3(_3509, _3510, _3511)));
                        float _3516 = _3515 * _3509;
                        float _3517 = _3515 * _3510;
                        float _3518 = _3515 * _3511;
                        float _3526 = exp2(log2(1.0 / ((_3501 * 3.5) + 5.0)) * 0.25);
                        float _3527 = 1.0 - _1337;
                        float _3534 = sqrt(1.0 - ((1.0 - (_3527 * _3527)) * (1.0 - (_3526 * _3526))));
                        float _3535 = _3534 * _3534;
                        float _3536 = _3535 * _3535;
                        float _3537 = _3516 + _3481;
                        float _3538 = _3517 + _3482;
                        float _3539 = _3518 + _3483;
                        float _3543 = inversesqrt(dot(vec3(_3537, _3538, _3539), vec3(_3537, _3538, _3539)));
                        float _3547 = dot(vec3(_1262, _1265, _1268), vec3(_3516, _3517, _3518));
                        float _4904 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0));
                        float _3550 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
                        float _3551 = dot(vec3(_1262, _1265, _1268), vec3(_3543 * _3537, _3543 * _3538, _3543 * _3539));
                        float _4915 = isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : max(_3551, 0.0));
                        float _3554 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                        float _3558 = ((_3554 * _3554) * (_3536 + (-1.0))) + 1.0;
                        float _3559 = _3494 * _3535;
                        float _3560 = _3559 * _3559;
                        float _3563 = ((1.0 - _3560) * _3484) + _3560;
                        float _4926 = isnan(0.0) ? _3563 : (isnan(_3563) ? 0.0 : max(_3563, 0.0));
                        float _3564 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                        float _3565 = 1.0 - _3535;
                        float _3575 = (0.5 / (((_3564 * ((_3550 * _3565) + _3535)) + 9.9999999392252902907785028219223e-09) + (((_3564 * _3565) + _3535) * _3550))) * _3564;
                        float _4937 = isnan(0.0) ? _3575 : (isnan(_3575) ? 0.0 : max(_3575, 0.0));
                        float _3586 = (((_3536 * 3.1415927410125732421875) * (isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0)))) / ((_3558 * _3558) * ((_3501 * 2.1991131305694580078125) + 3.141590118408203125))) * _3490;
                        _3343 = (_3505 * _3453.x) + _3411;
                        _3344 = (_3505 * _3453.y) + _3412;
                        _3345 = (_3505 * _3453.z) + _3413;
                        _3340 = (_3586 * _3470.x) + _3408;
                        _3341 = (_3586 * _3470.y) + _3409;
                        _3342 = (_3586 * _3470.z) + _3410;
                        if (_3415 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3408 = _3340;
                            _3409 = _3341;
                            _3410 = _3342;
                            _3411 = _3343;
                            _3412 = _3344;
                            _3413 = _3345;
                            _3414 = _3415;
                        }
                    }
                    frontier_phi_61_pred = _3340;
                    frontier_phi_61_pred_1 = _3345;
                    frontier_phi_61_pred_2 = _3344;
                    frontier_phi_61_pred_3 = _3343;
                    frontier_phi_61_pred_4 = _3342;
                    frontier_phi_61_pred_5 = _3341;
                }
                _3141 = frontier_phi_61_pred;
                _3151 = frontier_phi_61_pred_1;
                _3149 = frontier_phi_61_pred_2;
                _3147 = frontier_phi_61_pred_3;
                _3145 = frontier_phi_61_pred_4;
                _3143 = frontier_phi_61_pred_5;
                uint _3291 = _3290 + 1u;
                if (_3291 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3284 = _3141;
                    _3285 = _3143;
                    _3286 = _3145;
                    _3287 = _3147;
                    _3288 = _3149;
                    _3289 = _3151;
                    _3290 = _3291;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3140 = _3141;
            _3142 = _3143;
            _3144 = _3145;
            _3146 = _3147;
            _3148 = _3149;
            _3150 = _3151;
        }
        uvec4 _3154 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3155 = _3154.z;
        uint _3157 = (_3155 >> 8u) & 15u;
        float _3252;
        float _3254;
        float _3256;
        float _3258;
        float _3260;
        float _3262;
        if (((4294967295u << _3157) & _3039) == 0u)
        {
            _3252 = _3140;
            _3254 = _3142;
            _3256 = _3144;
            _3258 = _3146;
            _3260 = _3148;
            _3262 = _3150;
        }
        else
        {
            float _3277 = inversesqrt(dot(vec3(_2993, _2994, _2995), vec3(_2993, _2994, _2995)));
            float _3278 = _3277 * _2993;
            float _3279 = _3277 * _2994;
            float _3280 = _3277 * _2995;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3157 < ((_3155 >> 12u) & 15u))
            {
                float _3253;
                float _3255;
                float _3257;
                float _3259;
                float _3261;
                float _3263;
                float _3391 = _3140;
                float _3392 = _3142;
                float _3393 = _3144;
                float _3394 = _3146;
                float _3395 = _3148;
                float _3396 = _3150;
                uint _3397 = _3157;
                uint _3406;
                bool _3407;
                for (;;)
                {
                    _3406 = texelFetch(g_lightClassification, int((((_3033 << 5u) + (_3019 << 9u)) + (_3397 << 2u)) >> 2u)).x;
                    _3407 = _3406 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3407)
                    {
                        frontier_phi_67_pred = _3394;
                        frontier_phi_67_pred_1 = _3395;
                        frontier_phi_67_pred_2 = _3396;
                        frontier_phi_67_pred_3 = _3393;
                        frontier_phi_67_pred_4 = _3392;
                        frontier_phi_67_pred_5 = _3391;
                    }
                    else
                    {
                        float _3591;
                        float _3592;
                        float _3593;
                        float _3594;
                        float _3595;
                        float _3596;
                        float _3884;
                        float _3885;
                        float _3886;
                        float _3887;
                        float _3888;
                        float _3889;
                        float _3604 = _3391;
                        float _3605 = _3392;
                        float _3606 = _3393;
                        float _3607 = _3394;
                        float _3608 = _3395;
                        float _3609 = _3396;
                        uint _3610 = _3406;
                        uint _3611;
                        vec4 _3636;
                        float _3637;
                        vec4 _3652;
                        vec3 _3664;
                        vec4 _3679;
                        vec4 _3694;
                        float _3740;
                        bool _3741;
                        for (;;)
                        {
                            uint _3621 = ((_3397 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3610));
                            _3611 = (_3610 + 4294967295u) & _3610;
                            uint _3623 = _3621 * 40u;
                            _3636 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3623)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 3u)).x));
                            _3637 = _3636.w;
                            uint _3639 = (_3621 * 40u) + 4u;
                            _3652 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3639)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 3u)).x));
                            uint _3654 = (_3621 * 40u) + 8u;
                            _3664 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3654)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3654 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3654 + 2u)).x));
                            uint _3666 = (_3621 * 40u) + 16u;
                            _3679 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3666)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 3u)).x));
                            uint _3681 = (_3621 * 40u) + 20u;
                            _3694 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3681)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 3u)).x));
                            uint _3696 = (_3621 * 40u) + 24u;
                            vec4 _3709 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3696)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 3u)).x));
                            uint _3715 = (_3621 * 40u) + 28u;
                            vec4 _3728 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3715)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 3u)).x));
                            _3740 = fma(_2995, _3728.z, fma(_2994, _3728.y, _3728.x * _2993)) + _3728.w;
                            _3741 = !((fma(_2995, _3709.z, fma(_2994, _3709.y, _3709.x * _2993)) + _3709.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3741)
                            {
                                float _3768 = _3636.x - _2993;
                                float _3769 = _3636.y - _2994;
                                float _3770 = _3636.z - _2995;
                                float _3771 = dot(vec3(_3768, _3769, _3770), vec3(_3768, _3769, _3770));
                                float _3774 = inversesqrt(_3771);
                                float _3775 = _3774 * _3768;
                                float _3776 = _3774 * _3769;
                                float _3777 = _3774 * _3770;
                                float _3781 = 1.0 - (_3771 / (_3637 * _3637));
                                float _4948 = isnan(0.0) ? _3781 : (isnan(_3781) ? 0.0 : max(_3781, 0.0));
                                float _3782 = isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0));
                                float _3786 = sqrt(_3771) * _3652.w;
                                float _3788 = 1.39999997615814208984375 / (_3786 + 1.39999997615814208984375);
                                float _3789 = _3788 * _3788;
                                float _3792 = ((1.0 - _3789) * dot(vec3(_3775, _3776, _3777), vec3(_1262, _1265, _1268))) + _3789;
                                float _3795 = _3786 * _3786;
                                float _3799 = (fma(_2995, _3679.z, fma(_2994, _3679.y, _3679.x * _2993)) + _3679.w) / _3740;
                                float _3800 = (fma(_2995, _3694.z, fma(_2994, _3694.y, _3694.x * _2993)) + _3694.w) / _3740;
                                float _3804 = 1.0 - dot(vec2(_3799, _3800), vec2(_3799, _3800));
                                float _4964 = isnan(0.0) ? _3804 : (isnan(_3804) ? 0.0 : max(_3804, 0.0));
                                float _3805 = isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0));
                                float _3806 = _3805 * (((isnan(0.0) ? _3792 : (isnan(_3792) ? 0.0 : max(_3792, 0.0))) * _3782) / ((_3795 * 0.699999988079071044921875) + 1.0));
                                float _3818 = exp2(log2(1.0 / ((_3795 * 3.5) + 5.0)) * 0.25);
                                float _3819 = 1.0 - _1337;
                                float _3826 = sqrt(1.0 - ((1.0 - (_3819 * _3819)) * (1.0 - (_3818 * _3818))));
                                float _3827 = _3826 * _3826;
                                float _3828 = _3827 * _3827;
                                float _3829 = _3775 - _3278;
                                float _3830 = _3776 - _3279;
                                float _3831 = _3777 - _3280;
                                float _3835 = inversesqrt(dot(vec3(_3829, _3830, _3831), vec3(_3829, _3830, _3831)));
                                float _3839 = dot(vec3(_1262, _1265, _1268), vec3((-0.0) - _3278, (-0.0) - _3279, (-0.0) - _3280));
                                float _4975 = isnan(0.0) ? _3839 : (isnan(_3839) ? 0.0 : max(_3839, 0.0));
                                float _3842 = isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0));
                                float _3843 = dot(vec3(_1262, _1265, _1268), vec3(_3835 * _3829, _3835 * _3830, _3835 * _3831));
                                float _4986 = isnan(0.0) ? _3843 : (isnan(_3843) ? 0.0 : max(_3843, 0.0));
                                float _3846 = isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0));
                                float _3850 = ((_3846 * _3846) * (_3828 + (-1.0))) + 1.0;
                                float _3851 = _3788 * _3827;
                                float _3852 = _3851 * _3851;
                                float _3858 = ((1.0 - _3852) * dot(vec3(_1262, _1265, _1268), vec3(_3775, _3776, _3777))) + _3852;
                                float _4997 = isnan(0.0) ? _3858 : (isnan(_3858) ? 0.0 : max(_3858, 0.0));
                                float _3859 = isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0));
                                float _3860 = 1.0 - _3827;
                                float _3870 = (0.5 / (((_3859 * ((_3842 * _3860) + _3827)) + 9.9999999392252902907785028219223e-09) + (((_3859 * _3860) + _3827) * _3842))) * _3859;
                                float _5008 = isnan(0.0) ? _3870 : (isnan(_3870) ? 0.0 : max(_3870, 0.0));
                                float _3880 = (_3805 * _3782) * (((_3828 * 3.1415927410125732421875) * (isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0)))) / ((_3850 * _3850) * ((_3795 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3880 * _3664.x;
                                frontier_phi_73_pred_1 = _3880 * _3664.y;
                                frontier_phi_73_pred_2 = _3806 * _3652.z;
                                frontier_phi_73_pred_3 = _3806 * _3652.y;
                                frontier_phi_73_pred_4 = _3806 * _3652.x;
                                frontier_phi_73_pred_5 = _3880 * _3664.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3884 = frontier_phi_73_pred;
                            _3885 = frontier_phi_73_pred_1;
                            _3889 = frontier_phi_73_pred_2;
                            _3888 = frontier_phi_73_pred_3;
                            _3887 = frontier_phi_73_pred_4;
                            _3886 = frontier_phi_73_pred_5;
                            _3594 = _3887 + _3607;
                            _3595 = _3888 + _3608;
                            _3596 = _3889 + _3609;
                            _3591 = _3884 + _3604;
                            _3592 = _3885 + _3605;
                            _3593 = _3886 + _3606;
                            if (_3611 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3604 = _3591;
                                _3605 = _3592;
                                _3606 = _3593;
                                _3607 = _3594;
                                _3608 = _3595;
                                _3609 = _3596;
                                _3610 = _3611;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3594;
                        frontier_phi_67_pred_1 = _3595;
                        frontier_phi_67_pred_2 = _3596;
                        frontier_phi_67_pred_3 = _3593;
                        frontier_phi_67_pred_4 = _3592;
                        frontier_phi_67_pred_5 = _3591;
                    }
                    _3259 = frontier_phi_67_pred;
                    _3261 = frontier_phi_67_pred_1;
                    _3263 = frontier_phi_67_pred_2;
                    _3257 = frontier_phi_67_pred_3;
                    _3255 = frontier_phi_67_pred_4;
                    _3253 = frontier_phi_67_pred_5;
                    uint _3398 = _3397 + 1u;
                    if (_3398 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3391 = _3253;
                        _3392 = _3255;
                        _3393 = _3257;
                        _3394 = _3259;
                        _3395 = _3261;
                        _3396 = _3263;
                        _3397 = _3398;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3261;
                frontier_phi_55_56_ladder_1 = _3263;
                frontier_phi_55_56_ladder_2 = _3259;
                frontier_phi_55_56_ladder_3 = _3257;
                frontier_phi_55_56_ladder_4 = _3255;
                frontier_phi_55_56_ladder_5 = _3253;
            }
            else
            {
                frontier_phi_55_56_ladder = _3148;
                frontier_phi_55_56_ladder_1 = _3150;
                frontier_phi_55_56_ladder_2 = _3146;
                frontier_phi_55_56_ladder_3 = _3144;
                frontier_phi_55_56_ladder_4 = _3142;
                frontier_phi_55_56_ladder_5 = _3140;
            }
            _3252 = frontier_phi_55_56_ladder_5;
            _3254 = frontier_phi_55_56_ladder_4;
            _3256 = frontier_phi_55_56_ladder_3;
            _3258 = frontier_phi_55_56_ladder_2;
            _3260 = frontier_phi_55_56_ladder;
            _3262 = frontier_phi_55_56_ladder_1;
        }
        float _3267 = isnan(1.0) ? _1321 : (isnan(_1321) ? 1.0 : min(_1321, 1.0));
        _3052 = (_3267 * _3258) + _2488;
        _3054 = (_3267 * _3260) + _2490;
        _3056 = (_3267 * _3262) + _2492;
        _3058 = ((_3252 * _1305) * _3267) + _2833;
        _3060 = ((_3254 * _1307) * _3267) + _2835;
        _3062 = ((_3256 * _1308) * _3267) + _2837;
    }
    else
    {
        _3052 = _2488;
        _3054 = _2490;
        _3056 = _2492;
        _3058 = _2833;
        _3060 = _2835;
        _3062 = _2837;
    }
    float _5024 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
    float _5035 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    float _5046 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
    uint _3082 = _295 + 6u;
    float _3090 = _1243 / cbSceneParam._m0[86u].x;
    float _3091 = _1244 / cbSceneParam._m0[86u].y;
    vec4 _3105 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3090, _3091, (log2((isnan(cbSceneParam._m0[77u].w) ? _1178 : (isnan(_1178) ? cbSceneParam._m0[77u].w : min(_1178, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3107 = _3105.x;
    float _3108 = _3105.y;
    float _3109 = _3105.z;
    float _3110 = _3105.w;
    float _3202;
    float _3204;
    float _3206;
    float _3208;
    if (_1178 > cbSceneParam._m0[78u].w)
    {
        float _3165 = isnan(_1178) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1178 : min(cbSceneParam._m0[80u].w, _1178));
        float _3166 = _3165 / _1178;
        float _3177 = _3166 * _1228;
        float _3178 = _1229 * _3166;
        float _3179 = (-0.0) - _3178;
        float _3180 = _3166 * _1230;
        float _3182 = (cbSceneParam._m0[77u].w * _3179) / _3165;
        float _3183 = _3182 + cbSceneParam._m0[79u].w;
        float _3184 = cbSceneParam._m0[79u].w - _3178;
        float _3190 = sqrt(((_3177 * _3177) + (_3178 * _3178)) + (_3180 * _3180));
        float _3193 = (1.0 - (cbSceneParam._m0[77u].w / _3165)) * _3190;
        float _3198 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3200 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3353;
        if (abs((_3179 - _3182) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3353 = ((((_3183 > 0.0) ? exp2(_3198 * _3183) : (2.0 - exp2(_3200 * _3183))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3193;
        }
        else
        {
            float _3313 = 1.0 / cbSceneParam._m0[80u].x;
            float _3314 = isnan(_3184) ? _3183 : (isnan(_3183) ? _3184 : max(_3183, _3184));
            float _3315 = isnan(_3184) ? _3183 : (isnan(_3183) ? _3184 : min(_3183, _3184));
            float _3324 = isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : min(_3314, 0.0));
            float _3325 = isnan(0.0) ? _3315 : (isnan(_3315) ? 0.0 : min(_3315, 0.0));
            _3353 = ((abs(_3190 / _3179) * cbSceneParam._m0[80u].y) * ((((_3324 - _3325) * 2.0) - ((exp2(_3198 * (isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : max(_3314, 0.0)))) - exp2(_3198 * (isnan(0.0) ? _3315 : (isnan(_3315) ? 0.0 : max(_3315, 0.0))))) * _3313)) - ((exp2(_3200 * _3324) - exp2(_3200 * _3325)) * _3313))) + (_3193 * cbSceneParam._m0[80u].z);
        }
        vec4 _3355 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3090, _3091, 1.0), 0.0);
        float _3364 = exp2((_3353 * (-1.44269502162933349609375)) * (1.0 - _3355.w));
        float _3365 = log2(_3364);
        float _3381 = log2(_3110);
        _3202 = (exp2(_3381 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].x)) * _3355.x) / cbSceneParam._m0[78u].x)) + _3107;
        _3204 = (exp2(_3381 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].y)) * _3355.y) / cbSceneParam._m0[78u].y)) + _3108;
        _3206 = (exp2(_3381 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].z)) * _3355.z) / cbSceneParam._m0[78u].z)) + _3109;
        _3208 = _3364 * _3110;
    }
    else
    {
        _3202 = _3107;
        _3204 = _3108;
        _3206 = _3109;
        _3208 = _3110;
    }
    float _3220 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3221 = _3220 == 3.0;
    float _3222 = log2(_3208);
    float _3229 = exp2(_3222 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0))) * (_3052 + ((isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0))) * _1321))) + ((_3058 + ((isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0))) * _2127)) * cbPerFrame._m0[3u].x));
    float _3230 = exp2(_3222 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0))) * (_3054 + ((isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0))) * _1321))) + ((_3060 + ((isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0))) * _2127)) * cbPerFrame._m0[3u].x));
    float _3231 = exp2(_3222 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0))) * (_3056 + ((isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0))) * _1321))) + ((_3062 + ((isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0))) * _2127)) * cbPerFrame._m0[3u].x));
    float _3240 = (_3220 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3240 * (_3221 ? _3229 : (_3229 + (cbSceneParam._m0[72u].w * _3202)));
    SV_Target.y = _3240 * (_3221 ? _3230 : (_3230 + (cbSceneParam._m0[72u].w * _3204)));
    SV_Target.z = _3240 * (_3221 ? _3231 : (_3231 + (cbSceneParam._m0[72u].w * _3206)));
    SV_Target.w = cbInstanceData._m0[_3082].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3082].w;
}


