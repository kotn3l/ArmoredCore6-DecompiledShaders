#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1484;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _236 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _237 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _238 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _244 = inversesqrt(dot(vec3(_236, _237, _238), vec3(_236, _237, _238)));
    float _245 = _244 * _236;
    float _246 = _244 * _237;
    float _247 = _244 * _238;
    float _251 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = _251 * NORMAL.x;
    float _253 = _251 * NORMAL.y;
    float _254 = _251 * NORMAL.z;
    float _258 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _259 = _258 * TANGENT.x;
    float _260 = _258 * TANGENT.y;
    float _261 = _258 * TANGENT.z;
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3808 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _3819 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _3830 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _283 = uint(roundEven(NORMAL.w)) * 13u;
    uint _288 = _283 + 1u;
    uint _292 = _283 + 2u;
    float _301 = sqrt(((cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x) + (cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x)) + (cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x));
    float _302 = _301 * TEXCOORD.z;
    float _303 = _301 * TEXCOORD.w;
    vec4 _316 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _302) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _303) + cbTextureTilingScale._m0[13u].w));
    vec4 _339 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _365 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _370 = _365.x * cbMtdParam._m0[11u].x;
    float _371 = _365.y * cbMtdParam._m0[11u].y;
    float _372 = _365.z * cbMtdParam._m0[11u].z;
    vec4 _391 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _302) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _303) + cbTextureTilingScale._m0[5u].w));
    vec4 _439 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _441 = _439.x;
    float _453 = dot(vec4(_441, _439.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _470 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_441 - _453) * cbMtdParam._m0[23u].w) + _453) * cbMtdParam._m0[22u].w))) + 1.0;
    float _3841 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0));
    float _481 = (_339.x * cbMtdParam._m0[9u].x) * ((_471 * ((_391.x * cbMtdParam._m0[12u].x) - _370)) + _370);
    float _482 = (_339.y * cbMtdParam._m0[9u].y) * ((_471 * ((_391.y * cbMtdParam._m0[12u].y) - _371)) + _371);
    float _483 = (_339.z * cbMtdParam._m0[9u].z) * ((_471 * ((_391.z * cbMtdParam._m0[12u].z) - _372)) + _372);
    float _487 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _316.x) * _481;
    float _490 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _316.y) * _482;
    float _493 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _316.z) * _483;
    float _501 = (((_481 - _487) * (isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0)))) + _487) * 4.55000019073486328125;
    float _503 = (((_482 - _490) * (isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0)))) + _490) * 4.55000019073486328125;
    float _505 = (((_483 - _493) * (isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0)))) + _493) * 4.55000019073486328125;
    vec4 _524 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _302) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _303) + cbTextureTilingScale._m0[14u].w));
    vec4 _544 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _302) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _303) + cbTextureTilingScale._m0[20u].w));
    vec4 _571 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _302) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _303) + cbTextureTilingScale._m0[4u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _590 = _588.x;
    float _591 = _588.y;
    float _592 = _588.z;
    float _601 = ((_571.z - _592) * _471) + _592;
    float _604 = ((((_571.x - _590) * _471) + _590) * 2.0) + (-1.0);
    float _605 = ((((_571.y - _591) * _471) + _591) * 2.0) + (-1.0);
    float _606 = dot(vec2(_604, _605), vec2(_604, _605));
    float _3852 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _611 = sqrt(1.0 - (isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0))));
    vec4 _631 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _643 = (_604 + ((((_544.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_631.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _644 = (_605 + ((((_544.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_631.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _647 = fma(_611, _252, fma(_644, _259, _643 * _245));
    float _650 = fma(_611, _253, fma(_644, _260, _643 * _246));
    float _653 = fma(_611, _254, fma(_644, _261, _643 * _247));
    float _657 = inversesqrt(dot(vec3(_647, _650, _653), vec3(_647, _650, _653)));
    vec4 _684 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _302) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _303) + cbTextureTilingScale._m0[11u].w));
    float _686 = _684.x;
    float _687 = 1.0 - _686;
    float _696 = (cbMtdParam._m0[19u].x + dot(vec4(_657 * _647, _657 * _650, _657 * _653, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_686 - _687) * cbMtdParam._m0[24u].z) + _687) * cbMtdParam._m0[21u].z);
    float _3863 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _697 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
    float _699 = (-0.0) - cbMtdParam._m0[24u].x;
    float _701 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _702 = isnan(1.0) ? _701 : (isnan(_701) ? 1.0 : min(_701, 1.0));
    float _709 = _697 - ((_697 * TEXCOORD_8.x) * _702);
    float _710 = _697 - ((_697 * TEXCOORD_8.y) * _702);
    float _711 = _697 - ((_697 * TEXCOORD_8.z) * _702);
    float _718 = (_709 * ((_524.x * cbMtdParam._m0[18u].x) - _501)) + _501;
    float _719 = (_710 * ((_524.y * cbMtdParam._m0[18u].y) - _503)) + _503;
    float _720 = (_711 * ((_524.z * cbMtdParam._m0[18u].z) - _505)) + _505;
    vec4 _732 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _302) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _303) + cbTextureTilingScale._m0[19u].w));
    float _734 = _732.x;
    float _735 = 1.0 - _734;
    float _761 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_734 - _735) * cbMtdParam._m0[24u].w) + _735) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _3884 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _762 = isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0));
    float _770 = ((((cbMtdParam._m0[10u].x - _718) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _762) + _718;
    float _771 = ((((cbMtdParam._m0[10u].y - _719) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _762) + _719;
    float _772 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _720)) * _762) + _720;
    vec4 _784 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _798 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _800 = _798.x;
    float _817 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _302) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _303) + cbTextureTilingScale._m0[9u].w)).x - _800) * _471) + _800;
    float _821 = ((_784.x - _817) * cbMtdParam._m0[19u].z) + _817;
    float _823 = _821 - (_821 * _709);
    float _825 = _823 - (_823 * _762);
    float _830 = (((_544.z - _601) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _601;
    float _834 = ((_631.z - _830) * cbMtdParam._m0[19u].w) + _830;
    vec4 _848 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _302) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _303) + cbTextureTilingScale._m0[15u].w));
    float _855 = (_848.x * 2.0) + (-1.0);
    float _856 = (_848.y * 2.0) + (-1.0);
    float _857 = dot(vec2(_855, _856), vec2(_855, _856));
    float _3895 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _865 = ((_848.z - _834) * _709) + _834;
    float _868 = ((cbMtdParam._m0[23u].x - _865) * _762) + _865;
    vec4 _889 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _302) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _303) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _895 = (_889.x * 2.0) + (-1.0);
    float _896 = (_889.y * 2.0) + (-1.0);
    float _897 = dot(vec2(_895, _896), vec2(_895, _896));
    float _3906 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _912 = ((sqrt(1.0 - (isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0)))) - _611) * _711) + _611;
    float _915 = (((_855 - _643) * _709) + _643) + (cbMtdParam._m0[21u].x * _643);
    float _916 = (((_856 - _644) * _710) + _644) + (cbMtdParam._m0[21u].x * _644);
    float _927 = (((_895 - _915) + (_915 * cbMtdParam._m0[22u].z)) * _762) + _915;
    float _928 = (((_896 - _916) + (_916 * cbMtdParam._m0[22u].z)) * _762) + _916;
    float _929 = (_762 * (sqrt(1.0 - (isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0)))) - _912)) + _912;
    float _931 = cbMtdParam._m0[22u].x + _631.w;
    float _934 = fma(_929, _252, fma(_928, _259, _927 * _245));
    float _937 = fma(_929, _253, fma(_928, _260, _927 * _246));
    float _940 = fma(_929, _254, fma(_928, _261, _927 * _247));
    float _944 = inversesqrt(dot(vec3(_934, _937, _940), vec3(_934, _937, _940)));
    float _945 = _944 * _934;
    float _946 = _944 * _937;
    float _947 = _944 * _940;
    float _3917 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _948 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
    float _3928 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    float _3939 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _3950 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _3961 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _3972 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _953 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
    float _967 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1017 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1007);
    float _1018 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1007);
    float _1019 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1007);
    float _1023 = inversesqrt(dot(vec3(_1017, _1018, _1019), vec3(_1017, _1018, _1019)));
    float _1024 = _1017 * _1023;
    float _1025 = _1018 * _1023;
    float _1026 = _1019 * _1023;
    float _1032 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1033 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1051 = fma(_947, cbSceneParam._m0[5u].z, fma(_946, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _945));
    float _1054 = fma(_947, cbSceneParam._m0[6u].z, fma(_946, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _945));
    float _1057 = fma(_947, cbSceneParam._m0[7u].z, fma(_946, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _945));
    uint _1071 = (_283 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1077 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0)))) * cbInstanceData._m0[_1071].x;
    float _1078 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0)))) * cbInstanceData._m0[_1071].y;
    float _1079 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0)))) * cbInstanceData._m0[_1071].z;
    float _3983 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1080 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
    float _3994 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1081 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
    float _4005 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _1082 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _1083 = 1.0 - _953;
    float _1084 = _1080 * _1083;
    float _1085 = _1081 * _1083;
    float _1086 = _1082 * _1083;
    float _1091 = (_1080 + (-0.039999999105930328369140625)) * _953;
    float _1092 = (_1081 + (-0.039999999105930328369140625)) * _953;
    float _1093 = (_1082 + (-0.039999999105930328369140625)) * _953;
    float _1094 = _1091 + 0.039999999105930328369140625;
    float _1096 = _1092 + 0.039999999105930328369140625;
    float _1097 = _1093 + 0.039999999105930328369140625;
    vec4 _1106 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1032, cbSceneParam._m0[86u].y * _1033));
    float _1110 = ((isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0))) * TEXCOORD_5.w) * _1106.x;
    float _1111 = dot(vec3(_945, _946, _947), vec3(_1024, _1025, _1026));
    float _1114 = _1111 * 2.0;
    float _1118 = (_1114 * _945) - _1024;
    float _1119 = (_1114 * _946) - _1025;
    float _1120 = (_1114 * _947) - _1026;
    float _1124 = abs(dot(vec3(_1024, _1025, _1026), vec3(_945, _946, _947)));
    float _4016 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1126 = sqrt(_948);
    float _1139 = exp2((_1126 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1126 * 3.0));
    float _1145 = (1.0 - _1139) * ((_1126 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1146 = _1139 * _1126;
    float _1174 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1178 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1182 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1483;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1208 = fma(_1182, cbModelParam._m0[26u].z, fma(_1178, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1174));
        float _1212 = fma(_1182, cbModelParam._m0[27u].z, fma(_1178, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1174));
        float _1216 = fma(_1182, cbModelParam._m0[28u].z, fma(_1178, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1174));
        float _1241 = _1174 + _945;
        float _1242 = _1178 + _946;
        float _1243 = _1182 + _947;
        float _1253 = fma(_1243, cbModelParam._m0[26u].z, fma(_1242, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1241)) - _1208;
        float _1254 = fma(_1243, cbModelParam._m0[27u].z, fma(_1242, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1241)) - _1212;
        float _1255 = fma(_1243, cbModelParam._m0[28u].z, fma(_1242, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1241)) - _1216;
        float _1259 = inversesqrt(dot(vec3(_1253, _1254, _1255), vec3(_1253, _1254, _1255)));
        float _1272 = ((_1259 * _1253) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1208 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1273 = ((_1259 * _1254) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1212 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1274 = ((_1259 * _1255) / cbModelParam._m0[34u].z) + ((((((_1216 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1277 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1284 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1291 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        vec4 _1298 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1272, _1273, _1274), 0.0);
        float _1311 = exp2((_1277.w + (-0.5)) * 20.0) * 2.0;
        float _1312 = _1311 * (_1277.x + (-0.5));
        float _1313 = _1311 * (_1277.y + (-0.5));
        float _1314 = _1311 * (_1277.z + (-0.5));
        float _1321 = exp2((_1284.w + (-0.5)) * 20.0) * 2.0;
        float _1322 = _1321 * (_1284.x + (-0.5));
        float _1323 = _1321 * (_1284.y + (-0.5));
        float _1324 = _1321 * (_1284.z + (-0.5));
        float _1331 = exp2((_1291.w + (-0.5)) * 20.0) * 2.0;
        float _1332 = _1331 * (_1291.x + (-0.5));
        float _1333 = _1331 * (_1291.y + (-0.5));
        float _1334 = _1331 * (_1291.z + (-0.5));
        float _1341 = exp2((_1298.w + (-0.5)) * 20.0) * 2.0;
        float _1342 = _1341 * (_1298.x + (-0.5));
        float _1343 = _1341 * (_1298.y + (-0.5));
        float _1344 = _1341 * (_1298.z + (-0.5));
        float _1345 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1346 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1347 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1348 = _1312 * 0.5;
        float _1349 = _1322 * 0.5;
        float _1350 = _1332 * 0.5;
        float _1351 = dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350));
        float _1356 = (_1351 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1351);
        float _1365 = (dot(vec3(_945, _946, _947), vec3(_1356 * _1348, _1356 * _1349, _1356 * _1350)) + 1.0) * 0.5;
        float _4042 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1375 = sqrt(((_1349 * _1349) + (_1348 * _1348)) + (_1350 * _1350)) / (_1345 + 9.9999997473787516355514526367188e-06);
        float _4053 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1376 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
        float _1377 = _1376 * 2.0;
        float _1381 = (1.0 - _1376) / (_1376 + 1.0);
        float _4064 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
        float _1391 = ((((1.0 - _1382) * (_1377 + 2.0)) * exp2(log2(isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0))) * (_1377 + 1.0))) + _1382) * _1345;
        float _1392 = _1313 * 0.5;
        float _1393 = _1323 * 0.5;
        float _1394 = _1333 * 0.5;
        float _1395 = dot(vec3(_1392, _1393, _1394), vec3(_1392, _1393, _1394));
        float _1400 = (_1395 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1395);
        float _1408 = (dot(vec3(_945, _946, _947), vec3(_1400 * _1392, _1400 * _1393, _1400 * _1394)) + 1.0) * 0.5;
        float _4075 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1417 = sqrt(((_1393 * _1393) + (_1392 * _1392)) + (_1394 * _1394)) / (_1346 + 9.9999997473787516355514526367188e-06);
        float _4086 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1418 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
        float _1419 = _1418 * 2.0;
        float _1423 = (1.0 - _1418) / (_1418 + 1.0);
        float _4097 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1424 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
        float _1433 = ((((1.0 - _1424) * (_1419 + 2.0)) * exp2(log2(isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0))) * (_1419 + 1.0))) + _1424) * _1346;
        float _1434 = _1314 * 0.5;
        float _1435 = _1324 * 0.5;
        float _1436 = _1334 * 0.5;
        float _1437 = dot(vec3(_1434, _1435, _1436), vec3(_1434, _1435, _1436));
        float _1442 = (_1437 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1437);
        float _1450 = (dot(vec3(_945, _946, _947), vec3(_1442 * _1434, _1442 * _1435, _1442 * _1436)) + 1.0) * 0.5;
        float _4108 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1459 = sqrt(((_1435 * _1435) + (_1434 * _1434)) + (_1436 * _1436)) / (_1347 + 9.9999997473787516355514526367188e-06);
        float _4119 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
        float _1461 = _1460 * 2.0;
        float _1465 = (1.0 - _1460) / (_1460 + 1.0);
        float _4130 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1466 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
        float _1475 = ((((1.0 - _1466) * (_1461 + 2.0)) * exp2(log2(isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) * (_1461 + 1.0))) + _1466) * _1347;
        _1483 = _1314;
        _1485 = _1313;
        _1486 = _1312;
        _1487 = _1324;
        _1488 = _1323;
        _1489 = _1322;
        _1490 = _1334;
        _1491 = _1333;
        _1492 = _1332;
        _1493 = _1347;
        _1494 = _1346;
        _1495 = _1345;
        _1496 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0)));
        _1497 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0)));
        _1498 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)));
    }
    else
    {
        _1483 = _1484;
        _1485 = _1484;
        _1486 = _1484;
        _1487 = _1484;
        _1488 = _1484;
        _1489 = _1484;
        _1490 = _1484;
        _1491 = _1484;
        _1492 = _1484;
        _1493 = _1484;
        _1494 = _1484;
        _1495 = _1484;
        _1496 = 0.0;
        _1497 = 0.0;
        _1498 = 0.0;
    }
    float _1792;
    float _1793;
    float _1794;
    float _1795;
    float _1796;
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1523 = fma(_1182, cbModelParam._m0[30u].z, fma(_1178, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1174));
        float _1527 = fma(_1182, cbModelParam._m0[31u].z, fma(_1178, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1174));
        float _1531 = fma(_1182, cbModelParam._m0[32u].z, fma(_1178, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1174));
        float _1554 = _1174 + _945;
        float _1555 = _1178 + _946;
        float _1556 = _1182 + _947;
        float _1566 = fma(_1556, cbModelParam._m0[30u].z, fma(_1555, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1554)) - _1523;
        float _1567 = fma(_1556, cbModelParam._m0[31u].z, fma(_1555, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1554)) - _1527;
        float _1568 = fma(_1556, cbModelParam._m0[32u].z, fma(_1555, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1554)) - _1531;
        float _1572 = inversesqrt(dot(vec3(_1566, _1567, _1568), vec3(_1566, _1567, _1568)));
        float _1585 = ((_1572 * _1566) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1523 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1586 = ((_1572 * _1567) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1527 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1587 = ((_1572 * _1568) / cbModelParam._m0[35u].z) + ((((((_1531 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1603 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1610 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        float _1622 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1589.x + (-0.5));
        float _1624 = _1622 * (_1589.y + (-0.5));
        float _1625 = _1622 * (_1589.z + (-0.5));
        float _1632 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1633 = _1632 * (_1596.x + (-0.5));
        float _1634 = _1632 * (_1596.y + (-0.5));
        float _1635 = _1632 * (_1596.z + (-0.5));
        float _1642 = exp2((_1603.w + (-0.5)) * 20.0) * 2.0;
        float _1643 = _1642 * (_1603.x + (-0.5));
        float _1644 = _1642 * (_1603.y + (-0.5));
        float _1645 = _1642 * (_1603.z + (-0.5));
        float _1652 = exp2((_1610.w + (-0.5)) * 20.0) * 2.0;
        float _1653 = _1652 * (_1610.x + (-0.5));
        float _1654 = _1652 * (_1610.y + (-0.5));
        float _1655 = _1652 * (_1610.z + (-0.5));
        float _1656 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1657 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1658 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1659 = _1623 * 0.5;
        float _1660 = _1633 * 0.5;
        float _1661 = _1643 * 0.5;
        float _1662 = dot(vec3(_1659, _1660, _1661), vec3(_1659, _1660, _1661));
        float _1667 = (_1662 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1662);
        float _1675 = (dot(vec3(_945, _946, _947), vec3(_1667 * _1659, _1667 * _1660, _1667 * _1661)) + 1.0) * 0.5;
        float _4171 = isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0));
        float _1684 = sqrt(((_1660 * _1660) + (_1659 * _1659)) + (_1661 * _1661)) / (_1656 + 9.9999997473787516355514526367188e-06);
        float _4182 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1685 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
        float _1686 = _1685 * 2.0;
        float _1690 = (1.0 - _1685) / (_1685 + 1.0);
        float _4193 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1691 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
        float _1700 = ((((1.0 - _1691) * (_1686 + 2.0)) * exp2(log2(isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * (_1686 + 1.0))) + _1691) * _1656;
        float _1701 = _1624 * 0.5;
        float _1702 = _1634 * 0.5;
        float _1703 = _1644 * 0.5;
        float _1704 = dot(vec3(_1701, _1702, _1703), vec3(_1701, _1702, _1703));
        float _1709 = (_1704 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1704);
        float _1717 = (dot(vec3(_945, _946, _947), vec3(_1709 * _1701, _1709 * _1702, _1709 * _1703)) + 1.0) * 0.5;
        float _4204 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
        float _1726 = sqrt(((_1702 * _1702) + (_1701 * _1701)) + (_1703 * _1703)) / (_1657 + 9.9999997473787516355514526367188e-06);
        float _4215 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
        float _1727 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1728 = _1727 * 2.0;
        float _1732 = (1.0 - _1727) / (_1727 + 1.0);
        float _4226 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1733 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
        float _1742 = ((((1.0 - _1733) * (_1728 + 2.0)) * exp2(log2(isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0))) * (_1728 + 1.0))) + _1733) * _1657;
        float _1743 = _1625 * 0.5;
        float _1744 = _1635 * 0.5;
        float _1745 = _1645 * 0.5;
        float _1746 = dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745));
        float _1751 = (_1746 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1746);
        float _1759 = (dot(vec3(_945, _946, _947), vec3(_1751 * _1743, _1751 * _1744, _1751 * _1745)) + 1.0) * 0.5;
        float _4237 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
        float _1768 = sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745)) / (_1658 + 9.9999997473787516355514526367188e-06);
        float _4248 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1769 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1770 = _1769 * 2.0;
        float _1774 = (1.0 - _1769) / (_1769 + 1.0);
        float _4259 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
        float _1775 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _1784 = ((((1.0 - _1775) * (_1770 + 2.0)) * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * (_1770 + 1.0))) + _1775) * _1658;
        _1792 = _1625;
        _1793 = _1624;
        _1794 = _1623;
        _1795 = _1635;
        _1796 = _1634;
        _1797 = _1633;
        _1798 = _1645;
        _1799 = _1644;
        _1800 = _1643;
        _1801 = _1658;
        _1802 = _1657;
        _1803 = _1656;
        _1804 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0)));
        _1805 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0)));
        _1806 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0)));
    }
    else
    {
        _1792 = _1484;
        _1793 = _1484;
        _1794 = _1484;
        _1795 = _1484;
        _1796 = _1484;
        _1797 = _1484;
        _1798 = _1484;
        _1799 = _1484;
        _1800 = _1484;
        _1801 = _1484;
        _1802 = _1484;
        _1803 = _1484;
        _1804 = 0.0;
        _1805 = 0.0;
        _1806 = 0.0;
    }
    float _1816 = (cbModelParam._m0[1u].x * (_1804 - _1496)) + _1496;
    float _1817 = (cbModelParam._m0[1u].x * (_1805 - _1497)) + _1497;
    float _1818 = (cbModelParam._m0[1u].x * (_1806 - _1498)) + _1498;
    float _1839 = fma(_1818, cbSceneParam._m0[89u].z, fma(_1817, cbSceneParam._m0[89u].y, _1816 * cbSceneParam._m0[89u].x));
    float _1842 = fma(_1818, cbSceneParam._m0[90u].z, fma(_1817, cbSceneParam._m0[90u].y, _1816 * cbSceneParam._m0[90u].x));
    float _1845 = fma(_1818, cbSceneParam._m0[91u].z, fma(_1817, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1816));
    float _1860 = _1118 * 0.5;
    float _1861 = _1119 * 0.5;
    float _1862 = _1120 * 0.5;
    float _1863 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1794, _1797, _1800, _1803));
    float _1866 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1793, _1796, _1799, _1802));
    float _1869 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1792, _1795, _1798, _1801));
    float _1903;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1876 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1483, _1487, _1490, _1493));
        float _1880 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1485, _1488, _1491, _1494));
        float _1884 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1486, _1489, _1492, _1495));
        float _1891 = dot(vec4(cbModelParam._m0[39u]), vec4(_1860, _1861, _1862, 1.0));
        _1903 = dot(vec3(isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0)), isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)), isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1891) ? 0.0 : (isnan(0.0) ? _1891 : max(0.0, _1891))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1903 = 1.0;
    }
    float _1914;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1905 = dot(vec4(cbModelParam._m0[40u]), vec4(_1860, _1861, _1862, 1.0));
        _1914 = dot(vec3(isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)), isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1905) ? 0.0 : (isnan(0.0) ? _1905 : max(0.0, _1905))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1914 = 1.0;
    }
    float _1918 = (_1914 * cbModelParam._m0[1u].x) + (_1903 * (1.0 - cbModelParam._m0[1u].x));
    float _1928 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _948);
    float _1929 = isnan(_1928) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1928 : min(cbModelParam._m0[25u].z, _1928));
    float _2009;
    float _2011;
    float _2013;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1976 = fma(_1182, cbModelParam._m0[13u].z, fma(_1178, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1174)) + cbModelParam._m0[13u].w;
        float _1980 = fma(_1182, cbModelParam._m0[14u].z, fma(_1178, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1174)) + cbModelParam._m0[14u].w;
        float _1984 = fma(_1182, cbModelParam._m0[15u].z, fma(_1178, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1174)) + cbModelParam._m0[15u].w;
        float _1987 = fma(_1120, cbModelParam._m0[13u].z, fma(_1119, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1118));
        float _1990 = fma(_1120, cbModelParam._m0[14u].z, fma(_1119, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1118));
        float _1993 = fma(_1120, cbModelParam._m0[15u].z, fma(_1119, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1118));
        float _2021;
        if (_1987 > 0.0)
        {
            _2021 = abs((1.0 - _1976) / _1987);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1987 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1976 + 1.0) / _1987);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2021 = frontier_phi_14_12_ladder;
        }
        float _2223;
        if (_1990 > 0.0)
        {
            _2223 = abs((1.0 - _1980) / _1990);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1990 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1980 + 1.0) / _1990);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2223 = frontier_phi_23_19_ladder;
        }
        float _2477;
        if (_1993 > 0.0)
        {
            _2477 = abs((1.0 - _1984) / _1993);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1993 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1984 + 1.0) / _1993);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2477 = frontier_phi_35_30_ladder;
        }
        float _2479 = isnan(_2223) ? _2021 : (isnan(_2021) ? _2223 : min(_2021, _2223));
        float _2480 = isnan(_2477) ? _2479 : (isnan(_2479) ? _2477 : min(_2479, _2477));
        float _2484 = (_2480 * _1987) + _1976;
        float _2485 = (_2480 * _1990) + _1980;
        float _2486 = (_2480 * _1993) + _1984;
        float _2487 = _2480 * 9.9999997473787516355514526367188e-05;
        float _2489 = (-1.0) - _2487;
        float _2491 = _2487 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2486 > _2491) || ((_2486 < _2489) || ((_2485 > _2491) || ((_2485 < _2489) || ((_2484 < _2489) || (_2484 > _2491))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2614 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2486, cbModelParam._m0[9u].z, fma(_2485, cbModelParam._m0[9u].y, _2484 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2486, cbModelParam._m0[10u].z, fma(_2485, cbModelParam._m0[10u].y, _2484 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2486, cbModelParam._m0[11u].z, fma(_2485, cbModelParam._m0[11u].y, _2484 * cbModelParam._m0[11u].x))), _1929);
            frontier_phi_13_35_ladder = _2614.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2614.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2614.x * cbModelParam._m0[1u].y;
        }
        _2009 = frontier_phi_13_35_ladder_2;
        _2011 = frontier_phi_13_35_ladder_1;
        _2013 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1997 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1118, _1119, _1120), _1929);
        _2009 = _1997.x * cbModelParam._m0[1u].y;
        _2011 = _1997.y * cbModelParam._m0[1u].y;
        _2013 = _1997.z * cbModelParam._m0[1u].y;
    }
    float _2017 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _948);
    float _2018 = isnan(_2017) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2017 : min(cbModelParam._m0[25u].w, _2017));
    float _2107;
    float _2109;
    float _2111;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2071 = fma(_1182, cbModelParam._m0[21u].z, fma(_1178, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1174)) + cbModelParam._m0[21u].w;
        float _2075 = fma(_1182, cbModelParam._m0[22u].z, fma(_1178, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1174)) + cbModelParam._m0[22u].w;
        float _2079 = fma(_1182, cbModelParam._m0[23u].z, fma(_1178, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1174)) + cbModelParam._m0[23u].w;
        float _2082 = fma(_1120, cbModelParam._m0[21u].z, fma(_1119, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1118));
        float _2085 = fma(_1120, cbModelParam._m0[22u].z, fma(_1119, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1118));
        float _2088 = fma(_1120, cbModelParam._m0[23u].z, fma(_1119, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1118));
        float _2228;
        if (_2082 > 0.0)
        {
            _2228 = abs((1.0 - _2071) / _2082);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2082 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2071 + 1.0) / _2082);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2228 = frontier_phi_25_21_ladder;
        }
        float _2504;
        if (_2085 > 0.0)
        {
            _2504 = abs((1.0 - _2075) / _2085);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2085 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2075 + 1.0) / _2085);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2504 = frontier_phi_37_32_ladder;
        }
        float _2717;
        if (_2088 > 0.0)
        {
            _2717 = abs((1.0 - _2079) / _2088);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2088 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2079 + 1.0) / _2088);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2717 = frontier_phi_46_43_ladder;
        }
        float _2719 = isnan(_2504) ? _2228 : (isnan(_2228) ? _2504 : min(_2228, _2504));
        float _2720 = isnan(_2717) ? _2719 : (isnan(_2719) ? _2717 : min(_2719, _2717));
        float _2724 = (_2720 * _2082) + _2071;
        float _2725 = (_2720 * _2085) + _2075;
        float _2726 = (_2720 * _2088) + _2079;
        float _2727 = _2720 * 9.9999997473787516355514526367188e-05;
        float _2728 = (-1.0) - _2727;
        float _2730 = _2727 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2726 > _2730) || ((_2726 < _2728) || ((_2725 > _2730) || ((_2725 < _2728) || ((_2724 < _2728) || (_2724 > _2730))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2925 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2726, cbModelParam._m0[17u].z, fma(_2725, cbModelParam._m0[17u].y, _2724 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2726, cbModelParam._m0[18u].z, fma(_2725, cbModelParam._m0[18u].y, _2724 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2726, cbModelParam._m0[19u].z, fma(_2725, cbModelParam._m0[19u].y, _2724 * cbModelParam._m0[19u].x))), _2018);
            frontier_phi_22_46_ladder = _2925.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2925.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2925.x * cbModelParam._m0[1u].z;
        }
        _2107 = frontier_phi_22_46_ladder_2;
        _2109 = frontier_phi_22_46_ladder_1;
        _2111 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2091 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1118, _1119, _1120), _2018);
        _2107 = _2091.x * cbModelParam._m0[1u].z;
        _2109 = _2091.y * cbModelParam._m0[1u].z;
        _2111 = _2091.z * cbModelParam._m0[1u].z;
    }
    float _2124 = (((_1145 * _1094) + _1146) * _1110) * ((cbModelParam._m0[1u].w * (_2107 - _2009)) + _2009);
    float _2126 = (((_1145 * _1096) + _1146) * _1110) * ((cbModelParam._m0[1u].w * (_2109 - _2011)) + _2011);
    float _2128 = (((_1145 * _1097) + _1146) * _1110) * ((cbModelParam._m0[1u].w * (_2111 - _2013)) + _2013);
    float _2131 = fma(_2128, cbSceneParam._m0[89u].z, fma(_2126, cbSceneParam._m0[89u].y, _2124 * cbSceneParam._m0[89u].x));
    float _2134 = fma(_2128, cbSceneParam._m0[90u].z, fma(_2126, cbSceneParam._m0[90u].y, _2124 * cbSceneParam._m0[90u].x));
    float _2137 = fma(_2128, cbSceneParam._m0[91u].z, fma(_2126, cbSceneParam._m0[91u].y, _2124 * cbSceneParam._m0[91u].x));
    uvec4 _2147 = floatBitsToUint(cbInstanceData._m0[_283 + 5u]);
    uint _2149 = _2147.x * 14u;
    uint _2150 = _2149 + 13u;
    float _2157 = _1110 + (-1.0);
    float _2162 = (cbLight._m0[_2150].x * _2157) + 1.0;
    float _2163 = (cbLight._m0[_2150].y * _2157) + 1.0;
    float _2164 = (cbLight._m0[_2150].z * _2157) + 1.0;
    float _2165 = (cbLight._m0[_2150].w * _2157) + 1.0;
    uint _2166 = _2149 + 5u;
    float _2172 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
    uint _2176 = _2149 + 4u;
    float _2182 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
    uint _2186 = _2149 | 1u;
    float _2197 = dot(vec3(cbLight._m0[_2149].xyz), vec3(_945, _946, _947));
    float _2200 = dot(vec3(cbLight._m0[_2186].xyz), vec3(_945, _946, _947));
    float _4395 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _4406 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _2205 = (isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0))) * 0.3183098733425140380859375;
    float _2207 = (isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0))) * 0.3183098733425140380859375;
    float _2214 = ((cbLight._m0[_2166].x * _2172) * _2207) + ((cbLight._m0[_2176].x * _2182) * _2205);
    float _2215 = ((_2172 * cbLight._m0[_2166].y) * _2207) + ((_2182 * cbLight._m0[_2176].y) * _2205);
    float _2216 = ((_2172 * cbLight._m0[_2166].z) * _2207) + ((_2182 * cbLight._m0[_2176].z) * _2205);
    uvec4 _2220 = floatBitsToUint(cbLight._m0[_2149 + 12u]);
    bool _2222 = _2220.x == 0u;
    float _2233;
    float _2235;
    float _2237;
    if (_2222)
    {
        _2233 = _2214;
        _2235 = _2215;
        _2237 = _2216;
    }
    else
    {
        uint _2241 = _2149 + 6u;
        float _2257 = (dot(vec3(cbLight._m0[_2149 + 2u].xyz), vec3(_945, _946, _947)) * 0.5) + 0.5;
        float _2258 = _2257 * _2257;
        float _4417 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
        float _2259 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
        float _2260 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2233 = (((cbLight._m0[_2241].x * 0.3183098733425140380859375) * _2259) * _2260) + _2214;
        _2235 = (((cbLight._m0[_2241].y * 0.3183098733425140380859375) * _2259) * _2260) + _2215;
        _2237 = (((cbLight._m0[_2241].z * 0.3183098733425140380859375) * _2259) * _2260) + _2216;
    }
    bool _2240 = _2220.y == 0u;
    float _2278;
    float _2280;
    float _2282;
    if (_2240)
    {
        _2278 = _2233;
        _2280 = _2235;
        _2282 = _2237;
    }
    else
    {
        uint _2448 = _2149 + 7u;
        float _2464 = (dot(vec3(cbLight._m0[_2149 + 3u].xyz), vec3(_945, _946, _947)) * 0.5) + 0.5;
        float _2465 = _2464 * _2464;
        float _4433 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
        float _2466 = isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0));
        float _2467 = isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0));
        _2278 = (((cbLight._m0[_2448].x * 0.3183098733425140380859375) * _2466) * _2467) + _2233;
        _2280 = (((cbLight._m0[_2448].y * 0.3183098733425140380859375) * _2466) * _2467) + _2235;
        _2282 = (((cbLight._m0[_2448].z * 0.3183098733425140380859375) * _2466) * _2467) + _2237;
    }
    uint _2285 = _2149 + 8u;
    float _2298 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2149].w)) * _948) * 0.949999988079071044921875);
    float _2299 = _2298 * _2298;
    float _2300 = cbLight._m0[_2149].x + _1024;
    float _2301 = cbLight._m0[_2149].y + _1025;
    float _2302 = cbLight._m0[_2149].z + _1026;
    float _2306 = inversesqrt(dot(vec3(_2300, _2301, _2302), vec3(_2300, _2301, _2302)));
    float _2307 = _2306 * _2300;
    float _2308 = _2306 * _2301;
    float _2309 = _2306 * _2302;
    float _2310 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2149].xyz));
    float _4449 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
    float _2313 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
    float _4460 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _2314 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
    float _2315 = dot(vec3(_945, _946, _947), vec3(_2307, _2308, _2309));
    float _4471 = isnan(0.0) ? _2315 : (isnan(_2315) ? 0.0 : max(_2315, 0.0));
    float _2318 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _2319 = dot(vec3(cbLight._m0[_2149].xyz), vec3(_2307, _2308, _2309));
    float _4482 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2323 = _2299 * _2299;
    float _2327 = ((_2318 * _2318) * (_2323 + (-1.0))) + 1.0;
    float _2335 = exp2(log2(1.0 - (isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0)))) * 5.0);
    float _2336 = 0.959999978542327880859375 - _1091;
    float _2338 = 0.959999978542327880859375 - _1092;
    float _2339 = 0.959999978542327880859375 - _1093;
    float _2346 = 1.0 - _2299;
    float _2357 = (0.5 / (((_2314 * ((_2313 * _2346) + _2299)) + 9.9999999392252902907785028219223e-09) + (((_2314 * _2346) + _2299) * _2313))) * _2313;
    float _4493 = isnan(0.0) ? _2357 : (isnan(_2357) ? 0.0 : max(_2357, 0.0));
    float _2359 = (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0))) * (_2323 / ((_2327 * _2327) * 3.141590118408203125));
    uint _2370 = _2149 + 9u;
    float _2381 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2186].w)) * _948) * 0.949999988079071044921875);
    float _2382 = _2381 * _2381;
    float _2383 = cbLight._m0[_2186].x + _1024;
    float _2384 = cbLight._m0[_2186].y + _1025;
    float _2385 = cbLight._m0[_2186].z + _1026;
    float _2389 = inversesqrt(dot(vec3(_2383, _2384, _2385), vec3(_2383, _2384, _2385)));
    float _2390 = _2389 * _2383;
    float _2391 = _2389 * _2384;
    float _2392 = _2389 * _2385;
    float _2393 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2186].xyz));
    float _4504 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2396 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _2397 = dot(vec3(_945, _946, _947), vec3(_2390, _2391, _2392));
    float _4515 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    float _2400 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
    float _2401 = dot(vec3(cbLight._m0[_2186].xyz), vec3(_2390, _2391, _2392));
    float _4526 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
    float _2405 = _2382 * _2382;
    float _2409 = ((_2400 * _2400) * (_2405 + (-1.0))) + 1.0;
    float _2416 = exp2(log2(1.0 - (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0)))) * 5.0);
    float _2423 = 1.0 - _2382;
    float _2433 = (0.5 / (((_2314 * ((_2396 * _2423) + _2382)) + 9.9999999392252902907785028219223e-09) + (((_2314 * _2423) + _2382) * _2396))) * _2396;
    float _4537 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _2435 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * (_2405 / ((_2409 * _2409) * 3.141590118408203125));
    float _2445 = (((((_2416 * _2336) + _1094) * cbLight._m0[_2370].x) * _2435) * _2172) + (((((_2335 * _2336) + _1094) * cbLight._m0[_2285].x) * _2359) * _2182);
    float _2446 = (((((_2416 * _2338) + _1096) * cbLight._m0[_2370].y) * _2435) * _2172) + (((((_2335 * _2338) + _1096) * cbLight._m0[_2285].y) * _2359) * _2182);
    float _2447 = (((((_2416 * _2339) + _1097) * cbLight._m0[_2370].z) * _2435) * _2172) + (((((_2335 * _2339) + _1097) * cbLight._m0[_2285].z) * _2359) * _2182);
    float _2509;
    float _2511;
    float _2513;
    if (_2222)
    {
        _2509 = _2445;
        _2511 = _2446;
        _2513 = _2447;
    }
    else
    {
        uint _2515 = _2149 + 2u;
        uint _2519 = _2149 + 10u;
        float _2533 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2515].w)) * _948) * 0.949999988079071044921875);
        float _2534 = _2533 * _2533;
        float _2535 = cbLight._m0[_2515].x + _1024;
        float _2536 = cbLight._m0[_2515].y + _1025;
        float _2537 = cbLight._m0[_2515].z + _1026;
        float _2541 = inversesqrt(dot(vec3(_2535, _2536, _2537), vec3(_2535, _2536, _2537)));
        float _2542 = _2541 * _2535;
        float _2543 = _2541 * _2536;
        float _2544 = _2541 * _2537;
        float _2545 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2515].xyz));
        float _4548 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
        float _2548 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
        float _2549 = dot(vec3(_945, _946, _947), vec3(_2542, _2543, _2544));
        float _4559 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
        float _2552 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
        float _2553 = dot(vec3(cbLight._m0[_2515].xyz), vec3(_2542, _2543, _2544));
        float _4570 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2557 = _2534 * _2534;
        float _2561 = ((_2552 * _2552) * (_2557 + (-1.0))) + 1.0;
        float _2568 = exp2(log2(1.0 - (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0)))) * 5.0);
        float _2575 = 1.0 - _2534;
        float _2585 = (0.5 / (((_2314 * ((_2548 * _2575) + _2534)) + 9.9999999392252902907785028219223e-09) + (((_2314 * _2575) + _2534) * _2548))) * _2548;
        float _4581 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2587 = (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0))) * (_2557 / ((_2561 * _2561) * 3.141590118408203125));
        float _2588 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2509 = (((((_2568 * _2336) + _1094) * cbLight._m0[_2519].x) * _2587) * _2588) + _2445;
        _2511 = (((((_2568 * _2338) + _1096) * cbLight._m0[_2519].y) * _2587) * _2588) + _2446;
        _2513 = (((((_2568 * _2339) + _1097) * cbLight._m0[_2519].z) * _2587) * _2588) + _2447;
    }
    float _2623;
    float _2625;
    float _2627;
    if (_2240)
    {
        _2623 = _2509;
        _2625 = _2511;
        _2627 = _2513;
    }
    else
    {
        uint _2634 = _2149 + 3u;
        uint _2638 = _2149 + 11u;
        float _2652 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2634].w)) * _948) * 0.949999988079071044921875);
        float _2653 = _2652 * _2652;
        float _2654 = cbLight._m0[_2634].x + _1024;
        float _2655 = cbLight._m0[_2634].y + _1025;
        float _2656 = cbLight._m0[_2634].z + _1026;
        float _2660 = inversesqrt(dot(vec3(_2654, _2655, _2656), vec3(_2654, _2655, _2656)));
        float _2661 = _2660 * _2654;
        float _2662 = _2660 * _2655;
        float _2663 = _2660 * _2656;
        float _2664 = dot(vec3(_945, _946, _947), vec3(cbLight._m0[_2634].xyz));
        float _4597 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
        float _2667 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
        float _2668 = dot(vec3(_945, _946, _947), vec3(_2661, _2662, _2663));
        float _4608 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
        float _2671 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _2672 = dot(vec3(cbLight._m0[_2634].xyz), vec3(_2661, _2662, _2663));
        float _4619 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0));
        float _2676 = _2653 * _2653;
        float _2680 = ((_2671 * _2671) * (_2676 + (-1.0))) + 1.0;
        float _2687 = exp2(log2(1.0 - (isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0)))) * 5.0);
        float _2694 = 1.0 - _2653;
        float _2704 = (0.5 / (((_2314 * ((_2667 * _2694) + _2653)) + 9.9999999392252902907785028219223e-09) + (((_2314 * _2694) + _2653) * _2667))) * _2667;
        float _4630 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2706 = (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_2676 / ((_2680 * _2680) * 3.141590118408203125));
        float _2707 = isnan(1.0) ? _2165 : (isnan(_2165) ? 1.0 : min(_2165, 1.0));
        _2623 = (((((_2687 * _2336) + _1094) * cbLight._m0[_2638].x) * _2706) * _2707) + _2509;
        _2625 = (((((_2687 * _2338) + _1096) * cbLight._m0[_2638].y) * _2706) * _2707) + _2511;
        _2627 = (((((_2687 * _2339) + _1097) * cbLight._m0[_2638].z) * _2706) * _2707) + _2513;
    }
    float _2842;
    float _2844;
    float _2846;
    float _2848;
    float _2850;
    float _2852;
    if (_2147.y == 0u)
    {
        float _2782 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2783 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2782;
        float _2784 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2782;
        float _2785 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2782;
        uvec4 _2797 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2798 = _2797.x;
        uint _2809 = uint((float(_2797.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1033) / _2798))) + floor(float(uint(cbSceneParam._m0[85u].x * _1032) / _2798)));
        float _2819 = (log2(_2785 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2820 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
        uint _2823 = uint(isnan(14.0) ? _2820 : (isnan(_2820) ? 14.0 : min(_2820, 14.0)));
        uvec4 _2828 = texelFetch(g_lightClusterGridBuffer, int(((_2823 << 2u) + (_2809 << 6u)) >> 2u));
        uint _2829 = _2828.x;
        uint _2830 = _2797.z;
        float _2930;
        float _2932;
        float _2934;
        float _2936;
        float _2938;
        float _2940;
        if (((((1u << ((_2830 >> 4u) & 15u)) + 4294967295u) & _2829) == 0u) || ((_2830 & 240u) == 0u))
        {
            _2930 = 0.0;
            _2932 = 0.0;
            _2934 = 0.0;
            _2936 = 0.0;
            _2938 = 0.0;
            _2940 = 0.0;
        }
        else
        {
            float _2931;
            float _2933;
            float _2935;
            float _2937;
            float _2939;
            float _2941;
            float _3074 = 0.0;
            float _3075 = 0.0;
            float _3076 = 0.0;
            float _3077 = 0.0;
            float _3078 = 0.0;
            float _3079 = 0.0;
            uint _3080 = 0u;
            uint _3089;
            bool _3090;
            for (;;)
            {
                _3089 = texelFetch(g_lightClassification, int((((_2823 << 5u) + (_2809 << 9u)) + (_3080 << 2u)) >> 2u)).x;
                _3090 = _3089 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3090)
                {
                    frontier_phi_61_pred = _3074;
                    frontier_phi_61_pred_1 = _3079;
                    frontier_phi_61_pred_2 = _3078;
                    frontier_phi_61_pred_3 = _3077;
                    frontier_phi_61_pred_4 = _3076;
                    frontier_phi_61_pred_5 = _3075;
                }
                else
                {
                    float _3198;
                    float _3199;
                    float _3200;
                    float _3201;
                    float _3202;
                    float _3203;
                    uint _3204;
                    _3198 = _3074;
                    _3199 = _3075;
                    _3200 = _3076;
                    _3201 = _3077;
                    _3202 = _3078;
                    _3203 = _3079;
                    _3204 = _3089;
                    float _3130;
                    float _3131;
                    float _3132;
                    float _3133;
                    float _3134;
                    float _3135;
                    for (;;)
                    {
                        uint _3208 = uint(findLSB(_3204)) + (_3080 << 5u);
                        uint _3205 = (_3204 + 4294967295u) & _3204;
                        uint _3210 = _3208 * 48u;
                        vec4 _3224 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3210)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 3u)).x));
                        uint _3230 = (_3208 * 48u) + 4u;
                        vec4 _3243 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3230)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 3u)).x));
                        uint _3249 = (_3208 * 48u) + 8u;
                        vec3 _3260 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3249)).x, texelFetch(g_PointLightRenderingBuffer, int(_3249 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3249 + 2u)).x));
                        float _3264 = _3224.x - _2783;
                        float _3265 = _3224.y - _2784;
                        float _3266 = _3224.z - _2785;
                        float _3267 = dot(vec3(_3264, _3265, _3266), vec3(_3264, _3265, _3266));
                        float _3270 = inversesqrt(_3267);
                        float _3271 = _3270 * _3264;
                        float _3272 = _3270 * _3265;
                        float _3273 = _3270 * _3266;
                        float _3274 = dot(vec3(_1051, _1054, _1057), vec3(_3271, _3272, _3273));
                        float _3279 = 1.0 - (_3267 * _3224.w);
                        float _4656 = isnan(0.0) ? _3279 : (isnan(_3279) ? 0.0 : max(_3279, 0.0));
                        float _3280 = isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0));
                        float _3281 = sqrt(_3267) * _3243.w;
                        float _3284 = 1.39999997615814208984375 / (_3281 + 1.39999997615814208984375);
                        float _3285 = _3284 * _3284;
                        float _3288 = ((1.0 - _3285) * _3274) + _3285;
                        float _3291 = _3281 * _3281;
                        float _3295 = ((isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0))) * _3280) / ((_3291 * 0.699999988079071044921875) + 1.0);
                        float _3299 = (-0.0) - _2783;
                        float _3300 = (-0.0) - _2784;
                        float _3301 = (-0.0) - _2785;
                        float _3305 = inversesqrt(dot(vec3(_3299, _3300, _3301), vec3(_3299, _3300, _3301)));
                        float _3306 = _3305 * _3299;
                        float _3307 = _3305 * _3300;
                        float _3308 = _3305 * _3301;
                        float _3316 = exp2(log2(1.0 / ((_3291 * 3.5) + 5.0)) * 0.25);
                        float _3317 = 1.0 - _1126;
                        float _3324 = sqrt(1.0 - ((1.0 - (_3317 * _3317)) * (1.0 - (_3316 * _3316))));
                        float _3325 = _3324 * _3324;
                        float _3326 = _3325 * _3325;
                        float _3327 = _3306 + _3271;
                        float _3328 = _3307 + _3272;
                        float _3329 = _3308 + _3273;
                        float _3333 = inversesqrt(dot(vec3(_3327, _3328, _3329), vec3(_3327, _3328, _3329)));
                        float _3337 = dot(vec3(_1051, _1054, _1057), vec3(_3306, _3307, _3308));
                        float _4672 = isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0));
                        float _3340 = isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0));
                        float _3341 = dot(vec3(_1051, _1054, _1057), vec3(_3333 * _3327, _3333 * _3328, _3333 * _3329));
                        float _4683 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0));
                        float _3344 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
                        float _3348 = ((_3344 * _3344) * (_3326 + (-1.0))) + 1.0;
                        float _3349 = _3284 * _3325;
                        float _3350 = _3349 * _3349;
                        float _3353 = ((1.0 - _3350) * _3274) + _3350;
                        float _4694 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0));
                        float _3354 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                        float _3355 = 1.0 - _3325;
                        float _3365 = (0.5 / (((_3354 * ((_3340 * _3355) + _3325)) + 9.9999999392252902907785028219223e-09) + (((_3354 * _3355) + _3325) * _3340))) * _3354;
                        float _4705 = isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : max(_3365, 0.0));
                        float _3376 = (((_3326 * 3.1415927410125732421875) * (isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0)))) / ((_3348 * _3348) * ((_3291 * 2.1991131305694580078125) + 3.141590118408203125))) * _3280;
                        _3133 = (_3295 * _3243.x) + _3201;
                        _3134 = (_3295 * _3243.y) + _3202;
                        _3135 = (_3295 * _3243.z) + _3203;
                        _3130 = (_3376 * _3260.x) + _3198;
                        _3131 = (_3376 * _3260.y) + _3199;
                        _3132 = (_3376 * _3260.z) + _3200;
                        if (_3205 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3198 = _3130;
                            _3199 = _3131;
                            _3200 = _3132;
                            _3201 = _3133;
                            _3202 = _3134;
                            _3203 = _3135;
                            _3204 = _3205;
                        }
                    }
                    frontier_phi_61_pred = _3130;
                    frontier_phi_61_pred_1 = _3135;
                    frontier_phi_61_pred_2 = _3134;
                    frontier_phi_61_pred_3 = _3133;
                    frontier_phi_61_pred_4 = _3132;
                    frontier_phi_61_pred_5 = _3131;
                }
                _2931 = frontier_phi_61_pred;
                _2941 = frontier_phi_61_pred_1;
                _2939 = frontier_phi_61_pred_2;
                _2937 = frontier_phi_61_pred_3;
                _2935 = frontier_phi_61_pred_4;
                _2933 = frontier_phi_61_pred_5;
                uint _3081 = _3080 + 1u;
                if (_3081 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3074 = _2931;
                    _3075 = _2933;
                    _3076 = _2935;
                    _3077 = _2937;
                    _3078 = _2939;
                    _3079 = _2941;
                    _3080 = _3081;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2930 = _2931;
            _2932 = _2933;
            _2934 = _2935;
            _2936 = _2937;
            _2938 = _2939;
            _2940 = _2941;
        }
        uvec4 _2944 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2945 = _2944.z;
        uint _2947 = (_2945 >> 8u) & 15u;
        float _3042;
        float _3044;
        float _3046;
        float _3048;
        float _3050;
        float _3052;
        if (((4294967295u << _2947) & _2829) == 0u)
        {
            _3042 = _2930;
            _3044 = _2932;
            _3046 = _2934;
            _3048 = _2936;
            _3050 = _2938;
            _3052 = _2940;
        }
        else
        {
            float _3067 = inversesqrt(dot(vec3(_2783, _2784, _2785), vec3(_2783, _2784, _2785)));
            float _3068 = _3067 * _2783;
            float _3069 = _3067 * _2784;
            float _3070 = _3067 * _2785;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2947 < ((_2945 >> 12u) & 15u))
            {
                float _3043;
                float _3045;
                float _3047;
                float _3049;
                float _3051;
                float _3053;
                float _3181 = _2930;
                float _3182 = _2932;
                float _3183 = _2934;
                float _3184 = _2936;
                float _3185 = _2938;
                float _3186 = _2940;
                uint _3187 = _2947;
                uint _3196;
                bool _3197;
                for (;;)
                {
                    _3196 = texelFetch(g_lightClassification, int((((_2823 << 5u) + (_2809 << 9u)) + (_3187 << 2u)) >> 2u)).x;
                    _3197 = _3196 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3197)
                    {
                        frontier_phi_67_pred = _3184;
                        frontier_phi_67_pred_1 = _3185;
                        frontier_phi_67_pred_2 = _3186;
                        frontier_phi_67_pred_3 = _3183;
                        frontier_phi_67_pred_4 = _3182;
                        frontier_phi_67_pred_5 = _3181;
                    }
                    else
                    {
                        float _3381;
                        float _3382;
                        float _3383;
                        float _3384;
                        float _3385;
                        float _3386;
                        float _3674;
                        float _3675;
                        float _3676;
                        float _3677;
                        float _3678;
                        float _3679;
                        float _3394 = _3181;
                        float _3395 = _3182;
                        float _3396 = _3183;
                        float _3397 = _3184;
                        float _3398 = _3185;
                        float _3399 = _3186;
                        uint _3400 = _3196;
                        uint _3401;
                        vec4 _3426;
                        float _3427;
                        vec4 _3442;
                        vec3 _3454;
                        vec4 _3469;
                        vec4 _3484;
                        float _3530;
                        bool _3531;
                        for (;;)
                        {
                            uint _3411 = ((_3187 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3400));
                            _3401 = (_3400 + 4294967295u) & _3400;
                            uint _3413 = _3411 * 40u;
                            _3426 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3413)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 3u)).x));
                            _3427 = _3426.w;
                            uint _3429 = (_3411 * 40u) + 4u;
                            _3442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 3u)).x));
                            uint _3444 = (_3411 * 40u) + 8u;
                            _3454 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3444)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3444 + 2u)).x));
                            uint _3456 = (_3411 * 40u) + 16u;
                            _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            uint _3471 = (_3411 * 40u) + 20u;
                            _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            uint _3486 = (_3411 * 40u) + 24u;
                            vec4 _3499 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 3u)).x));
                            uint _3505 = (_3411 * 40u) + 28u;
                            vec4 _3518 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3505)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 3u)).x));
                            _3530 = fma(_2785, _3518.z, fma(_2784, _3518.y, _3518.x * _2783)) + _3518.w;
                            _3531 = !((fma(_2785, _3499.z, fma(_2784, _3499.y, _3499.x * _2783)) + _3499.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3531)
                            {
                                float _3558 = _3426.x - _2783;
                                float _3559 = _3426.y - _2784;
                                float _3560 = _3426.z - _2785;
                                float _3561 = dot(vec3(_3558, _3559, _3560), vec3(_3558, _3559, _3560));
                                float _3564 = inversesqrt(_3561);
                                float _3565 = _3564 * _3558;
                                float _3566 = _3564 * _3559;
                                float _3567 = _3564 * _3560;
                                float _3571 = 1.0 - (_3561 / (_3427 * _3427));
                                float _4716 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                                float _3572 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                                float _3576 = sqrt(_3561) * _3442.w;
                                float _3578 = 1.39999997615814208984375 / (_3576 + 1.39999997615814208984375);
                                float _3579 = _3578 * _3578;
                                float _3582 = ((1.0 - _3579) * dot(vec3(_3565, _3566, _3567), vec3(_1051, _1054, _1057))) + _3579;
                                float _3585 = _3576 * _3576;
                                float _3589 = (fma(_2785, _3469.z, fma(_2784, _3469.y, _3469.x * _2783)) + _3469.w) / _3530;
                                float _3590 = (fma(_2785, _3484.z, fma(_2784, _3484.y, _3484.x * _2783)) + _3484.w) / _3530;
                                float _3594 = 1.0 - dot(vec2(_3589, _3590), vec2(_3589, _3590));
                                float _4732 = isnan(0.0) ? _3594 : (isnan(_3594) ? 0.0 : max(_3594, 0.0));
                                float _3595 = isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0));
                                float _3596 = _3595 * (((isnan(0.0) ? _3582 : (isnan(_3582) ? 0.0 : max(_3582, 0.0))) * _3572) / ((_3585 * 0.699999988079071044921875) + 1.0));
                                float _3608 = exp2(log2(1.0 / ((_3585 * 3.5) + 5.0)) * 0.25);
                                float _3609 = 1.0 - _1126;
                                float _3616 = sqrt(1.0 - ((1.0 - (_3609 * _3609)) * (1.0 - (_3608 * _3608))));
                                float _3617 = _3616 * _3616;
                                float _3618 = _3617 * _3617;
                                float _3619 = _3565 - _3068;
                                float _3620 = _3566 - _3069;
                                float _3621 = _3567 - _3070;
                                float _3625 = inversesqrt(dot(vec3(_3619, _3620, _3621), vec3(_3619, _3620, _3621)));
                                float _3629 = dot(vec3(_1051, _1054, _1057), vec3((-0.0) - _3068, (-0.0) - _3069, (-0.0) - _3070));
                                float _4743 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                                float _3632 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
                                float _3633 = dot(vec3(_1051, _1054, _1057), vec3(_3625 * _3619, _3625 * _3620, _3625 * _3621));
                                float _4754 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                                float _3636 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                                float _3640 = ((_3636 * _3636) * (_3618 + (-1.0))) + 1.0;
                                float _3641 = _3578 * _3617;
                                float _3642 = _3641 * _3641;
                                float _3648 = ((1.0 - _3642) * dot(vec3(_1051, _1054, _1057), vec3(_3565, _3566, _3567))) + _3642;
                                float _4765 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3649 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3650 = 1.0 - _3617;
                                float _3660 = (0.5 / (((_3649 * ((_3632 * _3650) + _3617)) + 9.9999999392252902907785028219223e-09) + (((_3649 * _3650) + _3617) * _3632))) * _3649;
                                float _4776 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3670 = (_3595 * _3572) * (((_3618 * 3.1415927410125732421875) * (isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0)))) / ((_3640 * _3640) * ((_3585 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3670 * _3454.x;
                                frontier_phi_73_pred_1 = _3670 * _3454.y;
                                frontier_phi_73_pred_2 = _3596 * _3442.z;
                                frontier_phi_73_pred_3 = _3596 * _3442.y;
                                frontier_phi_73_pred_4 = _3596 * _3442.x;
                                frontier_phi_73_pred_5 = _3670 * _3454.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3674 = frontier_phi_73_pred;
                            _3675 = frontier_phi_73_pred_1;
                            _3679 = frontier_phi_73_pred_2;
                            _3678 = frontier_phi_73_pred_3;
                            _3677 = frontier_phi_73_pred_4;
                            _3676 = frontier_phi_73_pred_5;
                            _3384 = _3677 + _3397;
                            _3385 = _3678 + _3398;
                            _3386 = _3679 + _3399;
                            _3381 = _3674 + _3394;
                            _3382 = _3675 + _3395;
                            _3383 = _3676 + _3396;
                            if (_3401 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3394 = _3381;
                                _3395 = _3382;
                                _3396 = _3383;
                                _3397 = _3384;
                                _3398 = _3385;
                                _3399 = _3386;
                                _3400 = _3401;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3384;
                        frontier_phi_67_pred_1 = _3385;
                        frontier_phi_67_pred_2 = _3386;
                        frontier_phi_67_pred_3 = _3383;
                        frontier_phi_67_pred_4 = _3382;
                        frontier_phi_67_pred_5 = _3381;
                    }
                    _3049 = frontier_phi_67_pred;
                    _3051 = frontier_phi_67_pred_1;
                    _3053 = frontier_phi_67_pred_2;
                    _3047 = frontier_phi_67_pred_3;
                    _3045 = frontier_phi_67_pred_4;
                    _3043 = frontier_phi_67_pred_5;
                    uint _3188 = _3187 + 1u;
                    if (_3188 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3181 = _3043;
                        _3182 = _3045;
                        _3183 = _3047;
                        _3184 = _3049;
                        _3185 = _3051;
                        _3186 = _3053;
                        _3187 = _3188;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3051;
                frontier_phi_55_56_ladder_1 = _3053;
                frontier_phi_55_56_ladder_2 = _3049;
                frontier_phi_55_56_ladder_3 = _3047;
                frontier_phi_55_56_ladder_4 = _3045;
                frontier_phi_55_56_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_55_56_ladder = _2938;
                frontier_phi_55_56_ladder_1 = _2940;
                frontier_phi_55_56_ladder_2 = _2936;
                frontier_phi_55_56_ladder_3 = _2934;
                frontier_phi_55_56_ladder_4 = _2932;
                frontier_phi_55_56_ladder_5 = _2930;
            }
            _3042 = frontier_phi_55_56_ladder_5;
            _3044 = frontier_phi_55_56_ladder_4;
            _3046 = frontier_phi_55_56_ladder_3;
            _3048 = frontier_phi_55_56_ladder_2;
            _3050 = frontier_phi_55_56_ladder;
            _3052 = frontier_phi_55_56_ladder_1;
        }
        float _3057 = isnan(1.0) ? _1110 : (isnan(_1110) ? 1.0 : min(_1110, 1.0));
        _2842 = (_3057 * _3048) + _2278;
        _2844 = (_3057 * _3050) + _2280;
        _2846 = (_3057 * _3052) + _2282;
        _2848 = ((_3042 * _1094) * _3057) + _2623;
        _2850 = ((_3044 * _1096) * _3057) + _2625;
        _2852 = ((_3046 * _1097) * _3057) + _2627;
    }
    else
    {
        _2842 = _2278;
        _2844 = _2280;
        _2846 = _2282;
        _2848 = _2623;
        _2850 = _2625;
        _2852 = _2627;
    }
    float _4792 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _4803 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _4814 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    uint _2872 = _283 + 6u;
    float _2880 = _1032 / cbSceneParam._m0[86u].x;
    float _2881 = _1033 / cbSceneParam._m0[86u].y;
    vec4 _2895 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2880, _2881, (log2((isnan(cbSceneParam._m0[77u].w) ? _967 : (isnan(_967) ? cbSceneParam._m0[77u].w : min(_967, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2897 = _2895.x;
    float _2898 = _2895.y;
    float _2899 = _2895.z;
    float _2900 = _2895.w;
    float _2992;
    float _2994;
    float _2996;
    float _2998;
    if (_967 > cbSceneParam._m0[78u].w)
    {
        float _2955 = isnan(_967) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _967 : min(cbSceneParam._m0[80u].w, _967));
        float _2956 = _2955 / _967;
        float _2967 = _2956 * _1017;
        float _2968 = _1018 * _2956;
        float _2969 = (-0.0) - _2968;
        float _2970 = _2956 * _1019;
        float _2972 = (cbSceneParam._m0[77u].w * _2969) / _2955;
        float _2973 = _2972 + cbSceneParam._m0[79u].w;
        float _2974 = cbSceneParam._m0[79u].w - _2968;
        float _2980 = sqrt(((_2967 * _2967) + (_2968 * _2968)) + (_2970 * _2970));
        float _2983 = (1.0 - (cbSceneParam._m0[77u].w / _2955)) * _2980;
        float _2988 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2990 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3143;
        if (abs((_2969 - _2972) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3143 = ((((_2973 > 0.0) ? exp2(_2988 * _2973) : (2.0 - exp2(_2990 * _2973))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2983;
        }
        else
        {
            float _3103 = 1.0 / cbSceneParam._m0[80u].x;
            float _3104 = isnan(_2974) ? _2973 : (isnan(_2973) ? _2974 : max(_2973, _2974));
            float _3105 = isnan(_2974) ? _2973 : (isnan(_2973) ? _2974 : min(_2973, _2974));
            float _3114 = isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : min(_3104, 0.0));
            float _3115 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : min(_3105, 0.0));
            _3143 = ((abs(_2980 / _2969) * cbSceneParam._m0[80u].y) * ((((_3114 - _3115) * 2.0) - ((exp2(_2988 * (isnan(0.0) ? _3104 : (isnan(_3104) ? 0.0 : max(_3104, 0.0)))) - exp2(_2988 * (isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0))))) * _3103)) - ((exp2(_2990 * _3114) - exp2(_2990 * _3115)) * _3103))) + (_2983 * cbSceneParam._m0[80u].z);
        }
        vec4 _3145 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2880, _2881, 1.0), 0.0);
        float _3154 = exp2((_3143 * (-1.44269502162933349609375)) * (1.0 - _3145.w));
        float _3155 = log2(_3154);
        float _3171 = log2(_2900);
        _2992 = (exp2(_3171 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].x)) * _3145.x) / cbSceneParam._m0[78u].x)) + _2897;
        _2994 = (exp2(_3171 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].y)) * _3145.y) / cbSceneParam._m0[78u].y)) + _2898;
        _2996 = (exp2(_3171 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3155 * cbSceneParam._m0[78u].z)) * _3145.z) / cbSceneParam._m0[78u].z)) + _2899;
        _2998 = _3154 * _2900;
    }
    else
    {
        _2992 = _2897;
        _2994 = _2898;
        _2996 = _2899;
        _2998 = _2900;
    }
    float _3010 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3011 = _3010 == 3.0;
    float _3012 = log2(_2998);
    float _3019 = exp2(_3012 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0))) * (_2842 + ((isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0))) * _1110))) + ((_2848 + ((isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3020 = exp2(_3012 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0))) * (_2844 + ((isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0))) * _1110))) + ((_2850 + ((isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3021 = exp2(_3012 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0))) * (_2846 + ((isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))) * _1110))) + ((_2852 + ((isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3030 = (_3010 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3030 * (_3011 ? _3019 : (_3019 + (cbSceneParam._m0[72u].w * _2992)));
    SV_Target.y = _3030 * (_3011 ? _3020 : (_3020 + (cbSceneParam._m0[72u].w * _2994)));
    SV_Target.z = _3030 * (_3011 ? _3021 : (_3021 + (cbSceneParam._m0[72u].w * _2996)));
    SV_Target.w = cbInstanceData._m0[_2872].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2872].w;
}


