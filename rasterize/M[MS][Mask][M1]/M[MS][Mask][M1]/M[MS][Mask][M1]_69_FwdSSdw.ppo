#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1559;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _246 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _247 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _248 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _254 = inversesqrt(dot(vec3(_246, _247, _248), vec3(_246, _247, _248)));
    float _261 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _268 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _283 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3909 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _3920 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _3931 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    uint _293 = uint(roundEven(NORMAL.w)) * 13u;
    uint _298 = _293 + 1u;
    uint _302 = _293 + 2u;
    float _311 = sqrt(((cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x)) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x));
    float _312 = _311 * TEXCOORD.z;
    float _313 = _311 * TEXCOORD.w;
    vec4 _326 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _312) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _313) + cbTextureTilingScale._m0[13u].w));
    vec4 _349 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _375 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _380 = _375.x * cbMtdParam._m0[11u].x;
    float _381 = _375.y * cbMtdParam._m0[11u].y;
    float _382 = _375.z * cbMtdParam._m0[11u].z;
    vec4 _401 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _312) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _313) + cbTextureTilingScale._m0[5u].w));
    vec4 _420 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _452 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _454 = _452.x;
    float _466 = dot(vec4(_454, _452.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _483 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _420.x) * 2.0) - ((((_454 - _466) * cbMtdParam._m0[23u].w) + _466) * cbMtdParam._m0[22u].w))) + 1.0;
    float _3942 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _484 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _491 = (_484 * ((_401.x * cbMtdParam._m0[12u].x) - _380)) + _380;
    float _492 = (_484 * ((_401.y * cbMtdParam._m0[12u].y) - _381)) + _381;
    float _493 = (_484 * ((_401.z * cbMtdParam._m0[12u].z) - _382)) + _382;
    vec4 _510 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _312) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _313) + cbTextureTilingScale._m0[3u].w));
    vec4 _530 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _532 = _530.x;
    float _542 = dot(vec4(_532, _530.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _556 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _420.y) * 2.0) - ((((_532 - _542) * cbMtdParam._m0[23u].w) + _542) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3953 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _557 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _567 = (_349.x * cbMtdParam._m0[9u].x) * ((_557 * ((_510.x * cbMtdParam._m0[13u].x) - _491)) + _491);
    float _568 = (_349.y * cbMtdParam._m0[9u].y) * ((_557 * ((_510.y * cbMtdParam._m0[13u].y) - _492)) + _492);
    float _569 = (_349.z * cbMtdParam._m0[9u].z) * ((_557 * ((_510.z * cbMtdParam._m0[13u].z) - _493)) + _493);
    float _573 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _326.x) * _567;
    float _576 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _326.y) * _568;
    float _579 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _326.z) * _569;
    float _587 = (((_567 - _573) * (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0)))) + _573) * 4.55000019073486328125;
    float _589 = (((_568 - _576) * (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0)))) + _576) * 4.55000019073486328125;
    float _591 = (((_569 - _579) * (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0)))) + _579) * 4.55000019073486328125;
    vec4 _608 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _312) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _313) + cbTextureTilingScale._m0[20u].w));
    vec4 _631 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _312) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _313) + cbTextureTilingScale._m0[4u].w));
    vec4 _648 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _650 = _648.x;
    float _651 = _648.y;
    float _652 = _648.z;
    float _659 = ((_631.x - _650) * _484) + _650;
    float _660 = ((_631.y - _651) * _484) + _651;
    float _661 = ((_631.z - _652) * _484) + _652;
    vec4 _673 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _312) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _313) + cbTextureTilingScale._m0[2u].w));
    float _686 = ((_673.z - _661) * _557) + _661;
    float _689 = ((((_673.x - _659) * _557) + _659) * 2.0) + (-1.0);
    float _690 = ((((_673.y - _660) * _557) + _660) * 2.0) + (-1.0);
    float _691 = dot(vec2(_689, _690), vec2(_689, _690));
    float _3964 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _696 = sqrt(1.0 - (isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0))));
    vec4 _710 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _735 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _312) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _313) + cbTextureTilingScale._m0[11u].w));
    float _737 = _735.x;
    float _738 = 1.0 - _737;
    float _747 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _750 = ((isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : min(_747, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _759 = (_750 - ((((((_737 - _738) * cbMtdParam._m0[24u].z) + _738) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _750))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3985 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _760 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _767 = (_760 * (cbMtdParam._m0[17u].x - _587)) + _587;
    float _768 = (_760 * (cbMtdParam._m0[17u].y - _589)) + _589;
    float _769 = (_760 * (cbMtdParam._m0[17u].z - _591)) + _591;
    vec4 _781 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _312) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _313) + cbTextureTilingScale._m0[19u].w));
    float _783 = _781.x;
    float _784 = 1.0 - _783;
    float _809 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_783 - _784) * cbMtdParam._m0[24u].w) + _784) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _3996 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _810 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    float _818 = ((((cbMtdParam._m0[10u].x - _767) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _810) + _767;
    float _819 = ((((cbMtdParam._m0[10u].y - _768) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _810) + _768;
    float _820 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _769)) * _810) + _769;
    vec4 _846 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _848 = _846.x;
    float _865 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _312) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _313) + cbTextureTilingScale._m0[9u].w)).x - _848) * _484) + _848;
    float _882 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _312) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _313) + cbTextureTilingScale._m0[21u].w)).x - _865) * _557) + _865;
    float _886 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _882) * cbMtdParam._m0[19u].z) + _882;
    float _888 = _886 - (_886 * _760);
    float _890 = _888 - (_888 * _810);
    float _895 = (((_608.z - _686) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _686;
    float _899 = ((_710.z - _895) * cbMtdParam._m0[19u].w) + _895;
    vec4 _913 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _312) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _313) + cbTextureTilingScale._m0[15u].w));
    float _920 = (_913.x * 2.0) + (-1.0);
    float _921 = (_913.y * 2.0) + (-1.0);
    float _922 = dot(vec2(_920, _921), vec2(_920, _921));
    float _4007 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _930 = (_760 * (_913.z - _899)) + _899;
    float _933 = ((cbMtdParam._m0[23u].x - _930) * _810) + _930;
    vec4 _954 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _312) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _313) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _960 = (_954.x * 2.0) + (-1.0);
    float _961 = (_954.y * 2.0) + (-1.0);
    float _962 = dot(vec2(_960, _961), vec2(_960, _961));
    float _4018 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _976 = (_689 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_608.x * 2.0) + (-1.0)))) + (((_710.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _977 = (_690 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_608.y * 2.0) + (-1.0)))) + (((_710.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _989 = (((_920 - _976) + (cbMtdParam._m0[21u].x * _976)) * _760) + _976;
    float _990 = (((_921 - _977) + (cbMtdParam._m0[21u].x * _977)) * _760) + _977;
    float _991 = (_760 * (sqrt(1.0 - (isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0)))) - _696)) + _696;
    float _1002 = (((_960 - _989) + (_989 * cbMtdParam._m0[22u].z)) * _810) + _989;
    float _1003 = (((_961 - _990) + (_990 * cbMtdParam._m0[22u].z)) * _810) + _990;
    float _1004 = ((sqrt(1.0 - (isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0)))) - _991) * _810) + _991;
    float _1006 = cbMtdParam._m0[22u].x + _710.w;
    float _1009 = fma(_1004, _261 * NORMAL.x, fma(_1003, _268 * TANGENT.x, (_254 * _246) * _1002));
    float _1012 = fma(_1004, _261 * NORMAL.y, fma(_1003, _268 * TANGENT.y, (_254 * _247) * _1002));
    float _1015 = fma(_1004, _261 * NORMAL.z, fma(_1003, _268 * TANGENT.z, (_254 * _248) * _1002));
    float _1019 = inversesqrt(dot(vec3(_1009, _1012, _1015), vec3(_1009, _1012, _1015)));
    float _1020 = _1019 * _1009;
    float _1021 = _1019 * _1012;
    float _1022 = _1019 * _1015;
    float _4029 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _1023 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
    float _4040 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _4051 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _4062 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _4073 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _4084 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _1028 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _1042 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1082 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1092 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1082);
    float _1093 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1082);
    float _1094 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1082);
    float _1098 = inversesqrt(dot(vec3(_1092, _1093, _1094), vec3(_1092, _1093, _1094)));
    float _1099 = _1092 * _1098;
    float _1100 = _1093 * _1098;
    float _1101 = _1094 * _1098;
    float _1107 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1108 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1126 = fma(_1022, cbSceneParam._m0[5u].z, fma(_1021, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1020));
    float _1129 = fma(_1022, cbSceneParam._m0[6u].z, fma(_1021, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1020));
    float _1132 = fma(_1022, cbSceneParam._m0[7u].z, fma(_1021, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1020));
    uint _1146 = (_293 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1152 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0)))) * cbInstanceData._m0[_1146].x;
    float _1153 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0)))) * cbInstanceData._m0[_1146].y;
    float _1154 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0)))) * cbInstanceData._m0[_1146].z;
    float _4095 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
    float _1155 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _4106 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    float _1156 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
    float _4117 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    float _1157 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _1158 = 1.0 - _1028;
    float _1159 = _1155 * _1158;
    float _1160 = _1156 * _1158;
    float _1161 = _1157 * _1158;
    float _1166 = (_1155 + (-0.039999999105930328369140625)) * _1028;
    float _1167 = (_1156 + (-0.039999999105930328369140625)) * _1028;
    float _1168 = (_1157 + (-0.039999999105930328369140625)) * _1028;
    float _1169 = _1166 + 0.039999999105930328369140625;
    float _1171 = _1167 + 0.039999999105930328369140625;
    float _1172 = _1168 + 0.039999999105930328369140625;
    vec4 _1181 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1107, cbSceneParam._m0[86u].y * _1108));
    float _1185 = ((isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * TEXCOORD_5.w) * _1181.x;
    float _1186 = dot(vec3(_1020, _1021, _1022), vec3(_1099, _1100, _1101));
    float _1189 = _1186 * 2.0;
    float _1193 = (_1189 * _1020) - _1099;
    float _1194 = (_1189 * _1021) - _1100;
    float _1195 = (_1189 * _1022) - _1101;
    float _1199 = abs(dot(vec3(_1099, _1100, _1101), vec3(_1020, _1021, _1022)));
    float _4128 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1201 = sqrt(_1023);
    float _1214 = exp2((_1201 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1201 * 3.0));
    float _1220 = (1.0 - _1214) * ((_1201 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1221 = _1214 * _1201;
    float _1249 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1253 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1257 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1558;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1283 = fma(_1257, cbModelParam._m0[26u].z, fma(_1253, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1249));
        float _1287 = fma(_1257, cbModelParam._m0[27u].z, fma(_1253, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1249));
        float _1291 = fma(_1257, cbModelParam._m0[28u].z, fma(_1253, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1249));
        float _1316 = _1249 + _1020;
        float _1317 = _1253 + _1021;
        float _1318 = _1257 + _1022;
        float _1328 = fma(_1318, cbModelParam._m0[26u].z, fma(_1317, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1316)) - _1283;
        float _1329 = fma(_1318, cbModelParam._m0[27u].z, fma(_1317, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1316)) - _1287;
        float _1330 = fma(_1318, cbModelParam._m0[28u].z, fma(_1317, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1316)) - _1291;
        float _1334 = inversesqrt(dot(vec3(_1328, _1329, _1330), vec3(_1328, _1329, _1330)));
        float _1347 = ((_1334 * _1328) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1283 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1348 = ((_1334 * _1329) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1287 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1349 = ((_1334 * _1330) / cbModelParam._m0[34u].z) + ((((((_1291 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1352 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1347, _1348, _1349), 0.0);
        vec4 _1359 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1347, _1348, _1349), 0.0);
        vec4 _1366 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1347, _1348, _1349), 0.0);
        vec4 _1373 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1347, _1348, _1349), 0.0);
        float _1386 = exp2((_1352.w + (-0.5)) * 20.0) * 2.0;
        float _1387 = _1386 * (_1352.x + (-0.5));
        float _1388 = _1386 * (_1352.y + (-0.5));
        float _1389 = _1386 * (_1352.z + (-0.5));
        float _1396 = exp2((_1359.w + (-0.5)) * 20.0) * 2.0;
        float _1397 = _1396 * (_1359.x + (-0.5));
        float _1398 = _1396 * (_1359.y + (-0.5));
        float _1399 = _1396 * (_1359.z + (-0.5));
        float _1406 = exp2((_1366.w + (-0.5)) * 20.0) * 2.0;
        float _1407 = _1406 * (_1366.x + (-0.5));
        float _1408 = _1406 * (_1366.y + (-0.5));
        float _1409 = _1406 * (_1366.z + (-0.5));
        float _1416 = exp2((_1373.w + (-0.5)) * 20.0) * 2.0;
        float _1417 = _1416 * (_1373.x + (-0.5));
        float _1418 = _1416 * (_1373.y + (-0.5));
        float _1419 = _1416 * (_1373.z + (-0.5));
        float _1420 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1421 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1422 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1423 = _1387 * 0.5;
        float _1424 = _1397 * 0.5;
        float _1425 = _1407 * 0.5;
        float _1426 = dot(vec3(_1423, _1424, _1425), vec3(_1423, _1424, _1425));
        float _1431 = (_1426 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1426);
        float _1440 = (dot(vec3(_1020, _1021, _1022), vec3(_1431 * _1423, _1431 * _1424, _1431 * _1425)) + 1.0) * 0.5;
        float _4154 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1450 = sqrt(((_1424 * _1424) + (_1423 * _1423)) + (_1425 * _1425)) / (_1420 + 9.9999997473787516355514526367188e-06);
        float _4165 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1452 = _1451 * 2.0;
        float _1456 = (1.0 - _1451) / (_1451 + 1.0);
        float _4176 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1457 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
        float _1466 = ((((1.0 - _1457) * (_1452 + 2.0)) * exp2(log2(isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0))) * (_1452 + 1.0))) + _1457) * _1420;
        float _1467 = _1388 * 0.5;
        float _1468 = _1398 * 0.5;
        float _1469 = _1408 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1483 = (dot(vec3(_1020, _1021, _1022), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _4187 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1492 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1421 + 9.9999997473787516355514526367188e-06);
        float _4198 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1494 = _1493 * 2.0;
        float _1498 = (1.0 - _1493) / (_1493 + 1.0);
        float _4209 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1499 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1508 = ((((1.0 - _1499) * (_1494 + 2.0)) * exp2(log2(isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0))) * (_1494 + 1.0))) + _1499) * _1421;
        float _1509 = _1389 * 0.5;
        float _1510 = _1399 * 0.5;
        float _1511 = _1409 * 0.5;
        float _1512 = dot(vec3(_1509, _1510, _1511), vec3(_1509, _1510, _1511));
        float _1517 = (_1512 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1512);
        float _1525 = (dot(vec3(_1020, _1021, _1022), vec3(_1517 * _1509, _1517 * _1510, _1517 * _1511)) + 1.0) * 0.5;
        float _4220 = isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0));
        float _1534 = sqrt(((_1510 * _1510) + (_1509 * _1509)) + (_1511 * _1511)) / (_1422 + 9.9999997473787516355514526367188e-06);
        float _4231 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1535 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1536 = _1535 * 2.0;
        float _1540 = (1.0 - _1535) / (_1535 + 1.0);
        float _4242 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1541 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1550 = ((((1.0 - _1541) * (_1536 + 2.0)) * exp2(log2(isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * (_1536 + 1.0))) + _1541) * _1422;
        _1558 = _1389;
        _1560 = _1388;
        _1561 = _1387;
        _1562 = _1399;
        _1563 = _1398;
        _1564 = _1397;
        _1565 = _1409;
        _1566 = _1408;
        _1567 = _1407;
        _1568 = _1422;
        _1569 = _1421;
        _1570 = _1420;
        _1571 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0)));
        _1572 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0)));
        _1573 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0)));
    }
    else
    {
        _1558 = _1559;
        _1560 = _1559;
        _1561 = _1559;
        _1562 = _1559;
        _1563 = _1559;
        _1564 = _1559;
        _1565 = _1559;
        _1566 = _1559;
        _1567 = _1559;
        _1568 = _1559;
        _1569 = _1559;
        _1570 = _1559;
        _1571 = 0.0;
        _1572 = 0.0;
        _1573 = 0.0;
    }
    float _1866;
    float _1867;
    float _1868;
    float _1869;
    float _1870;
    float _1871;
    float _1872;
    float _1873;
    float _1874;
    float _1875;
    float _1876;
    float _1877;
    float _1878;
    float _1879;
    float _1880;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1597 = fma(_1257, cbModelParam._m0[30u].z, fma(_1253, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1249));
        float _1601 = fma(_1257, cbModelParam._m0[31u].z, fma(_1253, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1249));
        float _1605 = fma(_1257, cbModelParam._m0[32u].z, fma(_1253, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1249));
        float _1628 = _1249 + _1020;
        float _1629 = _1253 + _1021;
        float _1630 = _1257 + _1022;
        float _1640 = fma(_1630, cbModelParam._m0[30u].z, fma(_1629, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1628)) - _1597;
        float _1641 = fma(_1630, cbModelParam._m0[31u].z, fma(_1629, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1628)) - _1601;
        float _1642 = fma(_1630, cbModelParam._m0[32u].z, fma(_1629, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1628)) - _1605;
        float _1646 = inversesqrt(dot(vec3(_1640, _1641, _1642), vec3(_1640, _1641, _1642)));
        float _1659 = ((_1646 * _1640) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1597 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1660 = ((_1646 * _1641) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1601 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1661 = ((_1646 * _1642) / cbModelParam._m0[35u].z) + ((((((_1605 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1663 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1659, _1660, _1661), 0.0);
        vec4 _1670 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1659, _1660, _1661), 0.0);
        vec4 _1677 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1659, _1660, _1661), 0.0);
        vec4 _1684 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1659, _1660, _1661), 0.0);
        float _1696 = exp2((_1663.w + (-0.5)) * 20.0) * 2.0;
        float _1697 = _1696 * (_1663.x + (-0.5));
        float _1698 = _1696 * (_1663.y + (-0.5));
        float _1699 = _1696 * (_1663.z + (-0.5));
        float _1706 = exp2((_1670.w + (-0.5)) * 20.0) * 2.0;
        float _1707 = _1706 * (_1670.x + (-0.5));
        float _1708 = _1706 * (_1670.y + (-0.5));
        float _1709 = _1706 * (_1670.z + (-0.5));
        float _1716 = exp2((_1677.w + (-0.5)) * 20.0) * 2.0;
        float _1717 = _1716 * (_1677.x + (-0.5));
        float _1718 = _1716 * (_1677.y + (-0.5));
        float _1719 = _1716 * (_1677.z + (-0.5));
        float _1726 = exp2((_1684.w + (-0.5)) * 20.0) * 2.0;
        float _1727 = _1726 * (_1684.x + (-0.5));
        float _1728 = _1726 * (_1684.y + (-0.5));
        float _1729 = _1726 * (_1684.z + (-0.5));
        float _1730 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1731 = isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0));
        float _1732 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1733 = _1697 * 0.5;
        float _1734 = _1707 * 0.5;
        float _1735 = _1717 * 0.5;
        float _1736 = dot(vec3(_1733, _1734, _1735), vec3(_1733, _1734, _1735));
        float _1741 = (_1736 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1736);
        float _1749 = (dot(vec3(_1020, _1021, _1022), vec3(_1741 * _1733, _1741 * _1734, _1741 * _1735)) + 1.0) * 0.5;
        float _4283 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1758 = sqrt(((_1734 * _1734) + (_1733 * _1733)) + (_1735 * _1735)) / (_1730 + 9.9999997473787516355514526367188e-06);
        float _4294 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1759 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
        float _1760 = _1759 * 2.0;
        float _1764 = (1.0 - _1759) / (_1759 + 1.0);
        float _4305 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1765 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
        float _1774 = ((((1.0 - _1765) * (_1760 + 2.0)) * exp2(log2(isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0))) * (_1760 + 1.0))) + _1765) * _1730;
        float _1775 = _1698 * 0.5;
        float _1776 = _1708 * 0.5;
        float _1777 = _1718 * 0.5;
        float _1778 = dot(vec3(_1775, _1776, _1777), vec3(_1775, _1776, _1777));
        float _1783 = (_1778 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1778);
        float _1791 = (dot(vec3(_1020, _1021, _1022), vec3(_1783 * _1775, _1783 * _1776, _1783 * _1777)) + 1.0) * 0.5;
        float _4316 = isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0));
        float _1800 = sqrt(((_1776 * _1776) + (_1775 * _1775)) + (_1777 * _1777)) / (_1731 + 9.9999997473787516355514526367188e-06);
        float _4327 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1801 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1802 = _1801 * 2.0;
        float _1806 = (1.0 - _1801) / (_1801 + 1.0);
        float _4338 = isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0));
        float _1807 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
        float _1816 = ((((1.0 - _1807) * (_1802 + 2.0)) * exp2(log2(isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0))) * (_1802 + 1.0))) + _1807) * _1731;
        float _1817 = _1699 * 0.5;
        float _1818 = _1709 * 0.5;
        float _1819 = _1719 * 0.5;
        float _1820 = dot(vec3(_1817, _1818, _1819), vec3(_1817, _1818, _1819));
        float _1825 = (_1820 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1820);
        float _1833 = (dot(vec3(_1020, _1021, _1022), vec3(_1825 * _1817, _1825 * _1818, _1825 * _1819)) + 1.0) * 0.5;
        float _4349 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
        float _1842 = sqrt(((_1818 * _1818) + (_1817 * _1817)) + (_1819 * _1819)) / (_1732 + 9.9999997473787516355514526367188e-06);
        float _4360 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1843 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1844 = _1843 * 2.0;
        float _1848 = (1.0 - _1843) / (_1843 + 1.0);
        float _4371 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
        float _1849 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1858 = ((((1.0 - _1849) * (_1844 + 2.0)) * exp2(log2(isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0))) * (_1844 + 1.0))) + _1849) * _1732;
        _1866 = _1699;
        _1867 = _1698;
        _1868 = _1697;
        _1869 = _1709;
        _1870 = _1708;
        _1871 = _1707;
        _1872 = _1719;
        _1873 = _1718;
        _1874 = _1717;
        _1875 = _1732;
        _1876 = _1731;
        _1877 = _1730;
        _1878 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0)));
        _1879 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0)));
        _1880 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0)));
    }
    else
    {
        _1866 = _1559;
        _1867 = _1559;
        _1868 = _1559;
        _1869 = _1559;
        _1870 = _1559;
        _1871 = _1559;
        _1872 = _1559;
        _1873 = _1559;
        _1874 = _1559;
        _1875 = _1559;
        _1876 = _1559;
        _1877 = _1559;
        _1878 = 0.0;
        _1879 = 0.0;
        _1880 = 0.0;
    }
    float _1890 = (cbModelParam._m0[1u].x * (_1878 - _1571)) + _1571;
    float _1891 = (cbModelParam._m0[1u].x * (_1879 - _1572)) + _1572;
    float _1892 = (cbModelParam._m0[1u].x * (_1880 - _1573)) + _1573;
    float _1913 = fma(_1892, cbSceneParam._m0[89u].z, fma(_1891, cbSceneParam._m0[89u].y, _1890 * cbSceneParam._m0[89u].x));
    float _1916 = fma(_1892, cbSceneParam._m0[90u].z, fma(_1891, cbSceneParam._m0[90u].y, _1890 * cbSceneParam._m0[90u].x));
    float _1919 = fma(_1892, cbSceneParam._m0[91u].z, fma(_1891, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1890));
    float _1934 = _1193 * 0.5;
    float _1935 = _1194 * 0.5;
    float _1936 = _1195 * 0.5;
    float _1937 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1868, _1871, _1874, _1877));
    float _1940 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1867, _1870, _1873, _1876));
    float _1943 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1866, _1869, _1872, _1875));
    float _1977;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1950 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1558, _1562, _1565, _1568));
        float _1954 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1560, _1563, _1566, _1569));
        float _1958 = dot(vec4(_1934, _1935, _1936, 1.0), vec4(_1561, _1564, _1567, _1570));
        float _1965 = dot(vec4(cbModelParam._m0[39u]), vec4(_1934, _1935, _1936, 1.0));
        _1977 = dot(vec3(isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0)), isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0)), isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1965) ? 0.0 : (isnan(0.0) ? _1965 : max(0.0, _1965))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1977 = 1.0;
    }
    float _1988;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1979 = dot(vec4(cbModelParam._m0[40u]), vec4(_1934, _1935, _1936, 1.0));
        _1988 = dot(vec3(isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0)), isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0)), isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1979) ? 0.0 : (isnan(0.0) ? _1979 : max(0.0, _1979))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1988 = 1.0;
    }
    float _1992 = (_1988 * cbModelParam._m0[1u].x) + (_1977 * (1.0 - cbModelParam._m0[1u].x));
    float _2002 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1023);
    float _2003 = isnan(_2002) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2002 : min(cbModelParam._m0[25u].z, _2002));
    float _2084;
    float _2086;
    float _2088;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2051 = fma(_1257, cbModelParam._m0[13u].z, fma(_1253, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1249)) + cbModelParam._m0[13u].w;
        float _2055 = fma(_1257, cbModelParam._m0[14u].z, fma(_1253, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1249)) + cbModelParam._m0[14u].w;
        float _2059 = fma(_1257, cbModelParam._m0[15u].z, fma(_1253, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1249)) + cbModelParam._m0[15u].w;
        float _2062 = fma(_1195, cbModelParam._m0[13u].z, fma(_1194, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1193));
        float _2065 = fma(_1195, cbModelParam._m0[14u].z, fma(_1194, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1193));
        float _2068 = fma(_1195, cbModelParam._m0[15u].z, fma(_1194, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1193));
        float _2096;
        if (_2062 > 0.0)
        {
            _2096 = abs((1.0 - _2051) / _2062);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2062 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2051 + 1.0) / _2062);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2096 = frontier_phi_14_12_ladder;
        }
        float _2320;
        if (_2065 > 0.0)
        {
            _2320 = abs((1.0 - _2055) / _2065);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2055 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2320 = frontier_phi_23_19_ladder;
        }
        float _2577;
        if (_2068 > 0.0)
        {
            _2577 = abs((1.0 - _2059) / _2068);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2059 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2577 = frontier_phi_35_30_ladder;
        }
        float _2579 = isnan(_2320) ? _2096 : (isnan(_2096) ? _2320 : min(_2096, _2320));
        float _2580 = isnan(_2577) ? _2579 : (isnan(_2579) ? _2577 : min(_2579, _2577));
        float _2584 = (_2580 * _2062) + _2051;
        float _2585 = (_2580 * _2065) + _2055;
        float _2586 = (_2580 * _2068) + _2059;
        float _2587 = _2580 * 9.9999997473787516355514526367188e-05;
        float _2589 = (-1.0) - _2587;
        float _2591 = _2587 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2586 > _2591) || ((_2586 < _2589) || ((_2585 > _2591) || ((_2585 < _2589) || ((_2584 < _2589) || (_2584 > _2591))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2714 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2586, cbModelParam._m0[9u].z, fma(_2585, cbModelParam._m0[9u].y, _2584 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2586, cbModelParam._m0[10u].z, fma(_2585, cbModelParam._m0[10u].y, _2584 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2586, cbModelParam._m0[11u].z, fma(_2585, cbModelParam._m0[11u].y, _2584 * cbModelParam._m0[11u].x))), _2003);
            frontier_phi_13_35_ladder = _2714.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2714.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2714.x * cbModelParam._m0[1u].y;
        }
        _2084 = frontier_phi_13_35_ladder_2;
        _2086 = frontier_phi_13_35_ladder_1;
        _2088 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2072 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1193, _1194, _1195), _2003);
        _2084 = _2072.x * cbModelParam._m0[1u].y;
        _2086 = _2072.y * cbModelParam._m0[1u].y;
        _2088 = _2072.z * cbModelParam._m0[1u].y;
    }
    float _2092 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1023);
    float _2093 = isnan(_2092) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2092 : min(cbModelParam._m0[25u].w, _2092));
    float _2183;
    float _2185;
    float _2187;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2147 = fma(_1257, cbModelParam._m0[21u].z, fma(_1253, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1249)) + cbModelParam._m0[21u].w;
        float _2151 = fma(_1257, cbModelParam._m0[22u].z, fma(_1253, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1249)) + cbModelParam._m0[22u].w;
        float _2155 = fma(_1257, cbModelParam._m0[23u].z, fma(_1253, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1249)) + cbModelParam._m0[23u].w;
        float _2158 = fma(_1195, cbModelParam._m0[21u].z, fma(_1194, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1193));
        float _2161 = fma(_1195, cbModelParam._m0[22u].z, fma(_1194, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1193));
        float _2164 = fma(_1195, cbModelParam._m0[23u].z, fma(_1194, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1193));
        float _2325;
        if (_2158 > 0.0)
        {
            _2325 = abs((1.0 - _2147) / _2158);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2158 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2147 + 1.0) / _2158);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2325 = frontier_phi_25_21_ladder;
        }
        float _2604;
        if (_2161 > 0.0)
        {
            _2604 = abs((1.0 - _2151) / _2161);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2161 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2151 + 1.0) / _2161);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2604 = frontier_phi_37_32_ladder;
        }
        float _2817;
        if (_2164 > 0.0)
        {
            _2817 = abs((1.0 - _2155) / _2164);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2164 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2155 + 1.0) / _2164);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2817 = frontier_phi_46_43_ladder;
        }
        float _2819 = isnan(_2604) ? _2325 : (isnan(_2325) ? _2604 : min(_2325, _2604));
        float _2820 = isnan(_2817) ? _2819 : (isnan(_2819) ? _2817 : min(_2819, _2817));
        float _2824 = (_2820 * _2158) + _2147;
        float _2825 = (_2820 * _2161) + _2151;
        float _2826 = (_2820 * _2164) + _2155;
        float _2827 = _2820 * 9.9999997473787516355514526367188e-05;
        float _2828 = (-1.0) - _2827;
        float _2830 = _2827 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2826 > _2830) || ((_2826 < _2828) || ((_2825 > _2830) || ((_2825 < _2828) || ((_2824 < _2828) || (_2824 > _2830))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3025 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2826, cbModelParam._m0[17u].z, fma(_2825, cbModelParam._m0[17u].y, _2824 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2826, cbModelParam._m0[18u].z, fma(_2825, cbModelParam._m0[18u].y, _2824 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2826, cbModelParam._m0[19u].z, fma(_2825, cbModelParam._m0[19u].y, _2824 * cbModelParam._m0[19u].x))), _2093);
            frontier_phi_22_46_ladder = _3025.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3025.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3025.x * cbModelParam._m0[1u].z;
        }
        _2183 = frontier_phi_22_46_ladder_2;
        _2185 = frontier_phi_22_46_ladder_1;
        _2187 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2167 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1193, _1194, _1195), _2093);
        _2183 = _2167.x * cbModelParam._m0[1u].z;
        _2185 = _2167.y * cbModelParam._m0[1u].z;
        _2187 = _2167.z * cbModelParam._m0[1u].z;
    }
    float _2200 = (((_1220 * _1169) + _1221) * _1185) * ((cbModelParam._m0[1u].w * (_2183 - _2084)) + _2084);
    float _2202 = (((_1220 * _1171) + _1221) * _1185) * ((cbModelParam._m0[1u].w * (_2185 - _2086)) + _2086);
    float _2204 = (((_1220 * _1172) + _1221) * _1185) * ((cbModelParam._m0[1u].w * (_2187 - _2088)) + _2088);
    float _2207 = fma(_2204, cbSceneParam._m0[89u].z, fma(_2202, cbSceneParam._m0[89u].y, _2200 * cbSceneParam._m0[89u].x));
    float _2210 = fma(_2204, cbSceneParam._m0[90u].z, fma(_2202, cbSceneParam._m0[90u].y, _2200 * cbSceneParam._m0[90u].x));
    float _2213 = fma(_2204, cbSceneParam._m0[91u].z, fma(_2202, cbSceneParam._m0[91u].y, _2200 * cbSceneParam._m0[91u].x));
    vec4 _2221 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1107, _1108));
    float _2223 = _2221.w;
    float _2235 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2223);
    float _2236 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2223);
    float _2237 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2223);
    uvec4 _2241 = floatBitsToUint(cbInstanceData._m0[_293 + 5u]);
    uint _2243 = _2241.x * 14u;
    uint _2244 = _2243 + 13u;
    float _2251 = _1185 + (-1.0);
    float _2256 = (cbLight._m0[_2244].x * _2251) + 1.0;
    float _2257 = (cbLight._m0[_2244].y * _2251) + 1.0;
    float _2258 = (cbLight._m0[_2244].z * _2251) + 1.0;
    float _2259 = (cbLight._m0[_2244].w * _2251) + 1.0;
    uint _2260 = _2243 + 5u;
    float _2266 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
    uint _2270 = _2243 + 4u;
    float _2279 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
    uint _2283 = _2243 | 1u;
    float _2294 = dot(vec3(cbLight._m0[_2243].xyz), vec3(_1020, _1021, _1022));
    float _2297 = dot(vec3(cbLight._m0[_2283].xyz), vec3(_1020, _1021, _1022));
    float _4507 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
    float _4518 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2302 = (isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * 0.3183098733425140380859375;
    float _2304 = (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * 0.3183098733425140380859375;
    float _2311 = ((cbLight._m0[_2260].x * _2266) * _2304) + (((cbLight._m0[_2270].x * _2235) * _2279) * _2302);
    float _2312 = ((_2266 * cbLight._m0[_2260].y) * _2304) + (((cbLight._m0[_2270].y * _2236) * _2279) * _2302);
    float _2313 = ((_2266 * cbLight._m0[_2260].z) * _2304) + (((cbLight._m0[_2270].z * _2237) * _2279) * _2302);
    uvec4 _2317 = floatBitsToUint(cbLight._m0[_2243 + 12u]);
    bool _2319 = _2317.x == 0u;
    float _2330;
    float _2332;
    float _2334;
    if (_2319)
    {
        _2330 = _2311;
        _2332 = _2312;
        _2334 = _2313;
    }
    else
    {
        uint _2338 = _2243 + 6u;
        float _2354 = (dot(vec3(cbLight._m0[_2243 + 2u].xyz), vec3(_1020, _1021, _1022)) * 0.5) + 0.5;
        float _2355 = _2354 * _2354;
        float _4529 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
        float _2356 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _2357 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2330 = (((cbLight._m0[_2338].x * 0.3183098733425140380859375) * _2356) * _2357) + _2311;
        _2332 = (((cbLight._m0[_2338].y * 0.3183098733425140380859375) * _2356) * _2357) + _2312;
        _2334 = (((cbLight._m0[_2338].z * 0.3183098733425140380859375) * _2356) * _2357) + _2313;
    }
    bool _2337 = _2317.y == 0u;
    float _2375;
    float _2377;
    float _2379;
    if (_2337)
    {
        _2375 = _2330;
        _2377 = _2332;
        _2379 = _2334;
    }
    else
    {
        uint _2548 = _2243 + 7u;
        float _2564 = (dot(vec3(cbLight._m0[_2243 + 3u].xyz), vec3(_1020, _1021, _1022)) * 0.5) + 0.5;
        float _2565 = _2564 * _2564;
        float _4545 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
        float _2566 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _2567 = isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0));
        _2375 = (((cbLight._m0[_2548].x * 0.3183098733425140380859375) * _2566) * _2567) + _2330;
        _2377 = (((cbLight._m0[_2548].y * 0.3183098733425140380859375) * _2566) * _2567) + _2332;
        _2379 = (((cbLight._m0[_2548].z * 0.3183098733425140380859375) * _2566) * _2567) + _2334;
    }
    uint _2382 = _2243 + 8u;
    float _2395 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2243].w)) * _1023) * 0.949999988079071044921875);
    float _2396 = _2395 * _2395;
    float _2397 = cbLight._m0[_2243].x + _1099;
    float _2398 = cbLight._m0[_2243].y + _1100;
    float _2399 = cbLight._m0[_2243].z + _1101;
    float _2403 = inversesqrt(dot(vec3(_2397, _2398, _2399), vec3(_2397, _2398, _2399)));
    float _2404 = _2403 * _2397;
    float _2405 = _2403 * _2398;
    float _2406 = _2403 * _2399;
    float _2407 = dot(vec3(_1020, _1021, _1022), vec3(cbLight._m0[_2243].xyz));
    float _4561 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _2410 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
    float _4572 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
    float _2411 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
    float _2412 = dot(vec3(_1020, _1021, _1022), vec3(_2404, _2405, _2406));
    float _4583 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
    float _2416 = dot(vec3(cbLight._m0[_2243].xyz), vec3(_2404, _2405, _2406));
    float _4594 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2420 = _2396 * _2396;
    float _2424 = ((_2415 * _2415) * (_2420 + (-1.0))) + 1.0;
    float _2432 = exp2(log2(1.0 - (isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0)))) * 5.0);
    float _2433 = 0.959999978542327880859375 - _1166;
    float _2435 = 0.959999978542327880859375 - _1167;
    float _2436 = 0.959999978542327880859375 - _1168;
    float _2443 = 1.0 - _2396;
    float _2454 = (0.5 / (((_2411 * ((_2410 * _2443) + _2396)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2443) + _2396) * _2410))) * _2410;
    float _4605 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2456 = (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (_2420 / ((_2424 * _2424) * 3.141590118408203125));
    uint _2470 = _2243 + 9u;
    float _2481 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2283].w)) * _1023) * 0.949999988079071044921875);
    float _2482 = _2481 * _2481;
    float _2483 = cbLight._m0[_2283].x + _1099;
    float _2484 = cbLight._m0[_2283].y + _1100;
    float _2485 = cbLight._m0[_2283].z + _1101;
    float _2489 = inversesqrt(dot(vec3(_2483, _2484, _2485), vec3(_2483, _2484, _2485)));
    float _2490 = _2489 * _2483;
    float _2491 = _2489 * _2484;
    float _2492 = _2489 * _2485;
    float _2493 = dot(vec3(_1020, _1021, _1022), vec3(cbLight._m0[_2283].xyz));
    float _4616 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
    float _2496 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
    float _2497 = dot(vec3(_1020, _1021, _1022), vec3(_2490, _2491, _2492));
    float _4627 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2500 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
    float _2501 = dot(vec3(cbLight._m0[_2283].xyz), vec3(_2490, _2491, _2492));
    float _4638 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2505 = _2482 * _2482;
    float _2509 = ((_2500 * _2500) * (_2505 + (-1.0))) + 1.0;
    float _2516 = exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0);
    float _2523 = 1.0 - _2482;
    float _2533 = (0.5 / (((_2411 * ((_2496 * _2523) + _2482)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2523) + _2482) * _2496))) * _2496;
    float _4649 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2535 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2505 / ((_2509 * _2509) * 3.141590118408203125));
    float _2545 = (((((_2516 * _2433) + _1169) * cbLight._m0[_2470].x) * _2535) * _2266) + ((((cbLight._m0[_2382].x * _2235) * ((_2432 * _2433) + _1169)) * _2456) * _2279);
    float _2546 = (((((_2516 * _2435) + _1171) * cbLight._m0[_2470].y) * _2535) * _2266) + ((((cbLight._m0[_2382].y * _2236) * ((_2432 * _2435) + _1171)) * _2456) * _2279);
    float _2547 = (((((_2516 * _2436) + _1172) * cbLight._m0[_2470].z) * _2535) * _2266) + ((((cbLight._m0[_2382].z * _2237) * ((_2432 * _2436) + _1172)) * _2456) * _2279);
    float _2609;
    float _2611;
    float _2613;
    if (_2319)
    {
        _2609 = _2545;
        _2611 = _2546;
        _2613 = _2547;
    }
    else
    {
        uint _2615 = _2243 + 2u;
        uint _2619 = _2243 + 10u;
        float _2633 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2615].w)) * _1023) * 0.949999988079071044921875);
        float _2634 = _2633 * _2633;
        float _2635 = cbLight._m0[_2615].x + _1099;
        float _2636 = cbLight._m0[_2615].y + _1100;
        float _2637 = cbLight._m0[_2615].z + _1101;
        float _2641 = inversesqrt(dot(vec3(_2635, _2636, _2637), vec3(_2635, _2636, _2637)));
        float _2642 = _2641 * _2635;
        float _2643 = _2641 * _2636;
        float _2644 = _2641 * _2637;
        float _2645 = dot(vec3(_1020, _1021, _1022), vec3(cbLight._m0[_2615].xyz));
        float _4660 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
        float _2648 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _2649 = dot(vec3(_1020, _1021, _1022), vec3(_2642, _2643, _2644));
        float _4671 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
        float _2652 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _2653 = dot(vec3(cbLight._m0[_2615].xyz), vec3(_2642, _2643, _2644));
        float _4682 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
        float _2657 = _2634 * _2634;
        float _2661 = ((_2652 * _2652) * (_2657 + (-1.0))) + 1.0;
        float _2668 = exp2(log2(1.0 - (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) * 5.0);
        float _2675 = 1.0 - _2634;
        float _2685 = (0.5 / (((_2411 * ((_2648 * _2675) + _2634)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2675) + _2634) * _2648))) * _2648;
        float _4693 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2687 = (isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0))) * (_2657 / ((_2661 * _2661) * 3.141590118408203125));
        float _2688 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2609 = (((((_2668 * _2433) + _1169) * cbLight._m0[_2619].x) * _2687) * _2688) + _2545;
        _2611 = (((((_2668 * _2435) + _1171) * cbLight._m0[_2619].y) * _2687) * _2688) + _2546;
        _2613 = (((((_2668 * _2436) + _1172) * cbLight._m0[_2619].z) * _2687) * _2688) + _2547;
    }
    float _2723;
    float _2725;
    float _2727;
    if (_2337)
    {
        _2723 = _2609;
        _2725 = _2611;
        _2727 = _2613;
    }
    else
    {
        uint _2734 = _2243 + 3u;
        uint _2738 = _2243 + 11u;
        float _2752 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2734].w)) * _1023) * 0.949999988079071044921875);
        float _2753 = _2752 * _2752;
        float _2754 = cbLight._m0[_2734].x + _1099;
        float _2755 = cbLight._m0[_2734].y + _1100;
        float _2756 = cbLight._m0[_2734].z + _1101;
        float _2760 = inversesqrt(dot(vec3(_2754, _2755, _2756), vec3(_2754, _2755, _2756)));
        float _2761 = _2760 * _2754;
        float _2762 = _2760 * _2755;
        float _2763 = _2760 * _2756;
        float _2764 = dot(vec3(_1020, _1021, _1022), vec3(cbLight._m0[_2734].xyz));
        float _4709 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
        float _2767 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2768 = dot(vec3(_1020, _1021, _1022), vec3(_2761, _2762, _2763));
        float _4720 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
        float _2771 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
        float _2772 = dot(vec3(cbLight._m0[_2734].xyz), vec3(_2761, _2762, _2763));
        float _4731 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2776 = _2753 * _2753;
        float _2780 = ((_2771 * _2771) * (_2776 + (-1.0))) + 1.0;
        float _2787 = exp2(log2(1.0 - (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0)))) * 5.0);
        float _2794 = 1.0 - _2753;
        float _2804 = (0.5 / (((_2411 * ((_2767 * _2794) + _2753)) + 9.9999999392252902907785028219223e-09) + (((_2411 * _2794) + _2753) * _2767))) * _2767;
        float _4742 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2806 = (isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0))) * (_2776 / ((_2780 * _2780) * 3.141590118408203125));
        float _2807 = isnan(1.0) ? _2259 : (isnan(_2259) ? 1.0 : min(_2259, 1.0));
        _2723 = (((((_2787 * _2433) + _1169) * cbLight._m0[_2738].x) * _2806) * _2807) + _2609;
        _2725 = (((((_2787 * _2435) + _1171) * cbLight._m0[_2738].y) * _2806) * _2807) + _2611;
        _2727 = (((((_2787 * _2436) + _1172) * cbLight._m0[_2738].z) * _2806) * _2807) + _2613;
    }
    float _2942;
    float _2944;
    float _2946;
    float _2948;
    float _2950;
    float _2952;
    if (_2241.y == 0u)
    {
        float _2882 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2883 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2882;
        float _2884 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2882;
        float _2885 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2882;
        uvec4 _2897 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2898 = _2897.x;
        uint _2909 = uint((float(_2897.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1108) / _2898))) + floor(float(uint(cbSceneParam._m0[85u].x * _1107) / _2898)));
        float _2919 = (log2(_2885 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2920 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
        uint _2923 = uint(isnan(14.0) ? _2920 : (isnan(_2920) ? 14.0 : min(_2920, 14.0)));
        uvec4 _2928 = texelFetch(g_lightClusterGridBuffer, int(((_2923 << 2u) + (_2909 << 6u)) >> 2u));
        uint _2929 = _2928.x;
        uint _2930 = _2897.z;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        float _3038;
        float _3040;
        if (((((1u << ((_2930 >> 4u) & 15u)) + 4294967295u) & _2929) == 0u) || ((_2930 & 240u) == 0u))
        {
            _3030 = 0.0;
            _3032 = 0.0;
            _3034 = 0.0;
            _3036 = 0.0;
            _3038 = 0.0;
            _3040 = 0.0;
        }
        else
        {
            float _3031;
            float _3033;
            float _3035;
            float _3037;
            float _3039;
            float _3041;
            float _3175 = 0.0;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            uint _3181 = 0u;
            uint _3190;
            bool _3191;
            for (;;)
            {
                _3190 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3181 << 2u)) >> 2u)).x;
                _3191 = _3190 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3191)
                {
                    frontier_phi_61_pred = _3175;
                    frontier_phi_61_pred_1 = _3180;
                    frontier_phi_61_pred_2 = _3179;
                    frontier_phi_61_pred_3 = _3178;
                    frontier_phi_61_pred_4 = _3177;
                    frontier_phi_61_pred_5 = _3176;
                }
                else
                {
                    float _3299;
                    float _3300;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    uint _3305;
                    _3299 = _3175;
                    _3300 = _3176;
                    _3301 = _3177;
                    _3302 = _3178;
                    _3303 = _3179;
                    _3304 = _3180;
                    _3305 = _3190;
                    float _3231;
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    for (;;)
                    {
                        uint _3309 = uint(findLSB(_3305)) + (_3181 << 5u);
                        uint _3306 = (_3305 + 4294967295u) & _3305;
                        uint _3311 = _3309 * 48u;
                        vec4 _3325 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3311)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 3u)).x));
                        uint _3331 = (_3309 * 48u) + 4u;
                        vec4 _3344 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3331)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 3u)).x));
                        uint _3350 = (_3309 * 48u) + 8u;
                        vec3 _3361 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3350)).x, texelFetch(g_PointLightRenderingBuffer, int(_3350 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3350 + 2u)).x));
                        float _3365 = _3325.x - _2883;
                        float _3366 = _3325.y - _2884;
                        float _3367 = _3325.z - _2885;
                        float _3368 = dot(vec3(_3365, _3366, _3367), vec3(_3365, _3366, _3367));
                        float _3371 = inversesqrt(_3368);
                        float _3372 = _3371 * _3365;
                        float _3373 = _3371 * _3366;
                        float _3374 = _3371 * _3367;
                        float _3375 = dot(vec3(_1126, _1129, _1132), vec3(_3372, _3373, _3374));
                        float _3380 = 1.0 - (_3368 * _3325.w);
                        float _4768 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0));
                        float _3381 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
                        float _3382 = sqrt(_3368) * _3344.w;
                        float _3385 = 1.39999997615814208984375 / (_3382 + 1.39999997615814208984375);
                        float _3386 = _3385 * _3385;
                        float _3389 = ((1.0 - _3386) * _3375) + _3386;
                        float _3392 = _3382 * _3382;
                        float _3396 = ((isnan(0.0) ? _3389 : (isnan(_3389) ? 0.0 : max(_3389, 0.0))) * _3381) / ((_3392 * 0.699999988079071044921875) + 1.0);
                        float _3400 = (-0.0) - _2883;
                        float _3401 = (-0.0) - _2884;
                        float _3402 = (-0.0) - _2885;
                        float _3406 = inversesqrt(dot(vec3(_3400, _3401, _3402), vec3(_3400, _3401, _3402)));
                        float _3407 = _3406 * _3400;
                        float _3408 = _3406 * _3401;
                        float _3409 = _3406 * _3402;
                        float _3417 = exp2(log2(1.0 / ((_3392 * 3.5) + 5.0)) * 0.25);
                        float _3418 = 1.0 - _1201;
                        float _3425 = sqrt(1.0 - ((1.0 - (_3418 * _3418)) * (1.0 - (_3417 * _3417))));
                        float _3426 = _3425 * _3425;
                        float _3427 = _3426 * _3426;
                        float _3428 = _3407 + _3372;
                        float _3429 = _3408 + _3373;
                        float _3430 = _3409 + _3374;
                        float _3434 = inversesqrt(dot(vec3(_3428, _3429, _3430), vec3(_3428, _3429, _3430)));
                        float _3438 = dot(vec3(_1126, _1129, _1132), vec3(_3407, _3408, _3409));
                        float _4784 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                        float _3441 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                        float _3442 = dot(vec3(_1126, _1129, _1132), vec3(_3434 * _3428, _3434 * _3429, _3434 * _3430));
                        float _4795 = isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0));
                        float _3445 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
                        float _3449 = ((_3445 * _3445) * (_3427 + (-1.0))) + 1.0;
                        float _3450 = _3385 * _3426;
                        float _3451 = _3450 * _3450;
                        float _3454 = ((1.0 - _3451) * _3375) + _3451;
                        float _4806 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3455 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                        float _3456 = 1.0 - _3426;
                        float _3466 = (0.5 / (((_3455 * ((_3441 * _3456) + _3426)) + 9.9999999392252902907785028219223e-09) + (((_3455 * _3456) + _3426) * _3441))) * _3455;
                        float _4817 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3477 = (((_3427 * 3.1415927410125732421875) * (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0)))) / ((_3449 * _3449) * ((_3392 * 2.1991131305694580078125) + 3.141590118408203125))) * _3381;
                        _3234 = (_3396 * _3344.x) + _3302;
                        _3235 = (_3396 * _3344.y) + _3303;
                        _3236 = (_3396 * _3344.z) + _3304;
                        _3231 = (_3477 * _3361.x) + _3299;
                        _3232 = (_3477 * _3361.y) + _3300;
                        _3233 = (_3477 * _3361.z) + _3301;
                        if (_3306 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3299 = _3231;
                            _3300 = _3232;
                            _3301 = _3233;
                            _3302 = _3234;
                            _3303 = _3235;
                            _3304 = _3236;
                            _3305 = _3306;
                        }
                    }
                    frontier_phi_61_pred = _3231;
                    frontier_phi_61_pred_1 = _3236;
                    frontier_phi_61_pred_2 = _3235;
                    frontier_phi_61_pred_3 = _3234;
                    frontier_phi_61_pred_4 = _3233;
                    frontier_phi_61_pred_5 = _3232;
                }
                _3031 = frontier_phi_61_pred;
                _3041 = frontier_phi_61_pred_1;
                _3039 = frontier_phi_61_pred_2;
                _3037 = frontier_phi_61_pred_3;
                _3035 = frontier_phi_61_pred_4;
                _3033 = frontier_phi_61_pred_5;
                uint _3182 = _3181 + 1u;
                if (_3182 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3175 = _3031;
                    _3176 = _3033;
                    _3177 = _3035;
                    _3178 = _3037;
                    _3179 = _3039;
                    _3180 = _3041;
                    _3181 = _3182;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3030 = _3031;
            _3032 = _3033;
            _3034 = _3035;
            _3036 = _3037;
            _3038 = _3039;
            _3040 = _3041;
        }
        uvec4 _3044 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3045 = _3044.z;
        uint _3047 = (_3045 >> 8u) & 15u;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        if (((4294967295u << _3047) & _2929) == 0u)
        {
            _3143 = _3030;
            _3145 = _3032;
            _3147 = _3034;
            _3149 = _3036;
            _3151 = _3038;
            _3153 = _3040;
        }
        else
        {
            float _3168 = inversesqrt(dot(vec3(_2883, _2884, _2885), vec3(_2883, _2884, _2885)));
            float _3169 = _3168 * _2883;
            float _3170 = _3168 * _2884;
            float _3171 = _3168 * _2885;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3047 < ((_3045 >> 12u) & 15u))
            {
                float _3144;
                float _3146;
                float _3148;
                float _3150;
                float _3152;
                float _3154;
                float _3282 = _3030;
                float _3283 = _3032;
                float _3284 = _3034;
                float _3285 = _3036;
                float _3286 = _3038;
                float _3287 = _3040;
                uint _3288 = _3047;
                uint _3297;
                bool _3298;
                for (;;)
                {
                    _3297 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3288 << 2u)) >> 2u)).x;
                    _3298 = _3297 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3298)
                    {
                        frontier_phi_67_pred = _3285;
                        frontier_phi_67_pred_1 = _3286;
                        frontier_phi_67_pred_2 = _3287;
                        frontier_phi_67_pred_3 = _3284;
                        frontier_phi_67_pred_4 = _3283;
                        frontier_phi_67_pred_5 = _3282;
                    }
                    else
                    {
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3485;
                        float _3486;
                        float _3487;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _3778;
                        float _3779;
                        float _3780;
                        float _3495 = _3282;
                        float _3496 = _3283;
                        float _3497 = _3284;
                        float _3498 = _3285;
                        float _3499 = _3286;
                        float _3500 = _3287;
                        uint _3501 = _3297;
                        uint _3502;
                        vec4 _3527;
                        float _3528;
                        vec4 _3543;
                        vec3 _3555;
                        vec4 _3570;
                        vec4 _3585;
                        float _3631;
                        bool _3632;
                        for (;;)
                        {
                            uint _3512 = ((_3288 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3501));
                            _3502 = (_3501 + 4294967295u) & _3501;
                            uint _3514 = _3512 * 40u;
                            _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            _3528 = _3527.w;
                            uint _3530 = (_3512 * 40u) + 4u;
                            _3543 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3530)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 3u)).x));
                            uint _3545 = (_3512 * 40u) + 8u;
                            _3555 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x));
                            uint _3557 = (_3512 * 40u) + 16u;
                            _3570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 3u)).x));
                            uint _3572 = (_3512 * 40u) + 20u;
                            _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            uint _3587 = (_3512 * 40u) + 24u;
                            vec4 _3600 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 3u)).x));
                            uint _3606 = (_3512 * 40u) + 28u;
                            vec4 _3619 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3606)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 3u)).x));
                            _3631 = fma(_2885, _3619.z, fma(_2884, _3619.y, _3619.x * _2883)) + _3619.w;
                            _3632 = !((fma(_2885, _3600.z, fma(_2884, _3600.y, _3600.x * _2883)) + _3600.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3632)
                            {
                                float _3659 = _3527.x - _2883;
                                float _3660 = _3527.y - _2884;
                                float _3661 = _3527.z - _2885;
                                float _3662 = dot(vec3(_3659, _3660, _3661), vec3(_3659, _3660, _3661));
                                float _3665 = inversesqrt(_3662);
                                float _3666 = _3665 * _3659;
                                float _3667 = _3665 * _3660;
                                float _3668 = _3665 * _3661;
                                float _3672 = 1.0 - (_3662 / (_3528 * _3528));
                                float _4828 = isnan(0.0) ? _3672 : (isnan(_3672) ? 0.0 : max(_3672, 0.0));
                                float _3673 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
                                float _3677 = sqrt(_3662) * _3543.w;
                                float _3679 = 1.39999997615814208984375 / (_3677 + 1.39999997615814208984375);
                                float _3680 = _3679 * _3679;
                                float _3683 = ((1.0 - _3680) * dot(vec3(_3666, _3667, _3668), vec3(_1126, _1129, _1132))) + _3680;
                                float _3686 = _3677 * _3677;
                                float _3690 = (fma(_2885, _3570.z, fma(_2884, _3570.y, _3570.x * _2883)) + _3570.w) / _3631;
                                float _3691 = (fma(_2885, _3585.z, fma(_2884, _3585.y, _3585.x * _2883)) + _3585.w) / _3631;
                                float _3695 = 1.0 - dot(vec2(_3690, _3691), vec2(_3690, _3691));
                                float _4844 = isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0));
                                float _3696 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                                float _3697 = _3696 * (((isnan(0.0) ? _3683 : (isnan(_3683) ? 0.0 : max(_3683, 0.0))) * _3673) / ((_3686 * 0.699999988079071044921875) + 1.0));
                                float _3709 = exp2(log2(1.0 / ((_3686 * 3.5) + 5.0)) * 0.25);
                                float _3710 = 1.0 - _1201;
                                float _3717 = sqrt(1.0 - ((1.0 - (_3710 * _3710)) * (1.0 - (_3709 * _3709))));
                                float _3718 = _3717 * _3717;
                                float _3719 = _3718 * _3718;
                                float _3720 = _3666 - _3169;
                                float _3721 = _3667 - _3170;
                                float _3722 = _3668 - _3171;
                                float _3726 = inversesqrt(dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722)));
                                float _3730 = dot(vec3(_1126, _1129, _1132), vec3((-0.0) - _3169, (-0.0) - _3170, (-0.0) - _3171));
                                float _4855 = isnan(0.0) ? _3730 : (isnan(_3730) ? 0.0 : max(_3730, 0.0));
                                float _3733 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                                float _3734 = dot(vec3(_1126, _1129, _1132), vec3(_3726 * _3720, _3726 * _3721, _3726 * _3722));
                                float _4866 = isnan(0.0) ? _3734 : (isnan(_3734) ? 0.0 : max(_3734, 0.0));
                                float _3737 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                                float _3741 = ((_3737 * _3737) * (_3719 + (-1.0))) + 1.0;
                                float _3742 = _3679 * _3718;
                                float _3743 = _3742 * _3742;
                                float _3749 = ((1.0 - _3743) * dot(vec3(_1126, _1129, _1132), vec3(_3666, _3667, _3668))) + _3743;
                                float _4877 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                                float _3750 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                                float _3751 = 1.0 - _3718;
                                float _3761 = (0.5 / (((_3750 * ((_3733 * _3751) + _3718)) + 9.9999999392252902907785028219223e-09) + (((_3750 * _3751) + _3718) * _3733))) * _3750;
                                float _4888 = isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0));
                                float _3771 = (_3696 * _3673) * (((_3719 * 3.1415927410125732421875) * (isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0)))) / ((_3741 * _3741) * ((_3686 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3771 * _3555.x;
                                frontier_phi_73_pred_1 = _3771 * _3555.y;
                                frontier_phi_73_pred_2 = _3697 * _3543.z;
                                frontier_phi_73_pred_3 = _3697 * _3543.y;
                                frontier_phi_73_pred_4 = _3697 * _3543.x;
                                frontier_phi_73_pred_5 = _3771 * _3555.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3775 = frontier_phi_73_pred;
                            _3776 = frontier_phi_73_pred_1;
                            _3780 = frontier_phi_73_pred_2;
                            _3779 = frontier_phi_73_pred_3;
                            _3778 = frontier_phi_73_pred_4;
                            _3777 = frontier_phi_73_pred_5;
                            _3485 = _3778 + _3498;
                            _3486 = _3779 + _3499;
                            _3487 = _3780 + _3500;
                            _3482 = _3775 + _3495;
                            _3483 = _3776 + _3496;
                            _3484 = _3777 + _3497;
                            if (_3502 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3495 = _3482;
                                _3496 = _3483;
                                _3497 = _3484;
                                _3498 = _3485;
                                _3499 = _3486;
                                _3500 = _3487;
                                _3501 = _3502;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3485;
                        frontier_phi_67_pred_1 = _3486;
                        frontier_phi_67_pred_2 = _3487;
                        frontier_phi_67_pred_3 = _3484;
                        frontier_phi_67_pred_4 = _3483;
                        frontier_phi_67_pred_5 = _3482;
                    }
                    _3150 = frontier_phi_67_pred;
                    _3152 = frontier_phi_67_pred_1;
                    _3154 = frontier_phi_67_pred_2;
                    _3148 = frontier_phi_67_pred_3;
                    _3146 = frontier_phi_67_pred_4;
                    _3144 = frontier_phi_67_pred_5;
                    uint _3289 = _3288 + 1u;
                    if (_3289 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3282 = _3144;
                        _3283 = _3146;
                        _3284 = _3148;
                        _3285 = _3150;
                        _3286 = _3152;
                        _3287 = _3154;
                        _3288 = _3289;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3152;
                frontier_phi_55_56_ladder_1 = _3154;
                frontier_phi_55_56_ladder_2 = _3150;
                frontier_phi_55_56_ladder_3 = _3148;
                frontier_phi_55_56_ladder_4 = _3146;
                frontier_phi_55_56_ladder_5 = _3144;
            }
            else
            {
                frontier_phi_55_56_ladder = _3038;
                frontier_phi_55_56_ladder_1 = _3040;
                frontier_phi_55_56_ladder_2 = _3036;
                frontier_phi_55_56_ladder_3 = _3034;
                frontier_phi_55_56_ladder_4 = _3032;
                frontier_phi_55_56_ladder_5 = _3030;
            }
            _3143 = frontier_phi_55_56_ladder_5;
            _3145 = frontier_phi_55_56_ladder_4;
            _3147 = frontier_phi_55_56_ladder_3;
            _3149 = frontier_phi_55_56_ladder_2;
            _3151 = frontier_phi_55_56_ladder;
            _3153 = frontier_phi_55_56_ladder_1;
        }
        float _3158 = isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0));
        _2942 = (_3158 * _3149) + _2375;
        _2944 = (_3158 * _3151) + _2377;
        _2946 = (_3158 * _3153) + _2379;
        _2948 = ((_3143 * _1169) * _3158) + _2723;
        _2950 = ((_3145 * _1171) * _3158) + _2725;
        _2952 = ((_3147 * _1172) * _3158) + _2727;
    }
    else
    {
        _2942 = _2375;
        _2944 = _2377;
        _2946 = _2379;
        _2948 = _2723;
        _2950 = _2725;
        _2952 = _2727;
    }
    float _4904 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _4915 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
    float _4926 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
    uint _2972 = _293 + 6u;
    float _2980 = _1107 / cbSceneParam._m0[86u].x;
    float _2981 = _1108 / cbSceneParam._m0[86u].y;
    vec4 _2995 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2980, _2981, (log2((isnan(cbSceneParam._m0[77u].w) ? _1042 : (isnan(_1042) ? cbSceneParam._m0[77u].w : min(_1042, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2997 = _2995.x;
    float _2998 = _2995.y;
    float _2999 = _2995.z;
    float _3000 = _2995.w;
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    if (_1042 > cbSceneParam._m0[78u].w)
    {
        float _3055 = isnan(_1042) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1042 : min(cbSceneParam._m0[80u].w, _1042));
        float _3056 = _3055 / _1042;
        float _3067 = _3056 * _1092;
        float _3068 = _1093 * _3056;
        float _3069 = (-0.0) - _3068;
        float _3071 = _3056 * _1094;
        float _3073 = (cbSceneParam._m0[77u].w * _3069) / _3055;
        float _3074 = _3073 + cbSceneParam._m0[79u].w;
        float _3075 = cbSceneParam._m0[79u].w - _3068;
        float _3081 = sqrt(((_3067 * _3067) + (_3068 * _3068)) + (_3071 * _3071));
        float _3084 = (1.0 - (cbSceneParam._m0[77u].w / _3055)) * _3081;
        float _3089 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3091 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3244;
        if (abs((_3069 - _3073) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3244 = ((((_3074 > 0.0) ? exp2(_3089 * _3074) : (2.0 - exp2(_3091 * _3074))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3084;
        }
        else
        {
            float _3204 = 1.0 / cbSceneParam._m0[80u].x;
            float _3205 = isnan(_3075) ? _3074 : (isnan(_3074) ? _3075 : max(_3074, _3075));
            float _3206 = isnan(_3075) ? _3074 : (isnan(_3074) ? _3075 : min(_3074, _3075));
            float _3215 = isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : min(_3205, 0.0));
            float _3216 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : min(_3206, 0.0));
            _3244 = ((abs(_3081 / _3069) * cbSceneParam._m0[80u].y) * ((((_3215 - _3216) * 2.0) - ((exp2(_3089 * (isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : max(_3205, 0.0)))) - exp2(_3089 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0))))) * _3204)) - ((exp2(_3091 * _3215) - exp2(_3091 * _3216)) * _3204))) + (_3084 * cbSceneParam._m0[80u].z);
        }
        vec4 _3246 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2980, _2981, 1.0), 0.0);
        float _3255 = exp2((_3244 * (-1.44269502162933349609375)) * (1.0 - _3246.w));
        float _3256 = log2(_3255);
        float _3272 = log2(_3000);
        _3093 = (exp2(_3272 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].x)) * _3246.x) / cbSceneParam._m0[78u].x)) + _2997;
        _3095 = (exp2(_3272 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].y)) * _3246.y) / cbSceneParam._m0[78u].y)) + _2998;
        _3097 = (exp2(_3272 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].z)) * _3246.z) / cbSceneParam._m0[78u].z)) + _2999;
        _3099 = _3255 * _3000;
    }
    else
    {
        _3093 = _2997;
        _3095 = _2998;
        _3097 = _2999;
        _3099 = _3000;
    }
    float _3111 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3112 = _3111 == 3.0;
    float _3113 = log2(_3099);
    float _3120 = exp2(_3113 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0))) * (_2942 + ((isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0))) * _1185))) + ((_2948 + ((isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0))) * _1992)) * cbPerFrame._m0[3u].x));
    float _3121 = exp2(_3113 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0))) * (_2944 + ((isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0))) * _1185))) + ((_2950 + ((isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0))) * _1992)) * cbPerFrame._m0[3u].x));
    float _3122 = exp2(_3113 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0))) * (_2946 + ((isnan(0.0) ? _1919 : (isnan(_1919) ? 0.0 : max(_1919, 0.0))) * _1185))) + ((_2952 + ((isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0))) * _1992)) * cbPerFrame._m0[3u].x));
    float _3131 = (_3111 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3131 * (_3112 ? _3120 : (_3120 + (cbSceneParam._m0[72u].w * _3093)));
    SV_Target.y = _3131 * (_3112 ? _3121 : (_3121 + (cbSceneParam._m0[72u].w * _3095)));
    SV_Target.z = _3131 * (_3112 ? _3122 : (_3122 + (cbSceneParam._m0[72u].w * _3097)));
    SV_Target.w = cbInstanceData._m0[_2972].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2972].w;
}


