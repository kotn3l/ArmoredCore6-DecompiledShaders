#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _177 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _178 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _179 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_177, _178, _179), vec3(_177, _178, _179)));
    float _186 = _185 * _177;
    float _187 = _185 * _178;
    float _188 = _185 * _179;
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _193 = _192 * NORMAL.x;
    float _194 = _192 * NORMAL.y;
    float _195 = _192 * NORMAL.z;
    float _199 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _200 = _199 * TANGENT.x;
    float _201 = _199 * TANGENT.y;
    float _202 = _199 * TANGENT.z;
    uint _205 = uint(roundEven(NORMAL.w)) * 13u;
    uint _211 = _205 + 1u;
    uint _215 = _205 + 2u;
    float _224 = sqrt(((cbInstanceData._m0[_211].x * cbInstanceData._m0[_211].x) + (cbInstanceData._m0[_205].x * cbInstanceData._m0[_205].x)) + (cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x));
    float _225 = _224 * TEXCOORD.z;
    float _226 = _224 * TEXCOORD.w;
    vec4 _246 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _252 = _246.x * cbMtdParam._m0[11u].x;
    float _253 = _246.y * cbMtdParam._m0[11u].y;
    float _254 = _246.z * cbMtdParam._m0[11u].z;
    vec4 _273 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _225) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _226) + cbTextureTilingScale._m0[5u].w));
    vec4 _327 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _329 = _327.x;
    float _342 = dot(vec4(_329, _327.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _359 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_329 - _342) * cbMtdParam._m0[23u].w) + _342) * cbMtdParam._m0[22u].w))) + 1.0;
    float _893 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _360 = isnan(1.0) ? _893 : (isnan(_893) ? 1.0 : min(_893, 1.0));
    float _367 = (_360 * ((_273.x * cbMtdParam._m0[12u].x) - _252)) + _252;
    float _368 = (_360 * ((_273.y * cbMtdParam._m0[12u].y) - _253)) + _253;
    float _369 = (_360 * ((_273.z * cbMtdParam._m0[12u].z) - _254)) + _254;
    vec4 _388 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _225) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _226) + cbTextureTilingScale._m0[14u].w));
    vec4 _408 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _225) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _226) + cbTextureTilingScale._m0[4u].w));
    vec4 _425 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    float _438 = ((_408.z - _429) * _360) + _429;
    float _441 = ((((_408.x - _427) * _360) + _427) * 2.0) + (-1.0);
    float _443 = ((((_408.y - _428) * _360) + _428) * 2.0) + (-1.0);
    float _444 = dot(vec2(_441, _443), vec2(_441, _443));
    float _904 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _449 = sqrt(1.0 - (isnan(1.0) ? _904 : (isnan(_904) ? 1.0 : min(_904, 1.0))));
    vec4 _465 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _477 = (((_465.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _441;
    float _478 = (((_465.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _443;
    float _481 = fma(_449, _193, fma(_478, _200, _477 * _186));
    float _484 = fma(_449, _194, fma(_478, _201, _477 * _187));
    float _487 = fma(_449, _195, fma(_478, _202, _477 * _188));
    float _491 = inversesqrt(dot(vec3(_481, _484, _487), vec3(_481, _484, _487)));
    vec4 _518 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _225) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _226) + cbTextureTilingScale._m0[11u].w));
    float _520 = _518.x;
    float _521 = 1.0 - _520;
    float _530 = (cbMtdParam._m0[19u].x + dot(vec4(_491 * _481, _491 * _484, _491 * _487, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_520 - _521) * cbMtdParam._m0[24u].z) + _521) * cbMtdParam._m0[21u].z);
    float _915 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _915 : (isnan(_915) ? 1.0 : min(_915, 1.0));
    float _538 = (_531 * ((_388.x * cbMtdParam._m0[18u].x) - _367)) + _367;
    float _539 = (_531 * ((_388.y * cbMtdParam._m0[18u].y) - _368)) + _368;
    float _540 = (_531 * ((_388.z * cbMtdParam._m0[18u].z) - _369)) + _369;
    vec4 _552 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _566 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _568 = _566.x;
    float _586 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _225) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _226) + cbTextureTilingScale._m0[9u].w)).x - _568) * _360) + _568;
    float _590 = ((_552.x - _586) * cbMtdParam._m0[19u].z) + _586;
    float _592 = _590 - (_590 * _531);
    float _596 = (cbMtdParam._m0[19u].w * (_465.z - _438)) + _438;
    vec4 _609 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _225) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _226) + cbTextureTilingScale._m0[15u].w));
    float _616 = (_609.x * 2.0) + (-1.0);
    float _617 = (_609.y * 2.0) + (-1.0);
    float _618 = dot(vec2(_616, _617), vec2(_616, _617));
    float _926 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _626 = ((_609.z - _596) * _531) + _596;
    float _636 = ((sqrt(1.0 - (isnan(1.0) ? _926 : (isnan(_926) ? 1.0 : min(_926, 1.0)))) - _449) * _531) + _449;
    float _639 = (((_616 - _477) * _531) + _477) + (cbMtdParam._m0[21u].x * _477);
    float _640 = (((_617 - _478) * _531) + _478) + (cbMtdParam._m0[21u].x * _478);
    float _642 = cbMtdParam._m0[22u].x + _465.w;
    float _645 = fma(_636, _193, fma(_640, _200, _639 * _186));
    float _648 = fma(_636, _194, fma(_640, _201, _639 * _187));
    float _651 = fma(_636, _195, fma(_640, _202, _639 * _188));
    float _655 = inversesqrt(dot(vec3(_645, _648, _651), vec3(_645, _648, _651)));
    float _937 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _948 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _657 = isnan(1.0) ? _948 : (isnan(_948) ? 1.0 : min(_948, 1.0));
    float _959 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _658 = isnan(1.0) ? _959 : (isnan(_959) ? 1.0 : min(_959, 1.0));
    float _970 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _659 = isnan(1.0) ? _970 : (isnan(_970) ? 1.0 : min(_970, 1.0));
    float _981 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _660 = isnan(1.0) ? _981 : (isnan(_981) ? 1.0 : min(_981, 1.0));
    float _992 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _702 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _712 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _702);
    float _713 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _702);
    float _714 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _702);
    vec4 _719 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _721 = _719.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _781 = sqrt(((_712 * _712) + (_713 * _713)) + (_714 * _714));
        float _787 = (cbMatDynParam._m0[5u].x * _781) + cbMatDynParam._m0[5u].y;
        float _1003 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
        float _788 = isnan(1.0) ? _1003 : (isnan(_1003) ? 1.0 : min(_1003, 1.0));
        float _792 = (cbMatDynParam._m0[5u].z * _781) + cbMatDynParam._m0[5u].w;
        float _1014 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0))) - _788)) + _788) < ((_721 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _820;
    vec4 _743;
    float _750;
    float _751;
    float _752;
    float _753;
    float _757;
    vec4 _761;
    float _763;
    float _764;
    bool _775;
    for (;;)
    {
        _743 = cbInstanceData._m0[(_205 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _747 = (cbMtdParam._m0[0u].x * _658) * _743.x;
        float _748 = (cbMtdParam._m0[0u].y * _659) * _743.y;
        float _749 = (cbMtdParam._m0[0u].z * _660) * _743.z;
        float _1025 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
        _750 = isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0));
        float _1036 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        _751 = isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0));
        float _1047 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
        _752 = isnan(1.0) ? _1047 : (isnan(_1047) ? 1.0 : min(_1047, 1.0));
        _753 = _657 * TEXCOORD_5.w;
        _757 = cbInstanceData._m0[_205 + 6u].w;
        float _758 = _721 + (-0.5);
        _761 = cbMtdParam._m0[1u];
        _763 = _761.y * _758;
        _764 = _758 * 0.999000012874603271484375;
        _775 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_775)
        {
            if ((cbInstanceData._m0[_205 + 7u].x + _764) < 0.5)
            {
                _820 = true;
                break;
            }
        }
        if ((_743.w < 1.0) && ((_743.w + _764) < 0.5))
        {
            _820 = true;
            break;
        }
        if ((_763 + 1.0) < _761.x)
        {
            _820 = true;
            break;
        }
        _820 = false;
        break;
    }
    if (_820)
    {
        discard_state = true;
    }
    bool _846 = cbMtdParam._m0[1u].z != 0.0;
    float _847 = _846 ? _757 : 0.0;
    SV_Target.x = ((_645 * 0.5) * _655) + 0.500488758087158203125;
    SV_Target.y = ((_648 * 0.5) * _655) + 0.500488758087158203125;
    SV_Target.z = ((_651 * 0.5) * _655) + 0.500488758087158203125;
    SV_Target.w = _847;
    SV_Target_1.x = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
    SV_Target_1.y = isnan(1.0) ? _937 : (isnan(_937) ? 1.0 : min(_937, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _846 ? _757 : _753;
    SV_Target_2.x = _750;
    SV_Target_2.y = _751;
    SV_Target_2.z = _752;
    SV_Target_2.w = _846 ? _757 : (float(floatBitsToUint(cbInstanceData._m0[_205 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _847;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _847;
    discard_exit();
}


