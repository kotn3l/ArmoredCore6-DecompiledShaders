#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1465;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _235 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _236 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _237 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _243 = inversesqrt(dot(vec3(_235, _236, _237), vec3(_235, _236, _237)));
    float _250 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4072 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _4083 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _4094 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    uint _284 = uint(roundEven(NORMAL.w)) * 13u;
    uint _289 = _284 + 1u;
    uint _293 = _284 + 2u;
    float _302 = sqrt(((cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x) + (cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x)) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x));
    float _303 = _302 * TEXCOORD.z;
    float _304 = _302 * TEXCOORD.w;
    vec4 _317 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _303) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _304) + cbTextureTilingScale._m0[13u].w));
    vec4 _340 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _366 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _371 = _366.x * cbMtdParam._m0[11u].x;
    float _372 = _366.y * cbMtdParam._m0[11u].y;
    float _373 = _366.z * cbMtdParam._m0[11u].z;
    vec4 _392 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _303) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _304) + cbTextureTilingScale._m0[5u].w));
    vec4 _411 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _443 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _445 = _443.x;
    float _457 = dot(vec4(_445, _443.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _474 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _411.x) * 2.0) - ((((_445 - _457) * cbMtdParam._m0[23u].w) + _457) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4105 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _475 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
    float _482 = (_475 * ((_392.x * cbMtdParam._m0[12u].x) - _371)) + _371;
    float _483 = (_475 * ((_392.y * cbMtdParam._m0[12u].y) - _372)) + _372;
    float _484 = (_475 * ((_392.z * cbMtdParam._m0[12u].z) - _373)) + _373;
    vec4 _501 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _303) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _304) + cbTextureTilingScale._m0[3u].w));
    vec4 _521 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _523 = _521.x;
    float _533 = dot(vec4(_523, _521.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _547 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _411.y) * 2.0) - ((((_523 - _533) * cbMtdParam._m0[23u].w) + _533) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4116 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    float _548 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
    float _558 = (_340.x * cbMtdParam._m0[9u].x) * ((_548 * ((_501.x * cbMtdParam._m0[13u].x) - _482)) + _482);
    float _559 = (_340.y * cbMtdParam._m0[9u].y) * ((_548 * ((_501.y * cbMtdParam._m0[13u].y) - _483)) + _483);
    float _560 = (_340.z * cbMtdParam._m0[9u].z) * ((_548 * ((_501.z * cbMtdParam._m0[13u].z) - _484)) + _484);
    float _564 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _317.x) * _558;
    float _567 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _317.y) * _559;
    float _570 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _317.z) * _560;
    float _578 = (((_558 - _564) * (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0)))) + _564) * 4.55000019073486328125;
    float _580 = (((_559 - _567) * (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0)))) + _567) * 4.55000019073486328125;
    float _582 = (((_560 - _570) * (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0)))) + _570) * 4.55000019073486328125;
    vec4 _601 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _303) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _304) + cbTextureTilingScale._m0[14u].w));
    vec4 _620 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _303) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _304) + cbTextureTilingScale._m0[20u].w));
    vec4 _643 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _303) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _304) + cbTextureTilingScale._m0[4u].w));
    vec4 _660 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _662 = _660.x;
    float _663 = _660.y;
    float _664 = _660.z;
    float _671 = ((_643.x - _662) * _475) + _662;
    float _672 = ((_643.y - _663) * _475) + _663;
    float _673 = ((_643.z - _664) * _475) + _664;
    vec4 _685 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _303) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _304) + cbTextureTilingScale._m0[2u].w));
    float _698 = ((_685.z - _673) * _548) + _673;
    float _701 = ((((_685.x - _671) * _548) + _671) * 2.0) + (-1.0);
    float _702 = ((((_685.y - _672) * _548) + _672) * 2.0) + (-1.0);
    float _703 = dot(vec2(_701, _702), vec2(_701, _702));
    float _4127 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _708 = sqrt(1.0 - (isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))));
    vec4 _722 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _747 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _303) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _304) + cbTextureTilingScale._m0[11u].w));
    float _749 = _747.x;
    float _750 = 1.0 - _749;
    float _766 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_749 - _750) * cbMtdParam._m0[24u].z) + _750) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4138 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _767 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
    float _774 = (_767 * ((_601.x * cbMtdParam._m0[18u].x) - _578)) + _578;
    float _775 = (_767 * ((_601.y * cbMtdParam._m0[18u].y) - _580)) + _580;
    float _776 = (_767 * ((_601.z * cbMtdParam._m0[18u].z) - _582)) + _582;
    vec4 _802 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _804 = _802.x;
    float _821 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _303) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _304) + cbTextureTilingScale._m0[9u].w)).x - _804) * _475) + _804;
    float _838 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _303) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _304) + cbTextureTilingScale._m0[21u].w)).x - _821) * _548) + _821;
    float _842 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _838) * cbMtdParam._m0[19u].z) + _838;
    float _844 = _842 - (_842 * _767);
    float _849 = (((_620.z - _698) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _698;
    float _853 = ((_722.z - _849) * cbMtdParam._m0[19u].w) + _849;
    vec4 _866 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _303) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _304) + cbTextureTilingScale._m0[15u].w));
    float _873 = (_866.x * 2.0) + (-1.0);
    float _874 = (_866.y * 2.0) + (-1.0);
    float _875 = dot(vec2(_873, _874), vec2(_873, _874));
    float _4149 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _883 = (_767 * (_866.z - _853)) + _853;
    float _892 = (_701 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_620.x * 2.0) + (-1.0)))) + (((_722.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _893 = (_702 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_620.y * 2.0) + (-1.0)))) + (((_722.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _905 = (((_873 - _892) + (cbMtdParam._m0[21u].x * _892)) * _767) + _892;
    float _906 = (((_874 - _893) + (cbMtdParam._m0[21u].x * _893)) * _767) + _893;
    float _907 = (_767 * (sqrt(1.0 - (isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0)))) - _708)) + _708;
    float _911 = cbMtdParam._m0[22u].x + _722.w;
    float _914 = fma(_907, _250 * NORMAL.x, fma(_906, _257 * TANGENT.x, (_243 * _235) * _905));
    float _917 = fma(_907, _250 * NORMAL.y, fma(_906, _257 * TANGENT.y, (_243 * _236) * _905));
    float _920 = fma(_907, _250 * NORMAL.z, fma(_906, _257 * TANGENT.z, (_243 * _237) * _905));
    float _924 = inversesqrt(dot(vec3(_914, _917, _920), vec3(_914, _917, _920)));
    float _925 = _924 * _914;
    float _926 = _924 * _917;
    float _927 = _924 * _920;
    float _4160 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _928 = isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0));
    float _4171 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _4182 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _4193 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _4204 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _4215 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
    float _933 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _947 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _988 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _998 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _988);
    float _999 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _988);
    float _1000 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _988);
    float _1004 = inversesqrt(dot(vec3(_998, _999, _1000), vec3(_998, _999, _1000)));
    float _1005 = _998 * _1004;
    float _1006 = _999 * _1004;
    float _1007 = _1000 * _1004;
    float _1013 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1014 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1032 = fma(_927, cbSceneParam._m0[5u].z, fma(_926, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _925));
    float _1035 = fma(_927, cbSceneParam._m0[6u].z, fma(_926, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _925));
    float _1038 = fma(_927, cbSceneParam._m0[7u].z, fma(_926, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _925));
    uint _1052 = (_284 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1058 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0)))) * cbInstanceData._m0[_1052].x;
    float _1059 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0)))) * cbInstanceData._m0[_1052].y;
    float _1060 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0)))) * cbInstanceData._m0[_1052].z;
    float _4226 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1061 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _4237 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _1062 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _4248 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1063 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
    float _1064 = 1.0 - _933;
    float _1065 = _1061 * _1064;
    float _1066 = _1062 * _1064;
    float _1067 = _1063 * _1064;
    float _1072 = (_1061 + (-0.039999999105930328369140625)) * _933;
    float _1073 = (_1062 + (-0.039999999105930328369140625)) * _933;
    float _1074 = (_1063 + (-0.039999999105930328369140625)) * _933;
    float _1075 = _1072 + 0.039999999105930328369140625;
    float _1077 = _1073 + 0.039999999105930328369140625;
    float _1078 = _1074 + 0.039999999105930328369140625;
    vec4 _1087 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1013, cbSceneParam._m0[86u].y * _1014));
    float _1091 = ((isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * TEXCOORD_5.w) * _1087.x;
    float _1092 = dot(vec3(_925, _926, _927), vec3(_1005, _1006, _1007));
    float _1095 = _1092 * 2.0;
    float _1099 = (_1095 * _925) - _1005;
    float _1100 = (_1095 * _926) - _1006;
    float _1101 = (_1095 * _927) - _1007;
    float _1105 = abs(dot(vec3(_1005, _1006, _1007), vec3(_925, _926, _927)));
    float _4259 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1107 = sqrt(_928);
    float _1120 = exp2((_1107 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1107 * 3.0));
    float _1126 = (1.0 - _1120) * ((_1107 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1127 = _1120 * _1107;
    float _1155 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1159 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1464;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1189 = fma(_1163, cbModelParam._m0[26u].z, fma(_1159, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1155));
        float _1193 = fma(_1163, cbModelParam._m0[27u].z, fma(_1159, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1155));
        float _1197 = fma(_1163, cbModelParam._m0[28u].z, fma(_1159, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1155));
        float _1222 = _1155 + _925;
        float _1223 = _1159 + _926;
        float _1224 = _1163 + _927;
        float _1234 = fma(_1224, cbModelParam._m0[26u].z, fma(_1223, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1222)) - _1189;
        float _1235 = fma(_1224, cbModelParam._m0[27u].z, fma(_1223, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1222)) - _1193;
        float _1236 = fma(_1224, cbModelParam._m0[28u].z, fma(_1223, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1222)) - _1197;
        float _1240 = inversesqrt(dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236)));
        float _1253 = ((_1240 * _1234) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1189 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1240 * _1235) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1193 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1240 * _1236) / cbModelParam._m0[34u].z) + ((((((_1197 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        float _1292 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1258.x + (-0.5));
        float _1294 = _1292 * (_1258.y + (-0.5));
        float _1295 = _1292 * (_1258.z + (-0.5));
        float _1302 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1265.x + (-0.5));
        float _1304 = _1302 * (_1265.y + (-0.5));
        float _1305 = _1302 * (_1265.z + (-0.5));
        float _1312 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1272.x + (-0.5));
        float _1314 = _1312 * (_1272.y + (-0.5));
        float _1315 = _1312 * (_1272.z + (-0.5));
        float _1322 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1279.x + (-0.5));
        float _1324 = _1322 * (_1279.y + (-0.5));
        float _1325 = _1322 * (_1279.z + (-0.5));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = _1293 * 0.5;
        float _1330 = _1303 * 0.5;
        float _1331 = _1313 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1346 = (dot(vec3(_925, _926, _927), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4285 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1356 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _4296 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _4307 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0))) * (_1358 + 1.0))) + _1363) * _1326;
        float _1373 = _1294 * 0.5;
        float _1374 = _1304 * 0.5;
        float _1375 = _1314 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_925, _926, _927), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _4318 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4329 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4340 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0))) * (_1400 + 1.0))) + _1405) * _1327;
        float _1415 = _1295 * 0.5;
        float _1416 = _1305 * 0.5;
        float _1417 = _1315 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_925, _926, _927), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _4351 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4362 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4373 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0))) * (_1442 + 1.0))) + _1447) * _1328;
        _1464 = _1295;
        _1466 = _1294;
        _1467 = _1293;
        _1468 = _1305;
        _1469 = _1304;
        _1470 = _1303;
        _1471 = _1315;
        _1472 = _1314;
        _1473 = _1313;
        _1474 = _1328;
        _1475 = _1327;
        _1476 = _1326;
        _1477 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
    }
    else
    {
        _1464 = _1465;
        _1466 = _1465;
        _1467 = _1465;
        _1468 = _1465;
        _1469 = _1465;
        _1470 = _1465;
        _1471 = _1465;
        _1472 = _1465;
        _1473 = _1465;
        _1474 = _1465;
        _1475 = _1465;
        _1476 = _1465;
        _1477 = 0.0;
        _1478 = 0.0;
        _1479 = 0.0;
    }
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1503 = fma(_1163, cbModelParam._m0[30u].z, fma(_1159, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1155));
        float _1507 = fma(_1163, cbModelParam._m0[31u].z, fma(_1159, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1155));
        float _1511 = fma(_1163, cbModelParam._m0[32u].z, fma(_1159, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1155));
        float _1534 = _1155 + _925;
        float _1535 = _1159 + _926;
        float _1536 = _1163 + _927;
        float _1546 = fma(_1536, cbModelParam._m0[30u].z, fma(_1535, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1534)) - _1503;
        float _1547 = fma(_1536, cbModelParam._m0[31u].z, fma(_1535, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1534)) - _1507;
        float _1548 = fma(_1536, cbModelParam._m0[32u].z, fma(_1535, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1534)) - _1511;
        float _1552 = inversesqrt(dot(vec3(_1546, _1547, _1548), vec3(_1546, _1547, _1548)));
        float _1565 = ((_1552 * _1546) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1503 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1566 = ((_1552 * _1547) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1507 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1567 = ((_1552 * _1548) / cbModelParam._m0[35u].z) + ((((((_1511 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1569 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1576 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1583 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1590 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        float _1602 = exp2((_1569.w + (-0.5)) * 20.0) * 2.0;
        float _1603 = _1602 * (_1569.x + (-0.5));
        float _1604 = _1602 * (_1569.y + (-0.5));
        float _1605 = _1602 * (_1569.z + (-0.5));
        float _1612 = exp2((_1576.w + (-0.5)) * 20.0) * 2.0;
        float _1613 = _1612 * (_1576.x + (-0.5));
        float _1614 = _1612 * (_1576.y + (-0.5));
        float _1615 = _1612 * (_1576.z + (-0.5));
        float _1622 = exp2((_1583.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1583.x + (-0.5));
        float _1624 = _1622 * (_1583.y + (-0.5));
        float _1625 = _1622 * (_1583.z + (-0.5));
        float _1632 = exp2((_1590.w + (-0.5)) * 20.0) * 2.0;
        float _1633 = _1632 * (_1590.x + (-0.5));
        float _1634 = _1632 * (_1590.y + (-0.5));
        float _1635 = _1632 * (_1590.z + (-0.5));
        float _1636 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1637 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1638 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1639 = _1603 * 0.5;
        float _1640 = _1613 * 0.5;
        float _1641 = _1623 * 0.5;
        float _1642 = dot(vec3(_1639, _1640, _1641), vec3(_1639, _1640, _1641));
        float _1647 = (_1642 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1642);
        float _1655 = (dot(vec3(_925, _926, _927), vec3(_1647 * _1639, _1647 * _1640, _1647 * _1641)) + 1.0) * 0.5;
        float _4414 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1664 = sqrt(((_1640 * _1640) + (_1639 * _1639)) + (_1641 * _1641)) / (_1636 + 9.9999997473787516355514526367188e-06);
        float _4425 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
        float _1666 = _1665 * 2.0;
        float _1670 = (1.0 - _1665) / (_1665 + 1.0);
        float _4436 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _1680 = ((((1.0 - _1671) * (_1666 + 2.0)) * exp2(log2(isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * (_1666 + 1.0))) + _1671) * _1636;
        float _1681 = _1604 * 0.5;
        float _1682 = _1614 * 0.5;
        float _1683 = _1624 * 0.5;
        float _1684 = dot(vec3(_1681, _1682, _1683), vec3(_1681, _1682, _1683));
        float _1689 = (_1684 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1684);
        float _1697 = (dot(vec3(_925, _926, _927), vec3(_1689 * _1681, _1689 * _1682, _1689 * _1683)) + 1.0) * 0.5;
        float _4447 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1706 = sqrt(((_1682 * _1682) + (_1681 * _1681)) + (_1683 * _1683)) / (_1637 + 9.9999997473787516355514526367188e-06);
        float _4458 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
        float _1708 = _1707 * 2.0;
        float _1712 = (1.0 - _1707) / (_1707 + 1.0);
        float _4469 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
        float _1722 = ((((1.0 - _1713) * (_1708 + 2.0)) * exp2(log2(isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0))) * (_1708 + 1.0))) + _1713) * _1637;
        float _1723 = _1605 * 0.5;
        float _1724 = _1615 * 0.5;
        float _1725 = _1625 * 0.5;
        float _1726 = dot(vec3(_1723, _1724, _1725), vec3(_1723, _1724, _1725));
        float _1731 = (_1726 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1726);
        float _1739 = (dot(vec3(_925, _926, _927), vec3(_1731 * _1723, _1731 * _1724, _1731 * _1725)) + 1.0) * 0.5;
        float _4480 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1748 = sqrt(((_1724 * _1724) + (_1723 * _1723)) + (_1725 * _1725)) / (_1638 + 9.9999997473787516355514526367188e-06);
        float _4491 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1749 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _1750 = _1749 * 2.0;
        float _1754 = (1.0 - _1749) / (_1749 + 1.0);
        float _4502 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
        float _1764 = ((((1.0 - _1755) * (_1750 + 2.0)) * exp2(log2(isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))) * (_1750 + 1.0))) + _1755) * _1638;
        _1772 = _1605;
        _1773 = _1604;
        _1774 = _1603;
        _1775 = _1615;
        _1776 = _1614;
        _1777 = _1613;
        _1778 = _1625;
        _1779 = _1624;
        _1780 = _1623;
        _1781 = _1638;
        _1782 = _1637;
        _1783 = _1636;
        _1784 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0)));
        _1785 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
        _1786 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0)));
    }
    else
    {
        _1772 = _1465;
        _1773 = _1465;
        _1774 = _1465;
        _1775 = _1465;
        _1776 = _1465;
        _1777 = _1465;
        _1778 = _1465;
        _1779 = _1465;
        _1780 = _1465;
        _1781 = _1465;
        _1782 = _1465;
        _1783 = _1465;
        _1784 = 0.0;
        _1785 = 0.0;
        _1786 = 0.0;
    }
    float _1796 = (cbModelParam._m0[1u].x * (_1784 - _1477)) + _1477;
    float _1797 = (cbModelParam._m0[1u].x * (_1785 - _1478)) + _1478;
    float _1798 = (cbModelParam._m0[1u].x * (_1786 - _1479)) + _1479;
    float _1819 = fma(_1798, cbSceneParam._m0[89u].z, fma(_1797, cbSceneParam._m0[89u].y, _1796 * cbSceneParam._m0[89u].x));
    float _1822 = fma(_1798, cbSceneParam._m0[90u].z, fma(_1797, cbSceneParam._m0[90u].y, _1796 * cbSceneParam._m0[90u].x));
    float _1825 = fma(_1798, cbSceneParam._m0[91u].z, fma(_1797, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1796));
    float _1840 = _1099 * 0.5;
    float _1841 = _1100 * 0.5;
    float _1842 = _1101 * 0.5;
    float _1843 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1774, _1777, _1780, _1783));
    float _1846 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1773, _1776, _1779, _1782));
    float _1849 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1772, _1775, _1778, _1781));
    float _1883;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1856 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1464, _1468, _1471, _1474));
        float _1860 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1466, _1469, _1472, _1475));
        float _1864 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1871 = dot(vec4(cbModelParam._m0[39u]), vec4(_1840, _1841, _1842, 1.0));
        _1883 = dot(vec3(isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0)), isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1871) ? 0.0 : (isnan(0.0) ? _1871 : max(0.0, _1871))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1883 = 1.0;
    }
    float _1894;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1885 = dot(vec4(cbModelParam._m0[40u]), vec4(_1840, _1841, _1842, 1.0));
        _1894 = dot(vec3(isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0)), isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1885) ? 0.0 : (isnan(0.0) ? _1885 : max(0.0, _1885))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1894 = 1.0;
    }
    float _1898 = (_1894 * cbModelParam._m0[1u].x) + (_1883 * (1.0 - cbModelParam._m0[1u].x));
    float _1908 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _928);
    float _1909 = isnan(_1908) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1908 : min(cbModelParam._m0[25u].z, _1908));
    float _1989;
    float _1991;
    float _1993;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1956 = fma(_1163, cbModelParam._m0[13u].z, fma(_1159, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1155)) + cbModelParam._m0[13u].w;
        float _1960 = fma(_1163, cbModelParam._m0[14u].z, fma(_1159, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1155)) + cbModelParam._m0[14u].w;
        float _1964 = fma(_1163, cbModelParam._m0[15u].z, fma(_1159, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1155)) + cbModelParam._m0[15u].w;
        float _1967 = fma(_1101, cbModelParam._m0[13u].z, fma(_1100, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1099));
        float _1970 = fma(_1101, cbModelParam._m0[14u].z, fma(_1100, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1099));
        float _1973 = fma(_1101, cbModelParam._m0[15u].z, fma(_1100, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1099));
        float _2001;
        if (_1967 > 0.0)
        {
            _2001 = abs((1.0 - _1956) / _1967);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1967 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1956 + 1.0) / _1967);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2001 = frontier_phi_14_12_ladder;
        }
        float _2172;
        if (_1970 > 0.0)
        {
            _2172 = abs((1.0 - _1960) / _1970);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1970 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1960 + 1.0) / _1970);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2172 = frontier_phi_23_19_ladder;
        }
        float _2467;
        if (_1973 > 0.0)
        {
            _2467 = abs((1.0 - _1964) / _1973);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1964 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2467 = frontier_phi_35_30_ladder;
        }
        float _2469 = isnan(_2172) ? _2001 : (isnan(_2001) ? _2172 : min(_2001, _2172));
        float _2470 = isnan(_2467) ? _2469 : (isnan(_2469) ? _2467 : min(_2469, _2467));
        float _2474 = (_2470 * _1967) + _1956;
        float _2475 = (_2470 * _1970) + _1960;
        float _2476 = (_2470 * _1973) + _1964;
        float _2477 = _2470 * 9.9999997473787516355514526367188e-05;
        float _2479 = (-1.0) - _2477;
        float _2481 = _2477 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2476 > _2481) || ((_2476 < _2479) || ((_2475 > _2481) || ((_2475 < _2479) || ((_2474 < _2479) || (_2474 > _2481))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2621 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2476, cbModelParam._m0[9u].z, fma(_2475, cbModelParam._m0[9u].y, _2474 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2476, cbModelParam._m0[10u].z, fma(_2475, cbModelParam._m0[10u].y, _2474 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2476, cbModelParam._m0[11u].z, fma(_2475, cbModelParam._m0[11u].y, _2474 * cbModelParam._m0[11u].x))), _1909);
            frontier_phi_13_35_ladder = _2621.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2621.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2621.x * cbModelParam._m0[1u].y;
        }
        _1989 = frontier_phi_13_35_ladder_2;
        _1991 = frontier_phi_13_35_ladder_1;
        _1993 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1977 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1099, _1100, _1101), _1909);
        _1989 = _1977.x * cbModelParam._m0[1u].y;
        _1991 = _1977.y * cbModelParam._m0[1u].y;
        _1993 = _1977.z * cbModelParam._m0[1u].y;
    }
    float _1997 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _928);
    float _1998 = isnan(_1997) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1997 : min(cbModelParam._m0[25u].w, _1997));
    float _2087;
    float _2089;
    float _2091;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2051 = fma(_1163, cbModelParam._m0[21u].z, fma(_1159, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1155)) + cbModelParam._m0[21u].w;
        float _2055 = fma(_1163, cbModelParam._m0[22u].z, fma(_1159, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1155)) + cbModelParam._m0[22u].w;
        float _2059 = fma(_1163, cbModelParam._m0[23u].z, fma(_1159, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1155)) + cbModelParam._m0[23u].w;
        float _2062 = fma(_1101, cbModelParam._m0[21u].z, fma(_1100, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1099));
        float _2065 = fma(_1101, cbModelParam._m0[22u].z, fma(_1100, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1099));
        float _2068 = fma(_1101, cbModelParam._m0[23u].z, fma(_1100, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1099));
        float _2177;
        if (_2062 > 0.0)
        {
            _2177 = abs((1.0 - _2051) / _2062);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2062 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2051 + 1.0) / _2062);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2177 = frontier_phi_25_21_ladder;
        }
        float _2494;
        if (_2065 > 0.0)
        {
            _2494 = abs((1.0 - _2055) / _2065);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2055 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2494 = frontier_phi_37_32_ladder;
        }
        float _2832;
        if (_2068 > 0.0)
        {
            _2832 = abs((1.0 - _2059) / _2068);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2059 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2832 = frontier_phi_47_44_ladder;
        }
        float _2834 = isnan(_2494) ? _2177 : (isnan(_2177) ? _2494 : min(_2177, _2494));
        float _2835 = isnan(_2832) ? _2834 : (isnan(_2834) ? _2832 : min(_2834, _2832));
        float _2839 = (_2835 * _2062) + _2051;
        float _2840 = (_2835 * _2065) + _2055;
        float _2841 = (_2835 * _2068) + _2059;
        float _2842 = _2835 * 9.9999997473787516355514526367188e-05;
        float _2843 = (-1.0) - _2842;
        float _2845 = _2842 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2841 > _2845) || ((_2841 < _2843) || ((_2840 > _2845) || ((_2840 < _2843) || ((_2839 < _2843) || (_2839 > _2845))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2963 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2841, cbModelParam._m0[17u].z, fma(_2840, cbModelParam._m0[17u].y, _2839 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2841, cbModelParam._m0[18u].z, fma(_2840, cbModelParam._m0[18u].y, _2839 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2841, cbModelParam._m0[19u].z, fma(_2840, cbModelParam._m0[19u].y, _2839 * cbModelParam._m0[19u].x))), _1998);
            frontier_phi_22_47_ladder = _2963.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2963.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2963.x * cbModelParam._m0[1u].z;
        }
        _2087 = frontier_phi_22_47_ladder_2;
        _2089 = frontier_phi_22_47_ladder_1;
        _2091 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2071 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1099, _1100, _1101), _1998);
        _2087 = _2071.x * cbModelParam._m0[1u].z;
        _2089 = _2071.y * cbModelParam._m0[1u].z;
        _2091 = _2071.z * cbModelParam._m0[1u].z;
    }
    float _2104 = (((_1126 * _1075) + _1127) * _1091) * ((cbModelParam._m0[1u].w * (_2087 - _1989)) + _1989);
    float _2106 = (((_1126 * _1077) + _1127) * _1091) * ((cbModelParam._m0[1u].w * (_2089 - _1991)) + _1991);
    float _2108 = (((_1126 * _1078) + _1127) * _1091) * ((cbModelParam._m0[1u].w * (_2091 - _1993)) + _1993);
    float _2111 = fma(_2108, cbSceneParam._m0[89u].z, fma(_2106, cbSceneParam._m0[89u].y, _2104 * cbSceneParam._m0[89u].x));
    float _2114 = fma(_2108, cbSceneParam._m0[90u].z, fma(_2106, cbSceneParam._m0[90u].y, _2104 * cbSceneParam._m0[90u].x));
    float _2117 = fma(_2108, cbSceneParam._m0[91u].z, fma(_2106, cbSceneParam._m0[91u].y, _2104 * cbSceneParam._m0[91u].x));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2155 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2159 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2163 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2164 = _2151 / _2163;
    float _2165 = _2155 / _2163;
    float _2166 = _2159 / _2163;
    float _2313;
    float _2314;
    float _2315;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2193 = ((uint(_2166 > cbSceneParam._m0[59u].y) + uint(_2166 > cbSceneParam._m0[59u].x)) + uint(_2166 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2194 = _2193 + 43u;
        uint _2202 = _2193 + 44u;
        uint _2210 = _2193 + 45u;
        uint _2218 = _2193 + 46u;
        float _2229 = fma(_2163, cbSceneParam._m0[_2194].w, fma(_2159, cbSceneParam._m0[_2194].z, fma(_2155, cbSceneParam._m0[_2194].y, _2151 * cbSceneParam._m0[_2194].x)));
        float _2233 = fma(_2163, cbSceneParam._m0[_2202].w, fma(_2159, cbSceneParam._m0[_2202].z, fma(_2155, cbSceneParam._m0[_2202].y, _2151 * cbSceneParam._m0[_2202].x)));
        float _2241 = fma(_2163, cbSceneParam._m0[_2218].w, fma(_2159, cbSceneParam._m0[_2218].z, fma(_2155, cbSceneParam._m0[_2218].y, _2151 * cbSceneParam._m0[_2218].x)));
        float _2246 = cbSceneParam._m0[33u].z * _2241;
        float _2248 = cbSceneParam._m0[33u].w * _2241;
        float _2251 = fma(_2163, cbSceneParam._m0[_2210].w, fma(_2159, cbSceneParam._m0[_2210].z, fma(_2155, cbSceneParam._m0[_2210].y, _2151 * cbSceneParam._m0[_2210].x))) / _2241;
        float _2299 = (cbSceneParam._m0[33u].x - sqrt(((_2165 * _2165) + (_2164 * _2164)) + (_2166 * _2166))) * cbSceneParam._m0[33u].y;
        float _4628 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
        float _2306 = (isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2246 + _2229) / _2241, (_2248 + _2233) / _2241), _2251), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2248 + _2229) / _2241, (_2233 - _2246) / _2241), _2251), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2229 - _2246) / _2241, (_2233 - _2248) / _2241), _2251), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2229 - _2248) / _2241, (_2246 + _2233) / _2241), _2251), 0.0)).x), vec4(0.25)));
        _2313 = 1.0 - (_2306 * cbSceneParam._m0[34u].x);
        _2314 = 1.0 - (_2306 * cbSceneParam._m0[34u].y);
        _2315 = 1.0 - (_2306 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2313 = 1.0;
        _2314 = 1.0;
        _2315 = 1.0;
    }
    float _2379;
    float _2381;
    float _2383;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2367 = fma(_2163, cbSceneParam._m0[63u].w, fma(_2159, cbSceneParam._m0[63u].z, fma(_2155, cbSceneParam._m0[63u].y, _2151 * cbSceneParam._m0[63u].x)));
        float _2368 = fma(_2163, cbSceneParam._m0[60u].w, fma(_2159, cbSceneParam._m0[60u].z, fma(_2155, cbSceneParam._m0[60u].y, _2151 * cbSceneParam._m0[60u].x))) / _2367;
        float _2369 = fma(_2163, cbSceneParam._m0[61u].w, fma(_2159, cbSceneParam._m0[61u].z, fma(_2155, cbSceneParam._m0[61u].y, _2151 * cbSceneParam._m0[61u].x))) / _2367;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2368 >= cbSceneParam._m0[64u].x) && (_2369 >= cbSceneParam._m0[64u].y)) && (_2368 <= cbSceneParam._m0[64u].z)) && (_2369 <= cbSceneParam._m0[64u].w))
        {
            float _2507 = fma(_2163, cbSceneParam._m0[62u].w, fma(_2159, cbSceneParam._m0[62u].z, fma(_2155, cbSceneParam._m0[62u].y, _2151 * cbSceneParam._m0[62u].x))) / _2367;
            float _2511 = isnan(cbSceneParam._m0[41u].w) ? _2507 : (isnan(_2507) ? cbSceneParam._m0[41u].w : max(_2507, cbSceneParam._m0[41u].w));
            float _2554 = (cbSceneParam._m0[33u].x - sqrt(((_2165 * _2165) + (_2164 * _2164)) + (_2166 * _2166))) * cbSceneParam._m0[33u].y;
            float _4644 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
            float _2561 = (isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2368, cbSceneParam._m0[33u].w + _2369), _2511), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2368, _2369 - cbSceneParam._m0[33u].z), _2511), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2368 - cbSceneParam._m0[33u].z, _2369 - cbSceneParam._m0[33u].w), _2511), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2368 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2369), _2511), 0.0)).x), vec4(0.25)));
            float _2565 = 1.0 - (_2561 * cbSceneParam._m0[34u].x);
            float _2566 = 1.0 - (_2561 * cbSceneParam._m0[34u].y);
            float _2567 = 1.0 - (_2561 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2567) ? _2315 : (isnan(_2315) ? _2567 : min(_2315, _2567));
            frontier_phi_34_33_ladder_1 = isnan(_2566) ? _2314 : (isnan(_2314) ? _2566 : min(_2314, _2566));
            frontier_phi_34_33_ladder_2 = isnan(_2565) ? _2313 : (isnan(_2313) ? _2565 : min(_2313, _2565));
        }
        else
        {
            frontier_phi_34_33_ladder = _2315;
            frontier_phi_34_33_ladder_1 = _2314;
            frontier_phi_34_33_ladder_2 = _2313;
        }
        _2379 = frontier_phi_34_33_ladder_2;
        _2381 = frontier_phi_34_33_ladder_1;
        _2383 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2379 = _2313;
        _2381 = _2314;
        _2383 = _2315;
    }
    uvec4 _2388 = floatBitsToUint(cbInstanceData._m0[_284 + 5u]);
    uint _2390 = _2388.x * 14u;
    uint _2391 = _2390 + 13u;
    float _2398 = _1091 + (-1.0);
    float _2403 = (cbLight._m0[_2391].x * _2398) + 1.0;
    float _2404 = (cbLight._m0[_2391].y * _2398) + 1.0;
    float _2405 = (cbLight._m0[_2391].z * _2398) + 1.0;
    float _2406 = (cbLight._m0[_2391].w * _2398) + 1.0;
    uint _2407 = _2390 + 5u;
    float _2413 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
    uint _2417 = _2390 + 4u;
    float _2426 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
    uint _2430 = _2390 | 1u;
    float _2441 = dot(vec3(cbLight._m0[_2390].xyz), vec3(_925, _926, _927));
    float _2444 = dot(vec3(cbLight._m0[_2430].xyz), vec3(_925, _926, _927));
    float _4680 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
    float _4691 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
    float _2449 = (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * 0.3183098733425140380859375;
    float _2451 = (isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0))) * 0.3183098733425140380859375;
    float _2458 = ((cbLight._m0[_2407].x * _2413) * _2451) + (((cbLight._m0[_2417].x * _2379) * _2426) * _2449);
    float _2459 = ((_2413 * cbLight._m0[_2407].y) * _2451) + (((cbLight._m0[_2417].y * _2381) * _2426) * _2449);
    float _2460 = ((_2413 * cbLight._m0[_2407].z) * _2451) + (((cbLight._m0[_2417].z * _2383) * _2426) * _2449);
    uvec4 _2464 = floatBitsToUint(cbLight._m0[_2390 + 12u]);
    bool _2466 = _2464.x == 0u;
    float _2568;
    float _2570;
    float _2572;
    if (_2466)
    {
        _2568 = _2458;
        _2570 = _2459;
        _2572 = _2460;
    }
    else
    {
        uint _2576 = _2390 + 6u;
        float _2592 = (dot(vec3(cbLight._m0[_2390 + 2u].xyz), vec3(_925, _926, _927)) * 0.5) + 0.5;
        float _2593 = _2592 * _2592;
        float _4702 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
        float _2594 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _2595 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
        _2568 = (((cbLight._m0[_2576].x * 0.3183098733425140380859375) * _2594) * _2595) + _2458;
        _2570 = (((cbLight._m0[_2576].y * 0.3183098733425140380859375) * _2594) * _2595) + _2459;
        _2572 = (((cbLight._m0[_2576].z * 0.3183098733425140380859375) * _2594) * _2595) + _2460;
    }
    bool _2575 = _2464.y == 0u;
    float _2630;
    float _2632;
    float _2634;
    if (_2575)
    {
        _2630 = _2568;
        _2632 = _2570;
        _2634 = _2572;
    }
    else
    {
        uint _2803 = _2390 + 7u;
        float _2819 = (dot(vec3(cbLight._m0[_2390 + 3u].xyz), vec3(_925, _926, _927)) * 0.5) + 0.5;
        float _2820 = _2819 * _2819;
        float _4718 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        float _2821 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2822 = isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0));
        _2630 = (((cbLight._m0[_2803].x * 0.3183098733425140380859375) * _2821) * _2822) + _2568;
        _2632 = (((cbLight._m0[_2803].y * 0.3183098733425140380859375) * _2821) * _2822) + _2570;
        _2634 = (((cbLight._m0[_2803].z * 0.3183098733425140380859375) * _2821) * _2822) + _2572;
    }
    uint _2637 = _2390 + 8u;
    float _2650 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2390].w)) * _928) * 0.949999988079071044921875);
    float _2651 = _2650 * _2650;
    float _2652 = cbLight._m0[_2390].x + _1005;
    float _2653 = cbLight._m0[_2390].y + _1006;
    float _2654 = cbLight._m0[_2390].z + _1007;
    float _2658 = inversesqrt(dot(vec3(_2652, _2653, _2654), vec3(_2652, _2653, _2654)));
    float _2659 = _2658 * _2652;
    float _2660 = _2658 * _2653;
    float _2661 = _2658 * _2654;
    float _2662 = dot(vec3(_925, _926, _927), vec3(cbLight._m0[_2390].xyz));
    float _4734 = isnan(0.0) ? _2662 : (isnan(_2662) ? 0.0 : max(_2662, 0.0));
    float _2665 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
    float _4745 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    float _2666 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
    float _2667 = dot(vec3(_925, _926, _927), vec3(_2659, _2660, _2661));
    float _4756 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
    float _2670 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
    float _2671 = dot(vec3(cbLight._m0[_2390].xyz), vec3(_2659, _2660, _2661));
    float _4767 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
    float _2675 = _2651 * _2651;
    float _2679 = ((_2670 * _2670) * (_2675 + (-1.0))) + 1.0;
    float _2687 = exp2(log2(1.0 - (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0)))) * 5.0);
    float _2688 = 0.959999978542327880859375 - _1072;
    float _2690 = 0.959999978542327880859375 - _1073;
    float _2691 = 0.959999978542327880859375 - _1074;
    float _2698 = 1.0 - _2651;
    float _2709 = (0.5 / (((_2666 * ((_2665 * _2698) + _2651)) + 9.9999999392252902907785028219223e-09) + (((_2666 * _2698) + _2651) * _2665))) * _2665;
    float _4778 = isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0));
    float _2711 = (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * (_2675 / ((_2679 * _2679) * 3.141590118408203125));
    uint _2725 = _2390 + 9u;
    float _2736 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2430].w)) * _928) * 0.949999988079071044921875);
    float _2737 = _2736 * _2736;
    float _2738 = cbLight._m0[_2430].x + _1005;
    float _2739 = cbLight._m0[_2430].y + _1006;
    float _2740 = cbLight._m0[_2430].z + _1007;
    float _2744 = inversesqrt(dot(vec3(_2738, _2739, _2740), vec3(_2738, _2739, _2740)));
    float _2745 = _2744 * _2738;
    float _2746 = _2744 * _2739;
    float _2747 = _2744 * _2740;
    float _2748 = dot(vec3(_925, _926, _927), vec3(cbLight._m0[_2430].xyz));
    float _4789 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
    float _2751 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
    float _2752 = dot(vec3(_925, _926, _927), vec3(_2745, _2746, _2747));
    float _4800 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
    float _2755 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
    float _2756 = dot(vec3(cbLight._m0[_2430].xyz), vec3(_2745, _2746, _2747));
    float _4811 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
    float _2760 = _2737 * _2737;
    float _2764 = ((_2755 * _2755) * (_2760 + (-1.0))) + 1.0;
    float _2771 = exp2(log2(1.0 - (isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0)))) * 5.0);
    float _2778 = 1.0 - _2737;
    float _2788 = (0.5 / (((_2666 * ((_2751 * _2778) + _2737)) + 9.9999999392252902907785028219223e-09) + (((_2666 * _2778) + _2737) * _2751))) * _2751;
    float _4822 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
    float _2790 = (isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_2760 / ((_2764 * _2764) * 3.141590118408203125));
    float _2800 = (((((_2771 * _2688) + _1075) * cbLight._m0[_2725].x) * _2790) * _2413) + ((((cbLight._m0[_2637].x * _2379) * ((_2687 * _2688) + _1075)) * _2711) * _2426);
    float _2801 = (((((_2771 * _2690) + _1077) * cbLight._m0[_2725].y) * _2790) * _2413) + ((((cbLight._m0[_2637].y * _2381) * ((_2687 * _2690) + _1077)) * _2711) * _2426);
    float _2802 = (((((_2771 * _2691) + _1078) * cbLight._m0[_2725].z) * _2790) * _2413) + ((((cbLight._m0[_2637].z * _2383) * ((_2687 * _2691) + _1078)) * _2711) * _2426);
    float _2858;
    float _2860;
    float _2862;
    if (_2466)
    {
        _2858 = _2800;
        _2860 = _2801;
        _2862 = _2802;
    }
    else
    {
        uint _2864 = _2390 + 2u;
        uint _2868 = _2390 + 10u;
        float _2882 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2864].w)) * _928) * 0.949999988079071044921875);
        float _2883 = _2882 * _2882;
        float _2884 = cbLight._m0[_2864].x + _1005;
        float _2885 = cbLight._m0[_2864].y + _1006;
        float _2886 = cbLight._m0[_2864].z + _1007;
        float _2890 = inversesqrt(dot(vec3(_2884, _2885, _2886), vec3(_2884, _2885, _2886)));
        float _2891 = _2890 * _2884;
        float _2892 = _2890 * _2885;
        float _2893 = _2890 * _2886;
        float _2894 = dot(vec3(_925, _926, _927), vec3(cbLight._m0[_2864].xyz));
        float _4833 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
        float _2897 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
        float _2898 = dot(vec3(_925, _926, _927), vec3(_2891, _2892, _2893));
        float _4844 = isnan(0.0) ? _2898 : (isnan(_2898) ? 0.0 : max(_2898, 0.0));
        float _2901 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
        float _2902 = dot(vec3(cbLight._m0[_2864].xyz), vec3(_2891, _2892, _2893));
        float _4855 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2906 = _2883 * _2883;
        float _2910 = ((_2901 * _2901) * (_2906 + (-1.0))) + 1.0;
        float _2917 = exp2(log2(1.0 - (isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0)))) * 5.0);
        float _2924 = 1.0 - _2883;
        float _2934 = (0.5 / (((_2666 * ((_2897 * _2924) + _2883)) + 9.9999999392252902907785028219223e-09) + (((_2666 * _2924) + _2883) * _2897))) * _2897;
        float _4866 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
        float _2936 = (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0))) * (_2906 / ((_2910 * _2910) * 3.141590118408203125));
        float _2937 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
        _2858 = (((((_2917 * _2688) + _1075) * cbLight._m0[_2868].x) * _2936) * _2937) + _2800;
        _2860 = (((((_2917 * _2690) + _1077) * cbLight._m0[_2868].y) * _2936) * _2937) + _2801;
        _2862 = (((((_2917 * _2691) + _1078) * cbLight._m0[_2868].z) * _2936) * _2937) + _2802;
    }
    float _2968;
    float _2970;
    float _2972;
    if (_2575)
    {
        _2968 = _2858;
        _2970 = _2860;
        _2972 = _2862;
    }
    else
    {
        uint _2979 = _2390 + 3u;
        uint _2983 = _2390 + 11u;
        float _2997 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2979].w)) * _928) * 0.949999988079071044921875);
        float _2998 = _2997 * _2997;
        float _2999 = cbLight._m0[_2979].x + _1005;
        float _3000 = cbLight._m0[_2979].y + _1006;
        float _3001 = cbLight._m0[_2979].z + _1007;
        float _3005 = inversesqrt(dot(vec3(_2999, _3000, _3001), vec3(_2999, _3000, _3001)));
        float _3006 = _3005 * _2999;
        float _3007 = _3005 * _3000;
        float _3008 = _3005 * _3001;
        float _3009 = dot(vec3(_925, _926, _927), vec3(cbLight._m0[_2979].xyz));
        float _4882 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3012 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
        float _3013 = dot(vec3(_925, _926, _927), vec3(_3006, _3007, _3008));
        float _4893 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3016 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
        float _3017 = dot(vec3(cbLight._m0[_2979].xyz), vec3(_3006, _3007, _3008));
        float _4904 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3021 = _2998 * _2998;
        float _3025 = ((_3016 * _3016) * (_3021 + (-1.0))) + 1.0;
        float _3032 = exp2(log2(1.0 - (isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0)))) * 5.0);
        float _3039 = 1.0 - _2998;
        float _3049 = (0.5 / (((_2666 * ((_3012 * _3039) + _2998)) + 9.9999999392252902907785028219223e-09) + (((_2666 * _3039) + _2998) * _3012))) * _3012;
        float _4915 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
        float _3051 = (isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0))) * (_3021 / ((_3025 * _3025) * 3.141590118408203125));
        float _3052 = isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0));
        _2968 = (((((_3032 * _2688) + _1075) * cbLight._m0[_2983].x) * _3051) * _3052) + _2858;
        _2970 = (((((_3032 * _2690) + _1077) * cbLight._m0[_2983].y) * _3051) * _3052) + _2860;
        _2972 = (((((_3032 * _2691) + _1078) * cbLight._m0[_2983].z) * _3051) * _3052) + _2862;
    }
    float _3118;
    float _3120;
    float _3122;
    float _3124;
    float _3126;
    float _3128;
    if (_2388.y == 0u)
    {
        uvec4 _3073 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3074 = _3073.x;
        uint _3085 = uint((float(_3073.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1014) / _3074))) + floor(float(uint(cbSceneParam._m0[85u].x * _1013) / _3074)));
        float _3095 = (log2(_2166 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3096 = isnan(0.0) ? _3095 : (isnan(_3095) ? 0.0 : max(_3095, 0.0));
        uint _3099 = uint(isnan(14.0) ? _3096 : (isnan(_3096) ? 14.0 : min(_3096, 14.0)));
        uvec4 _3104 = texelFetch(g_lightClusterGridBuffer, int(((_3099 << 2u) + (_3085 << 6u)) >> 2u));
        uint _3105 = _3104.x;
        uint _3106 = _3073.z;
        float _3185;
        float _3187;
        float _3189;
        float _3191;
        float _3193;
        float _3195;
        if (((((1u << ((_3106 >> 4u) & 15u)) + 4294967295u) & _3105) == 0u) || ((_3106 & 240u) == 0u))
        {
            _3185 = 0.0;
            _3187 = 0.0;
            _3189 = 0.0;
            _3191 = 0.0;
            _3193 = 0.0;
            _3195 = 0.0;
        }
        else
        {
            float _3186;
            float _3188;
            float _3190;
            float _3192;
            float _3194;
            float _3196;
            float _3330 = 0.0;
            float _3331 = 0.0;
            float _3332 = 0.0;
            float _3333 = 0.0;
            float _3334 = 0.0;
            float _3335 = 0.0;
            uint _3336 = 0u;
            uint _3345;
            bool _3346;
            for (;;)
            {
                _3345 = texelFetch(g_lightClassification, int((((_3099 << 5u) + (_3085 << 9u)) + (_3336 << 2u)) >> 2u)).x;
                _3346 = _3345 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3346)
                {
                    frontier_phi_66_pred = _3335;
                    frontier_phi_66_pred_1 = _3334;
                    frontier_phi_66_pred_2 = _3333;
                    frontier_phi_66_pred_3 = _3332;
                    frontier_phi_66_pred_4 = _3331;
                    frontier_phi_66_pred_5 = _3330;
                }
                else
                {
                    float _3454;
                    float _3455;
                    float _3456;
                    float _3457;
                    float _3458;
                    float _3459;
                    uint _3460;
                    _3454 = _3330;
                    _3455 = _3331;
                    _3456 = _3332;
                    _3457 = _3333;
                    _3458 = _3334;
                    _3459 = _3335;
                    _3460 = _3345;
                    float _3386;
                    float _3387;
                    float _3388;
                    float _3389;
                    float _3390;
                    float _3391;
                    for (;;)
                    {
                        uint _3464 = uint(findLSB(_3460)) + (_3336 << 5u);
                        uint _3461 = (_3460 + 4294967295u) & _3460;
                        uint _3466 = _3464 * 48u;
                        vec4 _3480 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3466)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 3u)).x));
                        uint _3486 = (_3464 * 48u) + 4u;
                        vec4 _3499 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3486)).x, texelFetch(g_PointLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3486 + 3u)).x));
                        uint _3505 = (_3464 * 48u) + 8u;
                        vec3 _3516 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3505)).x, texelFetch(g_PointLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3505 + 2u)).x));
                        float _3520 = _3480.x - _2164;
                        float _3521 = _3480.y - _2165;
                        float _3522 = _3480.z - _2166;
                        float _3523 = dot(vec3(_3520, _3521, _3522), vec3(_3520, _3521, _3522));
                        float _3526 = inversesqrt(_3523);
                        float _3527 = _3526 * _3520;
                        float _3528 = _3526 * _3521;
                        float _3529 = _3526 * _3522;
                        float _3530 = dot(vec3(_1032, _1035, _1038), vec3(_3527, _3528, _3529));
                        float _3535 = 1.0 - (_3523 * _3480.w);
                        float _4941 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                        float _3536 = isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0));
                        float _3537 = sqrt(_3523) * _3499.w;
                        float _3540 = 1.39999997615814208984375 / (_3537 + 1.39999997615814208984375);
                        float _3541 = _3540 * _3540;
                        float _3544 = ((1.0 - _3541) * _3530) + _3541;
                        float _3547 = _3537 * _3537;
                        float _3551 = ((isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0))) * _3536) / ((_3547 * 0.699999988079071044921875) + 1.0);
                        float _3555 = (-0.0) - _2164;
                        float _3556 = (-0.0) - _2165;
                        float _3557 = (-0.0) - _2166;
                        float _3561 = inversesqrt(dot(vec3(_3555, _3556, _3557), vec3(_3555, _3556, _3557)));
                        float _3562 = _3561 * _3555;
                        float _3563 = _3561 * _3556;
                        float _3564 = _3561 * _3557;
                        float _3571 = exp2(log2(1.0 / ((_3547 * 3.5) + 5.0)) * 0.25);
                        float _3572 = 1.0 - _1107;
                        float _3579 = sqrt(1.0 - ((1.0 - (_3572 * _3572)) * (1.0 - (_3571 * _3571))));
                        float _3580 = _3579 * _3579;
                        float _3581 = _3580 * _3580;
                        float _3582 = _3562 + _3527;
                        float _3583 = _3563 + _3528;
                        float _3584 = _3564 + _3529;
                        float _3588 = inversesqrt(dot(vec3(_3582, _3583, _3584), vec3(_3582, _3583, _3584)));
                        float _3592 = dot(vec3(_1032, _1035, _1038), vec3(_3562, _3563, _3564));
                        float _4957 = isnan(0.0) ? _3592 : (isnan(_3592) ? 0.0 : max(_3592, 0.0));
                        float _3595 = isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0));
                        float _3596 = dot(vec3(_1032, _1035, _1038), vec3(_3588 * _3582, _3588 * _3583, _3588 * _3584));
                        float _4968 = isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : max(_3596, 0.0));
                        float _3599 = isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0));
                        float _3603 = ((_3599 * _3599) * (_3581 + (-1.0))) + 1.0;
                        float _3604 = _3540 * _3580;
                        float _3605 = _3604 * _3604;
                        float _3608 = ((1.0 - _3605) * _3530) + _3605;
                        float _4979 = isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0));
                        float _3609 = isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0));
                        float _3610 = 1.0 - _3580;
                        float _3620 = (0.5 / (((_3609 * ((_3595 * _3610) + _3580)) + 9.9999999392252902907785028219223e-09) + (((_3609 * _3610) + _3580) * _3595))) * _3609;
                        float _4990 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                        float _3631 = (((_3581 * 3.1415927410125732421875) * (isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0)))) / ((_3603 * _3603) * ((_3547 * 2.1991131305694580078125) + 3.141590118408203125))) * _3536;
                        _3389 = (_3551 * _3499.x) + _3457;
                        _3390 = (_3551 * _3499.y) + _3458;
                        _3391 = (_3551 * _3499.z) + _3459;
                        _3386 = (_3631 * _3516.x) + _3454;
                        _3387 = (_3631 * _3516.y) + _3455;
                        _3388 = (_3631 * _3516.z) + _3456;
                        if (_3461 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3454 = _3386;
                            _3455 = _3387;
                            _3456 = _3388;
                            _3457 = _3389;
                            _3458 = _3390;
                            _3459 = _3391;
                            _3460 = _3461;
                        }
                    }
                    frontier_phi_66_pred = _3391;
                    frontier_phi_66_pred_1 = _3390;
                    frontier_phi_66_pred_2 = _3389;
                    frontier_phi_66_pred_3 = _3388;
                    frontier_phi_66_pred_4 = _3387;
                    frontier_phi_66_pred_5 = _3386;
                }
                _3196 = frontier_phi_66_pred;
                _3194 = frontier_phi_66_pred_1;
                _3192 = frontier_phi_66_pred_2;
                _3190 = frontier_phi_66_pred_3;
                _3188 = frontier_phi_66_pred_4;
                _3186 = frontier_phi_66_pred_5;
                uint _3337 = _3336 + 1u;
                if (_3337 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3330 = _3186;
                    _3331 = _3188;
                    _3332 = _3190;
                    _3333 = _3192;
                    _3334 = _3194;
                    _3335 = _3196;
                    _3336 = _3337;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3185 = _3186;
            _3187 = _3188;
            _3189 = _3190;
            _3191 = _3192;
            _3193 = _3194;
            _3195 = _3196;
        }
        uvec4 _3199 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3200 = _3199.z;
        uint _3202 = (_3200 >> 8u) & 15u;
        float _3298;
        float _3300;
        float _3302;
        float _3304;
        float _3306;
        float _3308;
        if (((4294967295u << _3202) & _3105) == 0u)
        {
            _3298 = _3185;
            _3300 = _3187;
            _3302 = _3189;
            _3304 = _3191;
            _3306 = _3193;
            _3308 = _3195;
        }
        else
        {
            float _3323 = inversesqrt(dot(vec3(_2164, _2165, _2166), vec3(_2164, _2165, _2166)));
            float _3324 = _3323 * _2164;
            float _3325 = _3323 * _2165;
            float _3326 = _3323 * _2166;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3202 < ((_3200 >> 12u) & 15u))
            {
                float _3299;
                float _3301;
                float _3303;
                float _3305;
                float _3307;
                float _3309;
                float _3437 = _3185;
                float _3438 = _3187;
                float _3439 = _3189;
                float _3440 = _3191;
                float _3441 = _3193;
                float _3442 = _3195;
                uint _3443 = _3202;
                uint _3452;
                bool _3453;
                for (;;)
                {
                    _3452 = texelFetch(g_lightClassification, int((((_3099 << 5u) + (_3085 << 9u)) + (_3443 << 2u)) >> 2u)).x;
                    _3453 = _3452 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3453)
                    {
                        frontier_phi_72_pred = _3442;
                        frontier_phi_72_pred_1 = _3441;
                        frontier_phi_72_pred_2 = _3440;
                        frontier_phi_72_pred_3 = _3439;
                        frontier_phi_72_pred_4 = _3438;
                        frontier_phi_72_pred_5 = _3437;
                    }
                    else
                    {
                        float _3636;
                        float _3637;
                        float _3638;
                        float _3639;
                        float _3640;
                        float _3641;
                        float _3929;
                        float _3930;
                        float _3931;
                        float _3932;
                        float _3933;
                        float _3934;
                        float _3649 = _3437;
                        float _3650 = _3438;
                        float _3651 = _3439;
                        float _3652 = _3440;
                        float _3653 = _3441;
                        float _3654 = _3442;
                        uint _3655 = _3452;
                        uint _3656;
                        vec4 _3681;
                        float _3682;
                        vec4 _3697;
                        vec3 _3709;
                        vec4 _3724;
                        vec4 _3739;
                        float _3785;
                        bool _3786;
                        for (;;)
                        {
                            uint _3666 = ((_3443 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3655));
                            _3656 = (_3655 + 4294967295u) & _3655;
                            uint _3668 = _3666 * 40u;
                            _3681 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3668)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 3u)).x));
                            _3682 = _3681.w;
                            uint _3684 = (_3666 * 40u) + 4u;
                            _3697 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3684)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 3u)).x));
                            uint _3699 = (_3666 * 40u) + 8u;
                            _3709 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3699)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3699 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3699 + 2u)).x));
                            uint _3711 = (_3666 * 40u) + 16u;
                            _3724 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3711)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 3u)).x));
                            uint _3726 = (_3666 * 40u) + 20u;
                            _3739 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3726)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 3u)).x));
                            uint _3741 = (_3666 * 40u) + 24u;
                            vec4 _3754 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3741)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 3u)).x));
                            uint _3760 = (_3666 * 40u) + 28u;
                            vec4 _3773 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3760)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 3u)).x));
                            _3785 = fma(_2166, _3773.z, fma(_2165, _3773.y, _3773.x * _2164)) + _3773.w;
                            _3786 = !((fma(_2166, _3754.z, fma(_2165, _3754.y, _3754.x * _2164)) + _3754.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3786)
                            {
                                float _3813 = _3681.x - _2164;
                                float _3814 = _3681.y - _2165;
                                float _3815 = _3681.z - _2166;
                                float _3816 = dot(vec3(_3813, _3814, _3815), vec3(_3813, _3814, _3815));
                                float _3819 = inversesqrt(_3816);
                                float _3820 = _3819 * _3813;
                                float _3821 = _3819 * _3814;
                                float _3822 = _3819 * _3815;
                                float _3826 = 1.0 - (_3816 / (_3682 * _3682));
                                float _5001 = isnan(0.0) ? _3826 : (isnan(_3826) ? 0.0 : max(_3826, 0.0));
                                float _3827 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
                                float _3831 = sqrt(_3816) * _3697.w;
                                float _3833 = 1.39999997615814208984375 / (_3831 + 1.39999997615814208984375);
                                float _3834 = _3833 * _3833;
                                float _3837 = ((1.0 - _3834) * dot(vec3(_3820, _3821, _3822), vec3(_1032, _1035, _1038))) + _3834;
                                float _3840 = _3831 * _3831;
                                float _3844 = (fma(_2166, _3724.z, fma(_2165, _3724.y, _3724.x * _2164)) + _3724.w) / _3785;
                                float _3845 = (fma(_2166, _3739.z, fma(_2165, _3739.y, _3739.x * _2164)) + _3739.w) / _3785;
                                float _3849 = 1.0 - dot(vec2(_3844, _3845), vec2(_3844, _3845));
                                float _5017 = isnan(0.0) ? _3849 : (isnan(_3849) ? 0.0 : max(_3849, 0.0));
                                float _3850 = isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0));
                                float _3851 = _3850 * (((isnan(0.0) ? _3837 : (isnan(_3837) ? 0.0 : max(_3837, 0.0))) * _3827) / ((_3840 * 0.699999988079071044921875) + 1.0));
                                float _3863 = exp2(log2(1.0 / ((_3840 * 3.5) + 5.0)) * 0.25);
                                float _3864 = 1.0 - _1107;
                                float _3871 = sqrt(1.0 - ((1.0 - (_3864 * _3864)) * (1.0 - (_3863 * _3863))));
                                float _3872 = _3871 * _3871;
                                float _3873 = _3872 * _3872;
                                float _3874 = _3820 - _3324;
                                float _3875 = _3821 - _3325;
                                float _3876 = _3822 - _3326;
                                float _3880 = inversesqrt(dot(vec3(_3874, _3875, _3876), vec3(_3874, _3875, _3876)));
                                float _3884 = dot(vec3(_1032, _1035, _1038), vec3((-0.0) - _3324, (-0.0) - _3325, (-0.0) - _3326));
                                float _5028 = isnan(0.0) ? _3884 : (isnan(_3884) ? 0.0 : max(_3884, 0.0));
                                float _3887 = isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0));
                                float _3888 = dot(vec3(_1032, _1035, _1038), vec3(_3880 * _3874, _3880 * _3875, _3880 * _3876));
                                float _5039 = isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0));
                                float _3891 = isnan(1.0) ? _5039 : (isnan(_5039) ? 1.0 : min(_5039, 1.0));
                                float _3895 = ((_3891 * _3891) * (_3873 + (-1.0))) + 1.0;
                                float _3896 = _3833 * _3872;
                                float _3897 = _3896 * _3896;
                                float _3903 = ((1.0 - _3897) * dot(vec3(_1032, _1035, _1038), vec3(_3820, _3821, _3822))) + _3897;
                                float _5050 = isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : max(_3903, 0.0));
                                float _3904 = isnan(1.0) ? _5050 : (isnan(_5050) ? 1.0 : min(_5050, 1.0));
                                float _3905 = 1.0 - _3872;
                                float _3915 = (0.5 / (((_3904 * ((_3887 * _3905) + _3872)) + 9.9999999392252902907785028219223e-09) + (((_3904 * _3905) + _3872) * _3887))) * _3904;
                                float _5061 = isnan(0.0) ? _3915 : (isnan(_3915) ? 0.0 : max(_3915, 0.0));
                                float _3925 = (_3850 * _3827) * (((_3873 * 3.1415927410125732421875) * (isnan(1.0) ? _5061 : (isnan(_5061) ? 1.0 : min(_5061, 1.0)))) / ((_3895 * _3895) * ((_3840 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3851 * _3697.y;
                                frontier_phi_78_pred_1 = _3851 * _3697.x;
                                frontier_phi_78_pred_2 = _3925 * _3709.z;
                                frontier_phi_78_pred_3 = _3925 * _3709.y;
                                frontier_phi_78_pred_4 = _3925 * _3709.x;
                                frontier_phi_78_pred_5 = _3851 * _3697.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3933 = frontier_phi_78_pred;
                            _3932 = frontier_phi_78_pred_1;
                            _3931 = frontier_phi_78_pred_2;
                            _3930 = frontier_phi_78_pred_3;
                            _3929 = frontier_phi_78_pred_4;
                            _3934 = frontier_phi_78_pred_5;
                            _3639 = _3932 + _3652;
                            _3640 = _3933 + _3653;
                            _3641 = _3934 + _3654;
                            _3636 = _3929 + _3649;
                            _3637 = _3930 + _3650;
                            _3638 = _3931 + _3651;
                            if (_3656 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3649 = _3636;
                                _3650 = _3637;
                                _3651 = _3638;
                                _3652 = _3639;
                                _3653 = _3640;
                                _3654 = _3641;
                                _3655 = _3656;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3641;
                        frontier_phi_72_pred_1 = _3640;
                        frontier_phi_72_pred_2 = _3639;
                        frontier_phi_72_pred_3 = _3638;
                        frontier_phi_72_pred_4 = _3637;
                        frontier_phi_72_pred_5 = _3636;
                    }
                    _3309 = frontier_phi_72_pred;
                    _3307 = frontier_phi_72_pred_1;
                    _3305 = frontier_phi_72_pred_2;
                    _3303 = frontier_phi_72_pred_3;
                    _3301 = frontier_phi_72_pred_4;
                    _3299 = frontier_phi_72_pred_5;
                    uint _3444 = _3443 + 1u;
                    if (_3444 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3437 = _3299;
                        _3438 = _3301;
                        _3439 = _3303;
                        _3440 = _3305;
                        _3441 = _3307;
                        _3442 = _3309;
                        _3443 = _3444;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3309;
                frontier_phi_60_61_ladder_1 = _3307;
                frontier_phi_60_61_ladder_2 = _3303;
                frontier_phi_60_61_ladder_3 = _3301;
                frontier_phi_60_61_ladder_4 = _3299;
                frontier_phi_60_61_ladder_5 = _3305;
            }
            else
            {
                frontier_phi_60_61_ladder = _3195;
                frontier_phi_60_61_ladder_1 = _3193;
                frontier_phi_60_61_ladder_2 = _3189;
                frontier_phi_60_61_ladder_3 = _3187;
                frontier_phi_60_61_ladder_4 = _3185;
                frontier_phi_60_61_ladder_5 = _3191;
            }
            _3298 = frontier_phi_60_61_ladder_4;
            _3300 = frontier_phi_60_61_ladder_3;
            _3302 = frontier_phi_60_61_ladder_2;
            _3304 = frontier_phi_60_61_ladder_5;
            _3306 = frontier_phi_60_61_ladder_1;
            _3308 = frontier_phi_60_61_ladder;
        }
        float _3313 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
        _3118 = (_3313 * _3304) + _2630;
        _3120 = (_3313 * _3306) + _2632;
        _3122 = (_3313 * _3308) + _2634;
        _3124 = ((_3298 * _1075) * _3313) + _2968;
        _3126 = ((_3300 * _1077) * _3313) + _2970;
        _3128 = ((_3302 * _1078) * _3313) + _2972;
    }
    else
    {
        _3118 = _2630;
        _3120 = _2632;
        _3122 = _2634;
        _3124 = _2968;
        _3126 = _2970;
        _3128 = _2972;
    }
    float _5077 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _5088 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _5099 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    uint _3148 = _284 + 6u;
    float _3156 = _1013 / cbSceneParam._m0[86u].x;
    float _3157 = _1014 / cbSceneParam._m0[86u].y;
    vec4 _3171 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3156, _3157, (log2((isnan(cbSceneParam._m0[77u].w) ? _947 : (isnan(_947) ? cbSceneParam._m0[77u].w : min(_947, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3173 = _3171.x;
    float _3174 = _3171.y;
    float _3175 = _3171.z;
    float _3176 = _3171.w;
    float _3248;
    float _3250;
    float _3252;
    float _3254;
    if (_947 > cbSceneParam._m0[78u].w)
    {
        float _3210 = isnan(_947) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _947 : min(cbSceneParam._m0[80u].w, _947));
        float _3211 = _3210 / _947;
        float _3222 = _3211 * _998;
        float _3223 = _999 * _3211;
        float _3224 = (-0.0) - _3223;
        float _3226 = _3211 * _1000;
        float _3228 = (cbSceneParam._m0[77u].w * _3224) / _3210;
        float _3229 = _3228 + cbSceneParam._m0[79u].w;
        float _3230 = cbSceneParam._m0[79u].w - _3223;
        float _3236 = sqrt(((_3222 * _3222) + (_3223 * _3223)) + (_3226 * _3226));
        float _3239 = (1.0 - (cbSceneParam._m0[77u].w / _3210)) * _3236;
        float _3244 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3246 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3399;
        if (abs((_3224 - _3228) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3399 = ((((_3229 > 0.0) ? exp2(_3244 * _3229) : (2.0 - exp2(_3246 * _3229))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3239;
        }
        else
        {
            float _3359 = 1.0 / cbSceneParam._m0[80u].x;
            float _3360 = isnan(_3230) ? _3229 : (isnan(_3229) ? _3230 : max(_3229, _3230));
            float _3361 = isnan(_3230) ? _3229 : (isnan(_3229) ? _3230 : min(_3229, _3230));
            float _3370 = isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : min(_3360, 0.0));
            float _3371 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : min(_3361, 0.0));
            _3399 = ((abs(_3236 / _3224) * cbSceneParam._m0[80u].y) * ((((_3370 - _3371) * 2.0) - ((exp2(_3244 * (isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0)))) - exp2(_3244 * (isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0))))) * _3359)) - ((exp2(_3246 * _3370) - exp2(_3246 * _3371)) * _3359))) + (_3239 * cbSceneParam._m0[80u].z);
        }
        vec4 _3401 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3156, _3157, 1.0), 0.0);
        float _3410 = exp2((_3399 * (-1.44269502162933349609375)) * (1.0 - _3401.w));
        float _3411 = log2(_3410);
        float _3427 = log2(_3176);
        _3248 = (exp2(_3427 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3411 * cbSceneParam._m0[78u].x)) * _3401.x) / cbSceneParam._m0[78u].x)) + _3173;
        _3250 = (exp2(_3427 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3411 * cbSceneParam._m0[78u].y)) * _3401.y) / cbSceneParam._m0[78u].y)) + _3174;
        _3252 = (exp2(_3427 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3411 * cbSceneParam._m0[78u].z)) * _3401.z) / cbSceneParam._m0[78u].z)) + _3175;
        _3254 = _3410 * _3176;
    }
    else
    {
        _3248 = _3173;
        _3250 = _3174;
        _3252 = _3175;
        _3254 = _3176;
    }
    float _3266 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3267 = _3266 == 3.0;
    float _3268 = log2(_3254);
    float _3275 = exp2(_3268 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0))) * (_3118 + ((isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0))) * _1091))) + ((_3124 + ((isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3276 = exp2(_3268 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0))) * (_3120 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1091))) + ((_3126 + ((isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3277 = exp2(_3268 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5099 : (isnan(_5099) ? 1.0 : min(_5099, 1.0))) * (_3122 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1091))) + ((_3128 + ((isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3286 = (_3266 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3286 * (_3267 ? _3275 : (_3275 + (cbSceneParam._m0[72u].w * _3248)));
    SV_Target.y = _3286 * (_3267 ? _3276 : (_3276 + (cbSceneParam._m0[72u].w * _3250)));
    SV_Target.z = _3286 * (_3267 ? _3277 : (_3277 + (cbSceneParam._m0[72u].w * _3252)));
    SV_Target.w = cbInstanceData._m0[_3148].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3148].w;
}


