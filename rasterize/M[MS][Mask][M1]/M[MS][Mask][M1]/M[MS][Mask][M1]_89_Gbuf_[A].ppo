#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _254 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1251 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _1262 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _1273 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    uint _267 = uint(roundEven(NORMAL.w)) * 13u;
    uint _272 = _267 + 1u;
    uint _276 = _267 + 2u;
    float _285 = sqrt(((cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x) + (cbInstanceData._m0[_267].x * cbInstanceData._m0[_267].x)) + (cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x));
    float _286 = _285 * TEXCOORD.z;
    float _287 = _285 * TEXCOORD.w;
    vec4 _300 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _286) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _287) + cbTextureTilingScale._m0[13u].w));
    vec4 _323 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _349 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _354 = _349.x * cbMtdParam._m0[11u].x;
    float _355 = _349.y * cbMtdParam._m0[11u].y;
    float _356 = _349.z * cbMtdParam._m0[11u].z;
    vec4 _375 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _286) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _287) + cbTextureTilingScale._m0[5u].w));
    vec4 _394 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _426 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _428 = _426.x;
    float _441 = dot(vec4(_428, _426.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _458 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _394.x) * 2.0) - ((((_428 - _441) * cbMtdParam._m0[23u].w) + _441) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1284 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _459 = isnan(1.0) ? _1284 : (isnan(_1284) ? 1.0 : min(_1284, 1.0));
    float _466 = (_459 * ((_375.x * cbMtdParam._m0[12u].x) - _354)) + _354;
    float _467 = (_459 * ((_375.y * cbMtdParam._m0[12u].y) - _355)) + _355;
    float _468 = (_459 * ((_375.z * cbMtdParam._m0[12u].z) - _356)) + _356;
    vec4 _485 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _286) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _287) + cbTextureTilingScale._m0[3u].w));
    vec4 _505 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _507 = _505.x;
    float _517 = dot(vec4(_507, _505.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _531 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _394.y) * 2.0) - ((((_507 - _517) * cbMtdParam._m0[23u].w) + _517) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1295 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _532 = isnan(1.0) ? _1295 : (isnan(_1295) ? 1.0 : min(_1295, 1.0));
    float _542 = (_323.x * cbMtdParam._m0[9u].x) * ((_532 * ((_485.x * cbMtdParam._m0[13u].x) - _466)) + _466);
    float _543 = (_323.y * cbMtdParam._m0[9u].y) * ((_532 * ((_485.y * cbMtdParam._m0[13u].y) - _467)) + _467);
    float _544 = (_323.z * cbMtdParam._m0[9u].z) * ((_532 * ((_485.z * cbMtdParam._m0[13u].z) - _468)) + _468);
    float _548 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _300.x) * _542;
    float _551 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _300.y) * _543;
    float _554 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _300.z) * _544;
    float _562 = (((_542 - _548) * (isnan(1.0) ? _1251 : (isnan(_1251) ? 1.0 : min(_1251, 1.0)))) + _548) * 4.55000019073486328125;
    float _564 = (((_543 - _551) * (isnan(1.0) ? _1262 : (isnan(_1262) ? 1.0 : min(_1262, 1.0)))) + _551) * 4.55000019073486328125;
    float _566 = (((_544 - _554) * (isnan(1.0) ? _1273 : (isnan(_1273) ? 1.0 : min(_1273, 1.0)))) + _554) * 4.55000019073486328125;
    vec4 _585 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _286) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _287) + cbTextureTilingScale._m0[14u].w));
    vec4 _604 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _286) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _287) + cbTextureTilingScale._m0[20u].w));
    vec4 _627 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _286) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _287) + cbTextureTilingScale._m0[4u].w));
    vec4 _644 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _646 = _644.x;
    float _647 = _644.y;
    float _648 = _644.z;
    float _655 = ((_627.x - _646) * _459) + _646;
    float _656 = ((_627.y - _647) * _459) + _647;
    float _657 = ((_627.z - _648) * _459) + _648;
    vec4 _669 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _286) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _287) + cbTextureTilingScale._m0[2u].w));
    float _682 = ((_669.z - _657) * _532) + _657;
    float _685 = ((((_669.x - _655) * _532) + _655) * 2.0) + (-1.0);
    float _686 = ((((_669.y - _656) * _532) + _656) * 2.0) + (-1.0);
    float _687 = dot(vec2(_685, _686), vec2(_685, _686));
    float _1306 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _692 = sqrt(1.0 - (isnan(1.0) ? _1306 : (isnan(_1306) ? 1.0 : min(_1306, 1.0))));
    vec4 _706 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _731 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _286) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _287) + cbTextureTilingScale._m0[11u].w));
    float _733 = _731.x;
    float _734 = 1.0 - _733;
    float _743 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _746 = ((isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : min(_743, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _755 = (_746 - ((((((_733 - _734) * cbMtdParam._m0[24u].z) + _734) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _746))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1327 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _756 = isnan(1.0) ? _1327 : (isnan(_1327) ? 1.0 : min(_1327, 1.0));
    float _763 = (_756 * ((_585.x * cbMtdParam._m0[18u].x) - _562)) + _562;
    float _764 = (_756 * ((_585.y * cbMtdParam._m0[18u].y) - _564)) + _564;
    float _765 = (_756 * ((_585.z * cbMtdParam._m0[18u].z) - _566)) + _566;
    vec4 _777 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _286) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _287) + cbTextureTilingScale._m0[19u].w));
    float _779 = _777.x;
    float _780 = 1.0 - _779;
    float _805 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_779 - _780) * cbMtdParam._m0[24u].w) + _780) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1338 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _806 = isnan(1.0) ? _1338 : (isnan(_1338) ? 1.0 : min(_1338, 1.0));
    float _814 = ((((cbMtdParam._m0[10u].x - _763) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _806) + _763;
    float _815 = ((((cbMtdParam._m0[10u].y - _764) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _806) + _764;
    float _816 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _765)) * _806) + _765;
    vec4 _842 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _844 = _842.x;
    float _861 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _286) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _287) + cbTextureTilingScale._m0[9u].w)).x - _844) * _459) + _844;
    float _878 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _286) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _287) + cbTextureTilingScale._m0[21u].w)).x - _861) * _532) + _861;
    float _882 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _878) * cbMtdParam._m0[19u].z) + _878;
    float _884 = _882 - (_882 * _756);
    float _886 = _884 - (_884 * _806);
    float _891 = (((_604.z - _682) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _682;
    float _895 = ((_706.z - _891) * cbMtdParam._m0[19u].w) + _891;
    vec4 _909 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _286) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _287) + cbTextureTilingScale._m0[15u].w));
    float _916 = (_909.x * 2.0) + (-1.0);
    float _917 = (_909.y * 2.0) + (-1.0);
    float _918 = dot(vec2(_916, _917), vec2(_916, _917));
    float _1349 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _926 = (_756 * (_909.z - _895)) + _895;
    float _929 = ((cbMtdParam._m0[23u].x - _926) * _806) + _926;
    vec4 _950 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _286) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _287) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _956 = (_950.x * 2.0) + (-1.0);
    float _957 = (_950.y * 2.0) + (-1.0);
    float _958 = dot(vec2(_956, _957), vec2(_956, _957));
    float _1360 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _972 = (_685 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_604.x * 2.0) + (-1.0)))) + (((_706.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _973 = (_686 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_604.y * 2.0) + (-1.0)))) + (((_706.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _985 = (((_916 - _972) + (cbMtdParam._m0[21u].x * _972)) * _756) + _972;
    float _986 = (((_917 - _973) + (cbMtdParam._m0[21u].x * _973)) * _756) + _973;
    float _987 = (_756 * (sqrt(1.0 - (isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0)))) - _692)) + _692;
    float _998 = (((_956 - _985) + (_985 * cbMtdParam._m0[22u].z)) * _806) + _985;
    float _999 = (((_957 - _986) + (_986 * cbMtdParam._m0[22u].z)) * _806) + _986;
    float _1000 = ((sqrt(1.0 - (isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0)))) - _987) * _806) + _987;
    float _1002 = cbMtdParam._m0[22u].x + _706.w;
    float _1005 = fma(_1000, _235 * NORMAL.x, fma(_999, _242 * TANGENT.x, (_228 * _220) * _998));
    float _1008 = fma(_1000, _235 * NORMAL.y, fma(_999, _242 * TANGENT.y, (_228 * _221) * _998));
    float _1011 = fma(_1000, _235 * NORMAL.z, fma(_999, _242 * TANGENT.z, (_228 * _222) * _998));
    float _1015 = inversesqrt(dot(vec3(_1005, _1008, _1011), vec3(_1005, _1008, _1011)));
    float _1371 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _1382 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1017 = isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0));
    float _1393 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _1018 = isnan(1.0) ? _1393 : (isnan(_1393) ? 1.0 : min(_1393, 1.0));
    float _1404 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _1019 = isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0));
    float _1415 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _1020 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
    float _1426 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _1061 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1071 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1061);
    float _1072 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1061);
    float _1073 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1061);
    vec4 _1078 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1080 = _1078.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1140 = sqrt(((_1071 * _1071) + (_1072 * _1072)) + (_1073 * _1073));
        float _1146 = (cbMatDynParam._m0[5u].x * _1140) + cbMatDynParam._m0[5u].y;
        float _1437 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0));
        float _1151 = (cbMatDynParam._m0[5u].z * _1140) + cbMatDynParam._m0[5u].w;
        float _1448 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0))) - _1147)) + _1147) < ((_1080 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1178;
    vec4 _1102;
    float _1109;
    float _1110;
    float _1111;
    float _1112;
    float _1116;
    vec4 _1120;
    float _1122;
    float _1123;
    bool _1134;
    for (;;)
    {
        _1102 = cbInstanceData._m0[(_267 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _1106 = (cbMtdParam._m0[0u].x * _1018) * _1102.x;
        float _1107 = (cbMtdParam._m0[0u].y * _1019) * _1102.y;
        float _1108 = (cbMtdParam._m0[0u].z * _1020) * _1102.z;
        float _1459 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        _1109 = isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0));
        float _1470 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        _1110 = isnan(1.0) ? _1470 : (isnan(_1470) ? 1.0 : min(_1470, 1.0));
        float _1481 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        _1111 = isnan(1.0) ? _1481 : (isnan(_1481) ? 1.0 : min(_1481, 1.0));
        _1112 = _1017 * TEXCOORD_5.w;
        _1116 = cbInstanceData._m0[_267 + 6u].w;
        float _1117 = _1080 + (-0.5);
        _1120 = cbMtdParam._m0[1u];
        _1122 = _1120.y * _1117;
        _1123 = _1117 * 0.999000012874603271484375;
        _1134 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1134)
        {
            if ((cbInstanceData._m0[_267 + 7u].x + _1123) < 0.5)
            {
                _1178 = true;
                break;
            }
        }
        if ((_1102.w < 1.0) && ((_1102.w + _1123) < 0.5))
        {
            _1178 = true;
            break;
        }
        if ((_1122 + 1.0) < _1120.x)
        {
            _1178 = true;
            break;
        }
        _1178 = false;
        break;
    }
    if (_1178)
    {
        discard_state = true;
    }
    bool _1204 = cbMtdParam._m0[1u].z != 0.0;
    float _1205 = _1204 ? _1116 : 0.0;
    SV_Target.x = ((_1005 * 0.5) * _1015) + 0.500488758087158203125;
    SV_Target.y = ((_1008 * 0.5) * _1015) + 0.500488758087158203125;
    SV_Target.z = ((_1011 * 0.5) * _1015) + 0.500488758087158203125;
    SV_Target.w = _1205;
    SV_Target_1.x = isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1204 ? _1116 : _1112;
    SV_Target_2.x = _1109;
    SV_Target_2.y = _1110;
    SV_Target_2.z = _1111;
    SV_Target_2.w = _1204 ? _1116 : (float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1205;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1205;
    discard_exit();
}


