#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _188 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _189 = _188 * _180;
    float _190 = _188 * _181;
    float _191 = _188 * _182;
    float _195 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = _195 * NORMAL.x;
    float _197 = _195 * NORMAL.y;
    float _198 = _195 * NORMAL.z;
    float _202 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _203 = _202 * TANGENT.x;
    float _204 = _202 * TANGENT.y;
    float _205 = _202 * TANGENT.z;
    float _214 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _216 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _217 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _924 = isnan(0.0) ? _214 : (isnan(_214) ? 0.0 : max(_214, 0.0));
    float _935 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _946 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    uint _227 = uint(roundEven(NORMAL.w)) * 13u;
    uint _232 = _227 + 1u;
    uint _236 = _227 + 2u;
    float _245 = sqrt(((cbInstanceData._m0[_232].x * cbInstanceData._m0[_232].x) + (cbInstanceData._m0[_227].x * cbInstanceData._m0[_227].x)) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x));
    float _246 = _245 * TEXCOORD.z;
    float _247 = _245 * TEXCOORD.w;
    vec4 _260 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _246) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _247) + cbTextureTilingScale._m0[13u].w));
    vec4 _284 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _289 = _284.x * cbMtdParam._m0[11u].x;
    float _290 = _284.y * cbMtdParam._m0[11u].y;
    float _291 = _284.z * cbMtdParam._m0[11u].z;
    vec4 _310 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _246) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _247) + cbTextureTilingScale._m0[5u].w));
    vec4 _358 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _360 = _358.x;
    float _373 = dot(vec4(_360, _358.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _390 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_360 - _373) * cbMtdParam._m0[23u].w) + _373) * cbMtdParam._m0[22u].w))) + 1.0;
    float _957 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _391 = isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0));
    float _398 = (_391 * ((_310.x * cbMtdParam._m0[12u].x) - _289)) + _289;
    float _399 = (_391 * ((_310.y * cbMtdParam._m0[12u].y) - _290)) + _290;
    float _400 = (_391 * ((_310.z * cbMtdParam._m0[12u].z) - _291)) + _291;
    float _404 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _260.x) * _398;
    float _407 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _260.y) * _399;
    float _410 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _260.z) * _400;
    float _417 = ((_398 - _404) * (isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0)))) + _404;
    float _418 = ((_399 - _407) * (isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0)))) + _407;
    float _419 = ((_400 - _410) * (isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0)))) + _410;
    vec4 _437 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _246) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _247) + cbTextureTilingScale._m0[20u].w));
    vec4 _464 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _246) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _247) + cbTextureTilingScale._m0[4u].w));
    vec4 _481 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _483 = _481.x;
    float _484 = _481.y;
    float _485 = _481.z;
    float _494 = ((_464.z - _485) * _391) + _485;
    float _497 = ((((_464.x - _483) * _391) + _483) * 2.0) + (-1.0);
    float _498 = ((((_464.y - _484) * _391) + _484) * 2.0) + (-1.0);
    float _499 = dot(vec2(_497, _498), vec2(_497, _498));
    float _968 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _504 = sqrt(1.0 - (isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0))));
    vec4 _524 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _536 = (_497 + ((((_437.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_524.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _537 = (_498 + ((((_437.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_524.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _540 = fma(_504, _196, fma(_537, _203, _536 * _189));
    float _543 = fma(_504, _197, fma(_537, _204, _536 * _190));
    float _546 = fma(_504, _198, fma(_537, _205, _536 * _191));
    float _550 = inversesqrt(dot(vec3(_540, _543, _546), vec3(_540, _543, _546)));
    vec4 _577 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _246) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _247) + cbTextureTilingScale._m0[11u].w));
    float _579 = _577.x;
    float _580 = 1.0 - _579;
    float _589 = (cbMtdParam._m0[19u].x + dot(vec4(_550 * _540, _550 * _543, _550 * _546, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_579 - _580) * cbMtdParam._m0[24u].z) + _580) * cbMtdParam._m0[21u].z);
    float _979 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _590 = isnan(1.0) ? _979 : (isnan(_979) ? 1.0 : min(_979, 1.0));
    float _592 = (-0.0) - cbMtdParam._m0[24u].x;
    float _594 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _595 = isnan(1.0) ? _594 : (isnan(_594) ? 1.0 : min(_594, 1.0));
    float _602 = _590 - ((_590 * TEXCOORD_8.x) * _595);
    float _603 = _590 - ((_590 * TEXCOORD_8.y) * _595);
    float _604 = _590 - ((_590 * TEXCOORD_8.z) * _595);
    float _611 = (_602 * (cbMtdParam._m0[17u].x - _417)) + _417;
    float _612 = (_603 * (cbMtdParam._m0[17u].y - _418)) + _418;
    float _613 = (_604 * (cbMtdParam._m0[17u].z - _419)) + _419;
    vec4 _625 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _246) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _247) + cbTextureTilingScale._m0[19u].w));
    float _627 = _625.x;
    float _628 = 1.0 - _627;
    float _654 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_627 - _628) * cbMtdParam._m0[24u].w) + _628) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1000 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _655 = isnan(1.0) ? _1000 : (isnan(_1000) ? 1.0 : min(_1000, 1.0));
    float _663 = ((((cbMtdParam._m0[10u].x - _611) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _655) + _611;
    float _664 = ((((cbMtdParam._m0[10u].y - _612) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _655) + _612;
    float _665 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _613)) * _655) + _613;
    vec4 _691 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _693 = _691.x;
    float _711 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _246) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _247) + cbTextureTilingScale._m0[9u].w)).x - _693) * _391) + _693;
    float _715 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _711) * cbMtdParam._m0[19u].z) + _711;
    float _717 = _715 - (_715 * _602);
    float _719 = _717 - (_717 * _655);
    float _724 = (((_437.z - _494) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _494;
    float _728 = ((_524.z - _724) * cbMtdParam._m0[19u].w) + _724;
    vec4 _742 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _246) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _247) + cbTextureTilingScale._m0[15u].w));
    float _749 = (_742.x * 2.0) + (-1.0);
    float _750 = (_742.y * 2.0) + (-1.0);
    float _751 = dot(vec2(_749, _750), vec2(_749, _750));
    float _1011 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _759 = ((_742.z - _728) * _602) + _728;
    float _762 = ((cbMtdParam._m0[23u].x - _759) * _655) + _759;
    vec4 _781 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _246) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _247) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _787 = (_781.x * 2.0) + (-1.0);
    float _788 = (_781.y * 2.0) + (-1.0);
    float _789 = dot(vec2(_787, _788), vec2(_787, _788));
    float _1022 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _804 = ((sqrt(1.0 - (isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0)))) - _504) * _604) + _504;
    float _807 = (((_749 - _536) * _602) + _536) + (cbMtdParam._m0[21u].x * _536);
    float _808 = (((_750 - _537) * _603) + _537) + (cbMtdParam._m0[21u].x * _537);
    float _819 = (((_787 - _807) + (_807 * cbMtdParam._m0[22u].z)) * _655) + _807;
    float _820 = (((_788 - _808) + (_808 * cbMtdParam._m0[22u].z)) * _655) + _808;
    float _821 = (_655 * (sqrt(1.0 - (isnan(1.0) ? _1022 : (isnan(_1022) ? 1.0 : min(_1022, 1.0)))) - _804)) + _804;
    float _825 = cbMtdParam._m0[22u].x + _524.w;
    float _828 = fma(_821, _196, fma(_820, _203, _819 * _189));
    float _831 = fma(_821, _197, fma(_820, _204, _819 * _190));
    float _834 = fma(_821, _198, fma(_820, _205, _819 * _191));
    float _838 = inversesqrt(dot(vec3(_828, _831, _834), vec3(_828, _831, _834)));
    float _1033 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _1044 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _1055 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _1066 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _1077 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
    float _1088 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    uint _858 = (_227 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _864 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _1055 : (isnan(_1055) ? 1.0 : min(_1055, 1.0)))) * cbInstanceData._m0[_858].x;
    float _865 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _1066 : (isnan(_1066) ? 1.0 : min(_1066, 1.0)))) * cbInstanceData._m0[_858].y;
    float _866 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _1077 : (isnan(_1077) ? 1.0 : min(_1077, 1.0)))) * cbInstanceData._m0[_858].z;
    float _1099 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _1110 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _1121 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    uint _871 = _227 + 6u;
    bool _898 = cbMtdParam._m0[1u].z != 0.0;
    float _899 = _898 ? cbInstanceData._m0[_871].w : 0.0;
    SV_Target.x = ((_828 * 0.5) * _838) + 0.500488758087158203125;
    SV_Target.y = ((_831 * 0.5) * _838) + 0.500488758087158203125;
    SV_Target.z = ((_834 * 0.5) * _838) + 0.500488758087158203125;
    SV_Target.w = _899;
    SV_Target_1.x = isnan(1.0) ? _1088 : (isnan(_1088) ? 1.0 : min(_1088, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1033 : (isnan(_1033) ? 1.0 : min(_1033, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _898 ? cbInstanceData._m0[_871].w : ((isnan(1.0) ? _1044 : (isnan(_1044) ? 1.0 : min(_1044, 1.0))) * TEXCOORD_5.w);
    SV_Target_2.x = isnan(1.0) ? _1099 : (isnan(_1099) ? 1.0 : min(_1099, 1.0));
    SV_Target_2.y = isnan(1.0) ? _1110 : (isnan(_1110) ? 1.0 : min(_1110, 1.0));
    SV_Target_2.z = isnan(1.0) ? _1121 : (isnan(_1121) ? 1.0 : min(_1121, 1.0));
    SV_Target_2.w = _898 ? cbInstanceData._m0[_871].w : (float(floatBitsToUint(cbInstanceData._m0[_227 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _899;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _899;
}


