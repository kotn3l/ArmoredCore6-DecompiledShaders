#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1440;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4050 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4061 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4072 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _343 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _369 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _374 = _369.x * cbMtdParam._m0[11u].x;
    float _375 = _369.y * cbMtdParam._m0[11u].y;
    float _376 = _369.z * cbMtdParam._m0[11u].z;
    vec4 _395 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _443 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _445 = _443.x;
    float _457 = dot(vec4(_445, _443.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _474 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_445 - _457) * cbMtdParam._m0[23u].w) + _457) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4083 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _475 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _485 = (_343.x * cbMtdParam._m0[9u].x) * ((_475 * ((_395.x * cbMtdParam._m0[12u].x) - _374)) + _374);
    float _486 = (_343.y * cbMtdParam._m0[9u].y) * ((_475 * ((_395.y * cbMtdParam._m0[12u].y) - _375)) + _375);
    float _487 = (_343.z * cbMtdParam._m0[9u].z) * ((_475 * ((_395.z * cbMtdParam._m0[12u].z) - _376)) + _376);
    float _491 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _485;
    float _494 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _486;
    float _497 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _487;
    float _505 = (((_485 - _491) * (isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0)))) + _491) * 4.55000019073486328125;
    float _507 = (((_486 - _494) * (isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0)))) + _494) * 4.55000019073486328125;
    float _509 = (((_487 - _497) * (isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0)))) + _497) * 4.55000019073486328125;
    vec4 _527 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _552 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _569 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _571 = _569.x;
    float _572 = _569.y;
    float _573 = _569.z;
    float _582 = ((_552.z - _573) * _475) + _573;
    float _585 = ((((_552.x - _571) * _475) + _571) * 2.0) + (-1.0);
    float _586 = ((((_552.y - _572) * _475) + _572) * 2.0) + (-1.0);
    float _587 = dot(vec2(_585, _586), vec2(_585, _586));
    float _4094 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _592 = sqrt(1.0 - (isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))));
    vec4 _608 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _633 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _635 = _633.x;
    float _636 = 1.0 - _635;
    float _645 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _648 = ((isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : min(_645, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _657 = (_648 - ((((((_635 - _636) * cbMtdParam._m0[24u].z) + _636) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _648))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4115 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _658 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    float _665 = (_658 * (cbMtdParam._m0[17u].x - _505)) + _505;
    float _666 = (_658 * (cbMtdParam._m0[17u].y - _507)) + _507;
    float _667 = (_658 * (cbMtdParam._m0[17u].z - _509)) + _509;
    vec4 _679 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _681 = _679.x;
    float _682 = 1.0 - _681;
    float _707 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_681 - _682) * cbMtdParam._m0[24u].w) + _682) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4126 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _708 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _716 = ((((cbMtdParam._m0[10u].x - _665) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _708) + _665;
    float _717 = ((((cbMtdParam._m0[10u].y - _666) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _708) + _666;
    float _718 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _667)) * _708) + _667;
    vec4 _730 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _744 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _746 = _744.x;
    float _763 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _306) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _307) + cbTextureTilingScale._m0[9u].w)).x - _746) * _475) + _746;
    float _767 = ((_730.x - _763) * cbMtdParam._m0[19u].z) + _763;
    float _769 = _767 - (_767 * _658);
    float _771 = _769 - (_769 * _708);
    float _776 = (((_527.z - _582) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _582;
    float _780 = ((_608.z - _776) * cbMtdParam._m0[19u].w) + _776;
    vec4 _794 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _801 = (_794.x * 2.0) + (-1.0);
    float _802 = (_794.y * 2.0) + (-1.0);
    float _803 = dot(vec2(_801, _802), vec2(_801, _802));
    float _4137 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _811 = (_658 * (_794.z - _780)) + _780;
    float _814 = ((cbMtdParam._m0[23u].x - _811) * _708) + _811;
    vec4 _833 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _839 = (_833.x * 2.0) + (-1.0);
    float _840 = (_833.y * 2.0) + (-1.0);
    float _841 = dot(vec2(_839, _840), vec2(_839, _840));
    float _4148 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _855 = (_585 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_527.x * 2.0) + (-1.0)))) + (((_608.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _856 = (_586 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_527.y * 2.0) + (-1.0)))) + (((_608.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _868 = (((_801 - _855) + (cbMtdParam._m0[21u].x * _855)) * _658) + _855;
    float _869 = (((_802 - _856) + (cbMtdParam._m0[21u].x * _856)) * _658) + _856;
    float _870 = (_658 * (sqrt(1.0 - (isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0)))) - _592)) + _592;
    float _881 = (((_839 - _868) + (_868 * cbMtdParam._m0[22u].z)) * _708) + _868;
    float _882 = (((_840 - _869) + (_869 * cbMtdParam._m0[22u].z)) * _708) + _869;
    float _883 = ((sqrt(1.0 - (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0)))) - _870) * _708) + _870;
    float _887 = cbMtdParam._m0[22u].x + _608.w;
    float _890 = fma(_883, _255 * NORMAL.x, fma(_882, _262 * TANGENT.x, (_248 * _240) * _881));
    float _893 = fma(_883, _255 * NORMAL.y, fma(_882, _262 * TANGENT.y, (_248 * _241) * _881));
    float _896 = fma(_883, _255 * NORMAL.z, fma(_882, _262 * TANGENT.z, (_248 * _242) * _881));
    float _900 = inversesqrt(dot(vec3(_890, _893, _896), vec3(_890, _893, _896)));
    float _901 = _900 * _890;
    float _902 = _900 * _893;
    float _903 = _900 * _896;
    float _4159 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _904 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    float _4170 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _4181 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _4192 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _4203 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _4214 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _909 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _923 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _963 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _973 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _963);
    float _974 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _963);
    float _975 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _963);
    float _979 = inversesqrt(dot(vec3(_973, _974, _975), vec3(_973, _974, _975)));
    float _980 = _973 * _979;
    float _981 = _974 * _979;
    float _982 = _975 * _979;
    float _988 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _989 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1007 = fma(_903, cbSceneParam._m0[5u].z, fma(_902, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _901));
    float _1010 = fma(_903, cbSceneParam._m0[6u].z, fma(_902, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _901));
    float _1013 = fma(_903, cbSceneParam._m0[7u].z, fma(_902, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _901));
    uint _1027 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1033 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0)))) * cbInstanceData._m0[_1027].x;
    float _1034 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0)))) * cbInstanceData._m0[_1027].y;
    float _1035 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0)))) * cbInstanceData._m0[_1027].z;
    float _4225 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _1036 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _4236 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _1037 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _4247 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
    float _1038 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
    float _1039 = 1.0 - _909;
    float _1040 = _1036 * _1039;
    float _1041 = _1037 * _1039;
    float _1042 = _1038 * _1039;
    float _1047 = (_1036 + (-0.039999999105930328369140625)) * _909;
    float _1048 = (_1037 + (-0.039999999105930328369140625)) * _909;
    float _1049 = (_1038 + (-0.039999999105930328369140625)) * _909;
    float _1050 = _1047 + 0.039999999105930328369140625;
    float _1052 = _1048 + 0.039999999105930328369140625;
    float _1053 = _1049 + 0.039999999105930328369140625;
    vec4 _1062 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _988, cbSceneParam._m0[86u].y * _989));
    float _1066 = ((isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * TEXCOORD_5.w) * _1062.x;
    float _1067 = dot(vec3(_901, _902, _903), vec3(_980, _981, _982));
    float _1070 = _1067 * 2.0;
    float _1074 = (_1070 * _901) - _980;
    float _1075 = (_1070 * _902) - _981;
    float _1076 = (_1070 * _903) - _982;
    float _1080 = abs(dot(vec3(_980, _981, _982), vec3(_901, _902, _903)));
    float _4258 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1082 = sqrt(_904);
    float _1095 = exp2((_1082 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1082 * 3.0));
    float _1101 = (1.0 - _1095) * ((_1082 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1102 = _1095 * _1082;
    float _1130 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1134 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1138 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1439;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1164 = fma(_1138, cbModelParam._m0[26u].z, fma(_1134, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1130));
        float _1168 = fma(_1138, cbModelParam._m0[27u].z, fma(_1134, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1130));
        float _1172 = fma(_1138, cbModelParam._m0[28u].z, fma(_1134, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1130));
        float _1197 = _1130 + _901;
        float _1198 = _1134 + _902;
        float _1199 = _1138 + _903;
        float _1209 = fma(_1199, cbModelParam._m0[26u].z, fma(_1198, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1197)) - _1164;
        float _1210 = fma(_1199, cbModelParam._m0[27u].z, fma(_1198, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1197)) - _1168;
        float _1211 = fma(_1199, cbModelParam._m0[28u].z, fma(_1198, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1197)) - _1172;
        float _1215 = inversesqrt(dot(vec3(_1209, _1210, _1211), vec3(_1209, _1210, _1211)));
        float _1228 = ((_1215 * _1209) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1164 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1229 = ((_1215 * _1210) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1168 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1230 = ((_1215 * _1211) / cbModelParam._m0[34u].z) + ((((((_1172 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1233 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1240 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1247 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1254 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        float _1267 = exp2((_1233.w + (-0.5)) * 20.0) * 2.0;
        float _1268 = _1267 * (_1233.x + (-0.5));
        float _1269 = _1267 * (_1233.y + (-0.5));
        float _1270 = _1267 * (_1233.z + (-0.5));
        float _1277 = exp2((_1240.w + (-0.5)) * 20.0) * 2.0;
        float _1278 = _1277 * (_1240.x + (-0.5));
        float _1279 = _1277 * (_1240.y + (-0.5));
        float _1280 = _1277 * (_1240.z + (-0.5));
        float _1287 = exp2((_1247.w + (-0.5)) * 20.0) * 2.0;
        float _1288 = _1287 * (_1247.x + (-0.5));
        float _1289 = _1287 * (_1247.y + (-0.5));
        float _1290 = _1287 * (_1247.z + (-0.5));
        float _1297 = exp2((_1254.w + (-0.5)) * 20.0) * 2.0;
        float _1298 = _1297 * (_1254.x + (-0.5));
        float _1299 = _1297 * (_1254.y + (-0.5));
        float _1300 = _1297 * (_1254.z + (-0.5));
        float _1301 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1302 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1304 = _1268 * 0.5;
        float _1305 = _1278 * 0.5;
        float _1306 = _1288 * 0.5;
        float _1307 = dot(vec3(_1304, _1305, _1306), vec3(_1304, _1305, _1306));
        float _1312 = (_1307 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1307);
        float _1321 = (dot(vec3(_901, _902, _903), vec3(_1312 * _1304, _1312 * _1305, _1312 * _1306)) + 1.0) * 0.5;
        float _4284 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1331 = sqrt(((_1305 * _1305) + (_1304 * _1304)) + (_1306 * _1306)) / (_1301 + 9.9999997473787516355514526367188e-06);
        float _4295 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1332 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
        float _1333 = _1332 * 2.0;
        float _1337 = (1.0 - _1332) / (_1332 + 1.0);
        float _4306 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1347 = ((((1.0 - _1338) * (_1333 + 2.0)) * exp2(log2(isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0))) * (_1333 + 1.0))) + _1338) * _1301;
        float _1348 = _1269 * 0.5;
        float _1349 = _1279 * 0.5;
        float _1350 = _1289 * 0.5;
        float _1351 = dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350));
        float _1356 = (_1351 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1351);
        float _1364 = (dot(vec3(_901, _902, _903), vec3(_1356 * _1348, _1356 * _1349, _1356 * _1350)) + 1.0) * 0.5;
        float _4317 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1373 = sqrt(((_1349 * _1349) + (_1348 * _1348)) + (_1350 * _1350)) / (_1302 + 9.9999997473787516355514526367188e-06);
        float _4328 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1374 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
        float _1375 = _1374 * 2.0;
        float _1379 = (1.0 - _1374) / (_1374 + 1.0);
        float _4339 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _1389 = ((((1.0 - _1380) * (_1375 + 2.0)) * exp2(log2(isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0))) * (_1375 + 1.0))) + _1380) * _1302;
        float _1390 = _1270 * 0.5;
        float _1391 = _1280 * 0.5;
        float _1392 = _1290 * 0.5;
        float _1393 = dot(vec3(_1390, _1391, _1392), vec3(_1390, _1391, _1392));
        float _1398 = (_1393 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1393);
        float _1406 = (dot(vec3(_901, _902, _903), vec3(_1398 * _1390, _1398 * _1391, _1398 * _1392)) + 1.0) * 0.5;
        float _4350 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1415 = sqrt(((_1391 * _1391) + (_1390 * _1390)) + (_1392 * _1392)) / (_1303 + 9.9999997473787516355514526367188e-06);
        float _4361 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1416 = isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0));
        float _1417 = _1416 * 2.0;
        float _1421 = (1.0 - _1416) / (_1416 + 1.0);
        float _4372 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1422 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _1431 = ((((1.0 - _1422) * (_1417 + 2.0)) * exp2(log2(isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0))) * (_1417 + 1.0))) + _1422) * _1303;
        _1439 = _1270;
        _1441 = _1269;
        _1442 = _1268;
        _1443 = _1280;
        _1444 = _1279;
        _1445 = _1278;
        _1446 = _1290;
        _1447 = _1289;
        _1448 = _1288;
        _1449 = _1303;
        _1450 = _1302;
        _1451 = _1301;
        _1452 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0)));
        _1453 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0)));
        _1454 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0)));
    }
    else
    {
        _1439 = _1440;
        _1441 = _1440;
        _1442 = _1440;
        _1443 = _1440;
        _1444 = _1440;
        _1445 = _1440;
        _1446 = _1440;
        _1447 = _1440;
        _1448 = _1440;
        _1449 = _1440;
        _1450 = _1440;
        _1451 = _1440;
        _1452 = 0.0;
        _1453 = 0.0;
        _1454 = 0.0;
    }
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    float _1761;
    float _1762;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1479 = fma(_1138, cbModelParam._m0[30u].z, fma(_1134, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1130));
        float _1483 = fma(_1138, cbModelParam._m0[31u].z, fma(_1134, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1130));
        float _1487 = fma(_1138, cbModelParam._m0[32u].z, fma(_1134, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1130));
        float _1510 = _1130 + _901;
        float _1511 = _1134 + _902;
        float _1512 = _1138 + _903;
        float _1522 = fma(_1512, cbModelParam._m0[30u].z, fma(_1511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1510)) - _1479;
        float _1523 = fma(_1512, cbModelParam._m0[31u].z, fma(_1511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1510)) - _1483;
        float _1524 = fma(_1512, cbModelParam._m0[32u].z, fma(_1511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1510)) - _1487;
        float _1528 = inversesqrt(dot(vec3(_1522, _1523, _1524), vec3(_1522, _1523, _1524)));
        float _1541 = ((_1528 * _1522) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1479 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1542 = ((_1528 * _1523) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1483 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1543 = ((_1528 * _1524) / cbModelParam._m0[35u].z) + ((((((_1487 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1545 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1552 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1559 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        vec4 _1566 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1541, _1542, _1543), 0.0);
        float _1578 = exp2((_1545.w + (-0.5)) * 20.0) * 2.0;
        float _1579 = _1578 * (_1545.x + (-0.5));
        float _1580 = _1578 * (_1545.y + (-0.5));
        float _1581 = _1578 * (_1545.z + (-0.5));
        float _1588 = exp2((_1552.w + (-0.5)) * 20.0) * 2.0;
        float _1589 = _1588 * (_1552.x + (-0.5));
        float _1590 = _1588 * (_1552.y + (-0.5));
        float _1591 = _1588 * (_1552.z + (-0.5));
        float _1598 = exp2((_1559.w + (-0.5)) * 20.0) * 2.0;
        float _1599 = _1598 * (_1559.x + (-0.5));
        float _1600 = _1598 * (_1559.y + (-0.5));
        float _1601 = _1598 * (_1559.z + (-0.5));
        float _1608 = exp2((_1566.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1566.x + (-0.5));
        float _1610 = _1608 * (_1566.y + (-0.5));
        float _1611 = _1608 * (_1566.z + (-0.5));
        float _1612 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1613 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1614 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1615 = _1579 * 0.5;
        float _1616 = _1589 * 0.5;
        float _1617 = _1599 * 0.5;
        float _1618 = dot(vec3(_1615, _1616, _1617), vec3(_1615, _1616, _1617));
        float _1623 = (_1618 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1618);
        float _1631 = (dot(vec3(_901, _902, _903), vec3(_1623 * _1615, _1623 * _1616, _1623 * _1617)) + 1.0) * 0.5;
        float _4413 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1640 = sqrt(((_1616 * _1616) + (_1615 * _1615)) + (_1617 * _1617)) / (_1612 + 9.9999997473787516355514526367188e-06);
        float _4424 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1641 = isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0));
        float _1642 = _1641 * 2.0;
        float _1646 = (1.0 - _1641) / (_1641 + 1.0);
        float _4435 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1647 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1656 = ((((1.0 - _1647) * (_1642 + 2.0)) * exp2(log2(isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0))) * (_1642 + 1.0))) + _1647) * _1612;
        float _1657 = _1580 * 0.5;
        float _1658 = _1590 * 0.5;
        float _1659 = _1600 * 0.5;
        float _1660 = dot(vec3(_1657, _1658, _1659), vec3(_1657, _1658, _1659));
        float _1665 = (_1660 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1660);
        float _1673 = (dot(vec3(_901, _902, _903), vec3(_1665 * _1657, _1665 * _1658, _1665 * _1659)) + 1.0) * 0.5;
        float _4446 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1682 = sqrt(((_1658 * _1658) + (_1657 * _1657)) + (_1659 * _1659)) / (_1613 + 9.9999997473787516355514526367188e-06);
        float _4457 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1683 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
        float _1684 = _1683 * 2.0;
        float _1688 = (1.0 - _1683) / (_1683 + 1.0);
        float _4468 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1689 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1698 = ((((1.0 - _1689) * (_1684 + 2.0)) * exp2(log2(isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))) * (_1684 + 1.0))) + _1689) * _1613;
        float _1699 = _1581 * 0.5;
        float _1700 = _1591 * 0.5;
        float _1701 = _1601 * 0.5;
        float _1702 = dot(vec3(_1699, _1700, _1701), vec3(_1699, _1700, _1701));
        float _1707 = (_1702 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1702);
        float _1715 = (dot(vec3(_901, _902, _903), vec3(_1707 * _1699, _1707 * _1700, _1707 * _1701)) + 1.0) * 0.5;
        float _4479 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1724 = sqrt(((_1700 * _1700) + (_1699 * _1699)) + (_1701 * _1701)) / (_1614 + 9.9999997473787516355514526367188e-06);
        float _4490 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1725 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
        float _1726 = _1725 * 2.0;
        float _1730 = (1.0 - _1725) / (_1725 + 1.0);
        float _4501 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1731 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _1740 = ((((1.0 - _1731) * (_1726 + 2.0)) * exp2(log2(isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))) * (_1726 + 1.0))) + _1731) * _1614;
        _1748 = _1581;
        _1749 = _1580;
        _1750 = _1579;
        _1751 = _1591;
        _1752 = _1590;
        _1753 = _1589;
        _1754 = _1601;
        _1755 = _1600;
        _1756 = _1599;
        _1757 = _1614;
        _1758 = _1613;
        _1759 = _1612;
        _1760 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0)));
        _1761 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0)));
        _1762 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0)));
    }
    else
    {
        _1748 = _1440;
        _1749 = _1440;
        _1750 = _1440;
        _1751 = _1440;
        _1752 = _1440;
        _1753 = _1440;
        _1754 = _1440;
        _1755 = _1440;
        _1756 = _1440;
        _1757 = _1440;
        _1758 = _1440;
        _1759 = _1440;
        _1760 = 0.0;
        _1761 = 0.0;
        _1762 = 0.0;
    }
    float _1772 = (cbModelParam._m0[1u].x * (_1760 - _1452)) + _1452;
    float _1773 = (cbModelParam._m0[1u].x * (_1761 - _1453)) + _1453;
    float _1774 = (cbModelParam._m0[1u].x * (_1762 - _1454)) + _1454;
    float _1795 = fma(_1774, cbSceneParam._m0[89u].z, fma(_1773, cbSceneParam._m0[89u].y, _1772 * cbSceneParam._m0[89u].x));
    float _1798 = fma(_1774, cbSceneParam._m0[90u].z, fma(_1773, cbSceneParam._m0[90u].y, _1772 * cbSceneParam._m0[90u].x));
    float _1801 = fma(_1774, cbSceneParam._m0[91u].z, fma(_1773, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1772));
    float _1816 = _1074 * 0.5;
    float _1817 = _1075 * 0.5;
    float _1818 = _1076 * 0.5;
    float _1819 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1750, _1753, _1756, _1759));
    float _1822 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1749, _1752, _1755, _1758));
    float _1825 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1748, _1751, _1754, _1757));
    float _1859;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1832 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1439, _1443, _1446, _1449));
        float _1836 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1441, _1444, _1447, _1450));
        float _1840 = dot(vec4(_1816, _1817, _1818, 1.0), vec4(_1442, _1445, _1448, _1451));
        float _1847 = dot(vec4(cbModelParam._m0[39u]), vec4(_1816, _1817, _1818, 1.0));
        _1859 = dot(vec3(isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0)), isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)), isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1847) ? 0.0 : (isnan(0.0) ? _1847 : max(0.0, _1847))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1859 = 1.0;
    }
    float _1870;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1861 = dot(vec4(cbModelParam._m0[40u]), vec4(_1816, _1817, _1818, 1.0));
        _1870 = dot(vec3(isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0)), isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0)), isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1861) ? 0.0 : (isnan(0.0) ? _1861 : max(0.0, _1861))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1870 = 1.0;
    }
    float _1874 = (_1870 * cbModelParam._m0[1u].x) + (_1859 * (1.0 - cbModelParam._m0[1u].x));
    float _1884 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _904);
    float _1885 = isnan(_1884) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1884 : min(cbModelParam._m0[25u].z, _1884));
    float _1966;
    float _1968;
    float _1970;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1933 = fma(_1138, cbModelParam._m0[13u].z, fma(_1134, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1130)) + cbModelParam._m0[13u].w;
        float _1937 = fma(_1138, cbModelParam._m0[14u].z, fma(_1134, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1130)) + cbModelParam._m0[14u].w;
        float _1941 = fma(_1138, cbModelParam._m0[15u].z, fma(_1134, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1130)) + cbModelParam._m0[15u].w;
        float _1944 = fma(_1076, cbModelParam._m0[13u].z, fma(_1075, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1074));
        float _1947 = fma(_1076, cbModelParam._m0[14u].z, fma(_1075, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1074));
        float _1950 = fma(_1076, cbModelParam._m0[15u].z, fma(_1075, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1074));
        float _1978;
        if (_1944 > 0.0)
        {
            _1978 = abs((1.0 - _1933) / _1944);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1944 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1933 + 1.0) / _1944);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1978 = frontier_phi_14_12_ladder;
        }
        float _2150;
        if (_1947 > 0.0)
        {
            _2150 = abs((1.0 - _1937) / _1947);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1947 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1937 + 1.0) / _1947);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2150 = frontier_phi_23_19_ladder;
        }
        float _2445;
        if (_1950 > 0.0)
        {
            _2445 = abs((1.0 - _1941) / _1950);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1950 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1941 + 1.0) / _1950);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2445 = frontier_phi_35_30_ladder;
        }
        float _2447 = isnan(_2150) ? _1978 : (isnan(_1978) ? _2150 : min(_1978, _2150));
        float _2448 = isnan(_2445) ? _2447 : (isnan(_2447) ? _2445 : min(_2447, _2445));
        float _2452 = (_2448 * _1944) + _1933;
        float _2453 = (_2448 * _1947) + _1937;
        float _2454 = (_2448 * _1950) + _1941;
        float _2455 = _2448 * 9.9999997473787516355514526367188e-05;
        float _2457 = (-1.0) - _2455;
        float _2459 = _2455 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2454 > _2459) || ((_2454 < _2457) || ((_2453 > _2459) || ((_2453 < _2457) || ((_2452 < _2457) || (_2452 > _2459))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2599 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2454, cbModelParam._m0[9u].z, fma(_2453, cbModelParam._m0[9u].y, _2452 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2454, cbModelParam._m0[10u].z, fma(_2453, cbModelParam._m0[10u].y, _2452 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2454, cbModelParam._m0[11u].z, fma(_2453, cbModelParam._m0[11u].y, _2452 * cbModelParam._m0[11u].x))), _1885);
            frontier_phi_13_35_ladder = _2599.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2599.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2599.x * cbModelParam._m0[1u].y;
        }
        _1966 = frontier_phi_13_35_ladder_2;
        _1968 = frontier_phi_13_35_ladder_1;
        _1970 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1954 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1074, _1075, _1076), _1885);
        _1966 = _1954.x * cbModelParam._m0[1u].y;
        _1968 = _1954.y * cbModelParam._m0[1u].y;
        _1970 = _1954.z * cbModelParam._m0[1u].y;
    }
    float _1974 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _904);
    float _1975 = isnan(_1974) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1974 : min(cbModelParam._m0[25u].w, _1974));
    float _2065;
    float _2067;
    float _2069;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2029 = fma(_1138, cbModelParam._m0[21u].z, fma(_1134, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1130)) + cbModelParam._m0[21u].w;
        float _2033 = fma(_1138, cbModelParam._m0[22u].z, fma(_1134, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1130)) + cbModelParam._m0[22u].w;
        float _2037 = fma(_1138, cbModelParam._m0[23u].z, fma(_1134, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1130)) + cbModelParam._m0[23u].w;
        float _2040 = fma(_1076, cbModelParam._m0[21u].z, fma(_1075, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1074));
        float _2043 = fma(_1076, cbModelParam._m0[22u].z, fma(_1075, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1074));
        float _2046 = fma(_1076, cbModelParam._m0[23u].z, fma(_1075, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1074));
        float _2155;
        if (_2040 > 0.0)
        {
            _2155 = abs((1.0 - _2029) / _2040);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2040 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2029 + 1.0) / _2040);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2155 = frontier_phi_25_21_ladder;
        }
        float _2472;
        if (_2043 > 0.0)
        {
            _2472 = abs((1.0 - _2033) / _2043);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2043 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2033 + 1.0) / _2043);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2472 = frontier_phi_37_32_ladder;
        }
        float _2810;
        if (_2046 > 0.0)
        {
            _2810 = abs((1.0 - _2037) / _2046);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2046 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2037 + 1.0) / _2046);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2810 = frontier_phi_47_44_ladder;
        }
        float _2812 = isnan(_2472) ? _2155 : (isnan(_2155) ? _2472 : min(_2155, _2472));
        float _2813 = isnan(_2810) ? _2812 : (isnan(_2812) ? _2810 : min(_2812, _2810));
        float _2817 = (_2813 * _2040) + _2029;
        float _2818 = (_2813 * _2043) + _2033;
        float _2819 = (_2813 * _2046) + _2037;
        float _2820 = _2813 * 9.9999997473787516355514526367188e-05;
        float _2821 = (-1.0) - _2820;
        float _2823 = _2820 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2819 > _2823) || ((_2819 < _2821) || ((_2818 > _2823) || ((_2818 < _2821) || ((_2817 < _2821) || (_2817 > _2823))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2941 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2819, cbModelParam._m0[17u].z, fma(_2818, cbModelParam._m0[17u].y, _2817 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2819, cbModelParam._m0[18u].z, fma(_2818, cbModelParam._m0[18u].y, _2817 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2819, cbModelParam._m0[19u].z, fma(_2818, cbModelParam._m0[19u].y, _2817 * cbModelParam._m0[19u].x))), _1975);
            frontier_phi_22_47_ladder = _2941.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2941.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2941.x * cbModelParam._m0[1u].z;
        }
        _2065 = frontier_phi_22_47_ladder_2;
        _2067 = frontier_phi_22_47_ladder_1;
        _2069 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2049 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1074, _1075, _1076), _1975);
        _2065 = _2049.x * cbModelParam._m0[1u].z;
        _2067 = _2049.y * cbModelParam._m0[1u].z;
        _2069 = _2049.z * cbModelParam._m0[1u].z;
    }
    float _2082 = (((_1101 * _1050) + _1102) * _1066) * ((cbModelParam._m0[1u].w * (_2065 - _1966)) + _1966);
    float _2084 = (((_1101 * _1052) + _1102) * _1066) * ((cbModelParam._m0[1u].w * (_2067 - _1968)) + _1968);
    float _2086 = (((_1101 * _1053) + _1102) * _1066) * ((cbModelParam._m0[1u].w * (_2069 - _1970)) + _1970);
    float _2089 = fma(_2086, cbSceneParam._m0[89u].z, fma(_2084, cbSceneParam._m0[89u].y, _2082 * cbSceneParam._m0[89u].x));
    float _2092 = fma(_2086, cbSceneParam._m0[90u].z, fma(_2084, cbSceneParam._m0[90u].y, _2082 * cbSceneParam._m0[90u].x));
    float _2095 = fma(_2086, cbSceneParam._m0[91u].z, fma(_2084, cbSceneParam._m0[91u].y, _2082 * cbSceneParam._m0[91u].x));
    float _2129 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2133 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2137 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2141 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2142 = _2129 / _2141;
    float _2143 = _2133 / _2141;
    float _2144 = _2137 / _2141;
    float _2291;
    float _2292;
    float _2293;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2171 = ((uint(_2144 > cbSceneParam._m0[59u].y) + uint(_2144 > cbSceneParam._m0[59u].x)) + uint(_2144 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2172 = _2171 + 43u;
        uint _2180 = _2171 + 44u;
        uint _2188 = _2171 + 45u;
        uint _2196 = _2171 + 46u;
        float _2207 = fma(_2141, cbSceneParam._m0[_2172].w, fma(_2137, cbSceneParam._m0[_2172].z, fma(_2133, cbSceneParam._m0[_2172].y, _2129 * cbSceneParam._m0[_2172].x)));
        float _2211 = fma(_2141, cbSceneParam._m0[_2180].w, fma(_2137, cbSceneParam._m0[_2180].z, fma(_2133, cbSceneParam._m0[_2180].y, _2129 * cbSceneParam._m0[_2180].x)));
        float _2219 = fma(_2141, cbSceneParam._m0[_2196].w, fma(_2137, cbSceneParam._m0[_2196].z, fma(_2133, cbSceneParam._m0[_2196].y, _2129 * cbSceneParam._m0[_2196].x)));
        float _2224 = cbSceneParam._m0[33u].z * _2219;
        float _2226 = cbSceneParam._m0[33u].w * _2219;
        float _2229 = fma(_2141, cbSceneParam._m0[_2188].w, fma(_2137, cbSceneParam._m0[_2188].z, fma(_2133, cbSceneParam._m0[_2188].y, _2129 * cbSceneParam._m0[_2188].x))) / _2219;
        float _2277 = (cbSceneParam._m0[33u].x - sqrt(((_2143 * _2143) + (_2142 * _2142)) + (_2144 * _2144))) * cbSceneParam._m0[33u].y;
        float _4627 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
        float _2284 = (isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2224 + _2207) / _2219, (_2226 + _2211) / _2219), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2226 + _2207) / _2219, (_2211 - _2224) / _2219), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2207 - _2224) / _2219, (_2211 - _2226) / _2219), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2207 - _2226) / _2219, (_2224 + _2211) / _2219), _2229), 0.0)).x), vec4(0.25)));
        _2291 = 1.0 - (_2284 * cbSceneParam._m0[34u].x);
        _2292 = 1.0 - (_2284 * cbSceneParam._m0[34u].y);
        _2293 = 1.0 - (_2284 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2291 = 1.0;
        _2292 = 1.0;
        _2293 = 1.0;
    }
    float _2357;
    float _2359;
    float _2361;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2345 = fma(_2141, cbSceneParam._m0[63u].w, fma(_2137, cbSceneParam._m0[63u].z, fma(_2133, cbSceneParam._m0[63u].y, _2129 * cbSceneParam._m0[63u].x)));
        float _2346 = fma(_2141, cbSceneParam._m0[60u].w, fma(_2137, cbSceneParam._m0[60u].z, fma(_2133, cbSceneParam._m0[60u].y, _2129 * cbSceneParam._m0[60u].x))) / _2345;
        float _2347 = fma(_2141, cbSceneParam._m0[61u].w, fma(_2137, cbSceneParam._m0[61u].z, fma(_2133, cbSceneParam._m0[61u].y, _2129 * cbSceneParam._m0[61u].x))) / _2345;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2346 >= cbSceneParam._m0[64u].x) && (_2347 >= cbSceneParam._m0[64u].y)) && (_2346 <= cbSceneParam._m0[64u].z)) && (_2347 <= cbSceneParam._m0[64u].w))
        {
            float _2485 = fma(_2141, cbSceneParam._m0[62u].w, fma(_2137, cbSceneParam._m0[62u].z, fma(_2133, cbSceneParam._m0[62u].y, _2129 * cbSceneParam._m0[62u].x))) / _2345;
            float _2489 = isnan(cbSceneParam._m0[41u].w) ? _2485 : (isnan(_2485) ? cbSceneParam._m0[41u].w : max(_2485, cbSceneParam._m0[41u].w));
            float _2532 = (cbSceneParam._m0[33u].x - sqrt(((_2143 * _2143) + (_2142 * _2142)) + (_2144 * _2144))) * cbSceneParam._m0[33u].y;
            float _4643 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
            float _2539 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2346, cbSceneParam._m0[33u].w + _2347), _2489), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2346, _2347 - cbSceneParam._m0[33u].z), _2489), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2346 - cbSceneParam._m0[33u].z, _2347 - cbSceneParam._m0[33u].w), _2489), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2346 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2347), _2489), 0.0)).x), vec4(0.25)));
            float _2543 = 1.0 - (_2539 * cbSceneParam._m0[34u].x);
            float _2544 = 1.0 - (_2539 * cbSceneParam._m0[34u].y);
            float _2545 = 1.0 - (_2539 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2545) ? _2293 : (isnan(_2293) ? _2545 : min(_2293, _2545));
            frontier_phi_34_33_ladder_1 = isnan(_2544) ? _2292 : (isnan(_2292) ? _2544 : min(_2292, _2544));
            frontier_phi_34_33_ladder_2 = isnan(_2543) ? _2291 : (isnan(_2291) ? _2543 : min(_2291, _2543));
        }
        else
        {
            frontier_phi_34_33_ladder = _2293;
            frontier_phi_34_33_ladder_1 = _2292;
            frontier_phi_34_33_ladder_2 = _2291;
        }
        _2357 = frontier_phi_34_33_ladder_2;
        _2359 = frontier_phi_34_33_ladder_1;
        _2361 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2357 = _2291;
        _2359 = _2292;
        _2361 = _2293;
    }
    uvec4 _2366 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2368 = _2366.x * 14u;
    uint _2369 = _2368 + 13u;
    float _2376 = _1066 + (-1.0);
    float _2381 = (cbLight._m0[_2369].x * _2376) + 1.0;
    float _2382 = (cbLight._m0[_2369].y * _2376) + 1.0;
    float _2383 = (cbLight._m0[_2369].z * _2376) + 1.0;
    float _2384 = (cbLight._m0[_2369].w * _2376) + 1.0;
    uint _2385 = _2368 + 5u;
    float _2391 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
    uint _2395 = _2368 + 4u;
    float _2404 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
    uint _2408 = _2368 | 1u;
    float _2419 = dot(vec3(cbLight._m0[_2368].xyz), vec3(_901, _902, _903));
    float _2422 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_901, _902, _903));
    float _4679 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _4690 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2427 = (isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0))) * 0.3183098733425140380859375;
    float _2429 = (isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0))) * 0.3183098733425140380859375;
    float _2436 = ((cbLight._m0[_2385].x * _2391) * _2429) + (((cbLight._m0[_2395].x * _2357) * _2404) * _2427);
    float _2437 = ((_2391 * cbLight._m0[_2385].y) * _2429) + (((cbLight._m0[_2395].y * _2359) * _2404) * _2427);
    float _2438 = ((_2391 * cbLight._m0[_2385].z) * _2429) + (((cbLight._m0[_2395].z * _2361) * _2404) * _2427);
    uvec4 _2442 = floatBitsToUint(cbLight._m0[_2368 + 12u]);
    bool _2444 = _2442.x == 0u;
    float _2546;
    float _2548;
    float _2550;
    if (_2444)
    {
        _2546 = _2436;
        _2548 = _2437;
        _2550 = _2438;
    }
    else
    {
        uint _2554 = _2368 + 6u;
        float _2570 = (dot(vec3(cbLight._m0[_2368 + 2u].xyz), vec3(_901, _902, _903)) * 0.5) + 0.5;
        float _2571 = _2570 * _2570;
        float _4701 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2572 = isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0));
        float _2573 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
        _2546 = (((cbLight._m0[_2554].x * 0.3183098733425140380859375) * _2572) * _2573) + _2436;
        _2548 = (((cbLight._m0[_2554].y * 0.3183098733425140380859375) * _2572) * _2573) + _2437;
        _2550 = (((cbLight._m0[_2554].z * 0.3183098733425140380859375) * _2572) * _2573) + _2438;
    }
    bool _2553 = _2442.y == 0u;
    float _2608;
    float _2610;
    float _2612;
    if (_2553)
    {
        _2608 = _2546;
        _2610 = _2548;
        _2612 = _2550;
    }
    else
    {
        uint _2781 = _2368 + 7u;
        float _2797 = (dot(vec3(cbLight._m0[_2368 + 3u].xyz), vec3(_901, _902, _903)) * 0.5) + 0.5;
        float _2798 = _2797 * _2797;
        float _4717 = isnan(0.0) ? _2798 : (isnan(_2798) ? 0.0 : max(_2798, 0.0));
        float _2799 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
        float _2800 = isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0));
        _2608 = (((cbLight._m0[_2781].x * 0.3183098733425140380859375) * _2799) * _2800) + _2546;
        _2610 = (((cbLight._m0[_2781].y * 0.3183098733425140380859375) * _2799) * _2800) + _2548;
        _2612 = (((cbLight._m0[_2781].z * 0.3183098733425140380859375) * _2799) * _2800) + _2550;
    }
    uint _2615 = _2368 + 8u;
    float _2628 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2368].w)) * _904) * 0.949999988079071044921875);
    float _2629 = _2628 * _2628;
    float _2630 = cbLight._m0[_2368].x + _980;
    float _2631 = cbLight._m0[_2368].y + _981;
    float _2632 = cbLight._m0[_2368].z + _982;
    float _2636 = inversesqrt(dot(vec3(_2630, _2631, _2632), vec3(_2630, _2631, _2632)));
    float _2637 = _2636 * _2630;
    float _2638 = _2636 * _2631;
    float _2639 = _2636 * _2632;
    float _2640 = dot(vec3(_901, _902, _903), vec3(cbLight._m0[_2368].xyz));
    float _4733 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
    float _2643 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
    float _4744 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _2644 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
    float _2645 = dot(vec3(_901, _902, _903), vec3(_2637, _2638, _2639));
    float _4755 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
    float _2648 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
    float _2649 = dot(vec3(cbLight._m0[_2368].xyz), vec3(_2637, _2638, _2639));
    float _4766 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
    float _2653 = _2629 * _2629;
    float _2657 = ((_2648 * _2648) * (_2653 + (-1.0))) + 1.0;
    float _2665 = exp2(log2(1.0 - (isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0)))) * 5.0);
    float _2666 = 0.959999978542327880859375 - _1047;
    float _2668 = 0.959999978542327880859375 - _1048;
    float _2669 = 0.959999978542327880859375 - _1049;
    float _2676 = 1.0 - _2629;
    float _2687 = (0.5 / (((_2644 * ((_2643 * _2676) + _2629)) + 9.9999999392252902907785028219223e-09) + (((_2644 * _2676) + _2629) * _2643))) * _2643;
    float _4777 = isnan(0.0) ? _2687 : (isnan(_2687) ? 0.0 : max(_2687, 0.0));
    float _2689 = (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_2653 / ((_2657 * _2657) * 3.141590118408203125));
    uint _2703 = _2368 + 9u;
    float _2714 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2408].w)) * _904) * 0.949999988079071044921875);
    float _2715 = _2714 * _2714;
    float _2716 = cbLight._m0[_2408].x + _980;
    float _2717 = cbLight._m0[_2408].y + _981;
    float _2718 = cbLight._m0[_2408].z + _982;
    float _2722 = inversesqrt(dot(vec3(_2716, _2717, _2718), vec3(_2716, _2717, _2718)));
    float _2723 = _2722 * _2716;
    float _2724 = _2722 * _2717;
    float _2725 = _2722 * _2718;
    float _2726 = dot(vec3(_901, _902, _903), vec3(cbLight._m0[_2408].xyz));
    float _4788 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
    float _2729 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
    float _2730 = dot(vec3(_901, _902, _903), vec3(_2723, _2724, _2725));
    float _4799 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
    float _2733 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
    float _2734 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_2723, _2724, _2725));
    float _4810 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
    float _2738 = _2715 * _2715;
    float _2742 = ((_2733 * _2733) * (_2738 + (-1.0))) + 1.0;
    float _2749 = exp2(log2(1.0 - (isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0)))) * 5.0);
    float _2756 = 1.0 - _2715;
    float _2766 = (0.5 / (((_2644 * ((_2729 * _2756) + _2715)) + 9.9999999392252902907785028219223e-09) + (((_2644 * _2756) + _2715) * _2729))) * _2729;
    float _4821 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
    float _2768 = (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0))) * (_2738 / ((_2742 * _2742) * 3.141590118408203125));
    float _2778 = (((((_2749 * _2666) + _1050) * cbLight._m0[_2703].x) * _2768) * _2391) + ((((cbLight._m0[_2615].x * _2357) * ((_2665 * _2666) + _1050)) * _2689) * _2404);
    float _2779 = (((((_2749 * _2668) + _1052) * cbLight._m0[_2703].y) * _2768) * _2391) + ((((cbLight._m0[_2615].y * _2359) * ((_2665 * _2668) + _1052)) * _2689) * _2404);
    float _2780 = (((((_2749 * _2669) + _1053) * cbLight._m0[_2703].z) * _2768) * _2391) + ((((cbLight._m0[_2615].z * _2361) * ((_2665 * _2669) + _1053)) * _2689) * _2404);
    float _2836;
    float _2838;
    float _2840;
    if (_2444)
    {
        _2836 = _2778;
        _2838 = _2779;
        _2840 = _2780;
    }
    else
    {
        uint _2842 = _2368 + 2u;
        uint _2846 = _2368 + 10u;
        float _2860 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2842].w)) * _904) * 0.949999988079071044921875);
        float _2861 = _2860 * _2860;
        float _2862 = cbLight._m0[_2842].x + _980;
        float _2863 = cbLight._m0[_2842].y + _981;
        float _2864 = cbLight._m0[_2842].z + _982;
        float _2868 = inversesqrt(dot(vec3(_2862, _2863, _2864), vec3(_2862, _2863, _2864)));
        float _2869 = _2868 * _2862;
        float _2870 = _2868 * _2863;
        float _2871 = _2868 * _2864;
        float _2872 = dot(vec3(_901, _902, _903), vec3(cbLight._m0[_2842].xyz));
        float _4832 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
        float _2875 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
        float _2876 = dot(vec3(_901, _902, _903), vec3(_2869, _2870, _2871));
        float _4843 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0));
        float _2879 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
        float _2880 = dot(vec3(cbLight._m0[_2842].xyz), vec3(_2869, _2870, _2871));
        float _4854 = isnan(0.0) ? _2880 : (isnan(_2880) ? 0.0 : max(_2880, 0.0));
        float _2884 = _2861 * _2861;
        float _2888 = ((_2879 * _2879) * (_2884 + (-1.0))) + 1.0;
        float _2895 = exp2(log2(1.0 - (isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0)))) * 5.0);
        float _2902 = 1.0 - _2861;
        float _2912 = (0.5 / (((_2644 * ((_2875 * _2902) + _2861)) + 9.9999999392252902907785028219223e-09) + (((_2644 * _2902) + _2861) * _2875))) * _2875;
        float _4865 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
        float _2914 = (isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * (_2884 / ((_2888 * _2888) * 3.141590118408203125));
        float _2915 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
        _2836 = (((((_2895 * _2666) + _1050) * cbLight._m0[_2846].x) * _2914) * _2915) + _2778;
        _2838 = (((((_2895 * _2668) + _1052) * cbLight._m0[_2846].y) * _2914) * _2915) + _2779;
        _2840 = (((((_2895 * _2669) + _1053) * cbLight._m0[_2846].z) * _2914) * _2915) + _2780;
    }
    float _2946;
    float _2948;
    float _2950;
    if (_2553)
    {
        _2946 = _2836;
        _2948 = _2838;
        _2950 = _2840;
    }
    else
    {
        uint _2957 = _2368 + 3u;
        uint _2961 = _2368 + 11u;
        float _2975 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2957].w)) * _904) * 0.949999988079071044921875);
        float _2976 = _2975 * _2975;
        float _2977 = cbLight._m0[_2957].x + _980;
        float _2978 = cbLight._m0[_2957].y + _981;
        float _2979 = cbLight._m0[_2957].z + _982;
        float _2983 = inversesqrt(dot(vec3(_2977, _2978, _2979), vec3(_2977, _2978, _2979)));
        float _2984 = _2983 * _2977;
        float _2985 = _2983 * _2978;
        float _2986 = _2983 * _2979;
        float _2987 = dot(vec3(_901, _902, _903), vec3(cbLight._m0[_2957].xyz));
        float _4881 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
        float _2990 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
        float _2991 = dot(vec3(_901, _902, _903), vec3(_2984, _2985, _2986));
        float _4892 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0));
        float _2994 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
        float _2995 = dot(vec3(cbLight._m0[_2957].xyz), vec3(_2984, _2985, _2986));
        float _4903 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2999 = _2976 * _2976;
        float _3003 = ((_2994 * _2994) * (_2999 + (-1.0))) + 1.0;
        float _3010 = exp2(log2(1.0 - (isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0)))) * 5.0);
        float _3017 = 1.0 - _2976;
        float _3027 = (0.5 / (((_2644 * ((_2990 * _3017) + _2976)) + 9.9999999392252902907785028219223e-09) + (((_2644 * _3017) + _2976) * _2990))) * _2990;
        float _4914 = isnan(0.0) ? _3027 : (isnan(_3027) ? 0.0 : max(_3027, 0.0));
        float _3029 = (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0))) * (_2999 / ((_3003 * _3003) * 3.141590118408203125));
        float _3030 = isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0));
        _2946 = (((((_3010 * _2666) + _1050) * cbLight._m0[_2961].x) * _3029) * _3030) + _2836;
        _2948 = (((((_3010 * _2668) + _1052) * cbLight._m0[_2961].y) * _3029) * _3030) + _2838;
        _2950 = (((((_3010 * _2669) + _1053) * cbLight._m0[_2961].z) * _3029) * _3030) + _2840;
    }
    float _3096;
    float _3098;
    float _3100;
    float _3102;
    float _3104;
    float _3106;
    if (_2366.y == 0u)
    {
        uvec4 _3051 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3052 = _3051.x;
        uint _3063 = uint((float(_3051.y) * floor(float(uint(cbSceneParam._m0[85u].y * _989) / _3052))) + floor(float(uint(cbSceneParam._m0[85u].x * _988) / _3052)));
        float _3073 = (log2(_2144 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3074 = isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : max(_3073, 0.0));
        uint _3077 = uint(isnan(14.0) ? _3074 : (isnan(_3074) ? 14.0 : min(_3074, 14.0)));
        uvec4 _3082 = texelFetch(g_lightClusterGridBuffer, int(((_3077 << 2u) + (_3063 << 6u)) >> 2u));
        uint _3083 = _3082.x;
        uint _3084 = _3051.z;
        float _3163;
        float _3165;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        if (((((1u << ((_3084 >> 4u) & 15u)) + 4294967295u) & _3083) == 0u) || ((_3084 & 240u) == 0u))
        {
            _3163 = 0.0;
            _3165 = 0.0;
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
        }
        else
        {
            float _3164;
            float _3166;
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3308 = 0.0;
            float _3309 = 0.0;
            float _3310 = 0.0;
            float _3311 = 0.0;
            float _3312 = 0.0;
            float _3313 = 0.0;
            uint _3314 = 0u;
            uint _3323;
            bool _3324;
            for (;;)
            {
                _3323 = texelFetch(g_lightClassification, int((((_3077 << 5u) + (_3063 << 9u)) + (_3314 << 2u)) >> 2u)).x;
                _3324 = _3323 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3324)
                {
                    frontier_phi_66_pred = _3313;
                    frontier_phi_66_pred_1 = _3312;
                    frontier_phi_66_pred_2 = _3311;
                    frontier_phi_66_pred_3 = _3310;
                    frontier_phi_66_pred_4 = _3309;
                    frontier_phi_66_pred_5 = _3308;
                }
                else
                {
                    float _3432;
                    float _3433;
                    float _3434;
                    float _3435;
                    float _3436;
                    float _3437;
                    uint _3438;
                    _3432 = _3308;
                    _3433 = _3309;
                    _3434 = _3310;
                    _3435 = _3311;
                    _3436 = _3312;
                    _3437 = _3313;
                    _3438 = _3323;
                    float _3364;
                    float _3365;
                    float _3366;
                    float _3367;
                    float _3368;
                    float _3369;
                    for (;;)
                    {
                        uint _3442 = uint(findLSB(_3438)) + (_3314 << 5u);
                        uint _3439 = (_3438 + 4294967295u) & _3438;
                        uint _3444 = _3442 * 48u;
                        vec4 _3458 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3444)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 3u)).x));
                        uint _3464 = (_3442 * 48u) + 4u;
                        vec4 _3477 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3464)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 3u)).x));
                        uint _3483 = (_3442 * 48u) + 8u;
                        vec3 _3494 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3483)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 2u)).x));
                        float _3498 = _3458.x - _2142;
                        float _3499 = _3458.y - _2143;
                        float _3500 = _3458.z - _2144;
                        float _3501 = dot(vec3(_3498, _3499, _3500), vec3(_3498, _3499, _3500));
                        float _3504 = inversesqrt(_3501);
                        float _3505 = _3504 * _3498;
                        float _3506 = _3504 * _3499;
                        float _3507 = _3504 * _3500;
                        float _3508 = dot(vec3(_1007, _1010, _1013), vec3(_3505, _3506, _3507));
                        float _3513 = 1.0 - (_3501 * _3458.w);
                        float _4940 = isnan(0.0) ? _3513 : (isnan(_3513) ? 0.0 : max(_3513, 0.0));
                        float _3514 = isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0));
                        float _3515 = sqrt(_3501) * _3477.w;
                        float _3518 = 1.39999997615814208984375 / (_3515 + 1.39999997615814208984375);
                        float _3519 = _3518 * _3518;
                        float _3522 = ((1.0 - _3519) * _3508) + _3519;
                        float _3525 = _3515 * _3515;
                        float _3529 = ((isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0))) * _3514) / ((_3525 * 0.699999988079071044921875) + 1.0);
                        float _3533 = (-0.0) - _2142;
                        float _3534 = (-0.0) - _2143;
                        float _3535 = (-0.0) - _2144;
                        float _3539 = inversesqrt(dot(vec3(_3533, _3534, _3535), vec3(_3533, _3534, _3535)));
                        float _3540 = _3539 * _3533;
                        float _3541 = _3539 * _3534;
                        float _3542 = _3539 * _3535;
                        float _3549 = exp2(log2(1.0 / ((_3525 * 3.5) + 5.0)) * 0.25);
                        float _3550 = 1.0 - _1082;
                        float _3557 = sqrt(1.0 - ((1.0 - (_3550 * _3550)) * (1.0 - (_3549 * _3549))));
                        float _3558 = _3557 * _3557;
                        float _3559 = _3558 * _3558;
                        float _3560 = _3540 + _3505;
                        float _3561 = _3541 + _3506;
                        float _3562 = _3542 + _3507;
                        float _3566 = inversesqrt(dot(vec3(_3560, _3561, _3562), vec3(_3560, _3561, _3562)));
                        float _3570 = dot(vec3(_1007, _1010, _1013), vec3(_3540, _3541, _3542));
                        float _4956 = isnan(0.0) ? _3570 : (isnan(_3570) ? 0.0 : max(_3570, 0.0));
                        float _3573 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
                        float _3574 = dot(vec3(_1007, _1010, _1013), vec3(_3566 * _3560, _3566 * _3561, _3566 * _3562));
                        float _4967 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3577 = isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0));
                        float _3581 = ((_3577 * _3577) * (_3559 + (-1.0))) + 1.0;
                        float _3582 = _3518 * _3558;
                        float _3583 = _3582 * _3582;
                        float _3586 = ((1.0 - _3583) * _3508) + _3583;
                        float _4978 = isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0));
                        float _3587 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
                        float _3588 = 1.0 - _3558;
                        float _3598 = (0.5 / (((_3587 * ((_3573 * _3588) + _3558)) + 9.9999999392252902907785028219223e-09) + (((_3587 * _3588) + _3558) * _3573))) * _3587;
                        float _4989 = isnan(0.0) ? _3598 : (isnan(_3598) ? 0.0 : max(_3598, 0.0));
                        float _3609 = (((_3559 * 3.1415927410125732421875) * (isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0)))) / ((_3581 * _3581) * ((_3525 * 2.1991131305694580078125) + 3.141590118408203125))) * _3514;
                        _3367 = (_3529 * _3477.x) + _3435;
                        _3368 = (_3529 * _3477.y) + _3436;
                        _3369 = (_3529 * _3477.z) + _3437;
                        _3364 = (_3609 * _3494.x) + _3432;
                        _3365 = (_3609 * _3494.y) + _3433;
                        _3366 = (_3609 * _3494.z) + _3434;
                        if (_3439 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3432 = _3364;
                            _3433 = _3365;
                            _3434 = _3366;
                            _3435 = _3367;
                            _3436 = _3368;
                            _3437 = _3369;
                            _3438 = _3439;
                        }
                    }
                    frontier_phi_66_pred = _3369;
                    frontier_phi_66_pred_1 = _3368;
                    frontier_phi_66_pred_2 = _3367;
                    frontier_phi_66_pred_3 = _3366;
                    frontier_phi_66_pred_4 = _3365;
                    frontier_phi_66_pred_5 = _3364;
                }
                _3174 = frontier_phi_66_pred;
                _3172 = frontier_phi_66_pred_1;
                _3170 = frontier_phi_66_pred_2;
                _3168 = frontier_phi_66_pred_3;
                _3166 = frontier_phi_66_pred_4;
                _3164 = frontier_phi_66_pred_5;
                uint _3315 = _3314 + 1u;
                if (_3315 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3308 = _3164;
                    _3309 = _3166;
                    _3310 = _3168;
                    _3311 = _3170;
                    _3312 = _3172;
                    _3313 = _3174;
                    _3314 = _3315;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3163 = _3164;
            _3165 = _3166;
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
        }
        uvec4 _3177 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3178 = _3177.z;
        uint _3180 = (_3178 >> 8u) & 15u;
        float _3276;
        float _3278;
        float _3280;
        float _3282;
        float _3284;
        float _3286;
        if (((4294967295u << _3180) & _3083) == 0u)
        {
            _3276 = _3163;
            _3278 = _3165;
            _3280 = _3167;
            _3282 = _3169;
            _3284 = _3171;
            _3286 = _3173;
        }
        else
        {
            float _3301 = inversesqrt(dot(vec3(_2142, _2143, _2144), vec3(_2142, _2143, _2144)));
            float _3302 = _3301 * _2142;
            float _3303 = _3301 * _2143;
            float _3304 = _3301 * _2144;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3180 < ((_3178 >> 12u) & 15u))
            {
                float _3277;
                float _3279;
                float _3281;
                float _3283;
                float _3285;
                float _3287;
                float _3415 = _3163;
                float _3416 = _3165;
                float _3417 = _3167;
                float _3418 = _3169;
                float _3419 = _3171;
                float _3420 = _3173;
                uint _3421 = _3180;
                uint _3430;
                bool _3431;
                for (;;)
                {
                    _3430 = texelFetch(g_lightClassification, int((((_3077 << 5u) + (_3063 << 9u)) + (_3421 << 2u)) >> 2u)).x;
                    _3431 = _3430 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3431)
                    {
                        frontier_phi_72_pred = _3420;
                        frontier_phi_72_pred_1 = _3419;
                        frontier_phi_72_pred_2 = _3418;
                        frontier_phi_72_pred_3 = _3417;
                        frontier_phi_72_pred_4 = _3416;
                        frontier_phi_72_pred_5 = _3415;
                    }
                    else
                    {
                        float _3614;
                        float _3615;
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3907;
                        float _3908;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3627 = _3415;
                        float _3628 = _3416;
                        float _3629 = _3417;
                        float _3630 = _3418;
                        float _3631 = _3419;
                        float _3632 = _3420;
                        uint _3633 = _3430;
                        uint _3634;
                        vec4 _3659;
                        float _3660;
                        vec4 _3675;
                        vec3 _3687;
                        vec4 _3702;
                        vec4 _3717;
                        float _3763;
                        bool _3764;
                        for (;;)
                        {
                            uint _3644 = ((_3421 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3633));
                            _3634 = (_3633 + 4294967295u) & _3633;
                            uint _3646 = _3644 * 40u;
                            _3659 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3646)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 3u)).x));
                            _3660 = _3659.w;
                            uint _3662 = (_3644 * 40u) + 4u;
                            _3675 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 3u)).x));
                            uint _3677 = (_3644 * 40u) + 8u;
                            _3687 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x));
                            uint _3689 = (_3644 * 40u) + 16u;
                            _3702 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 3u)).x));
                            uint _3704 = (_3644 * 40u) + 20u;
                            _3717 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3704)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 3u)).x));
                            uint _3719 = (_3644 * 40u) + 24u;
                            vec4 _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            uint _3738 = (_3644 * 40u) + 28u;
                            vec4 _3751 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3738)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 3u)).x));
                            _3763 = fma(_2144, _3751.z, fma(_2143, _3751.y, _3751.x * _2142)) + _3751.w;
                            _3764 = !((fma(_2144, _3732.z, fma(_2143, _3732.y, _3732.x * _2142)) + _3732.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3764)
                            {
                                float _3791 = _3659.x - _2142;
                                float _3792 = _3659.y - _2143;
                                float _3793 = _3659.z - _2144;
                                float _3794 = dot(vec3(_3791, _3792, _3793), vec3(_3791, _3792, _3793));
                                float _3797 = inversesqrt(_3794);
                                float _3798 = _3797 * _3791;
                                float _3799 = _3797 * _3792;
                                float _3800 = _3797 * _3793;
                                float _3804 = 1.0 - (_3794 / (_3660 * _3660));
                                float _5000 = isnan(0.0) ? _3804 : (isnan(_3804) ? 0.0 : max(_3804, 0.0));
                                float _3805 = isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0));
                                float _3809 = sqrt(_3794) * _3675.w;
                                float _3811 = 1.39999997615814208984375 / (_3809 + 1.39999997615814208984375);
                                float _3812 = _3811 * _3811;
                                float _3815 = ((1.0 - _3812) * dot(vec3(_3798, _3799, _3800), vec3(_1007, _1010, _1013))) + _3812;
                                float _3818 = _3809 * _3809;
                                float _3822 = (fma(_2144, _3702.z, fma(_2143, _3702.y, _3702.x * _2142)) + _3702.w) / _3763;
                                float _3823 = (fma(_2144, _3717.z, fma(_2143, _3717.y, _3717.x * _2142)) + _3717.w) / _3763;
                                float _3827 = 1.0 - dot(vec2(_3822, _3823), vec2(_3822, _3823));
                                float _5016 = isnan(0.0) ? _3827 : (isnan(_3827) ? 0.0 : max(_3827, 0.0));
                                float _3828 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
                                float _3829 = _3828 * (((isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0))) * _3805) / ((_3818 * 0.699999988079071044921875) + 1.0));
                                float _3841 = exp2(log2(1.0 / ((_3818 * 3.5) + 5.0)) * 0.25);
                                float _3842 = 1.0 - _1082;
                                float _3849 = sqrt(1.0 - ((1.0 - (_3842 * _3842)) * (1.0 - (_3841 * _3841))));
                                float _3850 = _3849 * _3849;
                                float _3851 = _3850 * _3850;
                                float _3852 = _3798 - _3302;
                                float _3853 = _3799 - _3303;
                                float _3854 = _3800 - _3304;
                                float _3858 = inversesqrt(dot(vec3(_3852, _3853, _3854), vec3(_3852, _3853, _3854)));
                                float _3862 = dot(vec3(_1007, _1010, _1013), vec3((-0.0) - _3302, (-0.0) - _3303, (-0.0) - _3304));
                                float _5027 = isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0));
                                float _3865 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
                                float _3866 = dot(vec3(_1007, _1010, _1013), vec3(_3858 * _3852, _3858 * _3853, _3858 * _3854));
                                float _5038 = isnan(0.0) ? _3866 : (isnan(_3866) ? 0.0 : max(_3866, 0.0));
                                float _3869 = isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0));
                                float _3873 = ((_3869 * _3869) * (_3851 + (-1.0))) + 1.0;
                                float _3874 = _3811 * _3850;
                                float _3875 = _3874 * _3874;
                                float _3881 = ((1.0 - _3875) * dot(vec3(_1007, _1010, _1013), vec3(_3798, _3799, _3800))) + _3875;
                                float _5049 = isnan(0.0) ? _3881 : (isnan(_3881) ? 0.0 : max(_3881, 0.0));
                                float _3882 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
                                float _3883 = 1.0 - _3850;
                                float _3893 = (0.5 / (((_3882 * ((_3865 * _3883) + _3850)) + 9.9999999392252902907785028219223e-09) + (((_3882 * _3883) + _3850) * _3865))) * _3882;
                                float _5060 = isnan(0.0) ? _3893 : (isnan(_3893) ? 0.0 : max(_3893, 0.0));
                                float _3903 = (_3828 * _3805) * (((_3851 * 3.1415927410125732421875) * (isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0)))) / ((_3873 * _3873) * ((_3818 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3829 * _3675.y;
                                frontier_phi_78_pred_1 = _3829 * _3675.x;
                                frontier_phi_78_pred_2 = _3903 * _3687.z;
                                frontier_phi_78_pred_3 = _3903 * _3687.y;
                                frontier_phi_78_pred_4 = _3903 * _3687.x;
                                frontier_phi_78_pred_5 = _3829 * _3675.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3911 = frontier_phi_78_pred;
                            _3910 = frontier_phi_78_pred_1;
                            _3909 = frontier_phi_78_pred_2;
                            _3908 = frontier_phi_78_pred_3;
                            _3907 = frontier_phi_78_pred_4;
                            _3912 = frontier_phi_78_pred_5;
                            _3617 = _3910 + _3630;
                            _3618 = _3911 + _3631;
                            _3619 = _3912 + _3632;
                            _3614 = _3907 + _3627;
                            _3615 = _3908 + _3628;
                            _3616 = _3909 + _3629;
                            if (_3634 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3627 = _3614;
                                _3628 = _3615;
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3634;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3619;
                        frontier_phi_72_pred_1 = _3618;
                        frontier_phi_72_pred_2 = _3617;
                        frontier_phi_72_pred_3 = _3616;
                        frontier_phi_72_pred_4 = _3615;
                        frontier_phi_72_pred_5 = _3614;
                    }
                    _3287 = frontier_phi_72_pred;
                    _3285 = frontier_phi_72_pred_1;
                    _3283 = frontier_phi_72_pred_2;
                    _3281 = frontier_phi_72_pred_3;
                    _3279 = frontier_phi_72_pred_4;
                    _3277 = frontier_phi_72_pred_5;
                    uint _3422 = _3421 + 1u;
                    if (_3422 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3415 = _3277;
                        _3416 = _3279;
                        _3417 = _3281;
                        _3418 = _3283;
                        _3419 = _3285;
                        _3420 = _3287;
                        _3421 = _3422;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3287;
                frontier_phi_60_61_ladder_1 = _3285;
                frontier_phi_60_61_ladder_2 = _3281;
                frontier_phi_60_61_ladder_3 = _3279;
                frontier_phi_60_61_ladder_4 = _3277;
                frontier_phi_60_61_ladder_5 = _3283;
            }
            else
            {
                frontier_phi_60_61_ladder = _3173;
                frontier_phi_60_61_ladder_1 = _3171;
                frontier_phi_60_61_ladder_2 = _3167;
                frontier_phi_60_61_ladder_3 = _3165;
                frontier_phi_60_61_ladder_4 = _3163;
                frontier_phi_60_61_ladder_5 = _3169;
            }
            _3276 = frontier_phi_60_61_ladder_4;
            _3278 = frontier_phi_60_61_ladder_3;
            _3280 = frontier_phi_60_61_ladder_2;
            _3282 = frontier_phi_60_61_ladder_5;
            _3284 = frontier_phi_60_61_ladder_1;
            _3286 = frontier_phi_60_61_ladder;
        }
        float _3291 = isnan(1.0) ? _1066 : (isnan(_1066) ? 1.0 : min(_1066, 1.0));
        _3096 = (_3291 * _3282) + _2608;
        _3098 = (_3291 * _3284) + _2610;
        _3100 = (_3291 * _3286) + _2612;
        _3102 = ((_3276 * _1050) * _3291) + _2946;
        _3104 = ((_3278 * _1052) * _3291) + _2948;
        _3106 = ((_3280 * _1053) * _3291) + _2950;
    }
    else
    {
        _3096 = _2608;
        _3098 = _2610;
        _3100 = _2612;
        _3102 = _2946;
        _3104 = _2948;
        _3106 = _2950;
    }
    float _5076 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    float _5087 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _5098 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    uint _3126 = _287 + 6u;
    float _3134 = _988 / cbSceneParam._m0[86u].x;
    float _3135 = _989 / cbSceneParam._m0[86u].y;
    vec4 _3149 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3134, _3135, (log2((isnan(cbSceneParam._m0[77u].w) ? _923 : (isnan(_923) ? cbSceneParam._m0[77u].w : min(_923, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3151 = _3149.x;
    float _3152 = _3149.y;
    float _3153 = _3149.z;
    float _3154 = _3149.w;
    float _3226;
    float _3228;
    float _3230;
    float _3232;
    if (_923 > cbSceneParam._m0[78u].w)
    {
        float _3188 = isnan(_923) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _923 : min(cbSceneParam._m0[80u].w, _923));
        float _3189 = _3188 / _923;
        float _3200 = _3189 * _973;
        float _3201 = _974 * _3189;
        float _3202 = (-0.0) - _3201;
        float _3204 = _3189 * _975;
        float _3206 = (cbSceneParam._m0[77u].w * _3202) / _3188;
        float _3207 = _3206 + cbSceneParam._m0[79u].w;
        float _3208 = cbSceneParam._m0[79u].w - _3201;
        float _3214 = sqrt(((_3200 * _3200) + (_3201 * _3201)) + (_3204 * _3204));
        float _3217 = (1.0 - (cbSceneParam._m0[77u].w / _3188)) * _3214;
        float _3222 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3224 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3377;
        if (abs((_3202 - _3206) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3377 = ((((_3207 > 0.0) ? exp2(_3222 * _3207) : (2.0 - exp2(_3224 * _3207))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3217;
        }
        else
        {
            float _3337 = 1.0 / cbSceneParam._m0[80u].x;
            float _3338 = isnan(_3208) ? _3207 : (isnan(_3207) ? _3208 : max(_3207, _3208));
            float _3339 = isnan(_3208) ? _3207 : (isnan(_3207) ? _3208 : min(_3207, _3208));
            float _3348 = isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : min(_3338, 0.0));
            float _3349 = isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : min(_3339, 0.0));
            _3377 = ((abs(_3214 / _3202) * cbSceneParam._m0[80u].y) * ((((_3348 - _3349) * 2.0) - ((exp2(_3222 * (isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0)))) - exp2(_3222 * (isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : max(_3339, 0.0))))) * _3337)) - ((exp2(_3224 * _3348) - exp2(_3224 * _3349)) * _3337))) + (_3217 * cbSceneParam._m0[80u].z);
        }
        vec4 _3379 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3134, _3135, 1.0), 0.0);
        float _3388 = exp2((_3377 * (-1.44269502162933349609375)) * (1.0 - _3379.w));
        float _3389 = log2(_3388);
        float _3405 = log2(_3154);
        _3226 = (exp2(_3405 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].x)) * _3379.x) / cbSceneParam._m0[78u].x)) + _3151;
        _3228 = (exp2(_3405 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].y)) * _3379.y) / cbSceneParam._m0[78u].y)) + _3152;
        _3230 = (exp2(_3405 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].z)) * _3379.z) / cbSceneParam._m0[78u].z)) + _3153;
        _3232 = _3388 * _3154;
    }
    else
    {
        _3226 = _3151;
        _3228 = _3152;
        _3230 = _3153;
        _3232 = _3154;
    }
    float _3244 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3245 = _3244 == 3.0;
    float _3246 = log2(_3232);
    float _3253 = exp2(_3246 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0))) * (_3096 + ((isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0))) * _1066))) + ((_3102 + ((isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3254 = exp2(_3246 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0))) * (_3098 + ((isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))) * _1066))) + ((_3104 + ((isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3255 = exp2(_3246 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0))) * (_3100 + ((isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))) * _1066))) + ((_3106 + ((isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0))) * _1874)) * cbPerFrame._m0[3u].x));
    float _3264 = (_3244 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3264 * (_3245 ? _3253 : (_3253 + (cbSceneParam._m0[72u].w * _3226)));
    SV_Target.y = _3264 * (_3245 ? _3254 : (_3254 + (cbSceneParam._m0[72u].w * _3228)));
    SV_Target.z = _3264 * (_3245 ? _3255 : (_3255 + (cbSceneParam._m0[72u].w * _3230)));
    SV_Target.w = cbInstanceData._m0[_3126].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3126].w;
}


