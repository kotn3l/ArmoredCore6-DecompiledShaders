#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1459;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _230 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _231 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _232 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _238 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _258 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _258 + 1u;
    uint _268 = _258 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _305 = _299.x * cbMtdParam._m0[11u].x;
    float _306 = _299.y * cbMtdParam._m0[11u].y;
    float _307 = _299.z * cbMtdParam._m0[11u].z;
    vec4 _326 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _346 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _385 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _387 = _385.x;
    float _399 = dot(vec4(_387, _385.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _416 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _346.x) * 2.0) - ((((_387 - _399) * cbMtdParam._m0[23u].w) + _399) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4065 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _417 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
    float _424 = (_417 * ((_326.x * cbMtdParam._m0[12u].x) - _305)) + _305;
    float _425 = (_417 * ((_326.y * cbMtdParam._m0[12u].y) - _306)) + _306;
    float _426 = (_417 * ((_326.z * cbMtdParam._m0[12u].z) - _307)) + _307;
    vec4 _443 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _278) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _279) + cbTextureTilingScale._m0[3u].w));
    vec4 _463 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _465 = _463.x;
    float _475 = dot(vec4(_465, _463.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _489 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _346.y) * 2.0) - ((((_465 - _475) * cbMtdParam._m0[23u].w) + _475) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4076 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _490 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
    float _497 = (_490 * ((_443.x * cbMtdParam._m0[13u].x) - _424)) + _424;
    float _498 = (_490 * ((_443.y * cbMtdParam._m0[13u].y) - _425)) + _425;
    float _499 = (_490 * ((_443.z * cbMtdParam._m0[13u].z) - _426)) + _426;
    vec4 _518 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _278) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _279) + cbTextureTilingScale._m0[24u].w));
    vec4 _535 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _537 = _535.x;
    float _547 = dot(vec4(_537, _535.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _559 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _346.z) * 2.0) - ((((_537 - _547) * cbMtdParam._m0[23u].w) + _547) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4087 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _560 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
    float _567 = (_560 * ((_518.x * cbMtdParam._m0[14u].x) - _497)) + _497;
    float _568 = (_560 * ((_518.y * cbMtdParam._m0[14u].y) - _498)) + _498;
    float _569 = (_560 * ((_518.z * cbMtdParam._m0[14u].z) - _499)) + _499;
    vec4 _587 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _278) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _279) + cbTextureTilingScale._m0[14u].w));
    vec4 _607 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _624 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _626 = _624.x;
    float _627 = _624.y;
    float _628 = _624.z;
    float _635 = ((_607.x - _626) * _417) + _626;
    float _636 = ((_607.y - _627) * _417) + _627;
    float _637 = ((_607.z - _628) * _417) + _628;
    vec4 _649 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _278) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _279) + cbTextureTilingScale._m0[2u].w));
    float _660 = ((_649.x - _635) * _490) + _635;
    float _661 = ((_649.y - _636) * _490) + _636;
    float _662 = ((_649.z - _637) * _490) + _637;
    vec4 _674 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _278) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _279) + cbTextureTilingScale._m0[23u].w));
    float _687 = ((_674.z - _662) * _560) + _662;
    float _690 = ((((_674.x - _660) * _560) + _660) * 2.0) + (-1.0);
    float _692 = ((((_674.y - _661) * _560) + _661) * 2.0) + (-1.0);
    float _693 = dot(vec2(_690, _692), vec2(_690, _692));
    float _4098 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _698 = sqrt(1.0 - (isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))));
    vec4 _712 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _737 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _739 = _737.x;
    float _740 = 1.0 - _739;
    float _755 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_739 - _740) * cbMtdParam._m0[24u].z) + _740) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4109 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _756 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
    float _763 = (_756 * ((_587.x * cbMtdParam._m0[18u].x) - _567)) + _567;
    float _764 = (_756 * ((_587.y * cbMtdParam._m0[18u].y) - _568)) + _568;
    float _765 = (_756 * ((_587.z * cbMtdParam._m0[18u].z) - _569)) + _569;
    vec4 _791 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _793 = _791.x;
    float _811 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _278) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _279) + cbTextureTilingScale._m0[9u].w)).x - _793) * _417) + _793;
    float _828 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _278) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _279) + cbTextureTilingScale._m0[21u].w)).x - _811) * _490) + _811;
    float _846 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _278) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _279) + cbTextureTilingScale._m0[10u].w)).x - _828) * _560) + _828;
    float _850 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _846) * cbMtdParam._m0[19u].z) + _846;
    float _852 = _850 - (_850 * _756);
    float _856 = (cbMtdParam._m0[19u].w * (_712.z - _687)) + _687;
    vec4 _869 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _876 = (_869.x * 2.0) + (-1.0);
    float _877 = (_869.y * 2.0) + (-1.0);
    float _878 = dot(vec2(_876, _877), vec2(_876, _877));
    float _4120 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _886 = (_756 * (_869.z - _856)) + _856;
    float _889 = (((_712.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _690;
    float _890 = (((_712.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _692;
    float _902 = (((_876 - _889) + (cbMtdParam._m0[21u].x * _889)) * _756) + _889;
    float _903 = (((_877 - _890) + (cbMtdParam._m0[21u].x * _890)) * _756) + _890;
    float _904 = (_756 * (sqrt(1.0 - (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0)))) - _698)) + _698;
    float _906 = cbMtdParam._m0[22u].x + _712.w;
    float _909 = fma(_904, _245 * NORMAL.x, fma(_903, _252 * TANGENT.x, (_238 * _230) * _902));
    float _912 = fma(_904, _245 * NORMAL.y, fma(_903, _252 * TANGENT.y, (_238 * _231) * _902));
    float _915 = fma(_904, _245 * NORMAL.z, fma(_903, _252 * TANGENT.z, (_238 * _232) * _902));
    float _919 = inversesqrt(dot(vec3(_909, _912, _915), vec3(_909, _912, _915)));
    float _920 = _919 * _909;
    float _921 = _919 * _912;
    float _922 = _919 * _915;
    float _4131 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _923 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
    float _4142 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _4153 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4164 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _4175 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _4186 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _928 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
    float _942 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _982 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _992 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _982);
    float _993 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _982);
    float _994 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _982);
    float _998 = inversesqrt(dot(vec3(_992, _993, _994), vec3(_992, _993, _994)));
    float _999 = _992 * _998;
    float _1000 = _993 * _998;
    float _1001 = _994 * _998;
    float _1007 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1008 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1026 = fma(_922, cbSceneParam._m0[5u].z, fma(_921, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _920));
    float _1029 = fma(_922, cbSceneParam._m0[6u].z, fma(_921, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _920));
    float _1032 = fma(_922, cbSceneParam._m0[7u].z, fma(_921, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _920));
    uint _1046 = (_258 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1052 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0)))) * cbInstanceData._m0[_1046].x;
    float _1053 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0)))) * cbInstanceData._m0[_1046].y;
    float _1054 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0)))) * cbInstanceData._m0[_1046].z;
    float _4197 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
    float _1055 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _4208 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    float _1056 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
    float _4219 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
    float _1057 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _1058 = 1.0 - _928;
    float _1059 = _1055 * _1058;
    float _1060 = _1056 * _1058;
    float _1061 = _1057 * _1058;
    float _1066 = (_1055 + (-0.039999999105930328369140625)) * _928;
    float _1067 = (_1056 + (-0.039999999105930328369140625)) * _928;
    float _1068 = (_1057 + (-0.039999999105930328369140625)) * _928;
    float _1069 = _1066 + 0.039999999105930328369140625;
    float _1071 = _1067 + 0.039999999105930328369140625;
    float _1072 = _1068 + 0.039999999105930328369140625;
    vec4 _1081 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1007, cbSceneParam._m0[86u].y * _1008));
    float _1085 = ((isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0))) * TEXCOORD_5.w) * _1081.x;
    float _1086 = dot(vec3(_920, _921, _922), vec3(_999, _1000, _1001));
    float _1089 = _1086 * 2.0;
    float _1093 = (_1089 * _920) - _999;
    float _1094 = (_1089 * _921) - _1000;
    float _1095 = (_1089 * _922) - _1001;
    float _1099 = abs(dot(vec3(_999, _1000, _1001), vec3(_920, _921, _922)));
    float _4230 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1101 = sqrt(_923);
    float _1114 = exp2((_1101 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1101 * 3.0));
    float _1120 = (1.0 - _1114) * ((_1101 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1121 = _1114 * _1101;
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1157 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1458;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1183 = fma(_1157, cbModelParam._m0[26u].z, fma(_1153, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1149));
        float _1187 = fma(_1157, cbModelParam._m0[27u].z, fma(_1153, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1149));
        float _1191 = fma(_1157, cbModelParam._m0[28u].z, fma(_1153, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1149));
        float _1216 = _1149 + _920;
        float _1217 = _1153 + _921;
        float _1218 = _1157 + _922;
        float _1228 = fma(_1218, cbModelParam._m0[26u].z, fma(_1217, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1216)) - _1183;
        float _1229 = fma(_1218, cbModelParam._m0[27u].z, fma(_1217, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1216)) - _1187;
        float _1230 = fma(_1218, cbModelParam._m0[28u].z, fma(_1217, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1216)) - _1191;
        float _1234 = inversesqrt(dot(vec3(_1228, _1229, _1230), vec3(_1228, _1229, _1230)));
        float _1247 = ((_1234 * _1228) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1183 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1248 = ((_1234 * _1229) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1187 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1249 = ((_1234 * _1230) / cbModelParam._m0[34u].z) + ((((((_1191 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1252 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        float _1286 = exp2((_1252.w + (-0.5)) * 20.0) * 2.0;
        float _1287 = _1286 * (_1252.x + (-0.5));
        float _1288 = _1286 * (_1252.y + (-0.5));
        float _1289 = _1286 * (_1252.z + (-0.5));
        float _1296 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1259.x + (-0.5));
        float _1298 = _1296 * (_1259.y + (-0.5));
        float _1299 = _1296 * (_1259.z + (-0.5));
        float _1306 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1307 = _1306 * (_1266.x + (-0.5));
        float _1308 = _1306 * (_1266.y + (-0.5));
        float _1309 = _1306 * (_1266.z + (-0.5));
        float _1316 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1273.x + (-0.5));
        float _1318 = _1316 * (_1273.y + (-0.5));
        float _1319 = _1316 * (_1273.z + (-0.5));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1322 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
        float _1323 = _1287 * 0.5;
        float _1324 = _1297 * 0.5;
        float _1325 = _1307 * 0.5;
        float _1326 = dot(vec3(_1323, _1324, _1325), vec3(_1323, _1324, _1325));
        float _1331 = (_1326 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1326);
        float _1340 = (dot(vec3(_920, _921, _922), vec3(_1331 * _1323, _1331 * _1324, _1331 * _1325)) + 1.0) * 0.5;
        float _4256 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1350 = sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _4267 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1351 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
        float _1352 = _1351 * 2.0;
        float _1356 = (1.0 - _1351) / (_1351 + 1.0);
        float _4278 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1366 = ((((1.0 - _1357) * (_1352 + 2.0)) * exp2(log2(isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))) * (_1352 + 1.0))) + _1357) * _1320;
        float _1367 = _1288 * 0.5;
        float _1368 = _1298 * 0.5;
        float _1369 = _1308 * 0.5;
        float _1370 = dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369));
        float _1375 = (_1370 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1370);
        float _1383 = (dot(vec3(_920, _921, _922), vec3(_1375 * _1367, _1375 * _1368, _1375 * _1369)) + 1.0) * 0.5;
        float _4289 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369)) / (_1321 + 9.9999997473787516355514526367188e-06);
        float _4300 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
        float _1394 = _1393 * 2.0;
        float _1398 = (1.0 - _1393) / (_1393 + 1.0);
        float _4311 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1408 = ((((1.0 - _1399) * (_1394 + 2.0)) * exp2(log2(isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0))) * (_1394 + 1.0))) + _1399) * _1321;
        float _1409 = _1289 * 0.5;
        float _1410 = _1299 * 0.5;
        float _1411 = _1309 * 0.5;
        float _1412 = dot(vec3(_1409, _1410, _1411), vec3(_1409, _1410, _1411));
        float _1417 = (_1412 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1412);
        float _1425 = (dot(vec3(_920, _921, _922), vec3(_1417 * _1409, _1417 * _1410, _1417 * _1411)) + 1.0) * 0.5;
        float _4322 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1434 = sqrt(((_1410 * _1410) + (_1409 * _1409)) + (_1411 * _1411)) / (_1322 + 9.9999997473787516355514526367188e-06);
        float _4333 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _1436 = _1435 * 2.0;
        float _1440 = (1.0 - _1435) / (_1435 + 1.0);
        float _4344 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1450 = ((((1.0 - _1441) * (_1436 + 2.0)) * exp2(log2(isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0))) * (_1436 + 1.0))) + _1441) * _1322;
        _1458 = _1289;
        _1460 = _1288;
        _1461 = _1287;
        _1462 = _1299;
        _1463 = _1298;
        _1464 = _1297;
        _1465 = _1309;
        _1466 = _1308;
        _1467 = _1307;
        _1468 = _1322;
        _1469 = _1321;
        _1470 = _1320;
        _1471 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0)));
        _1472 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0)));
        _1473 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)));
    }
    else
    {
        _1458 = _1459;
        _1460 = _1459;
        _1461 = _1459;
        _1462 = _1459;
        _1463 = _1459;
        _1464 = _1459;
        _1465 = _1459;
        _1466 = _1459;
        _1467 = _1459;
        _1468 = _1459;
        _1469 = _1459;
        _1470 = _1459;
        _1471 = 0.0;
        _1472 = 0.0;
        _1473 = 0.0;
    }
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1496 = fma(_1157, cbModelParam._m0[30u].z, fma(_1153, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1149));
        float _1500 = fma(_1157, cbModelParam._m0[31u].z, fma(_1153, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1149));
        float _1504 = fma(_1157, cbModelParam._m0[32u].z, fma(_1153, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1149));
        float _1527 = _1149 + _920;
        float _1528 = _1153 + _921;
        float _1529 = _1157 + _922;
        float _1539 = fma(_1529, cbModelParam._m0[30u].z, fma(_1528, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1527)) - _1496;
        float _1540 = fma(_1529, cbModelParam._m0[31u].z, fma(_1528, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1527)) - _1500;
        float _1541 = fma(_1529, cbModelParam._m0[32u].z, fma(_1528, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1527)) - _1504;
        float _1545 = inversesqrt(dot(vec3(_1539, _1540, _1541), vec3(_1539, _1540, _1541)));
        float _1558 = ((_1545 * _1539) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1496 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1559 = ((_1545 * _1540) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1500 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1560 = ((_1545 * _1541) / cbModelParam._m0[35u].z) + ((((((_1504 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1562 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1558, _1559, _1560), 0.0);
        vec4 _1569 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1558, _1559, _1560), 0.0);
        vec4 _1576 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1558, _1559, _1560), 0.0);
        vec4 _1583 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1558, _1559, _1560), 0.0);
        float _1595 = exp2((_1562.w + (-0.5)) * 20.0) * 2.0;
        float _1596 = _1595 * (_1562.x + (-0.5));
        float _1597 = _1595 * (_1562.y + (-0.5));
        float _1598 = _1595 * (_1562.z + (-0.5));
        float _1605 = exp2((_1569.w + (-0.5)) * 20.0) * 2.0;
        float _1606 = _1605 * (_1569.x + (-0.5));
        float _1607 = _1605 * (_1569.y + (-0.5));
        float _1608 = _1605 * (_1569.z + (-0.5));
        float _1615 = exp2((_1576.w + (-0.5)) * 20.0) * 2.0;
        float _1616 = _1615 * (_1576.x + (-0.5));
        float _1617 = _1615 * (_1576.y + (-0.5));
        float _1618 = _1615 * (_1576.z + (-0.5));
        float _1625 = exp2((_1583.w + (-0.5)) * 20.0) * 2.0;
        float _1626 = _1625 * (_1583.x + (-0.5));
        float _1627 = _1625 * (_1583.y + (-0.5));
        float _1628 = _1625 * (_1583.z + (-0.5));
        float _1629 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1631 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1632 = _1596 * 0.5;
        float _1633 = _1606 * 0.5;
        float _1634 = _1616 * 0.5;
        float _1635 = dot(vec3(_1632, _1633, _1634), vec3(_1632, _1633, _1634));
        float _1640 = (_1635 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1635);
        float _1648 = (dot(vec3(_920, _921, _922), vec3(_1640 * _1632, _1640 * _1633, _1640 * _1634)) + 1.0) * 0.5;
        float _4385 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1657 = sqrt(((_1633 * _1633) + (_1632 * _1632)) + (_1634 * _1634)) / (_1629 + 9.9999997473787516355514526367188e-06);
        float _4396 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1658 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
        float _1659 = _1658 * 2.0;
        float _1663 = (1.0 - _1658) / (_1658 + 1.0);
        float _4407 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1664 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
        float _1673 = ((((1.0 - _1664) * (_1659 + 2.0)) * exp2(log2(isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0))) * (_1659 + 1.0))) + _1664) * _1629;
        float _1674 = _1597 * 0.5;
        float _1675 = _1607 * 0.5;
        float _1676 = _1617 * 0.5;
        float _1677 = dot(vec3(_1674, _1675, _1676), vec3(_1674, _1675, _1676));
        float _1682 = (_1677 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1677);
        float _1690 = (dot(vec3(_920, _921, _922), vec3(_1682 * _1674, _1682 * _1675, _1682 * _1676)) + 1.0) * 0.5;
        float _4418 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1699 = sqrt(((_1675 * _1675) + (_1674 * _1674)) + (_1676 * _1676)) / (_1630 + 9.9999997473787516355514526367188e-06);
        float _4429 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1700 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _1701 = _1700 * 2.0;
        float _1705 = (1.0 - _1700) / (_1700 + 1.0);
        float _4440 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1706 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
        float _1715 = ((((1.0 - _1706) * (_1701 + 2.0)) * exp2(log2(isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0))) * (_1701 + 1.0))) + _1706) * _1630;
        float _1716 = _1598 * 0.5;
        float _1717 = _1608 * 0.5;
        float _1718 = _1618 * 0.5;
        float _1719 = dot(vec3(_1716, _1717, _1718), vec3(_1716, _1717, _1718));
        float _1724 = (_1719 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1719);
        float _1732 = (dot(vec3(_920, _921, _922), vec3(_1724 * _1716, _1724 * _1717, _1724 * _1718)) + 1.0) * 0.5;
        float _4451 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1741 = sqrt(((_1717 * _1717) + (_1716 * _1716)) + (_1718 * _1718)) / (_1631 + 9.9999997473787516355514526367188e-06);
        float _4462 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1742 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _1743 = _1742 * 2.0;
        float _1747 = (1.0 - _1742) / (_1742 + 1.0);
        float _4473 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
        float _1757 = ((((1.0 - _1748) * (_1743 + 2.0)) * exp2(log2(isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))) * (_1743 + 1.0))) + _1748) * _1631;
        _1765 = _1598;
        _1766 = _1597;
        _1767 = _1596;
        _1768 = _1608;
        _1769 = _1607;
        _1770 = _1606;
        _1771 = _1618;
        _1772 = _1617;
        _1773 = _1616;
        _1774 = _1631;
        _1775 = _1630;
        _1776 = _1629;
        _1777 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0)));
        _1778 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0)));
        _1779 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0)));
    }
    else
    {
        _1765 = _1459;
        _1766 = _1459;
        _1767 = _1459;
        _1768 = _1459;
        _1769 = _1459;
        _1770 = _1459;
        _1771 = _1459;
        _1772 = _1459;
        _1773 = _1459;
        _1774 = _1459;
        _1775 = _1459;
        _1776 = _1459;
        _1777 = 0.0;
        _1778 = 0.0;
        _1779 = 0.0;
    }
    float _1789 = (cbModelParam._m0[1u].x * (_1777 - _1471)) + _1471;
    float _1790 = (cbModelParam._m0[1u].x * (_1778 - _1472)) + _1472;
    float _1791 = (cbModelParam._m0[1u].x * (_1779 - _1473)) + _1473;
    float _1812 = fma(_1791, cbSceneParam._m0[89u].z, fma(_1790, cbSceneParam._m0[89u].y, _1789 * cbSceneParam._m0[89u].x));
    float _1815 = fma(_1791, cbSceneParam._m0[90u].z, fma(_1790, cbSceneParam._m0[90u].y, _1789 * cbSceneParam._m0[90u].x));
    float _1818 = fma(_1791, cbSceneParam._m0[91u].z, fma(_1790, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1789));
    float _1833 = _1093 * 0.5;
    float _1834 = _1094 * 0.5;
    float _1835 = _1095 * 0.5;
    float _1836 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1767, _1770, _1773, _1776));
    float _1839 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1766, _1769, _1772, _1775));
    float _1842 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1765, _1768, _1771, _1774));
    float _1876;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1849 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1458, _1462, _1465, _1468));
        float _1853 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1460, _1463, _1466, _1469));
        float _1857 = dot(vec4(_1833, _1834, _1835, 1.0), vec4(_1461, _1464, _1467, _1470));
        float _1864 = dot(vec4(cbModelParam._m0[39u]), vec4(_1833, _1834, _1835, 1.0));
        _1876 = dot(vec3(isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0)), isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1864) ? 0.0 : (isnan(0.0) ? _1864 : max(0.0, _1864))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1876 = 1.0;
    }
    float _1887;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1878 = dot(vec4(cbModelParam._m0[40u]), vec4(_1833, _1834, _1835, 1.0));
        _1887 = dot(vec3(isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)), isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0)), isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1878) ? 0.0 : (isnan(0.0) ? _1878 : max(0.0, _1878))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1887 = 1.0;
    }
    float _1891 = (_1887 * cbModelParam._m0[1u].x) + (_1876 * (1.0 - cbModelParam._m0[1u].x));
    float _1901 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _923);
    float _1902 = isnan(_1901) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1901 : min(cbModelParam._m0[25u].z, _1901));
    float _1982;
    float _1984;
    float _1986;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1949 = fma(_1157, cbModelParam._m0[13u].z, fma(_1153, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1149)) + cbModelParam._m0[13u].w;
        float _1953 = fma(_1157, cbModelParam._m0[14u].z, fma(_1153, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1149)) + cbModelParam._m0[14u].w;
        float _1957 = fma(_1157, cbModelParam._m0[15u].z, fma(_1153, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1149)) + cbModelParam._m0[15u].w;
        float _1960 = fma(_1095, cbModelParam._m0[13u].z, fma(_1094, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1093));
        float _1963 = fma(_1095, cbModelParam._m0[14u].z, fma(_1094, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1093));
        float _1966 = fma(_1095, cbModelParam._m0[15u].z, fma(_1094, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1093));
        float _1994;
        if (_1960 > 0.0)
        {
            _1994 = abs((1.0 - _1949) / _1960);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1960 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1949 + 1.0) / _1960);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1994 = frontier_phi_14_12_ladder;
        }
        float _2165;
        if (_1963 > 0.0)
        {
            _2165 = abs((1.0 - _1953) / _1963);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1963 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1953 + 1.0) / _1963);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2165 = frontier_phi_23_19_ladder;
        }
        float _2460;
        if (_1966 > 0.0)
        {
            _2460 = abs((1.0 - _1957) / _1966);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1966 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1957 + 1.0) / _1966);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2460 = frontier_phi_35_30_ladder;
        }
        float _2462 = isnan(_2165) ? _1994 : (isnan(_1994) ? _2165 : min(_1994, _2165));
        float _2463 = isnan(_2460) ? _2462 : (isnan(_2462) ? _2460 : min(_2462, _2460));
        float _2467 = (_2463 * _1960) + _1949;
        float _2468 = (_2463 * _1963) + _1953;
        float _2469 = (_2463 * _1966) + _1957;
        float _2470 = _2463 * 9.9999997473787516355514526367188e-05;
        float _2472 = (-1.0) - _2470;
        float _2474 = _2470 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2469 > _2474) || ((_2469 < _2472) || ((_2468 > _2474) || ((_2468 < _2472) || ((_2467 < _2472) || (_2467 > _2474))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2614 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2469, cbModelParam._m0[9u].z, fma(_2468, cbModelParam._m0[9u].y, _2467 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2469, cbModelParam._m0[10u].z, fma(_2468, cbModelParam._m0[10u].y, _2467 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2469, cbModelParam._m0[11u].z, fma(_2468, cbModelParam._m0[11u].y, _2467 * cbModelParam._m0[11u].x))), _1902);
            frontier_phi_13_35_ladder = _2614.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2614.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2614.x * cbModelParam._m0[1u].y;
        }
        _1982 = frontier_phi_13_35_ladder_2;
        _1984 = frontier_phi_13_35_ladder_1;
        _1986 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1970 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1093, _1094, _1095), _1902);
        _1982 = _1970.x * cbModelParam._m0[1u].y;
        _1984 = _1970.y * cbModelParam._m0[1u].y;
        _1986 = _1970.z * cbModelParam._m0[1u].y;
    }
    float _1990 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _923);
    float _1991 = isnan(_1990) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1990 : min(cbModelParam._m0[25u].w, _1990));
    float _2080;
    float _2082;
    float _2084;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2044 = fma(_1157, cbModelParam._m0[21u].z, fma(_1153, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1149)) + cbModelParam._m0[21u].w;
        float _2048 = fma(_1157, cbModelParam._m0[22u].z, fma(_1153, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1149)) + cbModelParam._m0[22u].w;
        float _2052 = fma(_1157, cbModelParam._m0[23u].z, fma(_1153, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1149)) + cbModelParam._m0[23u].w;
        float _2055 = fma(_1095, cbModelParam._m0[21u].z, fma(_1094, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1093));
        float _2058 = fma(_1095, cbModelParam._m0[22u].z, fma(_1094, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1093));
        float _2061 = fma(_1095, cbModelParam._m0[23u].z, fma(_1094, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1093));
        float _2170;
        if (_2055 > 0.0)
        {
            _2170 = abs((1.0 - _2044) / _2055);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2055 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2044 + 1.0) / _2055);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2170 = frontier_phi_25_21_ladder;
        }
        float _2487;
        if (_2058 > 0.0)
        {
            _2487 = abs((1.0 - _2048) / _2058);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2048 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2487 = frontier_phi_37_32_ladder;
        }
        float _2825;
        if (_2061 > 0.0)
        {
            _2825 = abs((1.0 - _2052) / _2061);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2061 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2052 + 1.0) / _2061);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2825 = frontier_phi_47_44_ladder;
        }
        float _2827 = isnan(_2487) ? _2170 : (isnan(_2170) ? _2487 : min(_2170, _2487));
        float _2828 = isnan(_2825) ? _2827 : (isnan(_2827) ? _2825 : min(_2827, _2825));
        float _2832 = (_2828 * _2055) + _2044;
        float _2833 = (_2828 * _2058) + _2048;
        float _2834 = (_2828 * _2061) + _2052;
        float _2835 = _2828 * 9.9999997473787516355514526367188e-05;
        float _2836 = (-1.0) - _2835;
        float _2838 = _2835 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2834 > _2838) || ((_2834 < _2836) || ((_2833 > _2838) || ((_2833 < _2836) || ((_2832 < _2836) || (_2832 > _2838))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2956 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2834, cbModelParam._m0[17u].z, fma(_2833, cbModelParam._m0[17u].y, _2832 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2834, cbModelParam._m0[18u].z, fma(_2833, cbModelParam._m0[18u].y, _2832 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2834, cbModelParam._m0[19u].z, fma(_2833, cbModelParam._m0[19u].y, _2832 * cbModelParam._m0[19u].x))), _1991);
            frontier_phi_22_47_ladder = _2956.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2956.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2956.x * cbModelParam._m0[1u].z;
        }
        _2080 = frontier_phi_22_47_ladder_2;
        _2082 = frontier_phi_22_47_ladder_1;
        _2084 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2064 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1093, _1094, _1095), _1991);
        _2080 = _2064.x * cbModelParam._m0[1u].z;
        _2082 = _2064.y * cbModelParam._m0[1u].z;
        _2084 = _2064.z * cbModelParam._m0[1u].z;
    }
    float _2097 = (((_1120 * _1069) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2080 - _1982)) + _1982);
    float _2099 = (((_1120 * _1071) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2082 - _1984)) + _1984);
    float _2101 = (((_1120 * _1072) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2084 - _1986)) + _1986);
    float _2104 = fma(_2101, cbSceneParam._m0[89u].z, fma(_2099, cbSceneParam._m0[89u].y, _2097 * cbSceneParam._m0[89u].x));
    float _2107 = fma(_2101, cbSceneParam._m0[90u].z, fma(_2099, cbSceneParam._m0[90u].y, _2097 * cbSceneParam._m0[90u].x));
    float _2110 = fma(_2101, cbSceneParam._m0[91u].z, fma(_2099, cbSceneParam._m0[91u].y, _2097 * cbSceneParam._m0[91u].x));
    float _2144 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2148 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2152 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2156 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2157 = _2144 / _2156;
    float _2158 = _2148 / _2156;
    float _2159 = _2152 / _2156;
    float _2306;
    float _2307;
    float _2308;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2186 = ((uint(_2159 > cbSceneParam._m0[59u].y) + uint(_2159 > cbSceneParam._m0[59u].x)) + uint(_2159 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2187 = _2186 + 43u;
        uint _2195 = _2186 + 44u;
        uint _2203 = _2186 + 45u;
        uint _2211 = _2186 + 46u;
        float _2222 = fma(_2156, cbSceneParam._m0[_2187].w, fma(_2152, cbSceneParam._m0[_2187].z, fma(_2148, cbSceneParam._m0[_2187].y, _2144 * cbSceneParam._m0[_2187].x)));
        float _2226 = fma(_2156, cbSceneParam._m0[_2195].w, fma(_2152, cbSceneParam._m0[_2195].z, fma(_2148, cbSceneParam._m0[_2195].y, _2144 * cbSceneParam._m0[_2195].x)));
        float _2234 = fma(_2156, cbSceneParam._m0[_2211].w, fma(_2152, cbSceneParam._m0[_2211].z, fma(_2148, cbSceneParam._m0[_2211].y, _2144 * cbSceneParam._m0[_2211].x)));
        float _2239 = cbSceneParam._m0[33u].z * _2234;
        float _2241 = cbSceneParam._m0[33u].w * _2234;
        float _2244 = fma(_2156, cbSceneParam._m0[_2203].w, fma(_2152, cbSceneParam._m0[_2203].z, fma(_2148, cbSceneParam._m0[_2203].y, _2144 * cbSceneParam._m0[_2203].x))) / _2234;
        float _2292 = (cbSceneParam._m0[33u].x - sqrt(((_2158 * _2158) + (_2157 * _2157)) + (_2159 * _2159))) * cbSceneParam._m0[33u].y;
        float _4599 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
        float _2299 = (isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2239 + _2222) / _2234, (_2241 + _2226) / _2234), _2244), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2241 + _2222) / _2234, (_2226 - _2239) / _2234), _2244), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2222 - _2239) / _2234, (_2226 - _2241) / _2234), _2244), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2222 - _2241) / _2234, (_2239 + _2226) / _2234), _2244), 0.0)).x), vec4(0.25)));
        _2306 = 1.0 - (_2299 * cbSceneParam._m0[34u].x);
        _2307 = 1.0 - (_2299 * cbSceneParam._m0[34u].y);
        _2308 = 1.0 - (_2299 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2306 = 1.0;
        _2307 = 1.0;
        _2308 = 1.0;
    }
    float _2372;
    float _2374;
    float _2376;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2360 = fma(_2156, cbSceneParam._m0[63u].w, fma(_2152, cbSceneParam._m0[63u].z, fma(_2148, cbSceneParam._m0[63u].y, _2144 * cbSceneParam._m0[63u].x)));
        float _2361 = fma(_2156, cbSceneParam._m0[60u].w, fma(_2152, cbSceneParam._m0[60u].z, fma(_2148, cbSceneParam._m0[60u].y, _2144 * cbSceneParam._m0[60u].x))) / _2360;
        float _2362 = fma(_2156, cbSceneParam._m0[61u].w, fma(_2152, cbSceneParam._m0[61u].z, fma(_2148, cbSceneParam._m0[61u].y, _2144 * cbSceneParam._m0[61u].x))) / _2360;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2361 >= cbSceneParam._m0[64u].x) && (_2362 >= cbSceneParam._m0[64u].y)) && (_2361 <= cbSceneParam._m0[64u].z)) && (_2362 <= cbSceneParam._m0[64u].w))
        {
            float _2500 = fma(_2156, cbSceneParam._m0[62u].w, fma(_2152, cbSceneParam._m0[62u].z, fma(_2148, cbSceneParam._m0[62u].y, _2144 * cbSceneParam._m0[62u].x))) / _2360;
            float _2504 = isnan(cbSceneParam._m0[41u].w) ? _2500 : (isnan(_2500) ? cbSceneParam._m0[41u].w : max(_2500, cbSceneParam._m0[41u].w));
            float _2547 = (cbSceneParam._m0[33u].x - sqrt(((_2158 * _2158) + (_2157 * _2157)) + (_2159 * _2159))) * cbSceneParam._m0[33u].y;
            float _4615 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
            float _2554 = (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2361, cbSceneParam._m0[33u].w + _2362), _2504), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2361, _2362 - cbSceneParam._m0[33u].z), _2504), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2361 - cbSceneParam._m0[33u].z, _2362 - cbSceneParam._m0[33u].w), _2504), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2361 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2362), _2504), 0.0)).x), vec4(0.25)));
            float _2558 = 1.0 - (_2554 * cbSceneParam._m0[34u].x);
            float _2559 = 1.0 - (_2554 * cbSceneParam._m0[34u].y);
            float _2560 = 1.0 - (_2554 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2560) ? _2308 : (isnan(_2308) ? _2560 : min(_2308, _2560));
            frontier_phi_34_33_ladder_1 = isnan(_2559) ? _2307 : (isnan(_2307) ? _2559 : min(_2307, _2559));
            frontier_phi_34_33_ladder_2 = isnan(_2558) ? _2306 : (isnan(_2306) ? _2558 : min(_2306, _2558));
        }
        else
        {
            frontier_phi_34_33_ladder = _2308;
            frontier_phi_34_33_ladder_1 = _2307;
            frontier_phi_34_33_ladder_2 = _2306;
        }
        _2372 = frontier_phi_34_33_ladder_2;
        _2374 = frontier_phi_34_33_ladder_1;
        _2376 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2372 = _2306;
        _2374 = _2307;
        _2376 = _2308;
    }
    uvec4 _2381 = floatBitsToUint(cbInstanceData._m0[_258 + 5u]);
    uint _2383 = _2381.x * 14u;
    uint _2384 = _2383 + 13u;
    float _2391 = _1085 + (-1.0);
    float _2396 = (cbLight._m0[_2384].x * _2391) + 1.0;
    float _2397 = (cbLight._m0[_2384].y * _2391) + 1.0;
    float _2398 = (cbLight._m0[_2384].z * _2391) + 1.0;
    float _2399 = (cbLight._m0[_2384].w * _2391) + 1.0;
    uint _2400 = _2383 + 5u;
    float _2406 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
    uint _2410 = _2383 + 4u;
    float _2419 = isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0));
    uint _2423 = _2383 | 1u;
    float _2434 = dot(vec3(cbLight._m0[_2383].xyz), vec3(_920, _921, _922));
    float _2437 = dot(vec3(cbLight._m0[_2423].xyz), vec3(_920, _921, _922));
    float _4651 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
    float _4662 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _2442 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * 0.3183098733425140380859375;
    float _2444 = (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0))) * 0.3183098733425140380859375;
    float _2451 = ((cbLight._m0[_2400].x * _2406) * _2444) + (((cbLight._m0[_2410].x * _2372) * _2419) * _2442);
    float _2452 = ((_2406 * cbLight._m0[_2400].y) * _2444) + (((cbLight._m0[_2410].y * _2374) * _2419) * _2442);
    float _2453 = ((_2406 * cbLight._m0[_2400].z) * _2444) + (((cbLight._m0[_2410].z * _2376) * _2419) * _2442);
    uvec4 _2457 = floatBitsToUint(cbLight._m0[_2383 + 12u]);
    bool _2459 = _2457.x == 0u;
    float _2561;
    float _2563;
    float _2565;
    if (_2459)
    {
        _2561 = _2451;
        _2563 = _2452;
        _2565 = _2453;
    }
    else
    {
        uint _2569 = _2383 + 6u;
        float _2585 = (dot(vec3(cbLight._m0[_2383 + 2u].xyz), vec3(_920, _921, _922)) * 0.5) + 0.5;
        float _2586 = _2585 * _2585;
        float _4673 = isnan(0.0) ? _2586 : (isnan(_2586) ? 0.0 : max(_2586, 0.0));
        float _2587 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2588 = isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0));
        _2561 = (((cbLight._m0[_2569].x * 0.3183098733425140380859375) * _2587) * _2588) + _2451;
        _2563 = (((cbLight._m0[_2569].y * 0.3183098733425140380859375) * _2587) * _2588) + _2452;
        _2565 = (((cbLight._m0[_2569].z * 0.3183098733425140380859375) * _2587) * _2588) + _2453;
    }
    bool _2568 = _2457.y == 0u;
    float _2623;
    float _2625;
    float _2627;
    if (_2568)
    {
        _2623 = _2561;
        _2625 = _2563;
        _2627 = _2565;
    }
    else
    {
        uint _2796 = _2383 + 7u;
        float _2812 = (dot(vec3(cbLight._m0[_2383 + 3u].xyz), vec3(_920, _921, _922)) * 0.5) + 0.5;
        float _2813 = _2812 * _2812;
        float _4689 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
        float _2814 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
        float _2815 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
        _2623 = (((cbLight._m0[_2796].x * 0.3183098733425140380859375) * _2814) * _2815) + _2561;
        _2625 = (((cbLight._m0[_2796].y * 0.3183098733425140380859375) * _2814) * _2815) + _2563;
        _2627 = (((cbLight._m0[_2796].z * 0.3183098733425140380859375) * _2814) * _2815) + _2565;
    }
    uint _2630 = _2383 + 8u;
    float _2643 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2383].w)) * _923) * 0.949999988079071044921875);
    float _2644 = _2643 * _2643;
    float _2645 = cbLight._m0[_2383].x + _999;
    float _2646 = cbLight._m0[_2383].y + _1000;
    float _2647 = cbLight._m0[_2383].z + _1001;
    float _2651 = inversesqrt(dot(vec3(_2645, _2646, _2647), vec3(_2645, _2646, _2647)));
    float _2652 = _2651 * _2645;
    float _2653 = _2651 * _2646;
    float _2654 = _2651 * _2647;
    float _2655 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2383].xyz));
    float _4705 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2658 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
    float _4716 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _2659 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
    float _2660 = dot(vec3(_920, _921, _922), vec3(_2652, _2653, _2654));
    float _4727 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
    float _2663 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
    float _2664 = dot(vec3(cbLight._m0[_2383].xyz), vec3(_2652, _2653, _2654));
    float _4738 = isnan(0.0) ? _2664 : (isnan(_2664) ? 0.0 : max(_2664, 0.0));
    float _2668 = _2644 * _2644;
    float _2672 = ((_2663 * _2663) * (_2668 + (-1.0))) + 1.0;
    float _2680 = exp2(log2(1.0 - (isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0)))) * 5.0);
    float _2681 = 0.959999978542327880859375 - _1066;
    float _2683 = 0.959999978542327880859375 - _1067;
    float _2684 = 0.959999978542327880859375 - _1068;
    float _2691 = 1.0 - _2644;
    float _2702 = (0.5 / (((_2659 * ((_2658 * _2691) + _2644)) + 9.9999999392252902907785028219223e-09) + (((_2659 * _2691) + _2644) * _2658))) * _2658;
    float _4749 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
    float _2704 = (isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0))) * (_2668 / ((_2672 * _2672) * 3.141590118408203125));
    uint _2718 = _2383 + 9u;
    float _2729 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2423].w)) * _923) * 0.949999988079071044921875);
    float _2730 = _2729 * _2729;
    float _2731 = cbLight._m0[_2423].x + _999;
    float _2732 = cbLight._m0[_2423].y + _1000;
    float _2733 = cbLight._m0[_2423].z + _1001;
    float _2737 = inversesqrt(dot(vec3(_2731, _2732, _2733), vec3(_2731, _2732, _2733)));
    float _2738 = _2737 * _2731;
    float _2739 = _2737 * _2732;
    float _2740 = _2737 * _2733;
    float _2741 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2423].xyz));
    float _4760 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
    float _2744 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
    float _2745 = dot(vec3(_920, _921, _922), vec3(_2738, _2739, _2740));
    float _4771 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
    float _2748 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
    float _2749 = dot(vec3(cbLight._m0[_2423].xyz), vec3(_2738, _2739, _2740));
    float _4782 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
    float _2753 = _2730 * _2730;
    float _2757 = ((_2748 * _2748) * (_2753 + (-1.0))) + 1.0;
    float _2764 = exp2(log2(1.0 - (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0)))) * 5.0);
    float _2771 = 1.0 - _2730;
    float _2781 = (0.5 / (((_2659 * ((_2744 * _2771) + _2730)) + 9.9999999392252902907785028219223e-09) + (((_2659 * _2771) + _2730) * _2744))) * _2744;
    float _4793 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
    float _2783 = (isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0))) * (_2753 / ((_2757 * _2757) * 3.141590118408203125));
    float _2793 = (((((_2764 * _2681) + _1069) * cbLight._m0[_2718].x) * _2783) * _2406) + ((((cbLight._m0[_2630].x * _2372) * ((_2680 * _2681) + _1069)) * _2704) * _2419);
    float _2794 = (((((_2764 * _2683) + _1071) * cbLight._m0[_2718].y) * _2783) * _2406) + ((((cbLight._m0[_2630].y * _2374) * ((_2680 * _2683) + _1071)) * _2704) * _2419);
    float _2795 = (((((_2764 * _2684) + _1072) * cbLight._m0[_2718].z) * _2783) * _2406) + ((((cbLight._m0[_2630].z * _2376) * ((_2680 * _2684) + _1072)) * _2704) * _2419);
    float _2851;
    float _2853;
    float _2855;
    if (_2459)
    {
        _2851 = _2793;
        _2853 = _2794;
        _2855 = _2795;
    }
    else
    {
        uint _2857 = _2383 + 2u;
        uint _2861 = _2383 + 10u;
        float _2875 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2857].w)) * _923) * 0.949999988079071044921875);
        float _2876 = _2875 * _2875;
        float _2877 = cbLight._m0[_2857].x + _999;
        float _2878 = cbLight._m0[_2857].y + _1000;
        float _2879 = cbLight._m0[_2857].z + _1001;
        float _2883 = inversesqrt(dot(vec3(_2877, _2878, _2879), vec3(_2877, _2878, _2879)));
        float _2884 = _2883 * _2877;
        float _2885 = _2883 * _2878;
        float _2886 = _2883 * _2879;
        float _2887 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2857].xyz));
        float _4804 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
        float _2890 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
        float _2891 = dot(vec3(_920, _921, _922), vec3(_2884, _2885, _2886));
        float _4815 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
        float _2894 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
        float _2895 = dot(vec3(cbLight._m0[_2857].xyz), vec3(_2884, _2885, _2886));
        float _4826 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
        float _2899 = _2876 * _2876;
        float _2903 = ((_2894 * _2894) * (_2899 + (-1.0))) + 1.0;
        float _2910 = exp2(log2(1.0 - (isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0)))) * 5.0);
        float _2917 = 1.0 - _2876;
        float _2927 = (0.5 / (((_2659 * ((_2890 * _2917) + _2876)) + 9.9999999392252902907785028219223e-09) + (((_2659 * _2917) + _2876) * _2890))) * _2890;
        float _4837 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
        float _2929 = (isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0))) * (_2899 / ((_2903 * _2903) * 3.141590118408203125));
        float _2930 = isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0));
        _2851 = (((((_2910 * _2681) + _1069) * cbLight._m0[_2861].x) * _2929) * _2930) + _2793;
        _2853 = (((((_2910 * _2683) + _1071) * cbLight._m0[_2861].y) * _2929) * _2930) + _2794;
        _2855 = (((((_2910 * _2684) + _1072) * cbLight._m0[_2861].z) * _2929) * _2930) + _2795;
    }
    float _2961;
    float _2963;
    float _2965;
    if (_2568)
    {
        _2961 = _2851;
        _2963 = _2853;
        _2965 = _2855;
    }
    else
    {
        uint _2972 = _2383 + 3u;
        uint _2976 = _2383 + 11u;
        float _2990 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2972].w)) * _923) * 0.949999988079071044921875);
        float _2991 = _2990 * _2990;
        float _2992 = cbLight._m0[_2972].x + _999;
        float _2993 = cbLight._m0[_2972].y + _1000;
        float _2994 = cbLight._m0[_2972].z + _1001;
        float _2998 = inversesqrt(dot(vec3(_2992, _2993, _2994), vec3(_2992, _2993, _2994)));
        float _2999 = _2998 * _2992;
        float _3000 = _2998 * _2993;
        float _3001 = _2998 * _2994;
        float _3002 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2972].xyz));
        float _4853 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0));
        float _3005 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
        float _3006 = dot(vec3(_920, _921, _922), vec3(_2999, _3000, _3001));
        float _4864 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
        float _3009 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
        float _3010 = dot(vec3(cbLight._m0[_2972].xyz), vec3(_2999, _3000, _3001));
        float _4875 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
        float _3014 = _2991 * _2991;
        float _3018 = ((_3009 * _3009) * (_3014 + (-1.0))) + 1.0;
        float _3025 = exp2(log2(1.0 - (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) * 5.0);
        float _3032 = 1.0 - _2991;
        float _3042 = (0.5 / (((_2659 * ((_3005 * _3032) + _2991)) + 9.9999999392252902907785028219223e-09) + (((_2659 * _3032) + _2991) * _3005))) * _3005;
        float _4886 = isnan(0.0) ? _3042 : (isnan(_3042) ? 0.0 : max(_3042, 0.0));
        float _3044 = (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0))) * (_3014 / ((_3018 * _3018) * 3.141590118408203125));
        float _3045 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
        _2961 = (((((_3025 * _2681) + _1069) * cbLight._m0[_2976].x) * _3044) * _3045) + _2851;
        _2963 = (((((_3025 * _2683) + _1071) * cbLight._m0[_2976].y) * _3044) * _3045) + _2853;
        _2965 = (((((_3025 * _2684) + _1072) * cbLight._m0[_2976].z) * _3044) * _3045) + _2855;
    }
    float _3111;
    float _3113;
    float _3115;
    float _3117;
    float _3119;
    float _3121;
    if (_2381.y == 0u)
    {
        uvec4 _3066 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3067 = _3066.x;
        uint _3078 = uint((float(_3066.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1008) / _3067))) + floor(float(uint(cbSceneParam._m0[85u].x * _1007) / _3067)));
        float _3088 = (log2(_2159 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3089 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
        uint _3092 = uint(isnan(14.0) ? _3089 : (isnan(_3089) ? 14.0 : min(_3089, 14.0)));
        uvec4 _3097 = texelFetch(g_lightClusterGridBuffer, int(((_3092 << 2u) + (_3078 << 6u)) >> 2u));
        uint _3098 = _3097.x;
        uint _3099 = _3066.z;
        float _3178;
        float _3180;
        float _3182;
        float _3184;
        float _3186;
        float _3188;
        if (((((1u << ((_3099 >> 4u) & 15u)) + 4294967295u) & _3098) == 0u) || ((_3099 & 240u) == 0u))
        {
            _3178 = 0.0;
            _3180 = 0.0;
            _3182 = 0.0;
            _3184 = 0.0;
            _3186 = 0.0;
            _3188 = 0.0;
        }
        else
        {
            float _3179;
            float _3181;
            float _3183;
            float _3185;
            float _3187;
            float _3189;
            float _3323 = 0.0;
            float _3324 = 0.0;
            float _3325 = 0.0;
            float _3326 = 0.0;
            float _3327 = 0.0;
            float _3328 = 0.0;
            uint _3329 = 0u;
            uint _3338;
            bool _3339;
            for (;;)
            {
                _3338 = texelFetch(g_lightClassification, int((((_3092 << 5u) + (_3078 << 9u)) + (_3329 << 2u)) >> 2u)).x;
                _3339 = _3338 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3339)
                {
                    frontier_phi_66_pred = _3328;
                    frontier_phi_66_pred_1 = _3327;
                    frontier_phi_66_pred_2 = _3326;
                    frontier_phi_66_pred_3 = _3325;
                    frontier_phi_66_pred_4 = _3324;
                    frontier_phi_66_pred_5 = _3323;
                }
                else
                {
                    float _3447;
                    float _3448;
                    float _3449;
                    float _3450;
                    float _3451;
                    float _3452;
                    uint _3453;
                    _3447 = _3323;
                    _3448 = _3324;
                    _3449 = _3325;
                    _3450 = _3326;
                    _3451 = _3327;
                    _3452 = _3328;
                    _3453 = _3338;
                    float _3379;
                    float _3380;
                    float _3381;
                    float _3382;
                    float _3383;
                    float _3384;
                    for (;;)
                    {
                        uint _3457 = uint(findLSB(_3453)) + (_3329 << 5u);
                        uint _3454 = (_3453 + 4294967295u) & _3453;
                        uint _3459 = _3457 * 48u;
                        vec4 _3473 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3459)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 3u)).x));
                        uint _3479 = (_3457 * 48u) + 4u;
                        vec4 _3492 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3479)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 3u)).x));
                        uint _3498 = (_3457 * 48u) + 8u;
                        vec3 _3509 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3498)).x, texelFetch(g_PointLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3498 + 2u)).x));
                        float _3513 = _3473.x - _2157;
                        float _3514 = _3473.y - _2158;
                        float _3515 = _3473.z - _2159;
                        float _3516 = dot(vec3(_3513, _3514, _3515), vec3(_3513, _3514, _3515));
                        float _3519 = inversesqrt(_3516);
                        float _3520 = _3519 * _3513;
                        float _3521 = _3519 * _3514;
                        float _3522 = _3519 * _3515;
                        float _3523 = dot(vec3(_1026, _1029, _1032), vec3(_3520, _3521, _3522));
                        float _3528 = 1.0 - (_3516 * _3473.w);
                        float _4912 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
                        float _3529 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                        float _3530 = sqrt(_3516) * _3492.w;
                        float _3533 = 1.39999997615814208984375 / (_3530 + 1.39999997615814208984375);
                        float _3534 = _3533 * _3533;
                        float _3537 = ((1.0 - _3534) * _3523) + _3534;
                        float _3540 = _3530 * _3530;
                        float _3544 = ((isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0))) * _3529) / ((_3540 * 0.699999988079071044921875) + 1.0);
                        float _3548 = (-0.0) - _2157;
                        float _3549 = (-0.0) - _2158;
                        float _3550 = (-0.0) - _2159;
                        float _3554 = inversesqrt(dot(vec3(_3548, _3549, _3550), vec3(_3548, _3549, _3550)));
                        float _3555 = _3554 * _3548;
                        float _3556 = _3554 * _3549;
                        float _3557 = _3554 * _3550;
                        float _3564 = exp2(log2(1.0 / ((_3540 * 3.5) + 5.0)) * 0.25);
                        float _3565 = 1.0 - _1101;
                        float _3572 = sqrt(1.0 - ((1.0 - (_3565 * _3565)) * (1.0 - (_3564 * _3564))));
                        float _3573 = _3572 * _3572;
                        float _3574 = _3573 * _3573;
                        float _3575 = _3555 + _3520;
                        float _3576 = _3556 + _3521;
                        float _3577 = _3557 + _3522;
                        float _3581 = inversesqrt(dot(vec3(_3575, _3576, _3577), vec3(_3575, _3576, _3577)));
                        float _3585 = dot(vec3(_1026, _1029, _1032), vec3(_3555, _3556, _3557));
                        float _4928 = isnan(0.0) ? _3585 : (isnan(_3585) ? 0.0 : max(_3585, 0.0));
                        float _3588 = isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0));
                        float _3589 = dot(vec3(_1026, _1029, _1032), vec3(_3581 * _3575, _3581 * _3576, _3581 * _3577));
                        float _4939 = isnan(0.0) ? _3589 : (isnan(_3589) ? 0.0 : max(_3589, 0.0));
                        float _3592 = isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0));
                        float _3596 = ((_3592 * _3592) * (_3574 + (-1.0))) + 1.0;
                        float _3597 = _3533 * _3573;
                        float _3598 = _3597 * _3597;
                        float _3601 = ((1.0 - _3598) * _3523) + _3598;
                        float _4950 = isnan(0.0) ? _3601 : (isnan(_3601) ? 0.0 : max(_3601, 0.0));
                        float _3602 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
                        float _3603 = 1.0 - _3573;
                        float _3613 = (0.5 / (((_3602 * ((_3588 * _3603) + _3573)) + 9.9999999392252902907785028219223e-09) + (((_3602 * _3603) + _3573) * _3588))) * _3602;
                        float _4961 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                        float _3624 = (((_3574 * 3.1415927410125732421875) * (isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0)))) / ((_3596 * _3596) * ((_3540 * 2.1991131305694580078125) + 3.141590118408203125))) * _3529;
                        _3382 = (_3544 * _3492.x) + _3450;
                        _3383 = (_3544 * _3492.y) + _3451;
                        _3384 = (_3544 * _3492.z) + _3452;
                        _3379 = (_3624 * _3509.x) + _3447;
                        _3380 = (_3624 * _3509.y) + _3448;
                        _3381 = (_3624 * _3509.z) + _3449;
                        if (_3454 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3447 = _3379;
                            _3448 = _3380;
                            _3449 = _3381;
                            _3450 = _3382;
                            _3451 = _3383;
                            _3452 = _3384;
                            _3453 = _3454;
                        }
                    }
                    frontier_phi_66_pred = _3384;
                    frontier_phi_66_pred_1 = _3383;
                    frontier_phi_66_pred_2 = _3382;
                    frontier_phi_66_pred_3 = _3381;
                    frontier_phi_66_pred_4 = _3380;
                    frontier_phi_66_pred_5 = _3379;
                }
                _3189 = frontier_phi_66_pred;
                _3187 = frontier_phi_66_pred_1;
                _3185 = frontier_phi_66_pred_2;
                _3183 = frontier_phi_66_pred_3;
                _3181 = frontier_phi_66_pred_4;
                _3179 = frontier_phi_66_pred_5;
                uint _3330 = _3329 + 1u;
                if (_3330 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3323 = _3179;
                    _3324 = _3181;
                    _3325 = _3183;
                    _3326 = _3185;
                    _3327 = _3187;
                    _3328 = _3189;
                    _3329 = _3330;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3178 = _3179;
            _3180 = _3181;
            _3182 = _3183;
            _3184 = _3185;
            _3186 = _3187;
            _3188 = _3189;
        }
        uvec4 _3192 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3193 = _3192.z;
        uint _3195 = (_3193 >> 8u) & 15u;
        float _3291;
        float _3293;
        float _3295;
        float _3297;
        float _3299;
        float _3301;
        if (((4294967295u << _3195) & _3098) == 0u)
        {
            _3291 = _3178;
            _3293 = _3180;
            _3295 = _3182;
            _3297 = _3184;
            _3299 = _3186;
            _3301 = _3188;
        }
        else
        {
            float _3316 = inversesqrt(dot(vec3(_2157, _2158, _2159), vec3(_2157, _2158, _2159)));
            float _3317 = _3316 * _2157;
            float _3318 = _3316 * _2158;
            float _3319 = _3316 * _2159;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3195 < ((_3193 >> 12u) & 15u))
            {
                float _3292;
                float _3294;
                float _3296;
                float _3298;
                float _3300;
                float _3302;
                float _3430 = _3178;
                float _3431 = _3180;
                float _3432 = _3182;
                float _3433 = _3184;
                float _3434 = _3186;
                float _3435 = _3188;
                uint _3436 = _3195;
                uint _3445;
                bool _3446;
                for (;;)
                {
                    _3445 = texelFetch(g_lightClassification, int((((_3092 << 5u) + (_3078 << 9u)) + (_3436 << 2u)) >> 2u)).x;
                    _3446 = _3445 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3446)
                    {
                        frontier_phi_72_pred = _3435;
                        frontier_phi_72_pred_1 = _3434;
                        frontier_phi_72_pred_2 = _3433;
                        frontier_phi_72_pred_3 = _3432;
                        frontier_phi_72_pred_4 = _3431;
                        frontier_phi_72_pred_5 = _3430;
                    }
                    else
                    {
                        float _3629;
                        float _3630;
                        float _3631;
                        float _3632;
                        float _3633;
                        float _3634;
                        float _3922;
                        float _3923;
                        float _3924;
                        float _3925;
                        float _3926;
                        float _3927;
                        float _3642 = _3430;
                        float _3643 = _3431;
                        float _3644 = _3432;
                        float _3645 = _3433;
                        float _3646 = _3434;
                        float _3647 = _3435;
                        uint _3648 = _3445;
                        uint _3649;
                        vec4 _3674;
                        float _3675;
                        vec4 _3690;
                        vec3 _3702;
                        vec4 _3717;
                        vec4 _3732;
                        float _3778;
                        bool _3779;
                        for (;;)
                        {
                            uint _3659 = ((_3436 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3648));
                            _3649 = (_3648 + 4294967295u) & _3648;
                            uint _3661 = _3659 * 40u;
                            _3674 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3661)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3661 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3661 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3661 + 3u)).x));
                            _3675 = _3674.w;
                            uint _3677 = (_3659 * 40u) + 4u;
                            _3690 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 3u)).x));
                            uint _3692 = (_3659 * 40u) + 8u;
                            _3702 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 2u)).x));
                            uint _3704 = (_3659 * 40u) + 16u;
                            _3717 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3704)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 3u)).x));
                            uint _3719 = (_3659 * 40u) + 20u;
                            _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            uint _3734 = (_3659 * 40u) + 24u;
                            vec4 _3747 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3734)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 3u)).x));
                            uint _3753 = (_3659 * 40u) + 28u;
                            vec4 _3766 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3753)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 3u)).x));
                            _3778 = fma(_2159, _3766.z, fma(_2158, _3766.y, _3766.x * _2157)) + _3766.w;
                            _3779 = !((fma(_2159, _3747.z, fma(_2158, _3747.y, _3747.x * _2157)) + _3747.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3779)
                            {
                                float _3806 = _3674.x - _2157;
                                float _3807 = _3674.y - _2158;
                                float _3808 = _3674.z - _2159;
                                float _3809 = dot(vec3(_3806, _3807, _3808), vec3(_3806, _3807, _3808));
                                float _3812 = inversesqrt(_3809);
                                float _3813 = _3812 * _3806;
                                float _3814 = _3812 * _3807;
                                float _3815 = _3812 * _3808;
                                float _3819 = 1.0 - (_3809 / (_3675 * _3675));
                                float _4972 = isnan(0.0) ? _3819 : (isnan(_3819) ? 0.0 : max(_3819, 0.0));
                                float _3820 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
                                float _3824 = sqrt(_3809) * _3690.w;
                                float _3826 = 1.39999997615814208984375 / (_3824 + 1.39999997615814208984375);
                                float _3827 = _3826 * _3826;
                                float _3830 = ((1.0 - _3827) * dot(vec3(_3813, _3814, _3815), vec3(_1026, _1029, _1032))) + _3827;
                                float _3833 = _3824 * _3824;
                                float _3837 = (fma(_2159, _3717.z, fma(_2158, _3717.y, _3717.x * _2157)) + _3717.w) / _3778;
                                float _3838 = (fma(_2159, _3732.z, fma(_2158, _3732.y, _3732.x * _2157)) + _3732.w) / _3778;
                                float _3842 = 1.0 - dot(vec2(_3837, _3838), vec2(_3837, _3838));
                                float _4988 = isnan(0.0) ? _3842 : (isnan(_3842) ? 0.0 : max(_3842, 0.0));
                                float _3843 = isnan(1.0) ? _4988 : (isnan(_4988) ? 1.0 : min(_4988, 1.0));
                                float _3844 = _3843 * (((isnan(0.0) ? _3830 : (isnan(_3830) ? 0.0 : max(_3830, 0.0))) * _3820) / ((_3833 * 0.699999988079071044921875) + 1.0));
                                float _3856 = exp2(log2(1.0 / ((_3833 * 3.5) + 5.0)) * 0.25);
                                float _3857 = 1.0 - _1101;
                                float _3864 = sqrt(1.0 - ((1.0 - (_3857 * _3857)) * (1.0 - (_3856 * _3856))));
                                float _3865 = _3864 * _3864;
                                float _3866 = _3865 * _3865;
                                float _3867 = _3813 - _3317;
                                float _3868 = _3814 - _3318;
                                float _3869 = _3815 - _3319;
                                float _3873 = inversesqrt(dot(vec3(_3867, _3868, _3869), vec3(_3867, _3868, _3869)));
                                float _3877 = dot(vec3(_1026, _1029, _1032), vec3((-0.0) - _3317, (-0.0) - _3318, (-0.0) - _3319));
                                float _4999 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                                float _3880 = isnan(1.0) ? _4999 : (isnan(_4999) ? 1.0 : min(_4999, 1.0));
                                float _3881 = dot(vec3(_1026, _1029, _1032), vec3(_3873 * _3867, _3873 * _3868, _3873 * _3869));
                                float _5010 = isnan(0.0) ? _3881 : (isnan(_3881) ? 0.0 : max(_3881, 0.0));
                                float _3884 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
                                float _3888 = ((_3884 * _3884) * (_3866 + (-1.0))) + 1.0;
                                float _3889 = _3826 * _3865;
                                float _3890 = _3889 * _3889;
                                float _3896 = ((1.0 - _3890) * dot(vec3(_1026, _1029, _1032), vec3(_3813, _3814, _3815))) + _3890;
                                float _5021 = isnan(0.0) ? _3896 : (isnan(_3896) ? 0.0 : max(_3896, 0.0));
                                float _3897 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                                float _3898 = 1.0 - _3865;
                                float _3908 = (0.5 / (((_3897 * ((_3880 * _3898) + _3865)) + 9.9999999392252902907785028219223e-09) + (((_3897 * _3898) + _3865) * _3880))) * _3897;
                                float _5032 = isnan(0.0) ? _3908 : (isnan(_3908) ? 0.0 : max(_3908, 0.0));
                                float _3918 = (_3843 * _3820) * (((_3866 * 3.1415927410125732421875) * (isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0)))) / ((_3888 * _3888) * ((_3833 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3844 * _3690.y;
                                frontier_phi_78_pred_1 = _3844 * _3690.x;
                                frontier_phi_78_pred_2 = _3918 * _3702.z;
                                frontier_phi_78_pred_3 = _3918 * _3702.y;
                                frontier_phi_78_pred_4 = _3918 * _3702.x;
                                frontier_phi_78_pred_5 = _3844 * _3690.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3926 = frontier_phi_78_pred;
                            _3925 = frontier_phi_78_pred_1;
                            _3924 = frontier_phi_78_pred_2;
                            _3923 = frontier_phi_78_pred_3;
                            _3922 = frontier_phi_78_pred_4;
                            _3927 = frontier_phi_78_pred_5;
                            _3632 = _3925 + _3645;
                            _3633 = _3926 + _3646;
                            _3634 = _3927 + _3647;
                            _3629 = _3922 + _3642;
                            _3630 = _3923 + _3643;
                            _3631 = _3924 + _3644;
                            if (_3649 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3642 = _3629;
                                _3643 = _3630;
                                _3644 = _3631;
                                _3645 = _3632;
                                _3646 = _3633;
                                _3647 = _3634;
                                _3648 = _3649;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3634;
                        frontier_phi_72_pred_1 = _3633;
                        frontier_phi_72_pred_2 = _3632;
                        frontier_phi_72_pred_3 = _3631;
                        frontier_phi_72_pred_4 = _3630;
                        frontier_phi_72_pred_5 = _3629;
                    }
                    _3302 = frontier_phi_72_pred;
                    _3300 = frontier_phi_72_pred_1;
                    _3298 = frontier_phi_72_pred_2;
                    _3296 = frontier_phi_72_pred_3;
                    _3294 = frontier_phi_72_pred_4;
                    _3292 = frontier_phi_72_pred_5;
                    uint _3437 = _3436 + 1u;
                    if (_3437 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3430 = _3292;
                        _3431 = _3294;
                        _3432 = _3296;
                        _3433 = _3298;
                        _3434 = _3300;
                        _3435 = _3302;
                        _3436 = _3437;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3302;
                frontier_phi_60_61_ladder_1 = _3300;
                frontier_phi_60_61_ladder_2 = _3296;
                frontier_phi_60_61_ladder_3 = _3294;
                frontier_phi_60_61_ladder_4 = _3292;
                frontier_phi_60_61_ladder_5 = _3298;
            }
            else
            {
                frontier_phi_60_61_ladder = _3188;
                frontier_phi_60_61_ladder_1 = _3186;
                frontier_phi_60_61_ladder_2 = _3182;
                frontier_phi_60_61_ladder_3 = _3180;
                frontier_phi_60_61_ladder_4 = _3178;
                frontier_phi_60_61_ladder_5 = _3184;
            }
            _3291 = frontier_phi_60_61_ladder_4;
            _3293 = frontier_phi_60_61_ladder_3;
            _3295 = frontier_phi_60_61_ladder_2;
            _3297 = frontier_phi_60_61_ladder_5;
            _3299 = frontier_phi_60_61_ladder_1;
            _3301 = frontier_phi_60_61_ladder;
        }
        float _3306 = isnan(1.0) ? _1085 : (isnan(_1085) ? 1.0 : min(_1085, 1.0));
        _3111 = (_3306 * _3297) + _2623;
        _3113 = (_3306 * _3299) + _2625;
        _3115 = (_3306 * _3301) + _2627;
        _3117 = ((_3291 * _1069) * _3306) + _2961;
        _3119 = ((_3293 * _1071) * _3306) + _2963;
        _3121 = ((_3295 * _1072) * _3306) + _2965;
    }
    else
    {
        _3111 = _2623;
        _3113 = _2625;
        _3115 = _2627;
        _3117 = _2961;
        _3119 = _2963;
        _3121 = _2965;
    }
    float _5048 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _5059 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _5070 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
    uint _3141 = _258 + 6u;
    float _3149 = _1007 / cbSceneParam._m0[86u].x;
    float _3150 = _1008 / cbSceneParam._m0[86u].y;
    vec4 _3164 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3149, _3150, (log2((isnan(cbSceneParam._m0[77u].w) ? _942 : (isnan(_942) ? cbSceneParam._m0[77u].w : min(_942, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3166 = _3164.x;
    float _3167 = _3164.y;
    float _3168 = _3164.z;
    float _3169 = _3164.w;
    float _3241;
    float _3243;
    float _3245;
    float _3247;
    if (_942 > cbSceneParam._m0[78u].w)
    {
        float _3203 = isnan(_942) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _942 : min(cbSceneParam._m0[80u].w, _942));
        float _3204 = _3203 / _942;
        float _3215 = _3204 * _992;
        float _3216 = _993 * _3204;
        float _3217 = (-0.0) - _3216;
        float _3219 = _3204 * _994;
        float _3221 = (cbSceneParam._m0[77u].w * _3217) / _3203;
        float _3222 = _3221 + cbSceneParam._m0[79u].w;
        float _3223 = cbSceneParam._m0[79u].w - _3216;
        float _3229 = sqrt(((_3215 * _3215) + (_3216 * _3216)) + (_3219 * _3219));
        float _3232 = (1.0 - (cbSceneParam._m0[77u].w / _3203)) * _3229;
        float _3237 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3239 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3392;
        if (abs((_3217 - _3221) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3392 = ((((_3222 > 0.0) ? exp2(_3237 * _3222) : (2.0 - exp2(_3239 * _3222))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3232;
        }
        else
        {
            float _3352 = 1.0 / cbSceneParam._m0[80u].x;
            float _3353 = isnan(_3223) ? _3222 : (isnan(_3222) ? _3223 : max(_3222, _3223));
            float _3354 = isnan(_3223) ? _3222 : (isnan(_3222) ? _3223 : min(_3222, _3223));
            float _3363 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : min(_3353, 0.0));
            float _3364 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : min(_3354, 0.0));
            _3392 = ((abs(_3229 / _3217) * cbSceneParam._m0[80u].y) * ((((_3363 - _3364) * 2.0) - ((exp2(_3237 * (isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0)))) - exp2(_3237 * (isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0))))) * _3352)) - ((exp2(_3239 * _3363) - exp2(_3239 * _3364)) * _3352))) + (_3232 * cbSceneParam._m0[80u].z);
        }
        vec4 _3394 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3149, _3150, 1.0), 0.0);
        float _3403 = exp2((_3392 * (-1.44269502162933349609375)) * (1.0 - _3394.w));
        float _3404 = log2(_3403);
        float _3420 = log2(_3169);
        _3241 = (exp2(_3420 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3404 * cbSceneParam._m0[78u].x)) * _3394.x) / cbSceneParam._m0[78u].x)) + _3166;
        _3243 = (exp2(_3420 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3404 * cbSceneParam._m0[78u].y)) * _3394.y) / cbSceneParam._m0[78u].y)) + _3167;
        _3245 = (exp2(_3420 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3404 * cbSceneParam._m0[78u].z)) * _3394.z) / cbSceneParam._m0[78u].z)) + _3168;
        _3247 = _3403 * _3169;
    }
    else
    {
        _3241 = _3166;
        _3243 = _3167;
        _3245 = _3168;
        _3247 = _3169;
    }
    float _3259 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3260 = _3259 == 3.0;
    float _3261 = log2(_3247);
    float _3268 = exp2(_3261 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0))) * (_3111 + ((isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0))) * _1085))) + ((_3117 + ((isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0))) * _1891)) * cbPerFrame._m0[3u].x));
    float _3269 = exp2(_3261 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0))) * (_3113 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1085))) + ((_3119 + ((isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0))) * _1891)) * cbPerFrame._m0[3u].x));
    float _3270 = exp2(_3261 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0))) * (_3115 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1085))) + ((_3121 + ((isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0))) * _1891)) * cbPerFrame._m0[3u].x));
    float _3279 = (_3259 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3279 * (_3260 ? _3268 : (_3268 + (cbSceneParam._m0[72u].w * _3241)));
    SV_Target.y = _3279 * (_3260 ? _3269 : (_3269 + (cbSceneParam._m0[72u].w * _3243)));
    SV_Target.z = _3279 * (_3260 ? _3270 : (_3270 + (cbSceneParam._m0[72u].w * _3245)));
    SV_Target.w = cbInstanceData._m0[_3141].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3141].w;
}


