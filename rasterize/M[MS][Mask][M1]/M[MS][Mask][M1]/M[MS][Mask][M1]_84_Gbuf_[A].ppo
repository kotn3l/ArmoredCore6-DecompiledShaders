#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _200 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _201 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _202 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _208 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _215 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _238 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _239 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1128 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _1139 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _1150 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    uint _249 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _249 + 1u;
    uint _258 = _249 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_249].x * cbInstanceData._m0[_249].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _282 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _268) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _269) + cbTextureTilingScale._m0[13u].w));
    vec4 _305 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _331 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _336 = _331.x * cbMtdParam._m0[11u].x;
    float _337 = _331.y * cbMtdParam._m0[11u].y;
    float _338 = _331.z * cbMtdParam._m0[11u].z;
    vec4 _357 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _376 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _409 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _411 = _409.x;
    float _424 = dot(vec4(_411, _409.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _441 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _376.x) * 2.0) - ((((_411 - _424) * cbMtdParam._m0[23u].w) + _424) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1161 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _442 = isnan(1.0) ? _1161 : (isnan(_1161) ? 1.0 : min(_1161, 1.0));
    float _449 = (_442 * ((_357.x * cbMtdParam._m0[12u].x) - _336)) + _336;
    float _450 = (_442 * ((_357.y * cbMtdParam._m0[12u].y) - _337)) + _337;
    float _451 = (_442 * ((_357.z * cbMtdParam._m0[12u].z) - _338)) + _338;
    vec4 _468 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _268) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _269) + cbTextureTilingScale._m0[3u].w));
    vec4 _488 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _490 = _488.x;
    float _500 = dot(vec4(_490, _488.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _514 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _376.y) * 2.0) - ((((_490 - _500) * cbMtdParam._m0[23u].w) + _500) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1172 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _515 = isnan(1.0) ? _1172 : (isnan(_1172) ? 1.0 : min(_1172, 1.0));
    float _525 = (_305.x * cbMtdParam._m0[9u].x) * ((_515 * ((_468.x * cbMtdParam._m0[13u].x) - _449)) + _449);
    float _526 = (_305.y * cbMtdParam._m0[9u].y) * ((_515 * ((_468.y * cbMtdParam._m0[13u].y) - _450)) + _450);
    float _527 = (_305.z * cbMtdParam._m0[9u].z) * ((_515 * ((_468.z * cbMtdParam._m0[13u].z) - _451)) + _451);
    float _531 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _282.x) * _525;
    float _534 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _282.y) * _526;
    float _537 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _282.z) * _527;
    float _545 = (((_525 - _531) * (isnan(1.0) ? _1128 : (isnan(_1128) ? 1.0 : min(_1128, 1.0)))) + _531) * 4.55000019073486328125;
    float _547 = (((_526 - _534) * (isnan(1.0) ? _1139 : (isnan(_1139) ? 1.0 : min(_1139, 1.0)))) + _534) * 4.55000019073486328125;
    float _549 = (((_527 - _537) * (isnan(1.0) ? _1150 : (isnan(_1150) ? 1.0 : min(_1150, 1.0)))) + _537) * 4.55000019073486328125;
    vec4 _568 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _268) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _269) + cbTextureTilingScale._m0[14u].w));
    vec4 _587 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _268) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _269) + cbTextureTilingScale._m0[20u].w));
    vec4 _610 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _627 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _629 = _627.x;
    float _630 = _627.y;
    float _631 = _627.z;
    float _638 = ((_610.x - _629) * _442) + _629;
    float _639 = ((_610.y - _630) * _442) + _630;
    float _640 = ((_610.z - _631) * _442) + _631;
    vec4 _652 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _268) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _269) + cbTextureTilingScale._m0[2u].w));
    float _665 = ((_652.z - _640) * _515) + _640;
    float _668 = ((((_652.x - _638) * _515) + _638) * 2.0) + (-1.0);
    float _669 = ((((_652.y - _639) * _515) + _639) * 2.0) + (-1.0);
    float _670 = dot(vec2(_668, _669), vec2(_668, _669));
    float _1183 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _675 = sqrt(1.0 - (isnan(1.0) ? _1183 : (isnan(_1183) ? 1.0 : min(_1183, 1.0))));
    vec4 _689 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _714 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _716 = _714.x;
    float _717 = 1.0 - _716;
    float _733 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_716 - _717) * cbMtdParam._m0[24u].z) + _717) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1194 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _734 = isnan(1.0) ? _1194 : (isnan(_1194) ? 1.0 : min(_1194, 1.0));
    float _741 = (_734 * ((_568.x * cbMtdParam._m0[18u].x) - _545)) + _545;
    float _742 = (_734 * ((_568.y * cbMtdParam._m0[18u].y) - _547)) + _547;
    float _743 = (_734 * ((_568.z * cbMtdParam._m0[18u].z) - _549)) + _549;
    vec4 _769 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _771 = _769.x;
    float _788 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _268) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _269) + cbTextureTilingScale._m0[9u].w)).x - _771) * _442) + _771;
    float _805 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _268) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _269) + cbTextureTilingScale._m0[21u].w)).x - _788) * _515) + _788;
    float _809 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _805) * cbMtdParam._m0[19u].z) + _805;
    float _811 = _809 - (_809 * _734);
    float _816 = (((_587.z - _665) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _665;
    float _820 = ((_689.z - _816) * cbMtdParam._m0[19u].w) + _816;
    vec4 _833 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _840 = (_833.x * 2.0) + (-1.0);
    float _841 = (_833.y * 2.0) + (-1.0);
    float _842 = dot(vec2(_840, _841), vec2(_840, _841));
    float _1205 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _850 = (_734 * (_833.z - _820)) + _820;
    float _859 = (_668 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_587.x * 2.0) + (-1.0)))) + (((_689.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _860 = (_669 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_587.y * 2.0) + (-1.0)))) + (((_689.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _872 = (((_840 - _859) + (cbMtdParam._m0[21u].x * _859)) * _734) + _859;
    float _873 = (((_841 - _860) + (cbMtdParam._m0[21u].x * _860)) * _734) + _860;
    float _874 = (_734 * (sqrt(1.0 - (isnan(1.0) ? _1205 : (isnan(_1205) ? 1.0 : min(_1205, 1.0)))) - _675)) + _675;
    float _878 = cbMtdParam._m0[22u].x + _689.w;
    float _881 = fma(_874, _215 * NORMAL.x, fma(_873, _222 * TANGENT.x, (_208 * _200) * _872));
    float _884 = fma(_874, _215 * NORMAL.y, fma(_873, _222 * TANGENT.y, (_208 * _201) * _872));
    float _887 = fma(_874, _215 * NORMAL.z, fma(_873, _222 * TANGENT.z, (_208 * _202) * _872));
    float _891 = inversesqrt(dot(vec3(_881, _884, _887), vec3(_881, _884, _887)));
    float _1216 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _1227 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _893 = isnan(1.0) ? _1227 : (isnan(_1227) ? 1.0 : min(_1227, 1.0));
    float _1238 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _894 = isnan(1.0) ? _1238 : (isnan(_1238) ? 1.0 : min(_1238, 1.0));
    float _1249 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _895 = isnan(1.0) ? _1249 : (isnan(_1249) ? 1.0 : min(_1249, 1.0));
    float _1260 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _896 = isnan(1.0) ? _1260 : (isnan(_1260) ? 1.0 : min(_1260, 1.0));
    float _1271 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _948 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _938);
    float _949 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _938);
    float _950 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _938);
    vec4 _955 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _957 = _955.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1017 = sqrt(((_948 * _948) + (_949 * _949)) + (_950 * _950));
        float _1023 = (cbMatDynParam._m0[5u].x * _1017) + cbMatDynParam._m0[5u].y;
        float _1282 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
        float _1024 = isnan(1.0) ? _1282 : (isnan(_1282) ? 1.0 : min(_1282, 1.0));
        float _1028 = (cbMatDynParam._m0[5u].z * _1017) + cbMatDynParam._m0[5u].w;
        float _1293 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1293 : (isnan(_1293) ? 1.0 : min(_1293, 1.0))) - _1024)) + _1024) < ((_957 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1055;
    vec4 _979;
    float _986;
    float _987;
    float _988;
    float _989;
    float _993;
    vec4 _997;
    float _999;
    float _1000;
    bool _1011;
    for (;;)
    {
        _979 = cbInstanceData._m0[(_249 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _983 = (cbMtdParam._m0[0u].x * _894) * _979.x;
        float _984 = (cbMtdParam._m0[0u].y * _895) * _979.y;
        float _985 = (cbMtdParam._m0[0u].z * _896) * _979.z;
        float _1304 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
        _986 = isnan(1.0) ? _1304 : (isnan(_1304) ? 1.0 : min(_1304, 1.0));
        float _1315 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        _987 = isnan(1.0) ? _1315 : (isnan(_1315) ? 1.0 : min(_1315, 1.0));
        float _1326 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        _988 = isnan(1.0) ? _1326 : (isnan(_1326) ? 1.0 : min(_1326, 1.0));
        _989 = _893 * TEXCOORD_5.w;
        _993 = cbInstanceData._m0[_249 + 6u].w;
        float _994 = _957 + (-0.5);
        _997 = cbMtdParam._m0[1u];
        _999 = _997.y * _994;
        _1000 = _994 * 0.999000012874603271484375;
        _1011 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1011)
        {
            if ((cbInstanceData._m0[_249 + 7u].x + _1000) < 0.5)
            {
                _1055 = true;
                break;
            }
        }
        if ((_979.w < 1.0) && ((_979.w + _1000) < 0.5))
        {
            _1055 = true;
            break;
        }
        if ((_999 + 1.0) < _997.x)
        {
            _1055 = true;
            break;
        }
        _1055 = false;
        break;
    }
    if (_1055)
    {
        discard_state = true;
    }
    bool _1081 = cbMtdParam._m0[1u].z != 0.0;
    float _1082 = _1081 ? _993 : 0.0;
    SV_Target.x = ((_881 * 0.5) * _891) + 0.500488758087158203125;
    SV_Target.y = ((_884 * 0.5) * _891) + 0.500488758087158203125;
    SV_Target.z = ((_887 * 0.5) * _891) + 0.500488758087158203125;
    SV_Target.w = _1082;
    SV_Target_1.x = isnan(1.0) ? _1271 : (isnan(_1271) ? 1.0 : min(_1271, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1216 : (isnan(_1216) ? 1.0 : min(_1216, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1081 ? _993 : _989;
    SV_Target_2.x = _986;
    SV_Target_2.y = _987;
    SV_Target_2.z = _988;
    SV_Target_2.w = _1081 ? _993 : (float(floatBitsToUint(cbInstanceData._m0[_249 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1082;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1082;
    discard_exit();
}


