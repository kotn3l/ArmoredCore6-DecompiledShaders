#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _179 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _180 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _181 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_179, _180, _181), vec3(_179, _180, _181)));
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _207 = uint(roundEven(NORMAL.w)) * 13u;
    uint _213 = _207 + 1u;
    uint _217 = _207 + 2u;
    float _226 = sqrt(((cbInstanceData._m0[_213].x * cbInstanceData._m0[_213].x) + (cbInstanceData._m0[_207].x * cbInstanceData._m0[_207].x)) + (cbInstanceData._m0[_217].x * cbInstanceData._m0[_217].x));
    float _227 = _226 * TEXCOORD.z;
    float _228 = _226 * TEXCOORD.w;
    vec4 _247 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _271 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _276 = _271.x * cbMtdParam._m0[11u].x;
    float _277 = _271.y * cbMtdParam._m0[11u].y;
    float _278 = _271.z * cbMtdParam._m0[11u].z;
    vec4 _297 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _227) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _228) + cbTextureTilingScale._m0[5u].w));
    vec4 _351 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _353 = _351.x;
    float _366 = dot(vec4(_353, _351.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _383 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_353 - _366) * cbMtdParam._m0[23u].w) + _366) * cbMtdParam._m0[22u].w))) + 1.0;
    float _887 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _384 = isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0));
    float _397 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _247.x) * ((_384 * ((_297.x * cbMtdParam._m0[12u].x) - _276)) + _276);
    float _400 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _247.y) * ((_384 * ((_297.y * cbMtdParam._m0[12u].y) - _277)) + _277);
    float _403 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _247.z) * ((_384 * ((_297.z * cbMtdParam._m0[12u].z) - _278)) + _278);
    vec4 _421 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _227) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _228) + cbTextureTilingScale._m0[4u].w));
    vec4 _438 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _440 = _438.x;
    float _441 = _438.y;
    float _442 = _438.z;
    float _451 = ((_421.z - _442) * _384) + _442;
    float _454 = ((((_421.x - _440) * _384) + _440) * 2.0) + (-1.0);
    float _456 = ((((_421.y - _441) * _384) + _441) * 2.0) + (-1.0);
    float _457 = dot(vec2(_454, _456), vec2(_454, _456));
    float _898 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _462 = sqrt(1.0 - (isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0))));
    vec4 _478 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _503 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _227) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _228) + cbTextureTilingScale._m0[11u].w));
    float _505 = _503.x;
    float _506 = 1.0 - _505;
    float _522 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_505 - _506) * cbMtdParam._m0[24u].z) + _506) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _909 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _523 = isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0));
    float _530 = (_523 * (cbMtdParam._m0[17u].x - _397)) + _397;
    float _531 = (_523 * (cbMtdParam._m0[17u].y - _400)) + _400;
    float _532 = (_523 * (cbMtdParam._m0[17u].z - _403)) + _403;
    vec4 _544 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _558 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _560 = _558.x;
    float _577 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _227) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _228) + cbTextureTilingScale._m0[9u].w)).x - _560) * _384) + _560;
    float _581 = ((_544.x - _577) * cbMtdParam._m0[19u].z) + _577;
    float _583 = _581 - (_581 * _523);
    float _587 = (cbMtdParam._m0[19u].w * (_478.z - _451)) + _451;
    vec4 _600 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _227) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _228) + cbTextureTilingScale._m0[15u].w));
    float _607 = (_600.x * 2.0) + (-1.0);
    float _608 = (_600.y * 2.0) + (-1.0);
    float _609 = dot(vec2(_607, _608), vec2(_607, _608));
    float _920 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _617 = (_523 * (_600.z - _587)) + _587;
    float _620 = (((_478.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _454;
    float _621 = (((_478.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _456;
    float _633 = (((_607 - _620) + (cbMtdParam._m0[21u].x * _620)) * _523) + _620;
    float _634 = (((_608 - _621) + (cbMtdParam._m0[21u].x * _621)) * _523) + _621;
    float _635 = (_523 * (sqrt(1.0 - (isnan(1.0) ? _920 : (isnan(_920) ? 1.0 : min(_920, 1.0)))) - _462)) + _462;
    float _637 = cbMtdParam._m0[22u].x + _478.w;
    float _640 = fma(_635, _194 * NORMAL.x, fma(_634, _201 * TANGENT.x, (_187 * _179) * _633));
    float _643 = fma(_635, _194 * NORMAL.y, fma(_634, _201 * TANGENT.y, (_187 * _180) * _633));
    float _646 = fma(_635, _194 * NORMAL.z, fma(_634, _201 * TANGENT.z, (_187 * _181) * _633));
    float _650 = inversesqrt(dot(vec3(_640, _643, _646), vec3(_640, _643, _646)));
    float _931 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _942 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _652 = isnan(1.0) ? _942 : (isnan(_942) ? 1.0 : min(_942, 1.0));
    float _953 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _653 = isnan(1.0) ? _953 : (isnan(_953) ? 1.0 : min(_953, 1.0));
    float _964 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _654 = isnan(1.0) ? _964 : (isnan(_964) ? 1.0 : min(_964, 1.0));
    float _975 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _655 = isnan(1.0) ? _975 : (isnan(_975) ? 1.0 : min(_975, 1.0));
    float _986 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _697 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _707 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _697);
    float _708 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _697);
    float _709 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _697);
    vec4 _714 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _716 = _714.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _776 = sqrt(((_707 * _707) + (_708 * _708)) + (_709 * _709));
        float _782 = (cbMatDynParam._m0[5u].x * _776) + cbMatDynParam._m0[5u].y;
        float _997 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        float _783 = isnan(1.0) ? _997 : (isnan(_997) ? 1.0 : min(_997, 1.0));
        float _787 = (cbMatDynParam._m0[5u].z * _776) + cbMatDynParam._m0[5u].w;
        float _1008 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1008 : (isnan(_1008) ? 1.0 : min(_1008, 1.0))) - _783)) + _783) < ((_716 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _814;
    vec4 _738;
    float _745;
    float _746;
    float _747;
    float _748;
    float _752;
    vec4 _756;
    float _758;
    float _759;
    bool _770;
    for (;;)
    {
        _738 = cbInstanceData._m0[(_207 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _742 = (cbMtdParam._m0[0u].x * _653) * _738.x;
        float _743 = (cbMtdParam._m0[0u].y * _654) * _738.y;
        float _744 = (cbMtdParam._m0[0u].z * _655) * _738.z;
        float _1019 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
        _745 = isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0));
        float _1030 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
        _746 = isnan(1.0) ? _1030 : (isnan(_1030) ? 1.0 : min(_1030, 1.0));
        float _1041 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
        _747 = isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0));
        _748 = _652 * TEXCOORD_5.w;
        _752 = cbInstanceData._m0[_207 + 6u].w;
        float _753 = _716 + (-0.5);
        _756 = cbMtdParam._m0[1u];
        _758 = _756.y * _753;
        _759 = _753 * 0.999000012874603271484375;
        _770 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_770)
        {
            if ((cbInstanceData._m0[_207 + 7u].x + _759) < 0.5)
            {
                _814 = true;
                break;
            }
        }
        if ((_738.w < 1.0) && ((_738.w + _759) < 0.5))
        {
            _814 = true;
            break;
        }
        if ((_758 + 1.0) < _756.x)
        {
            _814 = true;
            break;
        }
        _814 = false;
        break;
    }
    if (_814)
    {
        discard_state = true;
    }
    bool _840 = cbMtdParam._m0[1u].z != 0.0;
    float _841 = _840 ? _752 : 0.0;
    SV_Target.x = ((_640 * 0.5) * _650) + 0.500488758087158203125;
    SV_Target.y = ((_643 * 0.5) * _650) + 0.500488758087158203125;
    SV_Target.z = ((_646 * 0.5) * _650) + 0.500488758087158203125;
    SV_Target.w = _841;
    SV_Target_1.x = isnan(1.0) ? _986 : (isnan(_986) ? 1.0 : min(_986, 1.0));
    SV_Target_1.y = isnan(1.0) ? _931 : (isnan(_931) ? 1.0 : min(_931, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _840 ? _752 : _748;
    SV_Target_2.x = _745;
    SV_Target_2.y = _746;
    SV_Target_2.z = _747;
    SV_Target_2.w = _840 ? _752 : (float(floatBitsToUint(cbInstanceData._m0[_207 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _841;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _841;
    discard_exit();
}


