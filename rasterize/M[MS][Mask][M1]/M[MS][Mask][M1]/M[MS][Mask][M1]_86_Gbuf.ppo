#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _214 = _209 + 1u;
    uint _218 = _209 + 2u;
    float _227 = sqrt(((cbInstanceData._m0[_214].x * cbInstanceData._m0[_214].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_218].x * cbInstanceData._m0[_218].x));
    float _228 = _227 * TEXCOORD.z;
    float _229 = _227 * TEXCOORD.w;
    vec4 _249 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _255 = _249.x * cbMtdParam._m0[11u].x;
    float _256 = _249.y * cbMtdParam._m0[11u].y;
    float _257 = _249.z * cbMtdParam._m0[11u].z;
    vec4 _276 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _228) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _229) + cbTextureTilingScale._m0[5u].w));
    vec4 _295 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _331 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _333 = _331.x;
    float _346 = dot(vec4(_333, _331.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _363 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _295.x) * 2.0) - ((((_333 - _346) * cbMtdParam._m0[23u].w) + _346) * cbMtdParam._m0[22u].w))) + 1.0;
    float _948 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _364 = isnan(1.0) ? _948 : (isnan(_948) ? 1.0 : min(_948, 1.0));
    float _371 = (_364 * ((_276.x * cbMtdParam._m0[12u].x) - _255)) + _255;
    float _372 = (_364 * ((_276.y * cbMtdParam._m0[12u].y) - _256)) + _256;
    float _373 = (_364 * ((_276.z * cbMtdParam._m0[12u].z) - _257)) + _257;
    vec4 _390 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _228) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _229) + cbTextureTilingScale._m0[3u].w));
    vec4 _410 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _412 = _410.x;
    float _422 = dot(vec4(_412, _410.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _436 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _295.y) * 2.0) - ((((_412 - _422) * cbMtdParam._m0[23u].w) + _422) * cbMtdParam._m0[20u].w))) + 1.0;
    float _959 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _959 : (isnan(_959) ? 1.0 : min(_959, 1.0));
    float _444 = (_437 * ((_390.x * cbMtdParam._m0[13u].x) - _371)) + _371;
    float _445 = (_437 * ((_390.y * cbMtdParam._m0[13u].y) - _372)) + _372;
    float _446 = (_437 * ((_390.z * cbMtdParam._m0[13u].z) - _373)) + _373;
    vec4 _465 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _228) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _229) + cbTextureTilingScale._m0[14u].w));
    vec4 _485 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _228) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _229) + cbTextureTilingScale._m0[4u].w));
    vec4 _502 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _504 = _502.x;
    float _505 = _502.y;
    float _506 = _502.z;
    float _513 = ((_485.x - _504) * _364) + _504;
    float _514 = ((_485.y - _505) * _364) + _505;
    float _515 = ((_485.z - _506) * _364) + _506;
    vec4 _527 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _228) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _229) + cbTextureTilingScale._m0[2u].w));
    float _540 = ((_527.z - _515) * _437) + _515;
    float _543 = ((((_527.x - _513) * _437) + _513) * 2.0) + (-1.0);
    float _545 = ((((_527.y - _514) * _437) + _514) * 2.0) + (-1.0);
    float _546 = dot(vec2(_543, _545), vec2(_543, _545));
    float _970 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _551 = sqrt(1.0 - (isnan(1.0) ? _970 : (isnan(_970) ? 1.0 : min(_970, 1.0))));
    vec4 _565 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _590 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _228) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _229) + cbTextureTilingScale._m0[11u].w));
    float _592 = _590.x;
    float _593 = 1.0 - _592;
    float _602 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _605 = ((isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : min(_602, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _614 = (_605 - ((((((_592 - _593) * cbMtdParam._m0[24u].z) + _593) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _605))) * (cbMtdParam._m0[21u].w + 1.0);
    float _991 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _615 = isnan(1.0) ? _991 : (isnan(_991) ? 1.0 : min(_991, 1.0));
    float _622 = (_615 * ((_465.x * cbMtdParam._m0[18u].x) - _444)) + _444;
    float _623 = (_615 * ((_465.y * cbMtdParam._m0[18u].y) - _445)) + _445;
    float _624 = (_615 * ((_465.z * cbMtdParam._m0[18u].z) - _446)) + _446;
    vec4 _636 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _228) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _229) + cbTextureTilingScale._m0[19u].w));
    float _638 = _636.x;
    float _639 = 1.0 - _638;
    float _664 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_638 - _639) * cbMtdParam._m0[24u].w) + _639) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1002 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _665 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
    float _673 = ((((cbMtdParam._m0[10u].x - _622) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _665) + _622;
    float _674 = ((((cbMtdParam._m0[10u].y - _623) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _665) + _623;
    float _675 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _624)) * _665) + _624;
    vec4 _701 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _703 = _701.x;
    float _721 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _228) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _229) + cbTextureTilingScale._m0[9u].w)).x - _703) * _364) + _703;
    float _738 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _228) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _229) + cbTextureTilingScale._m0[21u].w)).x - _721) * _437) + _721;
    float _742 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _738) * cbMtdParam._m0[19u].z) + _738;
    float _744 = _742 - (_742 * _615);
    float _746 = _744 - (_744 * _665);
    float _750 = (cbMtdParam._m0[19u].w * (_565.z - _540)) + _540;
    vec4 _764 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _228) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _229) + cbTextureTilingScale._m0[15u].w));
    float _771 = (_764.x * 2.0) + (-1.0);
    float _772 = (_764.y * 2.0) + (-1.0);
    float _773 = dot(vec2(_771, _772), vec2(_771, _772));
    float _1013 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _781 = (_615 * (_764.z - _750)) + _750;
    float _784 = ((cbMtdParam._m0[23u].x - _781) * _665) + _781;
    vec4 _803 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _228) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _229) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _809 = (_803.x * 2.0) + (-1.0);
    float _810 = (_803.y * 2.0) + (-1.0);
    float _811 = dot(vec2(_809, _810), vec2(_809, _810));
    float _1024 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _819 = (((_565.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _543;
    float _820 = (((_565.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _545;
    float _832 = (((_771 - _819) + (cbMtdParam._m0[21u].x * _819)) * _615) + _819;
    float _833 = (((_772 - _820) + (cbMtdParam._m0[21u].x * _820)) * _615) + _820;
    float _834 = (_615 * (sqrt(1.0 - (isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0)))) - _551)) + _551;
    float _845 = (((_809 - _832) + (_832 * cbMtdParam._m0[22u].z)) * _665) + _832;
    float _846 = (((_810 - _833) + (_833 * cbMtdParam._m0[22u].z)) * _665) + _833;
    float _847 = ((sqrt(1.0 - (isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0)))) - _834) * _665) + _834;
    float _849 = cbMtdParam._m0[22u].x + _565.w;
    float _852 = fma(_847, _196 * NORMAL.x, fma(_846, _203 * TANGENT.x, (_189 * _181) * _845));
    float _855 = fma(_847, _196 * NORMAL.y, fma(_846, _203 * TANGENT.y, (_189 * _182) * _845));
    float _858 = fma(_847, _196 * NORMAL.z, fma(_846, _203 * TANGENT.z, (_189 * _183) * _845));
    float _862 = inversesqrt(dot(vec3(_852, _855, _858), vec3(_852, _855, _858)));
    float _1035 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _1046 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _1057 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _1068 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _1079 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _1090 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    uint _882 = (_209 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _888 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0)))) * cbInstanceData._m0[_882].x;
    float _889 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0)))) * cbInstanceData._m0[_882].y;
    float _890 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0)))) * cbInstanceData._m0[_882].z;
    float _1101 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _1112 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _1123 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    uint _895 = _209 + 6u;
    bool _922 = cbMtdParam._m0[1u].z != 0.0;
    float _923 = _922 ? cbInstanceData._m0[_895].w : 0.0;
    SV_Target.x = ((_852 * 0.5) * _862) + 0.500488758087158203125;
    SV_Target.y = ((_855 * 0.5) * _862) + 0.500488758087158203125;
    SV_Target.z = ((_858 * 0.5) * _862) + 0.500488758087158203125;
    SV_Target.w = _923;
    SV_Target_1.x = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1035 : (isnan(_1035) ? 1.0 : min(_1035, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _922 ? cbInstanceData._m0[_895].w : ((isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0))) * TEXCOORD_5.w);
    SV_Target_2.x = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
    SV_Target_2.y = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
    SV_Target_2.z = isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0));
    SV_Target_2.w = _922 ? cbInstanceData._m0[_895].w : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _923;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _923;
}


