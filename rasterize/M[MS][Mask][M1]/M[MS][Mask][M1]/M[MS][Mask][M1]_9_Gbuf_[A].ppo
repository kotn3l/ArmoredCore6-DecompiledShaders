#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _240 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _241 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1002 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _1013 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _1024 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _251 + 1u;
    uint _260 = _251 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_251].x * cbInstanceData._m0[_251].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _284 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _270) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _271) + cbTextureTilingScale._m0[13u].w));
    vec4 _307 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _333 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _338 = _333.x * cbMtdParam._m0[11u].x;
    float _339 = _333.y * cbMtdParam._m0[11u].y;
    float _340 = _333.z * cbMtdParam._m0[11u].z;
    vec4 _359 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _407 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _409 = _407.x;
    float _422 = dot(vec4(_409, _407.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _439 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_409 - _422) * cbMtdParam._m0[23u].w) + _422) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1035 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _440 = isnan(1.0) ? _1035 : (isnan(_1035) ? 1.0 : min(_1035, 1.0));
    float _450 = (_307.x * cbMtdParam._m0[9u].x) * ((_440 * ((_359.x * cbMtdParam._m0[12u].x) - _338)) + _338);
    float _451 = (_307.y * cbMtdParam._m0[9u].y) * ((_440 * ((_359.y * cbMtdParam._m0[12u].y) - _339)) + _339);
    float _452 = (_307.z * cbMtdParam._m0[9u].z) * ((_440 * ((_359.z * cbMtdParam._m0[12u].z) - _340)) + _340);
    float _456 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _284.x) * _450;
    float _459 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _284.y) * _451;
    float _462 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _284.z) * _452;
    float _470 = (((_450 - _456) * (isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0)))) + _456) * 4.55000019073486328125;
    float _472 = (((_451 - _459) * (isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0)))) + _459) * 4.55000019073486328125;
    float _474 = (((_452 - _462) * (isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0)))) + _462) * 4.55000019073486328125;
    vec4 _487 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _270) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _271) + cbTextureTilingScale._m0[20u].w));
    vec4 _512 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _529 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _531 = _529.x;
    float _532 = _529.y;
    float _533 = _529.z;
    float _542 = ((_512.z - _533) * _440) + _533;
    float _545 = ((((_512.x - _531) * _440) + _531) * 2.0) + (-1.0);
    float _546 = ((((_512.y - _532) * _440) + _532) * 2.0) + (-1.0);
    float _547 = dot(vec2(_545, _546), vec2(_545, _546));
    float _1046 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    float _552 = sqrt(1.0 - (isnan(1.0) ? _1046 : (isnan(_1046) ? 1.0 : min(_1046, 1.0))));
    vec4 _574 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _586 = (_545 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_487.x * 2.0) + (-1.0)))) + (((_574.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _587 = (_546 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_487.y * 2.0) + (-1.0)))) + (((_574.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _599 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _270) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _271) + cbTextureTilingScale._m0[19u].w));
    float _601 = _599.x;
    float _602 = 1.0 - _601;
    float _631 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_601 - _602) * cbMtdParam._m0[24u].w) + _602) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1057 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _632 = isnan(1.0) ? _1057 : (isnan(_1057) ? 1.0 : min(_1057, 1.0));
    float _640 = ((((cbMtdParam._m0[10u].x - _470) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _632) + _470;
    float _641 = ((((cbMtdParam._m0[10u].y - _472) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _632) + _472;
    float _642 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _474)) * _632) + _474;
    vec4 _654 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _668 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _670 = _668.x;
    float _687 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _270) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _271) + cbTextureTilingScale._m0[9u].w)).x - _670) * _440) + _670;
    float _691 = ((_654.x - _687) * cbMtdParam._m0[19u].z) + _687;
    float _693 = _691 - (_691 * _632);
    float _698 = (((_487.z - _542) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _542;
    float _702 = ((_574.z - _698) * cbMtdParam._m0[19u].w) + _698;
    float _706 = ((cbMtdParam._m0[23u].x - _702) * _632) + _702;
    vec4 _725 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _270) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _271) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _731 = (_725.x * 2.0) + (-1.0);
    float _732 = (_725.y * 2.0) + (-1.0);
    float _733 = dot(vec2(_731, _732), vec2(_731, _732));
    float _1068 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _749 = (_632 * (((cbMtdParam._m0[22u].z * _586) - _586) + _731)) + _586;
    float _750 = (_632 * (((cbMtdParam._m0[22u].z * _587) - _587) + _732)) + _587;
    float _751 = (_632 * (sqrt(1.0 - (isnan(1.0) ? _1068 : (isnan(_1068) ? 1.0 : min(_1068, 1.0)))) - _552)) + _552;
    float _753 = cbMtdParam._m0[22u].x + _574.w;
    float _756 = fma(_751, _219 * NORMAL.x, fma(_750, _226 * TANGENT.x, (_212 * _204) * _749));
    float _759 = fma(_751, _219 * NORMAL.y, fma(_750, _226 * TANGENT.y, (_212 * _205) * _749));
    float _762 = fma(_751, _219 * NORMAL.z, fma(_750, _226 * TANGENT.z, (_212 * _206) * _749));
    float _766 = inversesqrt(dot(vec3(_756, _759, _762), vec3(_756, _759, _762)));
    float _1079 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _1090 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _768 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
    float _1101 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _769 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
    float _1112 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _770 = isnan(1.0) ? _1112 : (isnan(_1112) ? 1.0 : min(_1112, 1.0));
    float _1123 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _771 = isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0));
    float _1134 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _812 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _822 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _812);
    float _823 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _812);
    float _824 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _812);
    vec4 _829 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _831 = _829.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _891 = sqrt(((_822 * _822) + (_823 * _823)) + (_824 * _824));
        float _897 = (cbMatDynParam._m0[5u].x * _891) + cbMatDynParam._m0[5u].y;
        float _1145 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
        float _898 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        float _902 = (cbMatDynParam._m0[5u].z * _891) + cbMatDynParam._m0[5u].w;
        float _1156 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1156 : (isnan(_1156) ? 1.0 : min(_1156, 1.0))) - _898)) + _898) < ((_831 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _929;
    vec4 _853;
    float _860;
    float _861;
    float _862;
    float _863;
    float _867;
    vec4 _871;
    float _873;
    float _874;
    bool _885;
    for (;;)
    {
        _853 = cbInstanceData._m0[(_251 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _857 = (cbMtdParam._m0[0u].x * _769) * _853.x;
        float _858 = (cbMtdParam._m0[0u].y * _770) * _853.y;
        float _859 = (cbMtdParam._m0[0u].z * _771) * _853.z;
        float _1167 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
        _860 = isnan(1.0) ? _1167 : (isnan(_1167) ? 1.0 : min(_1167, 1.0));
        float _1178 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
        _861 = isnan(1.0) ? _1178 : (isnan(_1178) ? 1.0 : min(_1178, 1.0));
        float _1189 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
        _862 = isnan(1.0) ? _1189 : (isnan(_1189) ? 1.0 : min(_1189, 1.0));
        _863 = _768 * TEXCOORD_5.w;
        _867 = cbInstanceData._m0[_251 + 6u].w;
        float _868 = _831 + (-0.5);
        _871 = cbMtdParam._m0[1u];
        _873 = _871.y * _868;
        _874 = _868 * 0.999000012874603271484375;
        _885 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_885)
        {
            if ((cbInstanceData._m0[_251 + 7u].x + _874) < 0.5)
            {
                _929 = true;
                break;
            }
        }
        if ((_853.w < 1.0) && ((_853.w + _874) < 0.5))
        {
            _929 = true;
            break;
        }
        if ((_873 + 1.0) < _871.x)
        {
            _929 = true;
            break;
        }
        _929 = false;
        break;
    }
    if (_929)
    {
        discard_state = true;
    }
    bool _955 = cbMtdParam._m0[1u].z != 0.0;
    float _956 = _955 ? _867 : 0.0;
    SV_Target.x = ((_756 * 0.5) * _766) + 0.500488758087158203125;
    SV_Target.y = ((_759 * 0.5) * _766) + 0.500488758087158203125;
    SV_Target.z = ((_762 * 0.5) * _766) + 0.500488758087158203125;
    SV_Target.w = _956;
    SV_Target_1.x = isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1079 : (isnan(_1079) ? 1.0 : min(_1079, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _955 ? _867 : _863;
    SV_Target_2.x = _860;
    SV_Target_2.y = _861;
    SV_Target_2.z = _862;
    SV_Target_2.w = _955 ? _867 : (float(floatBitsToUint(cbInstanceData._m0[_251 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _956;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _956;
    discard_exit();
}


