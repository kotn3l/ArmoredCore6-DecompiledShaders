#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _199 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _200 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _201 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _227 = uint(roundEven(NORMAL.w)) * 13u;
    uint _232 = _227 + 1u;
    uint _236 = _227 + 2u;
    float _245 = sqrt(((cbInstanceData._m0[_232].x * cbInstanceData._m0[_232].x) + (cbInstanceData._m0[_227].x * cbInstanceData._m0[_227].x)) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x));
    float _246 = _245 * TEXCOORD.z;
    float _247 = _245 * TEXCOORD.w;
    vec4 _267 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _273 = _267.x * cbMtdParam._m0[11u].x;
    float _274 = _267.y * cbMtdParam._m0[11u].y;
    float _275 = _267.z * cbMtdParam._m0[11u].z;
    vec4 _294 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _246) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _247) + cbTextureTilingScale._m0[5u].w));
    vec4 _346 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _348 = _346.x;
    float _361 = dot(vec4(_348, _346.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _378 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_348 - _361) * cbMtdParam._m0[23u].w) + _361) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1000 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _379 = isnan(1.0) ? _1000 : (isnan(_1000) ? 1.0 : min(_1000, 1.0));
    float _386 = (_379 * ((_294.x * cbMtdParam._m0[12u].x) - _273)) + _273;
    float _387 = (_379 * ((_294.y * cbMtdParam._m0[12u].y) - _274)) + _274;
    float _388 = (_379 * ((_294.z * cbMtdParam._m0[12u].z) - _275)) + _275;
    vec4 _407 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _246) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _247) + cbTextureTilingScale._m0[14u].w));
    vec4 _427 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _246) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _247) + cbTextureTilingScale._m0[4u].w));
    vec4 _444 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _446 = _444.x;
    float _447 = _444.y;
    float _448 = _444.z;
    float _457 = ((_427.z - _448) * _379) + _448;
    float _460 = ((((_427.x - _446) * _379) + _446) * 2.0) + (-1.0);
    float _462 = ((((_427.y - _447) * _379) + _447) * 2.0) + (-1.0);
    float _463 = dot(vec2(_460, _462), vec2(_460, _462));
    float _1011 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _468 = sqrt(1.0 - (isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0))));
    vec4 _484 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _509 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _246) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _247) + cbTextureTilingScale._m0[11u].w));
    float _511 = _509.x;
    float _512 = 1.0 - _511;
    float _521 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _524 = ((isnan(0.0) ? _521 : (isnan(_521) ? 0.0 : min(_521, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _533 = (_524 - ((((((_511 - _512) * cbMtdParam._m0[24u].z) + _512) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _524))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1032 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _534 = isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0));
    float _541 = (_534 * ((_407.x * cbMtdParam._m0[18u].x) - _386)) + _386;
    float _542 = (_534 * ((_407.y * cbMtdParam._m0[18u].y) - _387)) + _387;
    float _543 = (_534 * ((_407.z * cbMtdParam._m0[18u].z) - _388)) + _388;
    vec4 _555 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _246) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _247) + cbTextureTilingScale._m0[19u].w));
    float _557 = _555.x;
    float _558 = 1.0 - _557;
    float _583 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_557 - _558) * cbMtdParam._m0[24u].w) + _558) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1043 = isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0));
    float _584 = isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0));
    float _592 = ((((cbMtdParam._m0[10u].x - _541) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _584) + _541;
    float _593 = ((((cbMtdParam._m0[10u].y - _542) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _584) + _542;
    float _594 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _543)) * _584) + _543;
    vec4 _606 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _620 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _622 = _620.x;
    float _640 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _246) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _247) + cbTextureTilingScale._m0[9u].w)).x - _622) * _379) + _622;
    float _644 = ((_606.x - _640) * cbMtdParam._m0[19u].z) + _640;
    float _646 = _644 - (_644 * _534);
    float _648 = _646 - (_646 * _584);
    float _652 = (cbMtdParam._m0[19u].w * (_484.z - _457)) + _457;
    vec4 _666 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _246) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _247) + cbTextureTilingScale._m0[15u].w));
    float _673 = (_666.x * 2.0) + (-1.0);
    float _674 = (_666.y * 2.0) + (-1.0);
    float _675 = dot(vec2(_673, _674), vec2(_673, _674));
    float _1054 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _683 = (_534 * (_666.z - _652)) + _652;
    float _686 = ((cbMtdParam._m0[23u].x - _683) * _584) + _683;
    vec4 _705 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _246) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _247) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _711 = (_705.x * 2.0) + (-1.0);
    float _712 = (_705.y * 2.0) + (-1.0);
    float _713 = dot(vec2(_711, _712), vec2(_711, _712));
    float _1065 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _721 = (((_484.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _460;
    float _722 = (((_484.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _462;
    float _734 = (((_673 - _721) + (cbMtdParam._m0[21u].x * _721)) * _534) + _721;
    float _735 = (((_674 - _722) + (cbMtdParam._m0[21u].x * _722)) * _534) + _722;
    float _736 = (_534 * (sqrt(1.0 - (isnan(1.0) ? _1054 : (isnan(_1054) ? 1.0 : min(_1054, 1.0)))) - _468)) + _468;
    float _747 = (((_711 - _734) + (_734 * cbMtdParam._m0[22u].z)) * _584) + _734;
    float _748 = (((_712 - _735) + (_735 * cbMtdParam._m0[22u].z)) * _584) + _735;
    float _749 = ((sqrt(1.0 - (isnan(1.0) ? _1065 : (isnan(_1065) ? 1.0 : min(_1065, 1.0)))) - _736) * _584) + _736;
    float _751 = cbMtdParam._m0[22u].x + _484.w;
    float _754 = fma(_749, _214 * NORMAL.x, fma(_748, _221 * TANGENT.x, (_207 * _199) * _747));
    float _757 = fma(_749, _214 * NORMAL.y, fma(_748, _221 * TANGENT.y, (_207 * _200) * _747));
    float _760 = fma(_749, _214 * NORMAL.z, fma(_748, _221 * TANGENT.z, (_207 * _201) * _747));
    float _764 = inversesqrt(dot(vec3(_754, _757, _760), vec3(_754, _757, _760)));
    float _1076 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _1087 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _766 = isnan(1.0) ? _1087 : (isnan(_1087) ? 1.0 : min(_1087, 1.0));
    float _1098 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _767 = isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0));
    float _1109 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _768 = isnan(1.0) ? _1109 : (isnan(_1109) ? 1.0 : min(_1109, 1.0));
    float _1120 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _769 = isnan(1.0) ? _1120 : (isnan(_1120) ? 1.0 : min(_1120, 1.0));
    float _1131 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _810 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _820 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _810);
    float _821 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _810);
    float _822 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _810);
    vec4 _827 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _829 = _827.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _889 = sqrt(((_820 * _820) + (_821 * _821)) + (_822 * _822));
        float _895 = (cbMatDynParam._m0[5u].x * _889) + cbMatDynParam._m0[5u].y;
        float _1142 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _896 = isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0));
        float _900 = (cbMatDynParam._m0[5u].z * _889) + cbMatDynParam._m0[5u].w;
        float _1153 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0))) - _896)) + _896) < ((_829 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _927;
    vec4 _851;
    float _858;
    float _859;
    float _860;
    float _861;
    float _865;
    vec4 _869;
    float _871;
    float _872;
    bool _883;
    for (;;)
    {
        _851 = cbInstanceData._m0[(_227 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _855 = (cbMtdParam._m0[0u].x * _767) * _851.x;
        float _856 = (cbMtdParam._m0[0u].y * _768) * _851.y;
        float _857 = (cbMtdParam._m0[0u].z * _769) * _851.z;
        float _1164 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
        _858 = isnan(1.0) ? _1164 : (isnan(_1164) ? 1.0 : min(_1164, 1.0));
        float _1175 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
        _859 = isnan(1.0) ? _1175 : (isnan(_1175) ? 1.0 : min(_1175, 1.0));
        float _1186 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
        _860 = isnan(1.0) ? _1186 : (isnan(_1186) ? 1.0 : min(_1186, 1.0));
        _861 = _766 * TEXCOORD_5.w;
        _865 = cbInstanceData._m0[_227 + 6u].w;
        float _866 = _829 + (-0.5);
        _869 = cbMtdParam._m0[1u];
        _871 = _869.y * _866;
        _872 = _866 * 0.999000012874603271484375;
        _883 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_883)
        {
            if ((cbInstanceData._m0[_227 + 7u].x + _872) < 0.5)
            {
                _927 = true;
                break;
            }
        }
        if ((_851.w < 1.0) && ((_851.w + _872) < 0.5))
        {
            _927 = true;
            break;
        }
        if ((_871 + 1.0) < _869.x)
        {
            _927 = true;
            break;
        }
        _927 = false;
        break;
    }
    if (_927)
    {
        discard_state = true;
    }
    bool _953 = cbMtdParam._m0[1u].z != 0.0;
    float _954 = _953 ? _865 : 0.0;
    SV_Target.x = ((_754 * 0.5) * _764) + 0.500488758087158203125;
    SV_Target.y = ((_757 * 0.5) * _764) + 0.500488758087158203125;
    SV_Target.z = ((_760 * 0.5) * _764) + 0.500488758087158203125;
    SV_Target.w = _954;
    SV_Target_1.x = isnan(1.0) ? _1131 : (isnan(_1131) ? 1.0 : min(_1131, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1076 : (isnan(_1076) ? 1.0 : min(_1076, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _953 ? _865 : _861;
    SV_Target_2.x = _858;
    SV_Target_2.y = _859;
    SV_Target_2.z = _860;
    SV_Target_2.w = _953 ? _865 : (float(floatBitsToUint(cbInstanceData._m0[_227 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _954;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _954;
    discard_exit();
}


