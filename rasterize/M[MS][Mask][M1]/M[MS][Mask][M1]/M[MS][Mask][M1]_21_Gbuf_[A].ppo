#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _175 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _176 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _177 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _184 = _183 * _175;
    float _185 = _183 * _176;
    float _186 = _183 * _177;
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _191 = _190 * NORMAL.x;
    float _192 = _190 * NORMAL.y;
    float _193 = _190 * NORMAL.z;
    float _197 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _198 = _197 * TANGENT.x;
    float _199 = _197 * TANGENT.y;
    float _200 = _197 * TANGENT.z;
    uint _203 = uint(roundEven(NORMAL.w)) * 13u;
    uint _209 = _203 + 1u;
    uint _213 = _203 + 2u;
    float _222 = sqrt(((cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x) + (cbInstanceData._m0[_203].x * cbInstanceData._m0[_203].x)) + (cbInstanceData._m0[_213].x * cbInstanceData._m0[_213].x));
    float _223 = _222 * TEXCOORD.z;
    float _224 = _222 * TEXCOORD.w;
    vec4 _244 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _250 = _244.x * cbMtdParam._m0[11u].x;
    float _251 = _244.y * cbMtdParam._m0[11u].y;
    float _252 = _244.z * cbMtdParam._m0[11u].z;
    vec4 _271 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _223) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _224) + cbTextureTilingScale._m0[5u].w));
    vec4 _325 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _327 = _325.x;
    float _340 = dot(vec4(_327, _325.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _357 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_327 - _340) * cbMtdParam._m0[23u].w) + _340) * cbMtdParam._m0[22u].w))) + 1.0;
    float _870 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _358 = isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0));
    float _365 = (_358 * ((_271.x * cbMtdParam._m0[12u].x) - _250)) + _250;
    float _366 = (_358 * ((_271.y * cbMtdParam._m0[12u].y) - _251)) + _251;
    float _367 = (_358 * ((_271.z * cbMtdParam._m0[12u].z) - _252)) + _252;
    vec4 _385 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _223) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _224) + cbTextureTilingScale._m0[4u].w));
    vec4 _402 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _404 = _402.x;
    float _405 = _402.y;
    float _406 = _402.z;
    float _415 = ((_385.z - _406) * _358) + _406;
    float _418 = ((((_385.x - _404) * _358) + _404) * 2.0) + (-1.0);
    float _420 = ((((_385.y - _405) * _358) + _405) * 2.0) + (-1.0);
    float _421 = dot(vec2(_418, _420), vec2(_418, _420));
    float _881 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _426 = sqrt(1.0 - (isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0))));
    vec4 _442 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _454 = (((_442.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _418;
    float _455 = (((_442.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _420;
    float _458 = fma(_426, _191, fma(_455, _198, _454 * _184));
    float _461 = fma(_426, _192, fma(_455, _199, _454 * _185));
    float _464 = fma(_426, _193, fma(_455, _200, _454 * _186));
    float _468 = inversesqrt(dot(vec3(_458, _461, _464), vec3(_458, _461, _464)));
    vec4 _495 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _223) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _224) + cbTextureTilingScale._m0[11u].w));
    float _497 = _495.x;
    float _498 = 1.0 - _497;
    float _507 = (cbMtdParam._m0[19u].x + dot(vec4(_468 * _458, _468 * _461, _468 * _464, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_497 - _498) * cbMtdParam._m0[24u].z) + _498) * cbMtdParam._m0[21u].z);
    float _892 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _508 = isnan(1.0) ? _892 : (isnan(_892) ? 1.0 : min(_892, 1.0));
    float _515 = (_508 * (cbMtdParam._m0[17u].x - _365)) + _365;
    float _516 = (_508 * (cbMtdParam._m0[17u].y - _366)) + _366;
    float _517 = (_508 * (cbMtdParam._m0[17u].z - _367)) + _367;
    vec4 _529 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _543 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _545 = _543.x;
    float _563 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _223) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _224) + cbTextureTilingScale._m0[9u].w)).x - _545) * _358) + _545;
    float _567 = ((_529.x - _563) * cbMtdParam._m0[19u].z) + _563;
    float _569 = _567 - (_567 * _508);
    float _573 = (cbMtdParam._m0[19u].w * (_442.z - _415)) + _415;
    vec4 _586 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _223) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _224) + cbTextureTilingScale._m0[15u].w));
    float _593 = (_586.x * 2.0) + (-1.0);
    float _594 = (_586.y * 2.0) + (-1.0);
    float _595 = dot(vec2(_593, _594), vec2(_593, _594));
    float _903 = isnan(0.0) ? _595 : (isnan(_595) ? 0.0 : max(_595, 0.0));
    float _603 = ((_586.z - _573) * _508) + _573;
    float _613 = ((sqrt(1.0 - (isnan(1.0) ? _903 : (isnan(_903) ? 1.0 : min(_903, 1.0)))) - _426) * _508) + _426;
    float _616 = (((_593 - _454) * _508) + _454) + (cbMtdParam._m0[21u].x * _454);
    float _617 = (((_594 - _455) * _508) + _455) + (cbMtdParam._m0[21u].x * _455);
    float _619 = cbMtdParam._m0[22u].x + _442.w;
    float _622 = fma(_613, _191, fma(_617, _198, _616 * _184));
    float _625 = fma(_613, _192, fma(_617, _199, _616 * _185));
    float _628 = fma(_613, _193, fma(_617, _200, _616 * _186));
    float _632 = inversesqrt(dot(vec3(_622, _625, _628), vec3(_622, _625, _628)));
    float _914 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _925 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _634 = isnan(1.0) ? _925 : (isnan(_925) ? 1.0 : min(_925, 1.0));
    float _936 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _635 = isnan(1.0) ? _936 : (isnan(_936) ? 1.0 : min(_936, 1.0));
    float _947 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _636 = isnan(1.0) ? _947 : (isnan(_947) ? 1.0 : min(_947, 1.0));
    float _958 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _637 = isnan(1.0) ? _958 : (isnan(_958) ? 1.0 : min(_958, 1.0));
    float _969 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _679 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _689 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _679);
    float _690 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _679);
    float _691 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _679);
    vec4 _696 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _698 = _696.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _758 = sqrt(((_689 * _689) + (_690 * _690)) + (_691 * _691));
        float _764 = (cbMatDynParam._m0[5u].x * _758) + cbMatDynParam._m0[5u].y;
        float _980 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
        float _765 = isnan(1.0) ? _980 : (isnan(_980) ? 1.0 : min(_980, 1.0));
        float _769 = (cbMatDynParam._m0[5u].z * _758) + cbMatDynParam._m0[5u].w;
        float _991 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _991 : (isnan(_991) ? 1.0 : min(_991, 1.0))) - _765)) + _765) < ((_698 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _797;
    vec4 _720;
    float _727;
    float _728;
    float _729;
    float _730;
    float _734;
    vec4 _738;
    float _740;
    float _741;
    bool _752;
    for (;;)
    {
        _720 = cbInstanceData._m0[(_203 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _724 = (cbMtdParam._m0[0u].x * _635) * _720.x;
        float _725 = (cbMtdParam._m0[0u].y * _636) * _720.y;
        float _726 = (cbMtdParam._m0[0u].z * _637) * _720.z;
        float _1002 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
        _727 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
        float _1013 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
        _728 = isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0));
        float _1024 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
        _729 = isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0));
        _730 = _634 * TEXCOORD_5.w;
        _734 = cbInstanceData._m0[_203 + 6u].w;
        float _735 = _698 + (-0.5);
        _738 = cbMtdParam._m0[1u];
        _740 = _738.y * _735;
        _741 = _735 * 0.999000012874603271484375;
        _752 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_752)
        {
            if ((cbInstanceData._m0[_203 + 7u].x + _741) < 0.5)
            {
                _797 = true;
                break;
            }
        }
        if ((_720.w < 1.0) && ((_720.w + _741) < 0.5))
        {
            _797 = true;
            break;
        }
        if ((_740 + 1.0) < _738.x)
        {
            _797 = true;
            break;
        }
        _797 = false;
        break;
    }
    if (_797)
    {
        discard_state = true;
    }
    bool _823 = cbMtdParam._m0[1u].z != 0.0;
    float _824 = _823 ? _734 : 0.0;
    SV_Target.x = ((_622 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.y = ((_625 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.z = ((_628 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.w = _824;
    SV_Target_1.x = isnan(1.0) ? _969 : (isnan(_969) ? 1.0 : min(_969, 1.0));
    SV_Target_1.y = isnan(1.0) ? _914 : (isnan(_914) ? 1.0 : min(_914, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _823 ? _734 : _730;
    SV_Target_2.x = _727;
    SV_Target_2.y = _728;
    SV_Target_2.z = _729;
    SV_Target_2.w = _823 ? _734 : (float(floatBitsToUint(cbInstanceData._m0[_203 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _824;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _824;
    discard_exit();
}


