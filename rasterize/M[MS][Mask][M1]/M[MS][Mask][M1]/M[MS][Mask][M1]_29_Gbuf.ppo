#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _190 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _191 = _190 * _182;
    float _192 = _190 * _183;
    float _193 = _190 * _184;
    float _197 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _198 = _197 * NORMAL.x;
    float _199 = _197 * NORMAL.y;
    float _200 = _197 * NORMAL.z;
    float _204 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _205 = _204 * TANGENT.x;
    float _206 = _204 * TANGENT.y;
    float _207 = _204 * TANGENT.z;
    float _216 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _218 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _219 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _956 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _967 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _978 = isnan(0.0) ? _219 : (isnan(_219) ? 0.0 : max(_219, 0.0));
    uint _229 = uint(roundEven(NORMAL.w)) * 13u;
    uint _234 = _229 + 1u;
    uint _238 = _229 + 2u;
    float _247 = sqrt(((cbInstanceData._m0[_234].x * cbInstanceData._m0[_234].x) + (cbInstanceData._m0[_229].x * cbInstanceData._m0[_229].x)) + (cbInstanceData._m0[_238].x * cbInstanceData._m0[_238].x));
    float _248 = _247 * TEXCOORD.z;
    float _249 = _247 * TEXCOORD.w;
    vec4 _262 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _248) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _249) + cbTextureTilingScale._m0[13u].w));
    vec4 _285 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _311 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _316 = _311.x * cbMtdParam._m0[11u].x;
    float _317 = _311.y * cbMtdParam._m0[11u].y;
    float _318 = _311.z * cbMtdParam._m0[11u].z;
    vec4 _337 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _248) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _249) + cbTextureTilingScale._m0[5u].w));
    vec4 _385 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _387 = _385.x;
    float _400 = dot(vec4(_387, _385.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _417 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_387 - _400) * cbMtdParam._m0[23u].w) + _400) * cbMtdParam._m0[22u].w))) + 1.0;
    float _989 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _418 = isnan(1.0) ? _989 : (isnan(_989) ? 1.0 : min(_989, 1.0));
    float _428 = (_285.x * cbMtdParam._m0[9u].x) * ((_418 * ((_337.x * cbMtdParam._m0[12u].x) - _316)) + _316);
    float _429 = (_285.y * cbMtdParam._m0[9u].y) * ((_418 * ((_337.y * cbMtdParam._m0[12u].y) - _317)) + _317);
    float _430 = (_285.z * cbMtdParam._m0[9u].z) * ((_418 * ((_337.z * cbMtdParam._m0[12u].z) - _318)) + _318);
    float _434 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _262.x) * _428;
    float _437 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _262.y) * _429;
    float _440 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _262.z) * _430;
    float _448 = (((_428 - _434) * (isnan(1.0) ? _956 : (isnan(_956) ? 1.0 : min(_956, 1.0)))) + _434) * 4.55000019073486328125;
    float _450 = (((_429 - _437) * (isnan(1.0) ? _967 : (isnan(_967) ? 1.0 : min(_967, 1.0)))) + _437) * 4.55000019073486328125;
    float _452 = (((_430 - _440) * (isnan(1.0) ? _978 : (isnan(_978) ? 1.0 : min(_978, 1.0)))) + _440) * 4.55000019073486328125;
    vec4 _470 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _248) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _249) + cbTextureTilingScale._m0[20u].w));
    vec4 _497 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _248) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _249) + cbTextureTilingScale._m0[4u].w));
    vec4 _514 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _516 = _514.x;
    float _517 = _514.y;
    float _518 = _514.z;
    float _527 = ((_497.z - _518) * _418) + _518;
    float _530 = ((((_497.x - _516) * _418) + _516) * 2.0) + (-1.0);
    float _531 = ((((_497.y - _517) * _418) + _517) * 2.0) + (-1.0);
    float _532 = dot(vec2(_530, _531), vec2(_530, _531));
    float _1000 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _537 = sqrt(1.0 - (isnan(1.0) ? _1000 : (isnan(_1000) ? 1.0 : min(_1000, 1.0))));
    vec4 _557 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _569 = (_530 + ((((_470.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_557.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _570 = (_531 + ((((_470.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_557.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _573 = fma(_537, _198, fma(_570, _205, _569 * _191));
    float _576 = fma(_537, _199, fma(_570, _206, _569 * _192));
    float _579 = fma(_537, _200, fma(_570, _207, _569 * _193));
    float _583 = inversesqrt(dot(vec3(_573, _576, _579), vec3(_573, _576, _579)));
    vec4 _610 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _248) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _249) + cbTextureTilingScale._m0[11u].w));
    float _612 = _610.x;
    float _613 = 1.0 - _612;
    float _622 = (cbMtdParam._m0[19u].x + dot(vec4(_583 * _573, _583 * _576, _583 * _579, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_612 - _613) * cbMtdParam._m0[24u].z) + _613) * cbMtdParam._m0[21u].z);
    float _1011 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0));
    float _625 = (-0.0) - cbMtdParam._m0[24u].x;
    float _627 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _628 = isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0));
    float _635 = _623 - ((_623 * TEXCOORD_8.x) * _628);
    float _636 = _623 - ((_623 * TEXCOORD_8.y) * _628);
    float _637 = _623 - ((_623 * TEXCOORD_8.z) * _628);
    float _644 = (_635 * (cbMtdParam._m0[17u].x - _448)) + _448;
    float _645 = (_636 * (cbMtdParam._m0[17u].y - _450)) + _450;
    float _646 = (_637 * (cbMtdParam._m0[17u].z - _452)) + _452;
    vec4 _658 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _248) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _249) + cbTextureTilingScale._m0[19u].w));
    float _660 = _658.x;
    float _661 = 1.0 - _660;
    float _687 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_660 - _661) * cbMtdParam._m0[24u].w) + _661) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1032 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _688 = isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0));
    float _696 = ((((cbMtdParam._m0[10u].x - _644) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _688) + _644;
    float _697 = ((((cbMtdParam._m0[10u].y - _645) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _688) + _645;
    float _698 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _646)) * _688) + _646;
    vec4 _724 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _726 = _724.x;
    float _743 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _248) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _249) + cbTextureTilingScale._m0[9u].w)).x - _726) * _418) + _726;
    float _747 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _743) * cbMtdParam._m0[19u].z) + _743;
    float _749 = _747 - (_747 * _635);
    float _751 = _749 - (_749 * _688);
    float _756 = (((_470.z - _527) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _527;
    float _760 = ((_557.z - _756) * cbMtdParam._m0[19u].w) + _756;
    vec4 _774 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _248) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _249) + cbTextureTilingScale._m0[15u].w));
    float _781 = (_774.x * 2.0) + (-1.0);
    float _782 = (_774.y * 2.0) + (-1.0);
    float _783 = dot(vec2(_781, _782), vec2(_781, _782));
    float _1043 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _791 = ((_774.z - _760) * _635) + _760;
    float _794 = ((cbMtdParam._m0[23u].x - _791) * _688) + _791;
    vec4 _815 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _248) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _249) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _821 = (_815.x * 2.0) + (-1.0);
    float _822 = (_815.y * 2.0) + (-1.0);
    float _823 = dot(vec2(_821, _822), vec2(_821, _822));
    float _1054 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _838 = ((sqrt(1.0 - (isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0)))) - _537) * _637) + _537;
    float _841 = (((_781 - _569) * _635) + _569) + (cbMtdParam._m0[21u].x * _569);
    float _842 = (((_782 - _570) * _636) + _570) + (cbMtdParam._m0[21u].x * _570);
    float _853 = (((_821 - _841) + (_841 * cbMtdParam._m0[22u].z)) * _688) + _841;
    float _854 = (((_822 - _842) + (_842 * cbMtdParam._m0[22u].z)) * _688) + _842;
    float _855 = (_688 * (sqrt(1.0 - (isnan(1.0) ? _1054 : (isnan(_1054) ? 1.0 : min(_1054, 1.0)))) - _838)) + _838;
    float _857 = cbMtdParam._m0[22u].x + _557.w;
    float _860 = fma(_855, _198, fma(_854, _205, _853 * _191));
    float _863 = fma(_855, _199, fma(_854, _206, _853 * _192));
    float _866 = fma(_855, _200, fma(_854, _207, _853 * _193));
    float _870 = inversesqrt(dot(vec3(_860, _863, _866), vec3(_860, _863, _866)));
    float _1065 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _1076 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _1087 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _1098 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _1109 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _1120 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    uint _890 = (_229 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _896 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _1087 : (isnan(_1087) ? 1.0 : min(_1087, 1.0)))) * cbInstanceData._m0[_890].x;
    float _897 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0)))) * cbInstanceData._m0[_890].y;
    float _898 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _1109 : (isnan(_1109) ? 1.0 : min(_1109, 1.0)))) * cbInstanceData._m0[_890].z;
    float _1131 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _1142 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _1153 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    uint _903 = _229 + 6u;
    bool _930 = cbMtdParam._m0[1u].z != 0.0;
    float _931 = _930 ? cbInstanceData._m0[_903].w : 0.0;
    SV_Target.x = ((_860 * 0.5) * _870) + 0.500488758087158203125;
    SV_Target.y = ((_863 * 0.5) * _870) + 0.500488758087158203125;
    SV_Target.z = ((_866 * 0.5) * _870) + 0.500488758087158203125;
    SV_Target.w = _931;
    SV_Target_1.x = isnan(1.0) ? _1120 : (isnan(_1120) ? 1.0 : min(_1120, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1065 : (isnan(_1065) ? 1.0 : min(_1065, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _930 ? cbInstanceData._m0[_903].w : ((isnan(1.0) ? _1076 : (isnan(_1076) ? 1.0 : min(_1076, 1.0))) * TEXCOORD_5.w);
    SV_Target_2.x = isnan(1.0) ? _1131 : (isnan(_1131) ? 1.0 : min(_1131, 1.0));
    SV_Target_2.y = isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0));
    SV_Target_2.z = isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0));
    SV_Target_2.w = _930 ? cbInstanceData._m0[_903].w : (float(floatBitsToUint(cbInstanceData._m0[_229 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _931;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _931;
}


