#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1459;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _275 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3784 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _3795 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _3806 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _290 = _285 + 1u;
    uint _294 = _285 + 2u;
    float _303 = sqrt(((cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x) + (cbInstanceData._m0[_285].x * cbInstanceData._m0[_285].x)) + (cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x));
    float _304 = _303 * TEXCOORD.z;
    float _305 = _303 * TEXCOORD.w;
    vec4 _318 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _304) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _305) + cbTextureTilingScale._m0[13u].w));
    vec4 _341 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _367 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _372 = _367.x * cbMtdParam._m0[11u].x;
    float _373 = _367.y * cbMtdParam._m0[11u].y;
    float _374 = _367.z * cbMtdParam._m0[11u].z;
    vec4 _393 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _304) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _305) + cbTextureTilingScale._m0[5u].w));
    vec4 _441 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _443 = _441.x;
    float _455 = dot(vec4(_443, _441.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _472 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_443 - _455) * cbMtdParam._m0[23u].w) + _455) * cbMtdParam._m0[22u].w))) + 1.0;
    float _3817 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _473 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    float _483 = (_341.x * cbMtdParam._m0[9u].x) * ((_473 * ((_393.x * cbMtdParam._m0[12u].x) - _372)) + _372);
    float _484 = (_341.y * cbMtdParam._m0[9u].y) * ((_473 * ((_393.y * cbMtdParam._m0[12u].y) - _373)) + _373);
    float _485 = (_341.z * cbMtdParam._m0[9u].z) * ((_473 * ((_393.z * cbMtdParam._m0[12u].z) - _374)) + _374);
    float _489 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _318.x) * _483;
    float _492 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _318.y) * _484;
    float _495 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _318.z) * _485;
    float _503 = (((_483 - _489) * (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0)))) + _489) * 4.55000019073486328125;
    float _505 = (((_484 - _492) * (isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0)))) + _492) * 4.55000019073486328125;
    float _507 = (((_485 - _495) * (isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0)))) + _495) * 4.55000019073486328125;
    vec4 _526 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _304) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _305) + cbTextureTilingScale._m0[14u].w));
    vec4 _546 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _304) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _305) + cbTextureTilingScale._m0[20u].w));
    vec4 _571 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _304) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _305) + cbTextureTilingScale._m0[4u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _590 = _588.x;
    float _591 = _588.y;
    float _592 = _588.z;
    float _601 = ((_571.z - _592) * _473) + _592;
    float _604 = ((((_571.x - _590) * _473) + _590) * 2.0) + (-1.0);
    float _605 = ((((_571.y - _591) * _473) + _591) * 2.0) + (-1.0);
    float _606 = dot(vec2(_604, _605), vec2(_604, _605));
    float _3828 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _611 = sqrt(1.0 - (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))));
    vec4 _627 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _652 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _304) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _305) + cbTextureTilingScale._m0[11u].w));
    float _654 = _652.x;
    float _655 = 1.0 - _654;
    float _664 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _667 = ((isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : min(_664, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _676 = (_667 - ((((((_654 - _655) * cbMtdParam._m0[24u].z) + _655) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _667))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3849 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _677 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _684 = (_677 * ((_526.x * cbMtdParam._m0[18u].x) - _503)) + _503;
    float _685 = (_677 * ((_526.y * cbMtdParam._m0[18u].y) - _505)) + _505;
    float _686 = (_677 * ((_526.z * cbMtdParam._m0[18u].z) - _507)) + _507;
    vec4 _698 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _304) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _305) + cbTextureTilingScale._m0[19u].w));
    float _700 = _698.x;
    float _701 = 1.0 - _700;
    float _726 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_700 - _701) * cbMtdParam._m0[24u].w) + _701) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _3860 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _727 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _735 = ((((cbMtdParam._m0[10u].x - _684) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _727) + _684;
    float _736 = ((((cbMtdParam._m0[10u].y - _685) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _727) + _685;
    float _737 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _686)) * _727) + _686;
    vec4 _749 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _763 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _765 = _763.x;
    float _782 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _304) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _305) + cbTextureTilingScale._m0[9u].w)).x - _765) * _473) + _765;
    float _786 = ((_749.x - _782) * cbMtdParam._m0[19u].z) + _782;
    float _788 = _786 - (_786 * _677);
    float _790 = _788 - (_788 * _727);
    float _795 = (((_546.z - _601) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _601;
    float _799 = ((_627.z - _795) * cbMtdParam._m0[19u].w) + _795;
    vec4 _813 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _304) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _305) + cbTextureTilingScale._m0[15u].w));
    float _820 = (_813.x * 2.0) + (-1.0);
    float _821 = (_813.y * 2.0) + (-1.0);
    float _822 = dot(vec2(_820, _821), vec2(_820, _821));
    float _3871 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _830 = (_677 * (_813.z - _799)) + _799;
    float _833 = ((cbMtdParam._m0[23u].x - _830) * _727) + _830;
    vec4 _854 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _304) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _305) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _860 = (_854.x * 2.0) + (-1.0);
    float _861 = (_854.y * 2.0) + (-1.0);
    float _862 = dot(vec2(_860, _861), vec2(_860, _861));
    float _3882 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _876 = (_604 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_546.x * 2.0) + (-1.0)))) + (((_627.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _877 = (_605 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_546.y * 2.0) + (-1.0)))) + (((_627.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _889 = (((_820 - _876) + (cbMtdParam._m0[21u].x * _876)) * _677) + _876;
    float _890 = (((_821 - _877) + (cbMtdParam._m0[21u].x * _877)) * _677) + _877;
    float _891 = (_677 * (sqrt(1.0 - (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0)))) - _611)) + _611;
    float _902 = (((_860 - _889) + (_889 * cbMtdParam._m0[22u].z)) * _727) + _889;
    float _903 = (((_861 - _890) + (_890 * cbMtdParam._m0[22u].z)) * _727) + _890;
    float _904 = ((sqrt(1.0 - (isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0)))) - _891) * _727) + _891;
    float _906 = cbMtdParam._m0[22u].x + _627.w;
    float _909 = fma(_904, _253 * NORMAL.x, fma(_903, _260 * TANGENT.x, (_246 * _238) * _902));
    float _912 = fma(_904, _253 * NORMAL.y, fma(_903, _260 * TANGENT.y, (_246 * _239) * _902));
    float _915 = fma(_904, _253 * NORMAL.z, fma(_903, _260 * TANGENT.z, (_246 * _240) * _902));
    float _919 = inversesqrt(dot(vec3(_909, _912, _915), vec3(_909, _912, _915)));
    float _920 = _919 * _909;
    float _921 = _919 * _912;
    float _922 = _919 * _915;
    float _3893 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _923 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
    float _3904 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _3915 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _3926 = isnan(0.0) ? _736 : (isnan(_736) ? 0.0 : max(_736, 0.0));
    float _3937 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _3948 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _928 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
    float _942 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _982 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _992 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _982);
    float _993 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _982);
    float _994 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _982);
    float _998 = inversesqrt(dot(vec3(_992, _993, _994), vec3(_992, _993, _994)));
    float _999 = _992 * _998;
    float _1000 = _993 * _998;
    float _1001 = _994 * _998;
    float _1007 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1008 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1026 = fma(_922, cbSceneParam._m0[5u].z, fma(_921, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _920));
    float _1029 = fma(_922, cbSceneParam._m0[6u].z, fma(_921, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _920));
    float _1032 = fma(_922, cbSceneParam._m0[7u].z, fma(_921, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _920));
    uint _1046 = (_285 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1052 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0)))) * cbInstanceData._m0[_1046].x;
    float _1053 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0)))) * cbInstanceData._m0[_1046].y;
    float _1054 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) * cbInstanceData._m0[_1046].z;
    float _3959 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
    float _1055 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
    float _3970 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    float _1056 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _3981 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
    float _1057 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _1058 = 1.0 - _928;
    float _1059 = _1055 * _1058;
    float _1060 = _1056 * _1058;
    float _1061 = _1057 * _1058;
    float _1066 = (_1055 + (-0.039999999105930328369140625)) * _928;
    float _1067 = (_1056 + (-0.039999999105930328369140625)) * _928;
    float _1068 = (_1057 + (-0.039999999105930328369140625)) * _928;
    float _1069 = _1066 + 0.039999999105930328369140625;
    float _1071 = _1067 + 0.039999999105930328369140625;
    float _1072 = _1068 + 0.039999999105930328369140625;
    vec4 _1081 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1007, cbSceneParam._m0[86u].y * _1008));
    float _1085 = ((isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * TEXCOORD_5.w) * _1081.x;
    float _1086 = dot(vec3(_920, _921, _922), vec3(_999, _1000, _1001));
    float _1089 = _1086 * 2.0;
    float _1093 = (_1089 * _920) - _999;
    float _1094 = (_1089 * _921) - _1000;
    float _1095 = (_1089 * _922) - _1001;
    float _1099 = abs(dot(vec3(_999, _1000, _1001), vec3(_920, _921, _922)));
    float _3992 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1101 = sqrt(_923);
    float _1114 = exp2((_1101 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1101 * 3.0));
    float _1120 = (1.0 - _1114) * ((_1101 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1121 = _1114 * _1101;
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1157 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1458;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1183 = fma(_1157, cbModelParam._m0[26u].z, fma(_1153, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1149));
        float _1187 = fma(_1157, cbModelParam._m0[27u].z, fma(_1153, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1149));
        float _1191 = fma(_1157, cbModelParam._m0[28u].z, fma(_1153, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1149));
        float _1216 = _1149 + _920;
        float _1217 = _1153 + _921;
        float _1218 = _1157 + _922;
        float _1228 = fma(_1218, cbModelParam._m0[26u].z, fma(_1217, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1216)) - _1183;
        float _1229 = fma(_1218, cbModelParam._m0[27u].z, fma(_1217, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1216)) - _1187;
        float _1230 = fma(_1218, cbModelParam._m0[28u].z, fma(_1217, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1216)) - _1191;
        float _1234 = inversesqrt(dot(vec3(_1228, _1229, _1230), vec3(_1228, _1229, _1230)));
        float _1247 = ((_1234 * _1228) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1183 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1248 = ((_1234 * _1229) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1187 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1249 = ((_1234 * _1230) / cbModelParam._m0[34u].z) + ((((((_1191 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1252 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        float _1286 = exp2((_1252.w + (-0.5)) * 20.0) * 2.0;
        float _1287 = _1286 * (_1252.x + (-0.5));
        float _1288 = _1286 * (_1252.y + (-0.5));
        float _1289 = _1286 * (_1252.z + (-0.5));
        float _1296 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1259.x + (-0.5));
        float _1298 = _1296 * (_1259.y + (-0.5));
        float _1299 = _1296 * (_1259.z + (-0.5));
        float _1306 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1307 = _1306 * (_1266.x + (-0.5));
        float _1308 = _1306 * (_1266.y + (-0.5));
        float _1309 = _1306 * (_1266.z + (-0.5));
        float _1316 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1273.x + (-0.5));
        float _1318 = _1316 * (_1273.y + (-0.5));
        float _1319 = _1316 * (_1273.z + (-0.5));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1322 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
        float _1323 = _1287 * 0.5;
        float _1324 = _1297 * 0.5;
        float _1325 = _1307 * 0.5;
        float _1326 = dot(vec3(_1323, _1324, _1325), vec3(_1323, _1324, _1325));
        float _1331 = (_1326 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1326);
        float _1340 = (dot(vec3(_920, _921, _922), vec3(_1331 * _1323, _1331 * _1324, _1331 * _1325)) + 1.0) * 0.5;
        float _4018 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1350 = sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _4029 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1351 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
        float _1352 = _1351 * 2.0;
        float _1356 = (1.0 - _1351) / (_1351 + 1.0);
        float _4040 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
        float _1366 = ((((1.0 - _1357) * (_1352 + 2.0)) * exp2(log2(isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0))) * (_1352 + 1.0))) + _1357) * _1320;
        float _1367 = _1288 * 0.5;
        float _1368 = _1298 * 0.5;
        float _1369 = _1308 * 0.5;
        float _1370 = dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369));
        float _1375 = (_1370 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1370);
        float _1383 = (dot(vec3(_920, _921, _922), vec3(_1375 * _1367, _1375 * _1368, _1375 * _1369)) + 1.0) * 0.5;
        float _4051 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1392 = sqrt(((_1368 * _1368) + (_1367 * _1367)) + (_1369 * _1369)) / (_1321 + 9.9999997473787516355514526367188e-06);
        float _4062 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
        float _1394 = _1393 * 2.0;
        float _1398 = (1.0 - _1393) / (_1393 + 1.0);
        float _4073 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1408 = ((((1.0 - _1399) * (_1394 + 2.0)) * exp2(log2(isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))) * (_1394 + 1.0))) + _1399) * _1321;
        float _1409 = _1289 * 0.5;
        float _1410 = _1299 * 0.5;
        float _1411 = _1309 * 0.5;
        float _1412 = dot(vec3(_1409, _1410, _1411), vec3(_1409, _1410, _1411));
        float _1417 = (_1412 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1412);
        float _1425 = (dot(vec3(_920, _921, _922), vec3(_1417 * _1409, _1417 * _1410, _1417 * _1411)) + 1.0) * 0.5;
        float _4084 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1434 = sqrt(((_1410 * _1410) + (_1409 * _1409)) + (_1411 * _1411)) / (_1322 + 9.9999997473787516355514526367188e-06);
        float _4095 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
        float _1436 = _1435 * 2.0;
        float _1440 = (1.0 - _1435) / (_1435 + 1.0);
        float _4106 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1450 = ((((1.0 - _1441) * (_1436 + 2.0)) * exp2(log2(isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * (_1436 + 1.0))) + _1441) * _1322;
        _1458 = _1289;
        _1460 = _1288;
        _1461 = _1287;
        _1462 = _1299;
        _1463 = _1298;
        _1464 = _1297;
        _1465 = _1309;
        _1466 = _1308;
        _1467 = _1307;
        _1468 = _1322;
        _1469 = _1321;
        _1470 = _1320;
        _1471 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0)));
        _1472 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0)));
        _1473 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)));
    }
    else
    {
        _1458 = _1459;
        _1460 = _1459;
        _1461 = _1459;
        _1462 = _1459;
        _1463 = _1459;
        _1464 = _1459;
        _1465 = _1459;
        _1466 = _1459;
        _1467 = _1459;
        _1468 = _1459;
        _1469 = _1459;
        _1470 = _1459;
        _1471 = 0.0;
        _1472 = 0.0;
        _1473 = 0.0;
    }
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1498 = fma(_1157, cbModelParam._m0[30u].z, fma(_1153, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1149));
        float _1502 = fma(_1157, cbModelParam._m0[31u].z, fma(_1153, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1149));
        float _1506 = fma(_1157, cbModelParam._m0[32u].z, fma(_1153, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1149));
        float _1529 = _1149 + _920;
        float _1530 = _1153 + _921;
        float _1531 = _1157 + _922;
        float _1541 = fma(_1531, cbModelParam._m0[30u].z, fma(_1530, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1529)) - _1498;
        float _1542 = fma(_1531, cbModelParam._m0[31u].z, fma(_1530, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1529)) - _1502;
        float _1543 = fma(_1531, cbModelParam._m0[32u].z, fma(_1530, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1529)) - _1506;
        float _1547 = inversesqrt(dot(vec3(_1541, _1542, _1543), vec3(_1541, _1542, _1543)));
        float _1560 = ((_1547 * _1541) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1498 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1561 = ((_1547 * _1542) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1502 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1562 = ((_1547 * _1543) / cbModelParam._m0[35u].z) + ((((((_1506 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1564 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1571 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1578 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1585 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        float _1597 = exp2((_1564.w + (-0.5)) * 20.0) * 2.0;
        float _1598 = _1597 * (_1564.x + (-0.5));
        float _1599 = _1597 * (_1564.y + (-0.5));
        float _1600 = _1597 * (_1564.z + (-0.5));
        float _1607 = exp2((_1571.w + (-0.5)) * 20.0) * 2.0;
        float _1608 = _1607 * (_1571.x + (-0.5));
        float _1609 = _1607 * (_1571.y + (-0.5));
        float _1610 = _1607 * (_1571.z + (-0.5));
        float _1617 = exp2((_1578.w + (-0.5)) * 20.0) * 2.0;
        float _1618 = _1617 * (_1578.x + (-0.5));
        float _1619 = _1617 * (_1578.y + (-0.5));
        float _1620 = _1617 * (_1578.z + (-0.5));
        float _1627 = exp2((_1585.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1585.x + (-0.5));
        float _1629 = _1627 * (_1585.y + (-0.5));
        float _1630 = _1627 * (_1585.z + (-0.5));
        float _1631 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1632 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1634 = _1598 * 0.5;
        float _1635 = _1608 * 0.5;
        float _1636 = _1618 * 0.5;
        float _1637 = dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636));
        float _1642 = (_1637 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1637);
        float _1650 = (dot(vec3(_920, _921, _922), vec3(_1642 * _1634, _1642 * _1635, _1642 * _1636)) + 1.0) * 0.5;
        float _4147 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1659 = sqrt(((_1635 * _1635) + (_1634 * _1634)) + (_1636 * _1636)) / (_1631 + 9.9999997473787516355514526367188e-06);
        float _4158 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1661 = _1660 * 2.0;
        float _1665 = (1.0 - _1660) / (_1660 + 1.0);
        float _4169 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1666 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1675 = ((((1.0 - _1666) * (_1661 + 2.0)) * exp2(log2(isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (_1661 + 1.0))) + _1666) * _1631;
        float _1676 = _1599 * 0.5;
        float _1677 = _1609 * 0.5;
        float _1678 = _1619 * 0.5;
        float _1679 = dot(vec3(_1676, _1677, _1678), vec3(_1676, _1677, _1678));
        float _1684 = (_1679 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1679);
        float _1692 = (dot(vec3(_920, _921, _922), vec3(_1684 * _1676, _1684 * _1677, _1684 * _1678)) + 1.0) * 0.5;
        float _4180 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
        float _1701 = sqrt(((_1677 * _1677) + (_1676 * _1676)) + (_1678 * _1678)) / (_1632 + 9.9999997473787516355514526367188e-06);
        float _4191 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1702 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1703 = _1702 * 2.0;
        float _1707 = (1.0 - _1702) / (_1702 + 1.0);
        float _4202 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1708 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1717 = ((((1.0 - _1708) * (_1703 + 2.0)) * exp2(log2(isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * (_1703 + 1.0))) + _1708) * _1632;
        float _1718 = _1600 * 0.5;
        float _1719 = _1610 * 0.5;
        float _1720 = _1620 * 0.5;
        float _1721 = dot(vec3(_1718, _1719, _1720), vec3(_1718, _1719, _1720));
        float _1726 = (_1721 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1721);
        float _1734 = (dot(vec3(_920, _921, _922), vec3(_1726 * _1718, _1726 * _1719, _1726 * _1720)) + 1.0) * 0.5;
        float _4213 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
        float _1743 = sqrt(((_1719 * _1719) + (_1718 * _1718)) + (_1720 * _1720)) / (_1633 + 9.9999997473787516355514526367188e-06);
        float _4224 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
        float _1745 = _1744 * 2.0;
        float _1749 = (1.0 - _1744) / (_1744 + 1.0);
        float _4235 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1750 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1759 = ((((1.0 - _1750) * (_1745 + 2.0)) * exp2(log2(isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * (_1745 + 1.0))) + _1750) * _1633;
        _1767 = _1600;
        _1768 = _1599;
        _1769 = _1598;
        _1770 = _1610;
        _1771 = _1609;
        _1772 = _1608;
        _1773 = _1620;
        _1774 = _1619;
        _1775 = _1618;
        _1776 = _1633;
        _1777 = _1632;
        _1778 = _1631;
        _1779 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0)));
        _1780 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0)));
        _1781 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)));
    }
    else
    {
        _1767 = _1459;
        _1768 = _1459;
        _1769 = _1459;
        _1770 = _1459;
        _1771 = _1459;
        _1772 = _1459;
        _1773 = _1459;
        _1774 = _1459;
        _1775 = _1459;
        _1776 = _1459;
        _1777 = _1459;
        _1778 = _1459;
        _1779 = 0.0;
        _1780 = 0.0;
        _1781 = 0.0;
    }
    float _1791 = (cbModelParam._m0[1u].x * (_1779 - _1471)) + _1471;
    float _1792 = (cbModelParam._m0[1u].x * (_1780 - _1472)) + _1472;
    float _1793 = (cbModelParam._m0[1u].x * (_1781 - _1473)) + _1473;
    float _1814 = fma(_1793, cbSceneParam._m0[89u].z, fma(_1792, cbSceneParam._m0[89u].y, _1791 * cbSceneParam._m0[89u].x));
    float _1817 = fma(_1793, cbSceneParam._m0[90u].z, fma(_1792, cbSceneParam._m0[90u].y, _1791 * cbSceneParam._m0[90u].x));
    float _1820 = fma(_1793, cbSceneParam._m0[91u].z, fma(_1792, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1791));
    float _1835 = _1093 * 0.5;
    float _1836 = _1094 * 0.5;
    float _1837 = _1095 * 0.5;
    float _1838 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1769, _1772, _1775, _1778));
    float _1841 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1768, _1771, _1774, _1777));
    float _1844 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1767, _1770, _1773, _1776));
    float _1878;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1851 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1458, _1462, _1465, _1468));
        float _1855 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1460, _1463, _1466, _1469));
        float _1859 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1461, _1464, _1467, _1470));
        float _1866 = dot(vec4(cbModelParam._m0[39u]), vec4(_1835, _1836, _1837, 1.0));
        _1878 = dot(vec3(isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1866) ? 0.0 : (isnan(0.0) ? _1866 : max(0.0, _1866))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1878 = 1.0;
    }
    float _1889;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1880 = dot(vec4(cbModelParam._m0[40u]), vec4(_1835, _1836, _1837, 1.0));
        _1889 = dot(vec3(isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)), isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0)), isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1880) ? 0.0 : (isnan(0.0) ? _1880 : max(0.0, _1880))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1889 = 1.0;
    }
    float _1893 = (_1889 * cbModelParam._m0[1u].x) + (_1878 * (1.0 - cbModelParam._m0[1u].x));
    float _1903 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _923);
    float _1904 = isnan(_1903) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1903 : min(cbModelParam._m0[25u].z, _1903));
    float _1984;
    float _1986;
    float _1988;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1951 = fma(_1157, cbModelParam._m0[13u].z, fma(_1153, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1149)) + cbModelParam._m0[13u].w;
        float _1955 = fma(_1157, cbModelParam._m0[14u].z, fma(_1153, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1149)) + cbModelParam._m0[14u].w;
        float _1959 = fma(_1157, cbModelParam._m0[15u].z, fma(_1153, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1149)) + cbModelParam._m0[15u].w;
        float _1962 = fma(_1095, cbModelParam._m0[13u].z, fma(_1094, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1093));
        float _1965 = fma(_1095, cbModelParam._m0[14u].z, fma(_1094, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1093));
        float _1968 = fma(_1095, cbModelParam._m0[15u].z, fma(_1094, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1093));
        float _1996;
        if (_1962 > 0.0)
        {
            _1996 = abs((1.0 - _1951) / _1962);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1951 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1996 = frontier_phi_14_12_ladder;
        }
        float _2198;
        if (_1965 > 0.0)
        {
            _2198 = abs((1.0 - _1955) / _1965);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1955 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2198 = frontier_phi_23_19_ladder;
        }
        float _2452;
        if (_1968 > 0.0)
        {
            _2452 = abs((1.0 - _1959) / _1968);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1959 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2452 = frontier_phi_35_30_ladder;
        }
        float _2454 = isnan(_2198) ? _1996 : (isnan(_1996) ? _2198 : min(_1996, _2198));
        float _2455 = isnan(_2452) ? _2454 : (isnan(_2454) ? _2452 : min(_2454, _2452));
        float _2459 = (_2455 * _1962) + _1951;
        float _2460 = (_2455 * _1965) + _1955;
        float _2461 = (_2455 * _1968) + _1959;
        float _2462 = _2455 * 9.9999997473787516355514526367188e-05;
        float _2464 = (-1.0) - _2462;
        float _2466 = _2462 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2461 > _2466) || ((_2461 < _2464) || ((_2460 > _2466) || ((_2460 < _2464) || ((_2459 < _2464) || (_2459 > _2466))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2589 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2461, cbModelParam._m0[9u].z, fma(_2460, cbModelParam._m0[9u].y, _2459 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2461, cbModelParam._m0[10u].z, fma(_2460, cbModelParam._m0[10u].y, _2459 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2461, cbModelParam._m0[11u].z, fma(_2460, cbModelParam._m0[11u].y, _2459 * cbModelParam._m0[11u].x))), _1904);
            frontier_phi_13_35_ladder = _2589.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2589.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2589.x * cbModelParam._m0[1u].y;
        }
        _1984 = frontier_phi_13_35_ladder_2;
        _1986 = frontier_phi_13_35_ladder_1;
        _1988 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1972 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1093, _1094, _1095), _1904);
        _1984 = _1972.x * cbModelParam._m0[1u].y;
        _1986 = _1972.y * cbModelParam._m0[1u].y;
        _1988 = _1972.z * cbModelParam._m0[1u].y;
    }
    float _1992 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _923);
    float _1993 = isnan(_1992) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1992 : min(cbModelParam._m0[25u].w, _1992));
    float _2082;
    float _2084;
    float _2086;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2046 = fma(_1157, cbModelParam._m0[21u].z, fma(_1153, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1149)) + cbModelParam._m0[21u].w;
        float _2050 = fma(_1157, cbModelParam._m0[22u].z, fma(_1153, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1149)) + cbModelParam._m0[22u].w;
        float _2054 = fma(_1157, cbModelParam._m0[23u].z, fma(_1153, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1149)) + cbModelParam._m0[23u].w;
        float _2057 = fma(_1095, cbModelParam._m0[21u].z, fma(_1094, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1093));
        float _2060 = fma(_1095, cbModelParam._m0[22u].z, fma(_1094, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1093));
        float _2063 = fma(_1095, cbModelParam._m0[23u].z, fma(_1094, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1093));
        float _2203;
        if (_2057 > 0.0)
        {
            _2203 = abs((1.0 - _2046) / _2057);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2057 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2046 + 1.0) / _2057);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2203 = frontier_phi_25_21_ladder;
        }
        float _2479;
        if (_2060 > 0.0)
        {
            _2479 = abs((1.0 - _2050) / _2060);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2060 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2050 + 1.0) / _2060);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2479 = frontier_phi_37_32_ladder;
        }
        float _2692;
        if (_2063 > 0.0)
        {
            _2692 = abs((1.0 - _2054) / _2063);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2063 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2054 + 1.0) / _2063);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2692 = frontier_phi_46_43_ladder;
        }
        float _2694 = isnan(_2479) ? _2203 : (isnan(_2203) ? _2479 : min(_2203, _2479));
        float _2695 = isnan(_2692) ? _2694 : (isnan(_2694) ? _2692 : min(_2694, _2692));
        float _2699 = (_2695 * _2057) + _2046;
        float _2700 = (_2695 * _2060) + _2050;
        float _2701 = (_2695 * _2063) + _2054;
        float _2702 = _2695 * 9.9999997473787516355514526367188e-05;
        float _2703 = (-1.0) - _2702;
        float _2705 = _2702 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2701 > _2705) || ((_2701 < _2703) || ((_2700 > _2705) || ((_2700 < _2703) || ((_2699 < _2703) || (_2699 > _2705))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2900 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2701, cbModelParam._m0[17u].z, fma(_2700, cbModelParam._m0[17u].y, _2699 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2701, cbModelParam._m0[18u].z, fma(_2700, cbModelParam._m0[18u].y, _2699 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2701, cbModelParam._m0[19u].z, fma(_2700, cbModelParam._m0[19u].y, _2699 * cbModelParam._m0[19u].x))), _1993);
            frontier_phi_22_46_ladder = _2900.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2900.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2900.x * cbModelParam._m0[1u].z;
        }
        _2082 = frontier_phi_22_46_ladder_2;
        _2084 = frontier_phi_22_46_ladder_1;
        _2086 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2066 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1093, _1094, _1095), _1993);
        _2082 = _2066.x * cbModelParam._m0[1u].z;
        _2084 = _2066.y * cbModelParam._m0[1u].z;
        _2086 = _2066.z * cbModelParam._m0[1u].z;
    }
    float _2099 = (((_1120 * _1069) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2082 - _1984)) + _1984);
    float _2101 = (((_1120 * _1071) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2084 - _1986)) + _1986);
    float _2103 = (((_1120 * _1072) + _1121) * _1085) * ((cbModelParam._m0[1u].w * (_2086 - _1988)) + _1988);
    float _2106 = fma(_2103, cbSceneParam._m0[89u].z, fma(_2101, cbSceneParam._m0[89u].y, _2099 * cbSceneParam._m0[89u].x));
    float _2109 = fma(_2103, cbSceneParam._m0[90u].z, fma(_2101, cbSceneParam._m0[90u].y, _2099 * cbSceneParam._m0[90u].x));
    float _2112 = fma(_2103, cbSceneParam._m0[91u].z, fma(_2101, cbSceneParam._m0[91u].y, _2099 * cbSceneParam._m0[91u].x));
    uvec4 _2122 = floatBitsToUint(cbInstanceData._m0[_285 + 5u]);
    uint _2124 = _2122.x * 14u;
    uint _2125 = _2124 + 13u;
    float _2132 = _1085 + (-1.0);
    float _2137 = (cbLight._m0[_2125].x * _2132) + 1.0;
    float _2138 = (cbLight._m0[_2125].y * _2132) + 1.0;
    float _2139 = (cbLight._m0[_2125].z * _2132) + 1.0;
    float _2140 = (cbLight._m0[_2125].w * _2132) + 1.0;
    uint _2141 = _2124 + 5u;
    float _2147 = isnan(1.0) ? _2138 : (isnan(_2138) ? 1.0 : min(_2138, 1.0));
    uint _2151 = _2124 + 4u;
    float _2157 = isnan(1.0) ? _2137 : (isnan(_2137) ? 1.0 : min(_2137, 1.0));
    uint _2161 = _2124 | 1u;
    float _2172 = dot(vec3(cbLight._m0[_2124].xyz), vec3(_920, _921, _922));
    float _2175 = dot(vec3(cbLight._m0[_2161].xyz), vec3(_920, _921, _922));
    float _4371 = isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0));
    float _4382 = isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0));
    float _2180 = (isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * 0.3183098733425140380859375;
    float _2182 = (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * 0.3183098733425140380859375;
    float _2189 = ((cbLight._m0[_2141].x * _2147) * _2182) + ((cbLight._m0[_2151].x * _2157) * _2180);
    float _2190 = ((_2147 * cbLight._m0[_2141].y) * _2182) + ((_2157 * cbLight._m0[_2151].y) * _2180);
    float _2191 = ((_2147 * cbLight._m0[_2141].z) * _2182) + ((_2157 * cbLight._m0[_2151].z) * _2180);
    uvec4 _2195 = floatBitsToUint(cbLight._m0[_2124 + 12u]);
    bool _2197 = _2195.x == 0u;
    float _2208;
    float _2210;
    float _2212;
    if (_2197)
    {
        _2208 = _2189;
        _2210 = _2190;
        _2212 = _2191;
    }
    else
    {
        uint _2216 = _2124 + 6u;
        float _2232 = (dot(vec3(cbLight._m0[_2124 + 2u].xyz), vec3(_920, _921, _922)) * 0.5) + 0.5;
        float _2233 = _2232 * _2232;
        float _4393 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
        float _2234 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _2235 = isnan(1.0) ? _2139 : (isnan(_2139) ? 1.0 : min(_2139, 1.0));
        _2208 = (((cbLight._m0[_2216].x * 0.3183098733425140380859375) * _2234) * _2235) + _2189;
        _2210 = (((cbLight._m0[_2216].y * 0.3183098733425140380859375) * _2234) * _2235) + _2190;
        _2212 = (((cbLight._m0[_2216].z * 0.3183098733425140380859375) * _2234) * _2235) + _2191;
    }
    bool _2215 = _2195.y == 0u;
    float _2253;
    float _2255;
    float _2257;
    if (_2215)
    {
        _2253 = _2208;
        _2255 = _2210;
        _2257 = _2212;
    }
    else
    {
        uint _2423 = _2124 + 7u;
        float _2439 = (dot(vec3(cbLight._m0[_2124 + 3u].xyz), vec3(_920, _921, _922)) * 0.5) + 0.5;
        float _2440 = _2439 * _2439;
        float _4409 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
        float _2441 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
        float _2442 = isnan(1.0) ? _2140 : (isnan(_2140) ? 1.0 : min(_2140, 1.0));
        _2253 = (((cbLight._m0[_2423].x * 0.3183098733425140380859375) * _2441) * _2442) + _2208;
        _2255 = (((cbLight._m0[_2423].y * 0.3183098733425140380859375) * _2441) * _2442) + _2210;
        _2257 = (((cbLight._m0[_2423].z * 0.3183098733425140380859375) * _2441) * _2442) + _2212;
    }
    uint _2260 = _2124 + 8u;
    float _2273 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2124].w)) * _923) * 0.949999988079071044921875);
    float _2274 = _2273 * _2273;
    float _2275 = cbLight._m0[_2124].x + _999;
    float _2276 = cbLight._m0[_2124].y + _1000;
    float _2277 = cbLight._m0[_2124].z + _1001;
    float _2281 = inversesqrt(dot(vec3(_2275, _2276, _2277), vec3(_2275, _2276, _2277)));
    float _2282 = _2281 * _2275;
    float _2283 = _2281 * _2276;
    float _2284 = _2281 * _2277;
    float _2285 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2124].xyz));
    float _4425 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2288 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
    float _4436 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _2289 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
    float _2290 = dot(vec3(_920, _921, _922), vec3(_2282, _2283, _2284));
    float _4447 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _2293 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
    float _2294 = dot(vec3(cbLight._m0[_2124].xyz), vec3(_2282, _2283, _2284));
    float _4458 = isnan(0.0) ? _2294 : (isnan(_2294) ? 0.0 : max(_2294, 0.0));
    float _2298 = _2274 * _2274;
    float _2302 = ((_2293 * _2293) * (_2298 + (-1.0))) + 1.0;
    float _2310 = exp2(log2(1.0 - (isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0)))) * 5.0);
    float _2311 = 0.959999978542327880859375 - _1066;
    float _2313 = 0.959999978542327880859375 - _1067;
    float _2314 = 0.959999978542327880859375 - _1068;
    float _2321 = 1.0 - _2274;
    float _2332 = (0.5 / (((_2289 * ((_2288 * _2321) + _2274)) + 9.9999999392252902907785028219223e-09) + (((_2289 * _2321) + _2274) * _2288))) * _2288;
    float _4469 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2334 = (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * (_2298 / ((_2302 * _2302) * 3.141590118408203125));
    uint _2345 = _2124 + 9u;
    float _2356 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2161].w)) * _923) * 0.949999988079071044921875);
    float _2357 = _2356 * _2356;
    float _2358 = cbLight._m0[_2161].x + _999;
    float _2359 = cbLight._m0[_2161].y + _1000;
    float _2360 = cbLight._m0[_2161].z + _1001;
    float _2364 = inversesqrt(dot(vec3(_2358, _2359, _2360), vec3(_2358, _2359, _2360)));
    float _2365 = _2364 * _2358;
    float _2366 = _2364 * _2359;
    float _2367 = _2364 * _2360;
    float _2368 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2161].xyz));
    float _4480 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2371 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
    float _2372 = dot(vec3(_920, _921, _922), vec3(_2365, _2366, _2367));
    float _4491 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
    float _2375 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
    float _2376 = dot(vec3(cbLight._m0[_2161].xyz), vec3(_2365, _2366, _2367));
    float _4502 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2380 = _2357 * _2357;
    float _2384 = ((_2375 * _2375) * (_2380 + (-1.0))) + 1.0;
    float _2391 = exp2(log2(1.0 - (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0)))) * 5.0);
    float _2398 = 1.0 - _2357;
    float _2408 = (0.5 / (((_2289 * ((_2371 * _2398) + _2357)) + 9.9999999392252902907785028219223e-09) + (((_2289 * _2398) + _2357) * _2371))) * _2371;
    float _4513 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
    float _2410 = (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0))) * (_2380 / ((_2384 * _2384) * 3.141590118408203125));
    float _2420 = (((((_2391 * _2311) + _1069) * cbLight._m0[_2345].x) * _2410) * _2147) + (((((_2310 * _2311) + _1069) * cbLight._m0[_2260].x) * _2334) * _2157);
    float _2421 = (((((_2391 * _2313) + _1071) * cbLight._m0[_2345].y) * _2410) * _2147) + (((((_2310 * _2313) + _1071) * cbLight._m0[_2260].y) * _2334) * _2157);
    float _2422 = (((((_2391 * _2314) + _1072) * cbLight._m0[_2345].z) * _2410) * _2147) + (((((_2310 * _2314) + _1072) * cbLight._m0[_2260].z) * _2334) * _2157);
    float _2484;
    float _2486;
    float _2488;
    if (_2197)
    {
        _2484 = _2420;
        _2486 = _2421;
        _2488 = _2422;
    }
    else
    {
        uint _2490 = _2124 + 2u;
        uint _2494 = _2124 + 10u;
        float _2508 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2490].w)) * _923) * 0.949999988079071044921875);
        float _2509 = _2508 * _2508;
        float _2510 = cbLight._m0[_2490].x + _999;
        float _2511 = cbLight._m0[_2490].y + _1000;
        float _2512 = cbLight._m0[_2490].z + _1001;
        float _2516 = inversesqrt(dot(vec3(_2510, _2511, _2512), vec3(_2510, _2511, _2512)));
        float _2517 = _2516 * _2510;
        float _2518 = _2516 * _2511;
        float _2519 = _2516 * _2512;
        float _2520 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2490].xyz));
        float _4524 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
        float _2523 = isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0));
        float _2524 = dot(vec3(_920, _921, _922), vec3(_2517, _2518, _2519));
        float _4535 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
        float _2527 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
        float _2528 = dot(vec3(cbLight._m0[_2490].xyz), vec3(_2517, _2518, _2519));
        float _4546 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
        float _2532 = _2509 * _2509;
        float _2536 = ((_2527 * _2527) * (_2532 + (-1.0))) + 1.0;
        float _2543 = exp2(log2(1.0 - (isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0)))) * 5.0);
        float _2550 = 1.0 - _2509;
        float _2560 = (0.5 / (((_2289 * ((_2523 * _2550) + _2509)) + 9.9999999392252902907785028219223e-09) + (((_2289 * _2550) + _2509) * _2523))) * _2523;
        float _4557 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
        float _2562 = (isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))) * (_2532 / ((_2536 * _2536) * 3.141590118408203125));
        float _2563 = isnan(1.0) ? _2139 : (isnan(_2139) ? 1.0 : min(_2139, 1.0));
        _2484 = (((((_2543 * _2311) + _1069) * cbLight._m0[_2494].x) * _2562) * _2563) + _2420;
        _2486 = (((((_2543 * _2313) + _1071) * cbLight._m0[_2494].y) * _2562) * _2563) + _2421;
        _2488 = (((((_2543 * _2314) + _1072) * cbLight._m0[_2494].z) * _2562) * _2563) + _2422;
    }
    float _2598;
    float _2600;
    float _2602;
    if (_2215)
    {
        _2598 = _2484;
        _2600 = _2486;
        _2602 = _2488;
    }
    else
    {
        uint _2609 = _2124 + 3u;
        uint _2613 = _2124 + 11u;
        float _2627 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2609].w)) * _923) * 0.949999988079071044921875);
        float _2628 = _2627 * _2627;
        float _2629 = cbLight._m0[_2609].x + _999;
        float _2630 = cbLight._m0[_2609].y + _1000;
        float _2631 = cbLight._m0[_2609].z + _1001;
        float _2635 = inversesqrt(dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631)));
        float _2636 = _2635 * _2629;
        float _2637 = _2635 * _2630;
        float _2638 = _2635 * _2631;
        float _2639 = dot(vec3(_920, _921, _922), vec3(cbLight._m0[_2609].xyz));
        float _4573 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        float _2642 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
        float _2643 = dot(vec3(_920, _921, _922), vec3(_2636, _2637, _2638));
        float _4584 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
        float _2646 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
        float _2647 = dot(vec3(cbLight._m0[_2609].xyz), vec3(_2636, _2637, _2638));
        float _4595 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
        float _2651 = _2628 * _2628;
        float _2655 = ((_2646 * _2646) * (_2651 + (-1.0))) + 1.0;
        float _2662 = exp2(log2(1.0 - (isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0)))) * 5.0);
        float _2669 = 1.0 - _2628;
        float _2679 = (0.5 / (((_2289 * ((_2642 * _2669) + _2628)) + 9.9999999392252902907785028219223e-09) + (((_2289 * _2669) + _2628) * _2642))) * _2642;
        float _4606 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
        float _2681 = (isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0))) * (_2651 / ((_2655 * _2655) * 3.141590118408203125));
        float _2682 = isnan(1.0) ? _2140 : (isnan(_2140) ? 1.0 : min(_2140, 1.0));
        _2598 = (((((_2662 * _2311) + _1069) * cbLight._m0[_2613].x) * _2681) * _2682) + _2484;
        _2600 = (((((_2662 * _2313) + _1071) * cbLight._m0[_2613].y) * _2681) * _2682) + _2486;
        _2602 = (((((_2662 * _2314) + _1072) * cbLight._m0[_2613].z) * _2681) * _2682) + _2488;
    }
    float _2817;
    float _2819;
    float _2821;
    float _2823;
    float _2825;
    float _2827;
    if (_2122.y == 0u)
    {
        float _2757 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2758 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2757;
        float _2759 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2757;
        float _2760 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2757;
        uvec4 _2772 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2773 = _2772.x;
        uint _2784 = uint((float(_2772.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1008) / _2773))) + floor(float(uint(cbSceneParam._m0[85u].x * _1007) / _2773)));
        float _2794 = (log2(_2760 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2795 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
        uint _2798 = uint(isnan(14.0) ? _2795 : (isnan(_2795) ? 14.0 : min(_2795, 14.0)));
        uvec4 _2803 = texelFetch(g_lightClusterGridBuffer, int(((_2798 << 2u) + (_2784 << 6u)) >> 2u));
        uint _2804 = _2803.x;
        uint _2805 = _2772.z;
        float _2905;
        float _2907;
        float _2909;
        float _2911;
        float _2913;
        float _2915;
        if (((((1u << ((_2805 >> 4u) & 15u)) + 4294967295u) & _2804) == 0u) || ((_2805 & 240u) == 0u))
        {
            _2905 = 0.0;
            _2907 = 0.0;
            _2909 = 0.0;
            _2911 = 0.0;
            _2913 = 0.0;
            _2915 = 0.0;
        }
        else
        {
            float _2906;
            float _2908;
            float _2910;
            float _2912;
            float _2914;
            float _2916;
            float _3050 = 0.0;
            float _3051 = 0.0;
            float _3052 = 0.0;
            float _3053 = 0.0;
            float _3054 = 0.0;
            float _3055 = 0.0;
            uint _3056 = 0u;
            uint _3065;
            bool _3066;
            for (;;)
            {
                _3065 = texelFetch(g_lightClassification, int((((_2798 << 5u) + (_2784 << 9u)) + (_3056 << 2u)) >> 2u)).x;
                _3066 = _3065 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3066)
                {
                    frontier_phi_61_pred = _3050;
                    frontier_phi_61_pred_1 = _3055;
                    frontier_phi_61_pred_2 = _3054;
                    frontier_phi_61_pred_3 = _3053;
                    frontier_phi_61_pred_4 = _3052;
                    frontier_phi_61_pred_5 = _3051;
                }
                else
                {
                    float _3174;
                    float _3175;
                    float _3176;
                    float _3177;
                    float _3178;
                    float _3179;
                    uint _3180;
                    _3174 = _3050;
                    _3175 = _3051;
                    _3176 = _3052;
                    _3177 = _3053;
                    _3178 = _3054;
                    _3179 = _3055;
                    _3180 = _3065;
                    float _3106;
                    float _3107;
                    float _3108;
                    float _3109;
                    float _3110;
                    float _3111;
                    for (;;)
                    {
                        uint _3184 = uint(findLSB(_3180)) + (_3056 << 5u);
                        uint _3181 = (_3180 + 4294967295u) & _3180;
                        uint _3186 = _3184 * 48u;
                        vec4 _3200 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3186)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3186 + 3u)).x));
                        uint _3206 = (_3184 * 48u) + 4u;
                        vec4 _3219 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3206)).x, texelFetch(g_PointLightRenderingBuffer, int(_3206 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3206 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3206 + 3u)).x));
                        uint _3225 = (_3184 * 48u) + 8u;
                        vec3 _3236 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3225)).x, texelFetch(g_PointLightRenderingBuffer, int(_3225 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3225 + 2u)).x));
                        float _3240 = _3200.x - _2758;
                        float _3241 = _3200.y - _2759;
                        float _3242 = _3200.z - _2760;
                        float _3243 = dot(vec3(_3240, _3241, _3242), vec3(_3240, _3241, _3242));
                        float _3246 = inversesqrt(_3243);
                        float _3247 = _3246 * _3240;
                        float _3248 = _3246 * _3241;
                        float _3249 = _3246 * _3242;
                        float _3250 = dot(vec3(_1026, _1029, _1032), vec3(_3247, _3248, _3249));
                        float _3255 = 1.0 - (_3243 * _3200.w);
                        float _4632 = isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : max(_3255, 0.0));
                        float _3256 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
                        float _3257 = sqrt(_3243) * _3219.w;
                        float _3260 = 1.39999997615814208984375 / (_3257 + 1.39999997615814208984375);
                        float _3261 = _3260 * _3260;
                        float _3264 = ((1.0 - _3261) * _3250) + _3261;
                        float _3267 = _3257 * _3257;
                        float _3271 = ((isnan(0.0) ? _3264 : (isnan(_3264) ? 0.0 : max(_3264, 0.0))) * _3256) / ((_3267 * 0.699999988079071044921875) + 1.0);
                        float _3275 = (-0.0) - _2758;
                        float _3276 = (-0.0) - _2759;
                        float _3277 = (-0.0) - _2760;
                        float _3281 = inversesqrt(dot(vec3(_3275, _3276, _3277), vec3(_3275, _3276, _3277)));
                        float _3282 = _3281 * _3275;
                        float _3283 = _3281 * _3276;
                        float _3284 = _3281 * _3277;
                        float _3292 = exp2(log2(1.0 / ((_3267 * 3.5) + 5.0)) * 0.25);
                        float _3293 = 1.0 - _1101;
                        float _3300 = sqrt(1.0 - ((1.0 - (_3293 * _3293)) * (1.0 - (_3292 * _3292))));
                        float _3301 = _3300 * _3300;
                        float _3302 = _3301 * _3301;
                        float _3303 = _3282 + _3247;
                        float _3304 = _3283 + _3248;
                        float _3305 = _3284 + _3249;
                        float _3309 = inversesqrt(dot(vec3(_3303, _3304, _3305), vec3(_3303, _3304, _3305)));
                        float _3313 = dot(vec3(_1026, _1029, _1032), vec3(_3282, _3283, _3284));
                        float _4648 = isnan(0.0) ? _3313 : (isnan(_3313) ? 0.0 : max(_3313, 0.0));
                        float _3316 = isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0));
                        float _3317 = dot(vec3(_1026, _1029, _1032), vec3(_3309 * _3303, _3309 * _3304, _3309 * _3305));
                        float _4659 = isnan(0.0) ? _3317 : (isnan(_3317) ? 0.0 : max(_3317, 0.0));
                        float _3320 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
                        float _3324 = ((_3320 * _3320) * (_3302 + (-1.0))) + 1.0;
                        float _3325 = _3260 * _3301;
                        float _3326 = _3325 * _3325;
                        float _3329 = ((1.0 - _3326) * _3250) + _3326;
                        float _4670 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                        float _3330 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
                        float _3331 = 1.0 - _3301;
                        float _3341 = (0.5 / (((_3330 * ((_3316 * _3331) + _3301)) + 9.9999999392252902907785028219223e-09) + (((_3330 * _3331) + _3301) * _3316))) * _3330;
                        float _4681 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0));
                        float _3352 = (((_3302 * 3.1415927410125732421875) * (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0)))) / ((_3324 * _3324) * ((_3267 * 2.1991131305694580078125) + 3.141590118408203125))) * _3256;
                        _3109 = (_3271 * _3219.x) + _3177;
                        _3110 = (_3271 * _3219.y) + _3178;
                        _3111 = (_3271 * _3219.z) + _3179;
                        _3106 = (_3352 * _3236.x) + _3174;
                        _3107 = (_3352 * _3236.y) + _3175;
                        _3108 = (_3352 * _3236.z) + _3176;
                        if (_3181 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3174 = _3106;
                            _3175 = _3107;
                            _3176 = _3108;
                            _3177 = _3109;
                            _3178 = _3110;
                            _3179 = _3111;
                            _3180 = _3181;
                        }
                    }
                    frontier_phi_61_pred = _3106;
                    frontier_phi_61_pred_1 = _3111;
                    frontier_phi_61_pred_2 = _3110;
                    frontier_phi_61_pred_3 = _3109;
                    frontier_phi_61_pred_4 = _3108;
                    frontier_phi_61_pred_5 = _3107;
                }
                _2906 = frontier_phi_61_pred;
                _2916 = frontier_phi_61_pred_1;
                _2914 = frontier_phi_61_pred_2;
                _2912 = frontier_phi_61_pred_3;
                _2910 = frontier_phi_61_pred_4;
                _2908 = frontier_phi_61_pred_5;
                uint _3057 = _3056 + 1u;
                if (_3057 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3050 = _2906;
                    _3051 = _2908;
                    _3052 = _2910;
                    _3053 = _2912;
                    _3054 = _2914;
                    _3055 = _2916;
                    _3056 = _3057;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2905 = _2906;
            _2907 = _2908;
            _2909 = _2910;
            _2911 = _2912;
            _2913 = _2914;
            _2915 = _2916;
        }
        uvec4 _2919 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2920 = _2919.z;
        uint _2922 = (_2920 >> 8u) & 15u;
        float _3018;
        float _3020;
        float _3022;
        float _3024;
        float _3026;
        float _3028;
        if (((4294967295u << _2922) & _2804) == 0u)
        {
            _3018 = _2905;
            _3020 = _2907;
            _3022 = _2909;
            _3024 = _2911;
            _3026 = _2913;
            _3028 = _2915;
        }
        else
        {
            float _3043 = inversesqrt(dot(vec3(_2758, _2759, _2760), vec3(_2758, _2759, _2760)));
            float _3044 = _3043 * _2758;
            float _3045 = _3043 * _2759;
            float _3046 = _3043 * _2760;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2922 < ((_2920 >> 12u) & 15u))
            {
                float _3019;
                float _3021;
                float _3023;
                float _3025;
                float _3027;
                float _3029;
                float _3157 = _2905;
                float _3158 = _2907;
                float _3159 = _2909;
                float _3160 = _2911;
                float _3161 = _2913;
                float _3162 = _2915;
                uint _3163 = _2922;
                uint _3172;
                bool _3173;
                for (;;)
                {
                    _3172 = texelFetch(g_lightClassification, int((((_2798 << 5u) + (_2784 << 9u)) + (_3163 << 2u)) >> 2u)).x;
                    _3173 = _3172 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3173)
                    {
                        frontier_phi_67_pred = _3160;
                        frontier_phi_67_pred_1 = _3161;
                        frontier_phi_67_pred_2 = _3162;
                        frontier_phi_67_pred_3 = _3159;
                        frontier_phi_67_pred_4 = _3158;
                        frontier_phi_67_pred_5 = _3157;
                    }
                    else
                    {
                        float _3357;
                        float _3358;
                        float _3359;
                        float _3360;
                        float _3361;
                        float _3362;
                        float _3650;
                        float _3651;
                        float _3652;
                        float _3653;
                        float _3654;
                        float _3655;
                        float _3370 = _3157;
                        float _3371 = _3158;
                        float _3372 = _3159;
                        float _3373 = _3160;
                        float _3374 = _3161;
                        float _3375 = _3162;
                        uint _3376 = _3172;
                        uint _3377;
                        vec4 _3402;
                        float _3403;
                        vec4 _3418;
                        vec3 _3430;
                        vec4 _3445;
                        vec4 _3460;
                        float _3506;
                        bool _3507;
                        for (;;)
                        {
                            uint _3387 = ((_3163 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3376));
                            _3377 = (_3376 + 4294967295u) & _3376;
                            uint _3389 = _3387 * 40u;
                            _3402 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3389)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3389 + 3u)).x));
                            _3403 = _3402.w;
                            uint _3405 = (_3387 * 40u) + 4u;
                            _3418 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 3u)).x));
                            uint _3420 = (_3387 * 40u) + 8u;
                            _3430 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3420)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 2u)).x));
                            uint _3432 = (_3387 * 40u) + 16u;
                            _3445 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3432)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 3u)).x));
                            uint _3447 = (_3387 * 40u) + 20u;
                            _3460 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3447)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3447 + 3u)).x));
                            uint _3462 = (_3387 * 40u) + 24u;
                            vec4 _3475 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3462)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3462 + 3u)).x));
                            uint _3481 = (_3387 * 40u) + 28u;
                            vec4 _3494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 3u)).x));
                            _3506 = fma(_2760, _3494.z, fma(_2759, _3494.y, _3494.x * _2758)) + _3494.w;
                            _3507 = !((fma(_2760, _3475.z, fma(_2759, _3475.y, _3475.x * _2758)) + _3475.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3507)
                            {
                                float _3534 = _3402.x - _2758;
                                float _3535 = _3402.y - _2759;
                                float _3536 = _3402.z - _2760;
                                float _3537 = dot(vec3(_3534, _3535, _3536), vec3(_3534, _3535, _3536));
                                float _3540 = inversesqrt(_3537);
                                float _3541 = _3540 * _3534;
                                float _3542 = _3540 * _3535;
                                float _3543 = _3540 * _3536;
                                float _3547 = 1.0 - (_3537 / (_3403 * _3403));
                                float _4692 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0));
                                float _3548 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
                                float _3552 = sqrt(_3537) * _3418.w;
                                float _3554 = 1.39999997615814208984375 / (_3552 + 1.39999997615814208984375);
                                float _3555 = _3554 * _3554;
                                float _3558 = ((1.0 - _3555) * dot(vec3(_3541, _3542, _3543), vec3(_1026, _1029, _1032))) + _3555;
                                float _3561 = _3552 * _3552;
                                float _3565 = (fma(_2760, _3445.z, fma(_2759, _3445.y, _3445.x * _2758)) + _3445.w) / _3506;
                                float _3566 = (fma(_2760, _3460.z, fma(_2759, _3460.y, _3460.x * _2758)) + _3460.w) / _3506;
                                float _3570 = 1.0 - dot(vec2(_3565, _3566), vec2(_3565, _3566));
                                float _4708 = isnan(0.0) ? _3570 : (isnan(_3570) ? 0.0 : max(_3570, 0.0));
                                float _3571 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
                                float _3572 = _3571 * (((isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0))) * _3548) / ((_3561 * 0.699999988079071044921875) + 1.0));
                                float _3584 = exp2(log2(1.0 / ((_3561 * 3.5) + 5.0)) * 0.25);
                                float _3585 = 1.0 - _1101;
                                float _3592 = sqrt(1.0 - ((1.0 - (_3585 * _3585)) * (1.0 - (_3584 * _3584))));
                                float _3593 = _3592 * _3592;
                                float _3594 = _3593 * _3593;
                                float _3595 = _3541 - _3044;
                                float _3596 = _3542 - _3045;
                                float _3597 = _3543 - _3046;
                                float _3601 = inversesqrt(dot(vec3(_3595, _3596, _3597), vec3(_3595, _3596, _3597)));
                                float _3605 = dot(vec3(_1026, _1029, _1032), vec3((-0.0) - _3044, (-0.0) - _3045, (-0.0) - _3046));
                                float _4719 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                                float _3608 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
                                float _3609 = dot(vec3(_1026, _1029, _1032), vec3(_3601 * _3595, _3601 * _3596, _3601 * _3597));
                                float _4730 = isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0));
                                float _3612 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                                float _3616 = ((_3612 * _3612) * (_3594 + (-1.0))) + 1.0;
                                float _3617 = _3554 * _3593;
                                float _3618 = _3617 * _3617;
                                float _3624 = ((1.0 - _3618) * dot(vec3(_1026, _1029, _1032), vec3(_3541, _3542, _3543))) + _3618;
                                float _4741 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                                float _3625 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                                float _3626 = 1.0 - _3593;
                                float _3636 = (0.5 / (((_3625 * ((_3608 * _3626) + _3593)) + 9.9999999392252902907785028219223e-09) + (((_3625 * _3626) + _3593) * _3608))) * _3625;
                                float _4752 = isnan(0.0) ? _3636 : (isnan(_3636) ? 0.0 : max(_3636, 0.0));
                                float _3646 = (_3571 * _3548) * (((_3594 * 3.1415927410125732421875) * (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0)))) / ((_3616 * _3616) * ((_3561 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3646 * _3430.x;
                                frontier_phi_73_pred_1 = _3646 * _3430.y;
                                frontier_phi_73_pred_2 = _3572 * _3418.z;
                                frontier_phi_73_pred_3 = _3572 * _3418.y;
                                frontier_phi_73_pred_4 = _3572 * _3418.x;
                                frontier_phi_73_pred_5 = _3646 * _3430.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3650 = frontier_phi_73_pred;
                            _3651 = frontier_phi_73_pred_1;
                            _3655 = frontier_phi_73_pred_2;
                            _3654 = frontier_phi_73_pred_3;
                            _3653 = frontier_phi_73_pred_4;
                            _3652 = frontier_phi_73_pred_5;
                            _3360 = _3653 + _3373;
                            _3361 = _3654 + _3374;
                            _3362 = _3655 + _3375;
                            _3357 = _3650 + _3370;
                            _3358 = _3651 + _3371;
                            _3359 = _3652 + _3372;
                            if (_3377 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3370 = _3357;
                                _3371 = _3358;
                                _3372 = _3359;
                                _3373 = _3360;
                                _3374 = _3361;
                                _3375 = _3362;
                                _3376 = _3377;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3360;
                        frontier_phi_67_pred_1 = _3361;
                        frontier_phi_67_pred_2 = _3362;
                        frontier_phi_67_pred_3 = _3359;
                        frontier_phi_67_pred_4 = _3358;
                        frontier_phi_67_pred_5 = _3357;
                    }
                    _3025 = frontier_phi_67_pred;
                    _3027 = frontier_phi_67_pred_1;
                    _3029 = frontier_phi_67_pred_2;
                    _3023 = frontier_phi_67_pred_3;
                    _3021 = frontier_phi_67_pred_4;
                    _3019 = frontier_phi_67_pred_5;
                    uint _3164 = _3163 + 1u;
                    if (_3164 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3157 = _3019;
                        _3158 = _3021;
                        _3159 = _3023;
                        _3160 = _3025;
                        _3161 = _3027;
                        _3162 = _3029;
                        _3163 = _3164;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3027;
                frontier_phi_55_56_ladder_1 = _3029;
                frontier_phi_55_56_ladder_2 = _3025;
                frontier_phi_55_56_ladder_3 = _3023;
                frontier_phi_55_56_ladder_4 = _3021;
                frontier_phi_55_56_ladder_5 = _3019;
            }
            else
            {
                frontier_phi_55_56_ladder = _2913;
                frontier_phi_55_56_ladder_1 = _2915;
                frontier_phi_55_56_ladder_2 = _2911;
                frontier_phi_55_56_ladder_3 = _2909;
                frontier_phi_55_56_ladder_4 = _2907;
                frontier_phi_55_56_ladder_5 = _2905;
            }
            _3018 = frontier_phi_55_56_ladder_5;
            _3020 = frontier_phi_55_56_ladder_4;
            _3022 = frontier_phi_55_56_ladder_3;
            _3024 = frontier_phi_55_56_ladder_2;
            _3026 = frontier_phi_55_56_ladder;
            _3028 = frontier_phi_55_56_ladder_1;
        }
        float _3033 = isnan(1.0) ? _1085 : (isnan(_1085) ? 1.0 : min(_1085, 1.0));
        _2817 = (_3033 * _3024) + _2253;
        _2819 = (_3033 * _3026) + _2255;
        _2821 = (_3033 * _3028) + _2257;
        _2823 = ((_3018 * _1069) * _3033) + _2598;
        _2825 = ((_3020 * _1071) * _3033) + _2600;
        _2827 = ((_3022 * _1072) * _3033) + _2602;
    }
    else
    {
        _2817 = _2253;
        _2819 = _2255;
        _2821 = _2257;
        _2823 = _2598;
        _2825 = _2600;
        _2827 = _2602;
    }
    float _4768 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _4779 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _4790 = isnan(0.0) ? _1061 : (isnan(_1061) ? 0.0 : max(_1061, 0.0));
    uint _2847 = _285 + 6u;
    float _2855 = _1007 / cbSceneParam._m0[86u].x;
    float _2856 = _1008 / cbSceneParam._m0[86u].y;
    vec4 _2870 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2855, _2856, (log2((isnan(cbSceneParam._m0[77u].w) ? _942 : (isnan(_942) ? cbSceneParam._m0[77u].w : min(_942, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2872 = _2870.x;
    float _2873 = _2870.y;
    float _2874 = _2870.z;
    float _2875 = _2870.w;
    float _2968;
    float _2970;
    float _2972;
    float _2974;
    if (_942 > cbSceneParam._m0[78u].w)
    {
        float _2930 = isnan(_942) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _942 : min(cbSceneParam._m0[80u].w, _942));
        float _2931 = _2930 / _942;
        float _2942 = _2931 * _992;
        float _2943 = _993 * _2931;
        float _2944 = (-0.0) - _2943;
        float _2946 = _2931 * _994;
        float _2948 = (cbSceneParam._m0[77u].w * _2944) / _2930;
        float _2949 = _2948 + cbSceneParam._m0[79u].w;
        float _2950 = cbSceneParam._m0[79u].w - _2943;
        float _2956 = sqrt(((_2942 * _2942) + (_2943 * _2943)) + (_2946 * _2946));
        float _2959 = (1.0 - (cbSceneParam._m0[77u].w / _2930)) * _2956;
        float _2964 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2966 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3119;
        if (abs((_2944 - _2948) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3119 = ((((_2949 > 0.0) ? exp2(_2964 * _2949) : (2.0 - exp2(_2966 * _2949))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2959;
        }
        else
        {
            float _3079 = 1.0 / cbSceneParam._m0[80u].x;
            float _3080 = isnan(_2950) ? _2949 : (isnan(_2949) ? _2950 : max(_2949, _2950));
            float _3081 = isnan(_2950) ? _2949 : (isnan(_2949) ? _2950 : min(_2949, _2950));
            float _3090 = isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : min(_3080, 0.0));
            float _3091 = isnan(0.0) ? _3081 : (isnan(_3081) ? 0.0 : min(_3081, 0.0));
            _3119 = ((abs(_2956 / _2944) * cbSceneParam._m0[80u].y) * ((((_3090 - _3091) * 2.0) - ((exp2(_2964 * (isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : max(_3080, 0.0)))) - exp2(_2964 * (isnan(0.0) ? _3081 : (isnan(_3081) ? 0.0 : max(_3081, 0.0))))) * _3079)) - ((exp2(_2966 * _3090) - exp2(_2966 * _3091)) * _3079))) + (_2959 * cbSceneParam._m0[80u].z);
        }
        vec4 _3121 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2855, _2856, 1.0), 0.0);
        float _3130 = exp2((_3119 * (-1.44269502162933349609375)) * (1.0 - _3121.w));
        float _3131 = log2(_3130);
        float _3147 = log2(_2875);
        _2968 = (exp2(_3147 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3131 * cbSceneParam._m0[78u].x)) * _3121.x) / cbSceneParam._m0[78u].x)) + _2872;
        _2970 = (exp2(_3147 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3131 * cbSceneParam._m0[78u].y)) * _3121.y) / cbSceneParam._m0[78u].y)) + _2873;
        _2972 = (exp2(_3147 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3131 * cbSceneParam._m0[78u].z)) * _3121.z) / cbSceneParam._m0[78u].z)) + _2874;
        _2974 = _3130 * _2875;
    }
    else
    {
        _2968 = _2872;
        _2970 = _2873;
        _2972 = _2874;
        _2974 = _2875;
    }
    float _2986 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2987 = _2986 == 3.0;
    float _2988 = log2(_2974);
    float _2995 = exp2(_2988 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0))) * (_2817 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1085))) + ((_2823 + ((isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _2996 = exp2(_2988 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0))) * (_2819 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1085))) + ((_2825 + ((isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _2997 = exp2(_2988 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2821 + ((isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0))) * _1085))) + ((_2827 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _3006 = (_2986 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3006 * (_2987 ? _2995 : (_2995 + (cbSceneParam._m0[72u].w * _2968)));
    SV_Target.y = _3006 * (_2987 ? _2996 : (_2996 + (cbSceneParam._m0[72u].w * _2970)));
    SV_Target.z = _3006 * (_2987 ? _2997 : (_2997 + (cbSceneParam._m0[72u].w * _2972)));
    SV_Target.w = cbInstanceData._m0[_2847].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2847].w;
}


