#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _193 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _194 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _195 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _201 = inversesqrt(dot(vec3(_193, _194, _195), vec3(_193, _194, _195)));
    float _208 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _215 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _221 = uint(roundEven(NORMAL.w)) * 13u;
    uint _226 = _221 + 1u;
    uint _230 = _221 + 2u;
    float _239 = sqrt(((cbInstanceData._m0[_226].x * cbInstanceData._m0[_226].x) + (cbInstanceData._m0[_221].x * cbInstanceData._m0[_221].x)) + (cbInstanceData._m0[_230].x * cbInstanceData._m0[_230].x));
    float _240 = _239 * TEXCOORD.z;
    float _241 = _239 * TEXCOORD.w;
    vec4 _260 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _284 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _289 = _284.x * cbMtdParam._m0[11u].x;
    float _290 = _284.y * cbMtdParam._m0[11u].y;
    float _291 = _284.z * cbMtdParam._m0[11u].z;
    vec4 _310 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _240) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _241) + cbTextureTilingScale._m0[5u].w));
    vec4 _362 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _364 = _362.x;
    float _377 = dot(vec4(_364, _362.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _394 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_364 - _377) * cbMtdParam._m0[23u].w) + _377) * cbMtdParam._m0[22u].w))) + 1.0;
    float _907 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _395 = isnan(1.0) ? _907 : (isnan(_907) ? 1.0 : min(_907, 1.0));
    float _408 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _260.x) * ((_395 * ((_310.x * cbMtdParam._m0[12u].x) - _289)) + _289);
    float _411 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _260.y) * ((_395 * ((_310.y * cbMtdParam._m0[12u].y) - _290)) + _290);
    float _414 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _260.z) * ((_395 * ((_310.z * cbMtdParam._m0[12u].z) - _291)) + _291);
    vec4 _427 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _240) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _241) + cbTextureTilingScale._m0[4u].w));
    vec4 _444 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _446 = _444.x;
    float _447 = _444.y;
    float _448 = _444.z;
    float _457 = ((_427.z - _448) * _395) + _448;
    float _460 = ((((_427.x - _446) * _395) + _446) * 2.0) + (-1.0);
    float _462 = ((((_427.y - _447) * _395) + _447) * 2.0) + (-1.0);
    float _463 = dot(vec2(_460, _462), vec2(_460, _462));
    float _918 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _468 = sqrt(1.0 - (isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0))));
    vec4 _484 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _496 = (((_484.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _460;
    float _497 = (((_484.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _462;
    vec4 _509 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _240) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _241) + cbTextureTilingScale._m0[19u].w));
    float _511 = _509.x;
    float _512 = 1.0 - _511;
    float _541 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_511 - _512) * cbMtdParam._m0[24u].w) + _512) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _929 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _542 = isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0));
    float _550 = ((((cbMtdParam._m0[10u].x - _408) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _542) + _408;
    float _551 = ((((cbMtdParam._m0[10u].y - _411) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _542) + _411;
    float _552 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _414)) * _542) + _414;
    vec4 _564 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _578 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _580 = _578.x;
    float _597 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _240) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _241) + cbTextureTilingScale._m0[9u].w)).x - _580) * _395) + _580;
    float _601 = ((_564.x - _597) * cbMtdParam._m0[19u].z) + _597;
    float _603 = _601 - (_601 * _542);
    float _607 = (cbMtdParam._m0[19u].w * (_484.z - _457)) + _457;
    float _611 = ((cbMtdParam._m0[23u].x - _607) * _542) + _607;
    vec4 _630 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _240) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _241) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _636 = (_630.x * 2.0) + (-1.0);
    float _637 = (_630.y * 2.0) + (-1.0);
    float _638 = dot(vec2(_636, _637), vec2(_636, _637));
    float _940 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _654 = (_542 * (((cbMtdParam._m0[22u].z * _496) - _496) + _636)) + _496;
    float _655 = (_542 * (((cbMtdParam._m0[22u].z * _497) - _497) + _637)) + _497;
    float _656 = (_542 * (sqrt(1.0 - (isnan(1.0) ? _940 : (isnan(_940) ? 1.0 : min(_940, 1.0)))) - _468)) + _468;
    float _658 = cbMtdParam._m0[22u].x + _484.w;
    float _661 = fma(_656, _208 * NORMAL.x, fma(_655, _215 * TANGENT.x, (_201 * _193) * _654));
    float _664 = fma(_656, _208 * NORMAL.y, fma(_655, _215 * TANGENT.y, (_201 * _194) * _654));
    float _667 = fma(_656, _208 * NORMAL.z, fma(_655, _215 * TANGENT.z, (_201 * _195) * _654));
    float _671 = inversesqrt(dot(vec3(_661, _664, _667), vec3(_661, _664, _667)));
    float _951 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _962 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _673 = isnan(1.0) ? _962 : (isnan(_962) ? 1.0 : min(_962, 1.0));
    float _973 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _674 = isnan(1.0) ? _973 : (isnan(_973) ? 1.0 : min(_973, 1.0));
    float _984 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _675 = isnan(1.0) ? _984 : (isnan(_984) ? 1.0 : min(_984, 1.0));
    float _995 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _676 = isnan(1.0) ? _995 : (isnan(_995) ? 1.0 : min(_995, 1.0));
    float _1006 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _717 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _727 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _717);
    float _728 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _717);
    float _729 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _717);
    vec4 _734 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _736 = _734.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _796 = sqrt(((_727 * _727) + (_728 * _728)) + (_729 * _729));
        float _802 = (cbMatDynParam._m0[5u].x * _796) + cbMatDynParam._m0[5u].y;
        float _1017 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
        float _803 = isnan(1.0) ? _1017 : (isnan(_1017) ? 1.0 : min(_1017, 1.0));
        float _807 = (cbMatDynParam._m0[5u].z * _796) + cbMatDynParam._m0[5u].w;
        float _1028 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1028 : (isnan(_1028) ? 1.0 : min(_1028, 1.0))) - _803)) + _803) < ((_736 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _834;
    vec4 _758;
    float _765;
    float _766;
    float _767;
    float _768;
    float _772;
    vec4 _776;
    float _778;
    float _779;
    bool _790;
    for (;;)
    {
        _758 = cbInstanceData._m0[(_221 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _762 = (cbMtdParam._m0[0u].x * _674) * _758.x;
        float _763 = (cbMtdParam._m0[0u].y * _675) * _758.y;
        float _764 = (cbMtdParam._m0[0u].z * _676) * _758.z;
        float _1039 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
        _765 = isnan(1.0) ? _1039 : (isnan(_1039) ? 1.0 : min(_1039, 1.0));
        float _1050 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
        _766 = isnan(1.0) ? _1050 : (isnan(_1050) ? 1.0 : min(_1050, 1.0));
        float _1061 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
        _767 = isnan(1.0) ? _1061 : (isnan(_1061) ? 1.0 : min(_1061, 1.0));
        _768 = _673 * TEXCOORD_5.w;
        _772 = cbInstanceData._m0[_221 + 6u].w;
        float _773 = _736 + (-0.5);
        _776 = cbMtdParam._m0[1u];
        _778 = _776.y * _773;
        _779 = _773 * 0.999000012874603271484375;
        _790 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_790)
        {
            if ((cbInstanceData._m0[_221 + 7u].x + _779) < 0.5)
            {
                _834 = true;
                break;
            }
        }
        if ((_758.w < 1.0) && ((_758.w + _779) < 0.5))
        {
            _834 = true;
            break;
        }
        if ((_778 + 1.0) < _776.x)
        {
            _834 = true;
            break;
        }
        _834 = false;
        break;
    }
    if (_834)
    {
        discard_state = true;
    }
    bool _860 = cbMtdParam._m0[1u].z != 0.0;
    float _861 = _860 ? _772 : 0.0;
    SV_Target.x = ((_661 * 0.5) * _671) + 0.500488758087158203125;
    SV_Target.y = ((_664 * 0.5) * _671) + 0.500488758087158203125;
    SV_Target.z = ((_667 * 0.5) * _671) + 0.500488758087158203125;
    SV_Target.w = _861;
    SV_Target_1.x = isnan(1.0) ? _1006 : (isnan(_1006) ? 1.0 : min(_1006, 1.0));
    SV_Target_1.y = isnan(1.0) ? _951 : (isnan(_951) ? 1.0 : min(_951, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _860 ? _772 : _768;
    SV_Target_2.x = _765;
    SV_Target_2.y = _766;
    SV_Target_2.z = _767;
    SV_Target_2.w = _860 ? _772 : (float(floatBitsToUint(cbInstanceData._m0[_221 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _861;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _861;
    discard_exit();
}


