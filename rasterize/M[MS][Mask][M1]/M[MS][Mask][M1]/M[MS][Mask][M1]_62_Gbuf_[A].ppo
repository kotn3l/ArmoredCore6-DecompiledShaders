#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _187 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _188 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _189 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_187, _188, _189), vec3(_187, _188, _189)));
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _215 = uint(roundEven(NORMAL.w)) * 13u;
    uint _221 = _215 + 1u;
    uint _225 = _215 + 2u;
    float _234 = sqrt(((cbInstanceData._m0[_221].x * cbInstanceData._m0[_221].x) + (cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x)) + (cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x));
    float _235 = _234 * TEXCOORD.z;
    float _236 = _234 * TEXCOORD.w;
    vec4 _255 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _279 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _284 = _279.x * cbMtdParam._m0[11u].x;
    float _285 = _279.y * cbMtdParam._m0[11u].y;
    float _286 = _279.z * cbMtdParam._m0[11u].z;
    vec4 _305 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _235) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _236) + cbTextureTilingScale._m0[5u].w));
    vec4 _325 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _362 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _364 = _362.x;
    float _377 = dot(vec4(_364, _362.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _394 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _325.x) * 2.0) - ((((_364 - _377) * cbMtdParam._m0[23u].w) + _377) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1011 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _395 = isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0));
    float _402 = (_395 * ((_305.x * cbMtdParam._m0[12u].x) - _284)) + _284;
    float _403 = (_395 * ((_305.y * cbMtdParam._m0[12u].y) - _285)) + _285;
    float _404 = (_395 * ((_305.z * cbMtdParam._m0[12u].z) - _286)) + _286;
    vec4 _421 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _235) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _236) + cbTextureTilingScale._m0[3u].w));
    vec4 _441 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _443 = _441.x;
    float _453 = dot(vec4(_443, _441.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _467 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _325.y) * 2.0) - ((((_443 - _453) * cbMtdParam._m0[23u].w) + _453) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1022 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _468 = isnan(1.0) ? _1022 : (isnan(_1022) ? 1.0 : min(_1022, 1.0));
    float _481 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _255.x) * ((_468 * ((_421.x * cbMtdParam._m0[13u].x) - _402)) + _402);
    float _484 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _255.y) * ((_468 * ((_421.y * cbMtdParam._m0[13u].y) - _403)) + _403);
    float _487 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _255.z) * ((_468 * ((_421.z * cbMtdParam._m0[13u].z) - _404)) + _404);
    vec4 _505 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _235) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _236) + cbTextureTilingScale._m0[4u].w));
    vec4 _522 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _524 = _522.x;
    float _525 = _522.y;
    float _526 = _522.z;
    float _533 = ((_505.x - _524) * _395) + _524;
    float _534 = ((_505.y - _525) * _395) + _525;
    float _535 = ((_505.z - _526) * _395) + _526;
    vec4 _547 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _235) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _236) + cbTextureTilingScale._m0[2u].w));
    float _560 = ((_547.z - _535) * _468) + _535;
    float _563 = ((((_547.x - _533) * _468) + _533) * 2.0) + (-1.0);
    float _565 = ((((_547.y - _534) * _468) + _534) * 2.0) + (-1.0);
    float _566 = dot(vec2(_563, _565), vec2(_563, _565));
    float _1033 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _571 = sqrt(1.0 - (isnan(1.0) ? _1033 : (isnan(_1033) ? 1.0 : min(_1033, 1.0))));
    vec4 _585 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _610 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _235) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _236) + cbTextureTilingScale._m0[11u].w));
    float _612 = _610.x;
    float _613 = 1.0 - _612;
    float _629 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_612 - _613) * cbMtdParam._m0[24u].z) + _613) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1044 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _1044 : (isnan(_1044) ? 1.0 : min(_1044, 1.0));
    float _637 = (_630 * (cbMtdParam._m0[17u].x - _481)) + _481;
    float _638 = (_630 * (cbMtdParam._m0[17u].y - _484)) + _484;
    float _639 = (_630 * (cbMtdParam._m0[17u].z - _487)) + _487;
    vec4 _665 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _667 = _665.x;
    float _684 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _235) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _236) + cbTextureTilingScale._m0[9u].w)).x - _667) * _395) + _667;
    float _701 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _235) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _236) + cbTextureTilingScale._m0[21u].w)).x - _684) * _468) + _684;
    float _705 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _701) * cbMtdParam._m0[19u].z) + _701;
    float _707 = _705 - (_705 * _630);
    float _711 = (cbMtdParam._m0[19u].w * (_585.z - _560)) + _560;
    vec4 _724 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _235) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _236) + cbTextureTilingScale._m0[15u].w));
    float _731 = (_724.x * 2.0) + (-1.0);
    float _732 = (_724.y * 2.0) + (-1.0);
    float _733 = dot(vec2(_731, _732), vec2(_731, _732));
    float _1055 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _741 = (_630 * (_724.z - _711)) + _711;
    float _744 = (((_585.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _563;
    float _745 = (((_585.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _565;
    float _757 = (((_731 - _744) + (cbMtdParam._m0[21u].x * _744)) * _630) + _744;
    float _758 = (((_732 - _745) + (cbMtdParam._m0[21u].x * _745)) * _630) + _745;
    float _759 = (_630 * (sqrt(1.0 - (isnan(1.0) ? _1055 : (isnan(_1055) ? 1.0 : min(_1055, 1.0)))) - _571)) + _571;
    float _761 = cbMtdParam._m0[22u].x + _585.w;
    float _764 = fma(_759, _202 * NORMAL.x, fma(_758, _209 * TANGENT.x, (_195 * _187) * _757));
    float _767 = fma(_759, _202 * NORMAL.y, fma(_758, _209 * TANGENT.y, (_195 * _188) * _757));
    float _770 = fma(_759, _202 * NORMAL.z, fma(_758, _209 * TANGENT.z, (_195 * _189) * _757));
    float _774 = inversesqrt(dot(vec3(_764, _767, _770), vec3(_764, _767, _770)));
    float _1066 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _1077 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _776 = isnan(1.0) ? _1077 : (isnan(_1077) ? 1.0 : min(_1077, 1.0));
    float _1088 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _777 = isnan(1.0) ? _1088 : (isnan(_1088) ? 1.0 : min(_1088, 1.0));
    float _1099 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _778 = isnan(1.0) ? _1099 : (isnan(_1099) ? 1.0 : min(_1099, 1.0));
    float _1110 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _779 = isnan(1.0) ? _1110 : (isnan(_1110) ? 1.0 : min(_1110, 1.0));
    float _1121 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _821 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _831 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _821);
    float _832 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _821);
    float _833 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _821);
    vec4 _838 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _840 = _838.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _900 = sqrt(((_831 * _831) + (_832 * _832)) + (_833 * _833));
        float _906 = (cbMatDynParam._m0[5u].x * _900) + cbMatDynParam._m0[5u].y;
        float _1132 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _907 = isnan(1.0) ? _1132 : (isnan(_1132) ? 1.0 : min(_1132, 1.0));
        float _911 = (cbMatDynParam._m0[5u].z * _900) + cbMatDynParam._m0[5u].w;
        float _1143 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1143 : (isnan(_1143) ? 1.0 : min(_1143, 1.0))) - _907)) + _907) < ((_840 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _938;
    vec4 _862;
    float _869;
    float _870;
    float _871;
    float _872;
    float _876;
    vec4 _880;
    float _882;
    float _883;
    bool _894;
    for (;;)
    {
        _862 = cbInstanceData._m0[(_215 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _866 = (cbMtdParam._m0[0u].x * _777) * _862.x;
        float _867 = (cbMtdParam._m0[0u].y * _778) * _862.y;
        float _868 = (cbMtdParam._m0[0u].z * _779) * _862.z;
        float _1154 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        _869 = isnan(1.0) ? _1154 : (isnan(_1154) ? 1.0 : min(_1154, 1.0));
        float _1165 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
        _870 = isnan(1.0) ? _1165 : (isnan(_1165) ? 1.0 : min(_1165, 1.0));
        float _1176 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
        _871 = isnan(1.0) ? _1176 : (isnan(_1176) ? 1.0 : min(_1176, 1.0));
        _872 = _776 * TEXCOORD_5.w;
        _876 = cbInstanceData._m0[_215 + 6u].w;
        float _877 = _840 + (-0.5);
        _880 = cbMtdParam._m0[1u];
        _882 = _880.y * _877;
        _883 = _877 * 0.999000012874603271484375;
        _894 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_894)
        {
            if ((cbInstanceData._m0[_215 + 7u].x + _883) < 0.5)
            {
                _938 = true;
                break;
            }
        }
        if ((_862.w < 1.0) && ((_862.w + _883) < 0.5))
        {
            _938 = true;
            break;
        }
        if ((_882 + 1.0) < _880.x)
        {
            _938 = true;
            break;
        }
        _938 = false;
        break;
    }
    if (_938)
    {
        discard_state = true;
    }
    bool _964 = cbMtdParam._m0[1u].z != 0.0;
    float _965 = _964 ? _876 : 0.0;
    SV_Target.x = ((_764 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.y = ((_767 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.z = ((_770 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.w = _965;
    SV_Target_1.x = isnan(1.0) ? _1121 : (isnan(_1121) ? 1.0 : min(_1121, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1066 : (isnan(_1066) ? 1.0 : min(_1066, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _964 ? _876 : _872;
    SV_Target_2.x = _869;
    SV_Target_2.y = _870;
    SV_Target_2.z = _871;
    SV_Target_2.w = _964 ? _876 : (float(floatBitsToUint(cbInstanceData._m0[_215 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _965;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _965;
    discard_exit();
}


