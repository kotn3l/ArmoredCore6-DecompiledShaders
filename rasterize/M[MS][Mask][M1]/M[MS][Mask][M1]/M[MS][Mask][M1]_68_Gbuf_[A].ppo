#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _216 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _217 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _218 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _224 = inversesqrt(dot(vec3(_216, _217, _218), vec3(_216, _217, _218)));
    float _231 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _238 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _250 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _252 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _253 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1196 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    float _1207 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    float _1218 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    uint _263 = uint(roundEven(NORMAL.w)) * 13u;
    uint _268 = _263 + 1u;
    uint _272 = _263 + 2u;
    float _281 = sqrt(((cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x) + (cbInstanceData._m0[_263].x * cbInstanceData._m0[_263].x)) + (cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x));
    float _282 = _281 * TEXCOORD.z;
    float _283 = _281 * TEXCOORD.w;
    vec4 _296 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _282) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _283) + cbTextureTilingScale._m0[13u].w));
    vec4 _320 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _325 = _320.x * cbMtdParam._m0[11u].x;
    float _326 = _320.y * cbMtdParam._m0[11u].y;
    float _327 = _320.z * cbMtdParam._m0[11u].z;
    vec4 _346 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _282) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _283) + cbTextureTilingScale._m0[5u].w));
    vec4 _365 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _397 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _399 = _397.x;
    float _412 = dot(vec4(_399, _397.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _365.x) * 2.0) - ((((_399 - _412) * cbMtdParam._m0[23u].w) + _412) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1229 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _1229 : (isnan(_1229) ? 1.0 : min(_1229, 1.0));
    float _437 = (_430 * ((_346.x * cbMtdParam._m0[12u].x) - _325)) + _325;
    float _438 = (_430 * ((_346.y * cbMtdParam._m0[12u].y) - _326)) + _326;
    float _439 = (_430 * ((_346.z * cbMtdParam._m0[12u].z) - _327)) + _327;
    vec4 _456 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _282) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _283) + cbTextureTilingScale._m0[3u].w));
    vec4 _476 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _478 = _476.x;
    float _488 = dot(vec4(_478, _476.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _502 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _365.y) * 2.0) - ((((_478 - _488) * cbMtdParam._m0[23u].w) + _488) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1240 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _503 = isnan(1.0) ? _1240 : (isnan(_1240) ? 1.0 : min(_1240, 1.0));
    float _510 = (_503 * ((_456.x * cbMtdParam._m0[13u].x) - _437)) + _437;
    float _511 = (_503 * ((_456.y * cbMtdParam._m0[13u].y) - _438)) + _438;
    float _512 = (_503 * ((_456.z * cbMtdParam._m0[13u].z) - _439)) + _439;
    float _516 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _296.x) * _510;
    float _519 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _296.y) * _511;
    float _522 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _296.z) * _512;
    float _529 = ((_510 - _516) * (isnan(1.0) ? _1196 : (isnan(_1196) ? 1.0 : min(_1196, 1.0)))) + _516;
    float _530 = ((_511 - _519) * (isnan(1.0) ? _1207 : (isnan(_1207) ? 1.0 : min(_1207, 1.0)))) + _519;
    float _531 = ((_512 - _522) * (isnan(1.0) ? _1218 : (isnan(_1218) ? 1.0 : min(_1218, 1.0)))) + _522;
    vec4 _548 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _282) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _283) + cbTextureTilingScale._m0[20u].w));
    vec4 _571 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _282) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _283) + cbTextureTilingScale._m0[4u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _590 = _588.x;
    float _591 = _588.y;
    float _592 = _588.z;
    float _599 = ((_571.x - _590) * _430) + _590;
    float _600 = ((_571.y - _591) * _430) + _591;
    float _601 = ((_571.z - _592) * _430) + _592;
    vec4 _613 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _282) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _283) + cbTextureTilingScale._m0[2u].w));
    float _626 = ((_613.z - _601) * _503) + _601;
    float _629 = ((((_613.x - _599) * _503) + _599) * 2.0) + (-1.0);
    float _630 = ((((_613.y - _600) * _503) + _600) * 2.0) + (-1.0);
    float _631 = dot(vec2(_629, _630), vec2(_629, _630));
    float _1251 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _636 = sqrt(1.0 - (isnan(1.0) ? _1251 : (isnan(_1251) ? 1.0 : min(_1251, 1.0))));
    vec4 _650 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _675 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _282) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _283) + cbTextureTilingScale._m0[11u].w));
    float _677 = _675.x;
    float _678 = 1.0 - _677;
    float _687 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _690 = ((isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : min(_687, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _699 = (_690 - ((((((_677 - _678) * cbMtdParam._m0[24u].z) + _678) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _690))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1272 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _700 = isnan(1.0) ? _1272 : (isnan(_1272) ? 1.0 : min(_1272, 1.0));
    float _707 = (_700 * (cbMtdParam._m0[17u].x - _529)) + _529;
    float _708 = (_700 * (cbMtdParam._m0[17u].y - _530)) + _530;
    float _709 = (_700 * (cbMtdParam._m0[17u].z - _531)) + _531;
    vec4 _721 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _282) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _283) + cbTextureTilingScale._m0[19u].w));
    float _723 = _721.x;
    float _724 = 1.0 - _723;
    float _749 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_723 - _724) * cbMtdParam._m0[24u].w) + _724) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1283 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _1283 : (isnan(_1283) ? 1.0 : min(_1283, 1.0));
    float _758 = ((((cbMtdParam._m0[10u].x - _707) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _750) + _707;
    float _759 = ((((cbMtdParam._m0[10u].y - _708) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _750) + _708;
    float _760 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _709)) * _750) + _709;
    vec4 _786 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _788 = _786.x;
    float _806 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _282) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _283) + cbTextureTilingScale._m0[9u].w)).x - _788) * _430) + _788;
    float _823 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _282) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _283) + cbTextureTilingScale._m0[21u].w)).x - _806) * _503) + _806;
    float _827 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _823) * cbMtdParam._m0[19u].z) + _823;
    float _829 = _827 - (_827 * _700);
    float _831 = _829 - (_829 * _750);
    float _836 = (((_548.z - _626) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _626;
    float _840 = ((_650.z - _836) * cbMtdParam._m0[19u].w) + _836;
    vec4 _854 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _282) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _283) + cbTextureTilingScale._m0[15u].w));
    float _861 = (_854.x * 2.0) + (-1.0);
    float _862 = (_854.y * 2.0) + (-1.0);
    float _863 = dot(vec2(_861, _862), vec2(_861, _862));
    float _1294 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _871 = (_700 * (_854.z - _840)) + _840;
    float _874 = ((cbMtdParam._m0[23u].x - _871) * _750) + _871;
    vec4 _895 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _282) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _283) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _901 = (_895.x * 2.0) + (-1.0);
    float _902 = (_895.y * 2.0) + (-1.0);
    float _903 = dot(vec2(_901, _902), vec2(_901, _902));
    float _1305 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _917 = (_629 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_548.x * 2.0) + (-1.0)))) + (((_650.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _918 = (_630 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_548.y * 2.0) + (-1.0)))) + (((_650.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _930 = (((_861 - _917) + (cbMtdParam._m0[21u].x * _917)) * _700) + _917;
    float _931 = (((_862 - _918) + (cbMtdParam._m0[21u].x * _918)) * _700) + _918;
    float _932 = (_700 * (sqrt(1.0 - (isnan(1.0) ? _1294 : (isnan(_1294) ? 1.0 : min(_1294, 1.0)))) - _636)) + _636;
    float _943 = (((_901 - _930) + (_930 * cbMtdParam._m0[22u].z)) * _750) + _930;
    float _944 = (((_902 - _931) + (_931 * cbMtdParam._m0[22u].z)) * _750) + _931;
    float _945 = ((sqrt(1.0 - (isnan(1.0) ? _1305 : (isnan(_1305) ? 1.0 : min(_1305, 1.0)))) - _932) * _750) + _932;
    float _947 = cbMtdParam._m0[22u].x + _650.w;
    float _950 = fma(_945, _231 * NORMAL.x, fma(_944, _238 * TANGENT.x, (_224 * _216) * _943));
    float _953 = fma(_945, _231 * NORMAL.y, fma(_944, _238 * TANGENT.y, (_224 * _217) * _943));
    float _956 = fma(_945, _231 * NORMAL.z, fma(_944, _238 * TANGENT.z, (_224 * _218) * _943));
    float _960 = inversesqrt(dot(vec3(_950, _953, _956), vec3(_950, _953, _956)));
    float _1316 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _1327 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    float _962 = isnan(1.0) ? _1327 : (isnan(_1327) ? 1.0 : min(_1327, 1.0));
    float _1338 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _963 = isnan(1.0) ? _1338 : (isnan(_1338) ? 1.0 : min(_1338, 1.0));
    float _1349 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _964 = isnan(1.0) ? _1349 : (isnan(_1349) ? 1.0 : min(_1349, 1.0));
    float _1360 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _965 = isnan(1.0) ? _1360 : (isnan(_1360) ? 1.0 : min(_1360, 1.0));
    float _1371 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _1006 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1016 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1006);
    float _1017 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1006);
    float _1018 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1006);
    vec4 _1023 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1025 = _1023.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1085 = sqrt(((_1016 * _1016) + (_1017 * _1017)) + (_1018 * _1018));
        float _1091 = (cbMatDynParam._m0[5u].x * _1085) + cbMatDynParam._m0[5u].y;
        float _1382 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1092 = isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0));
        float _1096 = (cbMatDynParam._m0[5u].z * _1085) + cbMatDynParam._m0[5u].w;
        float _1393 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1393 : (isnan(_1393) ? 1.0 : min(_1393, 1.0))) - _1092)) + _1092) < ((_1025 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1123;
    vec4 _1047;
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1061;
    vec4 _1065;
    float _1067;
    float _1068;
    bool _1079;
    for (;;)
    {
        _1047 = cbInstanceData._m0[(_263 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _1051 = (cbMtdParam._m0[0u].x * _963) * _1047.x;
        float _1052 = (cbMtdParam._m0[0u].y * _964) * _1047.y;
        float _1053 = (cbMtdParam._m0[0u].z * _965) * _1047.z;
        float _1404 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        _1054 = isnan(1.0) ? _1404 : (isnan(_1404) ? 1.0 : min(_1404, 1.0));
        float _1415 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        _1055 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
        float _1426 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
        _1056 = isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0));
        _1057 = _962 * TEXCOORD_5.w;
        _1061 = cbInstanceData._m0[_263 + 6u].w;
        float _1062 = _1025 + (-0.5);
        _1065 = cbMtdParam._m0[1u];
        _1067 = _1065.y * _1062;
        _1068 = _1062 * 0.999000012874603271484375;
        _1079 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1079)
        {
            if ((cbInstanceData._m0[_263 + 7u].x + _1068) < 0.5)
            {
                _1123 = true;
                break;
            }
        }
        if ((_1047.w < 1.0) && ((_1047.w + _1068) < 0.5))
        {
            _1123 = true;
            break;
        }
        if ((_1067 + 1.0) < _1065.x)
        {
            _1123 = true;
            break;
        }
        _1123 = false;
        break;
    }
    if (_1123)
    {
        discard_state = true;
    }
    bool _1149 = cbMtdParam._m0[1u].z != 0.0;
    float _1150 = _1149 ? _1061 : 0.0;
    SV_Target.x = ((_950 * 0.5) * _960) + 0.500488758087158203125;
    SV_Target.y = ((_953 * 0.5) * _960) + 0.500488758087158203125;
    SV_Target.z = ((_956 * 0.5) * _960) + 0.500488758087158203125;
    SV_Target.w = _1150;
    SV_Target_1.x = isnan(1.0) ? _1371 : (isnan(_1371) ? 1.0 : min(_1371, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1316 : (isnan(_1316) ? 1.0 : min(_1316, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1149 ? _1061 : _1057;
    SV_Target_2.x = _1054;
    SV_Target_2.y = _1055;
    SV_Target_2.z = _1056;
    SV_Target_2.w = _1149 ? _1061 : (float(floatBitsToUint(cbInstanceData._m0[_263 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1150;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1150;
    discard_exit();
}


