#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _199 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _200 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _201 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _227 = uint(roundEven(NORMAL.w)) * 13u;
    uint _232 = _227 + 1u;
    uint _236 = _227 + 2u;
    float _245 = sqrt(((cbInstanceData._m0[_232].x * cbInstanceData._m0[_232].x) + (cbInstanceData._m0[_227].x * cbInstanceData._m0[_227].x)) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x));
    float _246 = _245 * TEXCOORD.z;
    float _247 = _245 * TEXCOORD.w;
    vec4 _266 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _290 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _290.x * cbMtdParam._m0[11u].x;
    float _296 = _290.y * cbMtdParam._m0[11u].y;
    float _297 = _290.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _246) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _247) + cbTextureTilingScale._m0[5u].w));
    vec4 _368 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _370 = _368.x;
    float _383 = dot(vec4(_370, _368.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _400 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_370 - _383) * cbMtdParam._m0[23u].w) + _383) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1010 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _1010 : (isnan(_1010) ? 1.0 : min(_1010, 1.0));
    float _414 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _266.x) * ((_401 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295);
    float _417 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _266.y) * ((_401 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296);
    float _420 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _266.z) * ((_401 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297);
    vec4 _438 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _246) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _247) + cbTextureTilingScale._m0[4u].w));
    vec4 _455 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _457 = _455.x;
    float _458 = _455.y;
    float _459 = _455.z;
    float _468 = ((_438.z - _459) * _401) + _459;
    float _471 = ((((_438.x - _457) * _401) + _457) * 2.0) + (-1.0);
    float _473 = ((((_438.y - _458) * _401) + _458) * 2.0) + (-1.0);
    float _474 = dot(vec2(_471, _473), vec2(_471, _473));
    float _1021 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _479 = sqrt(1.0 - (isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0))));
    vec4 _495 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _520 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _246) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _247) + cbTextureTilingScale._m0[11u].w));
    float _522 = _520.x;
    float _523 = 1.0 - _522;
    float _532 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _535 = ((isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : min(_532, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _544 = (_535 - ((((((_522 - _523) * cbMtdParam._m0[24u].z) + _523) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _535))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1042 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _545 = isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0));
    float _552 = (_545 * (cbMtdParam._m0[17u].x - _414)) + _414;
    float _553 = (_545 * (cbMtdParam._m0[17u].y - _417)) + _417;
    float _554 = (_545 * (cbMtdParam._m0[17u].z - _420)) + _420;
    vec4 _566 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _246) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _247) + cbTextureTilingScale._m0[19u].w));
    float _568 = _566.x;
    float _569 = 1.0 - _568;
    float _594 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_568 - _569) * cbMtdParam._m0[24u].w) + _569) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _1053 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _595 = isnan(1.0) ? _1053 : (isnan(_1053) ? 1.0 : min(_1053, 1.0));
    float _603 = ((((cbMtdParam._m0[10u].x - _552) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _595) + _552;
    float _604 = ((((cbMtdParam._m0[10u].y - _553) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _595) + _553;
    float _605 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _554)) * _595) + _554;
    vec4 _617 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _631 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _633 = _631.x;
    float _650 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _246) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _247) + cbTextureTilingScale._m0[9u].w)).x - _633) * _401) + _633;
    float _654 = ((_617.x - _650) * cbMtdParam._m0[19u].z) + _650;
    float _656 = _654 - (_654 * _545);
    float _658 = _656 - (_656 * _595);
    float _662 = (cbMtdParam._m0[19u].w * (_495.z - _468)) + _468;
    vec4 _676 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _246) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _247) + cbTextureTilingScale._m0[15u].w));
    float _683 = (_676.x * 2.0) + (-1.0);
    float _684 = (_676.y * 2.0) + (-1.0);
    float _685 = dot(vec2(_683, _684), vec2(_683, _684));
    float _1064 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _693 = (_545 * (_676.z - _662)) + _662;
    float _696 = ((cbMtdParam._m0[23u].x - _693) * _595) + _693;
    vec4 _715 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _246) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _247) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _721 = (_715.x * 2.0) + (-1.0);
    float _722 = (_715.y * 2.0) + (-1.0);
    float _723 = dot(vec2(_721, _722), vec2(_721, _722));
    float _1075 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _731 = (((_495.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _471;
    float _732 = (((_495.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _473;
    float _744 = (((_683 - _731) + (cbMtdParam._m0[21u].x * _731)) * _545) + _731;
    float _745 = (((_684 - _732) + (cbMtdParam._m0[21u].x * _732)) * _545) + _732;
    float _746 = (_545 * (sqrt(1.0 - (isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0)))) - _479)) + _479;
    float _757 = (((_721 - _744) + (_744 * cbMtdParam._m0[22u].z)) * _595) + _744;
    float _758 = (((_722 - _745) + (_745 * cbMtdParam._m0[22u].z)) * _595) + _745;
    float _759 = ((sqrt(1.0 - (isnan(1.0) ? _1075 : (isnan(_1075) ? 1.0 : min(_1075, 1.0)))) - _746) * _595) + _746;
    float _761 = cbMtdParam._m0[22u].x + _495.w;
    float _764 = fma(_759, _214 * NORMAL.x, fma(_758, _221 * TANGENT.x, (_207 * _199) * _757));
    float _767 = fma(_759, _214 * NORMAL.y, fma(_758, _221 * TANGENT.y, (_207 * _200) * _757));
    float _770 = fma(_759, _214 * NORMAL.z, fma(_758, _221 * TANGENT.z, (_207 * _201) * _757));
    float _774 = inversesqrt(dot(vec3(_764, _767, _770), vec3(_764, _767, _770)));
    float _1086 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _1097 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _776 = isnan(1.0) ? _1097 : (isnan(_1097) ? 1.0 : min(_1097, 1.0));
    float _1108 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _777 = isnan(1.0) ? _1108 : (isnan(_1108) ? 1.0 : min(_1108, 1.0));
    float _1119 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _778 = isnan(1.0) ? _1119 : (isnan(_1119) ? 1.0 : min(_1119, 1.0));
    float _1130 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _779 = isnan(1.0) ? _1130 : (isnan(_1130) ? 1.0 : min(_1130, 1.0));
    float _1141 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _820 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _830 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _820);
    float _831 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _820);
    float _832 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _820);
    vec4 _837 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _839 = _837.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _899 = sqrt(((_830 * _830) + (_831 * _831)) + (_832 * _832));
        float _905 = (cbMatDynParam._m0[5u].x * _899) + cbMatDynParam._m0[5u].y;
        float _1152 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
        float _906 = isnan(1.0) ? _1152 : (isnan(_1152) ? 1.0 : min(_1152, 1.0));
        float _910 = (cbMatDynParam._m0[5u].z * _899) + cbMatDynParam._m0[5u].w;
        float _1163 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0))) - _906)) + _906) < ((_839 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _937;
    vec4 _861;
    float _868;
    float _869;
    float _870;
    float _871;
    float _875;
    vec4 _879;
    float _881;
    float _882;
    bool _893;
    for (;;)
    {
        _861 = cbInstanceData._m0[(_227 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _865 = (cbMtdParam._m0[0u].x * _777) * _861.x;
        float _866 = (cbMtdParam._m0[0u].y * _778) * _861.y;
        float _867 = (cbMtdParam._m0[0u].z * _779) * _861.z;
        float _1174 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
        _868 = isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0));
        float _1185 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        _869 = isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0));
        float _1196 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
        _870 = isnan(1.0) ? _1196 : (isnan(_1196) ? 1.0 : min(_1196, 1.0));
        _871 = _776 * TEXCOORD_5.w;
        _875 = cbInstanceData._m0[_227 + 6u].w;
        float _876 = _839 + (-0.5);
        _879 = cbMtdParam._m0[1u];
        _881 = _879.y * _876;
        _882 = _876 * 0.999000012874603271484375;
        _893 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_893)
        {
            if ((cbInstanceData._m0[_227 + 7u].x + _882) < 0.5)
            {
                _937 = true;
                break;
            }
        }
        if ((_861.w < 1.0) && ((_861.w + _882) < 0.5))
        {
            _937 = true;
            break;
        }
        if ((_881 + 1.0) < _879.x)
        {
            _937 = true;
            break;
        }
        _937 = false;
        break;
    }
    if (_937)
    {
        discard_state = true;
    }
    bool _963 = cbMtdParam._m0[1u].z != 0.0;
    float _964 = _963 ? _875 : 0.0;
    SV_Target.x = ((_764 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.y = ((_767 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.z = ((_770 * 0.5) * _774) + 0.500488758087158203125;
    SV_Target.w = _964;
    SV_Target_1.x = isnan(1.0) ? _1141 : (isnan(_1141) ? 1.0 : min(_1141, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1086 : (isnan(_1086) ? 1.0 : min(_1086, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _963 ? _875 : _871;
    SV_Target_2.x = _868;
    SV_Target_2.y = _869;
    SV_Target_2.z = _870;
    SV_Target_2.w = _963 ? _875 : (float(floatBitsToUint(cbInstanceData._m0[_227 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _964;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _964;
    discard_exit();
}


