#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1609;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _243 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _244 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _245 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _251 = inversesqrt(dot(vec3(_243, _244, _245), vec3(_243, _244, _245)));
    float _252 = _251 * _243;
    float _253 = _251 * _244;
    float _254 = _251 * _245;
    float _258 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _259 = _258 * NORMAL.x;
    float _260 = _258 * NORMAL.y;
    float _261 = _258 * NORMAL.z;
    float _265 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = _265 * TANGENT.x;
    float _267 = _265 * TANGENT.y;
    float _268 = _265 * TANGENT.z;
    uint _271 = uint(roundEven(NORMAL.w)) * 13u;
    uint _276 = _271 + 1u;
    uint _280 = _271 + 2u;
    float _289 = sqrt(((cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x) + (cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x)) + (cbInstanceData._m0[_280].x * cbInstanceData._m0[_280].x));
    float _290 = _289 * TEXCOORD.z;
    float _291 = _289 * TEXCOORD.w;
    vec4 _311 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _317 = _311.x * cbMtdParam._m0[11u].x;
    float _318 = _311.y * cbMtdParam._m0[11u].y;
    float _319 = _311.z * cbMtdParam._m0[11u].z;
    vec4 _338 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _290) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _291) + cbTextureTilingScale._m0[5u].w));
    vec4 _357 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _396 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _398 = _396.x;
    float _410 = dot(vec4(_398, _396.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _427 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _357.x) * 2.0) - ((((_398 - _410) * cbMtdParam._m0[23u].w) + _410) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4214 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _428 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _435 = (_428 * ((_338.x * cbMtdParam._m0[12u].x) - _317)) + _317;
    float _436 = (_428 * ((_338.y * cbMtdParam._m0[12u].y) - _318)) + _318;
    float _437 = (_428 * ((_338.z * cbMtdParam._m0[12u].z) - _319)) + _319;
    vec4 _454 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _290) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _291) + cbTextureTilingScale._m0[3u].w));
    vec4 _474 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _476 = _474.x;
    float _486 = dot(vec4(_476, _474.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _500 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _357.y) * 2.0) - ((((_476 - _486) * cbMtdParam._m0[23u].w) + _486) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4225 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _501 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _508 = (_501 * ((_454.x * cbMtdParam._m0[13u].x) - _435)) + _435;
    float _509 = (_501 * ((_454.y * cbMtdParam._m0[13u].y) - _436)) + _436;
    float _510 = (_501 * ((_454.z * cbMtdParam._m0[13u].z) - _437)) + _437;
    vec4 _529 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _290) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _291) + cbTextureTilingScale._m0[24u].w));
    vec4 _546 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _548 = _546.x;
    float _558 = dot(vec4(_548, _546.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _570 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _357.z) * 2.0) - ((((_548 - _558) * cbMtdParam._m0[23u].w) + _558) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4236 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _571 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _578 = (_571 * ((_529.x * cbMtdParam._m0[14u].x) - _508)) + _508;
    float _579 = (_571 * ((_529.y * cbMtdParam._m0[14u].y) - _509)) + _509;
    float _580 = (_571 * ((_529.z * cbMtdParam._m0[14u].z) - _510)) + _510;
    vec4 _598 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _290) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _291) + cbTextureTilingScale._m0[14u].w));
    vec4 _618 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _290) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _291) + cbTextureTilingScale._m0[4u].w));
    vec4 _635 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _637 = _635.x;
    float _638 = _635.y;
    float _639 = _635.z;
    float _646 = ((_618.x - _637) * _428) + _637;
    float _647 = ((_618.y - _638) * _428) + _638;
    float _648 = ((_618.z - _639) * _428) + _639;
    vec4 _660 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _290) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _291) + cbTextureTilingScale._m0[2u].w));
    float _671 = ((_660.x - _646) * _501) + _646;
    float _672 = ((_660.y - _647) * _501) + _647;
    float _673 = ((_660.z - _648) * _501) + _648;
    vec4 _685 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _290) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _291) + cbTextureTilingScale._m0[23u].w));
    float _698 = ((_685.z - _673) * _571) + _673;
    float _701 = ((((_685.x - _671) * _571) + _671) * 2.0) + (-1.0);
    float _703 = ((((_685.y - _672) * _571) + _672) * 2.0) + (-1.0);
    float _704 = dot(vec2(_701, _703), vec2(_701, _703));
    float _4247 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _709 = sqrt(1.0 - (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0))));
    vec4 _723 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _735 = (((_723.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _701;
    float _736 = (((_723.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _703;
    float _739 = fma(_709, _259, fma(_736, _266, _735 * _252));
    float _742 = fma(_709, _260, fma(_736, _267, _735 * _253));
    float _745 = fma(_709, _261, fma(_736, _268, _735 * _254));
    float _749 = inversesqrt(dot(vec3(_739, _742, _745), vec3(_739, _742, _745)));
    vec4 _776 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _290) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _291) + cbTextureTilingScale._m0[11u].w));
    float _778 = _776.x;
    float _779 = 1.0 - _778;
    float _787 = (cbMtdParam._m0[19u].x + dot(vec4(_749 * _739, _749 * _742, _749 * _745, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_778 - _779) * cbMtdParam._m0[24u].z) + _779) * cbMtdParam._m0[21u].z);
    float _4258 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _788 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    float _790 = (-0.0) - cbMtdParam._m0[24u].x;
    float _792 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _793 = isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0));
    float _800 = _788 - ((_788 * TEXCOORD_8.x) * _793);
    float _801 = _788 - ((_788 * TEXCOORD_8.y) * _793);
    float _802 = _788 - ((_788 * TEXCOORD_8.z) * _793);
    float _809 = (_800 * ((_598.x * cbMtdParam._m0[18u].x) - _578)) + _578;
    float _810 = (_801 * ((_598.y * cbMtdParam._m0[18u].y) - _579)) + _579;
    float _811 = (_802 * ((_598.z * cbMtdParam._m0[18u].z) - _580)) + _580;
    vec4 _823 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _290) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _291) + cbTextureTilingScale._m0[19u].w));
    float _825 = _823.x;
    float _826 = 1.0 - _825;
    float _852 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_825 - _826) * cbMtdParam._m0[24u].w) + _826) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4279 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _853 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
    float _861 = ((((cbMtdParam._m0[10u].x - _809) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _853) + _809;
    float _862 = ((((cbMtdParam._m0[10u].y - _810) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _853) + _810;
    float _863 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _811)) * _853) + _811;
    vec4 _889 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _891 = _889.x;
    float _909 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _290) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _291) + cbTextureTilingScale._m0[9u].w)).x - _891) * _428) + _891;
    float _926 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _290) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _291) + cbTextureTilingScale._m0[21u].w)).x - _909) * _501) + _909;
    float _943 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _290) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _291) + cbTextureTilingScale._m0[10u].w)).x - _926) * _571) + _926;
    float _947 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _943) * cbMtdParam._m0[19u].z) + _943;
    float _949 = _947 - (_947 * _800);
    float _951 = _949 - (_949 * _853);
    float _955 = (cbMtdParam._m0[19u].w * (_723.z - _698)) + _698;
    vec4 _971 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _290) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _291) + cbTextureTilingScale._m0[15u].w));
    float _978 = (_971.x * 2.0) + (-1.0);
    float _979 = (_971.y * 2.0) + (-1.0);
    float _980 = dot(vec2(_978, _979), vec2(_978, _979));
    float _4290 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _988 = ((_971.z - _955) * _800) + _955;
    float _991 = ((cbMtdParam._m0[23u].x - _988) * _853) + _988;
    vec4 _1014 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _290) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _291) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1020 = (_1014.x * 2.0) + (-1.0);
    float _1021 = (_1014.y * 2.0) + (-1.0);
    float _1022 = dot(vec2(_1020, _1021), vec2(_1020, _1021));
    float _4301 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1037 = ((sqrt(1.0 - (isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0)))) - _709) * _802) + _709;
    float _1040 = (((_978 - _735) * _800) + _735) + (cbMtdParam._m0[21u].x * _735);
    float _1041 = (((_979 - _736) * _801) + _736) + (cbMtdParam._m0[21u].x * _736);
    float _1052 = (((_1020 - _1040) + (_1040 * cbMtdParam._m0[22u].z)) * _853) + _1040;
    float _1053 = (((_1021 - _1041) + (_1041 * cbMtdParam._m0[22u].z)) * _853) + _1041;
    float _1054 = (_853 * (sqrt(1.0 - (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0)))) - _1037)) + _1037;
    float _1056 = cbMtdParam._m0[22u].x + _723.w;
    float _1059 = fma(_1054, _259, fma(_1053, _266, _1052 * _252));
    float _1062 = fma(_1054, _260, fma(_1053, _267, _1052 * _253));
    float _1065 = fma(_1054, _261, fma(_1053, _268, _1052 * _254));
    float _1069 = inversesqrt(dot(vec3(_1059, _1062, _1065), vec3(_1059, _1062, _1065)));
    float _1070 = _1069 * _1059;
    float _1071 = _1069 * _1062;
    float _1072 = _1069 * _1065;
    float _4312 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _1073 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
    float _4323 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    float _4334 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _4345 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _4356 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _4367 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _1078 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
    float _1092 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1132 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1142 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1132);
    float _1143 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1132);
    float _1144 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1132);
    float _1148 = inversesqrt(dot(vec3(_1142, _1143, _1144), vec3(_1142, _1143, _1144)));
    float _1149 = _1142 * _1148;
    float _1150 = _1143 * _1148;
    float _1151 = _1144 * _1148;
    float _1157 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1158 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1176 = fma(_1072, cbSceneParam._m0[5u].z, fma(_1071, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1070));
    float _1179 = fma(_1072, cbSceneParam._m0[6u].z, fma(_1071, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1070));
    float _1182 = fma(_1072, cbSceneParam._m0[7u].z, fma(_1071, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1070));
    uint _1196 = (_271 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1202 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0)))) * cbInstanceData._m0[_1196].x;
    float _1203 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0)))) * cbInstanceData._m0[_1196].y;
    float _1204 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0)))) * cbInstanceData._m0[_1196].z;
    float _4378 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
    float _1205 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
    float _4389 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
    float _1206 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
    float _4400 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
    float _1207 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
    float _1208 = 1.0 - _1078;
    float _1209 = _1205 * _1208;
    float _1210 = _1206 * _1208;
    float _1211 = _1207 * _1208;
    float _1216 = (_1205 + (-0.039999999105930328369140625)) * _1078;
    float _1217 = (_1206 + (-0.039999999105930328369140625)) * _1078;
    float _1218 = (_1207 + (-0.039999999105930328369140625)) * _1078;
    float _1219 = _1216 + 0.039999999105930328369140625;
    float _1221 = _1217 + 0.039999999105930328369140625;
    float _1222 = _1218 + 0.039999999105930328369140625;
    vec4 _1231 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1157, cbSceneParam._m0[86u].y * _1158));
    float _1235 = ((isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * TEXCOORD_5.w) * _1231.x;
    float _1236 = dot(vec3(_1070, _1071, _1072), vec3(_1149, _1150, _1151));
    float _1239 = _1236 * 2.0;
    float _1243 = (_1239 * _1070) - _1149;
    float _1244 = (_1239 * _1071) - _1150;
    float _1245 = (_1239 * _1072) - _1151;
    float _1249 = abs(dot(vec3(_1149, _1150, _1151), vec3(_1070, _1071, _1072)));
    float _4411 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    float _1251 = sqrt(_1073);
    float _1264 = exp2((_1251 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1251 * 3.0));
    float _1270 = (1.0 - _1264) * ((_1251 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1271 = _1264 * _1251;
    float _1299 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1303 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1307 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1608;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1333 = fma(_1307, cbModelParam._m0[26u].z, fma(_1303, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1299));
        float _1337 = fma(_1307, cbModelParam._m0[27u].z, fma(_1303, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1299));
        float _1341 = fma(_1307, cbModelParam._m0[28u].z, fma(_1303, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1299));
        float _1366 = _1299 + _1070;
        float _1367 = _1303 + _1071;
        float _1368 = _1307 + _1072;
        float _1378 = fma(_1368, cbModelParam._m0[26u].z, fma(_1367, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1366)) - _1333;
        float _1379 = fma(_1368, cbModelParam._m0[27u].z, fma(_1367, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1366)) - _1337;
        float _1380 = fma(_1368, cbModelParam._m0[28u].z, fma(_1367, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1366)) - _1341;
        float _1384 = inversesqrt(dot(vec3(_1378, _1379, _1380), vec3(_1378, _1379, _1380)));
        float _1397 = ((_1384 * _1378) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1333 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1398 = ((_1384 * _1379) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1337 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1399 = ((_1384 * _1380) / cbModelParam._m0[34u].z) + ((((((_1341 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1423 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        float _1436 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1402.x + (-0.5));
        float _1438 = _1436 * (_1402.y + (-0.5));
        float _1439 = _1436 * (_1402.z + (-0.5));
        float _1446 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1447 = _1446 * (_1409.x + (-0.5));
        float _1448 = _1446 * (_1409.y + (-0.5));
        float _1449 = _1446 * (_1409.z + (-0.5));
        float _1456 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1457 = _1456 * (_1416.x + (-0.5));
        float _1458 = _1456 * (_1416.y + (-0.5));
        float _1459 = _1456 * (_1416.z + (-0.5));
        float _1466 = exp2((_1423.w + (-0.5)) * 20.0) * 2.0;
        float _1467 = _1466 * (_1423.x + (-0.5));
        float _1468 = _1466 * (_1423.y + (-0.5));
        float _1469 = _1466 * (_1423.z + (-0.5));
        float _1470 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1471 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = _1437 * 0.5;
        float _1474 = _1447 * 0.5;
        float _1475 = _1457 * 0.5;
        float _1476 = dot(vec3(_1473, _1474, _1475), vec3(_1473, _1474, _1475));
        float _1481 = (_1476 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1476);
        float _1490 = (dot(vec3(_1070, _1071, _1072), vec3(_1481 * _1473, _1481 * _1474, _1481 * _1475)) + 1.0) * 0.5;
        float _4437 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1500 = sqrt(((_1474 * _1474) + (_1473 * _1473)) + (_1475 * _1475)) / (_1470 + 9.9999997473787516355514526367188e-06);
        float _4448 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _4459 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_1502 + 1.0))) + _1507) * _1470;
        float _1517 = _1438 * 0.5;
        float _1518 = _1448 * 0.5;
        float _1519 = _1458 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_1070, _1071, _1072), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4470 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1471 + 9.9999997473787516355514526367188e-06);
        float _4481 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4492 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_1544 + 1.0))) + _1549) * _1471;
        float _1559 = _1439 * 0.5;
        float _1560 = _1449 * 0.5;
        float _1561 = _1459 * 0.5;
        float _1562 = dot(vec3(_1559, _1560, _1561), vec3(_1559, _1560, _1561));
        float _1567 = (_1562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1562);
        float _1575 = (dot(vec3(_1070, _1071, _1072), vec3(_1567 * _1559, _1567 * _1560, _1567 * _1561)) + 1.0) * 0.5;
        float _4503 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1584 = sqrt(((_1560 * _1560) + (_1559 * _1559)) + (_1561 * _1561)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4514 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _1586 = _1585 * 2.0;
        float _1590 = (1.0 - _1585) / (_1585 + 1.0);
        float _4525 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1591 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _1600 = ((((1.0 - _1591) * (_1586 + 2.0)) * exp2(log2(isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0))) * (_1586 + 1.0))) + _1591) * _1472;
        _1608 = _1439;
        _1610 = _1438;
        _1611 = _1437;
        _1612 = _1449;
        _1613 = _1448;
        _1614 = _1447;
        _1615 = _1459;
        _1616 = _1458;
        _1617 = _1457;
        _1618 = _1472;
        _1619 = _1471;
        _1620 = _1470;
        _1621 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1622 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
        _1623 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0)));
    }
    else
    {
        _1608 = _1609;
        _1610 = _1609;
        _1611 = _1609;
        _1612 = _1609;
        _1613 = _1609;
        _1614 = _1609;
        _1615 = _1609;
        _1616 = _1609;
        _1617 = _1609;
        _1618 = _1609;
        _1619 = _1609;
        _1620 = _1609;
        _1621 = 0.0;
        _1622 = 0.0;
        _1623 = 0.0;
    }
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    float _1929;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1646 = fma(_1307, cbModelParam._m0[30u].z, fma(_1303, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1299));
        float _1650 = fma(_1307, cbModelParam._m0[31u].z, fma(_1303, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1299));
        float _1654 = fma(_1307, cbModelParam._m0[32u].z, fma(_1303, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1299));
        float _1677 = _1299 + _1070;
        float _1678 = _1303 + _1071;
        float _1679 = _1307 + _1072;
        float _1689 = fma(_1679, cbModelParam._m0[30u].z, fma(_1678, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1677)) - _1646;
        float _1690 = fma(_1679, cbModelParam._m0[31u].z, fma(_1678, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1677)) - _1650;
        float _1691 = fma(_1679, cbModelParam._m0[32u].z, fma(_1678, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1677)) - _1654;
        float _1695 = inversesqrt(dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691)));
        float _1708 = ((_1695 * _1689) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1646 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1709 = ((_1695 * _1690) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1650 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1710 = ((_1695 * _1691) / cbModelParam._m0[35u].z) + ((((((_1654 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1712 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1719 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1726 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1733 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        float _1745 = exp2((_1712.w + (-0.5)) * 20.0) * 2.0;
        float _1746 = _1745 * (_1712.x + (-0.5));
        float _1747 = _1745 * (_1712.y + (-0.5));
        float _1748 = _1745 * (_1712.z + (-0.5));
        float _1755 = exp2((_1719.w + (-0.5)) * 20.0) * 2.0;
        float _1756 = _1755 * (_1719.x + (-0.5));
        float _1757 = _1755 * (_1719.y + (-0.5));
        float _1758 = _1755 * (_1719.z + (-0.5));
        float _1765 = exp2((_1726.w + (-0.5)) * 20.0) * 2.0;
        float _1766 = _1765 * (_1726.x + (-0.5));
        float _1767 = _1765 * (_1726.y + (-0.5));
        float _1768 = _1765 * (_1726.z + (-0.5));
        float _1775 = exp2((_1733.w + (-0.5)) * 20.0) * 2.0;
        float _1776 = _1775 * (_1733.x + (-0.5));
        float _1777 = _1775 * (_1733.y + (-0.5));
        float _1778 = _1775 * (_1733.z + (-0.5));
        float _1779 = isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0));
        float _1780 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1781 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1782 = _1746 * 0.5;
        float _1783 = _1756 * 0.5;
        float _1784 = _1766 * 0.5;
        float _1785 = dot(vec3(_1782, _1783, _1784), vec3(_1782, _1783, _1784));
        float _1790 = (_1785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1785);
        float _1798 = (dot(vec3(_1070, _1071, _1072), vec3(_1790 * _1782, _1790 * _1783, _1790 * _1784)) + 1.0) * 0.5;
        float _4566 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1807 = sqrt(((_1783 * _1783) + (_1782 * _1782)) + (_1784 * _1784)) / (_1779 + 9.9999997473787516355514526367188e-06);
        float _4577 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
        float _1808 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
        float _1809 = _1808 * 2.0;
        float _1813 = (1.0 - _1808) / (_1808 + 1.0);
        float _4588 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1814 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
        float _1823 = ((((1.0 - _1814) * (_1809 + 2.0)) * exp2(log2(isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0))) * (_1809 + 1.0))) + _1814) * _1779;
        float _1824 = _1747 * 0.5;
        float _1825 = _1757 * 0.5;
        float _1826 = _1767 * 0.5;
        float _1827 = dot(vec3(_1824, _1825, _1826), vec3(_1824, _1825, _1826));
        float _1832 = (_1827 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1827);
        float _1840 = (dot(vec3(_1070, _1071, _1072), vec3(_1832 * _1824, _1832 * _1825, _1832 * _1826)) + 1.0) * 0.5;
        float _4599 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1849 = sqrt(((_1825 * _1825) + (_1824 * _1824)) + (_1826 * _1826)) / (_1780 + 9.9999997473787516355514526367188e-06);
        float _4610 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1850 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
        float _1851 = _1850 * 2.0;
        float _1855 = (1.0 - _1850) / (_1850 + 1.0);
        float _4621 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1856 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
        float _1865 = ((((1.0 - _1856) * (_1851 + 2.0)) * exp2(log2(isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0))) * (_1851 + 1.0))) + _1856) * _1780;
        float _1866 = _1748 * 0.5;
        float _1867 = _1758 * 0.5;
        float _1868 = _1768 * 0.5;
        float _1869 = dot(vec3(_1866, _1867, _1868), vec3(_1866, _1867, _1868));
        float _1874 = (_1869 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1869);
        float _1882 = (dot(vec3(_1070, _1071, _1072), vec3(_1874 * _1866, _1874 * _1867, _1874 * _1868)) + 1.0) * 0.5;
        float _4632 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
        float _1891 = sqrt(((_1867 * _1867) + (_1866 * _1866)) + (_1868 * _1868)) / (_1781 + 9.9999997473787516355514526367188e-06);
        float _4643 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1892 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
        float _1893 = _1892 * 2.0;
        float _1897 = (1.0 - _1892) / (_1892 + 1.0);
        float _4654 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _1898 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
        float _1907 = ((((1.0 - _1898) * (_1893 + 2.0)) * exp2(log2(isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0))) * (_1893 + 1.0))) + _1898) * _1781;
        _1915 = _1748;
        _1916 = _1747;
        _1917 = _1746;
        _1918 = _1758;
        _1919 = _1757;
        _1920 = _1756;
        _1921 = _1768;
        _1922 = _1767;
        _1923 = _1766;
        _1924 = _1781;
        _1925 = _1780;
        _1926 = _1779;
        _1927 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)));
        _1928 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0)));
        _1929 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0)));
    }
    else
    {
        _1915 = _1609;
        _1916 = _1609;
        _1917 = _1609;
        _1918 = _1609;
        _1919 = _1609;
        _1920 = _1609;
        _1921 = _1609;
        _1922 = _1609;
        _1923 = _1609;
        _1924 = _1609;
        _1925 = _1609;
        _1926 = _1609;
        _1927 = 0.0;
        _1928 = 0.0;
        _1929 = 0.0;
    }
    float _1939 = (cbModelParam._m0[1u].x * (_1927 - _1621)) + _1621;
    float _1940 = (cbModelParam._m0[1u].x * (_1928 - _1622)) + _1622;
    float _1941 = (cbModelParam._m0[1u].x * (_1929 - _1623)) + _1623;
    float _1962 = fma(_1941, cbSceneParam._m0[89u].z, fma(_1940, cbSceneParam._m0[89u].y, _1939 * cbSceneParam._m0[89u].x));
    float _1965 = fma(_1941, cbSceneParam._m0[90u].z, fma(_1940, cbSceneParam._m0[90u].y, _1939 * cbSceneParam._m0[90u].x));
    float _1968 = fma(_1941, cbSceneParam._m0[91u].z, fma(_1940, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1939));
    float _1983 = _1243 * 0.5;
    float _1984 = _1244 * 0.5;
    float _1985 = _1245 * 0.5;
    float _1986 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1917, _1920, _1923, _1926));
    float _1989 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1916, _1919, _1922, _1925));
    float _1992 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1915, _1918, _1921, _1924));
    float _2026;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1999 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1608, _1612, _1615, _1618));
        float _2003 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1610, _1613, _1616, _1619));
        float _2007 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1611, _1614, _1617, _1620));
        float _2014 = dot(vec4(cbModelParam._m0[39u]), vec4(_1983, _1984, _1985, 1.0));
        _2026 = dot(vec3(isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0)), isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0)), isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2014) ? 0.0 : (isnan(0.0) ? _2014 : max(0.0, _2014))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2026 = 1.0;
    }
    float _2037;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2028 = dot(vec4(cbModelParam._m0[40u]), vec4(_1983, _1984, _1985, 1.0));
        _2037 = dot(vec3(isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0)), isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0)), isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2028) ? 0.0 : (isnan(0.0) ? _2028 : max(0.0, _2028))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2037 = 1.0;
    }
    float _2041 = (_2037 * cbModelParam._m0[1u].x) + (_2026 * (1.0 - cbModelParam._m0[1u].x));
    float _2051 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1073);
    float _2052 = isnan(_2051) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2051 : min(cbModelParam._m0[25u].z, _2051));
    float _2132;
    float _2134;
    float _2136;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2099 = fma(_1307, cbModelParam._m0[13u].z, fma(_1303, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1299)) + cbModelParam._m0[13u].w;
        float _2103 = fma(_1307, cbModelParam._m0[14u].z, fma(_1303, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1299)) + cbModelParam._m0[14u].w;
        float _2107 = fma(_1307, cbModelParam._m0[15u].z, fma(_1303, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1299)) + cbModelParam._m0[15u].w;
        float _2110 = fma(_1245, cbModelParam._m0[13u].z, fma(_1244, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1243));
        float _2113 = fma(_1245, cbModelParam._m0[14u].z, fma(_1244, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1243));
        float _2116 = fma(_1245, cbModelParam._m0[15u].z, fma(_1244, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1243));
        float _2144;
        if (_2110 > 0.0)
        {
            _2144 = abs((1.0 - _2099) / _2110);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2110 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2099 + 1.0) / _2110);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2144 = frontier_phi_14_12_ladder;
        }
        float _2315;
        if (_2113 > 0.0)
        {
            _2315 = abs((1.0 - _2103) / _2113);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2113 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2103 + 1.0) / _2113);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2315 = frontier_phi_23_19_ladder;
        }
        float _2610;
        if (_2116 > 0.0)
        {
            _2610 = abs((1.0 - _2107) / _2116);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2116 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2107 + 1.0) / _2116);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2610 = frontier_phi_35_30_ladder;
        }
        float _2612 = isnan(_2315) ? _2144 : (isnan(_2144) ? _2315 : min(_2144, _2315));
        float _2613 = isnan(_2610) ? _2612 : (isnan(_2612) ? _2610 : min(_2612, _2610));
        float _2617 = (_2613 * _2110) + _2099;
        float _2618 = (_2613 * _2113) + _2103;
        float _2619 = (_2613 * _2116) + _2107;
        float _2620 = _2613 * 9.9999997473787516355514526367188e-05;
        float _2622 = (-1.0) - _2620;
        float _2624 = _2620 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2619 > _2624) || ((_2619 < _2622) || ((_2618 > _2624) || ((_2618 < _2622) || ((_2617 < _2622) || (_2617 > _2624))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2764 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2619, cbModelParam._m0[9u].z, fma(_2618, cbModelParam._m0[9u].y, _2617 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2619, cbModelParam._m0[10u].z, fma(_2618, cbModelParam._m0[10u].y, _2617 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2619, cbModelParam._m0[11u].z, fma(_2618, cbModelParam._m0[11u].y, _2617 * cbModelParam._m0[11u].x))), _2052);
            frontier_phi_13_35_ladder = _2764.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2764.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2764.x * cbModelParam._m0[1u].y;
        }
        _2132 = frontier_phi_13_35_ladder_2;
        _2134 = frontier_phi_13_35_ladder_1;
        _2136 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2120 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1243, _1244, _1245), _2052);
        _2132 = _2120.x * cbModelParam._m0[1u].y;
        _2134 = _2120.y * cbModelParam._m0[1u].y;
        _2136 = _2120.z * cbModelParam._m0[1u].y;
    }
    float _2140 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1073);
    float _2141 = isnan(_2140) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2140 : min(cbModelParam._m0[25u].w, _2140));
    float _2230;
    float _2232;
    float _2234;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2194 = fma(_1307, cbModelParam._m0[21u].z, fma(_1303, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1299)) + cbModelParam._m0[21u].w;
        float _2198 = fma(_1307, cbModelParam._m0[22u].z, fma(_1303, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1299)) + cbModelParam._m0[22u].w;
        float _2202 = fma(_1307, cbModelParam._m0[23u].z, fma(_1303, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1299)) + cbModelParam._m0[23u].w;
        float _2205 = fma(_1245, cbModelParam._m0[21u].z, fma(_1244, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1243));
        float _2208 = fma(_1245, cbModelParam._m0[22u].z, fma(_1244, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1243));
        float _2211 = fma(_1245, cbModelParam._m0[23u].z, fma(_1244, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1243));
        float _2320;
        if (_2205 > 0.0)
        {
            _2320 = abs((1.0 - _2194) / _2205);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2205 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2194 + 1.0) / _2205);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2320 = frontier_phi_25_21_ladder;
        }
        float _2637;
        if (_2208 > 0.0)
        {
            _2637 = abs((1.0 - _2198) / _2208);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2208 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2198 + 1.0) / _2208);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2637 = frontier_phi_37_32_ladder;
        }
        float _2975;
        if (_2211 > 0.0)
        {
            _2975 = abs((1.0 - _2202) / _2211);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2211 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2202 + 1.0) / _2211);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2975 = frontier_phi_47_44_ladder;
        }
        float _2977 = isnan(_2637) ? _2320 : (isnan(_2320) ? _2637 : min(_2320, _2637));
        float _2978 = isnan(_2975) ? _2977 : (isnan(_2977) ? _2975 : min(_2977, _2975));
        float _2982 = (_2978 * _2205) + _2194;
        float _2983 = (_2978 * _2208) + _2198;
        float _2984 = (_2978 * _2211) + _2202;
        float _2985 = _2978 * 9.9999997473787516355514526367188e-05;
        float _2986 = (-1.0) - _2985;
        float _2988 = _2985 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2984 > _2988) || ((_2984 < _2986) || ((_2983 > _2988) || ((_2983 < _2986) || ((_2982 < _2986) || (_2982 > _2988))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3106 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2984, cbModelParam._m0[17u].z, fma(_2983, cbModelParam._m0[17u].y, _2982 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2984, cbModelParam._m0[18u].z, fma(_2983, cbModelParam._m0[18u].y, _2982 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2984, cbModelParam._m0[19u].z, fma(_2983, cbModelParam._m0[19u].y, _2982 * cbModelParam._m0[19u].x))), _2141);
            frontier_phi_22_47_ladder = _3106.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3106.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3106.x * cbModelParam._m0[1u].z;
        }
        _2230 = frontier_phi_22_47_ladder_2;
        _2232 = frontier_phi_22_47_ladder_1;
        _2234 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2214 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1243, _1244, _1245), _2141);
        _2230 = _2214.x * cbModelParam._m0[1u].z;
        _2232 = _2214.y * cbModelParam._m0[1u].z;
        _2234 = _2214.z * cbModelParam._m0[1u].z;
    }
    float _2247 = (((_1270 * _1219) + _1271) * _1235) * ((cbModelParam._m0[1u].w * (_2230 - _2132)) + _2132);
    float _2249 = (((_1270 * _1221) + _1271) * _1235) * ((cbModelParam._m0[1u].w * (_2232 - _2134)) + _2134);
    float _2251 = (((_1270 * _1222) + _1271) * _1235) * ((cbModelParam._m0[1u].w * (_2234 - _2136)) + _2136);
    float _2254 = fma(_2251, cbSceneParam._m0[89u].z, fma(_2249, cbSceneParam._m0[89u].y, _2247 * cbSceneParam._m0[89u].x));
    float _2257 = fma(_2251, cbSceneParam._m0[90u].z, fma(_2249, cbSceneParam._m0[90u].y, _2247 * cbSceneParam._m0[90u].x));
    float _2260 = fma(_2251, cbSceneParam._m0[91u].z, fma(_2249, cbSceneParam._m0[91u].y, _2247 * cbSceneParam._m0[91u].x));
    float _2294 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2298 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2302 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2306 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2307 = _2294 / _2306;
    float _2308 = _2298 / _2306;
    float _2309 = _2302 / _2306;
    float _2456;
    float _2457;
    float _2458;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2336 = ((uint(_2309 > cbSceneParam._m0[59u].y) + uint(_2309 > cbSceneParam._m0[59u].x)) + uint(_2309 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2337 = _2336 + 43u;
        uint _2345 = _2336 + 44u;
        uint _2353 = _2336 + 45u;
        uint _2361 = _2336 + 46u;
        float _2372 = fma(_2306, cbSceneParam._m0[_2337].w, fma(_2302, cbSceneParam._m0[_2337].z, fma(_2298, cbSceneParam._m0[_2337].y, _2294 * cbSceneParam._m0[_2337].x)));
        float _2376 = fma(_2306, cbSceneParam._m0[_2345].w, fma(_2302, cbSceneParam._m0[_2345].z, fma(_2298, cbSceneParam._m0[_2345].y, _2294 * cbSceneParam._m0[_2345].x)));
        float _2384 = fma(_2306, cbSceneParam._m0[_2361].w, fma(_2302, cbSceneParam._m0[_2361].z, fma(_2298, cbSceneParam._m0[_2361].y, _2294 * cbSceneParam._m0[_2361].x)));
        float _2389 = cbSceneParam._m0[33u].z * _2384;
        float _2391 = cbSceneParam._m0[33u].w * _2384;
        float _2394 = fma(_2306, cbSceneParam._m0[_2353].w, fma(_2302, cbSceneParam._m0[_2353].z, fma(_2298, cbSceneParam._m0[_2353].y, _2294 * cbSceneParam._m0[_2353].x))) / _2384;
        float _2442 = (cbSceneParam._m0[33u].x - sqrt(((_2308 * _2308) + (_2307 * _2307)) + (_2309 * _2309))) * cbSceneParam._m0[33u].y;
        float _4780 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
        float _2449 = (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2389 + _2372) / _2384, (_2391 + _2376) / _2384), _2394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2391 + _2372) / _2384, (_2376 - _2389) / _2384), _2394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2372 - _2389) / _2384, (_2376 - _2391) / _2384), _2394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2372 - _2391) / _2384, (_2389 + _2376) / _2384), _2394), 0.0)).x), vec4(0.25)));
        _2456 = 1.0 - (_2449 * cbSceneParam._m0[34u].x);
        _2457 = 1.0 - (_2449 * cbSceneParam._m0[34u].y);
        _2458 = 1.0 - (_2449 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2456 = 1.0;
        _2457 = 1.0;
        _2458 = 1.0;
    }
    float _2522;
    float _2524;
    float _2526;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2510 = fma(_2306, cbSceneParam._m0[63u].w, fma(_2302, cbSceneParam._m0[63u].z, fma(_2298, cbSceneParam._m0[63u].y, _2294 * cbSceneParam._m0[63u].x)));
        float _2511 = fma(_2306, cbSceneParam._m0[60u].w, fma(_2302, cbSceneParam._m0[60u].z, fma(_2298, cbSceneParam._m0[60u].y, _2294 * cbSceneParam._m0[60u].x))) / _2510;
        float _2512 = fma(_2306, cbSceneParam._m0[61u].w, fma(_2302, cbSceneParam._m0[61u].z, fma(_2298, cbSceneParam._m0[61u].y, _2294 * cbSceneParam._m0[61u].x))) / _2510;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2511 >= cbSceneParam._m0[64u].x) && (_2512 >= cbSceneParam._m0[64u].y)) && (_2511 <= cbSceneParam._m0[64u].z)) && (_2512 <= cbSceneParam._m0[64u].w))
        {
            float _2650 = fma(_2306, cbSceneParam._m0[62u].w, fma(_2302, cbSceneParam._m0[62u].z, fma(_2298, cbSceneParam._m0[62u].y, _2294 * cbSceneParam._m0[62u].x))) / _2510;
            float _2654 = isnan(cbSceneParam._m0[41u].w) ? _2650 : (isnan(_2650) ? cbSceneParam._m0[41u].w : max(_2650, cbSceneParam._m0[41u].w));
            float _2697 = (cbSceneParam._m0[33u].x - sqrt(((_2308 * _2308) + (_2307 * _2307)) + (_2309 * _2309))) * cbSceneParam._m0[33u].y;
            float _4796 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
            float _2704 = (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2511, cbSceneParam._m0[33u].w + _2512), _2654), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2511, _2512 - cbSceneParam._m0[33u].z), _2654), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2511 - cbSceneParam._m0[33u].z, _2512 - cbSceneParam._m0[33u].w), _2654), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2511 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2512), _2654), 0.0)).x), vec4(0.25)));
            float _2708 = 1.0 - (_2704 * cbSceneParam._m0[34u].x);
            float _2709 = 1.0 - (_2704 * cbSceneParam._m0[34u].y);
            float _2710 = 1.0 - (_2704 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2710) ? _2458 : (isnan(_2458) ? _2710 : min(_2458, _2710));
            frontier_phi_34_33_ladder_1 = isnan(_2709) ? _2457 : (isnan(_2457) ? _2709 : min(_2457, _2709));
            frontier_phi_34_33_ladder_2 = isnan(_2708) ? _2456 : (isnan(_2456) ? _2708 : min(_2456, _2708));
        }
        else
        {
            frontier_phi_34_33_ladder = _2458;
            frontier_phi_34_33_ladder_1 = _2457;
            frontier_phi_34_33_ladder_2 = _2456;
        }
        _2522 = frontier_phi_34_33_ladder_2;
        _2524 = frontier_phi_34_33_ladder_1;
        _2526 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2522 = _2456;
        _2524 = _2457;
        _2526 = _2458;
    }
    uvec4 _2531 = floatBitsToUint(cbInstanceData._m0[_271 + 5u]);
    uint _2533 = _2531.x * 14u;
    uint _2534 = _2533 + 13u;
    float _2541 = _1235 + (-1.0);
    float _2546 = (cbLight._m0[_2534].x * _2541) + 1.0;
    float _2547 = (cbLight._m0[_2534].y * _2541) + 1.0;
    float _2548 = (cbLight._m0[_2534].z * _2541) + 1.0;
    float _2549 = (cbLight._m0[_2534].w * _2541) + 1.0;
    uint _2550 = _2533 + 5u;
    float _2556 = isnan(1.0) ? _2547 : (isnan(_2547) ? 1.0 : min(_2547, 1.0));
    uint _2560 = _2533 + 4u;
    float _2569 = isnan(1.0) ? _2546 : (isnan(_2546) ? 1.0 : min(_2546, 1.0));
    uint _2573 = _2533 | 1u;
    float _2584 = dot(vec3(cbLight._m0[_2533].xyz), vec3(_1070, _1071, _1072));
    float _2587 = dot(vec3(cbLight._m0[_2573].xyz), vec3(_1070, _1071, _1072));
    float _4832 = isnan(0.0) ? _2584 : (isnan(_2584) ? 0.0 : max(_2584, 0.0));
    float _4843 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
    float _2592 = (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * 0.3183098733425140380859375;
    float _2594 = (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0))) * 0.3183098733425140380859375;
    float _2601 = ((cbLight._m0[_2550].x * _2556) * _2594) + (((cbLight._m0[_2560].x * _2522) * _2569) * _2592);
    float _2602 = ((_2556 * cbLight._m0[_2550].y) * _2594) + (((cbLight._m0[_2560].y * _2524) * _2569) * _2592);
    float _2603 = ((_2556 * cbLight._m0[_2550].z) * _2594) + (((cbLight._m0[_2560].z * _2526) * _2569) * _2592);
    uvec4 _2607 = floatBitsToUint(cbLight._m0[_2533 + 12u]);
    bool _2609 = _2607.x == 0u;
    float _2711;
    float _2713;
    float _2715;
    if (_2609)
    {
        _2711 = _2601;
        _2713 = _2602;
        _2715 = _2603;
    }
    else
    {
        uint _2719 = _2533 + 6u;
        float _2735 = (dot(vec3(cbLight._m0[_2533 + 2u].xyz), vec3(_1070, _1071, _1072)) * 0.5) + 0.5;
        float _2736 = _2735 * _2735;
        float _4854 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
        float _2737 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
        float _2738 = isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0));
        _2711 = (((cbLight._m0[_2719].x * 0.3183098733425140380859375) * _2737) * _2738) + _2601;
        _2713 = (((cbLight._m0[_2719].y * 0.3183098733425140380859375) * _2737) * _2738) + _2602;
        _2715 = (((cbLight._m0[_2719].z * 0.3183098733425140380859375) * _2737) * _2738) + _2603;
    }
    bool _2718 = _2607.y == 0u;
    float _2773;
    float _2775;
    float _2777;
    if (_2718)
    {
        _2773 = _2711;
        _2775 = _2713;
        _2777 = _2715;
    }
    else
    {
        uint _2946 = _2533 + 7u;
        float _2962 = (dot(vec3(cbLight._m0[_2533 + 3u].xyz), vec3(_1070, _1071, _1072)) * 0.5) + 0.5;
        float _2963 = _2962 * _2962;
        float _4870 = isnan(0.0) ? _2963 : (isnan(_2963) ? 0.0 : max(_2963, 0.0));
        float _2964 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
        float _2965 = isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0));
        _2773 = (((cbLight._m0[_2946].x * 0.3183098733425140380859375) * _2964) * _2965) + _2711;
        _2775 = (((cbLight._m0[_2946].y * 0.3183098733425140380859375) * _2964) * _2965) + _2713;
        _2777 = (((cbLight._m0[_2946].z * 0.3183098733425140380859375) * _2964) * _2965) + _2715;
    }
    uint _2780 = _2533 + 8u;
    float _2793 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2533].w)) * _1073) * 0.949999988079071044921875);
    float _2794 = _2793 * _2793;
    float _2795 = cbLight._m0[_2533].x + _1149;
    float _2796 = cbLight._m0[_2533].y + _1150;
    float _2797 = cbLight._m0[_2533].z + _1151;
    float _2801 = inversesqrt(dot(vec3(_2795, _2796, _2797), vec3(_2795, _2796, _2797)));
    float _2802 = _2801 * _2795;
    float _2803 = _2801 * _2796;
    float _2804 = _2801 * _2797;
    float _2805 = dot(vec3(_1070, _1071, _1072), vec3(cbLight._m0[_2533].xyz));
    float _4886 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
    float _2808 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
    float _4897 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    float _2809 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
    float _2810 = dot(vec3(_1070, _1071, _1072), vec3(_2802, _2803, _2804));
    float _4908 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
    float _2813 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
    float _2814 = dot(vec3(cbLight._m0[_2533].xyz), vec3(_2802, _2803, _2804));
    float _4919 = isnan(0.0) ? _2814 : (isnan(_2814) ? 0.0 : max(_2814, 0.0));
    float _2818 = _2794 * _2794;
    float _2822 = ((_2813 * _2813) * (_2818 + (-1.0))) + 1.0;
    float _2830 = exp2(log2(1.0 - (isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0)))) * 5.0);
    float _2831 = 0.959999978542327880859375 - _1216;
    float _2833 = 0.959999978542327880859375 - _1217;
    float _2834 = 0.959999978542327880859375 - _1218;
    float _2841 = 1.0 - _2794;
    float _2852 = (0.5 / (((_2809 * ((_2808 * _2841) + _2794)) + 9.9999999392252902907785028219223e-09) + (((_2809 * _2841) + _2794) * _2808))) * _2808;
    float _4930 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
    float _2854 = (isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0))) * (_2818 / ((_2822 * _2822) * 3.141590118408203125));
    uint _2868 = _2533 + 9u;
    float _2879 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2573].w)) * _1073) * 0.949999988079071044921875);
    float _2880 = _2879 * _2879;
    float _2881 = cbLight._m0[_2573].x + _1149;
    float _2882 = cbLight._m0[_2573].y + _1150;
    float _2883 = cbLight._m0[_2573].z + _1151;
    float _2887 = inversesqrt(dot(vec3(_2881, _2882, _2883), vec3(_2881, _2882, _2883)));
    float _2888 = _2887 * _2881;
    float _2889 = _2887 * _2882;
    float _2890 = _2887 * _2883;
    float _2891 = dot(vec3(_1070, _1071, _1072), vec3(cbLight._m0[_2573].xyz));
    float _4941 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
    float _2894 = isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0));
    float _2895 = dot(vec3(_1070, _1071, _1072), vec3(_2888, _2889, _2890));
    float _4952 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
    float _2898 = isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0));
    float _2899 = dot(vec3(cbLight._m0[_2573].xyz), vec3(_2888, _2889, _2890));
    float _4963 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
    float _2903 = _2880 * _2880;
    float _2907 = ((_2898 * _2898) * (_2903 + (-1.0))) + 1.0;
    float _2914 = exp2(log2(1.0 - (isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0)))) * 5.0);
    float _2921 = 1.0 - _2880;
    float _2931 = (0.5 / (((_2809 * ((_2894 * _2921) + _2880)) + 9.9999999392252902907785028219223e-09) + (((_2809 * _2921) + _2880) * _2894))) * _2894;
    float _4974 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0));
    float _2933 = (isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0))) * (_2903 / ((_2907 * _2907) * 3.141590118408203125));
    float _2943 = (((((_2914 * _2831) + _1219) * cbLight._m0[_2868].x) * _2933) * _2556) + ((((cbLight._m0[_2780].x * _2522) * ((_2830 * _2831) + _1219)) * _2854) * _2569);
    float _2944 = (((((_2914 * _2833) + _1221) * cbLight._m0[_2868].y) * _2933) * _2556) + ((((cbLight._m0[_2780].y * _2524) * ((_2830 * _2833) + _1221)) * _2854) * _2569);
    float _2945 = (((((_2914 * _2834) + _1222) * cbLight._m0[_2868].z) * _2933) * _2556) + ((((cbLight._m0[_2780].z * _2526) * ((_2830 * _2834) + _1222)) * _2854) * _2569);
    float _3001;
    float _3003;
    float _3005;
    if (_2609)
    {
        _3001 = _2943;
        _3003 = _2944;
        _3005 = _2945;
    }
    else
    {
        uint _3007 = _2533 + 2u;
        uint _3011 = _2533 + 10u;
        float _3025 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3007].w)) * _1073) * 0.949999988079071044921875);
        float _3026 = _3025 * _3025;
        float _3027 = cbLight._m0[_3007].x + _1149;
        float _3028 = cbLight._m0[_3007].y + _1150;
        float _3029 = cbLight._m0[_3007].z + _1151;
        float _3033 = inversesqrt(dot(vec3(_3027, _3028, _3029), vec3(_3027, _3028, _3029)));
        float _3034 = _3033 * _3027;
        float _3035 = _3033 * _3028;
        float _3036 = _3033 * _3029;
        float _3037 = dot(vec3(_1070, _1071, _1072), vec3(cbLight._m0[_3007].xyz));
        float _4985 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0));
        float _3040 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
        float _3041 = dot(vec3(_1070, _1071, _1072), vec3(_3034, _3035, _3036));
        float _4996 = isnan(0.0) ? _3041 : (isnan(_3041) ? 0.0 : max(_3041, 0.0));
        float _3044 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
        float _3045 = dot(vec3(cbLight._m0[_3007].xyz), vec3(_3034, _3035, _3036));
        float _5007 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
        float _3049 = _3026 * _3026;
        float _3053 = ((_3044 * _3044) * (_3049 + (-1.0))) + 1.0;
        float _3060 = exp2(log2(1.0 - (isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0)))) * 5.0);
        float _3067 = 1.0 - _3026;
        float _3077 = (0.5 / (((_2809 * ((_3040 * _3067) + _3026)) + 9.9999999392252902907785028219223e-09) + (((_2809 * _3067) + _3026) * _3040))) * _3040;
        float _5018 = isnan(0.0) ? _3077 : (isnan(_3077) ? 0.0 : max(_3077, 0.0));
        float _3079 = (isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0))) * (_3049 / ((_3053 * _3053) * 3.141590118408203125));
        float _3080 = isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0));
        _3001 = (((((_3060 * _2831) + _1219) * cbLight._m0[_3011].x) * _3079) * _3080) + _2943;
        _3003 = (((((_3060 * _2833) + _1221) * cbLight._m0[_3011].y) * _3079) * _3080) + _2944;
        _3005 = (((((_3060 * _2834) + _1222) * cbLight._m0[_3011].z) * _3079) * _3080) + _2945;
    }
    float _3111;
    float _3113;
    float _3115;
    if (_2718)
    {
        _3111 = _3001;
        _3113 = _3003;
        _3115 = _3005;
    }
    else
    {
        uint _3122 = _2533 + 3u;
        uint _3126 = _2533 + 11u;
        float _3140 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3122].w)) * _1073) * 0.949999988079071044921875);
        float _3141 = _3140 * _3140;
        float _3142 = cbLight._m0[_3122].x + _1149;
        float _3143 = cbLight._m0[_3122].y + _1150;
        float _3144 = cbLight._m0[_3122].z + _1151;
        float _3148 = inversesqrt(dot(vec3(_3142, _3143, _3144), vec3(_3142, _3143, _3144)));
        float _3149 = _3148 * _3142;
        float _3150 = _3148 * _3143;
        float _3151 = _3148 * _3144;
        float _3152 = dot(vec3(_1070, _1071, _1072), vec3(cbLight._m0[_3122].xyz));
        float _5034 = isnan(0.0) ? _3152 : (isnan(_3152) ? 0.0 : max(_3152, 0.0));
        float _3155 = isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0));
        float _3156 = dot(vec3(_1070, _1071, _1072), vec3(_3149, _3150, _3151));
        float _5045 = isnan(0.0) ? _3156 : (isnan(_3156) ? 0.0 : max(_3156, 0.0));
        float _3159 = isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0));
        float _3160 = dot(vec3(cbLight._m0[_3122].xyz), vec3(_3149, _3150, _3151));
        float _5056 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0));
        float _3164 = _3141 * _3141;
        float _3168 = ((_3159 * _3159) * (_3164 + (-1.0))) + 1.0;
        float _3175 = exp2(log2(1.0 - (isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0)))) * 5.0);
        float _3182 = 1.0 - _3141;
        float _3192 = (0.5 / (((_2809 * ((_3155 * _3182) + _3141)) + 9.9999999392252902907785028219223e-09) + (((_2809 * _3182) + _3141) * _3155))) * _3155;
        float _5067 = isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0));
        float _3194 = (isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0))) * (_3164 / ((_3168 * _3168) * 3.141590118408203125));
        float _3195 = isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0));
        _3111 = (((((_3175 * _2831) + _1219) * cbLight._m0[_3126].x) * _3194) * _3195) + _3001;
        _3113 = (((((_3175 * _2833) + _1221) * cbLight._m0[_3126].y) * _3194) * _3195) + _3003;
        _3115 = (((((_3175 * _2834) + _1222) * cbLight._m0[_3126].z) * _3194) * _3195) + _3005;
    }
    float _3261;
    float _3263;
    float _3265;
    float _3267;
    float _3269;
    float _3271;
    if (_2531.y == 0u)
    {
        uvec4 _3216 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3217 = _3216.x;
        uint _3228 = uint((float(_3216.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1158) / _3217))) + floor(float(uint(cbSceneParam._m0[85u].x * _1157) / _3217)));
        float _3238 = (log2(_2309 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3239 = isnan(0.0) ? _3238 : (isnan(_3238) ? 0.0 : max(_3238, 0.0));
        uint _3242 = uint(isnan(14.0) ? _3239 : (isnan(_3239) ? 14.0 : min(_3239, 14.0)));
        uvec4 _3247 = texelFetch(g_lightClusterGridBuffer, int(((_3242 << 2u) + (_3228 << 6u)) >> 2u));
        uint _3248 = _3247.x;
        uint _3249 = _3216.z;
        float _3328;
        float _3330;
        float _3332;
        float _3334;
        float _3336;
        float _3338;
        if (((((1u << ((_3249 >> 4u) & 15u)) + 4294967295u) & _3248) == 0u) || ((_3249 & 240u) == 0u))
        {
            _3328 = 0.0;
            _3330 = 0.0;
            _3332 = 0.0;
            _3334 = 0.0;
            _3336 = 0.0;
            _3338 = 0.0;
        }
        else
        {
            float _3329;
            float _3331;
            float _3333;
            float _3335;
            float _3337;
            float _3339;
            float _3472 = 0.0;
            float _3473 = 0.0;
            float _3474 = 0.0;
            float _3475 = 0.0;
            float _3476 = 0.0;
            float _3477 = 0.0;
            uint _3478 = 0u;
            uint _3487;
            bool _3488;
            for (;;)
            {
                _3487 = texelFetch(g_lightClassification, int((((_3242 << 5u) + (_3228 << 9u)) + (_3478 << 2u)) >> 2u)).x;
                _3488 = _3487 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3488)
                {
                    frontier_phi_66_pred = _3477;
                    frontier_phi_66_pred_1 = _3476;
                    frontier_phi_66_pred_2 = _3475;
                    frontier_phi_66_pred_3 = _3474;
                    frontier_phi_66_pred_4 = _3473;
                    frontier_phi_66_pred_5 = _3472;
                }
                else
                {
                    float _3596;
                    float _3597;
                    float _3598;
                    float _3599;
                    float _3600;
                    float _3601;
                    uint _3602;
                    _3596 = _3472;
                    _3597 = _3473;
                    _3598 = _3474;
                    _3599 = _3475;
                    _3600 = _3476;
                    _3601 = _3477;
                    _3602 = _3487;
                    float _3528;
                    float _3529;
                    float _3530;
                    float _3531;
                    float _3532;
                    float _3533;
                    for (;;)
                    {
                        uint _3606 = uint(findLSB(_3602)) + (_3478 << 5u);
                        uint _3603 = (_3602 + 4294967295u) & _3602;
                        uint _3608 = _3606 * 48u;
                        vec4 _3622 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3608)).x, texelFetch(g_PointLightRenderingBuffer, int(_3608 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3608 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3608 + 3u)).x));
                        uint _3628 = (_3606 * 48u) + 4u;
                        vec4 _3641 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3628)).x, texelFetch(g_PointLightRenderingBuffer, int(_3628 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3628 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3628 + 3u)).x));
                        uint _3647 = (_3606 * 48u) + 8u;
                        vec3 _3658 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3647)).x, texelFetch(g_PointLightRenderingBuffer, int(_3647 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3647 + 2u)).x));
                        float _3662 = _3622.x - _2307;
                        float _3663 = _3622.y - _2308;
                        float _3664 = _3622.z - _2309;
                        float _3665 = dot(vec3(_3662, _3663, _3664), vec3(_3662, _3663, _3664));
                        float _3668 = inversesqrt(_3665);
                        float _3669 = _3668 * _3662;
                        float _3670 = _3668 * _3663;
                        float _3671 = _3668 * _3664;
                        float _3672 = dot(vec3(_1176, _1179, _1182), vec3(_3669, _3670, _3671));
                        float _3677 = 1.0 - (_3665 * _3622.w);
                        float _5093 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                        float _3678 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
                        float _3679 = sqrt(_3665) * _3641.w;
                        float _3682 = 1.39999997615814208984375 / (_3679 + 1.39999997615814208984375);
                        float _3683 = _3682 * _3682;
                        float _3686 = ((1.0 - _3683) * _3672) + _3683;
                        float _3689 = _3679 * _3679;
                        float _3693 = ((isnan(0.0) ? _3686 : (isnan(_3686) ? 0.0 : max(_3686, 0.0))) * _3678) / ((_3689 * 0.699999988079071044921875) + 1.0);
                        float _3697 = (-0.0) - _2307;
                        float _3698 = (-0.0) - _2308;
                        float _3699 = (-0.0) - _2309;
                        float _3703 = inversesqrt(dot(vec3(_3697, _3698, _3699), vec3(_3697, _3698, _3699)));
                        float _3704 = _3703 * _3697;
                        float _3705 = _3703 * _3698;
                        float _3706 = _3703 * _3699;
                        float _3713 = exp2(log2(1.0 / ((_3689 * 3.5) + 5.0)) * 0.25);
                        float _3714 = 1.0 - _1251;
                        float _3721 = sqrt(1.0 - ((1.0 - (_3714 * _3714)) * (1.0 - (_3713 * _3713))));
                        float _3722 = _3721 * _3721;
                        float _3723 = _3722 * _3722;
                        float _3724 = _3704 + _3669;
                        float _3725 = _3705 + _3670;
                        float _3726 = _3706 + _3671;
                        float _3730 = inversesqrt(dot(vec3(_3724, _3725, _3726), vec3(_3724, _3725, _3726)));
                        float _3734 = dot(vec3(_1176, _1179, _1182), vec3(_3704, _3705, _3706));
                        float _5109 = isnan(0.0) ? _3734 : (isnan(_3734) ? 0.0 : max(_3734, 0.0));
                        float _3737 = isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0));
                        float _3738 = dot(vec3(_1176, _1179, _1182), vec3(_3730 * _3724, _3730 * _3725, _3730 * _3726));
                        float _5120 = isnan(0.0) ? _3738 : (isnan(_3738) ? 0.0 : max(_3738, 0.0));
                        float _3741 = isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0));
                        float _3745 = ((_3741 * _3741) * (_3723 + (-1.0))) + 1.0;
                        float _3746 = _3682 * _3722;
                        float _3747 = _3746 * _3746;
                        float _3750 = ((1.0 - _3747) * _3672) + _3747;
                        float _5131 = isnan(0.0) ? _3750 : (isnan(_3750) ? 0.0 : max(_3750, 0.0));
                        float _3751 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
                        float _3752 = 1.0 - _3722;
                        float _3762 = (0.5 / (((_3751 * ((_3737 * _3752) + _3722)) + 9.9999999392252902907785028219223e-09) + (((_3751 * _3752) + _3722) * _3737))) * _3751;
                        float _5142 = isnan(0.0) ? _3762 : (isnan(_3762) ? 0.0 : max(_3762, 0.0));
                        float _3773 = (((_3723 * 3.1415927410125732421875) * (isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0)))) / ((_3745 * _3745) * ((_3689 * 2.1991131305694580078125) + 3.141590118408203125))) * _3678;
                        _3531 = (_3693 * _3641.x) + _3599;
                        _3532 = (_3693 * _3641.y) + _3600;
                        _3533 = (_3693 * _3641.z) + _3601;
                        _3528 = (_3773 * _3658.x) + _3596;
                        _3529 = (_3773 * _3658.y) + _3597;
                        _3530 = (_3773 * _3658.z) + _3598;
                        if (_3603 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3596 = _3528;
                            _3597 = _3529;
                            _3598 = _3530;
                            _3599 = _3531;
                            _3600 = _3532;
                            _3601 = _3533;
                            _3602 = _3603;
                        }
                    }
                    frontier_phi_66_pred = _3533;
                    frontier_phi_66_pred_1 = _3532;
                    frontier_phi_66_pred_2 = _3531;
                    frontier_phi_66_pred_3 = _3530;
                    frontier_phi_66_pred_4 = _3529;
                    frontier_phi_66_pred_5 = _3528;
                }
                _3339 = frontier_phi_66_pred;
                _3337 = frontier_phi_66_pred_1;
                _3335 = frontier_phi_66_pred_2;
                _3333 = frontier_phi_66_pred_3;
                _3331 = frontier_phi_66_pred_4;
                _3329 = frontier_phi_66_pred_5;
                uint _3479 = _3478 + 1u;
                if (_3479 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3472 = _3329;
                    _3473 = _3331;
                    _3474 = _3333;
                    _3475 = _3335;
                    _3476 = _3337;
                    _3477 = _3339;
                    _3478 = _3479;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3328 = _3329;
            _3330 = _3331;
            _3332 = _3333;
            _3334 = _3335;
            _3336 = _3337;
            _3338 = _3339;
        }
        uvec4 _3342 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3343 = _3342.z;
        uint _3345 = (_3343 >> 8u) & 15u;
        float _3440;
        float _3442;
        float _3444;
        float _3446;
        float _3448;
        float _3450;
        if (((4294967295u << _3345) & _3248) == 0u)
        {
            _3440 = _3328;
            _3442 = _3330;
            _3444 = _3332;
            _3446 = _3334;
            _3448 = _3336;
            _3450 = _3338;
        }
        else
        {
            float _3465 = inversesqrt(dot(vec3(_2307, _2308, _2309), vec3(_2307, _2308, _2309)));
            float _3466 = _3465 * _2307;
            float _3467 = _3465 * _2308;
            float _3468 = _3465 * _2309;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3345 < ((_3343 >> 12u) & 15u))
            {
                float _3441;
                float _3443;
                float _3445;
                float _3447;
                float _3449;
                float _3451;
                float _3579 = _3328;
                float _3580 = _3330;
                float _3581 = _3332;
                float _3582 = _3334;
                float _3583 = _3336;
                float _3584 = _3338;
                uint _3585 = _3345;
                uint _3594;
                bool _3595;
                for (;;)
                {
                    _3594 = texelFetch(g_lightClassification, int((((_3242 << 5u) + (_3228 << 9u)) + (_3585 << 2u)) >> 2u)).x;
                    _3595 = _3594 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3595)
                    {
                        frontier_phi_72_pred = _3584;
                        frontier_phi_72_pred_1 = _3583;
                        frontier_phi_72_pred_2 = _3582;
                        frontier_phi_72_pred_3 = _3581;
                        frontier_phi_72_pred_4 = _3580;
                        frontier_phi_72_pred_5 = _3579;
                    }
                    else
                    {
                        float _3778;
                        float _3779;
                        float _3780;
                        float _3781;
                        float _3782;
                        float _3783;
                        float _4071;
                        float _4072;
                        float _4073;
                        float _4074;
                        float _4075;
                        float _4076;
                        float _3791 = _3579;
                        float _3792 = _3580;
                        float _3793 = _3581;
                        float _3794 = _3582;
                        float _3795 = _3583;
                        float _3796 = _3584;
                        uint _3797 = _3594;
                        uint _3798;
                        vec4 _3823;
                        float _3824;
                        vec4 _3839;
                        vec3 _3851;
                        vec4 _3866;
                        vec4 _3881;
                        float _3927;
                        bool _3928;
                        for (;;)
                        {
                            uint _3808 = ((_3585 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3797));
                            _3798 = (_3797 + 4294967295u) & _3797;
                            uint _3810 = _3808 * 40u;
                            _3823 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3810)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3810 + 3u)).x));
                            _3824 = _3823.w;
                            uint _3826 = (_3808 * 40u) + 4u;
                            _3839 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3826)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 3u)).x));
                            uint _3841 = (_3808 * 40u) + 8u;
                            _3851 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3841)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 2u)).x));
                            uint _3853 = (_3808 * 40u) + 16u;
                            _3866 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3853)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3853 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3853 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3853 + 3u)).x));
                            uint _3868 = (_3808 * 40u) + 20u;
                            _3881 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3868)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 3u)).x));
                            uint _3883 = (_3808 * 40u) + 24u;
                            vec4 _3896 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3883)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3883 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3883 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3883 + 3u)).x));
                            uint _3902 = (_3808 * 40u) + 28u;
                            vec4 _3915 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3902)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3902 + 3u)).x));
                            _3927 = fma(_2309, _3915.z, fma(_2308, _3915.y, _3915.x * _2307)) + _3915.w;
                            _3928 = !((fma(_2309, _3896.z, fma(_2308, _3896.y, _3896.x * _2307)) + _3896.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3928)
                            {
                                float _3955 = _3823.x - _2307;
                                float _3956 = _3823.y - _2308;
                                float _3957 = _3823.z - _2309;
                                float _3958 = dot(vec3(_3955, _3956, _3957), vec3(_3955, _3956, _3957));
                                float _3961 = inversesqrt(_3958);
                                float _3962 = _3961 * _3955;
                                float _3963 = _3961 * _3956;
                                float _3964 = _3961 * _3957;
                                float _3968 = 1.0 - (_3958 / (_3824 * _3824));
                                float _5153 = isnan(0.0) ? _3968 : (isnan(_3968) ? 0.0 : max(_3968, 0.0));
                                float _3969 = isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0));
                                float _3973 = sqrt(_3958) * _3839.w;
                                float _3975 = 1.39999997615814208984375 / (_3973 + 1.39999997615814208984375);
                                float _3976 = _3975 * _3975;
                                float _3979 = ((1.0 - _3976) * dot(vec3(_3962, _3963, _3964), vec3(_1176, _1179, _1182))) + _3976;
                                float _3982 = _3973 * _3973;
                                float _3986 = (fma(_2309, _3866.z, fma(_2308, _3866.y, _3866.x * _2307)) + _3866.w) / _3927;
                                float _3987 = (fma(_2309, _3881.z, fma(_2308, _3881.y, _3881.x * _2307)) + _3881.w) / _3927;
                                float _3991 = 1.0 - dot(vec2(_3986, _3987), vec2(_3986, _3987));
                                float _5169 = isnan(0.0) ? _3991 : (isnan(_3991) ? 0.0 : max(_3991, 0.0));
                                float _3992 = isnan(1.0) ? _5169 : (isnan(_5169) ? 1.0 : min(_5169, 1.0));
                                float _3993 = _3992 * (((isnan(0.0) ? _3979 : (isnan(_3979) ? 0.0 : max(_3979, 0.0))) * _3969) / ((_3982 * 0.699999988079071044921875) + 1.0));
                                float _4005 = exp2(log2(1.0 / ((_3982 * 3.5) + 5.0)) * 0.25);
                                float _4006 = 1.0 - _1251;
                                float _4013 = sqrt(1.0 - ((1.0 - (_4006 * _4006)) * (1.0 - (_4005 * _4005))));
                                float _4014 = _4013 * _4013;
                                float _4015 = _4014 * _4014;
                                float _4016 = _3962 - _3466;
                                float _4017 = _3963 - _3467;
                                float _4018 = _3964 - _3468;
                                float _4022 = inversesqrt(dot(vec3(_4016, _4017, _4018), vec3(_4016, _4017, _4018)));
                                float _4026 = dot(vec3(_1176, _1179, _1182), vec3((-0.0) - _3466, (-0.0) - _3467, (-0.0) - _3468));
                                float _5180 = isnan(0.0) ? _4026 : (isnan(_4026) ? 0.0 : max(_4026, 0.0));
                                float _4029 = isnan(1.0) ? _5180 : (isnan(_5180) ? 1.0 : min(_5180, 1.0));
                                float _4030 = dot(vec3(_1176, _1179, _1182), vec3(_4022 * _4016, _4022 * _4017, _4022 * _4018));
                                float _5191 = isnan(0.0) ? _4030 : (isnan(_4030) ? 0.0 : max(_4030, 0.0));
                                float _4033 = isnan(1.0) ? _5191 : (isnan(_5191) ? 1.0 : min(_5191, 1.0));
                                float _4037 = ((_4033 * _4033) * (_4015 + (-1.0))) + 1.0;
                                float _4038 = _3975 * _4014;
                                float _4039 = _4038 * _4038;
                                float _4045 = ((1.0 - _4039) * dot(vec3(_1176, _1179, _1182), vec3(_3962, _3963, _3964))) + _4039;
                                float _5202 = isnan(0.0) ? _4045 : (isnan(_4045) ? 0.0 : max(_4045, 0.0));
                                float _4046 = isnan(1.0) ? _5202 : (isnan(_5202) ? 1.0 : min(_5202, 1.0));
                                float _4047 = 1.0 - _4014;
                                float _4057 = (0.5 / (((_4046 * ((_4029 * _4047) + _4014)) + 9.9999999392252902907785028219223e-09) + (((_4046 * _4047) + _4014) * _4029))) * _4046;
                                float _5213 = isnan(0.0) ? _4057 : (isnan(_4057) ? 0.0 : max(_4057, 0.0));
                                float _4067 = (_3992 * _3969) * (((_4015 * 3.1415927410125732421875) * (isnan(1.0) ? _5213 : (isnan(_5213) ? 1.0 : min(_5213, 1.0)))) / ((_4037 * _4037) * ((_3982 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3993 * _3839.y;
                                frontier_phi_78_pred_1 = _3993 * _3839.x;
                                frontier_phi_78_pred_2 = _4067 * _3851.z;
                                frontier_phi_78_pred_3 = _4067 * _3851.y;
                                frontier_phi_78_pred_4 = _4067 * _3851.x;
                                frontier_phi_78_pred_5 = _3993 * _3839.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4075 = frontier_phi_78_pred;
                            _4074 = frontier_phi_78_pred_1;
                            _4073 = frontier_phi_78_pred_2;
                            _4072 = frontier_phi_78_pred_3;
                            _4071 = frontier_phi_78_pred_4;
                            _4076 = frontier_phi_78_pred_5;
                            _3781 = _4074 + _3794;
                            _3782 = _4075 + _3795;
                            _3783 = _4076 + _3796;
                            _3778 = _4071 + _3791;
                            _3779 = _4072 + _3792;
                            _3780 = _4073 + _3793;
                            if (_3798 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3791 = _3778;
                                _3792 = _3779;
                                _3793 = _3780;
                                _3794 = _3781;
                                _3795 = _3782;
                                _3796 = _3783;
                                _3797 = _3798;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3783;
                        frontier_phi_72_pred_1 = _3782;
                        frontier_phi_72_pred_2 = _3781;
                        frontier_phi_72_pred_3 = _3780;
                        frontier_phi_72_pred_4 = _3779;
                        frontier_phi_72_pred_5 = _3778;
                    }
                    _3451 = frontier_phi_72_pred;
                    _3449 = frontier_phi_72_pred_1;
                    _3447 = frontier_phi_72_pred_2;
                    _3445 = frontier_phi_72_pred_3;
                    _3443 = frontier_phi_72_pred_4;
                    _3441 = frontier_phi_72_pred_5;
                    uint _3586 = _3585 + 1u;
                    if (_3586 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3579 = _3441;
                        _3580 = _3443;
                        _3581 = _3445;
                        _3582 = _3447;
                        _3583 = _3449;
                        _3584 = _3451;
                        _3585 = _3586;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3451;
                frontier_phi_60_61_ladder_1 = _3449;
                frontier_phi_60_61_ladder_2 = _3445;
                frontier_phi_60_61_ladder_3 = _3443;
                frontier_phi_60_61_ladder_4 = _3441;
                frontier_phi_60_61_ladder_5 = _3447;
            }
            else
            {
                frontier_phi_60_61_ladder = _3338;
                frontier_phi_60_61_ladder_1 = _3336;
                frontier_phi_60_61_ladder_2 = _3332;
                frontier_phi_60_61_ladder_3 = _3330;
                frontier_phi_60_61_ladder_4 = _3328;
                frontier_phi_60_61_ladder_5 = _3334;
            }
            _3440 = frontier_phi_60_61_ladder_4;
            _3442 = frontier_phi_60_61_ladder_3;
            _3444 = frontier_phi_60_61_ladder_2;
            _3446 = frontier_phi_60_61_ladder_5;
            _3448 = frontier_phi_60_61_ladder_1;
            _3450 = frontier_phi_60_61_ladder;
        }
        float _3455 = isnan(1.0) ? _1235 : (isnan(_1235) ? 1.0 : min(_1235, 1.0));
        _3261 = (_3455 * _3446) + _2773;
        _3263 = (_3455 * _3448) + _2775;
        _3265 = (_3455 * _3450) + _2777;
        _3267 = ((_3440 * _1219) * _3455) + _3111;
        _3269 = ((_3442 * _1221) * _3455) + _3113;
        _3271 = ((_3444 * _1222) * _3455) + _3115;
    }
    else
    {
        _3261 = _2773;
        _3263 = _2775;
        _3265 = _2777;
        _3267 = _3111;
        _3269 = _3113;
        _3271 = _3115;
    }
    float _5229 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _5240 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
    float _5251 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
    uint _3291 = _271 + 6u;
    float _3299 = _1157 / cbSceneParam._m0[86u].x;
    float _3300 = _1158 / cbSceneParam._m0[86u].y;
    vec4 _3314 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3299, _3300, (log2((isnan(cbSceneParam._m0[77u].w) ? _1092 : (isnan(_1092) ? cbSceneParam._m0[77u].w : min(_1092, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3316 = _3314.x;
    float _3317 = _3314.y;
    float _3318 = _3314.z;
    float _3319 = _3314.w;
    float _3390;
    float _3392;
    float _3394;
    float _3396;
    if (_1092 > cbSceneParam._m0[78u].w)
    {
        float _3353 = isnan(_1092) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1092 : min(cbSceneParam._m0[80u].w, _1092));
        float _3354 = _3353 / _1092;
        float _3365 = _3354 * _1142;
        float _3366 = _1143 * _3354;
        float _3367 = (-0.0) - _3366;
        float _3368 = _3354 * _1144;
        float _3370 = (cbSceneParam._m0[77u].w * _3367) / _3353;
        float _3371 = _3370 + cbSceneParam._m0[79u].w;
        float _3372 = cbSceneParam._m0[79u].w - _3366;
        float _3378 = sqrt(((_3365 * _3365) + (_3366 * _3366)) + (_3368 * _3368));
        float _3381 = (1.0 - (cbSceneParam._m0[77u].w / _3353)) * _3378;
        float _3386 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3388 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3541;
        if (abs((_3367 - _3370) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3541 = ((((_3371 > 0.0) ? exp2(_3386 * _3371) : (2.0 - exp2(_3388 * _3371))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3381;
        }
        else
        {
            float _3501 = 1.0 / cbSceneParam._m0[80u].x;
            float _3502 = isnan(_3372) ? _3371 : (isnan(_3371) ? _3372 : max(_3371, _3372));
            float _3503 = isnan(_3372) ? _3371 : (isnan(_3371) ? _3372 : min(_3371, _3372));
            float _3512 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : min(_3502, 0.0));
            float _3513 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : min(_3503, 0.0));
            _3541 = ((abs(_3378 / _3367) * cbSceneParam._m0[80u].y) * ((((_3512 - _3513) * 2.0) - ((exp2(_3386 * (isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0)))) - exp2(_3386 * (isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0))))) * _3501)) - ((exp2(_3388 * _3512) - exp2(_3388 * _3513)) * _3501))) + (_3381 * cbSceneParam._m0[80u].z);
        }
        vec4 _3543 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3299, _3300, 1.0), 0.0);
        float _3552 = exp2((_3541 * (-1.44269502162933349609375)) * (1.0 - _3543.w));
        float _3553 = log2(_3552);
        float _3569 = log2(_3319);
        _3390 = (exp2(_3569 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3553 * cbSceneParam._m0[78u].x)) * _3543.x) / cbSceneParam._m0[78u].x)) + _3316;
        _3392 = (exp2(_3569 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3553 * cbSceneParam._m0[78u].y)) * _3543.y) / cbSceneParam._m0[78u].y)) + _3317;
        _3394 = (exp2(_3569 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3553 * cbSceneParam._m0[78u].z)) * _3543.z) / cbSceneParam._m0[78u].z)) + _3318;
        _3396 = _3552 * _3319;
    }
    else
    {
        _3390 = _3316;
        _3392 = _3317;
        _3394 = _3318;
        _3396 = _3319;
    }
    float _3408 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3409 = _3408 == 3.0;
    float _3410 = log2(_3396);
    float _3417 = exp2(_3410 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5229 : (isnan(_5229) ? 1.0 : min(_5229, 1.0))) * (_3261 + ((isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0))) * _1235))) + ((_3267 + ((isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3418 = exp2(_3410 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5240 : (isnan(_5240) ? 1.0 : min(_5240, 1.0))) * (_3263 + ((isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))) * _1235))) + ((_3269 + ((isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3419 = exp2(_3410 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5251 : (isnan(_5251) ? 1.0 : min(_5251, 1.0))) * (_3265 + ((isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0))) * _1235))) + ((_3271 + ((isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3428 = (_3408 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3428 * (_3409 ? _3417 : (_3417 + (cbSceneParam._m0[72u].w * _3390)));
    SV_Target.y = _3428 * (_3409 ? _3418 : (_3418 + (cbSceneParam._m0[72u].w * _3392)));
    SV_Target.z = _3428 * (_3409 ? _3419 : (_3419 + (cbSceneParam._m0[72u].w * _3394)));
    SV_Target.w = cbInstanceData._m0[_3291].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3291].w;
}


