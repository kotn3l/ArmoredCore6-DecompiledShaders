#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1554;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _241 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _242 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _243 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _249 = inversesqrt(dot(vec3(_241, _242, _243), vec3(_241, _242, _243)));
    float _256 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _263 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _279 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4160 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _4171 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _4182 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    uint _290 = uint(roundEven(NORMAL.w)) * 13u;
    uint _295 = _290 + 1u;
    uint _299 = _290 + 2u;
    float _308 = sqrt(((cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x)) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x));
    float _309 = _308 * TEXCOORD.z;
    float _310 = _308 * TEXCOORD.w;
    vec4 _323 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _309) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _310) + cbTextureTilingScale._m0[13u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _352 = _347.x * cbMtdParam._m0[11u].x;
    float _353 = _347.y * cbMtdParam._m0[11u].y;
    float _354 = _347.z * cbMtdParam._m0[11u].z;
    vec4 _373 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _309) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _310) + cbTextureTilingScale._m0[5u].w));
    vec4 _392 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _427 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _429 = _427.x;
    float _441 = dot(vec4(_429, _427.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _458 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _392.x) * 2.0) - ((((_429 - _441) * cbMtdParam._m0[23u].w) + _441) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4193 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _459 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
    float _466 = (_459 * ((_373.x * cbMtdParam._m0[12u].x) - _352)) + _352;
    float _467 = (_459 * ((_373.y * cbMtdParam._m0[12u].y) - _353)) + _353;
    float _468 = (_459 * ((_373.z * cbMtdParam._m0[12u].z) - _354)) + _354;
    vec4 _485 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _309) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _310) + cbTextureTilingScale._m0[3u].w));
    vec4 _505 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _507 = _505.x;
    float _517 = dot(vec4(_507, _505.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _531 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _392.y) * 2.0) - ((((_507 - _517) * cbMtdParam._m0[23u].w) + _517) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4204 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _532 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
    float _539 = (_532 * ((_485.x * cbMtdParam._m0[13u].x) - _466)) + _466;
    float _540 = (_532 * ((_485.y * cbMtdParam._m0[13u].y) - _467)) + _467;
    float _541 = (_532 * ((_485.z * cbMtdParam._m0[13u].z) - _468)) + _468;
    vec4 _560 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _309) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _310) + cbTextureTilingScale._m0[24u].w));
    vec4 _577 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _579 = _577.x;
    float _589 = dot(vec4(_579, _577.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _601 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _392.z) * 2.0) - ((((_579 - _589) * cbMtdParam._m0[23u].w) + _589) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4215 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _602 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _609 = (_602 * ((_560.x * cbMtdParam._m0[14u].x) - _539)) + _539;
    float _610 = (_602 * ((_560.y * cbMtdParam._m0[14u].y) - _540)) + _540;
    float _611 = (_602 * ((_560.z * cbMtdParam._m0[14u].z) - _541)) + _541;
    float _615 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _323.x) * _609;
    float _618 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _323.y) * _610;
    float _621 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _323.z) * _611;
    float _628 = ((_609 - _615) * (isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0)))) + _615;
    float _629 = ((_610 - _618) * (isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0)))) + _618;
    float _630 = ((_611 - _621) * (isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0)))) + _621;
    vec4 _648 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _309) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _310) + cbTextureTilingScale._m0[14u].w));
    vec4 _667 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _309) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _310) + cbTextureTilingScale._m0[20u].w));
    vec4 _690 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _309) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _310) + cbTextureTilingScale._m0[4u].w));
    vec4 _707 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _709 = _707.x;
    float _710 = _707.y;
    float _711 = _707.z;
    float _718 = ((_690.x - _709) * _459) + _709;
    float _719 = ((_690.y - _710) * _459) + _710;
    float _720 = ((_690.z - _711) * _459) + _711;
    vec4 _732 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _309) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _310) + cbTextureTilingScale._m0[2u].w));
    float _743 = ((_732.x - _718) * _532) + _718;
    float _744 = ((_732.y - _719) * _532) + _719;
    float _745 = ((_732.z - _720) * _532) + _720;
    vec4 _757 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _309) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _310) + cbTextureTilingScale._m0[23u].w));
    float _770 = ((_757.z - _745) * _602) + _745;
    float _773 = ((((_757.x - _743) * _602) + _743) * 2.0) + (-1.0);
    float _774 = ((((_757.y - _744) * _602) + _744) * 2.0) + (-1.0);
    float _775 = dot(vec2(_773, _774), vec2(_773, _774));
    float _4226 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _780 = sqrt(1.0 - (isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))));
    vec4 _794 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _819 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _309) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _310) + cbTextureTilingScale._m0[11u].w));
    float _821 = _819.x;
    float _822 = 1.0 - _821;
    float _837 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_821 - _822) * cbMtdParam._m0[24u].z) + _822) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4237 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _838 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _845 = (_838 * ((_648.x * cbMtdParam._m0[18u].x) - _628)) + _628;
    float _846 = (_838 * ((_648.y * cbMtdParam._m0[18u].y) - _629)) + _629;
    float _847 = (_838 * ((_648.z * cbMtdParam._m0[18u].z) - _630)) + _630;
    vec4 _873 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _875 = _873.x;
    float _893 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _309) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _310) + cbTextureTilingScale._m0[9u].w)).x - _875) * _459) + _875;
    float _910 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _309) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _310) + cbTextureTilingScale._m0[21u].w)).x - _893) * _532) + _893;
    float _928 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _309) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _310) + cbTextureTilingScale._m0[10u].w)).x - _910) * _602) + _910;
    float _932 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _928) * cbMtdParam._m0[19u].z) + _928;
    float _934 = _932 - (_932 * _838);
    float _939 = (((_667.z - _770) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _770;
    float _943 = ((_794.z - _939) * cbMtdParam._m0[19u].w) + _939;
    vec4 _956 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _309) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _310) + cbTextureTilingScale._m0[15u].w));
    float _963 = (_956.x * 2.0) + (-1.0);
    float _964 = (_956.y * 2.0) + (-1.0);
    float _965 = dot(vec2(_963, _964), vec2(_963, _964));
    float _4248 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
    float _973 = (_838 * (_956.z - _943)) + _943;
    float _982 = (_773 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_667.x * 2.0) + (-1.0)))) + (((_794.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _983 = (_774 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_667.y * 2.0) + (-1.0)))) + (((_794.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _995 = (((_963 - _982) + (cbMtdParam._m0[21u].x * _982)) * _838) + _982;
    float _996 = (((_964 - _983) + (cbMtdParam._m0[21u].x * _983)) * _838) + _983;
    float _997 = (_838 * (sqrt(1.0 - (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0)))) - _780)) + _780;
    float _1001 = cbMtdParam._m0[22u].x + _794.w;
    float _1004 = fma(_997, _256 * NORMAL.x, fma(_996, _263 * TANGENT.x, (_249 * _241) * _995));
    float _1007 = fma(_997, _256 * NORMAL.y, fma(_996, _263 * TANGENT.y, (_249 * _242) * _995));
    float _1010 = fma(_997, _256 * NORMAL.z, fma(_996, _263 * TANGENT.z, (_249 * _243) * _995));
    float _1014 = inversesqrt(dot(vec3(_1004, _1007, _1010), vec3(_1004, _1007, _1010)));
    float _1015 = _1014 * _1004;
    float _1016 = _1014 * _1007;
    float _1017 = _1014 * _1010;
    float _4259 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _1018 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
    float _4270 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _4281 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _4292 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _4303 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4314 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _1023 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
    float _1037 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1077 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1087 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1077);
    float _1088 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1077);
    float _1089 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1077);
    float _1093 = inversesqrt(dot(vec3(_1087, _1088, _1089), vec3(_1087, _1088, _1089)));
    float _1094 = _1087 * _1093;
    float _1095 = _1088 * _1093;
    float _1096 = _1089 * _1093;
    float _1102 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1103 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1121 = fma(_1017, cbSceneParam._m0[5u].z, fma(_1016, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1015));
    float _1124 = fma(_1017, cbSceneParam._m0[6u].z, fma(_1016, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1015));
    float _1127 = fma(_1017, cbSceneParam._m0[7u].z, fma(_1016, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1015));
    uint _1141 = (_290 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1147 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0)))) * cbInstanceData._m0[_1141].x;
    float _1148 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0)))) * cbInstanceData._m0[_1141].y;
    float _1149 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)))) * cbInstanceData._m0[_1141].z;
    float _4325 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
    float _1150 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
    float _4336 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
    float _1151 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
    float _4347 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
    float _1152 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
    float _1153 = 1.0 - _1023;
    float _1154 = _1150 * _1153;
    float _1155 = _1151 * _1153;
    float _1156 = _1152 * _1153;
    float _1161 = (_1150 + (-0.039999999105930328369140625)) * _1023;
    float _1162 = (_1151 + (-0.039999999105930328369140625)) * _1023;
    float _1163 = (_1152 + (-0.039999999105930328369140625)) * _1023;
    float _1164 = _1161 + 0.039999999105930328369140625;
    float _1166 = _1162 + 0.039999999105930328369140625;
    float _1167 = _1163 + 0.039999999105930328369140625;
    vec4 _1176 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1102, cbSceneParam._m0[86u].y * _1103));
    float _1180 = ((isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * TEXCOORD_5.w) * _1176.x;
    float _1181 = dot(vec3(_1015, _1016, _1017), vec3(_1094, _1095, _1096));
    float _1184 = _1181 * 2.0;
    float _1188 = (_1184 * _1015) - _1094;
    float _1189 = (_1184 * _1016) - _1095;
    float _1190 = (_1184 * _1017) - _1096;
    float _1194 = abs(dot(vec3(_1094, _1095, _1096), vec3(_1015, _1016, _1017)));
    float _4358 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _1196 = sqrt(_1018);
    float _1209 = exp2((_1196 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1196 * 3.0));
    float _1215 = (1.0 - _1209) * ((_1196 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1216 = _1209 * _1196;
    float _1244 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1248 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1252 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1553;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1278 = fma(_1252, cbModelParam._m0[26u].z, fma(_1248, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1244));
        float _1282 = fma(_1252, cbModelParam._m0[27u].z, fma(_1248, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1244));
        float _1286 = fma(_1252, cbModelParam._m0[28u].z, fma(_1248, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1244));
        float _1311 = _1244 + _1015;
        float _1312 = _1248 + _1016;
        float _1313 = _1252 + _1017;
        float _1323 = fma(_1313, cbModelParam._m0[26u].z, fma(_1312, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1311)) - _1278;
        float _1324 = fma(_1313, cbModelParam._m0[27u].z, fma(_1312, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1311)) - _1282;
        float _1325 = fma(_1313, cbModelParam._m0[28u].z, fma(_1312, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1311)) - _1286;
        float _1329 = inversesqrt(dot(vec3(_1323, _1324, _1325), vec3(_1323, _1324, _1325)));
        float _1342 = ((_1329 * _1323) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1278 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1343 = ((_1329 * _1324) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1282 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1344 = ((_1329 * _1325) / cbModelParam._m0[34u].z) + ((((((_1286 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1347 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1342, _1343, _1344), 0.0);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1342, _1343, _1344), 0.0);
        vec4 _1361 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1342, _1343, _1344), 0.0);
        vec4 _1368 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1342, _1343, _1344), 0.0);
        float _1381 = exp2((_1347.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1347.x + (-0.5));
        float _1383 = _1381 * (_1347.y + (-0.5));
        float _1384 = _1381 * (_1347.z + (-0.5));
        float _1391 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1392 = _1391 * (_1354.x + (-0.5));
        float _1393 = _1391 * (_1354.y + (-0.5));
        float _1394 = _1391 * (_1354.z + (-0.5));
        float _1401 = exp2((_1361.w + (-0.5)) * 20.0) * 2.0;
        float _1402 = _1401 * (_1361.x + (-0.5));
        float _1403 = _1401 * (_1361.y + (-0.5));
        float _1404 = _1401 * (_1361.z + (-0.5));
        float _1411 = exp2((_1368.w + (-0.5)) * 20.0) * 2.0;
        float _1412 = _1411 * (_1368.x + (-0.5));
        float _1413 = _1411 * (_1368.y + (-0.5));
        float _1414 = _1411 * (_1368.z + (-0.5));
        float _1415 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1416 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1418 = _1382 * 0.5;
        float _1419 = _1392 * 0.5;
        float _1420 = _1402 * 0.5;
        float _1421 = dot(vec3(_1418, _1419, _1420), vec3(_1418, _1419, _1420));
        float _1426 = (_1421 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1421);
        float _1435 = (dot(vec3(_1015, _1016, _1017), vec3(_1426 * _1418, _1426 * _1419, _1426 * _1420)) + 1.0) * 0.5;
        float _4384 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1445 = sqrt(((_1419 * _1419) + (_1418 * _1418)) + (_1420 * _1420)) / (_1415 + 9.9999997473787516355514526367188e-06);
        float _4395 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _4406 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0))) * (_1447 + 1.0))) + _1452) * _1415;
        float _1462 = _1383 * 0.5;
        float _1463 = _1393 * 0.5;
        float _1464 = _1403 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1478 = (dot(vec3(_1015, _1016, _1017), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _4417 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1487 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1416 + 9.9999997473787516355514526367188e-06);
        float _4428 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _4439 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * (_1489 + 1.0))) + _1494) * _1416;
        float _1504 = _1384 * 0.5;
        float _1505 = _1394 * 0.5;
        float _1506 = _1404 * 0.5;
        float _1507 = dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506));
        float _1512 = (_1507 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1507);
        float _1520 = (dot(vec3(_1015, _1016, _1017), vec3(_1512 * _1504, _1512 * _1505, _1512 * _1506)) + 1.0) * 0.5;
        float _4450 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1529 = sqrt(((_1505 * _1505) + (_1504 * _1504)) + (_1506 * _1506)) / (_1417 + 9.9999997473787516355514526367188e-06);
        float _4461 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _1531 = _1530 * 2.0;
        float _1535 = (1.0 - _1530) / (_1530 + 1.0);
        float _4472 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1545 = ((((1.0 - _1536) * (_1531 + 2.0)) * exp2(log2(isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0))) * (_1531 + 1.0))) + _1536) * _1417;
        _1553 = _1384;
        _1555 = _1383;
        _1556 = _1382;
        _1557 = _1394;
        _1558 = _1393;
        _1559 = _1392;
        _1560 = _1404;
        _1561 = _1403;
        _1562 = _1402;
        _1563 = _1417;
        _1564 = _1416;
        _1565 = _1415;
        _1566 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
        _1567 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
        _1568 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0)));
    }
    else
    {
        _1553 = _1554;
        _1555 = _1554;
        _1556 = _1554;
        _1557 = _1554;
        _1558 = _1554;
        _1559 = _1554;
        _1560 = _1554;
        _1561 = _1554;
        _1562 = _1554;
        _1563 = _1554;
        _1564 = _1554;
        _1565 = _1554;
        _1566 = 0.0;
        _1567 = 0.0;
        _1568 = 0.0;
    }
    float _1860;
    float _1861;
    float _1862;
    float _1863;
    float _1864;
    float _1865;
    float _1866;
    float _1867;
    float _1868;
    float _1869;
    float _1870;
    float _1871;
    float _1872;
    float _1873;
    float _1874;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1591 = fma(_1252, cbModelParam._m0[30u].z, fma(_1248, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1244));
        float _1595 = fma(_1252, cbModelParam._m0[31u].z, fma(_1248, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1244));
        float _1599 = fma(_1252, cbModelParam._m0[32u].z, fma(_1248, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1244));
        float _1622 = _1244 + _1015;
        float _1623 = _1248 + _1016;
        float _1624 = _1252 + _1017;
        float _1634 = fma(_1624, cbModelParam._m0[30u].z, fma(_1623, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1622)) - _1591;
        float _1635 = fma(_1624, cbModelParam._m0[31u].z, fma(_1623, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1622)) - _1595;
        float _1636 = fma(_1624, cbModelParam._m0[32u].z, fma(_1623, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1622)) - _1599;
        float _1640 = inversesqrt(dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636)));
        float _1653 = ((_1640 * _1634) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1591 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1654 = ((_1640 * _1635) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1595 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1655 = ((_1640 * _1636) / cbModelParam._m0[35u].z) + ((((((_1599 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1657 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1653, _1654, _1655), 0.0);
        vec4 _1664 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1653, _1654, _1655), 0.0);
        vec4 _1671 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1653, _1654, _1655), 0.0);
        vec4 _1678 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1653, _1654, _1655), 0.0);
        float _1690 = exp2((_1657.w + (-0.5)) * 20.0) * 2.0;
        float _1691 = _1690 * (_1657.x + (-0.5));
        float _1692 = _1690 * (_1657.y + (-0.5));
        float _1693 = _1690 * (_1657.z + (-0.5));
        float _1700 = exp2((_1664.w + (-0.5)) * 20.0) * 2.0;
        float _1701 = _1700 * (_1664.x + (-0.5));
        float _1702 = _1700 * (_1664.y + (-0.5));
        float _1703 = _1700 * (_1664.z + (-0.5));
        float _1710 = exp2((_1671.w + (-0.5)) * 20.0) * 2.0;
        float _1711 = _1710 * (_1671.x + (-0.5));
        float _1712 = _1710 * (_1671.y + (-0.5));
        float _1713 = _1710 * (_1671.z + (-0.5));
        float _1720 = exp2((_1678.w + (-0.5)) * 20.0) * 2.0;
        float _1721 = _1720 * (_1678.x + (-0.5));
        float _1722 = _1720 * (_1678.y + (-0.5));
        float _1723 = _1720 * (_1678.z + (-0.5));
        float _1724 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1725 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1726 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
        float _1727 = _1691 * 0.5;
        float _1728 = _1701 * 0.5;
        float _1729 = _1711 * 0.5;
        float _1730 = dot(vec3(_1727, _1728, _1729), vec3(_1727, _1728, _1729));
        float _1735 = (_1730 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1730);
        float _1743 = (dot(vec3(_1015, _1016, _1017), vec3(_1735 * _1727, _1735 * _1728, _1735 * _1729)) + 1.0) * 0.5;
        float _4513 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1752 = sqrt(((_1728 * _1728) + (_1727 * _1727)) + (_1729 * _1729)) / (_1724 + 9.9999997473787516355514526367188e-06);
        float _4524 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1753 = isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0));
        float _1754 = _1753 * 2.0;
        float _1758 = (1.0 - _1753) / (_1753 + 1.0);
        float _4535 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1759 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
        float _1768 = ((((1.0 - _1759) * (_1754 + 2.0)) * exp2(log2(isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0))) * (_1754 + 1.0))) + _1759) * _1724;
        float _1769 = _1692 * 0.5;
        float _1770 = _1702 * 0.5;
        float _1771 = _1712 * 0.5;
        float _1772 = dot(vec3(_1769, _1770, _1771), vec3(_1769, _1770, _1771));
        float _1777 = (_1772 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1772);
        float _1785 = (dot(vec3(_1015, _1016, _1017), vec3(_1777 * _1769, _1777 * _1770, _1777 * _1771)) + 1.0) * 0.5;
        float _4546 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1794 = sqrt(((_1770 * _1770) + (_1769 * _1769)) + (_1771 * _1771)) / (_1725 + 9.9999997473787516355514526367188e-06);
        float _4557 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1795 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
        float _1796 = _1795 * 2.0;
        float _1800 = (1.0 - _1795) / (_1795 + 1.0);
        float _4568 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1801 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
        float _1810 = ((((1.0 - _1801) * (_1796 + 2.0)) * exp2(log2(isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))) * (_1796 + 1.0))) + _1801) * _1725;
        float _1811 = _1693 * 0.5;
        float _1812 = _1703 * 0.5;
        float _1813 = _1713 * 0.5;
        float _1814 = dot(vec3(_1811, _1812, _1813), vec3(_1811, _1812, _1813));
        float _1819 = (_1814 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1814);
        float _1827 = (dot(vec3(_1015, _1016, _1017), vec3(_1819 * _1811, _1819 * _1812, _1819 * _1813)) + 1.0) * 0.5;
        float _4579 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1836 = sqrt(((_1812 * _1812) + (_1811 * _1811)) + (_1813 * _1813)) / (_1726 + 9.9999997473787516355514526367188e-06);
        float _4590 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
        float _1837 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
        float _1838 = _1837 * 2.0;
        float _1842 = (1.0 - _1837) / (_1837 + 1.0);
        float _4601 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1843 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
        float _1852 = ((((1.0 - _1843) * (_1838 + 2.0)) * exp2(log2(isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))) * (_1838 + 1.0))) + _1843) * _1726;
        _1860 = _1693;
        _1861 = _1692;
        _1862 = _1691;
        _1863 = _1703;
        _1864 = _1702;
        _1865 = _1701;
        _1866 = _1713;
        _1867 = _1712;
        _1868 = _1711;
        _1869 = _1726;
        _1870 = _1725;
        _1871 = _1724;
        _1872 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)));
        _1873 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0)));
        _1874 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)));
    }
    else
    {
        _1860 = _1554;
        _1861 = _1554;
        _1862 = _1554;
        _1863 = _1554;
        _1864 = _1554;
        _1865 = _1554;
        _1866 = _1554;
        _1867 = _1554;
        _1868 = _1554;
        _1869 = _1554;
        _1870 = _1554;
        _1871 = _1554;
        _1872 = 0.0;
        _1873 = 0.0;
        _1874 = 0.0;
    }
    float _1884 = (cbModelParam._m0[1u].x * (_1872 - _1566)) + _1566;
    float _1885 = (cbModelParam._m0[1u].x * (_1873 - _1567)) + _1567;
    float _1886 = (cbModelParam._m0[1u].x * (_1874 - _1568)) + _1568;
    float _1907 = fma(_1886, cbSceneParam._m0[89u].z, fma(_1885, cbSceneParam._m0[89u].y, _1884 * cbSceneParam._m0[89u].x));
    float _1910 = fma(_1886, cbSceneParam._m0[90u].z, fma(_1885, cbSceneParam._m0[90u].y, _1884 * cbSceneParam._m0[90u].x));
    float _1913 = fma(_1886, cbSceneParam._m0[91u].z, fma(_1885, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1884));
    float _1928 = _1188 * 0.5;
    float _1929 = _1189 * 0.5;
    float _1930 = _1190 * 0.5;
    float _1931 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1862, _1865, _1868, _1871));
    float _1934 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1861, _1864, _1867, _1870));
    float _1937 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1860, _1863, _1866, _1869));
    float _1971;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1944 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1553, _1557, _1560, _1563));
        float _1948 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1555, _1558, _1561, _1564));
        float _1952 = dot(vec4(_1928, _1929, _1930, 1.0), vec4(_1556, _1559, _1562, _1565));
        float _1959 = dot(vec4(cbModelParam._m0[39u]), vec4(_1928, _1929, _1930, 1.0));
        _1971 = dot(vec3(isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0)), isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0)), isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1959) ? 0.0 : (isnan(0.0) ? _1959 : max(0.0, _1959))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1971 = 1.0;
    }
    float _1982;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1973 = dot(vec4(cbModelParam._m0[40u]), vec4(_1928, _1929, _1930, 1.0));
        _1982 = dot(vec3(isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0)), isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0)), isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1973) ? 0.0 : (isnan(0.0) ? _1973 : max(0.0, _1973))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1982 = 1.0;
    }
    float _1986 = (_1982 * cbModelParam._m0[1u].x) + (_1971 * (1.0 - cbModelParam._m0[1u].x));
    float _1996 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1018);
    float _1997 = isnan(_1996) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1996 : min(cbModelParam._m0[25u].z, _1996));
    float _2077;
    float _2079;
    float _2081;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2044 = fma(_1252, cbModelParam._m0[13u].z, fma(_1248, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1244)) + cbModelParam._m0[13u].w;
        float _2048 = fma(_1252, cbModelParam._m0[14u].z, fma(_1248, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1244)) + cbModelParam._m0[14u].w;
        float _2052 = fma(_1252, cbModelParam._m0[15u].z, fma(_1248, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1244)) + cbModelParam._m0[15u].w;
        float _2055 = fma(_1190, cbModelParam._m0[13u].z, fma(_1189, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1188));
        float _2058 = fma(_1190, cbModelParam._m0[14u].z, fma(_1189, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1188));
        float _2061 = fma(_1190, cbModelParam._m0[15u].z, fma(_1189, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1188));
        float _2089;
        if (_2055 > 0.0)
        {
            _2089 = abs((1.0 - _2044) / _2055);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2055 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2044 + 1.0) / _2055);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2089 = frontier_phi_14_12_ladder;
        }
        float _2260;
        if (_2058 > 0.0)
        {
            _2260 = abs((1.0 - _2048) / _2058);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2048 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2260 = frontier_phi_23_19_ladder;
        }
        float _2555;
        if (_2061 > 0.0)
        {
            _2555 = abs((1.0 - _2052) / _2061);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2061 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2052 + 1.0) / _2061);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2555 = frontier_phi_35_30_ladder;
        }
        float _2557 = isnan(_2260) ? _2089 : (isnan(_2089) ? _2260 : min(_2089, _2260));
        float _2558 = isnan(_2555) ? _2557 : (isnan(_2557) ? _2555 : min(_2557, _2555));
        float _2562 = (_2558 * _2055) + _2044;
        float _2563 = (_2558 * _2058) + _2048;
        float _2564 = (_2558 * _2061) + _2052;
        float _2565 = _2558 * 9.9999997473787516355514526367188e-05;
        float _2567 = (-1.0) - _2565;
        float _2569 = _2565 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2564 > _2569) || ((_2564 < _2567) || ((_2563 > _2569) || ((_2563 < _2567) || ((_2562 < _2567) || (_2562 > _2569))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2709 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2564, cbModelParam._m0[9u].z, fma(_2563, cbModelParam._m0[9u].y, _2562 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2564, cbModelParam._m0[10u].z, fma(_2563, cbModelParam._m0[10u].y, _2562 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2564, cbModelParam._m0[11u].z, fma(_2563, cbModelParam._m0[11u].y, _2562 * cbModelParam._m0[11u].x))), _1997);
            frontier_phi_13_35_ladder = _2709.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2709.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2709.x * cbModelParam._m0[1u].y;
        }
        _2077 = frontier_phi_13_35_ladder_2;
        _2079 = frontier_phi_13_35_ladder_1;
        _2081 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2065 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1188, _1189, _1190), _1997);
        _2077 = _2065.x * cbModelParam._m0[1u].y;
        _2079 = _2065.y * cbModelParam._m0[1u].y;
        _2081 = _2065.z * cbModelParam._m0[1u].y;
    }
    float _2085 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1018);
    float _2086 = isnan(_2085) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2085 : min(cbModelParam._m0[25u].w, _2085));
    float _2175;
    float _2177;
    float _2179;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2139 = fma(_1252, cbModelParam._m0[21u].z, fma(_1248, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1244)) + cbModelParam._m0[21u].w;
        float _2143 = fma(_1252, cbModelParam._m0[22u].z, fma(_1248, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1244)) + cbModelParam._m0[22u].w;
        float _2147 = fma(_1252, cbModelParam._m0[23u].z, fma(_1248, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1244)) + cbModelParam._m0[23u].w;
        float _2150 = fma(_1190, cbModelParam._m0[21u].z, fma(_1189, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1188));
        float _2153 = fma(_1190, cbModelParam._m0[22u].z, fma(_1189, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1188));
        float _2156 = fma(_1190, cbModelParam._m0[23u].z, fma(_1189, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1188));
        float _2265;
        if (_2150 > 0.0)
        {
            _2265 = abs((1.0 - _2139) / _2150);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2150 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2139 + 1.0) / _2150);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2265 = frontier_phi_25_21_ladder;
        }
        float _2582;
        if (_2153 > 0.0)
        {
            _2582 = abs((1.0 - _2143) / _2153);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2153 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2143 + 1.0) / _2153);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2582 = frontier_phi_37_32_ladder;
        }
        float _2920;
        if (_2156 > 0.0)
        {
            _2920 = abs((1.0 - _2147) / _2156);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2156 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2147 + 1.0) / _2156);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2920 = frontier_phi_47_44_ladder;
        }
        float _2922 = isnan(_2582) ? _2265 : (isnan(_2265) ? _2582 : min(_2265, _2582));
        float _2923 = isnan(_2920) ? _2922 : (isnan(_2922) ? _2920 : min(_2922, _2920));
        float _2927 = (_2923 * _2150) + _2139;
        float _2928 = (_2923 * _2153) + _2143;
        float _2929 = (_2923 * _2156) + _2147;
        float _2930 = _2923 * 9.9999997473787516355514526367188e-05;
        float _2931 = (-1.0) - _2930;
        float _2933 = _2930 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2929 > _2933) || ((_2929 < _2931) || ((_2928 > _2933) || ((_2928 < _2931) || ((_2927 < _2931) || (_2927 > _2933))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3051 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2929, cbModelParam._m0[17u].z, fma(_2928, cbModelParam._m0[17u].y, _2927 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2929, cbModelParam._m0[18u].z, fma(_2928, cbModelParam._m0[18u].y, _2927 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2929, cbModelParam._m0[19u].z, fma(_2928, cbModelParam._m0[19u].y, _2927 * cbModelParam._m0[19u].x))), _2086);
            frontier_phi_22_47_ladder = _3051.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3051.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3051.x * cbModelParam._m0[1u].z;
        }
        _2175 = frontier_phi_22_47_ladder_2;
        _2177 = frontier_phi_22_47_ladder_1;
        _2179 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2159 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1188, _1189, _1190), _2086);
        _2175 = _2159.x * cbModelParam._m0[1u].z;
        _2177 = _2159.y * cbModelParam._m0[1u].z;
        _2179 = _2159.z * cbModelParam._m0[1u].z;
    }
    float _2192 = (((_1215 * _1164) + _1216) * _1180) * ((cbModelParam._m0[1u].w * (_2175 - _2077)) + _2077);
    float _2194 = (((_1215 * _1166) + _1216) * _1180) * ((cbModelParam._m0[1u].w * (_2177 - _2079)) + _2079);
    float _2196 = (((_1215 * _1167) + _1216) * _1180) * ((cbModelParam._m0[1u].w * (_2179 - _2081)) + _2081);
    float _2199 = fma(_2196, cbSceneParam._m0[89u].z, fma(_2194, cbSceneParam._m0[89u].y, _2192 * cbSceneParam._m0[89u].x));
    float _2202 = fma(_2196, cbSceneParam._m0[90u].z, fma(_2194, cbSceneParam._m0[90u].y, _2192 * cbSceneParam._m0[90u].x));
    float _2205 = fma(_2196, cbSceneParam._m0[91u].z, fma(_2194, cbSceneParam._m0[91u].y, _2192 * cbSceneParam._m0[91u].x));
    float _2239 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2243 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2247 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2251 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2252 = _2239 / _2251;
    float _2253 = _2243 / _2251;
    float _2254 = _2247 / _2251;
    float _2401;
    float _2402;
    float _2403;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2281 = ((uint(_2254 > cbSceneParam._m0[59u].y) + uint(_2254 > cbSceneParam._m0[59u].x)) + uint(_2254 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2282 = _2281 + 43u;
        uint _2290 = _2281 + 44u;
        uint _2298 = _2281 + 45u;
        uint _2306 = _2281 + 46u;
        float _2317 = fma(_2251, cbSceneParam._m0[_2282].w, fma(_2247, cbSceneParam._m0[_2282].z, fma(_2243, cbSceneParam._m0[_2282].y, _2239 * cbSceneParam._m0[_2282].x)));
        float _2321 = fma(_2251, cbSceneParam._m0[_2290].w, fma(_2247, cbSceneParam._m0[_2290].z, fma(_2243, cbSceneParam._m0[_2290].y, _2239 * cbSceneParam._m0[_2290].x)));
        float _2329 = fma(_2251, cbSceneParam._m0[_2306].w, fma(_2247, cbSceneParam._m0[_2306].z, fma(_2243, cbSceneParam._m0[_2306].y, _2239 * cbSceneParam._m0[_2306].x)));
        float _2334 = cbSceneParam._m0[33u].z * _2329;
        float _2336 = cbSceneParam._m0[33u].w * _2329;
        float _2339 = fma(_2251, cbSceneParam._m0[_2298].w, fma(_2247, cbSceneParam._m0[_2298].z, fma(_2243, cbSceneParam._m0[_2298].y, _2239 * cbSceneParam._m0[_2298].x))) / _2329;
        float _2387 = (cbSceneParam._m0[33u].x - sqrt(((_2253 * _2253) + (_2252 * _2252)) + (_2254 * _2254))) * cbSceneParam._m0[33u].y;
        float _4727 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
        float _2394 = (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2334 + _2317) / _2329, (_2336 + _2321) / _2329), _2339), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2336 + _2317) / _2329, (_2321 - _2334) / _2329), _2339), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2317 - _2334) / _2329, (_2321 - _2336) / _2329), _2339), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2317 - _2336) / _2329, (_2334 + _2321) / _2329), _2339), 0.0)).x), vec4(0.25)));
        _2401 = 1.0 - (_2394 * cbSceneParam._m0[34u].x);
        _2402 = 1.0 - (_2394 * cbSceneParam._m0[34u].y);
        _2403 = 1.0 - (_2394 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2401 = 1.0;
        _2402 = 1.0;
        _2403 = 1.0;
    }
    float _2467;
    float _2469;
    float _2471;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2455 = fma(_2251, cbSceneParam._m0[63u].w, fma(_2247, cbSceneParam._m0[63u].z, fma(_2243, cbSceneParam._m0[63u].y, _2239 * cbSceneParam._m0[63u].x)));
        float _2456 = fma(_2251, cbSceneParam._m0[60u].w, fma(_2247, cbSceneParam._m0[60u].z, fma(_2243, cbSceneParam._m0[60u].y, _2239 * cbSceneParam._m0[60u].x))) / _2455;
        float _2457 = fma(_2251, cbSceneParam._m0[61u].w, fma(_2247, cbSceneParam._m0[61u].z, fma(_2243, cbSceneParam._m0[61u].y, _2239 * cbSceneParam._m0[61u].x))) / _2455;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2456 >= cbSceneParam._m0[64u].x) && (_2457 >= cbSceneParam._m0[64u].y)) && (_2456 <= cbSceneParam._m0[64u].z)) && (_2457 <= cbSceneParam._m0[64u].w))
        {
            float _2595 = fma(_2251, cbSceneParam._m0[62u].w, fma(_2247, cbSceneParam._m0[62u].z, fma(_2243, cbSceneParam._m0[62u].y, _2239 * cbSceneParam._m0[62u].x))) / _2455;
            float _2599 = isnan(cbSceneParam._m0[41u].w) ? _2595 : (isnan(_2595) ? cbSceneParam._m0[41u].w : max(_2595, cbSceneParam._m0[41u].w));
            float _2642 = (cbSceneParam._m0[33u].x - sqrt(((_2253 * _2253) + (_2252 * _2252)) + (_2254 * _2254))) * cbSceneParam._m0[33u].y;
            float _4743 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
            float _2649 = (isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2456, cbSceneParam._m0[33u].w + _2457), _2599), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2456, _2457 - cbSceneParam._m0[33u].z), _2599), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2456 - cbSceneParam._m0[33u].z, _2457 - cbSceneParam._m0[33u].w), _2599), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2456 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2457), _2599), 0.0)).x), vec4(0.25)));
            float _2653 = 1.0 - (_2649 * cbSceneParam._m0[34u].x);
            float _2654 = 1.0 - (_2649 * cbSceneParam._m0[34u].y);
            float _2655 = 1.0 - (_2649 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2655) ? _2403 : (isnan(_2403) ? _2655 : min(_2403, _2655));
            frontier_phi_34_33_ladder_1 = isnan(_2654) ? _2402 : (isnan(_2402) ? _2654 : min(_2402, _2654));
            frontier_phi_34_33_ladder_2 = isnan(_2653) ? _2401 : (isnan(_2401) ? _2653 : min(_2401, _2653));
        }
        else
        {
            frontier_phi_34_33_ladder = _2403;
            frontier_phi_34_33_ladder_1 = _2402;
            frontier_phi_34_33_ladder_2 = _2401;
        }
        _2467 = frontier_phi_34_33_ladder_2;
        _2469 = frontier_phi_34_33_ladder_1;
        _2471 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2467 = _2401;
        _2469 = _2402;
        _2471 = _2403;
    }
    uvec4 _2476 = floatBitsToUint(cbInstanceData._m0[_290 + 5u]);
    uint _2478 = _2476.x * 14u;
    uint _2479 = _2478 + 13u;
    float _2486 = _1180 + (-1.0);
    float _2491 = (cbLight._m0[_2479].x * _2486) + 1.0;
    float _2492 = (cbLight._m0[_2479].y * _2486) + 1.0;
    float _2493 = (cbLight._m0[_2479].z * _2486) + 1.0;
    float _2494 = (cbLight._m0[_2479].w * _2486) + 1.0;
    uint _2495 = _2478 + 5u;
    float _2501 = isnan(1.0) ? _2492 : (isnan(_2492) ? 1.0 : min(_2492, 1.0));
    uint _2505 = _2478 + 4u;
    float _2514 = isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0));
    uint _2518 = _2478 | 1u;
    float _2529 = dot(vec3(cbLight._m0[_2478].xyz), vec3(_1015, _1016, _1017));
    float _2532 = dot(vec3(cbLight._m0[_2518].xyz), vec3(_1015, _1016, _1017));
    float _4779 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _4790 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2537 = (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0))) * 0.3183098733425140380859375;
    float _2539 = (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * 0.3183098733425140380859375;
    float _2546 = ((cbLight._m0[_2495].x * _2501) * _2539) + (((cbLight._m0[_2505].x * _2467) * _2514) * _2537);
    float _2547 = ((_2501 * cbLight._m0[_2495].y) * _2539) + (((cbLight._m0[_2505].y * _2469) * _2514) * _2537);
    float _2548 = ((_2501 * cbLight._m0[_2495].z) * _2539) + (((cbLight._m0[_2505].z * _2471) * _2514) * _2537);
    uvec4 _2552 = floatBitsToUint(cbLight._m0[_2478 + 12u]);
    bool _2554 = _2552.x == 0u;
    float _2656;
    float _2658;
    float _2660;
    if (_2554)
    {
        _2656 = _2546;
        _2658 = _2547;
        _2660 = _2548;
    }
    else
    {
        uint _2664 = _2478 + 6u;
        float _2680 = (dot(vec3(cbLight._m0[_2478 + 2u].xyz), vec3(_1015, _1016, _1017)) * 0.5) + 0.5;
        float _2681 = _2680 * _2680;
        float _4801 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2682 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
        float _2683 = isnan(1.0) ? _2493 : (isnan(_2493) ? 1.0 : min(_2493, 1.0));
        _2656 = (((cbLight._m0[_2664].x * 0.3183098733425140380859375) * _2682) * _2683) + _2546;
        _2658 = (((cbLight._m0[_2664].y * 0.3183098733425140380859375) * _2682) * _2683) + _2547;
        _2660 = (((cbLight._m0[_2664].z * 0.3183098733425140380859375) * _2682) * _2683) + _2548;
    }
    bool _2663 = _2552.y == 0u;
    float _2718;
    float _2720;
    float _2722;
    if (_2663)
    {
        _2718 = _2656;
        _2720 = _2658;
        _2722 = _2660;
    }
    else
    {
        uint _2891 = _2478 + 7u;
        float _2907 = (dot(vec3(cbLight._m0[_2478 + 3u].xyz), vec3(_1015, _1016, _1017)) * 0.5) + 0.5;
        float _2908 = _2907 * _2907;
        float _4817 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
        float _2909 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
        float _2910 = isnan(1.0) ? _2494 : (isnan(_2494) ? 1.0 : min(_2494, 1.0));
        _2718 = (((cbLight._m0[_2891].x * 0.3183098733425140380859375) * _2909) * _2910) + _2656;
        _2720 = (((cbLight._m0[_2891].y * 0.3183098733425140380859375) * _2909) * _2910) + _2658;
        _2722 = (((cbLight._m0[_2891].z * 0.3183098733425140380859375) * _2909) * _2910) + _2660;
    }
    uint _2725 = _2478 + 8u;
    float _2738 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2478].w)) * _1018) * 0.949999988079071044921875);
    float _2739 = _2738 * _2738;
    float _2740 = cbLight._m0[_2478].x + _1094;
    float _2741 = cbLight._m0[_2478].y + _1095;
    float _2742 = cbLight._m0[_2478].z + _1096;
    float _2746 = inversesqrt(dot(vec3(_2740, _2741, _2742), vec3(_2740, _2741, _2742)));
    float _2747 = _2746 * _2740;
    float _2748 = _2746 * _2741;
    float _2749 = _2746 * _2742;
    float _2750 = dot(vec3(_1015, _1016, _1017), vec3(cbLight._m0[_2478].xyz));
    float _4833 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2753 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
    float _4844 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
    float _2754 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
    float _2755 = dot(vec3(_1015, _1016, _1017), vec3(_2747, _2748, _2749));
    float _4855 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
    float _2758 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
    float _2759 = dot(vec3(cbLight._m0[_2478].xyz), vec3(_2747, _2748, _2749));
    float _4866 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2763 = _2739 * _2739;
    float _2767 = ((_2758 * _2758) * (_2763 + (-1.0))) + 1.0;
    float _2775 = exp2(log2(1.0 - (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0)))) * 5.0);
    float _2776 = 0.959999978542327880859375 - _1161;
    float _2778 = 0.959999978542327880859375 - _1162;
    float _2779 = 0.959999978542327880859375 - _1163;
    float _2786 = 1.0 - _2739;
    float _2797 = (0.5 / (((_2754 * ((_2753 * _2786) + _2739)) + 9.9999999392252902907785028219223e-09) + (((_2754 * _2786) + _2739) * _2753))) * _2753;
    float _4877 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
    float _2799 = (isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0))) * (_2763 / ((_2767 * _2767) * 3.141590118408203125));
    uint _2813 = _2478 + 9u;
    float _2824 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2518].w)) * _1018) * 0.949999988079071044921875);
    float _2825 = _2824 * _2824;
    float _2826 = cbLight._m0[_2518].x + _1094;
    float _2827 = cbLight._m0[_2518].y + _1095;
    float _2828 = cbLight._m0[_2518].z + _1096;
    float _2832 = inversesqrt(dot(vec3(_2826, _2827, _2828), vec3(_2826, _2827, _2828)));
    float _2833 = _2832 * _2826;
    float _2834 = _2832 * _2827;
    float _2835 = _2832 * _2828;
    float _2836 = dot(vec3(_1015, _1016, _1017), vec3(cbLight._m0[_2518].xyz));
    float _4888 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
    float _2839 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
    float _2840 = dot(vec3(_1015, _1016, _1017), vec3(_2833, _2834, _2835));
    float _4899 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
    float _2843 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
    float _2844 = dot(vec3(cbLight._m0[_2518].xyz), vec3(_2833, _2834, _2835));
    float _4910 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
    float _2848 = _2825 * _2825;
    float _2852 = ((_2843 * _2843) * (_2848 + (-1.0))) + 1.0;
    float _2859 = exp2(log2(1.0 - (isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0)))) * 5.0);
    float _2866 = 1.0 - _2825;
    float _2876 = (0.5 / (((_2754 * ((_2839 * _2866) + _2825)) + 9.9999999392252902907785028219223e-09) + (((_2754 * _2866) + _2825) * _2839))) * _2839;
    float _4921 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0));
    float _2878 = (isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0))) * (_2848 / ((_2852 * _2852) * 3.141590118408203125));
    float _2888 = (((((_2859 * _2776) + _1164) * cbLight._m0[_2813].x) * _2878) * _2501) + ((((cbLight._m0[_2725].x * _2467) * ((_2775 * _2776) + _1164)) * _2799) * _2514);
    float _2889 = (((((_2859 * _2778) + _1166) * cbLight._m0[_2813].y) * _2878) * _2501) + ((((cbLight._m0[_2725].y * _2469) * ((_2775 * _2778) + _1166)) * _2799) * _2514);
    float _2890 = (((((_2859 * _2779) + _1167) * cbLight._m0[_2813].z) * _2878) * _2501) + ((((cbLight._m0[_2725].z * _2471) * ((_2775 * _2779) + _1167)) * _2799) * _2514);
    float _2946;
    float _2948;
    float _2950;
    if (_2554)
    {
        _2946 = _2888;
        _2948 = _2889;
        _2950 = _2890;
    }
    else
    {
        uint _2952 = _2478 + 2u;
        uint _2956 = _2478 + 10u;
        float _2970 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2952].w)) * _1018) * 0.949999988079071044921875);
        float _2971 = _2970 * _2970;
        float _2972 = cbLight._m0[_2952].x + _1094;
        float _2973 = cbLight._m0[_2952].y + _1095;
        float _2974 = cbLight._m0[_2952].z + _1096;
        float _2978 = inversesqrt(dot(vec3(_2972, _2973, _2974), vec3(_2972, _2973, _2974)));
        float _2979 = _2978 * _2972;
        float _2980 = _2978 * _2973;
        float _2981 = _2978 * _2974;
        float _2982 = dot(vec3(_1015, _1016, _1017), vec3(cbLight._m0[_2952].xyz));
        float _4932 = isnan(0.0) ? _2982 : (isnan(_2982) ? 0.0 : max(_2982, 0.0));
        float _2985 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _2986 = dot(vec3(_1015, _1016, _1017), vec3(_2979, _2980, _2981));
        float _4943 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
        float _2989 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
        float _2990 = dot(vec3(cbLight._m0[_2952].xyz), vec3(_2979, _2980, _2981));
        float _4954 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0));
        float _2994 = _2971 * _2971;
        float _2998 = ((_2989 * _2989) * (_2994 + (-1.0))) + 1.0;
        float _3005 = exp2(log2(1.0 - (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0)))) * 5.0);
        float _3012 = 1.0 - _2971;
        float _3022 = (0.5 / (((_2754 * ((_2985 * _3012) + _2971)) + 9.9999999392252902907785028219223e-09) + (((_2754 * _3012) + _2971) * _2985))) * _2985;
        float _4965 = isnan(0.0) ? _3022 : (isnan(_3022) ? 0.0 : max(_3022, 0.0));
        float _3024 = (isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0))) * (_2994 / ((_2998 * _2998) * 3.141590118408203125));
        float _3025 = isnan(1.0) ? _2493 : (isnan(_2493) ? 1.0 : min(_2493, 1.0));
        _2946 = (((((_3005 * _2776) + _1164) * cbLight._m0[_2956].x) * _3024) * _3025) + _2888;
        _2948 = (((((_3005 * _2778) + _1166) * cbLight._m0[_2956].y) * _3024) * _3025) + _2889;
        _2950 = (((((_3005 * _2779) + _1167) * cbLight._m0[_2956].z) * _3024) * _3025) + _2890;
    }
    float _3056;
    float _3058;
    float _3060;
    if (_2663)
    {
        _3056 = _2946;
        _3058 = _2948;
        _3060 = _2950;
    }
    else
    {
        uint _3067 = _2478 + 3u;
        uint _3071 = _2478 + 11u;
        float _3085 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3067].w)) * _1018) * 0.949999988079071044921875);
        float _3086 = _3085 * _3085;
        float _3087 = cbLight._m0[_3067].x + _1094;
        float _3088 = cbLight._m0[_3067].y + _1095;
        float _3089 = cbLight._m0[_3067].z + _1096;
        float _3093 = inversesqrt(dot(vec3(_3087, _3088, _3089), vec3(_3087, _3088, _3089)));
        float _3094 = _3093 * _3087;
        float _3095 = _3093 * _3088;
        float _3096 = _3093 * _3089;
        float _3097 = dot(vec3(_1015, _1016, _1017), vec3(cbLight._m0[_3067].xyz));
        float _4981 = isnan(0.0) ? _3097 : (isnan(_3097) ? 0.0 : max(_3097, 0.0));
        float _3100 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
        float _3101 = dot(vec3(_1015, _1016, _1017), vec3(_3094, _3095, _3096));
        float _4992 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
        float _3104 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
        float _3105 = dot(vec3(cbLight._m0[_3067].xyz), vec3(_3094, _3095, _3096));
        float _5003 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
        float _3109 = _3086 * _3086;
        float _3113 = ((_3104 * _3104) * (_3109 + (-1.0))) + 1.0;
        float _3120 = exp2(log2(1.0 - (isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0)))) * 5.0);
        float _3127 = 1.0 - _3086;
        float _3137 = (0.5 / (((_2754 * ((_3100 * _3127) + _3086)) + 9.9999999392252902907785028219223e-09) + (((_2754 * _3127) + _3086) * _3100))) * _3100;
        float _5014 = isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0));
        float _3139 = (isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0))) * (_3109 / ((_3113 * _3113) * 3.141590118408203125));
        float _3140 = isnan(1.0) ? _2494 : (isnan(_2494) ? 1.0 : min(_2494, 1.0));
        _3056 = (((((_3120 * _2776) + _1164) * cbLight._m0[_3071].x) * _3139) * _3140) + _2946;
        _3058 = (((((_3120 * _2778) + _1166) * cbLight._m0[_3071].y) * _3139) * _3140) + _2948;
        _3060 = (((((_3120 * _2779) + _1167) * cbLight._m0[_3071].z) * _3139) * _3140) + _2950;
    }
    float _3206;
    float _3208;
    float _3210;
    float _3212;
    float _3214;
    float _3216;
    if (_2476.y == 0u)
    {
        uvec4 _3161 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3162 = _3161.x;
        uint _3173 = uint((float(_3161.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1103) / _3162))) + floor(float(uint(cbSceneParam._m0[85u].x * _1102) / _3162)));
        float _3183 = (log2(_2254 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3184 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
        uint _3187 = uint(isnan(14.0) ? _3184 : (isnan(_3184) ? 14.0 : min(_3184, 14.0)));
        uvec4 _3192 = texelFetch(g_lightClusterGridBuffer, int(((_3187 << 2u) + (_3173 << 6u)) >> 2u));
        uint _3193 = _3192.x;
        uint _3194 = _3161.z;
        float _3273;
        float _3275;
        float _3277;
        float _3279;
        float _3281;
        float _3283;
        if (((((1u << ((_3194 >> 4u) & 15u)) + 4294967295u) & _3193) == 0u) || ((_3194 & 240u) == 0u))
        {
            _3273 = 0.0;
            _3275 = 0.0;
            _3277 = 0.0;
            _3279 = 0.0;
            _3281 = 0.0;
            _3283 = 0.0;
        }
        else
        {
            float _3274;
            float _3276;
            float _3278;
            float _3280;
            float _3282;
            float _3284;
            float _3418 = 0.0;
            float _3419 = 0.0;
            float _3420 = 0.0;
            float _3421 = 0.0;
            float _3422 = 0.0;
            float _3423 = 0.0;
            uint _3424 = 0u;
            uint _3433;
            bool _3434;
            for (;;)
            {
                _3433 = texelFetch(g_lightClassification, int((((_3187 << 5u) + (_3173 << 9u)) + (_3424 << 2u)) >> 2u)).x;
                _3434 = _3433 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3434)
                {
                    frontier_phi_66_pred = _3423;
                    frontier_phi_66_pred_1 = _3422;
                    frontier_phi_66_pred_2 = _3421;
                    frontier_phi_66_pred_3 = _3420;
                    frontier_phi_66_pred_4 = _3419;
                    frontier_phi_66_pred_5 = _3418;
                }
                else
                {
                    float _3542;
                    float _3543;
                    float _3544;
                    float _3545;
                    float _3546;
                    float _3547;
                    uint _3548;
                    _3542 = _3418;
                    _3543 = _3419;
                    _3544 = _3420;
                    _3545 = _3421;
                    _3546 = _3422;
                    _3547 = _3423;
                    _3548 = _3433;
                    float _3474;
                    float _3475;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    for (;;)
                    {
                        uint _3552 = uint(findLSB(_3548)) + (_3424 << 5u);
                        uint _3549 = (_3548 + 4294967295u) & _3548;
                        uint _3554 = _3552 * 48u;
                        vec4 _3568 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3554)).x, texelFetch(g_PointLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3554 + 3u)).x));
                        uint _3574 = (_3552 * 48u) + 4u;
                        vec4 _3587 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3574)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3574 + 3u)).x));
                        uint _3593 = (_3552 * 48u) + 8u;
                        vec3 _3604 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3593)).x, texelFetch(g_PointLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3593 + 2u)).x));
                        float _3608 = _3568.x - _2252;
                        float _3609 = _3568.y - _2253;
                        float _3610 = _3568.z - _2254;
                        float _3611 = dot(vec3(_3608, _3609, _3610), vec3(_3608, _3609, _3610));
                        float _3614 = inversesqrt(_3611);
                        float _3615 = _3614 * _3608;
                        float _3616 = _3614 * _3609;
                        float _3617 = _3614 * _3610;
                        float _3618 = dot(vec3(_1121, _1124, _1127), vec3(_3615, _3616, _3617));
                        float _3623 = 1.0 - (_3611 * _3568.w);
                        float _5040 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                        float _3624 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                        float _3625 = sqrt(_3611) * _3587.w;
                        float _3628 = 1.39999997615814208984375 / (_3625 + 1.39999997615814208984375);
                        float _3629 = _3628 * _3628;
                        float _3632 = ((1.0 - _3629) * _3618) + _3629;
                        float _3635 = _3625 * _3625;
                        float _3639 = ((isnan(0.0) ? _3632 : (isnan(_3632) ? 0.0 : max(_3632, 0.0))) * _3624) / ((_3635 * 0.699999988079071044921875) + 1.0);
                        float _3643 = (-0.0) - _2252;
                        float _3644 = (-0.0) - _2253;
                        float _3645 = (-0.0) - _2254;
                        float _3649 = inversesqrt(dot(vec3(_3643, _3644, _3645), vec3(_3643, _3644, _3645)));
                        float _3650 = _3649 * _3643;
                        float _3651 = _3649 * _3644;
                        float _3652 = _3649 * _3645;
                        float _3659 = exp2(log2(1.0 / ((_3635 * 3.5) + 5.0)) * 0.25);
                        float _3660 = 1.0 - _1196;
                        float _3667 = sqrt(1.0 - ((1.0 - (_3660 * _3660)) * (1.0 - (_3659 * _3659))));
                        float _3668 = _3667 * _3667;
                        float _3669 = _3668 * _3668;
                        float _3670 = _3650 + _3615;
                        float _3671 = _3651 + _3616;
                        float _3672 = _3652 + _3617;
                        float _3676 = inversesqrt(dot(vec3(_3670, _3671, _3672), vec3(_3670, _3671, _3672)));
                        float _3680 = dot(vec3(_1121, _1124, _1127), vec3(_3650, _3651, _3652));
                        float _5056 = isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0));
                        float _3683 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
                        float _3684 = dot(vec3(_1121, _1124, _1127), vec3(_3676 * _3670, _3676 * _3671, _3676 * _3672));
                        float _5067 = isnan(0.0) ? _3684 : (isnan(_3684) ? 0.0 : max(_3684, 0.0));
                        float _3687 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                        float _3691 = ((_3687 * _3687) * (_3669 + (-1.0))) + 1.0;
                        float _3692 = _3628 * _3668;
                        float _3693 = _3692 * _3692;
                        float _3696 = ((1.0 - _3693) * _3618) + _3693;
                        float _5078 = isnan(0.0) ? _3696 : (isnan(_3696) ? 0.0 : max(_3696, 0.0));
                        float _3697 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                        float _3698 = 1.0 - _3668;
                        float _3708 = (0.5 / (((_3697 * ((_3683 * _3698) + _3668)) + 9.9999999392252902907785028219223e-09) + (((_3697 * _3698) + _3668) * _3683))) * _3697;
                        float _5089 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                        float _3719 = (((_3669 * 3.1415927410125732421875) * (isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0)))) / ((_3691 * _3691) * ((_3635 * 2.1991131305694580078125) + 3.141590118408203125))) * _3624;
                        _3477 = (_3639 * _3587.x) + _3545;
                        _3478 = (_3639 * _3587.y) + _3546;
                        _3479 = (_3639 * _3587.z) + _3547;
                        _3474 = (_3719 * _3604.x) + _3542;
                        _3475 = (_3719 * _3604.y) + _3543;
                        _3476 = (_3719 * _3604.z) + _3544;
                        if (_3549 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3542 = _3474;
                            _3543 = _3475;
                            _3544 = _3476;
                            _3545 = _3477;
                            _3546 = _3478;
                            _3547 = _3479;
                            _3548 = _3549;
                        }
                    }
                    frontier_phi_66_pred = _3479;
                    frontier_phi_66_pred_1 = _3478;
                    frontier_phi_66_pred_2 = _3477;
                    frontier_phi_66_pred_3 = _3476;
                    frontier_phi_66_pred_4 = _3475;
                    frontier_phi_66_pred_5 = _3474;
                }
                _3284 = frontier_phi_66_pred;
                _3282 = frontier_phi_66_pred_1;
                _3280 = frontier_phi_66_pred_2;
                _3278 = frontier_phi_66_pred_3;
                _3276 = frontier_phi_66_pred_4;
                _3274 = frontier_phi_66_pred_5;
                uint _3425 = _3424 + 1u;
                if (_3425 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3418 = _3274;
                    _3419 = _3276;
                    _3420 = _3278;
                    _3421 = _3280;
                    _3422 = _3282;
                    _3423 = _3284;
                    _3424 = _3425;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3273 = _3274;
            _3275 = _3276;
            _3277 = _3278;
            _3279 = _3280;
            _3281 = _3282;
            _3283 = _3284;
        }
        uvec4 _3287 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3288 = _3287.z;
        uint _3290 = (_3288 >> 8u) & 15u;
        float _3386;
        float _3388;
        float _3390;
        float _3392;
        float _3394;
        float _3396;
        if (((4294967295u << _3290) & _3193) == 0u)
        {
            _3386 = _3273;
            _3388 = _3275;
            _3390 = _3277;
            _3392 = _3279;
            _3394 = _3281;
            _3396 = _3283;
        }
        else
        {
            float _3411 = inversesqrt(dot(vec3(_2252, _2253, _2254), vec3(_2252, _2253, _2254)));
            float _3412 = _3411 * _2252;
            float _3413 = _3411 * _2253;
            float _3414 = _3411 * _2254;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3290 < ((_3288 >> 12u) & 15u))
            {
                float _3387;
                float _3389;
                float _3391;
                float _3393;
                float _3395;
                float _3397;
                float _3525 = _3273;
                float _3526 = _3275;
                float _3527 = _3277;
                float _3528 = _3279;
                float _3529 = _3281;
                float _3530 = _3283;
                uint _3531 = _3290;
                uint _3540;
                bool _3541;
                for (;;)
                {
                    _3540 = texelFetch(g_lightClassification, int((((_3187 << 5u) + (_3173 << 9u)) + (_3531 << 2u)) >> 2u)).x;
                    _3541 = _3540 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3541)
                    {
                        frontier_phi_72_pred = _3530;
                        frontier_phi_72_pred_1 = _3529;
                        frontier_phi_72_pred_2 = _3528;
                        frontier_phi_72_pred_3 = _3527;
                        frontier_phi_72_pred_4 = _3526;
                        frontier_phi_72_pred_5 = _3525;
                    }
                    else
                    {
                        float _3724;
                        float _3725;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3729;
                        float _4017;
                        float _4018;
                        float _4019;
                        float _4020;
                        float _4021;
                        float _4022;
                        float _3737 = _3525;
                        float _3738 = _3526;
                        float _3739 = _3527;
                        float _3740 = _3528;
                        float _3741 = _3529;
                        float _3742 = _3530;
                        uint _3743 = _3540;
                        uint _3744;
                        vec4 _3769;
                        float _3770;
                        vec4 _3785;
                        vec3 _3797;
                        vec4 _3812;
                        vec4 _3827;
                        float _3873;
                        bool _3874;
                        for (;;)
                        {
                            uint _3754 = ((_3531 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3743));
                            _3744 = (_3743 + 4294967295u) & _3743;
                            uint _3756 = _3754 * 40u;
                            _3769 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3756)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 3u)).x));
                            _3770 = _3769.w;
                            uint _3772 = (_3754 * 40u) + 4u;
                            _3785 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3772)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3772 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3772 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3772 + 3u)).x));
                            uint _3787 = (_3754 * 40u) + 8u;
                            _3797 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3787)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3787 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3787 + 2u)).x));
                            uint _3799 = (_3754 * 40u) + 16u;
                            _3812 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3799)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 3u)).x));
                            uint _3814 = (_3754 * 40u) + 20u;
                            _3827 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3814)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 3u)).x));
                            uint _3829 = (_3754 * 40u) + 24u;
                            vec4 _3842 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3829)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3829 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3829 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3829 + 3u)).x));
                            uint _3848 = (_3754 * 40u) + 28u;
                            vec4 _3861 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3848)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3848 + 3u)).x));
                            _3873 = fma(_2254, _3861.z, fma(_2253, _3861.y, _3861.x * _2252)) + _3861.w;
                            _3874 = !((fma(_2254, _3842.z, fma(_2253, _3842.y, _3842.x * _2252)) + _3842.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3874)
                            {
                                float _3901 = _3769.x - _2252;
                                float _3902 = _3769.y - _2253;
                                float _3903 = _3769.z - _2254;
                                float _3904 = dot(vec3(_3901, _3902, _3903), vec3(_3901, _3902, _3903));
                                float _3907 = inversesqrt(_3904);
                                float _3908 = _3907 * _3901;
                                float _3909 = _3907 * _3902;
                                float _3910 = _3907 * _3903;
                                float _3914 = 1.0 - (_3904 / (_3770 * _3770));
                                float _5100 = isnan(0.0) ? _3914 : (isnan(_3914) ? 0.0 : max(_3914, 0.0));
                                float _3915 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
                                float _3919 = sqrt(_3904) * _3785.w;
                                float _3921 = 1.39999997615814208984375 / (_3919 + 1.39999997615814208984375);
                                float _3922 = _3921 * _3921;
                                float _3925 = ((1.0 - _3922) * dot(vec3(_3908, _3909, _3910), vec3(_1121, _1124, _1127))) + _3922;
                                float _3928 = _3919 * _3919;
                                float _3932 = (fma(_2254, _3812.z, fma(_2253, _3812.y, _3812.x * _2252)) + _3812.w) / _3873;
                                float _3933 = (fma(_2254, _3827.z, fma(_2253, _3827.y, _3827.x * _2252)) + _3827.w) / _3873;
                                float _3937 = 1.0 - dot(vec2(_3932, _3933), vec2(_3932, _3933));
                                float _5116 = isnan(0.0) ? _3937 : (isnan(_3937) ? 0.0 : max(_3937, 0.0));
                                float _3938 = isnan(1.0) ? _5116 : (isnan(_5116) ? 1.0 : min(_5116, 1.0));
                                float _3939 = _3938 * (((isnan(0.0) ? _3925 : (isnan(_3925) ? 0.0 : max(_3925, 0.0))) * _3915) / ((_3928 * 0.699999988079071044921875) + 1.0));
                                float _3951 = exp2(log2(1.0 / ((_3928 * 3.5) + 5.0)) * 0.25);
                                float _3952 = 1.0 - _1196;
                                float _3959 = sqrt(1.0 - ((1.0 - (_3952 * _3952)) * (1.0 - (_3951 * _3951))));
                                float _3960 = _3959 * _3959;
                                float _3961 = _3960 * _3960;
                                float _3962 = _3908 - _3412;
                                float _3963 = _3909 - _3413;
                                float _3964 = _3910 - _3414;
                                float _3968 = inversesqrt(dot(vec3(_3962, _3963, _3964), vec3(_3962, _3963, _3964)));
                                float _3972 = dot(vec3(_1121, _1124, _1127), vec3((-0.0) - _3412, (-0.0) - _3413, (-0.0) - _3414));
                                float _5127 = isnan(0.0) ? _3972 : (isnan(_3972) ? 0.0 : max(_3972, 0.0));
                                float _3975 = isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0));
                                float _3976 = dot(vec3(_1121, _1124, _1127), vec3(_3968 * _3962, _3968 * _3963, _3968 * _3964));
                                float _5138 = isnan(0.0) ? _3976 : (isnan(_3976) ? 0.0 : max(_3976, 0.0));
                                float _3979 = isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0));
                                float _3983 = ((_3979 * _3979) * (_3961 + (-1.0))) + 1.0;
                                float _3984 = _3921 * _3960;
                                float _3985 = _3984 * _3984;
                                float _3991 = ((1.0 - _3985) * dot(vec3(_1121, _1124, _1127), vec3(_3908, _3909, _3910))) + _3985;
                                float _5149 = isnan(0.0) ? _3991 : (isnan(_3991) ? 0.0 : max(_3991, 0.0));
                                float _3992 = isnan(1.0) ? _5149 : (isnan(_5149) ? 1.0 : min(_5149, 1.0));
                                float _3993 = 1.0 - _3960;
                                float _4003 = (0.5 / (((_3992 * ((_3975 * _3993) + _3960)) + 9.9999999392252902907785028219223e-09) + (((_3992 * _3993) + _3960) * _3975))) * _3992;
                                float _5160 = isnan(0.0) ? _4003 : (isnan(_4003) ? 0.0 : max(_4003, 0.0));
                                float _4013 = (_3938 * _3915) * (((_3961 * 3.1415927410125732421875) * (isnan(1.0) ? _5160 : (isnan(_5160) ? 1.0 : min(_5160, 1.0)))) / ((_3983 * _3983) * ((_3928 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3939 * _3785.y;
                                frontier_phi_78_pred_1 = _3939 * _3785.x;
                                frontier_phi_78_pred_2 = _4013 * _3797.z;
                                frontier_phi_78_pred_3 = _4013 * _3797.y;
                                frontier_phi_78_pred_4 = _4013 * _3797.x;
                                frontier_phi_78_pred_5 = _3939 * _3785.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4021 = frontier_phi_78_pred;
                            _4020 = frontier_phi_78_pred_1;
                            _4019 = frontier_phi_78_pred_2;
                            _4018 = frontier_phi_78_pred_3;
                            _4017 = frontier_phi_78_pred_4;
                            _4022 = frontier_phi_78_pred_5;
                            _3727 = _4020 + _3740;
                            _3728 = _4021 + _3741;
                            _3729 = _4022 + _3742;
                            _3724 = _4017 + _3737;
                            _3725 = _4018 + _3738;
                            _3726 = _4019 + _3739;
                            if (_3744 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3737 = _3724;
                                _3738 = _3725;
                                _3739 = _3726;
                                _3740 = _3727;
                                _3741 = _3728;
                                _3742 = _3729;
                                _3743 = _3744;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3729;
                        frontier_phi_72_pred_1 = _3728;
                        frontier_phi_72_pred_2 = _3727;
                        frontier_phi_72_pred_3 = _3726;
                        frontier_phi_72_pred_4 = _3725;
                        frontier_phi_72_pred_5 = _3724;
                    }
                    _3397 = frontier_phi_72_pred;
                    _3395 = frontier_phi_72_pred_1;
                    _3393 = frontier_phi_72_pred_2;
                    _3391 = frontier_phi_72_pred_3;
                    _3389 = frontier_phi_72_pred_4;
                    _3387 = frontier_phi_72_pred_5;
                    uint _3532 = _3531 + 1u;
                    if (_3532 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3525 = _3387;
                        _3526 = _3389;
                        _3527 = _3391;
                        _3528 = _3393;
                        _3529 = _3395;
                        _3530 = _3397;
                        _3531 = _3532;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3397;
                frontier_phi_60_61_ladder_1 = _3395;
                frontier_phi_60_61_ladder_2 = _3391;
                frontier_phi_60_61_ladder_3 = _3389;
                frontier_phi_60_61_ladder_4 = _3387;
                frontier_phi_60_61_ladder_5 = _3393;
            }
            else
            {
                frontier_phi_60_61_ladder = _3283;
                frontier_phi_60_61_ladder_1 = _3281;
                frontier_phi_60_61_ladder_2 = _3277;
                frontier_phi_60_61_ladder_3 = _3275;
                frontier_phi_60_61_ladder_4 = _3273;
                frontier_phi_60_61_ladder_5 = _3279;
            }
            _3386 = frontier_phi_60_61_ladder_4;
            _3388 = frontier_phi_60_61_ladder_3;
            _3390 = frontier_phi_60_61_ladder_2;
            _3392 = frontier_phi_60_61_ladder_5;
            _3394 = frontier_phi_60_61_ladder_1;
            _3396 = frontier_phi_60_61_ladder;
        }
        float _3401 = isnan(1.0) ? _1180 : (isnan(_1180) ? 1.0 : min(_1180, 1.0));
        _3206 = (_3401 * _3392) + _2718;
        _3208 = (_3401 * _3394) + _2720;
        _3210 = (_3401 * _3396) + _2722;
        _3212 = ((_3386 * _1164) * _3401) + _3056;
        _3214 = ((_3388 * _1166) * _3401) + _3058;
        _3216 = ((_3390 * _1167) * _3401) + _3060;
    }
    else
    {
        _3206 = _2718;
        _3208 = _2720;
        _3210 = _2722;
        _3212 = _3056;
        _3214 = _3058;
        _3216 = _3060;
    }
    float _5176 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    float _5187 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
    float _5198 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    uint _3236 = _290 + 6u;
    float _3244 = _1102 / cbSceneParam._m0[86u].x;
    float _3245 = _1103 / cbSceneParam._m0[86u].y;
    vec4 _3259 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3244, _3245, (log2((isnan(cbSceneParam._m0[77u].w) ? _1037 : (isnan(_1037) ? cbSceneParam._m0[77u].w : min(_1037, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3261 = _3259.x;
    float _3262 = _3259.y;
    float _3263 = _3259.z;
    float _3264 = _3259.w;
    float _3336;
    float _3338;
    float _3340;
    float _3342;
    if (_1037 > cbSceneParam._m0[78u].w)
    {
        float _3298 = isnan(_1037) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1037 : min(cbSceneParam._m0[80u].w, _1037));
        float _3299 = _3298 / _1037;
        float _3310 = _3299 * _1087;
        float _3311 = _1088 * _3299;
        float _3312 = (-0.0) - _3311;
        float _3314 = _3299 * _1089;
        float _3316 = (cbSceneParam._m0[77u].w * _3312) / _3298;
        float _3317 = _3316 + cbSceneParam._m0[79u].w;
        float _3318 = cbSceneParam._m0[79u].w - _3311;
        float _3324 = sqrt(((_3310 * _3310) + (_3311 * _3311)) + (_3314 * _3314));
        float _3327 = (1.0 - (cbSceneParam._m0[77u].w / _3298)) * _3324;
        float _3332 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3334 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3487;
        if (abs((_3312 - _3316) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3487 = ((((_3317 > 0.0) ? exp2(_3332 * _3317) : (2.0 - exp2(_3334 * _3317))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3327;
        }
        else
        {
            float _3447 = 1.0 / cbSceneParam._m0[80u].x;
            float _3448 = isnan(_3318) ? _3317 : (isnan(_3317) ? _3318 : max(_3317, _3318));
            float _3449 = isnan(_3318) ? _3317 : (isnan(_3317) ? _3318 : min(_3317, _3318));
            float _3458 = isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : min(_3448, 0.0));
            float _3459 = isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : min(_3449, 0.0));
            _3487 = ((abs(_3324 / _3312) * cbSceneParam._m0[80u].y) * ((((_3458 - _3459) * 2.0) - ((exp2(_3332 * (isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : max(_3448, 0.0)))) - exp2(_3332 * (isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : max(_3449, 0.0))))) * _3447)) - ((exp2(_3334 * _3458) - exp2(_3334 * _3459)) * _3447))) + (_3327 * cbSceneParam._m0[80u].z);
        }
        vec4 _3489 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3244, _3245, 1.0), 0.0);
        float _3498 = exp2((_3487 * (-1.44269502162933349609375)) * (1.0 - _3489.w));
        float _3499 = log2(_3498);
        float _3515 = log2(_3264);
        _3336 = (exp2(_3515 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3499 * cbSceneParam._m0[78u].x)) * _3489.x) / cbSceneParam._m0[78u].x)) + _3261;
        _3338 = (exp2(_3515 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3499 * cbSceneParam._m0[78u].y)) * _3489.y) / cbSceneParam._m0[78u].y)) + _3262;
        _3340 = (exp2(_3515 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3499 * cbSceneParam._m0[78u].z)) * _3489.z) / cbSceneParam._m0[78u].z)) + _3263;
        _3342 = _3498 * _3264;
    }
    else
    {
        _3336 = _3261;
        _3338 = _3262;
        _3340 = _3263;
        _3342 = _3264;
    }
    float _3354 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3355 = _3354 == 3.0;
    float _3356 = log2(_3342);
    float _3363 = exp2(_3356 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5176 : (isnan(_5176) ? 1.0 : min(_5176, 1.0))) * (_3206 + ((isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0))) * _1180))) + ((_3212 + ((isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0))) * _1986)) * cbPerFrame._m0[3u].x));
    float _3364 = exp2(_3356 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5187 : (isnan(_5187) ? 1.0 : min(_5187, 1.0))) * (_3208 + ((isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0))) * _1180))) + ((_3214 + ((isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0))) * _1986)) * cbPerFrame._m0[3u].x));
    float _3365 = exp2(_3356 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5198 : (isnan(_5198) ? 1.0 : min(_5198, 1.0))) * (_3210 + ((isnan(0.0) ? _1913 : (isnan(_1913) ? 0.0 : max(_1913, 0.0))) * _1180))) + ((_3216 + ((isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0))) * _1986)) * cbPerFrame._m0[3u].x));
    float _3374 = (_3354 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3374 * (_3355 ? _3363 : (_3363 + (cbSceneParam._m0[72u].w * _3336)));
    SV_Target.y = _3374 * (_3355 ? _3364 : (_3364 + (cbSceneParam._m0[72u].w * _3338)));
    SV_Target.z = _3374 * (_3355 ? _3365 : (_3365 + (cbSceneParam._m0[72u].w * _3340)));
    SV_Target.w = cbInstanceData._m0[_3236].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3236].w;
}


