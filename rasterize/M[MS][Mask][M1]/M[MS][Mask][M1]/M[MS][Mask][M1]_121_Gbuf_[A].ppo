#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _191 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _192 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _193 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _199 = inversesqrt(dot(vec3(_191, _192, _193), vec3(_191, _192, _193)));
    float _200 = _199 * _191;
    float _201 = _199 * _192;
    float _202 = _199 * _193;
    float _206 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _207 = _206 * NORMAL.x;
    float _208 = _206 * NORMAL.y;
    float _209 = _206 * NORMAL.z;
    float _213 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _214 = _213 * TANGENT.x;
    float _215 = _213 * TANGENT.y;
    float _216 = _213 * TANGENT.z;
    uint _219 = uint(roundEven(NORMAL.w)) * 13u;
    uint _225 = _219 + 1u;
    uint _229 = _219 + 2u;
    float _238 = sqrt(((cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x)) + (cbInstanceData._m0[_229].x * cbInstanceData._m0[_229].x));
    float _239 = _238 * TEXCOORD.z;
    float _240 = _238 * TEXCOORD.w;
    vec4 _260 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _266 = _260.x * cbMtdParam._m0[11u].x;
    float _267 = _260.y * cbMtdParam._m0[11u].y;
    float _268 = _260.z * cbMtdParam._m0[11u].z;
    vec4 _287 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _239) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _240) + cbTextureTilingScale._m0[5u].w));
    vec4 _307 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _349 = _347.x;
    float _362 = dot(vec4(_349, _347.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _379 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _307.x) * 2.0) - ((((_349 - _362) * cbMtdParam._m0[23u].w) + _362) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1116 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _380 = isnan(1.0) ? _1116 : (isnan(_1116) ? 1.0 : min(_1116, 1.0));
    float _387 = (_380 * ((_287.x * cbMtdParam._m0[12u].x) - _266)) + _266;
    float _388 = (_380 * ((_287.y * cbMtdParam._m0[12u].y) - _267)) + _267;
    float _389 = (_380 * ((_287.z * cbMtdParam._m0[12u].z) - _268)) + _268;
    vec4 _406 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _239) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _240) + cbTextureTilingScale._m0[3u].w));
    vec4 _426 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _428 = _426.x;
    float _438 = dot(vec4(_428, _426.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _452 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _307.y) * 2.0) - ((((_428 - _438) * cbMtdParam._m0[23u].w) + _438) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1127 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _453 = isnan(1.0) ? _1127 : (isnan(_1127) ? 1.0 : min(_1127, 1.0));
    float _460 = (_453 * ((_406.x * cbMtdParam._m0[13u].x) - _387)) + _387;
    float _461 = (_453 * ((_406.y * cbMtdParam._m0[13u].y) - _388)) + _388;
    float _462 = (_453 * ((_406.z * cbMtdParam._m0[13u].z) - _389)) + _389;
    vec4 _481 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _239) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _240) + cbTextureTilingScale._m0[24u].w));
    vec4 _498 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _500 = _498.x;
    float _510 = dot(vec4(_500, _498.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _522 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _307.z) * 2.0) - ((((_500 - _510) * cbMtdParam._m0[23u].w) + _510) * cbMtdParam._m0[20u].z))) + 1.0;
    float _1138 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _523 = isnan(1.0) ? _1138 : (isnan(_1138) ? 1.0 : min(_1138, 1.0));
    float _530 = (_523 * ((_481.x * cbMtdParam._m0[14u].x) - _460)) + _460;
    float _531 = (_523 * ((_481.y * cbMtdParam._m0[14u].y) - _461)) + _461;
    float _532 = (_523 * ((_481.z * cbMtdParam._m0[14u].z) - _462)) + _462;
    vec4 _550 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _239) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _240) + cbTextureTilingScale._m0[4u].w));
    vec4 _567 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _569 = _567.x;
    float _570 = _567.y;
    float _571 = _567.z;
    float _578 = ((_550.x - _569) * _380) + _569;
    float _579 = ((_550.y - _570) * _380) + _570;
    float _580 = ((_550.z - _571) * _380) + _571;
    vec4 _592 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _239) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _240) + cbTextureTilingScale._m0[2u].w));
    float _603 = ((_592.x - _578) * _453) + _578;
    float _604 = ((_592.y - _579) * _453) + _579;
    float _605 = ((_592.z - _580) * _453) + _580;
    vec4 _617 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _239) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _240) + cbTextureTilingScale._m0[23u].w));
    float _630 = ((_617.z - _605) * _523) + _605;
    float _633 = ((((_617.x - _603) * _523) + _603) * 2.0) + (-1.0);
    float _635 = ((((_617.y - _604) * _523) + _604) * 2.0) + (-1.0);
    float _636 = dot(vec2(_633, _635), vec2(_633, _635));
    float _1149 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _641 = sqrt(1.0 - (isnan(1.0) ? _1149 : (isnan(_1149) ? 1.0 : min(_1149, 1.0))));
    vec4 _655 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _667 = (((_655.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _633;
    float _668 = (((_655.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _635;
    float _671 = fma(_641, _207, fma(_668, _214, _667 * _200));
    float _674 = fma(_641, _208, fma(_668, _215, _667 * _201));
    float _677 = fma(_641, _209, fma(_668, _216, _667 * _202));
    float _681 = inversesqrt(dot(vec3(_671, _674, _677), vec3(_671, _674, _677)));
    vec4 _708 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _239) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _240) + cbTextureTilingScale._m0[11u].w));
    float _710 = _708.x;
    float _711 = 1.0 - _710;
    float _719 = (cbMtdParam._m0[19u].x + dot(vec4(_681 * _671, _681 * _674, _681 * _677, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_710 - _711) * cbMtdParam._m0[24u].z) + _711) * cbMtdParam._m0[21u].z);
    float _1160 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _720 = isnan(1.0) ? _1160 : (isnan(_1160) ? 1.0 : min(_1160, 1.0));
    float _727 = (_720 * (cbMtdParam._m0[17u].x - _530)) + _530;
    float _728 = (_720 * (cbMtdParam._m0[17u].y - _531)) + _531;
    float _729 = (_720 * (cbMtdParam._m0[17u].z - _532)) + _532;
    vec4 _755 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _757 = _755.x;
    float _775 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _239) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _240) + cbTextureTilingScale._m0[9u].w)).x - _757) * _380) + _757;
    float _792 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _239) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _240) + cbTextureTilingScale._m0[21u].w)).x - _775) * _453) + _775;
    float _810 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _239) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _240) + cbTextureTilingScale._m0[10u].w)).x - _792) * _523) + _792;
    float _814 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _810) * cbMtdParam._m0[19u].z) + _810;
    float _816 = _814 - (_814 * _720);
    float _820 = (cbMtdParam._m0[19u].w * (_655.z - _630)) + _630;
    vec4 _833 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _239) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _240) + cbTextureTilingScale._m0[15u].w));
    float _840 = (_833.x * 2.0) + (-1.0);
    float _841 = (_833.y * 2.0) + (-1.0);
    float _842 = dot(vec2(_840, _841), vec2(_840, _841));
    float _1171 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _850 = ((_833.z - _820) * _720) + _820;
    float _860 = ((sqrt(1.0 - (isnan(1.0) ? _1171 : (isnan(_1171) ? 1.0 : min(_1171, 1.0)))) - _641) * _720) + _641;
    float _863 = (((_840 - _667) * _720) + _667) + (cbMtdParam._m0[21u].x * _667);
    float _864 = (((_841 - _668) * _720) + _668) + (cbMtdParam._m0[21u].x * _668);
    float _866 = cbMtdParam._m0[22u].x + _655.w;
    float _869 = fma(_860, _207, fma(_864, _214, _863 * _200));
    float _872 = fma(_860, _208, fma(_864, _215, _863 * _201));
    float _875 = fma(_860, _209, fma(_864, _216, _863 * _202));
    float _879 = inversesqrt(dot(vec3(_869, _872, _875), vec3(_869, _872, _875)));
    float _1182 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _1193 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _881 = isnan(1.0) ? _1193 : (isnan(_1193) ? 1.0 : min(_1193, 1.0));
    float _1204 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _882 = isnan(1.0) ? _1204 : (isnan(_1204) ? 1.0 : min(_1204, 1.0));
    float _1215 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _883 = isnan(1.0) ? _1215 : (isnan(_1215) ? 1.0 : min(_1215, 1.0));
    float _1226 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _884 = isnan(1.0) ? _1226 : (isnan(_1226) ? 1.0 : min(_1226, 1.0));
    float _1237 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _925 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _935 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _925);
    float _936 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _925);
    float _937 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _925);
    vec4 _942 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _944 = _942.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1004 = sqrt(((_935 * _935) + (_936 * _936)) + (_937 * _937));
        float _1010 = (cbMatDynParam._m0[5u].x * _1004) + cbMatDynParam._m0[5u].y;
        float _1248 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
        float _1011 = isnan(1.0) ? _1248 : (isnan(_1248) ? 1.0 : min(_1248, 1.0));
        float _1015 = (cbMatDynParam._m0[5u].z * _1004) + cbMatDynParam._m0[5u].w;
        float _1259 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1259 : (isnan(_1259) ? 1.0 : min(_1259, 1.0))) - _1011)) + _1011) < ((_944 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1043;
    vec4 _966;
    float _973;
    float _974;
    float _975;
    float _976;
    float _980;
    vec4 _984;
    float _986;
    float _987;
    bool _998;
    for (;;)
    {
        _966 = cbInstanceData._m0[(_219 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _970 = (cbMtdParam._m0[0u].x * _882) * _966.x;
        float _971 = (cbMtdParam._m0[0u].y * _883) * _966.y;
        float _972 = (cbMtdParam._m0[0u].z * _884) * _966.z;
        float _1270 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
        _973 = isnan(1.0) ? _1270 : (isnan(_1270) ? 1.0 : min(_1270, 1.0));
        float _1281 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        _974 = isnan(1.0) ? _1281 : (isnan(_1281) ? 1.0 : min(_1281, 1.0));
        float _1292 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
        _975 = isnan(1.0) ? _1292 : (isnan(_1292) ? 1.0 : min(_1292, 1.0));
        _976 = _881 * TEXCOORD_5.w;
        _980 = cbInstanceData._m0[_219 + 6u].w;
        float _981 = _944 + (-0.5);
        _984 = cbMtdParam._m0[1u];
        _986 = _984.y * _981;
        _987 = _981 * 0.999000012874603271484375;
        _998 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_998)
        {
            if ((cbInstanceData._m0[_219 + 7u].x + _987) < 0.5)
            {
                _1043 = true;
                break;
            }
        }
        if ((_966.w < 1.0) && ((_966.w + _987) < 0.5))
        {
            _1043 = true;
            break;
        }
        if ((_986 + 1.0) < _984.x)
        {
            _1043 = true;
            break;
        }
        _1043 = false;
        break;
    }
    if (_1043)
    {
        discard_state = true;
    }
    bool _1069 = cbMtdParam._m0[1u].z != 0.0;
    float _1070 = _1069 ? _980 : 0.0;
    SV_Target.x = ((_869 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.y = ((_872 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.z = ((_875 * 0.5) * _879) + 0.500488758087158203125;
    SV_Target.w = _1070;
    SV_Target_1.x = isnan(1.0) ? _1237 : (isnan(_1237) ? 1.0 : min(_1237, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1182 : (isnan(_1182) ? 1.0 : min(_1182, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1069 ? _980 : _976;
    SV_Target_2.x = _973;
    SV_Target_2.y = _974;
    SV_Target_2.z = _975;
    SV_Target_2.w = _1069 ? _980 : (float(floatBitsToUint(cbInstanceData._m0[_219 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1070;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1070;
    discard_exit();
}


