#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 11) in vec4 TEXCOORD_4;
layout(location = 12) in vec4 TEXCOORD_5;
layout(location = 13) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out float TEXCOORD_20;
layout(location = 10, component = 1) out float TEXCOORD_21;
layout(location = 10, component = 2) out float TEXCOORD_22;
layout(location = 11) out vec4 TEXCOORD_25;
layout(location = 12) out vec4 TEXCOORD_26;
layout(location = 13) out vec3 TEXCOORD_27;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_20 = 0.0;
    TEXCOORD_21 = 0.0;
    TEXCOORD_22 = 0.0;
    TEXCOORD_25.x = 0.0;
    TEXCOORD_25.y = 0.0;
    TEXCOORD_25.z = 0.0;
    TEXCOORD_25.w = 0.0;
    TEXCOORD_26.x = 0.0;
    TEXCOORD_26.y = 0.0;
    TEXCOORD_26.z = 0.0;
    TEXCOORD_26.w = 0.0;
    TEXCOORD_27.x = 0.0;
    TEXCOORD_27.y = 0.0;
    TEXCOORD_27.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _281 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _283 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _284 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _293 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _294 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _295 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _305 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _306 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _307 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _317 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _319 = texelFetch(g_InstanceIndexBuffer, int(_317));
    uint _320 = _319.x;
    precise float _321 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _326 = isnan(_321) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _321 : max(0.001000000047497451305389404296875, _321));
    precise float _328 = BLENDWEIGHT.x / _326;
    precise float _329 = BLENDWEIGHT.y / _326;
    precise float _330 = BLENDWEIGHT.z / _326;
    precise float _331 = BLENDWEIGHT.w / _326;
    uint _333 = _320 * 13u;
    uvec4 _338 = floatBitsToUint(cbInstanceData._m0[_333 + 4u]);
    uint _339 = _338.x;
    uint _341 = (_339 + uint(float(BLENDINDICES.x))) * 3u;
    uint _348 = _341 + 1u;
    uint _355 = _341 + 2u;
    precise float _362 = _328 * cbObjMatrix._m0[_341].x;
    precise float _363 = _328 * cbObjMatrix._m0[_348].x;
    precise float _364 = _328 * cbObjMatrix._m0[_355].x;
    precise float _365 = _328 * cbObjMatrix._m0[_341].y;
    precise float _366 = _328 * cbObjMatrix._m0[_348].y;
    precise float _367 = _328 * cbObjMatrix._m0[_355].y;
    precise float _368 = _328 * cbObjMatrix._m0[_341].z;
    precise float _369 = _328 * cbObjMatrix._m0[_348].z;
    precise float _370 = _328 * cbObjMatrix._m0[_355].z;
    precise float _371 = _328 * cbObjMatrix._m0[_341].w;
    precise float _372 = _328 * cbObjMatrix._m0[_348].w;
    precise float _373 = _328 * cbObjMatrix._m0[_355].w;
    uint _376 = (_339 + uint(float(BLENDINDICES.y))) * 3u;
    uint _383 = _376 + 1u;
    uint _390 = _376 + 2u;
    precise float _397 = _329 * cbObjMatrix._m0[_376].x;
    precise float _398 = _329 * cbObjMatrix._m0[_383].x;
    precise float _399 = _329 * cbObjMatrix._m0[_390].x;
    precise float _400 = _329 * cbObjMatrix._m0[_376].y;
    precise float _401 = _329 * cbObjMatrix._m0[_383].y;
    precise float _402 = _329 * cbObjMatrix._m0[_390].y;
    precise float _403 = _329 * cbObjMatrix._m0[_376].z;
    precise float _404 = _329 * cbObjMatrix._m0[_383].z;
    precise float _405 = _329 * cbObjMatrix._m0[_390].z;
    precise float _406 = _329 * cbObjMatrix._m0[_376].w;
    precise float _407 = _329 * cbObjMatrix._m0[_383].w;
    precise float _408 = _329 * cbObjMatrix._m0[_390].w;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    uint _423 = (_339 + uint(float(BLENDINDICES.z))) * 3u;
    uint _430 = _423 + 1u;
    uint _437 = _423 + 2u;
    precise float _444 = _330 * cbObjMatrix._m0[_423].x;
    precise float _445 = _330 * cbObjMatrix._m0[_430].x;
    precise float _446 = _330 * cbObjMatrix._m0[_437].x;
    precise float _447 = _330 * cbObjMatrix._m0[_423].y;
    precise float _448 = _330 * cbObjMatrix._m0[_430].y;
    precise float _449 = _330 * cbObjMatrix._m0[_437].y;
    precise float _450 = _330 * cbObjMatrix._m0[_423].z;
    precise float _451 = _330 * cbObjMatrix._m0[_430].z;
    precise float _452 = _330 * cbObjMatrix._m0[_437].z;
    precise float _453 = _330 * cbObjMatrix._m0[_423].w;
    precise float _454 = _330 * cbObjMatrix._m0[_430].w;
    precise float _455 = _330 * cbObjMatrix._m0[_437].w;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    uint _470 = (_339 + uint(float(BLENDINDICES.w))) * 3u;
    uint _477 = _470 + 1u;
    uint _484 = _470 + 2u;
    precise float _491 = _331 * cbObjMatrix._m0[_470].x;
    precise float _492 = _331 * cbObjMatrix._m0[_477].x;
    precise float _493 = _331 * cbObjMatrix._m0[_484].x;
    precise float _494 = _331 * cbObjMatrix._m0[_470].y;
    precise float _495 = _331 * cbObjMatrix._m0[_477].y;
    precise float _496 = _331 * cbObjMatrix._m0[_484].y;
    precise float _497 = _331 * cbObjMatrix._m0[_470].z;
    precise float _498 = _331 * cbObjMatrix._m0[_477].z;
    precise float _499 = _331 * cbObjMatrix._m0[_484].z;
    precise float _500 = _331 * cbObjMatrix._m0[_470].w;
    precise float _501 = _331 * cbObjMatrix._m0[_477].w;
    precise float _502 = _331 * cbObjMatrix._m0[_484].w;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _460 + _495;
    precise float _508 = _461 + _496;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = POSITION.x * _503;
    precise float _516 = POSITION.y * _506;
    precise float _517 = _516 + _515;
    precise float _518 = POSITION.z * _509;
    precise float _519 = _518 + _517;
    precise float _520 = 1.0 * _512;
    precise float _521 = _520 + _519;
    precise float _522 = POSITION.x * _504;
    precise float _523 = POSITION.y * _507;
    precise float _524 = _523 + _522;
    precise float _525 = POSITION.z * _510;
    precise float _526 = _525 + _524;
    precise float _527 = 1.0 * _513;
    precise float _528 = _527 + _526;
    precise float _529 = POSITION.x * _505;
    precise float _530 = POSITION.y * _508;
    precise float _531 = _530 + _529;
    precise float _532 = POSITION.z * _511;
    precise float _533 = _532 + _531;
    precise float _534 = 1.0 * _514;
    precise float _535 = _534 + _533;
    float _710 = (((((cbPrevObjMatrix._m0[_376].w * _329) + (cbPrevObjMatrix._m0[_341].w * _328)) + (cbPrevObjMatrix._m0[_423].w * _330)) + (cbPrevObjMatrix._m0[_470].w * _331)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_376].z * _329) + (cbPrevObjMatrix._m0[_341].z * _328)) + (cbPrevObjMatrix._m0[_423].z * _330)) + (cbPrevObjMatrix._m0[_470].z * _331), fma(POSITION.y, (((cbPrevObjMatrix._m0[_376].y * _329) + (cbPrevObjMatrix._m0[_341].y * _328)) + (cbPrevObjMatrix._m0[_423].y * _330)) + (cbPrevObjMatrix._m0[_470].y * _331), ((((cbPrevObjMatrix._m0[_376].x * _329) + (cbPrevObjMatrix._m0[_341].x * _328)) + (cbPrevObjMatrix._m0[_423].x * _330)) + (cbPrevObjMatrix._m0[_470].x * _331)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _711 = (((((cbPrevObjMatrix._m0[_383].w * _329) + (cbPrevObjMatrix._m0[_348].w * _328)) + (cbPrevObjMatrix._m0[_430].w * _330)) + (cbPrevObjMatrix._m0[_477].w * _331)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_383].z * _329) + (cbPrevObjMatrix._m0[_348].z * _328)) + (cbPrevObjMatrix._m0[_430].z * _330)) + (cbPrevObjMatrix._m0[_477].z * _331), fma(POSITION.y, (((cbPrevObjMatrix._m0[_383].y * _329) + (cbPrevObjMatrix._m0[_348].y * _328)) + (cbPrevObjMatrix._m0[_430].y * _330)) + (cbPrevObjMatrix._m0[_477].y * _331), ((((cbPrevObjMatrix._m0[_383].x * _329) + (cbPrevObjMatrix._m0[_348].x * _328)) + (cbPrevObjMatrix._m0[_430].x * _330)) + (cbPrevObjMatrix._m0[_477].x * _331)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _712 = (((((cbPrevObjMatrix._m0[_390].w * _329) + (cbPrevObjMatrix._m0[_355].w * _328)) + (cbPrevObjMatrix._m0[_437].w * _330)) + (cbPrevObjMatrix._m0[_484].w * _331)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_390].z * _329) + (cbPrevObjMatrix._m0[_355].z * _328)) + (cbPrevObjMatrix._m0[_437].z * _330)) + (cbPrevObjMatrix._m0[_484].z * _331), fma(POSITION.y, (((cbPrevObjMatrix._m0[_390].y * _329) + (cbPrevObjMatrix._m0[_355].y * _328)) + (cbPrevObjMatrix._m0[_437].y * _330)) + (cbPrevObjMatrix._m0[_484].y * _331), ((((cbPrevObjMatrix._m0[_390].x * _329) + (cbPrevObjMatrix._m0[_355].x * _328)) + (cbPrevObjMatrix._m0[_437].x * _330)) + (cbPrevObjMatrix._m0[_484].x * _331)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _759 = fma(_284, _509, fma(_283, _506, _503 * _281));
    float _762 = fma(_284, _510, fma(_283, _507, _504 * _281));
    float _765 = fma(_284, _511, fma(_283, _508, _505 * _281));
    precise float _790 = _521 - cbSceneParam._m0[3u].x;
    precise float _791 = _528 - cbSceneParam._m0[3u].y;
    precise float _792 = _535 - cbSceneParam._m0[3u].z;
    precise float _820 = _790 * cbSceneParam._m0[24u].x;
    precise float _821 = _791 * cbSceneParam._m0[24u].y;
    precise float _822 = _821 + _820;
    precise float _823 = _792 * cbSceneParam._m0[24u].z;
    precise float _824 = _823 + _822;
    precise float _825 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _826 = _825 + _824;
    precise float _827 = _790 * cbSceneParam._m0[25u].x;
    precise float _828 = _791 * cbSceneParam._m0[25u].y;
    precise float _829 = _828 + _827;
    precise float _830 = _792 * cbSceneParam._m0[25u].z;
    precise float _831 = _830 + _829;
    precise float _832 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _833 = _832 + _831;
    precise float _834 = _790 * cbSceneParam._m0[26u].x;
    precise float _835 = _791 * cbSceneParam._m0[26u].y;
    precise float _836 = _835 + _834;
    precise float _837 = _792 * cbSceneParam._m0[26u].z;
    precise float _838 = _837 + _836;
    precise float _839 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _840 = _839 + _838;
    precise float _841 = _790 * cbSceneParam._m0[27u].x;
    precise float _842 = _791 * cbSceneParam._m0[27u].y;
    precise float _843 = _842 + _841;
    precise float _844 = _792 * cbSceneParam._m0[27u].z;
    precise float _845 = _844 + _843;
    precise float _846 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _847 = _846 + _845;
    gl_Position.x = _826;
    gl_Position.y = _833;
    gl_Position.z = _840;
    gl_Position.w = _847;
    POSITION_1.x = _826;
    POSITION_1.y = _833;
    POSITION_1.z = _840;
    POSITION_1.w = _847;
    NORMAL_1.x = _759;
    NORMAL_1.y = _762;
    NORMAL_1.z = _765;
    NORMAL_1.w = float(_320);
    TANGENT_1.x = fma(_295, _509, fma(_294, _506, _503 * _293));
    TANGENT_1.y = fma(_295, _510, fma(_294, _507, _504 * _293));
    TANGENT_1.z = fma(_295, _511, fma(_294, _508, _505 * _293));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_307, _509, fma(_306, _506, _503 * _305));
    TANGENT_2_1.y = fma(_307, _510, fma(_306, _507, _504 * _305));
    TANGENT_2_1.z = fma(_307, _511, fma(_306, _508, _505 * _305));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_7.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_7.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_7.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_1.x;
    TEXCOORD_5_1.y = TEXCOORD_1.y;
    TEXCOORD_5_1.z = TEXCOORD_1.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8.x = TEXCOORD_2.x;
    TEXCOORD_8.y = TEXCOORD_2.y;
    TEXCOORD_8.z = TEXCOORD_2.z;
    TEXCOORD_8.w = TEXCOORD_5.x;
    TEXCOORD_11.x = TEXCOORD_3.x;
    TEXCOORD_11.y = TEXCOORD_3.y;
    TEXCOORD_11.z = TEXCOORD_3.z;
    TEXCOORD_11.w = TEXCOORD_5.y;
    TEXCOORD_14.x = TEXCOORD_4.x;
    TEXCOORD_14.y = TEXCOORD_4.y;
    TEXCOORD_14.z = TEXCOORD_4.z;
    TEXCOORD_14.w = TEXCOORD_5.z;
    TEXCOORD_20 = TEXCOORD_6.x;
    TEXCOORD_21 = TEXCOORD_6.y;
    TEXCOORD_22 = TEXCOORD_6.z;
    TEXCOORD_25.x = _826;
    TEXCOORD_25.y = _833;
    TEXCOORD_25.z = _840;
    TEXCOORD_25.w = _847;
    TEXCOORD_26.x = fma(_712, cbSceneParam._m0[29u].z, fma(_711, cbSceneParam._m0[29u].y, _710 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_26.y = fma(_712, cbSceneParam._m0[30u].z, fma(_711, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _710)) + cbSceneParam._m0[30u].w;
    TEXCOORD_26.z = fma(_712, cbSceneParam._m0[31u].z, fma(_711, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _710)) + cbSceneParam._m0[31u].w;
    TEXCOORD_26.w = fma(_712, cbSceneParam._m0[32u].z, fma(_711, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _710)) + cbSceneParam._m0[32u].w;
    TEXCOORD_27.x = _759;
    TEXCOORD_27.y = _762;
    TEXCOORD_27.z = _765;
    gl_ClipDistance[0u] = dot(vec4(_826, _833, _840, _847), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_826, _833, _840, _847), vec4(cbInstanceData._m0[_333 + 3u]));
}


