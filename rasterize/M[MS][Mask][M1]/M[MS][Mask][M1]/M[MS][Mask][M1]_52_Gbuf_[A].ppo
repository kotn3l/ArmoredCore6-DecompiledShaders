#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _215 = _209 + 1u;
    uint _219 = _209 + 2u;
    float _228 = sqrt(((cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x));
    float _229 = _228 * TEXCOORD.z;
    float _230 = _228 * TEXCOORD.w;
    vec4 _249 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _273 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _278 = _273.x * cbMtdParam._m0[11u].x;
    float _279 = _273.y * cbMtdParam._m0[11u].y;
    float _280 = _273.z * cbMtdParam._m0[11u].z;
    vec4 _299 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _229) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _230) + cbTextureTilingScale._m0[5u].w));
    vec4 _319 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _356 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _358 = _356.x;
    float _371 = dot(vec4(_358, _356.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _388 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _319.x) * 2.0) - ((((_358 - _371) * cbMtdParam._m0[23u].w) + _371) * cbMtdParam._m0[22u].w))) + 1.0;
    float _911 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _389 = isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0));
    float _396 = (_389 * ((_299.x * cbMtdParam._m0[12u].x) - _278)) + _278;
    float _397 = (_389 * ((_299.y * cbMtdParam._m0[12u].y) - _279)) + _279;
    float _398 = (_389 * ((_299.z * cbMtdParam._m0[12u].z) - _280)) + _280;
    vec4 _415 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _229) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _230) + cbTextureTilingScale._m0[3u].w));
    vec4 _435 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _437 = _435.x;
    float _447 = dot(vec4(_437, _435.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _461 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _319.y) * 2.0) - ((((_437 - _447) * cbMtdParam._m0[23u].w) + _447) * cbMtdParam._m0[20u].w))) + 1.0;
    float _922 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _462 = isnan(1.0) ? _922 : (isnan(_922) ? 1.0 : min(_922, 1.0));
    float _475 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _249.x) * ((_462 * ((_415.x * cbMtdParam._m0[13u].x) - _396)) + _396);
    float _478 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _249.y) * ((_462 * ((_415.y * cbMtdParam._m0[13u].y) - _397)) + _397);
    float _481 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _249.z) * ((_462 * ((_415.z * cbMtdParam._m0[13u].z) - _398)) + _398);
    vec4 _494 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _229) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _230) + cbTextureTilingScale._m0[4u].w));
    vec4 _511 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _513 = _511.x;
    float _514 = _511.y;
    float _515 = _511.z;
    float _522 = ((_494.x - _513) * _389) + _513;
    float _523 = ((_494.y - _514) * _389) + _514;
    float _524 = ((_494.z - _515) * _389) + _515;
    vec4 _536 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _229) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _230) + cbTextureTilingScale._m0[2u].w));
    float _549 = ((_536.z - _524) * _462) + _524;
    float _552 = ((((_536.x - _522) * _462) + _522) * 2.0) + (-1.0);
    float _554 = ((((_536.y - _523) * _462) + _523) * 2.0) + (-1.0);
    float _555 = dot(vec2(_552, _554), vec2(_552, _554));
    float _933 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _560 = sqrt(1.0 - (isnan(1.0) ? _933 : (isnan(_933) ? 1.0 : min(_933, 1.0))));
    vec4 _574 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _586 = (((_574.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _552;
    float _587 = (((_574.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _554;
    vec4 _613 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _615 = _613.x;
    float _632 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _229) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _230) + cbTextureTilingScale._m0[9u].w)).x - _615) * _389) + _615;
    vec4 _645 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _229) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _230) + cbTextureTilingScale._m0[21u].w));
    float _650 = ((_645.x - _632) * _462) + _632;
    float _654 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _650) * cbMtdParam._m0[19u].z) + _650;
    float _658 = (cbMtdParam._m0[19u].w * (_574.z - _549)) + _549;
    float _660 = cbMtdParam._m0[22u].x + _574.w;
    float _663 = fma(_560, _196 * NORMAL.x, fma(_587, _203 * TANGENT.x, (_189 * _181) * _586));
    float _666 = fma(_560, _196 * NORMAL.y, fma(_587, _203 * TANGENT.y, (_189 * _182) * _586));
    float _669 = fma(_560, _196 * NORMAL.z, fma(_587, _203 * TANGENT.z, (_189 * _183) * _586));
    float _673 = inversesqrt(dot(vec3(_663, _666, _669), vec3(_663, _666, _669)));
    float _944 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _955 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _675 = isnan(1.0) ? _955 : (isnan(_955) ? 1.0 : min(_955, 1.0));
    float _966 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _676 = isnan(1.0) ? _966 : (isnan(_966) ? 1.0 : min(_966, 1.0));
    float _977 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _677 = isnan(1.0) ? _977 : (isnan(_977) ? 1.0 : min(_977, 1.0));
    float _988 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _678 = isnan(1.0) ? _988 : (isnan(_988) ? 1.0 : min(_988, 1.0));
    float _999 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _720 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _730 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _720);
    float _731 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _720);
    float _732 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _720);
    vec4 _737 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _739 = _737.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _799 = sqrt(((_730 * _730) + (_731 * _731)) + (_732 * _732));
        float _805 = (cbMatDynParam._m0[5u].x * _799) + cbMatDynParam._m0[5u].y;
        float _1010 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
        float _806 = isnan(1.0) ? _1010 : (isnan(_1010) ? 1.0 : min(_1010, 1.0));
        float _810 = (cbMatDynParam._m0[5u].z * _799) + cbMatDynParam._m0[5u].w;
        float _1021 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0))) - _806)) + _806) < ((_739 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _838;
    vec4 _761;
    float _768;
    float _769;
    float _770;
    float _771;
    float _775;
    vec4 _779;
    float _781;
    float _782;
    bool _793;
    for (;;)
    {
        _761 = cbInstanceData._m0[(_209 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _765 = (cbMtdParam._m0[0u].x * _676) * _761.x;
        float _766 = (cbMtdParam._m0[0u].y * _677) * _761.y;
        float _767 = (cbMtdParam._m0[0u].z * _678) * _761.z;
        float _1032 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        _768 = isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0));
        float _1043 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
        _769 = isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0));
        float _1054 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
        _770 = isnan(1.0) ? _1054 : (isnan(_1054) ? 1.0 : min(_1054, 1.0));
        _771 = _675 * TEXCOORD_5.w;
        _775 = cbInstanceData._m0[_209 + 6u].w;
        float _776 = _739 + (-0.5);
        _779 = cbMtdParam._m0[1u];
        _781 = _779.y * _776;
        _782 = _776 * 0.999000012874603271484375;
        _793 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_793)
        {
            if ((cbInstanceData._m0[_209 + 7u].x + _782) < 0.5)
            {
                _838 = true;
                break;
            }
        }
        if ((_761.w < 1.0) && ((_761.w + _782) < 0.5))
        {
            _838 = true;
            break;
        }
        if ((_781 + 1.0) < _779.x)
        {
            _838 = true;
            break;
        }
        _838 = false;
        break;
    }
    if (_838)
    {
        discard_state = true;
    }
    bool _864 = cbMtdParam._m0[1u].z != 0.0;
    float _865 = _864 ? _775 : 0.0;
    SV_Target.x = ((_663 * 0.5) * _673) + 0.500488758087158203125;
    SV_Target.y = ((_666 * 0.5) * _673) + 0.500488758087158203125;
    SV_Target.z = ((_669 * 0.5) * _673) + 0.500488758087158203125;
    SV_Target.w = _865;
    SV_Target_1.x = isnan(1.0) ? _999 : (isnan(_999) ? 1.0 : min(_999, 1.0));
    SV_Target_1.y = isnan(1.0) ? _944 : (isnan(_944) ? 1.0 : min(_944, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _864 ? _775 : _771;
    SV_Target_2.x = _768;
    SV_Target_2.y = _769;
    SV_Target_2.z = _770;
    SV_Target_2.w = _864 ? _775 : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _865;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _865;
    discard_exit();
}


