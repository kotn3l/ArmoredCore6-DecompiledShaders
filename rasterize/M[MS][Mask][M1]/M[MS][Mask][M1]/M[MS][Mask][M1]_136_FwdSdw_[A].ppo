#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1626;
float _4286;
float _4287;
float _4288;
float _4289;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _249 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _250 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _251 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _257 = inversesqrt(dot(vec3(_249, _250, _251), vec3(_249, _250, _251)));
    float _264 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _271 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _277 = uint(roundEven(NORMAL.w)) * 13u;
    uint _282 = _277 + 1u;
    uint _286 = _277 + 2u;
    float _295 = sqrt(((cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x) + (cbInstanceData._m0[_277].x * cbInstanceData._m0[_277].x)) + (cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x));
    float _296 = _295 * TEXCOORD.z;
    float _297 = _295 * TEXCOORD.w;
    vec4 _317 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _323 = _317.x * cbMtdParam._m0[11u].x;
    float _324 = _317.y * cbMtdParam._m0[11u].y;
    float _325 = _317.z * cbMtdParam._m0[11u].z;
    vec4 _344 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _296) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _297) + cbTextureTilingScale._m0[5u].w));
    vec4 _363 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _402 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _404 = _402.x;
    float _416 = dot(vec4(_404, _402.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _433 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _363.x) * 2.0) - ((((_404 - _416) * cbMtdParam._m0[23u].w) + _416) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4298 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _434 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    float _441 = (_434 * ((_344.x * cbMtdParam._m0[12u].x) - _323)) + _323;
    float _442 = (_434 * ((_344.y * cbMtdParam._m0[12u].y) - _324)) + _324;
    float _443 = (_434 * ((_344.z * cbMtdParam._m0[12u].z) - _325)) + _325;
    vec4 _460 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _296) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _297) + cbTextureTilingScale._m0[3u].w));
    vec4 _480 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _482 = _480.x;
    float _492 = dot(vec4(_482, _480.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _506 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _363.y) * 2.0) - ((((_482 - _492) * cbMtdParam._m0[23u].w) + _492) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4309 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _507 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
    float _514 = (_507 * ((_460.x * cbMtdParam._m0[13u].x) - _441)) + _441;
    float _515 = (_507 * ((_460.y * cbMtdParam._m0[13u].y) - _442)) + _442;
    float _516 = (_507 * ((_460.z * cbMtdParam._m0[13u].z) - _443)) + _443;
    vec4 _535 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _296) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _297) + cbTextureTilingScale._m0[24u].w));
    vec4 _552 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _554 = _552.x;
    float _564 = dot(vec4(_554, _552.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _576 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _363.z) * 2.0) - ((((_554 - _564) * cbMtdParam._m0[23u].w) + _564) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4320 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _577 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
    float _584 = (_577 * ((_535.x * cbMtdParam._m0[14u].x) - _514)) + _514;
    float _585 = (_577 * ((_535.y * cbMtdParam._m0[14u].y) - _515)) + _515;
    float _586 = (_577 * ((_535.z * cbMtdParam._m0[14u].z) - _516)) + _516;
    vec4 _604 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _296) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _297) + cbTextureTilingScale._m0[14u].w));
    vec4 _624 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _296) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _297) + cbTextureTilingScale._m0[4u].w));
    vec4 _641 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _643 = _641.x;
    float _644 = _641.y;
    float _645 = _641.z;
    float _652 = ((_624.x - _643) * _434) + _643;
    float _653 = ((_624.y - _644) * _434) + _644;
    float _654 = ((_624.z - _645) * _434) + _645;
    vec4 _666 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _296) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _297) + cbTextureTilingScale._m0[2u].w));
    float _677 = ((_666.x - _652) * _507) + _652;
    float _678 = ((_666.y - _653) * _507) + _653;
    float _679 = ((_666.z - _654) * _507) + _654;
    vec4 _691 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _296) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _297) + cbTextureTilingScale._m0[23u].w));
    float _704 = ((_691.z - _679) * _577) + _679;
    float _707 = ((((_691.x - _677) * _577) + _677) * 2.0) + (-1.0);
    float _709 = ((((_691.y - _678) * _577) + _678) * 2.0) + (-1.0);
    float _710 = dot(vec2(_707, _709), vec2(_707, _709));
    float _4331 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _715 = sqrt(1.0 - (isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0))));
    vec4 _729 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _754 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _296) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _297) + cbTextureTilingScale._m0[11u].w));
    float _756 = _754.x;
    float _757 = 1.0 - _756;
    float _765 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _768 = ((isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : min(_765, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _777 = (_768 - ((((((_756 - _757) * cbMtdParam._m0[24u].z) + _757) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _768))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4352 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _778 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
    float _785 = (_778 * ((_604.x * cbMtdParam._m0[18u].x) - _584)) + _584;
    float _786 = (_778 * ((_604.y * cbMtdParam._m0[18u].y) - _585)) + _585;
    float _787 = (_778 * ((_604.z * cbMtdParam._m0[18u].z) - _586)) + _586;
    vec4 _799 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _296) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _297) + cbTextureTilingScale._m0[19u].w));
    float _801 = _799.x;
    float _802 = 1.0 - _801;
    float _827 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_801 - _802) * cbMtdParam._m0[24u].w) + _802) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4363 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _828 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
    float _836 = ((((cbMtdParam._m0[10u].x - _785) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _828) + _785;
    float _837 = ((((cbMtdParam._m0[10u].y - _786) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _828) + _786;
    float _838 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _787)) * _828) + _787;
    vec4 _864 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _866 = _864.x;
    float _884 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _296) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _297) + cbTextureTilingScale._m0[9u].w)).x - _866) * _434) + _866;
    float _901 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _296) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _297) + cbTextureTilingScale._m0[21u].w)).x - _884) * _507) + _884;
    float _918 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _296) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _297) + cbTextureTilingScale._m0[10u].w)).x - _901) * _577) + _901;
    float _922 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _918) * cbMtdParam._m0[19u].z) + _918;
    float _924 = _922 - (_922 * _778);
    float _926 = _924 - (_924 * _828);
    float _930 = (cbMtdParam._m0[19u].w * (_729.z - _704)) + _704;
    vec4 _944 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _296) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _297) + cbTextureTilingScale._m0[15u].w));
    float _951 = (_944.x * 2.0) + (-1.0);
    float _952 = (_944.y * 2.0) + (-1.0);
    float _953 = dot(vec2(_951, _952), vec2(_951, _952));
    float _4374 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _961 = (_778 * (_944.z - _930)) + _930;
    float _964 = ((cbMtdParam._m0[23u].x - _961) * _828) + _961;
    vec4 _987 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _296) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _297) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _993 = (_987.x * 2.0) + (-1.0);
    float _994 = (_987.y * 2.0) + (-1.0);
    float _995 = dot(vec2(_993, _994), vec2(_993, _994));
    float _4385 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1003 = (((_729.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _707;
    float _1004 = (((_729.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _709;
    float _1016 = (((_951 - _1003) + (cbMtdParam._m0[21u].x * _1003)) * _778) + _1003;
    float _1017 = (((_952 - _1004) + (cbMtdParam._m0[21u].x * _1004)) * _778) + _1004;
    float _1018 = (_778 * (sqrt(1.0 - (isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0)))) - _715)) + _715;
    float _1029 = (((_993 - _1016) + (_1016 * cbMtdParam._m0[22u].z)) * _828) + _1016;
    float _1030 = (((_994 - _1017) + (_1017 * cbMtdParam._m0[22u].z)) * _828) + _1017;
    float _1031 = ((sqrt(1.0 - (isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0)))) - _1018) * _828) + _1018;
    float _1033 = cbMtdParam._m0[22u].x + _729.w;
    float _1036 = fma(_1031, _264 * NORMAL.x, fma(_1030, _271 * TANGENT.x, (_257 * _249) * _1029));
    float _1039 = fma(_1031, _264 * NORMAL.y, fma(_1030, _271 * TANGENT.y, (_257 * _250) * _1029));
    float _1042 = fma(_1031, _264 * NORMAL.z, fma(_1030, _271 * TANGENT.z, (_257 * _251) * _1029));
    float _1046 = inversesqrt(dot(vec3(_1036, _1039, _1042), vec3(_1036, _1039, _1042)));
    float _1047 = _1046 * _1036;
    float _1048 = _1046 * _1039;
    float _1049 = _1046 * _1042;
    float _4396 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _1050 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
    float _4407 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _4418 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4429 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _4440 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _4451 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _1055 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
    float _1069 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1109 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1119 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1109);
    float _1120 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1109);
    float _1121 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1109);
    float _1125 = inversesqrt(dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121)));
    float _1126 = _1119 * _1125;
    float _1127 = _1120 * _1125;
    float _1128 = _1121 * _1125;
    vec4 _1133 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1135 = _1133.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1307 = sqrt(((_1119 * _1119) + (_1120 * _1120)) + (_1121 * _1121));
        float _1313 = (cbMatDynParam._m0[5u].x * _1307) + cbMatDynParam._m0[5u].y;
        float _4462 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1314 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _1318 = (cbMatDynParam._m0[5u].z * _1307) + cbMatDynParam._m0[5u].w;
        float _4473 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) - _1314)) + _1314) < ((_1135 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1146 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1147 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1165 = fma(_1049, cbSceneParam._m0[5u].z, fma(_1048, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1047));
    float _1168 = fma(_1049, cbSceneParam._m0[6u].z, fma(_1048, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1047));
    float _1171 = fma(_1049, cbSceneParam._m0[7u].z, fma(_1048, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1047));
    uint _1184 = _277 + 9u;
    uint _1185 = _1184 + uint(cbMatDynParam._m0[0u].w);
    float _1191 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0)))) * cbInstanceData._m0[_1185].x;
    float _1192 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0)))) * cbInstanceData._m0[_1185].y;
    float _1193 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0)))) * cbInstanceData._m0[_1185].z;
    float _4484 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    float _1194 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
    float _4495 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _1195 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
    float _4506 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _1196 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
    float _1197 = 1.0 - _1055;
    float _1198 = _1194 * _1197;
    float _1199 = _1195 * _1197;
    float _1200 = _1196 * _1197;
    float _1205 = (_1194 + (-0.039999999105930328369140625)) * _1055;
    float _1206 = (_1195 + (-0.039999999105930328369140625)) * _1055;
    float _1207 = (_1196 + (-0.039999999105930328369140625)) * _1055;
    float _1208 = _1205 + 0.039999999105930328369140625;
    float _1210 = _1206 + 0.039999999105930328369140625;
    float _1211 = _1207 + 0.039999999105930328369140625;
    vec4 _1220 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1146, cbSceneParam._m0[86u].y * _1147));
    float _1224 = ((isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * TEXCOORD_5.w) * _1220.x;
    float _1225 = dot(vec3(_1047, _1048, _1049), vec3(_1126, _1127, _1128));
    float _1228 = _1225 * 2.0;
    float _1232 = (_1228 * _1047) - _1126;
    float _1233 = (_1228 * _1048) - _1127;
    float _1234 = (_1228 * _1049) - _1128;
    float _1238 = abs(dot(vec3(_1126, _1127, _1128), vec3(_1047, _1048, _1049)));
    float _4517 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _1240 = sqrt(_1050);
    float _1253 = exp2((_1240 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1240 * 3.0));
    float _1259 = (1.0 - _1253) * ((_1240 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1260 = _1253 * _1240;
    float _1288 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1292 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1296 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1625;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    float _1640;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1350 = fma(_1296, cbModelParam._m0[26u].z, fma(_1292, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1288));
        float _1354 = fma(_1296, cbModelParam._m0[27u].z, fma(_1292, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1288));
        float _1358 = fma(_1296, cbModelParam._m0[28u].z, fma(_1292, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1288));
        float _1383 = _1288 + _1047;
        float _1384 = _1292 + _1048;
        float _1385 = _1296 + _1049;
        float _1395 = fma(_1385, cbModelParam._m0[26u].z, fma(_1384, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1383)) - _1350;
        float _1396 = fma(_1385, cbModelParam._m0[27u].z, fma(_1384, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1383)) - _1354;
        float _1397 = fma(_1385, cbModelParam._m0[28u].z, fma(_1384, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1383)) - _1358;
        float _1401 = inversesqrt(dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397)));
        float _1414 = ((_1401 * _1395) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1350 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1415 = ((_1401 * _1396) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1354 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1416 = ((_1401 * _1397) / cbModelParam._m0[34u].z) + ((((((_1358 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1414, _1415, _1416), 0.0);
        float _1453 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1419.x + (-0.5));
        float _1455 = _1453 * (_1419.y + (-0.5));
        float _1456 = _1453 * (_1419.z + (-0.5));
        float _1463 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1426.x + (-0.5));
        float _1465 = _1463 * (_1426.y + (-0.5));
        float _1466 = _1463 * (_1426.z + (-0.5));
        float _1473 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1433.x + (-0.5));
        float _1475 = _1473 * (_1433.y + (-0.5));
        float _1476 = _1473 * (_1433.z + (-0.5));
        float _1483 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1484 = _1483 * (_1440.x + (-0.5));
        float _1485 = _1483 * (_1440.y + (-0.5));
        float _1486 = _1483 * (_1440.z + (-0.5));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1490 = _1454 * 0.5;
        float _1491 = _1464 * 0.5;
        float _1492 = _1474 * 0.5;
        float _1493 = dot(vec3(_1490, _1491, _1492), vec3(_1490, _1491, _1492));
        float _1498 = (_1493 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1493);
        float _1507 = (dot(vec3(_1047, _1048, _1049), vec3(_1498 * _1490, _1498 * _1491, _1498 * _1492)) + 1.0) * 0.5;
        float _4543 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1517 = sqrt(((_1491 * _1491) + (_1490 * _1490)) + (_1492 * _1492)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4554 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _4565 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0))) * (_1519 + 1.0))) + _1524) * _1487;
        float _1534 = _1455 * 0.5;
        float _1535 = _1465 * 0.5;
        float _1536 = _1475 * 0.5;
        float _1537 = dot(vec3(_1534, _1535, _1536), vec3(_1534, _1535, _1536));
        float _1542 = (_1537 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1537);
        float _1550 = (dot(vec3(_1047, _1048, _1049), vec3(_1542 * _1534, _1542 * _1535, _1542 * _1536)) + 1.0) * 0.5;
        float _4576 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1559 = sqrt(((_1535 * _1535) + (_1534 * _1534)) + (_1536 * _1536)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4587 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _1561 = _1560 * 2.0;
        float _1565 = (1.0 - _1560) / (_1560 + 1.0);
        float _4598 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
        float _1575 = ((((1.0 - _1566) * (_1561 + 2.0)) * exp2(log2(isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * (_1561 + 1.0))) + _1566) * _1488;
        float _1576 = _1456 * 0.5;
        float _1577 = _1466 * 0.5;
        float _1578 = _1476 * 0.5;
        float _1579 = dot(vec3(_1576, _1577, _1578), vec3(_1576, _1577, _1578));
        float _1584 = (_1579 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1579);
        float _1592 = (dot(vec3(_1047, _1048, _1049), vec3(_1584 * _1576, _1584 * _1577, _1584 * _1578)) + 1.0) * 0.5;
        float _4609 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1601 = sqrt(((_1577 * _1577) + (_1576 * _1576)) + (_1578 * _1578)) / (_1489 + 9.9999997473787516355514526367188e-06);
        float _4620 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1602 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
        float _1603 = _1602 * 2.0;
        float _1607 = (1.0 - _1602) / (_1602 + 1.0);
        float _4631 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1608 = isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0));
        float _1617 = ((((1.0 - _1608) * (_1603 + 2.0)) * exp2(log2(isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0))) * (_1603 + 1.0))) + _1608) * _1489;
        _1625 = _1456;
        _1627 = _1455;
        _1628 = _1454;
        _1629 = _1466;
        _1630 = _1465;
        _1631 = _1464;
        _1632 = _1476;
        _1633 = _1475;
        _1634 = _1474;
        _1635 = _1489;
        _1636 = _1488;
        _1637 = _1487;
        _1638 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
        _1639 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0)));
        _1640 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0)));
    }
    else
    {
        _1625 = _1626;
        _1627 = _1626;
        _1628 = _1626;
        _1629 = _1626;
        _1630 = _1626;
        _1631 = _1626;
        _1632 = _1626;
        _1633 = _1626;
        _1634 = _1626;
        _1635 = _1626;
        _1636 = _1626;
        _1637 = _1626;
        _1638 = 0.0;
        _1639 = 0.0;
        _1640 = 0.0;
    }
    float _1935;
    float _1936;
    float _1937;
    float _1938;
    float _1939;
    float _1940;
    float _1941;
    float _1942;
    float _1943;
    float _1944;
    float _1945;
    float _1946;
    float _1947;
    float _1948;
    float _1949;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1666 = fma(_1296, cbModelParam._m0[30u].z, fma(_1292, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1288));
        float _1670 = fma(_1296, cbModelParam._m0[31u].z, fma(_1292, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1288));
        float _1674 = fma(_1296, cbModelParam._m0[32u].z, fma(_1292, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1288));
        float _1697 = _1288 + _1047;
        float _1698 = _1292 + _1048;
        float _1699 = _1296 + _1049;
        float _1709 = fma(_1699, cbModelParam._m0[30u].z, fma(_1698, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1697)) - _1666;
        float _1710 = fma(_1699, cbModelParam._m0[31u].z, fma(_1698, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1697)) - _1670;
        float _1711 = fma(_1699, cbModelParam._m0[32u].z, fma(_1698, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1697)) - _1674;
        float _1715 = inversesqrt(dot(vec3(_1709, _1710, _1711), vec3(_1709, _1710, _1711)));
        float _1728 = ((_1715 * _1709) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1666 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1729 = ((_1715 * _1710) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1670 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1730 = ((_1715 * _1711) / cbModelParam._m0[35u].z) + ((((((_1674 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1732 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1728, _1729, _1730), 0.0);
        vec4 _1739 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1728, _1729, _1730), 0.0);
        vec4 _1746 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1728, _1729, _1730), 0.0);
        vec4 _1753 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1728, _1729, _1730), 0.0);
        float _1765 = exp2((_1732.w + (-0.5)) * 20.0) * 2.0;
        float _1766 = _1765 * (_1732.x + (-0.5));
        float _1767 = _1765 * (_1732.y + (-0.5));
        float _1768 = _1765 * (_1732.z + (-0.5));
        float _1775 = exp2((_1739.w + (-0.5)) * 20.0) * 2.0;
        float _1776 = _1775 * (_1739.x + (-0.5));
        float _1777 = _1775 * (_1739.y + (-0.5));
        float _1778 = _1775 * (_1739.z + (-0.5));
        float _1785 = exp2((_1746.w + (-0.5)) * 20.0) * 2.0;
        float _1786 = _1785 * (_1746.x + (-0.5));
        float _1787 = _1785 * (_1746.y + (-0.5));
        float _1788 = _1785 * (_1746.z + (-0.5));
        float _1795 = exp2((_1753.w + (-0.5)) * 20.0) * 2.0;
        float _1796 = _1795 * (_1753.x + (-0.5));
        float _1797 = _1795 * (_1753.y + (-0.5));
        float _1798 = _1795 * (_1753.z + (-0.5));
        float _1799 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1800 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
        float _1801 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1802 = _1766 * 0.5;
        float _1803 = _1776 * 0.5;
        float _1804 = _1786 * 0.5;
        float _1805 = dot(vec3(_1802, _1803, _1804), vec3(_1802, _1803, _1804));
        float _1810 = (_1805 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1805);
        float _1818 = (dot(vec3(_1047, _1048, _1049), vec3(_1810 * _1802, _1810 * _1803, _1810 * _1804)) + 1.0) * 0.5;
        float _4672 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
        float _1827 = sqrt(((_1803 * _1803) + (_1802 * _1802)) + (_1804 * _1804)) / (_1799 + 9.9999997473787516355514526367188e-06);
        float _4683 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1828 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
        float _1829 = _1828 * 2.0;
        float _1833 = (1.0 - _1828) / (_1828 + 1.0);
        float _4694 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
        float _1834 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
        float _1843 = ((((1.0 - _1834) * (_1829 + 2.0)) * exp2(log2(isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0))) * (_1829 + 1.0))) + _1834) * _1799;
        float _1844 = _1767 * 0.5;
        float _1845 = _1777 * 0.5;
        float _1846 = _1787 * 0.5;
        float _1847 = dot(vec3(_1844, _1845, _1846), vec3(_1844, _1845, _1846));
        float _1852 = (_1847 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1847);
        float _1860 = (dot(vec3(_1047, _1048, _1049), vec3(_1852 * _1844, _1852 * _1845, _1852 * _1846)) + 1.0) * 0.5;
        float _4705 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1869 = sqrt(((_1845 * _1845) + (_1844 * _1844)) + (_1846 * _1846)) / (_1800 + 9.9999997473787516355514526367188e-06);
        float _4716 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
        float _1870 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
        float _1871 = _1870 * 2.0;
        float _1875 = (1.0 - _1870) / (_1870 + 1.0);
        float _4727 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
        float _1876 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
        float _1885 = ((((1.0 - _1876) * (_1871 + 2.0)) * exp2(log2(isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0))) * (_1871 + 1.0))) + _1876) * _1800;
        float _1886 = _1768 * 0.5;
        float _1887 = _1778 * 0.5;
        float _1888 = _1788 * 0.5;
        float _1889 = dot(vec3(_1886, _1887, _1888), vec3(_1886, _1887, _1888));
        float _1894 = (_1889 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1889);
        float _1902 = (dot(vec3(_1047, _1048, _1049), vec3(_1894 * _1886, _1894 * _1887, _1894 * _1888)) + 1.0) * 0.5;
        float _4738 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
        float _1911 = sqrt(((_1887 * _1887) + (_1886 * _1886)) + (_1888 * _1888)) / (_1801 + 9.9999997473787516355514526367188e-06);
        float _4749 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
        float _1912 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
        float _1913 = _1912 * 2.0;
        float _1917 = (1.0 - _1912) / (_1912 + 1.0);
        float _4760 = isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0));
        float _1918 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
        float _1927 = ((((1.0 - _1918) * (_1913 + 2.0)) * exp2(log2(isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0))) * (_1913 + 1.0))) + _1918) * _1801;
        _1935 = _1768;
        _1936 = _1767;
        _1937 = _1766;
        _1938 = _1778;
        _1939 = _1777;
        _1940 = _1776;
        _1941 = _1788;
        _1942 = _1787;
        _1943 = _1786;
        _1944 = _1801;
        _1945 = _1800;
        _1946 = _1799;
        _1947 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0)));
        _1948 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0)));
        _1949 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0)));
    }
    else
    {
        _1935 = _1626;
        _1936 = _1626;
        _1937 = _1626;
        _1938 = _1626;
        _1939 = _1626;
        _1940 = _1626;
        _1941 = _1626;
        _1942 = _1626;
        _1943 = _1626;
        _1944 = _1626;
        _1945 = _1626;
        _1946 = _1626;
        _1947 = 0.0;
        _1948 = 0.0;
        _1949 = 0.0;
    }
    float _1959 = (cbModelParam._m0[1u].x * (_1947 - _1638)) + _1638;
    float _1960 = (cbModelParam._m0[1u].x * (_1948 - _1639)) + _1639;
    float _1961 = (cbModelParam._m0[1u].x * (_1949 - _1640)) + _1640;
    float _1982 = fma(_1961, cbSceneParam._m0[89u].z, fma(_1960, cbSceneParam._m0[89u].y, _1959 * cbSceneParam._m0[89u].x));
    float _1985 = fma(_1961, cbSceneParam._m0[90u].z, fma(_1960, cbSceneParam._m0[90u].y, _1959 * cbSceneParam._m0[90u].x));
    float _1988 = fma(_1961, cbSceneParam._m0[91u].z, fma(_1960, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1959));
    float _2003 = _1232 * 0.5;
    float _2004 = _1233 * 0.5;
    float _2005 = _1234 * 0.5;
    float _2006 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1937, _1940, _1943, _1946));
    float _2009 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1936, _1939, _1942, _1945));
    float _2012 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1935, _1938, _1941, _1944));
    float _2046;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2019 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1625, _1629, _1632, _1635));
        float _2023 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1627, _1630, _1633, _1636));
        float _2027 = dot(vec4(_2003, _2004, _2005, 1.0), vec4(_1628, _1631, _1634, _1637));
        float _2034 = dot(vec4(cbModelParam._m0[39u]), vec4(_2003, _2004, _2005, 1.0));
        _2046 = dot(vec3(isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0)), isnan(0.0) ? _2023 : (isnan(_2023) ? 0.0 : max(_2023, 0.0)), isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2034) ? 0.0 : (isnan(0.0) ? _2034 : max(0.0, _2034))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2046 = 1.0;
    }
    float _2057;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2048 = dot(vec4(cbModelParam._m0[40u]), vec4(_2003, _2004, _2005, 1.0));
        _2057 = dot(vec3(isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0)), isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0)), isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2048) ? 0.0 : (isnan(0.0) ? _2048 : max(0.0, _2048))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2057 = 1.0;
    }
    float _2061 = (_2057 * cbModelParam._m0[1u].x) + (_2046 * (1.0 - cbModelParam._m0[1u].x));
    float _2071 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1050);
    float _2072 = isnan(_2071) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2071 : min(cbModelParam._m0[25u].z, _2071));
    float _2152;
    float _2154;
    float _2156;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2119 = fma(_1296, cbModelParam._m0[13u].z, fma(_1292, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1288)) + cbModelParam._m0[13u].w;
        float _2123 = fma(_1296, cbModelParam._m0[14u].z, fma(_1292, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1288)) + cbModelParam._m0[14u].w;
        float _2127 = fma(_1296, cbModelParam._m0[15u].z, fma(_1292, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1288)) + cbModelParam._m0[15u].w;
        float _2130 = fma(_1234, cbModelParam._m0[13u].z, fma(_1233, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1232));
        float _2133 = fma(_1234, cbModelParam._m0[14u].z, fma(_1233, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1232));
        float _2136 = fma(_1234, cbModelParam._m0[15u].z, fma(_1233, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1232));
        float _2164;
        if (_2130 > 0.0)
        {
            _2164 = abs((1.0 - _2119) / _2130);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2130 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2119 + 1.0) / _2130);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2164 = frontier_phi_17_15_ladder;
        }
        float _2335;
        if (_2133 > 0.0)
        {
            _2335 = abs((1.0 - _2123) / _2133);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2133 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2123 + 1.0) / _2133);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2335 = frontier_phi_26_22_ladder;
        }
        float _2630;
        if (_2136 > 0.0)
        {
            _2630 = abs((1.0 - _2127) / _2136);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2136 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2127 + 1.0) / _2136);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2630 = frontier_phi_38_33_ladder;
        }
        float _2632 = isnan(_2335) ? _2164 : (isnan(_2164) ? _2335 : min(_2164, _2335));
        float _2633 = isnan(_2630) ? _2632 : (isnan(_2632) ? _2630 : min(_2632, _2630));
        float _2637 = (_2633 * _2130) + _2119;
        float _2638 = (_2633 * _2133) + _2123;
        float _2639 = (_2633 * _2136) + _2127;
        float _2640 = _2633 * 9.9999997473787516355514526367188e-05;
        float _2642 = (-1.0) - _2640;
        float _2644 = _2640 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2639 > _2644) || ((_2639 < _2642) || ((_2638 > _2644) || ((_2638 < _2642) || ((_2637 < _2642) || (_2637 > _2644))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2784 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2639, cbModelParam._m0[9u].z, fma(_2638, cbModelParam._m0[9u].y, _2637 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2639, cbModelParam._m0[10u].z, fma(_2638, cbModelParam._m0[10u].y, _2637 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2639, cbModelParam._m0[11u].z, fma(_2638, cbModelParam._m0[11u].y, _2637 * cbModelParam._m0[11u].x))), _2072);
            frontier_phi_16_38_ladder = _2784.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2784.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2784.x * cbModelParam._m0[1u].y;
        }
        _2152 = frontier_phi_16_38_ladder_2;
        _2154 = frontier_phi_16_38_ladder_1;
        _2156 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2140 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1232, _1233, _1234), _2072);
        _2152 = _2140.x * cbModelParam._m0[1u].y;
        _2154 = _2140.y * cbModelParam._m0[1u].y;
        _2156 = _2140.z * cbModelParam._m0[1u].y;
    }
    float _2160 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1050);
    float _2161 = isnan(_2160) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2160 : min(cbModelParam._m0[25u].w, _2160));
    float _2250;
    float _2252;
    float _2254;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2214 = fma(_1296, cbModelParam._m0[21u].z, fma(_1292, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1288)) + cbModelParam._m0[21u].w;
        float _2218 = fma(_1296, cbModelParam._m0[22u].z, fma(_1292, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1288)) + cbModelParam._m0[22u].w;
        float _2222 = fma(_1296, cbModelParam._m0[23u].z, fma(_1292, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1288)) + cbModelParam._m0[23u].w;
        float _2225 = fma(_1234, cbModelParam._m0[21u].z, fma(_1233, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1232));
        float _2228 = fma(_1234, cbModelParam._m0[22u].z, fma(_1233, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1232));
        float _2231 = fma(_1234, cbModelParam._m0[23u].z, fma(_1233, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1232));
        float _2340;
        if (_2225 > 0.0)
        {
            _2340 = abs((1.0 - _2214) / _2225);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2225 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2214 + 1.0) / _2225);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2340 = frontier_phi_28_24_ladder;
        }
        float _2657;
        if (_2228 > 0.0)
        {
            _2657 = abs((1.0 - _2218) / _2228);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2228 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2218 + 1.0) / _2228);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2657 = frontier_phi_40_35_ladder;
        }
        float _2995;
        if (_2231 > 0.0)
        {
            _2995 = abs((1.0 - _2222) / _2231);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2231 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2222 + 1.0) / _2231);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2995 = frontier_phi_50_47_ladder;
        }
        float _2997 = isnan(_2657) ? _2340 : (isnan(_2340) ? _2657 : min(_2340, _2657));
        float _2998 = isnan(_2995) ? _2997 : (isnan(_2997) ? _2995 : min(_2997, _2995));
        float _3002 = (_2998 * _2225) + _2214;
        float _3003 = (_2998 * _2228) + _2218;
        float _3004 = (_2998 * _2231) + _2222;
        float _3005 = _2998 * 9.9999997473787516355514526367188e-05;
        float _3006 = (-1.0) - _3005;
        float _3008 = _3005 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_3004 > _3008) || ((_3004 < _3006) || ((_3003 > _3008) || ((_3003 < _3006) || ((_3002 < _3006) || (_3002 > _3008))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3126 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3004, cbModelParam._m0[17u].z, fma(_3003, cbModelParam._m0[17u].y, _3002 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3004, cbModelParam._m0[18u].z, fma(_3003, cbModelParam._m0[18u].y, _3002 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3004, cbModelParam._m0[19u].z, fma(_3003, cbModelParam._m0[19u].y, _3002 * cbModelParam._m0[19u].x))), _2161);
            frontier_phi_25_50_ladder = _3126.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3126.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3126.x * cbModelParam._m0[1u].z;
        }
        _2250 = frontier_phi_25_50_ladder_2;
        _2252 = frontier_phi_25_50_ladder_1;
        _2254 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2234 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1232, _1233, _1234), _2161);
        _2250 = _2234.x * cbModelParam._m0[1u].z;
        _2252 = _2234.y * cbModelParam._m0[1u].z;
        _2254 = _2234.z * cbModelParam._m0[1u].z;
    }
    float _2267 = (((_1259 * _1208) + _1260) * _1224) * ((cbModelParam._m0[1u].w * (_2250 - _2152)) + _2152);
    float _2269 = (((_1259 * _1210) + _1260) * _1224) * ((cbModelParam._m0[1u].w * (_2252 - _2154)) + _2154);
    float _2271 = (((_1259 * _1211) + _1260) * _1224) * ((cbModelParam._m0[1u].w * (_2254 - _2156)) + _2156);
    float _2274 = fma(_2271, cbSceneParam._m0[89u].z, fma(_2269, cbSceneParam._m0[89u].y, _2267 * cbSceneParam._m0[89u].x));
    float _2277 = fma(_2271, cbSceneParam._m0[90u].z, fma(_2269, cbSceneParam._m0[90u].y, _2267 * cbSceneParam._m0[90u].x));
    float _2280 = fma(_2271, cbSceneParam._m0[91u].z, fma(_2269, cbSceneParam._m0[91u].y, _2267 * cbSceneParam._m0[91u].x));
    float _2314 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2318 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2322 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2326 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2327 = _2314 / _2326;
    float _2328 = _2318 / _2326;
    float _2329 = _2322 / _2326;
    float _2476;
    float _2477;
    float _2478;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2356 = ((uint(_2329 > cbSceneParam._m0[59u].y) + uint(_2329 > cbSceneParam._m0[59u].x)) + uint(_2329 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2357 = _2356 + 43u;
        uint _2365 = _2356 + 44u;
        uint _2373 = _2356 + 45u;
        uint _2381 = _2356 + 46u;
        float _2392 = fma(_2326, cbSceneParam._m0[_2357].w, fma(_2322, cbSceneParam._m0[_2357].z, fma(_2318, cbSceneParam._m0[_2357].y, _2314 * cbSceneParam._m0[_2357].x)));
        float _2396 = fma(_2326, cbSceneParam._m0[_2365].w, fma(_2322, cbSceneParam._m0[_2365].z, fma(_2318, cbSceneParam._m0[_2365].y, _2314 * cbSceneParam._m0[_2365].x)));
        float _2404 = fma(_2326, cbSceneParam._m0[_2381].w, fma(_2322, cbSceneParam._m0[_2381].z, fma(_2318, cbSceneParam._m0[_2381].y, _2314 * cbSceneParam._m0[_2381].x)));
        float _2409 = cbSceneParam._m0[33u].z * _2404;
        float _2411 = cbSceneParam._m0[33u].w * _2404;
        float _2414 = fma(_2326, cbSceneParam._m0[_2373].w, fma(_2322, cbSceneParam._m0[_2373].z, fma(_2318, cbSceneParam._m0[_2373].y, _2314 * cbSceneParam._m0[_2373].x))) / _2404;
        float _2462 = (cbSceneParam._m0[33u].x - sqrt(((_2328 * _2328) + (_2327 * _2327)) + (_2329 * _2329))) * cbSceneParam._m0[33u].y;
        float _4886 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
        float _2469 = (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2409 + _2392) / _2404, (_2411 + _2396) / _2404), _2414), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2411 + _2392) / _2404, (_2396 - _2409) / _2404), _2414), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2392 - _2409) / _2404, (_2396 - _2411) / _2404), _2414), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2392 - _2411) / _2404, (_2409 + _2396) / _2404), _2414), 0.0)).x), vec4(0.25)));
        _2476 = 1.0 - (_2469 * cbSceneParam._m0[34u].x);
        _2477 = 1.0 - (_2469 * cbSceneParam._m0[34u].y);
        _2478 = 1.0 - (_2469 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2476 = 1.0;
        _2477 = 1.0;
        _2478 = 1.0;
    }
    float _2542;
    float _2544;
    float _2546;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2530 = fma(_2326, cbSceneParam._m0[63u].w, fma(_2322, cbSceneParam._m0[63u].z, fma(_2318, cbSceneParam._m0[63u].y, _2314 * cbSceneParam._m0[63u].x)));
        float _2531 = fma(_2326, cbSceneParam._m0[60u].w, fma(_2322, cbSceneParam._m0[60u].z, fma(_2318, cbSceneParam._m0[60u].y, _2314 * cbSceneParam._m0[60u].x))) / _2530;
        float _2532 = fma(_2326, cbSceneParam._m0[61u].w, fma(_2322, cbSceneParam._m0[61u].z, fma(_2318, cbSceneParam._m0[61u].y, _2314 * cbSceneParam._m0[61u].x))) / _2530;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2531 >= cbSceneParam._m0[64u].x) && (_2532 >= cbSceneParam._m0[64u].y)) && (_2531 <= cbSceneParam._m0[64u].z)) && (_2532 <= cbSceneParam._m0[64u].w))
        {
            float _2670 = fma(_2326, cbSceneParam._m0[62u].w, fma(_2322, cbSceneParam._m0[62u].z, fma(_2318, cbSceneParam._m0[62u].y, _2314 * cbSceneParam._m0[62u].x))) / _2530;
            float _2674 = isnan(cbSceneParam._m0[41u].w) ? _2670 : (isnan(_2670) ? cbSceneParam._m0[41u].w : max(_2670, cbSceneParam._m0[41u].w));
            float _2717 = (cbSceneParam._m0[33u].x - sqrt(((_2328 * _2328) + (_2327 * _2327)) + (_2329 * _2329))) * cbSceneParam._m0[33u].y;
            float _4902 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
            float _2724 = (isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2531, cbSceneParam._m0[33u].w + _2532), _2674), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2531, _2532 - cbSceneParam._m0[33u].z), _2674), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2531 - cbSceneParam._m0[33u].z, _2532 - cbSceneParam._m0[33u].w), _2674), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2531 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2532), _2674), 0.0)).x), vec4(0.25)));
            float _2728 = 1.0 - (_2724 * cbSceneParam._m0[34u].x);
            float _2729 = 1.0 - (_2724 * cbSceneParam._m0[34u].y);
            float _2730 = 1.0 - (_2724 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2730) ? _2478 : (isnan(_2478) ? _2730 : min(_2478, _2730));
            frontier_phi_37_36_ladder_1 = isnan(_2729) ? _2477 : (isnan(_2477) ? _2729 : min(_2477, _2729));
            frontier_phi_37_36_ladder_2 = isnan(_2728) ? _2476 : (isnan(_2476) ? _2728 : min(_2476, _2728));
        }
        else
        {
            frontier_phi_37_36_ladder = _2478;
            frontier_phi_37_36_ladder_1 = _2477;
            frontier_phi_37_36_ladder_2 = _2476;
        }
        _2542 = frontier_phi_37_36_ladder_2;
        _2544 = frontier_phi_37_36_ladder_1;
        _2546 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2542 = _2476;
        _2544 = _2477;
        _2546 = _2478;
    }
    uvec4 _2551 = floatBitsToUint(cbInstanceData._m0[_277 + 5u]);
    uint _2553 = _2551.x * 14u;
    uint _2554 = _2553 + 13u;
    float _2561 = _1224 + (-1.0);
    float _2566 = (cbLight._m0[_2554].x * _2561) + 1.0;
    float _2567 = (cbLight._m0[_2554].y * _2561) + 1.0;
    float _2568 = (cbLight._m0[_2554].z * _2561) + 1.0;
    float _2569 = (cbLight._m0[_2554].w * _2561) + 1.0;
    uint _2570 = _2553 + 5u;
    float _2576 = isnan(1.0) ? _2567 : (isnan(_2567) ? 1.0 : min(_2567, 1.0));
    uint _2580 = _2553 + 4u;
    float _2589 = isnan(1.0) ? _2566 : (isnan(_2566) ? 1.0 : min(_2566, 1.0));
    uint _2593 = _2553 | 1u;
    float _2604 = dot(vec3(cbLight._m0[_2553].xyz), vec3(_1047, _1048, _1049));
    float _2607 = dot(vec3(cbLight._m0[_2593].xyz), vec3(_1047, _1048, _1049));
    float _4938 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
    float _4949 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2612 = (isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0))) * 0.3183098733425140380859375;
    float _2614 = (isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0))) * 0.3183098733425140380859375;
    float _2621 = ((cbLight._m0[_2570].x * _2576) * _2614) + (((cbLight._m0[_2580].x * _2542) * _2589) * _2612);
    float _2622 = ((_2576 * cbLight._m0[_2570].y) * _2614) + (((cbLight._m0[_2580].y * _2544) * _2589) * _2612);
    float _2623 = ((_2576 * cbLight._m0[_2570].z) * _2614) + (((cbLight._m0[_2580].z * _2546) * _2589) * _2612);
    uvec4 _2627 = floatBitsToUint(cbLight._m0[_2553 + 12u]);
    bool _2629 = _2627.x == 0u;
    float _2731;
    float _2733;
    float _2735;
    if (_2629)
    {
        _2731 = _2621;
        _2733 = _2622;
        _2735 = _2623;
    }
    else
    {
        uint _2739 = _2553 + 6u;
        float _2755 = (dot(vec3(cbLight._m0[_2553 + 2u].xyz), vec3(_1047, _1048, _1049)) * 0.5) + 0.5;
        float _2756 = _2755 * _2755;
        float _4960 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
        float _2757 = isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0));
        float _2758 = isnan(1.0) ? _2568 : (isnan(_2568) ? 1.0 : min(_2568, 1.0));
        _2731 = (((cbLight._m0[_2739].x * 0.3183098733425140380859375) * _2757) * _2758) + _2621;
        _2733 = (((cbLight._m0[_2739].y * 0.3183098733425140380859375) * _2757) * _2758) + _2622;
        _2735 = (((cbLight._m0[_2739].z * 0.3183098733425140380859375) * _2757) * _2758) + _2623;
    }
    bool _2738 = _2627.y == 0u;
    float _2793;
    float _2795;
    float _2797;
    if (_2738)
    {
        _2793 = _2731;
        _2795 = _2733;
        _2797 = _2735;
    }
    else
    {
        uint _2966 = _2553 + 7u;
        float _2982 = (dot(vec3(cbLight._m0[_2553 + 3u].xyz), vec3(_1047, _1048, _1049)) * 0.5) + 0.5;
        float _2983 = _2982 * _2982;
        float _4976 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
        float _2984 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
        float _2985 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        _2793 = (((cbLight._m0[_2966].x * 0.3183098733425140380859375) * _2984) * _2985) + _2731;
        _2795 = (((cbLight._m0[_2966].y * 0.3183098733425140380859375) * _2984) * _2985) + _2733;
        _2797 = (((cbLight._m0[_2966].z * 0.3183098733425140380859375) * _2984) * _2985) + _2735;
    }
    uint _2800 = _2553 + 8u;
    float _2813 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2553].w)) * _1050) * 0.949999988079071044921875);
    float _2814 = _2813 * _2813;
    float _2815 = cbLight._m0[_2553].x + _1126;
    float _2816 = cbLight._m0[_2553].y + _1127;
    float _2817 = cbLight._m0[_2553].z + _1128;
    float _2821 = inversesqrt(dot(vec3(_2815, _2816, _2817), vec3(_2815, _2816, _2817)));
    float _2822 = _2821 * _2815;
    float _2823 = _2821 * _2816;
    float _2824 = _2821 * _2817;
    float _2825 = dot(vec3(_1047, _1048, _1049), vec3(cbLight._m0[_2553].xyz));
    float _4992 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
    float _2828 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
    float _5003 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _2829 = isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0));
    float _2830 = dot(vec3(_1047, _1048, _1049), vec3(_2822, _2823, _2824));
    float _5014 = isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : max(_2830, 0.0));
    float _2833 = isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0));
    float _2834 = dot(vec3(cbLight._m0[_2553].xyz), vec3(_2822, _2823, _2824));
    float _5025 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
    float _2838 = _2814 * _2814;
    float _2842 = ((_2833 * _2833) * (_2838 + (-1.0))) + 1.0;
    float _2850 = exp2(log2(1.0 - (isnan(1.0) ? _5025 : (isnan(_5025) ? 1.0 : min(_5025, 1.0)))) * 5.0);
    float _2851 = 0.959999978542327880859375 - _1205;
    float _2853 = 0.959999978542327880859375 - _1206;
    float _2854 = 0.959999978542327880859375 - _1207;
    float _2861 = 1.0 - _2814;
    float _2872 = (0.5 / (((_2829 * ((_2828 * _2861) + _2814)) + 9.9999999392252902907785028219223e-09) + (((_2829 * _2861) + _2814) * _2828))) * _2828;
    float _5036 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
    float _2874 = (isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0))) * (_2838 / ((_2842 * _2842) * 3.141590118408203125));
    uint _2888 = _2553 + 9u;
    float _2899 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2593].w)) * _1050) * 0.949999988079071044921875);
    float _2900 = _2899 * _2899;
    float _2901 = cbLight._m0[_2593].x + _1126;
    float _2902 = cbLight._m0[_2593].y + _1127;
    float _2903 = cbLight._m0[_2593].z + _1128;
    float _2907 = inversesqrt(dot(vec3(_2901, _2902, _2903), vec3(_2901, _2902, _2903)));
    float _2908 = _2907 * _2901;
    float _2909 = _2907 * _2902;
    float _2910 = _2907 * _2903;
    float _2911 = dot(vec3(_1047, _1048, _1049), vec3(cbLight._m0[_2593].xyz));
    float _5047 = isnan(0.0) ? _2911 : (isnan(_2911) ? 0.0 : max(_2911, 0.0));
    float _2914 = isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0));
    float _2915 = dot(vec3(_1047, _1048, _1049), vec3(_2908, _2909, _2910));
    float _5058 = isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0));
    float _2918 = isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0));
    float _2919 = dot(vec3(cbLight._m0[_2593].xyz), vec3(_2908, _2909, _2910));
    float _5069 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
    float _2923 = _2900 * _2900;
    float _2927 = ((_2918 * _2918) * (_2923 + (-1.0))) + 1.0;
    float _2934 = exp2(log2(1.0 - (isnan(1.0) ? _5069 : (isnan(_5069) ? 1.0 : min(_5069, 1.0)))) * 5.0);
    float _2941 = 1.0 - _2900;
    float _2951 = (0.5 / (((_2829 * ((_2914 * _2941) + _2900)) + 9.9999999392252902907785028219223e-09) + (((_2829 * _2941) + _2900) * _2914))) * _2914;
    float _5080 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
    float _2953 = (isnan(1.0) ? _5080 : (isnan(_5080) ? 1.0 : min(_5080, 1.0))) * (_2923 / ((_2927 * _2927) * 3.141590118408203125));
    float _2963 = (((((_2934 * _2851) + _1208) * cbLight._m0[_2888].x) * _2953) * _2576) + ((((cbLight._m0[_2800].x * _2542) * ((_2850 * _2851) + _1208)) * _2874) * _2589);
    float _2964 = (((((_2934 * _2853) + _1210) * cbLight._m0[_2888].y) * _2953) * _2576) + ((((cbLight._m0[_2800].y * _2544) * ((_2850 * _2853) + _1210)) * _2874) * _2589);
    float _2965 = (((((_2934 * _2854) + _1211) * cbLight._m0[_2888].z) * _2953) * _2576) + ((((cbLight._m0[_2800].z * _2546) * ((_2850 * _2854) + _1211)) * _2874) * _2589);
    float _3021;
    float _3023;
    float _3025;
    if (_2629)
    {
        _3021 = _2963;
        _3023 = _2964;
        _3025 = _2965;
    }
    else
    {
        uint _3027 = _2553 + 2u;
        uint _3031 = _2553 + 10u;
        float _3045 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3027].w)) * _1050) * 0.949999988079071044921875);
        float _3046 = _3045 * _3045;
        float _3047 = cbLight._m0[_3027].x + _1126;
        float _3048 = cbLight._m0[_3027].y + _1127;
        float _3049 = cbLight._m0[_3027].z + _1128;
        float _3053 = inversesqrt(dot(vec3(_3047, _3048, _3049), vec3(_3047, _3048, _3049)));
        float _3054 = _3053 * _3047;
        float _3055 = _3053 * _3048;
        float _3056 = _3053 * _3049;
        float _3057 = dot(vec3(_1047, _1048, _1049), vec3(cbLight._m0[_3027].xyz));
        float _5091 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
        float _3060 = isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0));
        float _3061 = dot(vec3(_1047, _1048, _1049), vec3(_3054, _3055, _3056));
        float _5102 = isnan(0.0) ? _3061 : (isnan(_3061) ? 0.0 : max(_3061, 0.0));
        float _3064 = isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0));
        float _3065 = dot(vec3(cbLight._m0[_3027].xyz), vec3(_3054, _3055, _3056));
        float _5113 = isnan(0.0) ? _3065 : (isnan(_3065) ? 0.0 : max(_3065, 0.0));
        float _3069 = _3046 * _3046;
        float _3073 = ((_3064 * _3064) * (_3069 + (-1.0))) + 1.0;
        float _3080 = exp2(log2(1.0 - (isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0)))) * 5.0);
        float _3087 = 1.0 - _3046;
        float _3097 = (0.5 / (((_2829 * ((_3060 * _3087) + _3046)) + 9.9999999392252902907785028219223e-09) + (((_2829 * _3087) + _3046) * _3060))) * _3060;
        float _5124 = isnan(0.0) ? _3097 : (isnan(_3097) ? 0.0 : max(_3097, 0.0));
        float _3099 = (isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0))) * (_3069 / ((_3073 * _3073) * 3.141590118408203125));
        float _3100 = isnan(1.0) ? _2568 : (isnan(_2568) ? 1.0 : min(_2568, 1.0));
        _3021 = (((((_3080 * _2851) + _1208) * cbLight._m0[_3031].x) * _3099) * _3100) + _2963;
        _3023 = (((((_3080 * _2853) + _1210) * cbLight._m0[_3031].y) * _3099) * _3100) + _2964;
        _3025 = (((((_3080 * _2854) + _1211) * cbLight._m0[_3031].z) * _3099) * _3100) + _2965;
    }
    float _3131;
    float _3133;
    float _3135;
    if (_2738)
    {
        _3131 = _3021;
        _3133 = _3023;
        _3135 = _3025;
    }
    else
    {
        uint _3142 = _2553 + 3u;
        uint _3146 = _2553 + 11u;
        float _3160 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3142].w)) * _1050) * 0.949999988079071044921875);
        float _3161 = _3160 * _3160;
        float _3162 = cbLight._m0[_3142].x + _1126;
        float _3163 = cbLight._m0[_3142].y + _1127;
        float _3164 = cbLight._m0[_3142].z + _1128;
        float _3168 = inversesqrt(dot(vec3(_3162, _3163, _3164), vec3(_3162, _3163, _3164)));
        float _3169 = _3168 * _3162;
        float _3170 = _3168 * _3163;
        float _3171 = _3168 * _3164;
        float _3172 = dot(vec3(_1047, _1048, _1049), vec3(cbLight._m0[_3142].xyz));
        float _5140 = isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : max(_3172, 0.0));
        float _3175 = isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0));
        float _3176 = dot(vec3(_1047, _1048, _1049), vec3(_3169, _3170, _3171));
        float _5151 = isnan(0.0) ? _3176 : (isnan(_3176) ? 0.0 : max(_3176, 0.0));
        float _3179 = isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0));
        float _3180 = dot(vec3(cbLight._m0[_3142].xyz), vec3(_3169, _3170, _3171));
        float _5162 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0));
        float _3184 = _3161 * _3161;
        float _3188 = ((_3179 * _3179) * (_3184 + (-1.0))) + 1.0;
        float _3195 = exp2(log2(1.0 - (isnan(1.0) ? _5162 : (isnan(_5162) ? 1.0 : min(_5162, 1.0)))) * 5.0);
        float _3202 = 1.0 - _3161;
        float _3212 = (0.5 / (((_2829 * ((_3175 * _3202) + _3161)) + 9.9999999392252902907785028219223e-09) + (((_2829 * _3202) + _3161) * _3175))) * _3175;
        float _5173 = isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0));
        float _3214 = (isnan(1.0) ? _5173 : (isnan(_5173) ? 1.0 : min(_5173, 1.0))) * (_3184 / ((_3188 * _3188) * 3.141590118408203125));
        float _3215 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        _3131 = (((((_3195 * _2851) + _1208) * cbLight._m0[_3146].x) * _3214) * _3215) + _3021;
        _3133 = (((((_3195 * _2853) + _1210) * cbLight._m0[_3146].y) * _3214) * _3215) + _3023;
        _3135 = (((((_3195 * _2854) + _1211) * cbLight._m0[_3146].z) * _3214) * _3215) + _3025;
    }
    float _3281;
    float _3283;
    float _3285;
    float _3287;
    float _3289;
    float _3291;
    if (_2551.y == 0u)
    {
        uvec4 _3236 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3237 = _3236.x;
        uint _3248 = uint((float(_3236.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1147) / _3237))) + floor(float(uint(cbSceneParam._m0[85u].x * _1146) / _3237)));
        float _3258 = (log2(_2329 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3259 = isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0));
        uint _3262 = uint(isnan(14.0) ? _3259 : (isnan(_3259) ? 14.0 : min(_3259, 14.0)));
        uvec4 _3267 = texelFetch(g_lightClusterGridBuffer, int(((_3262 << 2u) + (_3248 << 6u)) >> 2u));
        uint _3268 = _3267.x;
        uint _3269 = _3236.z;
        float _3348;
        float _3350;
        float _3352;
        float _3354;
        float _3356;
        float _3358;
        if (((((1u << ((_3269 >> 4u) & 15u)) + 4294967295u) & _3268) == 0u) || ((_3269 & 240u) == 0u))
        {
            _3348 = 0.0;
            _3350 = 0.0;
            _3352 = 0.0;
            _3354 = 0.0;
            _3356 = 0.0;
            _3358 = 0.0;
        }
        else
        {
            float _3349;
            float _3351;
            float _3353;
            float _3355;
            float _3357;
            float _3359;
            float _3501 = 0.0;
            float _3502 = 0.0;
            float _3503 = 0.0;
            float _3504 = 0.0;
            float _3505 = 0.0;
            float _3506 = 0.0;
            uint _3507 = 0u;
            uint _3516;
            bool _3517;
            for (;;)
            {
                _3516 = texelFetch(g_lightClassification, int((((_3262 << 5u) + (_3248 << 9u)) + (_3507 << 2u)) >> 2u)).x;
                _3517 = _3516 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3517)
                {
                    frontier_phi_71_pred = _3506;
                    frontier_phi_71_pred_1 = _3505;
                    frontier_phi_71_pred_2 = _3504;
                    frontier_phi_71_pred_3 = _3503;
                    frontier_phi_71_pred_4 = _3502;
                    frontier_phi_71_pred_5 = _3501;
                }
                else
                {
                    float _3646;
                    float _3647;
                    float _3648;
                    float _3649;
                    float _3650;
                    float _3651;
                    uint _3652;
                    _3646 = _3501;
                    _3647 = _3502;
                    _3648 = _3503;
                    _3649 = _3504;
                    _3650 = _3505;
                    _3651 = _3506;
                    _3652 = _3516;
                    float _3573;
                    float _3574;
                    float _3575;
                    float _3576;
                    float _3577;
                    float _3578;
                    for (;;)
                    {
                        uint _3656 = uint(findLSB(_3652)) + (_3507 << 5u);
                        uint _3653 = (_3652 + 4294967295u) & _3652;
                        uint _3658 = _3656 * 48u;
                        vec4 _3672 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3658)).x, texelFetch(g_PointLightRenderingBuffer, int(_3658 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3658 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3658 + 3u)).x));
                        uint _3678 = (_3656 * 48u) + 4u;
                        vec4 _3691 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3678)).x, texelFetch(g_PointLightRenderingBuffer, int(_3678 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3678 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3678 + 3u)).x));
                        uint _3697 = (_3656 * 48u) + 8u;
                        vec3 _3708 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3697)).x, texelFetch(g_PointLightRenderingBuffer, int(_3697 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3697 + 2u)).x));
                        float _3712 = _3672.x - _2327;
                        float _3713 = _3672.y - _2328;
                        float _3714 = _3672.z - _2329;
                        float _3715 = dot(vec3(_3712, _3713, _3714), vec3(_3712, _3713, _3714));
                        float _3718 = inversesqrt(_3715);
                        float _3719 = _3718 * _3712;
                        float _3720 = _3718 * _3713;
                        float _3721 = _3718 * _3714;
                        float _3722 = dot(vec3(_1165, _1168, _1171), vec3(_3719, _3720, _3721));
                        float _3727 = 1.0 - (_3715 * _3672.w);
                        float _5199 = isnan(0.0) ? _3727 : (isnan(_3727) ? 0.0 : max(_3727, 0.0));
                        float _3728 = isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0));
                        float _3729 = sqrt(_3715) * _3691.w;
                        float _3732 = 1.39999997615814208984375 / (_3729 + 1.39999997615814208984375);
                        float _3733 = _3732 * _3732;
                        float _3736 = ((1.0 - _3733) * _3722) + _3733;
                        float _3739 = _3729 * _3729;
                        float _3743 = ((isnan(0.0) ? _3736 : (isnan(_3736) ? 0.0 : max(_3736, 0.0))) * _3728) / ((_3739 * 0.699999988079071044921875) + 1.0);
                        float _3747 = (-0.0) - _2327;
                        float _3748 = (-0.0) - _2328;
                        float _3749 = (-0.0) - _2329;
                        float _3753 = inversesqrt(dot(vec3(_3747, _3748, _3749), vec3(_3747, _3748, _3749)));
                        float _3754 = _3753 * _3747;
                        float _3755 = _3753 * _3748;
                        float _3756 = _3753 * _3749;
                        float _3763 = exp2(log2(1.0 / ((_3739 * 3.5) + 5.0)) * 0.25);
                        float _3764 = 1.0 - _1240;
                        float _3771 = sqrt(1.0 - ((1.0 - (_3764 * _3764)) * (1.0 - (_3763 * _3763))));
                        float _3772 = _3771 * _3771;
                        float _3773 = _3772 * _3772;
                        float _3774 = _3754 + _3719;
                        float _3775 = _3755 + _3720;
                        float _3776 = _3756 + _3721;
                        float _3780 = inversesqrt(dot(vec3(_3774, _3775, _3776), vec3(_3774, _3775, _3776)));
                        float _3784 = dot(vec3(_1165, _1168, _1171), vec3(_3754, _3755, _3756));
                        float _5215 = isnan(0.0) ? _3784 : (isnan(_3784) ? 0.0 : max(_3784, 0.0));
                        float _3787 = isnan(1.0) ? _5215 : (isnan(_5215) ? 1.0 : min(_5215, 1.0));
                        float _3788 = dot(vec3(_1165, _1168, _1171), vec3(_3780 * _3774, _3780 * _3775, _3780 * _3776));
                        float _5226 = isnan(0.0) ? _3788 : (isnan(_3788) ? 0.0 : max(_3788, 0.0));
                        float _3791 = isnan(1.0) ? _5226 : (isnan(_5226) ? 1.0 : min(_5226, 1.0));
                        float _3795 = ((_3791 * _3791) * (_3773 + (-1.0))) + 1.0;
                        float _3796 = _3732 * _3772;
                        float _3797 = _3796 * _3796;
                        float _3800 = ((1.0 - _3797) * _3722) + _3797;
                        float _5237 = isnan(0.0) ? _3800 : (isnan(_3800) ? 0.0 : max(_3800, 0.0));
                        float _3801 = isnan(1.0) ? _5237 : (isnan(_5237) ? 1.0 : min(_5237, 1.0));
                        float _3802 = 1.0 - _3772;
                        float _3812 = (0.5 / (((_3801 * ((_3787 * _3802) + _3772)) + 9.9999999392252902907785028219223e-09) + (((_3801 * _3802) + _3772) * _3787))) * _3801;
                        float _5248 = isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0));
                        float _3823 = (((_3773 * 3.1415927410125732421875) * (isnan(1.0) ? _5248 : (isnan(_5248) ? 1.0 : min(_5248, 1.0)))) / ((_3795 * _3795) * ((_3739 * 2.1991131305694580078125) + 3.141590118408203125))) * _3728;
                        _3576 = (_3743 * _3691.x) + _3649;
                        _3577 = (_3743 * _3691.y) + _3650;
                        _3578 = (_3743 * _3691.z) + _3651;
                        _3573 = (_3823 * _3708.x) + _3646;
                        _3574 = (_3823 * _3708.y) + _3647;
                        _3575 = (_3823 * _3708.z) + _3648;
                        if (_3653 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3646 = _3573;
                            _3647 = _3574;
                            _3648 = _3575;
                            _3649 = _3576;
                            _3650 = _3577;
                            _3651 = _3578;
                            _3652 = _3653;
                        }
                    }
                    frontier_phi_71_pred = _3578;
                    frontier_phi_71_pred_1 = _3577;
                    frontier_phi_71_pred_2 = _3576;
                    frontier_phi_71_pred_3 = _3575;
                    frontier_phi_71_pred_4 = _3574;
                    frontier_phi_71_pred_5 = _3573;
                }
                _3359 = frontier_phi_71_pred;
                _3357 = frontier_phi_71_pred_1;
                _3355 = frontier_phi_71_pred_2;
                _3353 = frontier_phi_71_pred_3;
                _3351 = frontier_phi_71_pred_4;
                _3349 = frontier_phi_71_pred_5;
                uint _3508 = _3507 + 1u;
                if (_3508 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3501 = _3349;
                    _3502 = _3351;
                    _3503 = _3353;
                    _3504 = _3355;
                    _3505 = _3357;
                    _3506 = _3359;
                    _3507 = _3508;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3348 = _3349;
            _3350 = _3351;
            _3352 = _3353;
            _3354 = _3355;
            _3356 = _3357;
            _3358 = _3359;
        }
        uvec4 _3362 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3363 = _3362.z;
        uint _3365 = (_3363 >> 8u) & 15u;
        float _3469;
        float _3471;
        float _3473;
        float _3475;
        float _3477;
        float _3479;
        if (((4294967295u << _3365) & _3268) == 0u)
        {
            _3469 = _3348;
            _3471 = _3350;
            _3473 = _3352;
            _3475 = _3354;
            _3477 = _3356;
            _3479 = _3358;
        }
        else
        {
            float _3494 = inversesqrt(dot(vec3(_2327, _2328, _2329), vec3(_2327, _2328, _2329)));
            float _3495 = _3494 * _2327;
            float _3496 = _3494 * _2328;
            float _3497 = _3494 * _2329;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3365 < ((_3363 >> 12u) & 15u))
            {
                float _3470;
                float _3472;
                float _3474;
                float _3476;
                float _3478;
                float _3480;
                float _3629 = _3348;
                float _3630 = _3350;
                float _3631 = _3352;
                float _3632 = _3354;
                float _3633 = _3356;
                float _3634 = _3358;
                uint _3635 = _3365;
                uint _3644;
                bool _3645;
                for (;;)
                {
                    _3644 = texelFetch(g_lightClassification, int((((_3262 << 5u) + (_3248 << 9u)) + (_3635 << 2u)) >> 2u)).x;
                    _3645 = _3644 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3645)
                    {
                        frontier_phi_82_pred = _3634;
                        frontier_phi_82_pred_1 = _3633;
                        frontier_phi_82_pred_2 = _3632;
                        frontier_phi_82_pred_3 = _3631;
                        frontier_phi_82_pred_4 = _3630;
                        frontier_phi_82_pred_5 = _3629;
                    }
                    else
                    {
                        float _3837;
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3842;
                        float _4130;
                        float _4131;
                        float _4132;
                        float _4133;
                        float _4134;
                        float _4135;
                        float _3850 = _3629;
                        float _3851 = _3630;
                        float _3852 = _3631;
                        float _3853 = _3632;
                        float _3854 = _3633;
                        float _3855 = _3634;
                        uint _3856 = _3644;
                        uint _3857;
                        vec4 _3882;
                        float _3883;
                        vec4 _3898;
                        vec3 _3910;
                        vec4 _3925;
                        vec4 _3940;
                        float _3986;
                        bool _3987;
                        for (;;)
                        {
                            uint _3867 = ((_3635 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3856));
                            _3857 = (_3856 + 4294967295u) & _3856;
                            uint _3869 = _3867 * 40u;
                            _3882 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3869)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3869 + 3u)).x));
                            _3883 = _3882.w;
                            uint _3885 = (_3867 * 40u) + 4u;
                            _3898 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3885)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3885 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3885 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3885 + 3u)).x));
                            uint _3900 = (_3867 * 40u) + 8u;
                            _3910 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3900)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3900 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3900 + 2u)).x));
                            uint _3912 = (_3867 * 40u) + 16u;
                            _3925 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3912)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 3u)).x));
                            uint _3927 = (_3867 * 40u) + 20u;
                            _3940 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3927)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 3u)).x));
                            uint _3942 = (_3867 * 40u) + 24u;
                            vec4 _3955 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3942)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 3u)).x));
                            uint _3961 = (_3867 * 40u) + 28u;
                            vec4 _3974 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3961)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 3u)).x));
                            _3986 = fma(_2329, _3974.z, fma(_2328, _3974.y, _3974.x * _2327)) + _3974.w;
                            _3987 = !((fma(_2329, _3955.z, fma(_2328, _3955.y, _3955.x * _2327)) + _3955.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3987)
                            {
                                float _4014 = _3882.x - _2327;
                                float _4015 = _3882.y - _2328;
                                float _4016 = _3882.z - _2329;
                                float _4017 = dot(vec3(_4014, _4015, _4016), vec3(_4014, _4015, _4016));
                                float _4020 = inversesqrt(_4017);
                                float _4021 = _4020 * _4014;
                                float _4022 = _4020 * _4015;
                                float _4023 = _4020 * _4016;
                                float _4027 = 1.0 - (_4017 / (_3883 * _3883));
                                float _5259 = isnan(0.0) ? _4027 : (isnan(_4027) ? 0.0 : max(_4027, 0.0));
                                float _4028 = isnan(1.0) ? _5259 : (isnan(_5259) ? 1.0 : min(_5259, 1.0));
                                float _4032 = sqrt(_4017) * _3898.w;
                                float _4034 = 1.39999997615814208984375 / (_4032 + 1.39999997615814208984375);
                                float _4035 = _4034 * _4034;
                                float _4038 = ((1.0 - _4035) * dot(vec3(_4021, _4022, _4023), vec3(_1165, _1168, _1171))) + _4035;
                                float _4041 = _4032 * _4032;
                                float _4045 = (fma(_2329, _3925.z, fma(_2328, _3925.y, _3925.x * _2327)) + _3925.w) / _3986;
                                float _4046 = (fma(_2329, _3940.z, fma(_2328, _3940.y, _3940.x * _2327)) + _3940.w) / _3986;
                                float _4050 = 1.0 - dot(vec2(_4045, _4046), vec2(_4045, _4046));
                                float _5275 = isnan(0.0) ? _4050 : (isnan(_4050) ? 0.0 : max(_4050, 0.0));
                                float _4051 = isnan(1.0) ? _5275 : (isnan(_5275) ? 1.0 : min(_5275, 1.0));
                                float _4052 = _4051 * (((isnan(0.0) ? _4038 : (isnan(_4038) ? 0.0 : max(_4038, 0.0))) * _4028) / ((_4041 * 0.699999988079071044921875) + 1.0));
                                float _4064 = exp2(log2(1.0 / ((_4041 * 3.5) + 5.0)) * 0.25);
                                float _4065 = 1.0 - _1240;
                                float _4072 = sqrt(1.0 - ((1.0 - (_4065 * _4065)) * (1.0 - (_4064 * _4064))));
                                float _4073 = _4072 * _4072;
                                float _4074 = _4073 * _4073;
                                float _4075 = _4021 - _3495;
                                float _4076 = _4022 - _3496;
                                float _4077 = _4023 - _3497;
                                float _4081 = inversesqrt(dot(vec3(_4075, _4076, _4077), vec3(_4075, _4076, _4077)));
                                float _4085 = dot(vec3(_1165, _1168, _1171), vec3((-0.0) - _3495, (-0.0) - _3496, (-0.0) - _3497));
                                float _5286 = isnan(0.0) ? _4085 : (isnan(_4085) ? 0.0 : max(_4085, 0.0));
                                float _4088 = isnan(1.0) ? _5286 : (isnan(_5286) ? 1.0 : min(_5286, 1.0));
                                float _4089 = dot(vec3(_1165, _1168, _1171), vec3(_4081 * _4075, _4081 * _4076, _4081 * _4077));
                                float _5297 = isnan(0.0) ? _4089 : (isnan(_4089) ? 0.0 : max(_4089, 0.0));
                                float _4092 = isnan(1.0) ? _5297 : (isnan(_5297) ? 1.0 : min(_5297, 1.0));
                                float _4096 = ((_4092 * _4092) * (_4074 + (-1.0))) + 1.0;
                                float _4097 = _4034 * _4073;
                                float _4098 = _4097 * _4097;
                                float _4104 = ((1.0 - _4098) * dot(vec3(_1165, _1168, _1171), vec3(_4021, _4022, _4023))) + _4098;
                                float _5308 = isnan(0.0) ? _4104 : (isnan(_4104) ? 0.0 : max(_4104, 0.0));
                                float _4105 = isnan(1.0) ? _5308 : (isnan(_5308) ? 1.0 : min(_5308, 1.0));
                                float _4106 = 1.0 - _4073;
                                float _4116 = (0.5 / (((_4105 * ((_4088 * _4106) + _4073)) + 9.9999999392252902907785028219223e-09) + (((_4105 * _4106) + _4073) * _4088))) * _4105;
                                float _5319 = isnan(0.0) ? _4116 : (isnan(_4116) ? 0.0 : max(_4116, 0.0));
                                float _4126 = (_4051 * _4028) * (((_4074 * 3.1415927410125732421875) * (isnan(1.0) ? _5319 : (isnan(_5319) ? 1.0 : min(_5319, 1.0)))) / ((_4096 * _4096) * ((_4041 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4052 * _3898.z;
                                frontier_phi_88_pred_1 = _4052 * _3898.y;
                                frontier_phi_88_pred_2 = _4052 * _3898.x;
                                frontier_phi_88_pred_3 = _4126 * _3910.z;
                                frontier_phi_88_pred_4 = _4126 * _3910.y;
                                frontier_phi_88_pred_5 = _4126 * _3910.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4135 = frontier_phi_88_pred;
                            _4134 = frontier_phi_88_pred_1;
                            _4133 = frontier_phi_88_pred_2;
                            _4132 = frontier_phi_88_pred_3;
                            _4131 = frontier_phi_88_pred_4;
                            _4130 = frontier_phi_88_pred_5;
                            _3840 = _4133 + _3853;
                            _3841 = _4134 + _3854;
                            _3842 = _4135 + _3855;
                            _3837 = _4130 + _3850;
                            _3838 = _4131 + _3851;
                            _3839 = _4132 + _3852;
                            if (_3857 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3850 = _3837;
                                _3851 = _3838;
                                _3852 = _3839;
                                _3853 = _3840;
                                _3854 = _3841;
                                _3855 = _3842;
                                _3856 = _3857;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3842;
                        frontier_phi_82_pred_1 = _3841;
                        frontier_phi_82_pred_2 = _3840;
                        frontier_phi_82_pred_3 = _3839;
                        frontier_phi_82_pred_4 = _3838;
                        frontier_phi_82_pred_5 = _3837;
                    }
                    _3480 = frontier_phi_82_pred;
                    _3478 = frontier_phi_82_pred_1;
                    _3476 = frontier_phi_82_pred_2;
                    _3474 = frontier_phi_82_pred_3;
                    _3472 = frontier_phi_82_pred_4;
                    _3470 = frontier_phi_82_pred_5;
                    uint _3636 = _3635 + 1u;
                    if (_3636 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3629 = _3470;
                        _3630 = _3472;
                        _3631 = _3474;
                        _3632 = _3476;
                        _3633 = _3478;
                        _3634 = _3480;
                        _3635 = _3636;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3476;
                frontier_phi_63_64_ladder_1 = _3480;
                frontier_phi_63_64_ladder_2 = _3478;
                frontier_phi_63_64_ladder_3 = _3474;
                frontier_phi_63_64_ladder_4 = _3472;
                frontier_phi_63_64_ladder_5 = _3470;
            }
            else
            {
                frontier_phi_63_64_ladder = _3354;
                frontier_phi_63_64_ladder_1 = _3358;
                frontier_phi_63_64_ladder_2 = _3356;
                frontier_phi_63_64_ladder_3 = _3352;
                frontier_phi_63_64_ladder_4 = _3350;
                frontier_phi_63_64_ladder_5 = _3348;
            }
            _3469 = frontier_phi_63_64_ladder_5;
            _3471 = frontier_phi_63_64_ladder_4;
            _3473 = frontier_phi_63_64_ladder_3;
            _3475 = frontier_phi_63_64_ladder;
            _3477 = frontier_phi_63_64_ladder_2;
            _3479 = frontier_phi_63_64_ladder_1;
        }
        float _3484 = isnan(1.0) ? _1224 : (isnan(_1224) ? 1.0 : min(_1224, 1.0));
        _3281 = (_3484 * _3475) + _2793;
        _3283 = (_3484 * _3477) + _2795;
        _3285 = (_3484 * _3479) + _2797;
        _3287 = ((_3469 * _1208) * _3484) + _3131;
        _3289 = ((_3471 * _1210) * _3484) + _3133;
        _3291 = ((_3473 * _1211) * _3484) + _3135;
    }
    else
    {
        _3281 = _2793;
        _3283 = _2795;
        _3285 = _2797;
        _3287 = _3131;
        _3289 = _3133;
        _3291 = _3135;
    }
    float _5335 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _5346 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _5357 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    float _3308 = ((isnan(1.0) ? _5335 : (isnan(_5335) ? 1.0 : min(_5335, 1.0))) * (_3281 + ((isnan(0.0) ? _1982 : (isnan(_1982) ? 0.0 : max(_1982, 0.0))) * _1224))) + ((_3287 + ((isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0))) * _2061)) * cbPerFrame._m0[3u].x);
    float _3309 = ((isnan(1.0) ? _5346 : (isnan(_5346) ? 1.0 : min(_5346, 1.0))) * (_3283 + ((isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0))) * _1224))) + ((_3289 + ((isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0))) * _2061)) * cbPerFrame._m0[3u].x);
    float _3310 = ((isnan(1.0) ? _5357 : (isnan(_5357) ? 1.0 : min(_5357, 1.0))) * (_3285 + ((isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0))) * _1224))) + ((_3291 + ((isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0))) * _2061)) * cbPerFrame._m0[3u].x);
    uint _3311 = _277 + 6u;
    float _3319 = _1146 / cbSceneParam._m0[86u].x;
    float _3320 = _1147 / cbSceneParam._m0[86u].y;
    vec4 _3334 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3319, _3320, (log2((isnan(cbSceneParam._m0[77u].w) ? _1069 : (isnan(_1069) ? cbSceneParam._m0[77u].w : min(_1069, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3336 = _3334.x;
    float _3337 = _3334.y;
    float _3338 = _3334.z;
    float _3339 = _3334.w;
    float _3411;
    float _3413;
    float _3415;
    float _3417;
    if (_1069 > cbSceneParam._m0[78u].w)
    {
        float _3373 = isnan(_1069) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1069 : min(cbSceneParam._m0[80u].w, _1069));
        float _3374 = _3373 / _1069;
        float _3385 = _3374 * _1119;
        float _3386 = _1120 * _3374;
        float _3387 = (-0.0) - _3386;
        float _3389 = _3374 * _1121;
        float _3391 = (cbSceneParam._m0[77u].w * _3387) / _3373;
        float _3392 = _3391 + cbSceneParam._m0[79u].w;
        float _3393 = cbSceneParam._m0[79u].w - _3386;
        float _3399 = sqrt(((_3385 * _3385) + (_3386 * _3386)) + (_3389 * _3389));
        float _3402 = (1.0 - (cbSceneParam._m0[77u].w / _3373)) * _3399;
        float _3407 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3409 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3586;
        if (abs((_3387 - _3391) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3586 = ((((_3392 > 0.0) ? exp2(_3407 * _3392) : (2.0 - exp2(_3409 * _3392))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3402;
        }
        else
        {
            float _3530 = 1.0 / cbSceneParam._m0[80u].x;
            float _3531 = isnan(_3393) ? _3392 : (isnan(_3392) ? _3393 : max(_3392, _3393));
            float _3532 = isnan(_3393) ? _3392 : (isnan(_3392) ? _3393 : min(_3392, _3393));
            float _3541 = isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : min(_3531, 0.0));
            float _3542 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : min(_3532, 0.0));
            _3586 = ((abs(_3399 / _3387) * cbSceneParam._m0[80u].y) * ((((_3541 - _3542) * 2.0) - ((exp2(_3407 * (isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : max(_3531, 0.0)))) - exp2(_3407 * (isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0))))) * _3530)) - ((exp2(_3409 * _3541) - exp2(_3409 * _3542)) * _3530))) + (_3402 * cbSceneParam._m0[80u].z);
        }
        vec4 _3588 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3319, _3320, 1.0), 0.0);
        float _3597 = exp2((_3586 * (-1.44269502162933349609375)) * (1.0 - _3588.w));
        float _3598 = log2(_3597);
        float _3614 = log2(_3339);
        _3411 = (exp2(_3614 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].x)) * _3588.x) / cbSceneParam._m0[78u].x)) + _3336;
        _3413 = (exp2(_3614 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].y)) * _3588.y) / cbSceneParam._m0[78u].y)) + _3337;
        _3415 = (exp2(_3614 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].z)) * _3588.z) / cbSceneParam._m0[78u].z)) + _3338;
        _3417 = _3597 * _3339;
    }
    else
    {
        _3411 = _3336;
        _3413 = _3337;
        _3415 = _3338;
        _3417 = _3339;
    }
    bool _3624;
    vec4 _3427;
    vec4 _3449;
    float _3451;
    float _3455;
    float _3456;
    float _3457;
    float _3458;
    bool _3468;
    for (;;)
    {
        _3427 = cbMatDynParam._m0[0u];
        float _3429 = roundEven(_3427.y);
        bool _3430 = _3429 == 3.0;
        float _3431 = log2(_3417);
        float _3438 = exp2(_3431 * cbSceneParam._m0[78u].x) * _3308;
        float _3439 = exp2(_3431 * cbSceneParam._m0[78u].y) * _3309;
        float _3440 = exp2(_3431 * cbSceneParam._m0[78u].z) * _3310;
        float _3447 = _1135 + (-0.5);
        _3449 = cbMtdParam._m0[1u];
        _3451 = _3449.y * _3447;
        float _3454 = (_3429 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3455 = _3454 * (_3430 ? _3438 : (_3438 + (cbSceneParam._m0[72u].w * _3411)));
        _3456 = _3454 * (_3430 ? _3439 : (_3439 + (cbSceneParam._m0[72u].w * _3413)));
        _3457 = _3454 * (_3430 ? _3440 : (_3440 + (cbSceneParam._m0[72u].w * _3415)));
        _3458 = _3447 * 0.999000012874603271484375;
        _3468 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3468)
        {
            if ((cbInstanceData._m0[_277 + 7u].x + _3458) < 0.5)
            {
                _3624 = true;
                break;
            }
        }
        uint _3565 = _1184 + uint(_3427.w);
        if ((cbInstanceData._m0[_3565].w < 1.0) && ((cbInstanceData._m0[_3565].w + _3458) < 0.5))
        {
            _3624 = true;
            break;
        }
        if ((_3451 + 1.0) < _3449.x)
        {
            _3624 = true;
            break;
        }
        _3624 = false;
        break;
    }
    float _3828;
    if (_3624)
    {
        discard_state = true;
        _3828 = 0.0;
    }
    else
    {
        _3828 = cbInstanceData._m0[_3311].w;
    }
    SV_Target.x = _3455;
    SV_Target.y = _3456;
    SV_Target.z = _3457;
    SV_Target.w = _3828;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3311].w;
    discard_exit();
}


